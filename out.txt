Transpiling D:\SDK stuff\GC1\PyDol\Color-Test\asm\__init_cpp_exceptions.s
Found obj section: __destroy_global_chain_reference at 0x8001A440
Extracted gap section: __destroy_global_chain_reference, 1 lines
Parsed gap data: .4byte __destroy_global_chain
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\__init_cpp_exceptions.c
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\__init_cpp_exceptions.h
Transpiling D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_00_80003100_init.s
Found gap section: gap_00_8000351C_init at 0x8000351C
Extracted gap section: gap_00_8000351C_init, 2003 lines
Parsed gap data at 8000351C: 0x4D657472 (.4byte 0x4D657472 /* invalid */)
Parsed gap data at 80003520: 0x6F776572 (xoris r23, r27, 0x6572)
Parsed gap data at 80003524: 0x6B732054 (xori r19, r27, 0x2054)
Parsed gap data at 80003528: 0x61726765 (ori r18, r11, 0x6765)
Parsed gap data at 8000352C: 0x74205265 (andis. r0, r1, 0x5265)
Parsed gap data at 80003530: 0x73696465 (andi. r9, r27, 0x6465)
Parsed gap data at 80003534: 0x6E74204B (xoris r20, r19, 0x204b)
Parsed gap data at 80003538: 0x65726E65 (oris r18, r11, 0x6e65)
Parsed gap data at 8000353C: 0x6C20666F (xoris r0, r1, 0x666f)
Parsed gap data at 80003540: 0x7220506F (andi. r0, r17, 0x506f)
Parsed gap data at 80003544: 0x77657250 (andis. r5, r27, 0x7250)
Parsed gap label: L_80003548:
Parsed gap data at 80003548: 0x43000000 (.4byte 0x43000000 /* illegal: bc 24, lt, 0x0 */)
Parsed gap data at 8000354C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003550: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003554: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003558: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000355C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003560: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003564: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003568: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000356C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003570: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003574: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003578: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000357C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003580: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003584: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003588: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000358C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003590: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003594: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003598: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000359C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800035FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003600: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003604: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003608: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000360C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003610: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003614: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003618: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000361C: 0x48001E34 (b fn_80005450)
Parsed gap data at 80003620: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003624: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003628: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000362C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003630: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003634: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003638: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000363C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003640: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003644: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003648: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000364C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003650: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003654: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003658: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000365C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003660: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003664: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003668: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000366C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003670: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003674: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003678: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000367C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003680: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003684: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003688: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000368C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003690: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003694: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003698: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000369C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800036FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003700: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003704: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003708: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000370C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003710: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003714: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003718: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000371C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80003720: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 80003724: 0x7C0017AC (icbi r0, r2)
Parsed gap data at 80003728: 0x7C5302A6 (mfdar r2)
Parsed gap data at 8000372C: 0x7C0013AC (dcbi r0, r2)
Parsed gap data at 80003730: 0x7C5142A6 (mfsprg r2, 1)
Parsed gap data at 80003734: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80003738: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 8000373C: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80003740: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 80003744: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80003748: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 8000374C: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80003750: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 80003754: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80003758: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 8000375C: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80003760: 0x38600200 (li r3, 0x200)
Parsed gap data at 80003764: 0x4C000064 (rfi)
Parsed gap data at 80003768: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000376C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003770: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003774: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003778: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000377C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003780: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003784: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003788: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000378C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003790: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003794: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003798: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000379C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800037FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003800: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003804: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003808: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000380C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003810: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003814: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003818: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000381C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80003820: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80003824: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80003828: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 8000382C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80003830: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80003834: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80003838: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 8000383C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80003840: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80003844: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80003848: 0x38600300 (li r3, 0x300)
Parsed gap data at 8000384C: 0x4C000064 (rfi)
Parsed gap data at 80003850: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003854: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003858: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000385C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003860: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003864: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003868: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000386C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003870: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003874: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003878: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000387C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003880: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003884: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003888: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000388C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003890: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003894: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003898: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000389C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800038FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003900: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003904: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003908: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000390C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003910: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003914: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003918: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000391C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80003920: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80003924: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80003928: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 8000392C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80003930: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80003934: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80003938: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 8000393C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80003940: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80003944: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80003948: 0x38600400 (li r3, 0x400)
Parsed gap data at 8000394C: 0x4C000064 (rfi)
Parsed gap data at 80003950: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003954: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003958: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000395C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003960: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003964: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003968: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000396C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003970: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003974: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003978: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000397C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003980: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003984: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003988: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000398C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003990: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003994: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003998: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000399C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800039FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A00: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A04: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A08: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A0C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A10: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A14: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A18: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A1C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80003A20: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80003A24: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80003A28: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 80003A2C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80003A30: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80003A34: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80003A38: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 80003A3C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80003A40: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80003A44: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80003A48: 0x38600500 (li r3, 0x500)
Parsed gap data at 80003A4C: 0x4C000064 (rfi)
Parsed gap data at 80003A50: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A54: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A58: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A5C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A60: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A64: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A68: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A6C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A70: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A74: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A78: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A7C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A80: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A84: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A88: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A8C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A90: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A94: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A98: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003A9C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AA0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AA4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AA8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AAC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AB0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AB4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AB8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003ABC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AC0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AC4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AC8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003ACC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AD0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AD4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AD8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003ADC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AE0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AE4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AE8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AEC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AF0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AF4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AF8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003AFC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B00: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B04: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B08: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B0C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B10: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B14: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B18: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B1C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80003B20: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80003B24: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80003B28: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 80003B2C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80003B30: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80003B34: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80003B38: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 80003B3C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80003B40: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80003B44: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80003B48: 0x38600600 (li r3, 0x600)
Parsed gap data at 80003B4C: 0x4C000064 (rfi)
Parsed gap data at 80003B50: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B54: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B58: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B5C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B60: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B64: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B68: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B6C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B70: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B74: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B78: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B7C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B80: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B84: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B88: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B8C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B90: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B94: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B98: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003B9C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BA0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BA4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BA8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BAC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BB0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BB4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BB8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BBC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BC0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BC4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BC8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BCC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BD0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BD4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BD8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BDC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BE0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BE4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BE8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BEC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BF0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BF4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BF8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003BFC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C00: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C04: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C08: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C0C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C10: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C14: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C18: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C1C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80003C20: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80003C24: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80003C28: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 80003C2C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80003C30: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80003C34: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80003C38: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 80003C3C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80003C40: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80003C44: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80003C48: 0x38600700 (li r3, 0x700)
Parsed gap data at 80003C4C: 0x4C000064 (rfi)
Parsed gap data at 80003C50: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C54: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C58: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C5C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C60: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C64: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C68: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C6C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C70: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C74: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C78: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C7C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C80: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C84: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C88: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C8C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C90: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C94: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C98: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003C9C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CA0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CA4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CA8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CAC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CB0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CB4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CB8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CBC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CC0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CC4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CC8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CCC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CD0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CD4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CD8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CDC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CE0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CE4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CE8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CEC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CF0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CF4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CF8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003CFC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D00: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D04: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D08: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D0C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D10: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D14: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D18: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D1C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80003D20: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80003D24: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80003D28: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 80003D2C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80003D30: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80003D34: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80003D38: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 80003D3C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80003D40: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80003D44: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80003D48: 0x38600800 (li r3, 0x800)
Parsed gap data at 80003D4C: 0x4C000064 (rfi)
Parsed gap data at 80003D50: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D54: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D58: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D5C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D60: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D64: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D68: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D6C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D70: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D74: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D78: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D7C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D80: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D84: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D88: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D8C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D90: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D94: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D98: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003D9C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DA0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DA4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DA8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DAC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DB0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DB4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DB8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DBC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DC0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DC4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DC8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DCC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DD0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DD4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DD8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DDC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DE0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DE4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DE8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DEC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DF0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DF4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DF8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003DFC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E00: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E04: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E08: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E0C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E10: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E14: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E18: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E1C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80003E20: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80003E24: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80003E28: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 80003E2C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80003E30: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80003E34: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80003E38: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 80003E3C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80003E40: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80003E44: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80003E48: 0x38600900 (li r3, 0x900)
Parsed gap data at 80003E4C: 0x4C000064 (rfi)
Parsed gap data at 80003E50: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E54: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E58: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E5C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E60: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E64: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E68: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E6C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E70: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E74: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E78: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E7C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E80: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E84: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E88: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E8C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E90: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E94: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E98: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003E9C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EA0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EA4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EA8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EAC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EB0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EB4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EB8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EBC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EC0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EC4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EC8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003ECC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003ED0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003ED4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003ED8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EDC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EE0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EE4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EE8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EEC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EF0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EF4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EF8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003EFC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F00: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F04: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F08: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F0C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F10: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F14: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F18: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F1C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F20: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F24: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F28: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F2C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F30: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F34: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F38: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F3C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F40: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F44: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F48: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F4C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F50: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F54: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F58: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F5C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F60: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F64: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F68: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F6C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F70: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F74: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F78: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F7C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F80: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F84: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F88: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F8C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F90: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F94: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F98: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003F9C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FA0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FA4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FA8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FAC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FB0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FB4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FB8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FBC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FC0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FC4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FC8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FCC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FD0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FD4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FD8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FDC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FE0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FE4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FE8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FEC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FF0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FF4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FF8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80003FFC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004000: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004004: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004008: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000400C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004010: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004014: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004018: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000401C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004020: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004024: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004028: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000402C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004030: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004034: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004038: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000403C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004040: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004044: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004048: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000404C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004050: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004054: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004058: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000405C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004060: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004064: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004068: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000406C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004070: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004074: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004078: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000407C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004080: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004084: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004088: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000408C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004090: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004094: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004098: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000409C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800040FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004100: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004104: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004108: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000410C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004110: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004114: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004118: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000411C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80004120: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80004124: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80004128: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 8000412C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80004130: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80004134: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80004138: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 8000413C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80004140: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80004144: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80004148: 0x38600C00 (li r3, 0xc00)
Parsed gap data at 8000414C: 0x4C000064 (rfi)
Parsed gap data at 80004150: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004154: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004158: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000415C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004160: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004164: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004168: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000416C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004170: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004174: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004178: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000417C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004180: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004184: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004188: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000418C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004190: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004194: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004198: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000419C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800041FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004200: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004204: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004208: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000420C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004210: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004214: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004218: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000421C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80004220: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80004224: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80004228: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 8000422C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80004230: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80004234: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80004238: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 8000423C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80004240: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80004244: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80004248: 0x38600D00 (li r3, 0xd00)
Parsed gap data at 8000424C: 0x4C000064 (rfi)
Parsed gap data at 80004250: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004254: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004258: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000425C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004260: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004264: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004268: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000426C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004270: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004274: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004278: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000427C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004280: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004284: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004288: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000428C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004290: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004294: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004298: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000429C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800042FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004300: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004304: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004308: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000430C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004310: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004314: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004318: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000431C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80004320: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80004324: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80004328: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 8000432C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80004330: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80004334: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80004338: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 8000433C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80004340: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80004344: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80004348: 0x38600E00 (li r3, 0xe00)
Parsed gap data at 8000434C: 0x4C000064 (rfi)
Parsed gap data at 80004350: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004354: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004358: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000435C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004360: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004364: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004368: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000436C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004370: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004374: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004378: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000437C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004380: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004384: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004388: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000438C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004390: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004394: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004398: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000439C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800043FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004400: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004404: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004408: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000440C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004410: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004414: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004418: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000441C: 0x48000054 (b .L_80004470)
Parsed gap data at 80004420: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004424: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004428: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000442C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004430: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004434: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004438: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000443C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80004440: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80004444: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80004448: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 8000444C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80004450: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80004454: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80004458: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 8000445C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80004460: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80004464: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80004468: 0x38600F20 (li r3, 0xf20)
Parsed gap data at 8000446C: 0x4C000064 (rfi)
Parsed gap label: L_80004470:
Parsed gap data at 80004470: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80004474: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80004478: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 8000447C: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 80004480: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80004484: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80004488: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 8000448C: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 80004490: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80004494: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80004498: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 8000449C: 0x38600F00 (li r3, 0xf00)
Parsed gap data at 800044A0: 0x4C000064 (rfi)
Parsed gap data at 800044A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800044FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004500: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004504: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004508: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000450C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004510: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004514: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004518: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000451C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80004520: 0x7C400026 (mfcr r2)
Parsed gap data at 80004524: 0x7C5243A6 (mtsprg 2, r2)
Parsed gap data at 80004528: 0x7C4000A6 (mfmsr r2)
Parsed gap data at 8000452C: 0x74420002 (andis. r2, r2, 0x2)
Parsed gap data at 80004530: 0x4182001C (beq .L_8000454C)
Parsed gap data at 80004534: 0x7C4000A6 (mfmsr r2)
Parsed gap data at 80004538: 0x6C420002 (xoris r2, r2, 0x2)
Parsed gap data at 8000453C: 0x7C0004AC (sync)
Parsed gap data at 80004540: 0x7C400124 (mtmsr r2)
Parsed gap data at 80004544: 0x7C0004AC (sync)
Parsed gap data at 80004548: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap label: L_8000454C:
Parsed gap data at 8000454C: 0x7C5242A6 (mfsprg r2, 2)
Parsed gap data at 80004550: 0x7C4FF120 (mtcrf 255, r2)
Parsed gap data at 80004554: 0x7C5142A6 (mfsprg r2, 1)
Parsed gap data at 80004558: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 8000455C: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80004560: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80004564: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 80004568: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 8000456C: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80004570: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80004574: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 80004578: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 8000457C: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80004580: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80004584: 0x38601000 (li r3, 0x1000)
Parsed gap data at 80004588: 0x4C000064 (rfi)
Parsed gap data at 8000458C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004590: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004594: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004598: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000459C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800045FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004600: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004604: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004608: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000460C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004610: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004614: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004618: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000461C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80004620: 0x7C400026 (mfcr r2)
Parsed gap data at 80004624: 0x7C5243A6 (mtsprg 2, r2)
Parsed gap data at 80004628: 0x7C4000A6 (mfmsr r2)
Parsed gap data at 8000462C: 0x74420002 (andis. r2, r2, 0x2)
Parsed gap data at 80004630: 0x4182001C (beq .L_8000464C)
Parsed gap data at 80004634: 0x7C4000A6 (mfmsr r2)
Parsed gap data at 80004638: 0x6C420002 (xoris r2, r2, 0x2)
Parsed gap data at 8000463C: 0x7C0004AC (sync)
Parsed gap data at 80004640: 0x7C400124 (mtmsr r2)
Parsed gap data at 80004644: 0x7C0004AC (sync)
Parsed gap data at 80004648: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap label: L_8000464C:
Parsed gap data at 8000464C: 0x7C5242A6 (mfsprg r2, 2)
Parsed gap data at 80004650: 0x7C4FF120 (mtcrf 255, r2)
Parsed gap data at 80004654: 0x7C5142A6 (mfsprg r2, 1)
Parsed gap data at 80004658: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 8000465C: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80004660: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80004664: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 80004668: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 8000466C: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80004670: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80004674: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 80004678: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 8000467C: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80004680: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80004684: 0x38601100 (li r3, 0x1100)
Parsed gap data at 80004688: 0x4C000064 (rfi)
Parsed gap data at 8000468C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004690: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004694: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004698: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000469C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800046FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004700: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004704: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004708: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000470C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004710: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004714: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004718: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000471C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80004720: 0x7C400026 (mfcr r2)
Parsed gap data at 80004724: 0x7C5243A6 (mtsprg 2, r2)
Parsed gap data at 80004728: 0x7C4000A6 (mfmsr r2)
Parsed gap data at 8000472C: 0x74420002 (andis. r2, r2, 0x2)
Parsed gap data at 80004730: 0x4182001C (beq .L_8000474C)
Parsed gap data at 80004734: 0x7C4000A6 (mfmsr r2)
Parsed gap data at 80004738: 0x6C420002 (xoris r2, r2, 0x2)
Parsed gap data at 8000473C: 0x7C0004AC (sync)
Parsed gap data at 80004740: 0x7C400124 (mtmsr r2)
Parsed gap data at 80004744: 0x7C0004AC (sync)
Parsed gap data at 80004748: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap label: L_8000474C:
Parsed gap data at 8000474C: 0x7C5242A6 (mfsprg r2, 2)
Parsed gap data at 80004750: 0x7C4FF120 (mtcrf 255, r2)
Parsed gap data at 80004754: 0x7C5142A6 (mfsprg r2, 1)
Parsed gap data at 80004758: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 8000475C: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80004760: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80004764: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 80004768: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 8000476C: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80004770: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80004774: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 80004778: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 8000477C: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80004780: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80004784: 0x38601200 (li r3, 0x1200)
Parsed gap data at 80004788: 0x4C000064 (rfi)
Parsed gap data at 8000478C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004790: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004794: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004798: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000479C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800047FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004800: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004804: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004808: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000480C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004810: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004814: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004818: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000481C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80004820: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80004824: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80004828: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 8000482C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80004830: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80004834: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80004838: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 8000483C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80004840: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80004844: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80004848: 0x38601300 (li r3, 0x1300)
Parsed gap data at 8000484C: 0x4C000064 (rfi)
Parsed gap data at 80004850: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004854: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004858: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000485C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004860: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004864: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004868: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000486C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004870: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004874: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004878: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000487C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004880: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004884: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004888: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000488C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004890: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004894: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004898: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000489C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800048FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004900: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004904: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004908: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000490C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004910: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004914: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004918: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000491C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80004920: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80004924: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80004928: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 8000492C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80004930: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80004934: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80004938: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 8000493C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80004940: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80004944: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80004948: 0x38601400 (li r3, 0x1400)
Parsed gap data at 8000494C: 0x4C000064 (rfi)
Parsed gap data at 80004950: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004954: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004958: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000495C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004960: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004964: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004968: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000496C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004970: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004974: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004978: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000497C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004980: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004984: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004988: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000498C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004990: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004994: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004998: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000499C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800049FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A00: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A04: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A08: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A0C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A10: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A14: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A18: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A1C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A20: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A24: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A28: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A2C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A30: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A34: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A38: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A3C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A40: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A44: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A48: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A4C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A50: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A54: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A58: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A5C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A60: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A64: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A68: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A6C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A70: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A74: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A78: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A7C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A80: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A84: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A88: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A8C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A90: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A94: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A98: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004A9C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AA0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AA4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AA8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AAC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AB0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AB4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AB8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004ABC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AC0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AC4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AC8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004ACC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AD0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AD4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AD8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004ADC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AE0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AE4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AE8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AEC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AF0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AF4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AF8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004AFC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B00: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B04: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B08: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B0C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B10: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B14: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B18: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B1C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80004B20: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80004B24: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80004B28: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 80004B2C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80004B30: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80004B34: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80004B38: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 80004B3C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80004B40: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80004B44: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80004B48: 0x38601600 (li r3, 0x1600)
Parsed gap data at 80004B4C: 0x4C000064 (rfi)
Parsed gap data at 80004B50: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B54: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B58: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B5C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B60: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B64: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B68: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B6C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B70: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B74: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B78: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B7C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B80: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B84: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B88: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B8C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B90: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B94: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B98: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004B9C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BA0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BA4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BA8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BAC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BB0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BB4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BB8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BBC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BC0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BC4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BC8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BCC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BD0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BD4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BD8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BDC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BE0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BE4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BE8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BEC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BF0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BF4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BF8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004BFC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C00: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C04: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C08: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C0C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C10: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C14: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C18: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C1C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80004C20: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80004C24: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80004C28: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 80004C2C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80004C30: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80004C34: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80004C38: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 80004C3C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80004C40: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80004C44: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80004C48: 0x38601700 (li r3, 0x1700)
Parsed gap data at 80004C4C: 0x4C000064 (rfi)
Parsed gap data at 80004C50: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C54: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C58: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C5C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C60: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C64: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C68: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C6C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C70: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C74: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C78: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C7C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C80: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C84: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C88: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C8C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C90: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C94: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C98: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004C9C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CA0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CA4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CA8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CAC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CB0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CB4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CB8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CBC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CC0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CC4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CC8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CCC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CD0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CD4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CD8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CDC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CE0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CE4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CE8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CEC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CF0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CF4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CF8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004CFC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D00: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D04: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D08: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D0C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D10: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D14: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D18: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D1C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D20: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D24: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D28: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D2C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D30: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D34: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D38: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D3C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D40: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D44: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D48: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D4C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D50: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D54: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D58: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D5C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D60: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D64: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D68: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D6C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D70: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D74: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D78: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D7C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D80: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D84: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D88: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D8C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D90: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D94: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D98: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004D9C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DA0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DA4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DA8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DAC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DB0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DB4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DB8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DBC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DC0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DC4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DC8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DCC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DD0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DD4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DD8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DDC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DE0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DE4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DE8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DEC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DF0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DF4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DF8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004DFC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E00: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E04: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E08: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E0C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E10: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E14: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E18: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E1C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E20: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E24: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E28: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E2C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E30: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E34: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E38: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E3C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E40: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E44: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E48: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E4C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E50: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E54: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E58: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E5C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E60: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E64: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E68: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E6C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E70: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E74: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E78: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E7C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E80: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E84: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E88: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E8C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E90: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E94: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E98: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004E9C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EA0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EA4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EA8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EAC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EB0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EB4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EB8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EBC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EC0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EC4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EC8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004ECC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004ED0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004ED4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004ED8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EDC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EE0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EE4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EE8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EEC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EF0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EF4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EF8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004EFC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F00: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F04: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F08: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F0C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F10: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F14: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F18: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F1C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F20: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F24: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F28: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F2C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F30: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F34: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F38: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F3C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F40: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F44: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F48: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F4C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F50: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F54: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F58: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F5C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F60: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F64: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F68: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F6C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F70: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F74: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F78: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F7C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F80: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F84: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F88: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F8C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F90: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F94: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F98: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004F9C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FA0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FA4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FA8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FAC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FB0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FB4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FB8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FBC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FC0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FC4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FC8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FCC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FD0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FD4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FD8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FDC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FE0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FE4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FE8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FEC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FF0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FF4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FF8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80004FFC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005000: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005004: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005008: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000500C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005010: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005014: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005018: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000501C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005020: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005024: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005028: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000502C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005030: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005034: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005038: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000503C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005040: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005044: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005048: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000504C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005050: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005054: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005058: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000505C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005060: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005064: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005068: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000506C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005070: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005074: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005078: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000507C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005080: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005084: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005088: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000508C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005090: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005094: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005098: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000509C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800050FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005100: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005104: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005108: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000510C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005110: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005114: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005118: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000511C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80005120: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80005124: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80005128: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 8000512C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80005130: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80005134: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80005138: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 8000513C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80005140: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80005144: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80005148: 0x38601C00 (li r3, 0x1c00)
Parsed gap data at 8000514C: 0x4C000064 (rfi)
Parsed gap data at 80005150: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005154: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005158: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000515C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005160: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005164: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005168: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000516C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005170: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005174: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005178: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000517C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005180: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005184: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005188: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000518C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005190: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005194: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005198: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000519C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800051FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005200: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005204: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005208: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000520C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005210: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005214: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005218: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000521C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80005220: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80005224: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80005228: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 8000522C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80005230: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80005234: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80005238: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 8000523C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80005240: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80005244: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80005248: 0x38601D00 (li r3, 0x1d00)
Parsed gap data at 8000524C: 0x4C000064 (rfi)
Parsed gap data at 80005250: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005254: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005258: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000525C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005260: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005264: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005268: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000526C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005270: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005274: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005278: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000527C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005280: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005284: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005288: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000528C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005290: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005294: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005298: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000529C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800052FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005300: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005304: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005308: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000530C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005310: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005314: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005318: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000531C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80005320: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80005324: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80005328: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 8000532C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80005330: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80005334: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80005338: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 8000533C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80005340: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80005344: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80005348: 0x38601E00 (li r3, 0x1e00)
Parsed gap data at 8000534C: 0x4C000064 (rfi)
Parsed gap data at 80005350: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005354: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005358: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000535C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005360: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005364: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005368: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000536C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005370: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005374: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005378: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000537C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005380: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005384: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005388: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000538C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005390: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005394: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005398: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000539C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053A0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053A4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053A8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053AC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053B0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053B4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053B8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053BC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053C0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053C4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053C8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053CC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053D0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053D4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053D8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053DC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053E0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053E4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053E8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053EC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053F0: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053F4: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053F8: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 800053FC: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005400: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005404: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005408: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000540C: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005410: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005414: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 80005418: 0x00000000 (.4byte 0x00000000 /* invalid */)
Parsed gap data at 8000541C: 0x7C5143A6 (mtsprg 1, r2)
Parsed gap data at 80005420: 0x7C7243A6 (mtsprg 2, r3)
Parsed gap data at 80005424: 0x7C9343A6 (mtsprg 3, r4)
Parsed gap data at 80005428: 0x7C5A02A6 (mfsrr0 r2)
Parsed gap data at 8000542C: 0x7C9B02A6 (mfsrr1 r4)
Parsed gap data at 80005430: 0x7C6000A6 (mfmsr r3)
Parsed gap data at 80005434: 0x60630030 (ori r3, r3, 0x30)
Parsed gap data at 80005438: 0x7C7B03A6 (mtsrr1 r3)
Parsed gap data at 8000543C: 0x3C608001 (lis r3, 0x8001)
Parsed gap data at 80005440: 0x606375A8 (ori r3, r3, 0x75a8)
Parsed gap data at 80005444: 0x7C7A03A6 (mtsrr0 r3)
Parsed gap data at 80005448: 0x38601F00 (li r3, 0x1f00)
Parsed gap data at 8000544C: 0x4C000064 (rfi)
Parsed function: __check_pad3 at 0x80003100
Parsed instruction at 80003100: mflr r0
Parsed instruction at 80003104: lis r3 0x8000
Parsed instruction at 80003108: stw r0 0x4(r1)
Parsed instruction at 8000310C: stwu r1 -0x8(r1)
Parsed instruction at 80003110: lhz r0 0x30e4(r3)
Parsed instruction at 80003114: andi. r0 r0 0xeef
Parsed instruction at 80003118: cmpwi r0 0xeef
Parsed instruction at 8000311C: bne .L_80003130
Parsed instruction at 80003120: li r3 0x0
Parsed instruction at 80003124: li r4 0x0
Parsed instruction at 80003128: li r5 0x0
Parsed instruction at 8000312C: bl OSResetSystem
Parsed label: L_80003130:
Parsed instruction at 80003130: lwz r0 0xc(r1)
Parsed instruction at 80003134: addi r1 r1 0x8
Parsed instruction at 80003138: mtlr r0
Parsed instruction at 8000313C: blr 
End of function: __check_pad3, 17 instructions
Parsed function: __start at 0x80003140
Parsed instruction at 80003140: bl __init_registers
Parsed instruction at 80003144: bl __init_hardware
Parsed instruction at 80003148: li r0 -0x1
Parsed instruction at 8000314C: stwu r1 -0x8(r1)
Parsed instruction at 80003150: stw r0 0x4(r1)
Parsed instruction at 80003154: stw r0 0x0(r1)
Parsed instruction at 80003158: bl __init_data
Parsed instruction at 8000315C: li r0 0x0
Parsed instruction at 80003160: lis r6 0x8000
Parsed instruction at 80003164: addi r6 r6 0x44
Parsed instruction at 80003168: stw r0 0x0(r6)
Parsed instruction at 8000316C: lis r6 0x8000
Parsed instruction at 80003170: addi r6 r6 0xf4
Parsed instruction at 80003174: lwz r6 0x0(r6)
Parsed instruction at 80003178: cmplwi r6 0x0
Parsed instruction at 8000317C: beq .L_800031AC
Parsed instruction at 80003180: lwz r7 0xc(r6)
Parsed instruction at 80003184: li r5 0x0
Parsed instruction at 80003188: cmplwi r7 0x2
Parsed instruction at 8000318C: beq .L_8000319C
Parsed instruction at 80003190: cmplwi r7 0x3
Parsed instruction at 80003194: bne .L_800031AC
Parsed instruction at 80003198: li r5 0x1
Parsed label: L_8000319C:
Parsed instruction at 8000319C: lis r6 InitMetroTRK@ha
Parsed instruction at 800031A0: addi r6 r6 InitMetroTRK@l
Parsed instruction at 800031A4: mtlr r6
Parsed instruction at 800031A8: blrl 
Parsed label: L_800031AC:
Parsed instruction at 800031AC: lis r6 0x8000
Parsed instruction at 800031B0: addi r6 r6 0xf4
Parsed instruction at 800031B4: lwz r5 0x0(r6)
Parsed instruction at 800031B8: cmplwi r5 0x0
Parsed instruction at 800031BC: beq+ .L_8000320C
Parsed instruction at 800031C0: lwz r6 0x8(r5)
Parsed instruction at 800031C4: cmplwi r6 0x0
Parsed instruction at 800031C8: beq+ .L_8000320C
Parsed instruction at 800031CC: add r6 r5 r6
Parsed instruction at 800031D0: lwz r14 0x0(r6)
Parsed instruction at 800031D4: cmplwi r14 0x0
Parsed instruction at 800031D8: beq .L_8000320C
Parsed instruction at 800031DC: addi r15 r6 0x4
Parsed instruction at 800031E0: mtctr r14
Parsed label: L_800031E4:
Parsed instruction at 800031E4: addi r6 r6 0x4
Parsed instruction at 800031E8: lwz r7 0x0(r6)
Parsed instruction at 800031EC: add r7 r7 r5
Parsed instruction at 800031F0: stw r7 0x0(r6)
Parsed instruction at 800031F4: bdnz .L_800031E4
Parsed instruction at 800031F8: lis r5 0x8000
Parsed instruction at 800031FC: addi r5 r5 0x34
Parsed instruction at 80003200: clrrwi r7 r15 5
Parsed instruction at 80003204: stw r7 0x0(r5)
Parsed instruction at 80003208: b .L_80003214
Parsed label: L_8000320C:
Parsed instruction at 8000320C: li r14 0x0
Parsed instruction at 80003210: li r15 0x0
Parsed label: L_80003214:
Parsed instruction at 80003214: bl DBInit
Parsed instruction at 80003218: bl OSInit
Parsed instruction at 8000321C: lis r4 0x8000
Parsed instruction at 80003220: addi r4 r4 0x30e6
Parsed instruction at 80003224: lhz r3 0x0(r4)
Parsed instruction at 80003228: andi. r5 r3 0x8000
Parsed instruction at 8000322C: beq .L_8000323C
Parsed instruction at 80003230: andi. r3 r3 0x7fff
Parsed instruction at 80003234: cmplwi r3 0x1
Parsed instruction at 80003238: bne .L_80003240
Parsed label: L_8000323C:
Parsed instruction at 8000323C: bl __check_pad3
Parsed label: L_80003240:
Parsed instruction at 80003240: bl __init_user
Parsed instruction at 80003244: mr r3 r14
Parsed instruction at 80003248: mr r4 r15
Parsed instruction at 8000324C: bl main
Parsed instruction at 80003250: b exit
End of function: __start, 76 instructions
Parsed function: __init_registers at 0x80003254
Parsed instruction at 80003254: lis r1 _stack_addr@h
Parsed instruction at 80003258: ori r1 r1 _stack_addr@l
Parsed instruction at 8000325C: lis r2 _SDA2_BASE_@h
Parsed instruction at 80003260: ori r2 r2 _SDA2_BASE_@l
Parsed instruction at 80003264: lis r13 _SDA_BASE_@h
Parsed instruction at 80003268: ori r13 r13 _SDA_BASE_@l
Parsed instruction at 8000326C: blr 
End of function: __init_registers, 7 instructions
Parsed function: __init_data at 0x80003270
Parsed instruction at 80003270: mflr r0
Parsed instruction at 80003274: stw r0 0x4(r1)
Parsed instruction at 80003278: stwu r1 -0x18(r1)
Parsed instruction at 8000327C: stw r31 0x14(r1)
Parsed instruction at 80003280: stw r30 0x10(r1)
Parsed instruction at 80003284: stw r29 0xc(r1)
Parsed instruction at 80003288: lis r3 _rom_copy_info@ha
Parsed instruction at 8000328C: addi r0 r3 _rom_copy_info@l
Parsed instruction at 80003290: mr r29 r0
Parsed instruction at 80003294: b .L_80003298
Parsed label: L_80003298:
Parsed instruction at 80003298: b .L_8000329C
Parsed label: L_8000329C:
Parsed instruction at 8000329C: lwz r30 0x8(r29)
Parsed instruction at 800032A0: cmplwi r30 0x0
Parsed instruction at 800032A4: beq .L_800032DC
Parsed instruction at 800032A8: lwz r4 0x0(r29)
Parsed instruction at 800032AC: lwz r31 0x4(r29)
Parsed instruction at 800032B0: beq .L_800032D4
Parsed instruction at 800032B4: cmplw r31 r4
Parsed instruction at 800032B8: beq .L_800032D4
Parsed instruction at 800032BC: mr r3 r31
Parsed instruction at 800032C0: mr r5 r30
Parsed instruction at 800032C4: bl memcpy
Parsed instruction at 800032C8: mr r3 r31
Parsed instruction at 800032CC: mr r4 r30
Parsed instruction at 800032D0: bl __flush_cache
Parsed label: L_800032D4:
Parsed instruction at 800032D4: addi r29 r29 0xc
Parsed instruction at 800032D8: b .L_8000329C
Parsed label: L_800032DC:
Parsed instruction at 800032DC: lis r3 _bss_init_info@ha
Parsed instruction at 800032E0: addi r0 r3 _bss_init_info@l
Parsed instruction at 800032E4: mr r29 r0
Parsed instruction at 800032E8: b .L_800032EC
Parsed label: L_800032EC:
Parsed instruction at 800032EC: b .L_800032F0
Parsed label: L_800032F0:
Parsed instruction at 800032F0: lwz r5 0x4(r29)
Parsed instruction at 800032F4: cmplwi r5 0x0
Parsed instruction at 800032F8: beq .L_80003314
Parsed instruction at 800032FC: lwz r3 0x0(r29)
Parsed instruction at 80003300: beq .L_8000330C
Parsed instruction at 80003304: li r4 0x0
Parsed instruction at 80003308: bl memset
Parsed label: L_8000330C:
Parsed instruction at 8000330C: addi r29 r29 0x8
Parsed instruction at 80003310: b .L_800032F0
Parsed label: L_80003314:
Parsed instruction at 80003314: lwz r0 0x1c(r1)
Parsed instruction at 80003318: lwz r31 0x14(r1)
Parsed instruction at 8000331C: lwz r30 0x10(r1)
Parsed instruction at 80003320: lwz r29 0xc(r1)
Parsed instruction at 80003324: addi r1 r1 0x18
Parsed instruction at 80003328: mtlr r0
Parsed instruction at 8000332C: blr 
End of function: __init_data, 56 instructions
Parsed function: __init_hardware at 0x80003330
Parsed instruction at 80003330: mfmsr r0
Parsed instruction at 80003334: ori r0 r0 0x2000
Parsed instruction at 80003338: mtmsr r0
Parsed instruction at 8000333C: mflr r31
Parsed instruction at 80003340: bl __OSPSInit
Parsed instruction at 80003344: bl __OSCacheInit
Parsed instruction at 80003348: mtlr r31
Parsed instruction at 8000334C: blr 
End of function: __init_hardware, 8 instructions
Parsed function: __flush_cache at 0x80003350
Parsed instruction at 80003350: lis r5 0xffff
Parsed instruction at 80003354: ori r5 r5 0xfff1
Parsed instruction at 80003358: and r5 r5 r3
Parsed instruction at 8000335C: subf r3 r5 r3
Parsed instruction at 80003360: add r4 r4 r3
Parsed label: L_80003364:
Parsed instruction at 80003364: dcbst r0 r5
Parsed instruction at 80003368: sync 
Parsed instruction at 8000336C: icbi r0 r5
Parsed instruction at 80003370: addic r5 r5 0x8
Parsed instruction at 80003374: subic. r4 r4 0x8
Parsed instruction at 80003378: bge .L_80003364
Parsed instruction at 8000337C: isync 
Parsed instruction at 80003380: blr 
End of function: __flush_cache, 14 instructions
Parsed function: memset at 0x80003384
Parsed instruction at 80003384: mflr r0
Parsed instruction at 80003388: stw r0 0x4(r1)
Parsed instruction at 8000338C: stwu r1 -0x20(r1)
Parsed instruction at 80003390: stw r31 0x1c(r1)
Parsed instruction at 80003394: mr r31 r3
Parsed instruction at 80003398: bl __fill_mem
Parsed instruction at 8000339C: lwz r0 0x24(r1)
Parsed instruction at 800033A0: mr r3 r31
Parsed instruction at 800033A4: lwz r31 0x1c(r1)
Parsed instruction at 800033A8: addi r1 r1 0x20
Parsed instruction at 800033AC: mtlr r0
Parsed instruction at 800033B0: blr 
End of function: memset, 12 instructions
Parsed function: __fill_mem at 0x800033B4
Parsed instruction at 800033B4: cmplwi r5 0x20
Parsed instruction at 800033B8: clrlwi r0 r4 24
Parsed instruction at 800033BC: mr r7 r0
Parsed instruction at 800033C0: subi r6 r3 0x1
Parsed instruction at 800033C4: blt .L_8000345C
Parsed instruction at 800033C8: nor r0 r6 r6
Parsed instruction at 800033CC: clrlwi. r0 r0 30
Parsed instruction at 800033D0: mr r3 r0
Parsed instruction at 800033D4: beq .L_800033EC
Parsed instruction at 800033D8: subf r5 r3 r5
Parsed instruction at 800033DC: clrlwi r0 r7 24
Parsed label: L_800033E0:
Parsed instruction at 800033E0: subic. r3 r3 0x1
Parsed instruction at 800033E4: stbu r0 0x1(r6)
Parsed instruction at 800033E8: bne .L_800033E0
Parsed label: L_800033EC:
Parsed instruction at 800033EC: cmplwi r7 0x0
Parsed instruction at 800033F0: beq .L_8000340C
Parsed instruction at 800033F4: slwi r3 r7 24
Parsed instruction at 800033F8: slwi r0 r7 16
Parsed instruction at 800033FC: slwi r4 r7 8
Parsed instruction at 80003400: or r0 r3 r0
Parsed instruction at 80003404: or r0 r4 r0
Parsed instruction at 80003408: or r7 r7 r0
Parsed label: L_8000340C:
Parsed instruction at 8000340C: srwi. r0 r5 5
Parsed instruction at 80003410: subi r3 r6 0x3
Parsed instruction at 80003414: beq .L_80003440
Parsed label: L_80003418:
Parsed instruction at 80003418: stw r7 0x4(r3)
Parsed instruction at 8000341C: subic. r0 r0 0x1
Parsed instruction at 80003420: stw r7 0x8(r3)
Parsed instruction at 80003424: stw r7 0xc(r3)
Parsed instruction at 80003428: stw r7 0x10(r3)
Parsed instruction at 8000342C: stw r7 0x14(r3)
Parsed instruction at 80003430: stw r7 0x18(r3)
Parsed instruction at 80003434: stw r7 0x1c(r3)
Parsed instruction at 80003438: stwu r7 0x20(r3)
Parsed instruction at 8000343C: bne .L_80003418
Parsed label: L_80003440:
Parsed instruction at 80003440: extrwi. r0 r5 3 27
Parsed instruction at 80003444: beq .L_80003454
Parsed label: L_80003448:
Parsed instruction at 80003448: subic. r0 r0 0x1
Parsed instruction at 8000344C: stwu r7 0x4(r3)
Parsed instruction at 80003450: bne .L_80003448
Parsed label: L_80003454:
Parsed instruction at 80003454: addi r6 r3 0x3
Parsed instruction at 80003458: clrlwi r5 r5 30
Parsed label: L_8000345C:
Parsed instruction at 8000345C: cmplwi r5 0x0
Parsed instruction at 80003460: beqlr 
Parsed instruction at 80003464: clrlwi r0 r7 24
Parsed label: L_80003468:
Parsed instruction at 80003468: subic. r5 r5 0x1
Parsed instruction at 8000346C: stbu r0 0x1(r6)
Parsed instruction at 80003470: bne .L_80003468
Parsed instruction at 80003474: blr 
End of function: __fill_mem, 58 instructions
Parsed function: memcpy at 0x80003478
Parsed instruction at 80003478: cmplw r4 r3
Parsed instruction at 8000347C: blt .L_800034A4
Parsed instruction at 80003480: subi r4 r4 0x1
Parsed instruction at 80003484: subi r6 r3 0x1
Parsed instruction at 80003488: addi r5 r5 0x1
Parsed instruction at 8000348C: b .L_80003498
Parsed label: L_80003490:
Parsed instruction at 80003490: lbzu r0 0x1(r4)
Parsed instruction at 80003494: stbu r0 0x1(r6)
Parsed label: L_80003498:
Parsed instruction at 80003498: subic. r5 r5 0x1
Parsed instruction at 8000349C: bne .L_80003490
Parsed instruction at 800034A0: blr 
Parsed label: L_800034A4:
Parsed instruction at 800034A4: add r4 r4 r5
Parsed instruction at 800034A8: add r6 r3 r5
Parsed instruction at 800034AC: addi r5 r5 0x1
Parsed instruction at 800034B0: b .L_800034BC
Parsed label: L_800034B4:
Parsed instruction at 800034B4: lbzu r0 -0x1(r4)
Parsed instruction at 800034B8: stbu r0 -0x1(r6)
Parsed label: L_800034BC:
Parsed instruction at 800034BC: subic. r5 r5 0x1
Parsed instruction at 800034C0: bne .L_800034B4
Parsed instruction at 800034C4: blr 
End of function: memcpy, 25 instructions
Parsed function: fn_800034C8 at 0x800034C8
Parsed instruction at 800034C8: subi r4 r4 0x1
Parsed instruction at 800034CC: subi r6 r3 0x1
Parsed instruction at 800034D0: addi r5 r5 0x1
Parsed instruction at 800034D4: b .L_800034E0
Parsed label: L_800034D8:
Parsed instruction at 800034D8: lbzu r0 0x1(r4)
Parsed instruction at 800034DC: stbu r0 0x1(r6)
Parsed label: L_800034E0:
Parsed instruction at 800034E0: subic. r5 r5 0x1
Parsed instruction at 800034E4: bne .L_800034D8
Parsed instruction at 800034E8: blr 
End of function: fn_800034C8, 11 instructions
Parsed function: fn_800034EC at 0x800034EC
Parsed instruction at 800034EC: mflr r0
Parsed instruction at 800034F0: stw r0 0x4(r1)
Parsed instruction at 800034F4: stwu r1 -0x10(r1)
Parsed instruction at 800034F8: stw r31 0xc(r1)
Parsed instruction at 800034FC: mr r31 r3
Parsed instruction at 80003500: bl fn_80016B44
Parsed instruction at 80003504: mr r3 r31
Parsed instruction at 80003508: lwz r31 0xc(r1)
Parsed instruction at 8000350C: addi r1 r1 0x10
Parsed instruction at 80003510: lwz r0 0x4(r1)
Parsed instruction at 80003514: mtlr r0
Parsed instruction at 80003518: blr 
End of function: fn_800034EC, 12 instructions
Parsed function: fn_80005450 at 0x80005450
Warning: Unrecognized line: .sym gTRKInterruptVectorTableEnd, global
Parsed instruction at 80005450: mflr r0
Parsed instruction at 80005454: stw r0 0x4(r1)
Parsed instruction at 80005458: stwu r1 -0x8(r1)
Parsed instruction at 8000545C: bl fn_80018340
Parsed instruction at 80005460: addi r1 r1 0x8
Parsed instruction at 80005464: lwz r0 0x4(r1)
Parsed instruction at 80005468: mtlr r0
Parsed instruction at 8000546C: blr 
End of function: fn_80005450, 8 instructions
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: lhz, operands: ['r0', '0x30e4(r3)']
Translated lhz r0 0x30e4(r3) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x30e4); // lhz r0, 0x30e4(r3)']
Translated andi. r0 r0 0xeef to: gc_env.r[0] = gc_env.r[0] & 0xeef;
Translated cmpwi r0 0xeef to: gc_env.cr[0] = (gc_env.r[0] == 0xeef) ? 0 : (gc_env.r[0] < 0xeef ? -1 : 1); // Compare with immediate
Translated bne .L_80003130 to: if (gc_env.cr[0] != 0) goto L_80003130;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl OSResetSystem to: OSResetSystem();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated bl __init_registers to: __init_registers();
Translated bl __init_hardware to: __init_hardware();
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stw, operands: ['r0', '0x0(r1)']
Translated stw r0 0x0(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1], gc_env.r[0]); // stw r0, (r1)']
Translated bl __init_data to: __init_data();
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated lis r6 0x8000 to: ['gc_env.r[6] = -32768 << 16; // lis r6, 0x8000']
Processing opcode: addi, operands: ['r6', 'r6', '0x44']
Translated addi r6 r6 0x44 to: ['gc_env.r[6] += 68; // addi r6, r6, 0x44']
Processing opcode: stw, operands: ['r0', '0x0(r6)']
Translated stw r0 0x0(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6], gc_env.r[0]); // stw r0, (r6)']
Translated lis r6 0x8000 to: ['gc_env.r[6] = -32768 << 16; // lis r6, 0x8000']
Processing opcode: addi, operands: ['r6', 'r6', '0xf4']
Translated addi r6 r6 0xf4 to: ['gc_env.r[6] += 244; // addi r6, r6, 0xf4']
Processing opcode: lwz, operands: ['r6', '0x0(r6)']
Translated lwz r6 0x0(r6) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r6, (r6)']
Translated cmplwi r6 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[6] == 0x0) ? 0 : ((uint32_t)gc_env.r[6] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800031AC to: if (gc_env.cr[0] == 0) goto L_800031AC;
Processing opcode: lwz, operands: ['r7', '0xc(r6)']
Translated lwz r7 0xc(r6) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0xC); // lwz r7, 0xC(r6)']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated cmplwi r7 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[7] == 0x2) ? 0 : ((uint32_t)gc_env.r[7] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000319C to: if (gc_env.cr[0] == 0) goto L_8000319C;
Translated cmplwi r7 0x3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[7] == 0x3) ? 0 : ((uint32_t)gc_env.r[7] < 0x3 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800031AC to: if (gc_env.cr[0] != 0) goto L_800031AC;
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Translated lis r6 InitMetroTRK@ha to: ['gc_env.r[6] = ((uint32_t)&InitMetroTRK >> 16) & 0xFFFF; // lis r6, InitMetroTRK@ha']
Processing opcode: addi, operands: ['r6', 'r6', 'InitMetroTRK@l']
Translated addi r6 r6 InitMetroTRK@l to: ['gc_env.r[6] = (uint32_t)&InitMetroTRK; // lis + addi InitMetroTRK (completing pattern)']
Translated mtlr r6 to: gc_env.lr = gc_env.r[6]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated lis r6 0x8000 to: ['gc_env.r[6] = -32768 << 16; // lis r6, 0x8000']
Processing opcode: addi, operands: ['r6', 'r6', '0xf4']
Translated addi r6 r6 0xf4 to: ['gc_env.r[6] += 244; // addi r6, r6, 0xf4']
Processing opcode: lwz, operands: ['r5', '0x0(r6)']
Translated lwz r5 0x0(r6) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r5, (r6)']
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq+ .L_8000320C to: if (gc_env.cr[0] == 0) goto L_8000320C;
Processing opcode: lwz, operands: ['r6', '0x8(r5)']
Translated lwz r6 0x8(r5) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x8); // lwz r6, 0x8(r5)']
Translated cmplwi r6 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[6] == 0x0) ? 0 : ((uint32_t)gc_env.r[6] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq+ .L_8000320C to: if (gc_env.cr[0] == 0) goto L_8000320C;
Processing opcode: add, operands: ['r6', 'r5', 'r6']
Translated add r6 r5 r6 to: ['gc_env.r[6] = gc_env.r[5] + gc_env.r[6]; // add r6, r5, r6']
Processing opcode: lwz, operands: ['r14', '0x0(r6)']
Translated lwz r14 0x0(r6) to: ['gc_env.r[14] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r14, (r6)']
Translated cmplwi r14 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[14] == 0x0) ? 0 : ((uint32_t)gc_env.r[14] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000320C to: if (gc_env.cr[0] == 0) goto L_8000320C;
Processing opcode: addi, operands: ['r15', 'r6', '0x4']
Translated addi r15 r6 0x4 to: ['gc_env.r[15] = gc_env.r[6] + 4; // addi r15, r6, 0x4']
Translated mtctr r14 to: gc_env.ctr = gc_env.r[14]; // Move to count register
Processing opcode: addi, operands: ['r6', 'r6', '0x4']
Translated addi r6 r6 0x4 to: ['gc_env.r[6] += 4; // addi r6, r6, 0x4']
Processing opcode: lwz, operands: ['r7', '0x0(r6)']
Translated lwz r7 0x0(r6) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r7, (r6)']
Processing opcode: add, operands: ['r7', 'r7', 'r5']
Translated add r7 r7 r5 to: ['gc_env.r[7] = gc_env.r[7] + gc_env.r[5]; // add r7, r7, r5']
Processing opcode: stw, operands: ['r7', '0x0(r6)']
Translated stw r7 0x0(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6], gc_env.r[7]); // stw r7, (r6)']
Translated bdnz .L_800031E4 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_800031E4;']
Translated lis r5 0x8000 to: ['gc_env.r[5] = -32768 << 16; // lis r5, 0x8000']
Processing opcode: addi, operands: ['r5', 'r5', '0x34']
Translated addi r5 r5 0x34 to: ['gc_env.r[5] += 52; // addi r5, r5, 0x34']
Translated clrrwi r7 r15 5 to: gc_env.r[7] = gc_env.r[15] & ~((1ULL << 5) - 1); // Clear rightmost 5 bits
Processing opcode: stw, operands: ['r7', '0x0(r5)']
Translated stw r7 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[7]); // stw r7, (r5)']
Translated b .L_80003214 to: goto L_80003214;
Processing opcode: li, operands: ['r14', '0x0']
Translated li r14 0x0 to: ['gc_env.r[14] = 0x0; // li r14, 0x0']
Processing opcode: li, operands: ['r15', '0x0']
Translated li r15 0x0 to: ['gc_env.r[15] = 0x0; // li r15, 0x0']
Translated bl DBInit to: DBInit();
Translated bl OSInit to: OSInit();
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: addi, operands: ['r4', 'r4', '0x30e6']
Translated addi r4 r4 0x30e6 to: ['gc_env.r[4] += 12518; // addi r4, r4, 0x30e6']
Processing opcode: lhz, operands: ['r3', '0x0(r4)']
Translated lhz r3 0x0(r4) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[4] + 0x0); // lhz r3, 0x0(r4)']
Translated andi. r5 r3 0x8000 to: gc_env.r[5] = gc_env.r[3] & 0x8000;
Translated beq .L_8000323C to: if (gc_env.cr[0] == 0) goto L_8000323C;
Translated andi. r3 r3 0x7fff to: gc_env.r[3] = gc_env.r[3] & 0x7fff;
Translated cmplwi r3 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x1) ? 0 : ((uint32_t)gc_env.r[3] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80003240 to: if (gc_env.cr[0] != 0) goto L_80003240;
Translated bl __check_pad3 to: __check_pad3();
Translated bl __init_user to: __init_user();
Translated mr r3 r14 to: gc_env.r[3] = gc_env.r[14]; // Move register
Translated mr r4 r15 to: gc_env.r[4] = gc_env.r[15]; // Move register
Translated bl main to: main();
Translated b exit to: exit(gc_env.r[3]);
Translated lis r1 _stack_addr@h to: ['gc_env.r[1] = ((uint32_t)&_stack_addr >> 16) & 0xFFFF; // lis r1, _stack_addr@h']
Translated ori r1 r1 _stack_addr@l to: ['gc_env.r[1] = (uint32_t)&_stack_addr; // lis + ori _stack_addr']
Translated lis r2 _SDA2_BASE_@h to: ['gc_env.r[2] = ((uint32_t)&_SDA2_BASE_ >> 16) & 0xFFFF; // lis r2, _SDA2_BASE_@h']
Translated ori r2 r2 _SDA2_BASE_@l to: ['gc_env.r[2] = (uint32_t)&_SDA2_BASE_; // lis + ori _SDA2_BASE_']
Translated lis r13 _SDA_BASE_@h to: ['gc_env.r[13] = ((uint32_t)&_SDA_BASE_ >> 16) & 0xFFFF; // lis r13, _SDA_BASE_@h']
Translated ori r13 r13 _SDA_BASE_@l to: ['gc_env.r[13] = (uint32_t)&_SDA_BASE_; // lis + ori _SDA_BASE_']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: stw, operands: ['r29', '0xc(r1)']
Translated stw r29 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[29]); // stw r29, 0xC(r1)']
Translated lis r3 _rom_copy_info@ha to: ['gc_env.r[3] = ((uint32_t)&_rom_copy_info >> 16) & 0xFFFF; // lis r3, _rom_copy_info@ha']
Processing opcode: addi, operands: ['r0', 'r3', '_rom_copy_info@l']
Translated addi r0 r3 _rom_copy_info@l to: ['gc_env.r[0] = (uint32_t)&_rom_copy_info; // lis + addi _rom_copy_info (completing pattern)']
Translated mr r29 r0 to: gc_env.r[29] = gc_env.r[0]; // Move register
Translated b .L_80003298 to: goto L_80003298;
Translated b .L_8000329C to: goto L_8000329C;
Processing opcode: lwz, operands: ['r30', '0x8(r29)']
Translated lwz r30 0x8(r29) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x8); // lwz r30, 0x8(r29)']
Translated cmplwi r30 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == 0x0) ? 0 : ((uint32_t)gc_env.r[30] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800032DC to: if (gc_env.cr[0] == 0) goto L_800032DC;
Processing opcode: lwz, operands: ['r4', '0x0(r29)']
Translated lwz r4 0x0(r29) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[29]); // lwz r4, (r29)']
Processing opcode: lwz, operands: ['r31', '0x4(r29)']
Translated lwz r31 0x4(r29) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x4); // lwz r31, 0x4(r29)']
Translated beq .L_800032D4 to: if (gc_env.cr[0] == 0) goto L_800032D4;
Translated cmplw r31 r4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == (uint32_t)gc_env.r[4]) ? 0 : ((uint32_t)gc_env.r[31] < (uint32_t)gc_env.r[4] ? -1 : 1); // Logical compare word
Translated beq .L_800032D4 to: if (gc_env.cr[0] == 0) goto L_800032D4;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated mr r5 r30 to: gc_env.r[5] = gc_env.r[30]; // Move register
Translated bl memcpy to: memcpy();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated mr r4 r30 to: gc_env.r[4] = gc_env.r[30]; // Move register
Translated bl __flush_cache to: __flush_cache();
Processing opcode: addi, operands: ['r29', 'r29', '0xc']
Translated addi r29 r29 0xc to: ['gc_env.r[29] += 12; // addi r29, r29, 0xc']
Translated b .L_8000329C to: goto L_8000329C;
Translated lis r3 _bss_init_info@ha to: ['gc_env.r[3] = ((uint32_t)&_bss_init_info >> 16) & 0xFFFF; // lis r3, _bss_init_info@ha']
Processing opcode: addi, operands: ['r0', 'r3', '_bss_init_info@l']
Translated addi r0 r3 _bss_init_info@l to: ['gc_env.r[0] = (uint32_t)&_bss_init_info; // lis + addi _bss_init_info (completing pattern)']
Translated mr r29 r0 to: gc_env.r[29] = gc_env.r[0]; // Move register
Translated b .L_800032EC to: goto L_800032EC;
Translated b .L_800032F0 to: goto L_800032F0;
Processing opcode: lwz, operands: ['r5', '0x4(r29)']
Translated lwz r5 0x4(r29) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x4); // lwz r5, 0x4(r29)']
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80003314 to: if (gc_env.cr[0] == 0) goto L_80003314;
Processing opcode: lwz, operands: ['r3', '0x0(r29)']
Translated lwz r3 0x0(r29) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[29]); // lwz r3, (r29)']
Translated beq .L_8000330C to: if (gc_env.cr[0] == 0) goto L_8000330C;
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl memset to: memset();
Processing opcode: addi, operands: ['r29', 'r29', '0x8']
Translated addi r29 r29 0x8 to: ['gc_env.r[29] += 8; // addi r29, r29, 0x8']
Translated b .L_800032F0 to: goto L_800032F0;
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: lwz, operands: ['r29', '0xc(r1)']
Translated lwz r29 0xc(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r29, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mfmsr r0 to: gc_env.r[0] = gc_env.msr; // Move from machine state register
Translated ori r0 r0 0x2000 to: ['gc_env.r[0] |= 8192; // ori r0, r0, 0x2000']
Translated mtmsr r0 to: gc_env.msr = gc_env.r[0]; // Move to machine state register
Translated mflr r31 to: gc_env.r[31] = gc_env.lr; // Move from link register
Translated bl __OSPSInit to: __OSPSInit();
Translated bl __OSCacheInit to: __OSCacheInit();
Translated mtlr r31 to: gc_env.lr = gc_env.r[31]; // Move to link register
Translated blr  to: return;
Translated lis r5 0xffff to: ['gc_env.r[5] = -1 << 16; // lis r5, 0xffff']
Translated ori r5 r5 0xfff1 to: ['gc_env.r[5] |= 65521; // ori r5, r5, 0xfff1']
Translated and r5 r5 r3 to: gc_env.r[5] = gc_env.r[5] & gc_env.r[3];
Processing opcode: subf, operands: ['r3', 'r5', 'r3']
Translated subf r3 r5 r3 to: ['gc_env.r[3] = gc_env.r[3] - gc_env.r[5]; // subf r3, r5, r3']
Processing opcode: add, operands: ['r4', 'r4', 'r3']
Translated add r4 r4 r3 to: ['gc_env.r[4] = gc_env.r[4] + gc_env.r[3]; // add r4, r4, r3']
Translated dcbst r0 r5 to: // dcbst: Data cache block store (no-op in this context)
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated icbi r0 r5 to: // icbi: Instruction cache block invalidate (no-op in this context)
Processing opcode: addic, operands: ['r5', 'r5', '0x8']
Translated addic r5 r5 0x8 to: ['gc_env.r[5] = gc_env.r[5] + 8; // addic r5, r5, 8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (((uint64_t)gc_env.r[5] + 8) > 0xFFFFFFFF ? 0x20000000 : 0);']
Processing opcode: subic, operands: ['r4', 'r4', '0x8']
Translated subic. r4 r4 0x8 to: ['gc_env.r[4] = gc_env.r[4] - 8; // subic. r4, r4, 8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= 8 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[4] == 0) ? 0x2 : ((int32_t)gc_env.r[4] < 0 ? 0x8 : 0x4);']
Translated bge .L_80003364 to: if (gc_env.cr[0] >= 0) goto L_80003364;
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl __fill_mem to: __fill_mem();
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated cmplwi r5 0x20 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x20) ? 0 : ((uint32_t)gc_env.r[5] < 0x20 ? -1 : 1); // Logical compare with immediate
Translated clrlwi r0 r4 24 to: ['gc_env.r[0] = gc_env.r[4] & 0xFF; // clrlwi r0, r4, 24']
Translated mr r7 r0 to: gc_env.r[7] = gc_env.r[0]; // Move register
Processing opcode: subi, operands: ['r6', 'r3', '0x1']
Translated subi r6 r3 0x1 to: ['gc_env.r[6] = gc_env.r[3] - 1; // subi r6, r3, 1']
Translated blt .L_8000345C to: ['if (gc_env.cr[0] & 0x8) goto L_8000345C; // blt .L_8000345C']
Translated nor r0 r6 r6 to: ['gc_env.r[0] = ~gc_env.r[6]; // nor r0, r6, r6']
Translated clrlwi. r0 r0 30 to: ['gc_env.r[0] = gc_env.r[0] & 0x3; // clrlwi r0, r0, 30']
Translated mr r3 r0 to: gc_env.r[3] = gc_env.r[0]; // Move register
Translated beq .L_800033EC to: if (gc_env.cr[0] == 0) goto L_800033EC;
Processing opcode: subf, operands: ['r5', 'r3', 'r5']
Translated subf r5 r3 r5 to: ['gc_env.r[5] = gc_env.r[5] - gc_env.r[3]; // subf r5, r3, r5']
Translated clrlwi r0 r7 24 to: ['gc_env.r[0] = gc_env.r[7] & 0xFF; // clrlwi r0, r7, 24']
Processing opcode: subic, operands: ['r3', 'r3', '0x1']
Translated subic. r3 r3 0x1 to: ['gc_env.r[3] = gc_env.r[3] - 1; // subic. r3, r3, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[3] == 0) ? 0x2 : ((int32_t)gc_env.r[3] < 0 ? 0x8 : 0x4);']
Translated stbu r0 0x1(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + 0x1, gc_env.r[0]); // stbu r0, 0x1(r6)', 'gc_env.r[6] = gc_env.r[6] + 0x1;']
Translated bne .L_800033E0 to: if (gc_env.cr[0] != 0) goto L_800033E0;
Translated cmplwi r7 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[7] == 0x0) ? 0 : ((uint32_t)gc_env.r[7] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000340C to: if (gc_env.cr[0] == 0) goto L_8000340C;
Translated slwi r3 r7 24 to: ['gc_env.r[3] = gc_env.r[7] << 24; // slwi r3, r7, 24']
Translated slwi r0 r7 16 to: ['gc_env.r[0] = gc_env.r[7] << 16; // slwi r0, r7, 16']
Translated slwi r4 r7 8 to: ['gc_env.r[4] = gc_env.r[7] << 8; // slwi r4, r7, 8']
Translated or r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Translated or r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] | gc_env.r[0]; // or r0, r4, r0']
Translated or r7 r7 r0 to: ['gc_env.r[7] = gc_env.r[7] | gc_env.r[0]; // or r7, r7, r0']
Translated srwi. r0 r5 5 to: ['gc_env.r[0] = gc_env.r[5] >> 5; // srwi r0, r5, 5', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Processing opcode: subi, operands: ['r3', 'r6', '0x3']
Translated subi r3 r6 0x3 to: ['gc_env.r[3] = gc_env.r[6] - 3; // subi r3, r6, 3']
Translated beq .L_80003440 to: if (gc_env.cr[0] == 0) goto L_80003440;
Processing opcode: stw, operands: ['r7', '0x4(r3)']
Translated stw r7 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[7]); // stw r7, 0x4(r3)']
Processing opcode: subic, operands: ['r0', 'r0', '0x1']
Translated subic. r0 r0 0x1 to: ['gc_env.r[0] = gc_env.r[0] - 1; // subic. r0, r0, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[0] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Processing opcode: stw, operands: ['r7', '0x8(r3)']
Translated stw r7 0x8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[7]); // stw r7, 0x8(r3)']
Processing opcode: stw, operands: ['r7', '0xc(r3)']
Translated stw r7 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[7]); // stw r7, 0xC(r3)']
Processing opcode: stw, operands: ['r7', '0x10(r3)']
Translated stw r7 0x10(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x10, gc_env.r[7]); // stw r7, 0x10(r3)']
Processing opcode: stw, operands: ['r7', '0x14(r3)']
Translated stw r7 0x14(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x14, gc_env.r[7]); // stw r7, 0x14(r3)']
Processing opcode: stw, operands: ['r7', '0x18(r3)']
Translated stw r7 0x18(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x18, gc_env.r[7]); // stw r7, 0x18(r3)']
Processing opcode: stw, operands: ['r7', '0x1c(r3)']
Translated stw r7 0x1c(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x1C, gc_env.r[7]); // stw r7, 0x1C(r3)']
Processing opcode: stwu, operands: ['r7', '0x20(r3)']
Translated stwu r7 0x20(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x20, gc_env.r[7]); // stwu r7, 0x20(r3)', 'gc_env.r[3] = gc_env.r[3] + 0x20;']
Translated bne .L_80003418 to: if (gc_env.cr[0] != 0) goto L_80003418;
Translated extrwi. r0 r5 3 27 to: ['gc_env.r[0] = (gc_env.r[5] >> 2) & 0x7; // extrwi r0, r5, 3, 27', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_80003454 to: if (gc_env.cr[0] == 0) goto L_80003454;
Processing opcode: subic, operands: ['r0', 'r0', '0x1']
Translated subic. r0 r0 0x1 to: ['gc_env.r[0] = gc_env.r[0] - 1; // subic. r0, r0, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[0] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Processing opcode: stwu, operands: ['r7', '0x4(r3)']
Translated stwu r7 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[7]); // stwu r7, 0x4(r3)', 'gc_env.r[3] = gc_env.r[3] + 0x4;']
Translated bne .L_80003448 to: if (gc_env.cr[0] != 0) goto L_80003448;
Processing opcode: addi, operands: ['r6', 'r3', '0x3']
Translated addi r6 r3 0x3 to: ['gc_env.r[6] = gc_env.r[3] + 3; // addi r6, r3, 0x3']
Translated clrlwi r5 r5 30 to: ['gc_env.r[5] = gc_env.r[5] & 0x3; // clrlwi r5, r5, 30']
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beqlr  to: ['if (gc_env.cr[0] & 0x2) return; // beqlr']
Translated clrlwi r0 r7 24 to: ['gc_env.r[0] = gc_env.r[7] & 0xFF; // clrlwi r0, r7, 24']
Processing opcode: subic, operands: ['r5', 'r5', '0x1']
Translated subic. r5 r5 0x1 to: ['gc_env.r[5] = gc_env.r[5] - 1; // subic. r5, r5, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[5] == 0) ? 0x2 : ((int32_t)gc_env.r[5] < 0 ? 0x8 : 0x4);']
Translated stbu r0 0x1(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + 0x1, gc_env.r[0]); // stbu r0, 0x1(r6)', 'gc_env.r[6] = gc_env.r[6] + 0x1;']
Translated bne .L_80003468 to: if (gc_env.cr[0] != 0) goto L_80003468;
Translated blr  to: return;
Translated cmplw r4 r3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[3]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[3] ? -1 : 1); // Logical compare word
Translated blt .L_800034A4 to: ['if (gc_env.cr[0] & 0x8) goto L_800034A4; // blt .L_800034A4']
Processing opcode: subi, operands: ['r4', 'r4', '0x1']
Translated subi r4 r4 0x1 to: ['gc_env.r[4] = gc_env.r[4] - 1; // subi r4, r4, 1']
Processing opcode: subi, operands: ['r6', 'r3', '0x1']
Translated subi r6 r3 0x1 to: ['gc_env.r[6] = gc_env.r[3] - 1; // subi r6, r3, 1']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated b .L_80003498 to: goto L_80003498;
Translated lbzu r0 0x1(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 1); // lbzu r0, 1(r4)', 'gc_env.r[4] = gc_env.r[4] + 1;']
Translated stbu r0 0x1(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + 0x1, gc_env.r[0]); // stbu r0, 0x1(r6)', 'gc_env.r[6] = gc_env.r[6] + 0x1;']
Processing opcode: subic, operands: ['r5', 'r5', '0x1']
Translated subic. r5 r5 0x1 to: ['gc_env.r[5] = gc_env.r[5] - 1; // subic. r5, r5, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[5] == 0) ? 0x2 : ((int32_t)gc_env.r[5] < 0 ? 0x8 : 0x4);']
Translated bne .L_80003490 to: if (gc_env.cr[0] != 0) goto L_80003490;
Translated blr  to: return;
Processing opcode: add, operands: ['r4', 'r4', 'r5']
Translated add r4 r4 r5 to: ['gc_env.r[4] = gc_env.r[4] + gc_env.r[5]; // add r4, r4, r5']
Processing opcode: add, operands: ['r6', 'r3', 'r5']
Translated add r6 r3 r5 to: ['gc_env.r[6] = gc_env.r[3] + gc_env.r[5]; // add r6, r3, r5']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated b .L_800034BC to: goto L_800034BC;
Translated lbzu r0 -0x1(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + -1); // lbzu r0, -1(r4)', 'gc_env.r[4] = gc_env.r[4] + -1;']
Translated stbu r0 -0x1(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r6)', 'gc_env.r[6] = gc_env.r[6] + -0x1;']
Processing opcode: subic, operands: ['r5', 'r5', '0x1']
Translated subic. r5 r5 0x1 to: ['gc_env.r[5] = gc_env.r[5] - 1; // subic. r5, r5, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[5] == 0) ? 0x2 : ((int32_t)gc_env.r[5] < 0 ? 0x8 : 0x4);']
Translated bne .L_800034B4 to: if (gc_env.cr[0] != 0) goto L_800034B4;
Translated blr  to: return;
Processing opcode: subi, operands: ['r4', 'r4', '0x1']
Translated subi r4 r4 0x1 to: ['gc_env.r[4] = gc_env.r[4] - 1; // subi r4, r4, 1']
Processing opcode: subi, operands: ['r6', 'r3', '0x1']
Translated subi r6 r3 0x1 to: ['gc_env.r[6] = gc_env.r[3] - 1; // subi r6, r3, 1']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated b .L_800034E0 to: goto L_800034E0;
Translated lbzu r0 0x1(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 1); // lbzu r0, 1(r4)', 'gc_env.r[4] = gc_env.r[4] + 1;']
Translated stbu r0 0x1(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + 0x1, gc_env.r[0]); // stbu r0, 0x1(r6)', 'gc_env.r[6] = gc_env.r[6] + 0x1;']
Processing opcode: subic, operands: ['r5', 'r5', '0x1']
Translated subic. r5 r5 0x1 to: ['gc_env.r[5] = gc_env.r[5] - 1; // subic. r5, r5, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[5] == 0) ? 0x2 : ((int32_t)gc_env.r[5] < 0 ? 0x8 : 0x4);']
Translated bne .L_800034D8 to: if (gc_env.cr[0] != 0) goto L_800034D8;
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl fn_80016B44 to: fn_80016B44();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_80018340 to: fn_80018340();
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_00_80003100_init.c
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_00_80003100_init.h
Transpiling D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_01_80005500_text.s
Parsed function: main at 0x80005500
Parsed instruction at 80005500: mflr r0
Parsed instruction at 80005504: stw r0 0x4(r1)
Parsed instruction at 80005508: stwu r1 -0x28(r1)
Parsed instruction at 8000550C: stmw r25 0xc(r1)
Parsed instruction at 80005510: bl OSInit
Parsed instruction at 80005514: bl fn_8000FEB8
Parsed instruction at 80005518: lwz r4 lbl_8001EE00@sda21(r0)
Parsed instruction at 8000551C: lhz r3 0x4(r4)
Parsed instruction at 80005520: lhz r0 0x8(r4)
Parsed instruction at 80005524: addi r3 r3 0xf
Parsed instruction at 80005528: rlwinm r3 r3 0 16 27
Parsed instruction at 8000552C: mullw r0 r3 r0
Parsed instruction at 80005530: slwi r28 r0 1
Parsed instruction at 80005534: bl OSGetArenaLo
Parsed instruction at 80005538: addi r0 r3 0x1f
Parsed instruction at 8000553C: clrrwi r0 r0 5
Parsed instruction at 80005540: stw r0 lbl_8001EE60@sda21(r0)
Parsed instruction at 80005544: addi r3 r28 0x1f
Parsed instruction at 80005548: slwi r0 r28 1
Parsed instruction at 8000554C: lwz r5 lbl_8001EE60@sda21(r0)
Parsed instruction at 80005550: add r3 r5 r3
Parsed instruction at 80005554: clrrwi r4 r3 5
Parsed instruction at 80005558: stw r4 lbl_8001EE64@sda21(r0)
Parsed instruction at 8000555C: add r3 r5 r0
Parsed instruction at 80005560: bl OSSetArenaLo
Parsed instruction at 80005564: lwz r3 lbl_8001EE00@sda21(r0)
Parsed instruction at 80005568: bl fn_800107F8
Parsed instruction at 8000556C: bl fn_80010F94
Parsed instruction at 80005570: bl fn_80010330
Parsed instruction at 80005574: lis r4 0x8889
Parsed instruction at 80005578: lis r3 lbl_8001A680@ha
Parsed instruction at 8000557C: subi r31 r4 0x7777
Parsed instruction at 80005580: addi r25 r3 lbl_8001A680@l
Parsed instruction at 80005584: li r26 0x1
Parsed instruction at 80005588: li r30 0x0
Parsed instruction at 8000558C: li r29 0x0
Parsed label: L_80005590:
Parsed instruction at 80005590: clrlwi. r0 r30 31
Parsed instruction at 80005594: beq .L_800055A0
Parsed instruction at 80005598: lwz r6 lbl_8001EE64@sda21(r0)
Parsed instruction at 8000559C: b .L_800055A4
Parsed label: L_800055A0:
Parsed instruction at 800055A0: lwz r6 lbl_8001EE60@sda21(r0)
Parsed label: L_800055A4:
Parsed instruction at 800055A4: mulhwu r0 r31 r30
Parsed instruction at 800055A8: srwi r0 r0 5
Parsed instruction at 800055AC: mulli r0 r0 0x3c
Parsed instruction at 800055B0: subf. r0 r0 r30
Parsed instruction at 800055B4: addi r27 r6 0x0
Parsed instruction at 800055B8: bne .L_800055C4
Parsed instruction at 800055BC: addi r0 r29 0x1
Parsed instruction at 800055C0: clrlwi r29 r0 29
Parsed label: L_800055C4:
Parsed instruction at 800055C4: mulli r0 r29 0xc
Parsed instruction at 800055C8: add r5 r25 r0
Parsed instruction at 800055CC: lwz r7 0x0(r5)
Parsed instruction at 800055D0: add r4 r6 r28
Parsed instruction at 800055D4: lwz r0 0x4(r5)
Parsed instruction at 800055D8: cmplw r6 r4
Parsed instruction at 800055DC: slwi r3 r7 8
Parsed instruction at 800055E0: slwi r0 r0 16
Parsed instruction at 800055E4: lwz r5 0x8(r5)
Parsed instruction at 800055E8: add r0 r0 r3
Parsed instruction at 800055EC: addi r3 r4 0x3
Parsed instruction at 800055F0: subf r3 r6 r3
Parsed instruction at 800055F4: slwi r4 r7 24
Parsed instruction at 800055F8: add r5 r0 r5
Parsed instruction at 800055FC: add r5 r4 r5
Parsed instruction at 80005600: srwi r3 r3 2
Parsed instruction at 80005604: bge .L_80005654
Parsed instruction at 80005608: srwi. r0 r3 3
Parsed instruction at 8000560C: mtctr r0
Parsed instruction at 80005610: beq .L_80005644
Parsed label: L_80005614:
Parsed instruction at 80005614: stw r5 0x0(r6)
Parsed instruction at 80005618: stw r5 0x4(r6)
Parsed instruction at 8000561C: stw r5 0x8(r6)
Parsed instruction at 80005620: stw r5 0xc(r6)
Parsed instruction at 80005624: stw r5 0x10(r6)
Parsed instruction at 80005628: stw r5 0x14(r6)
Parsed instruction at 8000562C: stw r5 0x18(r6)
Parsed instruction at 80005630: stw r5 0x1c(r6)
Parsed instruction at 80005634: addi r6 r6 0x20
Parsed instruction at 80005638: bdnz .L_80005614
Parsed instruction at 8000563C: andi. r3 r3 0x7
Parsed instruction at 80005640: beq .L_80005654
Parsed label: L_80005644:
Parsed instruction at 80005644: mtctr r3
Parsed label: L_80005648:
Parsed instruction at 80005648: stw r5 0x0(r6)
Parsed instruction at 8000564C: addi r6 r6 0x4
Parsed instruction at 80005650: bdnz .L_80005648
Parsed label: L_80005654:
Parsed instruction at 80005654: addi r3 r27 0x0
Parsed instruction at 80005658: addi r4 r28 0x0
Parsed instruction at 8000565C: bl fn_8000694C
Parsed instruction at 80005660: mr r3 r27
Parsed instruction at 80005664: bl fn_800110B0
Parsed instruction at 80005668: cmplwi r26 0x1
Parsed instruction at 8000566C: bne .L_8000567C
Parsed instruction at 80005670: li r3 0x0
Parsed instruction at 80005674: bl fn_8001111C
Parsed instruction at 80005678: li r26 0x0
Parsed label: L_8000567C:
Parsed instruction at 8000567C: bl fn_80010F94
Parsed instruction at 80005680: bl fn_80010330
Parsed instruction at 80005684: addi r30 r30 0x1
Parsed instruction at 80005688: b .L_80005590
End of function: main, 108 instructions
Parsed function: PPCMfmsr at 0x8000568C
Parsed instruction at 8000568C: mfmsr r3
Parsed instruction at 80005690: blr 
End of function: PPCMfmsr, 2 instructions
Parsed function: PPCMtmsr at 0x80005694
Parsed instruction at 80005694: mtmsr r3
Parsed instruction at 80005698: blr 
End of function: PPCMtmsr, 2 instructions
Parsed function: PPCMfhid0 at 0x8000569C
Parsed instruction at 8000569C: mfspr r3 HID0
Parsed instruction at 800056A0: blr 
End of function: PPCMfhid0, 2 instructions
Parsed function: PPCMfl2cr at 0x800056A4
Parsed instruction at 800056A4: mfspr r3 L2CR
Parsed instruction at 800056A8: blr 
End of function: PPCMfl2cr, 2 instructions
Parsed function: PPCMtl2cr at 0x800056AC
Parsed instruction at 800056AC: mtspr L2CR r3
Parsed instruction at 800056B0: blr 
End of function: PPCMtl2cr, 2 instructions
Parsed function: PPCMtdec at 0x800056B4
Parsed instruction at 800056B4: mtdec r3
Parsed instruction at 800056B8: blr 
End of function: PPCMtdec, 2 instructions
Parsed function: PPCHalt at 0x800056BC
Parsed instruction at 800056BC: sync 
Parsed label: L_800056C0:
Parsed instruction at 800056C0: nop 
Parsed instruction at 800056C4: li r3 0x0
Parsed instruction at 800056C8: nop 
Parsed instruction at 800056CC: b .L_800056C0
End of function: PPCHalt, 6 instructions
Parsed function: PPCMfhid2 at 0x800056D0
Parsed instruction at 800056D0: mfspr r3 HID2
Parsed instruction at 800056D4: blr 
End of function: PPCMfhid2, 2 instructions
Parsed function: PPCMthid2 at 0x800056D8
Parsed instruction at 800056D8: mtspr HID2 r3
Parsed instruction at 800056DC: blr 
End of function: PPCMthid2, 2 instructions
Parsed function: OSGetConsoleType at 0x800056E0
Parsed instruction at 800056E0: lwz r3 BootInfo_8001EE68@sda21(r0)
Parsed instruction at 800056E4: cmplwi r3 0x0
Parsed instruction at 800056E8: beq .L_800056F8
Parsed instruction at 800056EC: lwz r3 0x2c(r3)
Parsed instruction at 800056F0: cmplwi r3 0x0
Parsed instruction at 800056F4: bne .L_80005704
Parsed label: L_800056F8:
Parsed instruction at 800056F8: lis r3 0x1000
Parsed instruction at 800056FC: addi r3 r3 0x2
Parsed instruction at 80005700: b .L_80005704
Parsed label: L_80005704:
Parsed instruction at 80005704: blr 
End of function: OSGetConsoleType, 12 instructions
Parsed function: ClearArena at 0x80005708
Parsed instruction at 80005708: mflr r0
Parsed instruction at 8000570C: stw r0 0x4(r1)
Parsed instruction at 80005710: stwu r1 -0x10(r1)
Parsed instruction at 80005714: stw r31 0xc(r1)
Parsed instruction at 80005718: stw r30 0x8(r1)
Parsed instruction at 8000571C: bl OSGetResetCode
Parsed instruction at 80005720: addis r0 r3 0x8000
Parsed instruction at 80005724: cmplwi r0 0x0
Parsed instruction at 80005728: beq .L_80005750
Parsed instruction at 8000572C: bl OSGetArenaHi
Parsed instruction at 80005730: mr r31 r3
Parsed instruction at 80005734: bl OSGetArenaLo
Parsed instruction at 80005738: subf r31 r3 r31
Parsed instruction at 8000573C: bl OSGetArenaLo
Parsed instruction at 80005740: mr r5 r31
Parsed instruction at 80005744: li r4 0x0
Parsed instruction at 80005748: bl memset
Parsed instruction at 8000574C: b .L_800057FC
Parsed label: L_80005750:
Parsed instruction at 80005750: lis r3 0x8130
Parsed instruction at 80005754: lwz r31 -0x2010(r3)
Parsed instruction at 80005758: lwz r30 -0x2014(r3)
Parsed instruction at 8000575C: cmplwi r31 0x0
Parsed instruction at 80005760: bne .L_80005788
Parsed instruction at 80005764: bl OSGetArenaHi
Parsed instruction at 80005768: mr r31 r3
Parsed instruction at 8000576C: bl OSGetArenaLo
Parsed instruction at 80005770: subf r31 r3 r31
Parsed instruction at 80005774: bl OSGetArenaLo
Parsed instruction at 80005778: mr r5 r31
Parsed instruction at 8000577C: li r4 0x0
Parsed instruction at 80005780: bl memset
Parsed instruction at 80005784: b .L_800057FC
Parsed label: L_80005788:
Parsed instruction at 80005788: bl OSGetArenaLo
Parsed instruction at 8000578C: cmplw r3 r31
Parsed instruction at 80005790: bge .L_800057FC
Parsed instruction at 80005794: bl OSGetArenaHi
Parsed instruction at 80005798: cmplw r3 r31
Parsed instruction at 8000579C: bgt .L_800057C4
Parsed instruction at 800057A0: bl OSGetArenaHi
Parsed instruction at 800057A4: mr r31 r3
Parsed instruction at 800057A8: bl OSGetArenaLo
Parsed instruction at 800057AC: subf r31 r3 r31
Parsed instruction at 800057B0: bl OSGetArenaLo
Parsed instruction at 800057B4: mr r5 r31
Parsed instruction at 800057B8: li r4 0x0
Parsed instruction at 800057BC: bl memset
Parsed instruction at 800057C0: b .L_800057FC
Parsed label: L_800057C4:
Parsed instruction at 800057C4: bl OSGetArenaLo
Parsed instruction at 800057C8: subf r31 r3 r31
Parsed instruction at 800057CC: bl OSGetArenaLo
Parsed instruction at 800057D0: mr r5 r31
Parsed instruction at 800057D4: li r4 0x0
Parsed instruction at 800057D8: bl memset
Parsed instruction at 800057DC: bl OSGetArenaHi
Parsed instruction at 800057E0: cmplw r3 r30
Parsed instruction at 800057E4: ble .L_800057FC
Parsed instruction at 800057E8: bl OSGetArenaHi
Parsed instruction at 800057EC: subf r5 r30 r3
Parsed instruction at 800057F0: mr r3 r30
Parsed instruction at 800057F4: li r4 0x0
Parsed instruction at 800057F8: bl memset
Parsed label: L_800057FC:
Parsed instruction at 800057FC: lwz r0 0x14(r1)
Parsed instruction at 80005800: lwz r31 0xc(r1)
Parsed instruction at 80005804: lwz r30 0x8(r1)
Parsed instruction at 80005808: addi r1 r1 0x10
Parsed instruction at 8000580C: mtlr r0
Parsed instruction at 80005810: blr 
End of function: ClearArena, 71 instructions
Parsed function: OSInit at 0x80005814
Parsed instruction at 80005814: mflr r0
Parsed instruction at 80005818: stw r0 0x4(r1)
Parsed instruction at 8000581C: stwu r1 -0x10(r1)
Parsed instruction at 80005820: stw r31 0xc(r1)
Parsed instruction at 80005824: stw r30 0x8(r1)
Parsed instruction at 80005828: lwz r0 AreWeInitialized_8001EE74@sda21(r0)
Parsed instruction at 8000582C: lis r3 "@73_8001A6E0"@ha
Parsed instruction at 80005830: addi r31 r3 "@73_8001A6E0"@l
Parsed instruction at 80005834: cmpwi r0 0x0
Parsed instruction at 80005838: bne .L_80005B4C
Parsed instruction at 8000583C: li r0 0x1
Parsed instruction at 80005840: stw r0 AreWeInitialized_8001EE74@sda21(r0)
Parsed instruction at 80005844: bl __OSGetSystemTime
Parsed instruction at 80005848: stw r4 __OSStartTime+0x4@sda21(r0)
Parsed instruction at 8000584C: stw r3 __OSStartTime@sda21(r0)
Parsed instruction at 80005850: bl OSDisableInterrupts
Parsed instruction at 80005854: li r0 0x0
Parsed instruction at 80005858: lis r4 0x8000
Parsed instruction at 8000585C: stw r0 BI2DebugFlag_8001EE6C@sda21(r0)
Parsed instruction at 80005860: stw r4 BootInfo_8001EE68@sda21(r0)
Parsed instruction at 80005864: stw r0 __DVDLongFileNameFlag@sda21(r0)
Parsed instruction at 80005868: lwz r3 0xf4(r4)
Parsed instruction at 8000586C: cmplwi r3 0x0
Parsed instruction at 80005870: beq .L_800058A4
Parsed instruction at 80005874: addi r0 r3 0xc
Parsed instruction at 80005878: stw r0 BI2DebugFlag_8001EE6C@sda21(r0)
Parsed instruction at 8000587C: lwz r0 0x24(r3)
Parsed instruction at 80005880: lwz r3 BI2DebugFlag_8001EE6C@sda21(r0)
Parsed instruction at 80005884: stw r0 __PADSpec@sda21(r0)
Parsed instruction at 80005888: lwz r0 0x0(r3)
Parsed instruction at 8000588C: clrlwi r0 r0 24
Parsed instruction at 80005890: stb r0 0x30e8(r4)
Parsed instruction at 80005894: lwz r0 __PADSpec@sda21(r0)
Parsed instruction at 80005898: clrlwi r0 r0 24
Parsed instruction at 8000589C: stb r0 0x30e9(r4)
Parsed instruction at 800058A0: b .L_800058C8
Parsed label: L_800058A4:
Parsed instruction at 800058A4: lwz r0 0x34(r4)
Parsed instruction at 800058A8: cmplwi r0 0x0
Parsed instruction at 800058AC: beq .L_800058C8
Parsed instruction at 800058B0: lbz r3 0x30e8(r4)
Parsed instruction at 800058B4: li r0 BI2DebugFlagHolder_8001EE70@sda21
Parsed instruction at 800058B8: stw r3 BI2DebugFlagHolder_8001EE70@sda21(r0)
Parsed instruction at 800058BC: stw r0 BI2DebugFlag_8001EE6C@sda21(r0)
Parsed instruction at 800058C0: lbz r0 0x30e9(r4)
Parsed instruction at 800058C4: stw r0 __PADSpec@sda21(r0)
Parsed label: L_800058C8:
Parsed instruction at 800058C8: li r0 0x1
Parsed instruction at 800058CC: lwz r3 BootInfo_8001EE68@sda21(r0)
Parsed instruction at 800058D0: stw r0 __DVDLongFileNameFlag@sda21(r0)
Parsed instruction at 800058D4: lwz r3 0x30(r3)
Parsed instruction at 800058D8: cmplwi r3 0x0
Parsed instruction at 800058DC: bne .L_800058EC
Parsed instruction at 800058E0: lis r3 __ArenaLo@ha
Parsed instruction at 800058E4: addi r3 r3 __ArenaLo@l
Parsed instruction at 800058E8: b .L_800058EC
Parsed label: L_800058EC:
Parsed instruction at 800058EC: bl OSSetArenaLo
Parsed instruction at 800058F0: lwz r3 BootInfo_8001EE68@sda21(r0)
Parsed instruction at 800058F4: lwz r0 0x30(r3)
Parsed instruction at 800058F8: cmplwi r0 0x0
Parsed instruction at 800058FC: bne .L_8000592C
Parsed instruction at 80005900: lwz r3 BI2DebugFlag_8001EE6C@sda21(r0)
Parsed instruction at 80005904: cmplwi r3 0x0
Parsed instruction at 80005908: beq .L_8000592C
Parsed instruction at 8000590C: lwz r0 0x0(r3)
Parsed instruction at 80005910: cmplwi r0 0x2
Parsed instruction at 80005914: bge .L_8000592C
Parsed instruction at 80005918: lis r3 _stack_addr@ha
Parsed instruction at 8000591C: addi r3 r3 _stack_addr@l
Parsed instruction at 80005920: addi r0 r3 0x1f
Parsed instruction at 80005924: clrrwi r3 r0 5
Parsed instruction at 80005928: bl OSSetArenaLo
Parsed label: L_8000592C:
Parsed instruction at 8000592C: lwz r3 BootInfo_8001EE68@sda21(r0)
Parsed instruction at 80005930: lwz r3 0x34(r3)
Parsed instruction at 80005934: cmplwi r3 0x0
Parsed instruction at 80005938: bne .L_80005948
Parsed instruction at 8000593C: lis r3 __ArenaHi@ha
Parsed instruction at 80005940: addi r3 r3 __ArenaHi@l
Parsed instruction at 80005944: b .L_80005948
Parsed label: L_80005948:
Parsed instruction at 80005948: bl OSSetArenaHi
Parsed instruction at 8000594C: bl OSExceptionInit
Parsed instruction at 80005950: bl __OSInitSystemCall
Parsed instruction at 80005954: bl OSInitAlarm
Parsed instruction at 80005958: bl __OSModuleInit
Parsed instruction at 8000595C: bl __OSInterruptInit
Parsed instruction at 80005960: lis r3 __OSResetSWInterruptHandler@ha
Parsed instruction at 80005964: addi r4 r3 __OSResetSWInterruptHandler@l
Parsed instruction at 80005968: li r3 0x16
Parsed instruction at 8000596C: bl __OSSetInterruptHandler
Parsed instruction at 80005970: bl __OSContextInit
Parsed instruction at 80005974: bl __OSCacheInit
Parsed instruction at 80005978: bl EXIInit
Parsed instruction at 8000597C: bl SIInit
Parsed instruction at 80005980: bl __OSInitSram
Parsed instruction at 80005984: bl __OSThreadInit
Parsed instruction at 80005988: bl __OSInitAudioSystem
Parsed instruction at 8000598C: bl PPCMfhid2
Parsed instruction at 80005990: rlwinm r3 r3 0 2 0
Parsed instruction at 80005994: bl PPCMthid2
Parsed instruction at 80005998: lwz r3 BootInfo_8001EE68@sda21(r0)
Parsed instruction at 8000599C: addi r4 r3 0x2c
Parsed instruction at 800059A0: lwz r0 0x0(r4)
Parsed instruction at 800059A4: rlwinm r0 r0 0 3 3
Parsed instruction at 800059A8: cmplwi r0 0x0
Parsed instruction at 800059AC: beq .L_800059C0
Parsed instruction at 800059B0: lis r3 0x1000
Parsed instruction at 800059B4: addi r0 r3 0x4
Parsed instruction at 800059B8: stw r0 0x0(r4)
Parsed instruction at 800059BC: b .L_800059C8
Parsed label: L_800059C0:
Parsed instruction at 800059C0: li r0 0x1
Parsed instruction at 800059C4: stw r0 0x0(r4)
Parsed label: L_800059C8:
Parsed instruction at 800059C8: lis r3 0xcc00
Parsed instruction at 800059CC: lwz r4 BootInfo_8001EE68@sda21(r0)
Parsed instruction at 800059D0: addi r3 r3 0x3000
Parsed instruction at 800059D4: lwz r0 0x2c(r3)
Parsed instruction at 800059D8: lwz r3 0x2c(r4)
Parsed instruction at 800059DC: clrrwi r0 r0 28
Parsed instruction at 800059E0: srwi r0 r0 28
Parsed instruction at 800059E4: add r0 r3 r0
Parsed instruction at 800059E8: stw r0 0x2c(r4)
Parsed instruction at 800059EC: lwz r0 __OSInIPL@sda21(r0)
Parsed instruction at 800059F0: cmpwi r0 0x0
Parsed instruction at 800059F4: bne .L_800059FC
Parsed instruction at 800059F8: bl __OSInitMemoryProtection
Parsed label: L_800059FC:
Parsed instruction at 800059FC: mr r3 r31
Parsed instruction at 80005A00: crclr cr1eq
Parsed instruction at 80005A04: bl OSReport
Parsed instruction at 80005A08: addi r3 r31 0x20
Parsed instruction at 80005A0C: crclr cr1eq
Parsed instruction at 80005A10: addi r4 r31 0x38
Parsed instruction at 80005A14: addi r5 r31 0x44
Parsed instruction at 80005A18: bl OSReport
Parsed instruction at 80005A1C: addi r3 r31 0x50
Parsed instruction at 80005A20: crclr cr1eq
Parsed instruction at 80005A24: bl OSReport
Parsed instruction at 80005A28: lwz r3 BootInfo_8001EE68@sda21(r0)
Parsed instruction at 80005A2C: cmplwi r3 0x0
Parsed instruction at 80005A30: beq .L_80005A40
Parsed instruction at 80005A34: lwz r4 0x2c(r3)
Parsed instruction at 80005A38: cmplwi r4 0x0
Parsed instruction at 80005A3C: bne .L_80005A4C
Parsed label: L_80005A40:
Parsed instruction at 80005A40: lis r3 0x1000
Parsed instruction at 80005A44: addi r4 r3 0x2
Parsed instruction at 80005A48: b .L_80005A4C
Parsed label: L_80005A4C:
Parsed instruction at 80005A4C: rlwinm r0 r4 0 3 3
Parsed instruction at 80005A50: cmplwi r0 0x0
Parsed instruction at 80005A54: bne .L_80005A68
Parsed instruction at 80005A58: crclr cr1eq
Parsed instruction at 80005A5C: addi r3 r31 0x60
Parsed instruction at 80005A60: bl OSReport
Parsed instruction at 80005A64: b .L_80005AF0
Parsed label: L_80005A68:
Parsed instruction at 80005A68: lis r3 0x1000
Parsed instruction at 80005A6C: addi r0 r3 0x2
Parsed instruction at 80005A70: cmpw r4 r0
Parsed instruction at 80005A74: beq .L_80005ABC
Parsed instruction at 80005A78: bge .L_80005A8C
Parsed instruction at 80005A7C: cmpw r4 r3
Parsed instruction at 80005A80: beq .L_80005A9C
Parsed instruction at 80005A84: bge .L_80005AAC
Parsed instruction at 80005A88: b .L_80005ADC
Parsed label: L_80005A8C:
Parsed instruction at 80005A8C: addi r0 r3 0x4
Parsed instruction at 80005A90: cmpw r4 r0
Parsed instruction at 80005A94: bge .L_80005ADC
Parsed instruction at 80005A98: b .L_80005ACC
Parsed label: L_80005A9C:
Parsed instruction at 80005A9C: addi r3 r31 0x6c
Parsed instruction at 80005AA0: crclr cr1eq
Parsed instruction at 80005AA4: bl OSReport
Parsed instruction at 80005AA8: b .L_80005AF0
Parsed label: L_80005AAC:
Parsed instruction at 80005AAC: addi r3 r31 0x7c
Parsed instruction at 80005AB0: crclr cr1eq
Parsed instruction at 80005AB4: bl OSReport
Parsed instruction at 80005AB8: b .L_80005AF0
Parsed label: L_80005ABC:
Parsed instruction at 80005ABC: addi r3 r31 0x8c
Parsed instruction at 80005AC0: crclr cr1eq
Parsed instruction at 80005AC4: bl OSReport
Parsed instruction at 80005AC8: b .L_80005AF0
Parsed label: L_80005ACC:
Parsed instruction at 80005ACC: addi r3 r31 0x9c
Parsed instruction at 80005AD0: crclr cr1eq
Parsed instruction at 80005AD4: bl OSReport
Parsed instruction at 80005AD8: b .L_80005AF0
Parsed label: L_80005ADC:
Parsed instruction at 80005ADC: subis r4 r4 0x1000
Parsed instruction at 80005AE0: crclr cr1eq
Parsed instruction at 80005AE4: addi r3 r31 0xac
Parsed instruction at 80005AE8: subi r4 r4 0x3
Parsed instruction at 80005AEC: bl OSReport
Parsed label: L_80005AF0:
Parsed instruction at 80005AF0: lwz r4 BootInfo_8001EE68@sda21(r0)
Parsed instruction at 80005AF4: addi r3 r31 0xc0
Parsed instruction at 80005AF8: crclr cr1eq
Parsed instruction at 80005AFC: lwz r0 0x28(r4)
Parsed instruction at 80005B00: srwi r4 r0 20
Parsed instruction at 80005B04: bl OSReport
Parsed instruction at 80005B08: bl OSGetArenaHi
Parsed instruction at 80005B0C: mr r30 r3
Parsed instruction at 80005B10: bl OSGetArenaLo
Parsed instruction at 80005B14: mr r4 r3
Parsed instruction at 80005B18: crclr cr1eq
Parsed instruction at 80005B1C: mr r5 r30
Parsed instruction at 80005B20: addi r3 r31 0xd0
Parsed instruction at 80005B24: bl OSReport
Parsed instruction at 80005B28: lwz r3 BI2DebugFlag_8001EE6C@sda21(r0)
Parsed instruction at 80005B2C: cmplwi r3 0x0
Parsed instruction at 80005B30: beq .L_80005B44
Parsed instruction at 80005B34: lwz r0 0x0(r3)
Parsed instruction at 80005B38: cmplwi r0 0x2
Parsed instruction at 80005B3C: blt .L_80005B44
Parsed instruction at 80005B40: bl EnableMetroTRKInterrupts
Parsed label: L_80005B44:
Parsed instruction at 80005B44: bl ClearArena
Parsed instruction at 80005B48: bl OSEnableInterrupts
Parsed label: L_80005B4C:
Parsed instruction at 80005B4C: lwz r0 0x14(r1)
Parsed instruction at 80005B50: lwz r31 0xc(r1)
Parsed instruction at 80005B54: lwz r30 0x8(r1)
Parsed instruction at 80005B58: addi r1 r1 0x10
Parsed instruction at 80005B5C: mtlr r0
Parsed instruction at 80005B60: blr 
End of function: OSInit, 232 instructions
Parsed function: OSExceptionInit at 0x80005B64
Parsed instruction at 80005B64: mflr r0
Parsed instruction at 80005B68: stw r0 0x4(r1)
Parsed instruction at 80005B6C: stwu r1 -0x38(r1)
Parsed instruction at 80005B70: stmw r20 0x8(r1)
Parsed instruction at 80005B74: lis r3 0x8000
Parsed instruction at 80005B78: lwz r0 0x60(r3)
Parsed instruction at 80005B7C: lis r4 __OSEVSetNumber@ha
Parsed instruction at 80005B80: addi r30 r4 __OSEVSetNumber@l
Parsed instruction at 80005B84: lis r5 __OSEVStart@ha
Parsed instruction at 80005B88: lwz r25 0x0(r30)
Parsed instruction at 80005B8C: lis r4 __OSEVEnd@ha
Parsed instruction at 80005B90: addi r5 r5 __OSEVStart@l
Parsed instruction at 80005B94: addi r4 r4 __OSEVEnd@l
Parsed instruction at 80005B98: lis r6 "@73_8001A6E0"@ha
Parsed instruction at 80005B9C: cmplwi r0 0x0
Parsed instruction at 80005BA0: mr r24 r5
Parsed instruction at 80005BA4: addi r29 r6 "@73_8001A6E0"@l
Parsed instruction at 80005BA8: subf r23 r5 r4
Parsed instruction at 80005BAC: addi r20 r3 0x60
Parsed instruction at 80005BB0: bne .L_80005BFC
Parsed instruction at 80005BB4: addi r3 r29 0x124
Parsed instruction at 80005BB8: crclr cr1eq
Parsed instruction at 80005BBC: bl DBPrintf
Parsed instruction at 80005BC0: lis r4 __OSDBINTSTART@ha
Parsed instruction at 80005BC4: lis r3 __OSDBINTEND@ha
Parsed instruction at 80005BC8: addi r0 r3 __OSDBINTEND@l
Parsed instruction at 80005BCC: addi r4 r4 __OSDBINTSTART@l
Parsed instruction at 80005BD0: subf r21 r4 r0
Parsed instruction at 80005BD4: mr r3 r20
Parsed instruction at 80005BD8: mr r5 r21
Parsed instruction at 80005BDC: bl memcpy
Parsed instruction at 80005BE0: mr r3 r20
Parsed instruction at 80005BE4: mr r4 r21
Parsed instruction at 80005BE8: bl DCFlushRangeNoSync
Parsed instruction at 80005BEC: sync 
Parsed instruction at 80005BF0: mr r3 r20
Parsed instruction at 80005BF4: mr r4 r21
Parsed instruction at 80005BF8: bl ICInvalidateRange
Parsed label: L_80005BFC:
Parsed instruction at 80005BFC: lis r4 __OSDBINTEND@ha
Parsed instruction at 80005C00: lis r3 __OSDBJUMPEND@ha
Parsed instruction at 80005C04: addi r31 r4 __OSDBINTEND@l
Parsed instruction at 80005C08: addi r0 r3 __OSDBJUMPEND@l
Parsed instruction at 80005C0C: addi r28 r29 0xe8
Parsed instruction at 80005C10: subf r27 r31 r0
Parsed instruction at 80005C14: li r26 0x0
Parsed instruction at 80005C18: b .L_80005C1C
Parsed label: L_80005C1C:
Parsed instruction at 80005C1C: lis r3 __DBVECTOR@ha
Parsed instruction at 80005C20: addi r21 r3 __DBVECTOR@l
Parsed instruction at 80005C24: lis r22 0x6000
Parsed instruction at 80005C28: b .L_80005C2C
Parsed label: L_80005C2C:
Parsed instruction at 80005C2C: b .L_80005D74
Parsed label: L_80005C30:
Parsed instruction at 80005C30: lwz r3 BI2DebugFlag_8001EE6C@sda21(r0)
Parsed instruction at 80005C34: cmplwi r3 0x0
Parsed instruction at 80005C38: beq .L_80005C6C
Parsed instruction at 80005C3C: lwz r0 0x0(r3)
Parsed instruction at 80005C40: cmplwi r0 0x2
Parsed instruction at 80005C44: blt .L_80005C6C
Parsed instruction at 80005C48: mr r3 r26
Parsed instruction at 80005C4C: bl __DBIsExceptionMarked
Parsed instruction at 80005C50: cmpwi r3 0x0
Parsed instruction at 80005C54: beq .L_80005C6C
Parsed instruction at 80005C58: addi r3 r29 0x140
Parsed instruction at 80005C5C: crclr cr1eq
Parsed instruction at 80005C60: clrlwi r4 r26 24
Parsed instruction at 80005C64: bl DBPrintf
Parsed instruction at 80005C68: b .L_80005D6C
Parsed label: L_80005C6C:
Parsed instruction at 80005C6C: clrlwi r20 r26 24
Parsed instruction at 80005C70: or r0 r25 r20
Parsed instruction at 80005C74: stw r0 0x0(r30)
Parsed instruction at 80005C78: mr r3 r26
Parsed instruction at 80005C7C: bl __DBIsExceptionMarked
Parsed instruction at 80005C80: cmpwi r3 0x0
Parsed instruction at 80005C84: beq .L_80005CAC
Parsed instruction at 80005C88: mr r4 r20
Parsed instruction at 80005C8C: crclr cr1eq
Parsed instruction at 80005C90: addi r3 r29 0x170
Parsed instruction at 80005C94: bl DBPrintf
Parsed instruction at 80005C98: mr r3 r21
Parsed instruction at 80005C9C: mr r4 r31
Parsed instruction at 80005CA0: mr r5 r27
Parsed instruction at 80005CA4: bl memcpy
Parsed instruction at 80005CA8: b .L_80005D38
Parsed label: L_80005CAC:
Parsed instruction at 80005CAC: mr r4 r21
Parsed instruction at 80005CB0: b .L_80005CB4
Parsed label: L_80005CB4:
Parsed instruction at 80005CB4: cmplwi r27 0x0
Parsed instruction at 80005CB8: addi r3 r27 0x3
Parsed instruction at 80005CBC: srwi r3 r3 2
Parsed instruction at 80005CC0: ble .L_80005D38
Parsed instruction at 80005CC4: srwi r0 r3 3
Parsed instruction at 80005CC8: cmplwi r0 0x0
Parsed instruction at 80005CCC: mtctr r0
Parsed instruction at 80005CD0: beq .L_80005D24
Parsed instruction at 80005CD4: b .L_80005CD8
Parsed label: L_80005CD8:
Parsed instruction at 80005CD8: stw r22 0x0(r4)
Parsed instruction at 80005CDC: addi r4 r4 0x4
Parsed instruction at 80005CE0: stw r22 0x0(r4)
Parsed instruction at 80005CE4: addi r4 r4 0x4
Parsed instruction at 80005CE8: stw r22 0x0(r4)
Parsed instruction at 80005CEC: addi r4 r4 0x4
Parsed instruction at 80005CF0: stw r22 0x0(r4)
Parsed instruction at 80005CF4: addi r4 r4 0x4
Parsed instruction at 80005CF8: stw r22 0x0(r4)
Parsed instruction at 80005CFC: addi r4 r4 0x4
Parsed instruction at 80005D00: stw r22 0x0(r4)
Parsed instruction at 80005D04: addi r4 r4 0x4
Parsed instruction at 80005D08: stw r22 0x0(r4)
Parsed instruction at 80005D0C: addi r4 r4 0x4
Parsed instruction at 80005D10: stw r22 0x0(r4)
Parsed instruction at 80005D14: addi r4 r4 0x4
Parsed instruction at 80005D18: bdnz .L_80005CD8
Parsed instruction at 80005D1C: andi. r3 r3 0x7
Parsed instruction at 80005D20: beq .L_80005D38
Parsed label: L_80005D24:
Parsed instruction at 80005D24: mtctr r3
Parsed instruction at 80005D28: b .L_80005D2C
Parsed label: L_80005D2C:
Parsed instruction at 80005D2C: stw r22 0x0(r4)
Parsed instruction at 80005D30: addi r4 r4 0x4
Parsed instruction at 80005D34: bdnz .L_80005D2C
Parsed label: L_80005D38:
Parsed instruction at 80005D38: lwz r3 0x0(r28)
Parsed instruction at 80005D3C: mr r4 r24
Parsed instruction at 80005D40: mr r5 r23
Parsed instruction at 80005D44: addis r20 r3 0x8000
Parsed instruction at 80005D48: mr r3 r20
Parsed instruction at 80005D4C: bl memcpy
Parsed instruction at 80005D50: mr r3 r20
Parsed instruction at 80005D54: mr r4 r23
Parsed instruction at 80005D58: bl DCFlushRangeNoSync
Parsed instruction at 80005D5C: sync 
Parsed instruction at 80005D60: mr r3 r20
Parsed instruction at 80005D64: mr r4 r23
Parsed instruction at 80005D68: bl ICInvalidateRange
Parsed label: L_80005D6C:
Parsed instruction at 80005D6C: addi r28 r28 0x4
Parsed instruction at 80005D70: addi r26 r26 0x1
Parsed label: L_80005D74:
Parsed instruction at 80005D74: clrlwi r0 r26 24
Parsed instruction at 80005D78: cmplwi r0 0xf
Parsed instruction at 80005D7C: blt .L_80005C30
Parsed instruction at 80005D80: lis r3 0x8000
Parsed instruction at 80005D84: addi r0 r3 0x3000
Parsed instruction at 80005D88: stw r0 OSExceptionTable_8001EE78@sda21(r0)
Parsed instruction at 80005D8C: li r20 0x0
Parsed instruction at 80005D90: b .L_80005D94
Parsed label: L_80005D94:
Parsed instruction at 80005D94: lis r3 OSDefaultExceptionHandler@ha
Parsed instruction at 80005D98: addi r23 r3 OSDefaultExceptionHandler@l
Parsed instruction at 80005D9C: b .L_80005DA0
Parsed label: L_80005DA0:
Parsed instruction at 80005DA0: b .L_80005DB4
Parsed label: L_80005DA4:
Parsed instruction at 80005DA4: mr r3 r20
Parsed instruction at 80005DA8: mr r4 r23
Parsed instruction at 80005DAC: bl __OSSetExceptionHandler
Parsed instruction at 80005DB0: addi r20 r20 0x1
Parsed label: L_80005DB4:
Parsed instruction at 80005DB4: clrlwi r0 r20 24
Parsed instruction at 80005DB8: cmplwi r0 0xf
Parsed instruction at 80005DBC: blt .L_80005DA4
Parsed instruction at 80005DC0: stw r25 0x0(r30)
Parsed instruction at 80005DC4: addi r3 r29 0x1a0
Parsed instruction at 80005DC8: crclr cr1eq
Parsed instruction at 80005DCC: bl DBPrintf
Parsed instruction at 80005DD0: lmw r20 0x8(r1)
Parsed instruction at 80005DD4: lwz r0 0x3c(r1)
Parsed instruction at 80005DD8: addi r1 r1 0x38
Parsed instruction at 80005DDC: mtlr r0
Parsed instruction at 80005DE0: blr 
End of function: OSExceptionInit, 177 instructions
Parsed function: __OSDBIntegrator at 0x80005DE4
Parsed instruction at 80005DE4: li r5 0x40
Parsed instruction at 80005DE8: mflr r3
Parsed instruction at 80005DEC: stw r3 0xc(r5)
Parsed instruction at 80005DF0: lwz r3 0x8(r5)
Parsed instruction at 80005DF4: oris r3 r3 0x8000
Parsed instruction at 80005DF8: mtlr r3
Parsed instruction at 80005DFC: li r3 0x30
Parsed instruction at 80005E00: mtmsr r3
Parsed instruction at 80005E04: blr 
End of function: __OSDBIntegrator, 9 instructions
Parsed function: fn_80005E08 at 0x80005E08
Parsed instruction at 80005E08: bla 0x60
End of function: fn_80005E08, 1 instructions
Parsed function: __OSSetExceptionHandler at 0x80005E0C
Parsed instruction at 80005E0C: clrlwi r0 r3 24
Parsed instruction at 80005E10: lwz r3 OSExceptionTable_8001EE78@sda21(r0)
Parsed instruction at 80005E14: slwi r0 r0 2
Parsed instruction at 80005E18: add r5 r3 r0
Parsed instruction at 80005E1C: lwz r3 0x0(r5)
Parsed instruction at 80005E20: stw r4 0x0(r5)
Parsed instruction at 80005E24: blr 
End of function: __OSSetExceptionHandler, 7 instructions
Parsed function: __OSGetExceptionHandler at 0x80005E28
Parsed instruction at 80005E28: clrlwi r0 r3 24
Parsed instruction at 80005E2C: lwz r3 OSExceptionTable_8001EE78@sda21(r0)
Parsed instruction at 80005E30: slwi r0 r0 2
Parsed instruction at 80005E34: lwzx r3 r3 r0
Parsed instruction at 80005E38: blr 
End of function: __OSGetExceptionHandler, 5 instructions
Parsed function: OSExceptionVector at 0x80005E3C
Parsed instruction at 80005E3C: mtsprg 0 r4
Parsed instruction at 80005E40: lwz r4 0xc0(r0)
Parsed instruction at 80005E44: stw r3 0xc(r4)
Parsed instruction at 80005E48: mfsprg r3 0
Parsed instruction at 80005E4C: stw r3 0x10(r4)
Parsed instruction at 80005E50: stw r5 0x14(r4)
Parsed instruction at 80005E54: lhz r3 0x1a2(r4)
Parsed instruction at 80005E58: ori r3 r3 0x2
Parsed instruction at 80005E5C: sth r3 0x1a2(r4)
Parsed instruction at 80005E60: mfcr r3
Parsed instruction at 80005E64: stw r3 0x80(r4)
Parsed instruction at 80005E68: mflr r3
Parsed instruction at 80005E6C: stw r3 0x84(r4)
Parsed instruction at 80005E70: mfctr r3
Parsed instruction at 80005E74: stw r3 0x88(r4)
Parsed instruction at 80005E78: mfxer r3
Parsed instruction at 80005E7C: stw r3 0x8c(r4)
Parsed instruction at 80005E80: mfsrr0 r3
Parsed instruction at 80005E84: stw r3 0x198(r4)
Parsed instruction at 80005E88: mfsrr1 r3
Parsed instruction at 80005E8C: stw r3 0x19c(r4)
Parsed instruction at 80005E90: mr r5 r3
Warning: Unrecognized line: .sym __DBVECTOR, global
Parsed instruction at 80005E94: nop 
Parsed instruction at 80005E98: mfmsr r3
Parsed instruction at 80005E9C: ori r3 r3 0x30
Parsed instruction at 80005EA0: mtsrr1 r3
Warning: Unrecognized line: .sym __OSEVSetNumber, global
Parsed instruction at 80005EA4: li r3 0x0
Parsed instruction at 80005EA8: lwz r4 0xd4(r0)
Parsed instruction at 80005EAC: rlwinm. r5 r5 0 30 30
Parsed instruction at 80005EB0: bne .L_80005EC4
Parsed instruction at 80005EB4: lis r5 OSDefaultExceptionHandler@ha
Parsed instruction at 80005EB8: addi r5 r5 OSDefaultExceptionHandler@l
Parsed instruction at 80005EBC: mtsrr0 r5
Parsed instruction at 80005EC0: rfi 
Parsed label: L_80005EC4:
Parsed instruction at 80005EC4: clrlslwi r5 r3 24 2
Parsed instruction at 80005EC8: lwz r5 0x3000(r5)
Parsed instruction at 80005ECC: mtsrr0 r5
Parsed instruction at 80005ED0: rfi 
Warning: Unrecognized line: .sym __OSEVEnd, global
Parsed instruction at 80005ED4: nop 
End of function: OSExceptionVector, 40 instructions
Parsed function: OSDefaultExceptionHandler at 0x80005ED8
Parsed instruction at 80005ED8: stw r0 0x0(r4)
Parsed instruction at 80005EDC: stw r1 0x4(r4)
Parsed instruction at 80005EE0: stw r2 0x8(r4)
Parsed instruction at 80005EE4: stmw r6 0x18(r4)
Parsed instruction at 80005EE8: mfspr r0 GQR1
Parsed instruction at 80005EEC: stw r0 0x1a8(r4)
Parsed instruction at 80005EF0: mfspr r0 GQR2
Parsed instruction at 80005EF4: stw r0 0x1ac(r4)
Parsed instruction at 80005EF8: mfspr r0 GQR3
Parsed instruction at 80005EFC: stw r0 0x1b0(r4)
Parsed instruction at 80005F00: mfspr r0 GQR4
Parsed instruction at 80005F04: stw r0 0x1b4(r4)
Parsed instruction at 80005F08: mfspr r0 GQR5
Parsed instruction at 80005F0C: stw r0 0x1b8(r4)
Parsed instruction at 80005F10: mfspr r0 GQR6
Parsed instruction at 80005F14: stw r0 0x1bc(r4)
Parsed instruction at 80005F18: mfspr r0 GQR7
Parsed instruction at 80005F1C: stw r0 0x1c0(r4)
Parsed instruction at 80005F20: mfdsisr r5
Parsed instruction at 80005F24: mfdar r6
Parsed instruction at 80005F28: b __OSUnhandledException
End of function: OSDefaultExceptionHandler, 21 instructions
Parsed function: __OSPSInit at 0x80005F2C
Parsed instruction at 80005F2C: mflr r0
Parsed instruction at 80005F30: stw r0 0x4(r1)
Parsed instruction at 80005F34: stwu r1 -0x8(r1)
Parsed instruction at 80005F38: bl PPCMfhid2
Parsed instruction at 80005F3C: oris r3 r3 0xa000
Parsed instruction at 80005F40: bl PPCMthid2
Parsed instruction at 80005F44: bl ICFlashInvalidate
Parsed instruction at 80005F48: sync 
Parsed instruction at 80005F4C: li r3 0x0
Parsed instruction at 80005F50: mtspr GQR0 r3
Parsed instruction at 80005F54: lwz r0 0xc(r1)
Parsed instruction at 80005F58: addi r1 r1 0x8
Parsed instruction at 80005F5C: mtlr r0
Parsed instruction at 80005F60: blr 
End of function: __OSPSInit, 14 instructions
Parsed function: fn_80005F64 at 0x80005F64
Parsed instruction at 80005F64: lis r3 0xcc00
Parsed instruction at 80005F68: addi r3 r3 0x6000
Parsed instruction at 80005F6C: lwz r0 0x24(r3)
Parsed instruction at 80005F70: clrlwi r3 r0 24
Parsed instruction at 80005F74: blr 
End of function: fn_80005F64, 5 instructions
Parsed function: OSInitAlarm at 0x80005F78
Parsed instruction at 80005F78: mflr r0
Parsed instruction at 80005F7C: li r3 0x8
Parsed instruction at 80005F80: stw r0 0x4(r1)
Parsed instruction at 80005F84: stwu r1 -0x8(r1)
Parsed instruction at 80005F88: bl __OSGetExceptionHandler
Parsed instruction at 80005F8C: lis r4 DecrementerExceptionHandler@ha
Parsed instruction at 80005F90: addi r4 r4 DecrementerExceptionHandler@l
Parsed instruction at 80005F94: cmplw r3 r4
Parsed instruction at 80005F98: beq .L_80005FB4
Parsed instruction at 80005F9C: li r0 0x0
Parsed instruction at 80005FA0: li r3 AlarmQueue_8001EE88@sda21
Parsed instruction at 80005FA4: stw r0 0x4(r3)
Parsed instruction at 80005FA8: li r3 0x8
Parsed instruction at 80005FAC: stw r0 AlarmQueue_8001EE88@sda21(r0)
Parsed instruction at 80005FB0: bl __OSSetExceptionHandler
Parsed label: L_80005FB4:
Parsed instruction at 80005FB4: lwz r0 0xc(r1)
Parsed instruction at 80005FB8: addi r1 r1 0x8
Parsed instruction at 80005FBC: mtlr r0
Parsed instruction at 80005FC0: blr 
End of function: OSInitAlarm, 20 instructions
Parsed function: fn_80005FC4 at 0x80005FC4
Parsed instruction at 80005FC4: li r0 0x0
Parsed instruction at 80005FC8: stw r0 0x0(r3)
Parsed instruction at 80005FCC: blr 
End of function: fn_80005FC4, 3 instructions
Parsed function: InsertAlarm at 0x80005FD0
Parsed instruction at 80005FD0: mflr r0
Parsed instruction at 80005FD4: stw r0 0x4(r1)
Parsed instruction at 80005FD8: stwu r1 -0x40(r1)
Parsed instruction at 80005FDC: stmw r25 0x24(r1)
Parsed instruction at 80005FE0: li r28 0x0
Parsed instruction at 80005FE4: mr r29 r3
Parsed instruction at 80005FE8: xoris r4 r28 0x8000
Parsed instruction at 80005FEC: addi r25 r5 0x0
Parsed instruction at 80005FF0: addi r30 r6 0x0
Parsed instruction at 80005FF4: addi r31 r7 0x0
Parsed instruction at 80005FF8: lwz r0 0x18(r3)
Parsed instruction at 80005FFC: lwz r8 0x1c(r3)
Parsed instruction at 80006000: xoris r3 r0 0x8000
Parsed instruction at 80006004: subfc r0 r8 r28
Parsed instruction at 80006008: subfe r3 r3 r4
Parsed instruction at 8000600C: subfe r3 r4 r4
Parsed instruction at 80006010: neg. r3 r3
Parsed instruction at 80006014: beq .L_80006090
Parsed instruction at 80006018: bl __OSGetSystemTime
Parsed instruction at 8000601C: lwz r7 0x20(r29)
Parsed instruction at 80006020: xoris r5 r3 0x8000
Parsed instruction at 80006024: lwz r8 0x24(r29)
Parsed instruction at 80006028: xoris r6 r7 0x8000
Parsed instruction at 8000602C: subfc r0 r4 r8
Parsed instruction at 80006030: subfe r5 r5 r6
Parsed instruction at 80006034: subfe r5 r6 r6
Parsed instruction at 80006038: neg. r5 r5
Parsed instruction at 8000603C: addi r30 r8 0x0
Parsed instruction at 80006040: addi r25 r7 0x0
Parsed instruction at 80006044: beq .L_80006090
Parsed instruction at 80006048: lwz r27 0x18(r29)
Parsed instruction at 8000604C: subfc r4 r8 r4
Parsed instruction at 80006050: lwz r26 0x1c(r29)
Parsed instruction at 80006054: subfe r3 r7 r3
Parsed instruction at 80006058: addi r5 r27 0x0
Parsed instruction at 8000605C: addi r6 r26 0x0
Parsed instruction at 80006060: bl fn_800116AC
Parsed instruction at 80006064: li r0 0x1
Parsed instruction at 80006068: addc r5 r4 r0
Parsed instruction at 8000606C: mullw r4 r27 r5
Parsed instruction at 80006070: mulhwu r0 r26 r5
Parsed instruction at 80006074: adde r3 r3 r28
Parsed instruction at 80006078: add r4 r4 r0
Parsed instruction at 8000607C: mullw r0 r26 r3
Parsed instruction at 80006080: mullw r3 r26 r5
Parsed instruction at 80006084: add r0 r4 r0
Parsed instruction at 80006088: addc r30 r30 r3
Parsed instruction at 8000608C: adde r25 r25 r0
Parsed label: L_80006090:
Parsed instruction at 80006090: stw r31 0x0(r29)
Parsed instruction at 80006094: xoris r4 r25 0x8000
Parsed instruction at 80006098: stw r30 0xc(r29)
Parsed instruction at 8000609C: stw r25 0x8(r29)
Parsed instruction at 800060A0: lwz r6 AlarmQueue_8001EE88@sda21(r0)
Parsed instruction at 800060A4: b .L_80006168
Parsed label: L_800060A8:
Parsed instruction at 800060A8: lwz r0 0x8(r6)
Parsed instruction at 800060AC: lwz r5 0xc(r6)
Parsed instruction at 800060B0: xoris r3 r0 0x8000
Parsed instruction at 800060B4: subfc r0 r5 r30
Parsed instruction at 800060B8: subfe r3 r3 r4
Parsed instruction at 800060BC: subfe r3 r4 r4
Parsed instruction at 800060C0: neg. r3 r3
Parsed instruction at 800060C4: beq .L_80006164
Parsed instruction at 800060C8: lwz r0 0x10(r6)
Parsed instruction at 800060CC: stw r0 0x10(r29)
Parsed instruction at 800060D0: stw r29 0x10(r6)
Parsed instruction at 800060D4: stw r6 0x14(r29)
Parsed instruction at 800060D8: lwz r3 0x10(r29)
Parsed instruction at 800060DC: cmplwi r3 0x0
Parsed instruction at 800060E0: beq .L_800060EC
Parsed instruction at 800060E4: stw r29 0x14(r3)
Parsed instruction at 800060E8: b .L_8000620C
Parsed label: L_800060EC:
Parsed instruction at 800060EC: stw r29 AlarmQueue_8001EE88@sda21(r0)
Parsed instruction at 800060F0: bl __OSGetSystemTime
Parsed instruction at 800060F4: lwz r6 0xc(r29)
Parsed instruction at 800060F8: li r7 0x0
Parsed instruction at 800060FC: lwz r0 0x8(r29)
Parsed instruction at 80006100: xoris r5 r7 0x8000
Parsed instruction at 80006104: subfc r8 r4 r6
Parsed instruction at 80006108: subfe r0 r3 r0
Parsed instruction at 8000610C: xoris r6 r0 0x8000
Parsed instruction at 80006110: subfc r0 r7 r8
Parsed instruction at 80006114: subfe r5 r5 r6
Parsed instruction at 80006118: subfe r5 r6 r6
Parsed instruction at 8000611C: neg. r5 r5
Parsed instruction at 80006120: beq .L_80006130
Parsed instruction at 80006124: li r3 0x0
Parsed instruction at 80006128: bl PPCMtdec
Parsed instruction at 8000612C: b .L_8000620C
Parsed label: L_80006130:
Parsed instruction at 80006130: lis r4 0x8000
Parsed instruction at 80006134: xoris r3 r7 0x8000
Parsed instruction at 80006138: subfc r0 r4 r8
Parsed instruction at 8000613C: subfe r3 r3 r6
Parsed instruction at 80006140: subfe r3 r6 r6
Parsed instruction at 80006144: neg. r3 r3
Parsed instruction at 80006148: beq .L_80006158
Parsed instruction at 8000614C: mr r3 r8
Parsed instruction at 80006150: bl PPCMtdec
Parsed instruction at 80006154: b .L_8000620C
Parsed label: L_80006158:
Parsed instruction at 80006158: subi r3 r4 0x1
Parsed instruction at 8000615C: bl PPCMtdec
Parsed instruction at 80006160: b .L_8000620C
Parsed label: L_80006164:
Parsed instruction at 80006164: lwz r6 0x14(r6)
Parsed label: L_80006168:
Parsed instruction at 80006168: cmplwi r6 0x0
Parsed instruction at 8000616C: bne .L_800060A8
Parsed instruction at 80006170: li r30 0x0
Parsed instruction at 80006174: stw r30 0x14(r29)
Parsed instruction at 80006178: li r3 AlarmQueue_8001EE88@sda21
Parsed instruction at 8000617C: lwz r4 0x4(r3)
Parsed instruction at 80006180: stwu r29 0x4(r3)
Parsed instruction at 80006184: cmplwi r4 0x0
Parsed instruction at 80006188: stw r4 0x10(r29)
Parsed instruction at 8000618C: beq .L_80006198
Parsed instruction at 80006190: stw r29 0x14(r4)
Parsed instruction at 80006194: b .L_8000620C
Parsed label: L_80006198:
Parsed instruction at 80006198: stw r29 0x0(r3)
Parsed instruction at 8000619C: stw r29 AlarmQueue_8001EE88@sda21(r0)
Parsed instruction at 800061A0: bl __OSGetSystemTime
Parsed instruction at 800061A4: lwz r6 0xc(r29)
Parsed instruction at 800061A8: xoris r5 r30 0x8000
Parsed instruction at 800061AC: lwz r0 0x8(r29)
Parsed instruction at 800061B0: subfc r7 r4 r6
Parsed instruction at 800061B4: subfe r0 r3 r0
Parsed instruction at 800061B8: xoris r6 r0 0x8000
Parsed instruction at 800061BC: subfc r0 r30 r7
Parsed instruction at 800061C0: subfe r5 r5 r6
Parsed instruction at 800061C4: subfe r5 r6 r6
Parsed instruction at 800061C8: neg. r5 r5
Parsed instruction at 800061CC: beq .L_800061DC
Parsed instruction at 800061D0: li r3 0x0
Parsed instruction at 800061D4: bl PPCMtdec
Parsed instruction at 800061D8: b .L_8000620C
Parsed label: L_800061DC:
Parsed instruction at 800061DC: lis r4 0x8000
Parsed instruction at 800061E0: xoris r3 r30 0x8000
Parsed instruction at 800061E4: subfc r0 r4 r7
Parsed instruction at 800061E8: subfe r3 r3 r6
Parsed instruction at 800061EC: subfe r3 r6 r6
Parsed instruction at 800061F0: neg. r3 r3
Parsed instruction at 800061F4: beq .L_80006204
Parsed instruction at 800061F8: mr r3 r7
Parsed instruction at 800061FC: bl PPCMtdec
Parsed instruction at 80006200: b .L_8000620C
Parsed label: L_80006204:
Parsed instruction at 80006204: subi r3 r4 0x1
Parsed instruction at 80006208: bl PPCMtdec
Parsed label: L_8000620C:
Parsed instruction at 8000620C: lmw r25 0x24(r1)
Parsed instruction at 80006210: lwz r0 0x44(r1)
Parsed instruction at 80006214: addi r1 r1 0x40
Parsed instruction at 80006218: mtlr r0
Parsed instruction at 8000621C: blr 
End of function: InsertAlarm, 159 instructions
Parsed function: fn_80006220 at 0x80006220
Parsed instruction at 80006220: mflr r0
Parsed instruction at 80006224: stw r0 0x4(r1)
Parsed instruction at 80006228: stwu r1 -0x38(r1)
Parsed instruction at 8000622C: stmw r27 0x24(r1)
Parsed instruction at 80006230: addi r27 r3 0x0
Parsed instruction at 80006234: addi r29 r5 0x0
Parsed instruction at 80006238: addi r28 r6 0x0
Parsed instruction at 8000623C: addi r30 r7 0x0
Parsed instruction at 80006240: bl OSDisableInterrupts
Parsed instruction at 80006244: li r0 0x0
Parsed instruction at 80006248: stw r0 0x1c(r27)
Parsed instruction at 8000624C: mr r31 r3
Parsed instruction at 80006250: stw r0 0x18(r27)
Parsed instruction at 80006254: bl __OSGetSystemTime
Parsed instruction at 80006258: addc r6 r28 r4
Parsed instruction at 8000625C: adde r5 r29 r3
Parsed instruction at 80006260: addi r3 r27 0x0
Parsed instruction at 80006264: addi r7 r30 0x0
Parsed instruction at 80006268: bl InsertAlarm
Parsed instruction at 8000626C: mr r3 r31
Parsed instruction at 80006270: bl OSRestoreInterrupts
Parsed instruction at 80006274: lmw r27 0x24(r1)
Parsed instruction at 80006278: lwz r0 0x3c(r1)
Parsed instruction at 8000627C: addi r1 r1 0x38
Parsed instruction at 80006280: mtlr r0
Parsed instruction at 80006284: blr 
End of function: fn_80006220, 26 instructions
Parsed function: fn_80006288 at 0x80006288
Parsed instruction at 80006288: mflr r0
Parsed instruction at 8000628C: stw r0 0x4(r1)
Parsed instruction at 80006290: stwu r1 -0x20(r1)
Parsed instruction at 80006294: stw r31 0x1c(r1)
Parsed instruction at 80006298: stw r30 0x18(r1)
Parsed instruction at 8000629C: mr r30 r3
Parsed instruction at 800062A0: stw r29 0x14(r1)
Parsed instruction at 800062A4: bl OSDisableInterrupts
Parsed instruction at 800062A8: lwz r0 0x0(r30)
Parsed instruction at 800062AC: addi r31 r3 0x0
Parsed instruction at 800062B0: cmplwi r0 0x0
Parsed instruction at 800062B4: bne .L_800062C4
Parsed instruction at 800062B8: mr r3 r31
Parsed instruction at 800062BC: bl OSRestoreInterrupts
Parsed instruction at 800062C0: b .L_80006388
Parsed label: L_800062C4:
Parsed instruction at 800062C4: lwz r29 0x14(r30)
Parsed instruction at 800062C8: cmplwi r29 0x0
Parsed instruction at 800062CC: bne .L_800062E0
Parsed instruction at 800062D0: lwz r0 0x10(r30)
Parsed instruction at 800062D4: li r3 AlarmQueue_8001EE88@sda21
Parsed instruction at 800062D8: stw r0 0x4(r3)
Parsed instruction at 800062DC: b .L_800062E8
Parsed label: L_800062E0:
Parsed instruction at 800062E0: lwz r0 0x10(r30)
Parsed instruction at 800062E4: stw r0 0x10(r29)
Parsed label: L_800062E8:
Parsed instruction at 800062E8: lwz r3 0x10(r30)
Parsed instruction at 800062EC: cmplwi r3 0x0
Parsed instruction at 800062F0: beq .L_800062FC
Parsed instruction at 800062F4: stw r29 0x14(r3)
Parsed instruction at 800062F8: b .L_80006378
Parsed label: L_800062FC:
Parsed instruction at 800062FC: cmplwi r29 0x0
Parsed instruction at 80006300: stw r29 AlarmQueue_8001EE88@sda21(r0)
Parsed instruction at 80006304: beq .L_80006378
Parsed instruction at 80006308: bl __OSGetSystemTime
Parsed instruction at 8000630C: lwz r6 0xc(r29)
Parsed instruction at 80006310: li r7 0x0
Parsed instruction at 80006314: lwz r0 0x8(r29)
Parsed instruction at 80006318: xoris r5 r7 0x8000
Parsed instruction at 8000631C: subfc r8 r4 r6
Parsed instruction at 80006320: subfe r0 r3 r0
Parsed instruction at 80006324: xoris r6 r0 0x8000
Parsed instruction at 80006328: subfc r0 r7 r8
Parsed instruction at 8000632C: subfe r5 r5 r6
Parsed instruction at 80006330: subfe r5 r6 r6
Parsed instruction at 80006334: neg. r5 r5
Parsed instruction at 80006338: beq .L_80006348
Parsed instruction at 8000633C: li r3 0x0
Parsed instruction at 80006340: bl PPCMtdec
Parsed instruction at 80006344: b .L_80006378
Parsed label: L_80006348:
Parsed instruction at 80006348: lis r4 0x8000
Parsed instruction at 8000634C: xoris r3 r7 0x8000
Parsed instruction at 80006350: subfc r0 r4 r8
Parsed instruction at 80006354: subfe r3 r3 r6
Parsed instruction at 80006358: subfe r3 r6 r6
Parsed instruction at 8000635C: neg. r3 r3
Parsed instruction at 80006360: beq .L_80006370
Parsed instruction at 80006364: mr r3 r8
Parsed instruction at 80006368: bl PPCMtdec
Parsed instruction at 8000636C: b .L_80006378
Parsed label: L_80006370:
Parsed instruction at 80006370: subi r3 r4 0x1
Parsed instruction at 80006374: bl PPCMtdec
Parsed label: L_80006378:
Parsed instruction at 80006378: li r0 0x0
Parsed instruction at 8000637C: stw r0 0x0(r30)
Parsed instruction at 80006380: mr r3 r31
Parsed instruction at 80006384: bl OSRestoreInterrupts
Parsed label: L_80006388:
Parsed instruction at 80006388: lwz r0 0x24(r1)
Parsed instruction at 8000638C: lwz r31 0x1c(r1)
Parsed instruction at 80006390: lwz r30 0x18(r1)
Parsed instruction at 80006394: lwz r29 0x14(r1)
Parsed instruction at 80006398: addi r1 r1 0x20
Parsed instruction at 8000639C: mtlr r0
Parsed instruction at 800063A0: blr 
End of function: fn_80006288, 79 instructions
Parsed function: DecrementerExceptionCallback at 0x800063A4
Parsed instruction at 800063A4: mflr r0
Parsed instruction at 800063A8: stw r0 0x4(r1)
Parsed instruction at 800063AC: stwu r1 -0x2f0(r1)
Parsed instruction at 800063B0: stw r31 0x2ec(r1)
Parsed instruction at 800063B4: stw r30 0x2e8(r1)
Parsed instruction at 800063B8: stw r29 0x2e4(r1)
Parsed instruction at 800063BC: mr r29 r4
Parsed instruction at 800063C0: stw r28 0x2e0(r1)
Parsed instruction at 800063C4: bl __OSGetSystemTime
Parsed instruction at 800063C8: lwz r0 AlarmQueue_8001EE88@sda21(r0)
Parsed instruction at 800063CC: addi r28 r4 0x0
Parsed instruction at 800063D0: addi r30 r3 0x0
Parsed instruction at 800063D4: cmplwi r0 0x0
Parsed instruction at 800063D8: mr r31 r0
Parsed instruction at 800063DC: bne .L_800063E8
Parsed instruction at 800063E0: mr r3 r29
Parsed instruction at 800063E4: bl OSLoadContext
Parsed label: L_800063E8:
Parsed instruction at 800063E8: lwz r0 0x8(r31)
Parsed instruction at 800063EC: xoris r4 r30 0x8000
Parsed instruction at 800063F0: lwz r5 0xc(r31)
Parsed instruction at 800063F4: xoris r3 r0 0x8000
Parsed instruction at 800063F8: subfc r0 r5 r28
Parsed instruction at 800063FC: subfe r3 r3 r4
Parsed instruction at 80006400: subfe r3 r4 r4
Parsed instruction at 80006404: neg. r3 r3
Parsed instruction at 80006408: beq .L_80006484
Parsed instruction at 8000640C: bl __OSGetSystemTime
Parsed instruction at 80006410: lwz r6 0xc(r31)
Parsed instruction at 80006414: li r7 0x0
Parsed instruction at 80006418: lwz r0 0x8(r31)
Parsed instruction at 8000641C: xoris r5 r7 0x8000
Parsed instruction at 80006420: subfc r8 r4 r6
Parsed instruction at 80006424: subfe r0 r3 r0
Parsed instruction at 80006428: xoris r6 r0 0x8000
Parsed instruction at 8000642C: subfc r0 r7 r8
Parsed instruction at 80006430: subfe r5 r5 r6
Parsed instruction at 80006434: subfe r5 r6 r6
Parsed instruction at 80006438: neg. r5 r5
Parsed instruction at 8000643C: beq .L_8000644C
Parsed instruction at 80006440: li r3 0x0
Parsed instruction at 80006444: bl PPCMtdec
Parsed instruction at 80006448: b .L_8000647C
Parsed label: L_8000644C:
Parsed instruction at 8000644C: lis r4 0x8000
Parsed instruction at 80006450: xoris r3 r7 0x8000
Parsed instruction at 80006454: subfc r0 r4 r8
Parsed instruction at 80006458: subfe r3 r3 r6
Parsed instruction at 8000645C: subfe r3 r6 r6
Parsed instruction at 80006460: neg. r3 r3
Parsed instruction at 80006464: beq .L_80006474
Parsed instruction at 80006468: mr r3 r8
Parsed instruction at 8000646C: bl PPCMtdec
Parsed instruction at 80006470: b .L_8000647C
Parsed label: L_80006474:
Parsed instruction at 80006474: subi r3 r4 0x1
Parsed instruction at 80006478: bl PPCMtdec
Parsed label: L_8000647C:
Parsed instruction at 8000647C: mr r3 r29
Parsed instruction at 80006480: bl OSLoadContext
Parsed label: L_80006484:
Parsed instruction at 80006484: lwz r3 0x14(r31)
Parsed instruction at 80006488: cmplwi r3 0x0
Parsed instruction at 8000648C: stw r3 AlarmQueue_8001EE88@sda21(r0)
Parsed instruction at 80006490: bne .L_800064A4
Parsed instruction at 80006494: li r0 0x0
Parsed instruction at 80006498: li r3 AlarmQueue_8001EE88@sda21
Parsed instruction at 8000649C: stw r0 0x4(r3)
Parsed instruction at 800064A0: b .L_800064AC
Parsed label: L_800064A4:
Parsed instruction at 800064A4: li r0 0x0
Parsed instruction at 800064A8: stw r0 0x10(r3)
Parsed label: L_800064AC:
Parsed instruction at 800064AC: lwz r30 0x0(r31)
Parsed instruction at 800064B0: li r6 0x0
Parsed instruction at 800064B4: xoris r4 r6 0x8000
Parsed instruction at 800064B8: stw r6 0x0(r31)
Parsed instruction at 800064BC: lwz r0 0x18(r31)
Parsed instruction at 800064C0: lwz r5 0x1c(r31)
Parsed instruction at 800064C4: xoris r3 r0 0x8000
Parsed instruction at 800064C8: subfc r0 r5 r6
Parsed instruction at 800064CC: subfe r3 r3 r4
Parsed instruction at 800064D0: subfe r3 r4 r4
Parsed instruction at 800064D4: neg. r3 r3
Parsed instruction at 800064D8: beq .L_800064F0
Parsed instruction at 800064DC: addi r3 r31 0x0
Parsed instruction at 800064E0: addi r7 r30 0x0
Parsed instruction at 800064E4: li r6 0x0
Parsed instruction at 800064E8: li r5 0x0
Parsed instruction at 800064EC: bl InsertAlarm
Parsed label: L_800064F0:
Parsed instruction at 800064F0: lwz r28 AlarmQueue_8001EE88@sda21(r0)
Parsed instruction at 800064F4: cmplwi r28 0x0
Parsed instruction at 800064F8: beq .L_8000656C
Parsed instruction at 800064FC: bl __OSGetSystemTime
Parsed instruction at 80006500: lwz r6 0xc(r28)
Parsed instruction at 80006504: li r7 0x0
Parsed instruction at 80006508: lwz r0 0x8(r28)
Parsed instruction at 8000650C: xoris r5 r7 0x8000
Parsed instruction at 80006510: subfc r8 r4 r6
Parsed instruction at 80006514: subfe r0 r3 r0
Parsed instruction at 80006518: xoris r6 r0 0x8000
Parsed instruction at 8000651C: subfc r0 r7 r8
Parsed instruction at 80006520: subfe r5 r5 r6
Parsed instruction at 80006524: subfe r5 r6 r6
Parsed instruction at 80006528: neg. r5 r5
Parsed instruction at 8000652C: beq .L_8000653C
Parsed instruction at 80006530: li r3 0x0
Parsed instruction at 80006534: bl PPCMtdec
Parsed instruction at 80006538: b .L_8000656C
Parsed label: L_8000653C:
Parsed instruction at 8000653C: lis r4 0x8000
Parsed instruction at 80006540: xoris r3 r7 0x8000
Parsed instruction at 80006544: subfc r0 r4 r8
Parsed instruction at 80006548: subfe r3 r3 r6
Parsed instruction at 8000654C: subfe r3 r6 r6
Parsed instruction at 80006550: neg. r3 r3
Parsed instruction at 80006554: beq .L_80006564
Parsed instruction at 80006558: mr r3 r8
Parsed instruction at 8000655C: bl PPCMtdec
Parsed instruction at 80006560: b .L_8000656C
Parsed label: L_80006564:
Parsed instruction at 80006564: subi r3 r4 0x1
Parsed instruction at 80006568: bl PPCMtdec
Parsed label: L_8000656C:
Parsed instruction at 8000656C: bl OSDisableScheduler
Parsed instruction at 80006570: addi r3 r1 0x18
Parsed instruction at 80006574: bl OSClearContext
Parsed instruction at 80006578: addi r3 r1 0x18
Parsed instruction at 8000657C: bl OSSetCurrentContext
Parsed instruction at 80006580: addi r12 r30 0x0
Parsed instruction at 80006584: mtlr r12
Parsed instruction at 80006588: addi r3 r31 0x0
Parsed instruction at 8000658C: addi r4 r29 0x0
Parsed instruction at 80006590: blrl 
Parsed instruction at 80006594: addi r3 r1 0x18
Parsed instruction at 80006598: bl OSClearContext
Parsed instruction at 8000659C: mr r3 r29
Parsed instruction at 800065A0: bl OSSetCurrentContext
Parsed instruction at 800065A4: bl OSEnableScheduler
Parsed instruction at 800065A8: bl __OSReschedule
Parsed instruction at 800065AC: mr r3 r29
Parsed instruction at 800065B0: bl OSLoadContext
Parsed instruction at 800065B4: lwz r0 0x2f4(r1)
Parsed instruction at 800065B8: lwz r31 0x2ec(r1)
Parsed instruction at 800065BC: lwz r30 0x2e8(r1)
Parsed instruction at 800065C0: lwz r29 0x2e4(r1)
Parsed instruction at 800065C4: lwz r28 0x2e0(r1)
Parsed instruction at 800065C8: addi r1 r1 0x2f0
Parsed instruction at 800065CC: mtlr r0
Parsed instruction at 800065D0: blr 
End of function: DecrementerExceptionCallback, 151 instructions
Parsed function: DecrementerExceptionHandler at 0x800065D4
Parsed instruction at 800065D4: stw r0 0x0(r4)
Parsed instruction at 800065D8: stw r1 0x4(r4)
Parsed instruction at 800065DC: stw r2 0x8(r4)
Parsed instruction at 800065E0: stmw r6 0x18(r4)
Parsed instruction at 800065E4: mfspr r0 GQR1
Parsed instruction at 800065E8: stw r0 0x1a8(r4)
Parsed instruction at 800065EC: mfspr r0 GQR2
Parsed instruction at 800065F0: stw r0 0x1ac(r4)
Parsed instruction at 800065F4: mfspr r0 GQR3
Parsed instruction at 800065F8: stw r0 0x1b0(r4)
Parsed instruction at 800065FC: mfspr r0 GQR4
Parsed instruction at 80006600: stw r0 0x1b4(r4)
Parsed instruction at 80006604: mfspr r0 GQR5
Parsed instruction at 80006608: stw r0 0x1b8(r4)
Parsed instruction at 8000660C: mfspr r0 GQR6
Parsed instruction at 80006610: stw r0 0x1bc(r4)
Parsed instruction at 80006614: mfspr r0 GQR7
Parsed instruction at 80006618: stw r0 0x1c0(r4)
Parsed instruction at 8000661C: b DecrementerExceptionCallback
End of function: DecrementerExceptionHandler, 19 instructions
Parsed function: OSGetArenaHi at 0x80006620
Parsed instruction at 80006620: lwz r3 __OSArenaHi_8001EE90@sda21(r0)
Parsed instruction at 80006624: blr 
End of function: OSGetArenaHi, 2 instructions
Parsed function: OSGetArenaLo at 0x80006628
Parsed instruction at 80006628: lwz r3 __OSArenaLo_8001EE08@sda21(r0)
Parsed instruction at 8000662C: blr 
End of function: OSGetArenaLo, 2 instructions
Parsed function: OSSetArenaHi at 0x80006630
Parsed instruction at 80006630: stw r3 __OSArenaHi_8001EE90@sda21(r0)
Parsed instruction at 80006634: blr 
End of function: OSSetArenaHi, 2 instructions
Parsed function: OSSetArenaLo at 0x80006638
Parsed instruction at 80006638: stw r3 __OSArenaLo_8001EE08@sda21(r0)
Parsed instruction at 8000663C: blr 
End of function: OSSetArenaLo, 2 instructions
Parsed function: __OSInitAudioSystem at 0x80006640
Parsed instruction at 80006640: mflr r0
Parsed instruction at 80006644: stw r0 0x4(r1)
Parsed instruction at 80006648: stwu r1 -0x30(r1)
Parsed instruction at 8000664C: stmw r25 0x14(r1)
Parsed instruction at 80006650: bl OSGetArenaHi
Parsed instruction at 80006654: lis r4 0x8100
Parsed instruction at 80006658: li r5 0x80
Parsed instruction at 8000665C: subi r3 r3 0x80
Parsed instruction at 80006660: bl memcpy
Parsed instruction at 80006664: lis r3 DSPInitCode_8001A8A0@ha
Parsed instruction at 80006668: addi r4 r3 DSPInitCode_8001A8A0@l
Parsed instruction at 8000666C: lis r3 0x8100
Parsed instruction at 80006670: li r5 0x80
Parsed instruction at 80006674: bl memcpy
Parsed instruction at 80006678: lis r3 0x8100
Parsed instruction at 8000667C: li r4 0x80
Parsed instruction at 80006680: bl DCFlushRange
Parsed instruction at 80006684: lis r3 0xcc00
Parsed instruction at 80006688: addi r3 r3 0x5000
Parsed instruction at 8000668C: li r0 0x43
Parsed instruction at 80006690: sth r0 0x12(r3)
Parsed instruction at 80006694: addi r31 r3 0xa
Parsed instruction at 80006698: li r0 0x8ac
Parsed instruction at 8000669C: sth r0 0xa(r3)
Parsed instruction at 800066A0: lhz r0 0xa(r3)
Parsed instruction at 800066A4: ori r0 r0 0x1
Parsed instruction at 800066A8: sth r0 0xa(r3)
Parsed label: L_800066AC:
Parsed instruction at 800066AC: lhz r0 0x0(r31)
Parsed instruction at 800066B0: clrlwi. r0 r0 31
Parsed instruction at 800066B4: bne .L_800066AC
Parsed instruction at 800066B8: li r0 0x0
Parsed instruction at 800066BC: lis r4 0xcc00
Parsed instruction at 800066C0: sth r0 0x5000(r4)
Parsed label: L_800066C4:
Parsed instruction at 800066C4: addi r30 r4 0x5000
Parsed instruction at 800066C8: lhzu r3 0x4(r30)
Parsed instruction at 800066CC: addi r29 r4 0x5000
Parsed instruction at 800066D0: lhzu r0 0x6(r29)
Parsed instruction at 800066D4: rlwimi r0 r3 16 0 15
Parsed instruction at 800066D8: clrrwi. r0 r0 31
Parsed instruction at 800066DC: bne .L_800066C4
Parsed instruction at 800066E0: lis r3 0xcc00
Parsed instruction at 800066E4: lis r0 0x100
Parsed instruction at 800066E8: addi r27 r3 0x5000
Parsed instruction at 800066EC: stwu r0 0x20(r27)
Parsed instruction at 800066F0: li r0 0x0
Parsed instruction at 800066F4: addi r26 r3 0x5000
Parsed instruction at 800066F8: stwu r0 0x24(r26)
Parsed instruction at 800066FC: li r0 0x20
Parsed instruction at 80006700: addi r25 r3 0x5000
Parsed instruction at 80006704: stwu r0 0x28(r25)
Parsed instruction at 80006708: lhz r3 0x0(r31)
Parsed instruction at 8000670C: b .L_80006714
Parsed label: L_80006710:
Parsed instruction at 80006710: lhz r3 0x0(r31)
Parsed label: L_80006714:
Parsed instruction at 80006714: rlwinm. r0 r3 0 26 26
Parsed instruction at 80006718: beq .L_80006710
Parsed instruction at 8000671C: sth r3 0x0(r31)
Parsed instruction at 80006720: bl OSGetTick
Parsed instruction at 80006724: mr r28 r3
Parsed label: L_80006728:
Parsed instruction at 80006728: bl OSGetTick
Parsed instruction at 8000672C: subf r0 r28 r3
Parsed instruction at 80006730: cmpwi r0 0x892
Parsed instruction at 80006734: blt .L_80006728
Parsed instruction at 80006738: lis r0 0x100
Parsed instruction at 8000673C: stw r0 0x0(r27)
Parsed instruction at 80006740: li r3 0x0
Parsed instruction at 80006744: li r0 0x20
Parsed instruction at 80006748: stw r3 0x0(r26)
Parsed instruction at 8000674C: stw r0 0x0(r25)
Parsed instruction at 80006750: lhz r3 0x0(r31)
Parsed instruction at 80006754: b .L_8000675C
Parsed label: L_80006758:
Parsed instruction at 80006758: lhz r3 0x0(r31)
Parsed label: L_8000675C:
Parsed instruction at 8000675C: rlwinm. r0 r3 0 26 26
Parsed instruction at 80006760: beq .L_80006758
Parsed instruction at 80006764: sth r3 0x0(r31)
Parsed instruction at 80006768: lhz r0 0x0(r31)
Parsed instruction at 8000676C: rlwinm r0 r0 0 21 19
Parsed instruction at 80006770: sth r0 0x0(r31)
Parsed label: L_80006774:
Parsed instruction at 80006774: lhz r0 0x0(r31)
Parsed instruction at 80006778: rlwinm. r0 r0 0 21 21
Parsed instruction at 8000677C: bne .L_80006774
Parsed instruction at 80006780: lhz r0 0x0(r31)
Parsed instruction at 80006784: rlwinm r0 r0 0 30 28
Parsed instruction at 80006788: sth r0 0x0(r31)
Parsed instruction at 8000678C: lhz r0 0x0(r30)
Parsed instruction at 80006790: b .L_80006798
Parsed label: L_80006794:
Parsed instruction at 80006794: lhz r0 0x0(r30)
Parsed label: L_80006798:
Parsed instruction at 80006798: clrlwi r5 r0 16
Parsed instruction at 8000679C: rlwinm. r0 r0 0 16 16
Parsed instruction at 800067A0: beq .L_80006794
Parsed instruction at 800067A4: lhz r0 0x0(r31)
Parsed instruction at 800067A8: lhz r4 0x0(r29)
Parsed instruction at 800067AC: ori r0 r0 0x4
Parsed instruction at 800067B0: sth r0 0x0(r31)
Parsed instruction at 800067B4: li r0 0x8ac
Parsed instruction at 800067B8: sth r0 0x0(r31)
Parsed instruction at 800067BC: lhz r0 0x0(r31)
Parsed instruction at 800067C0: ori r0 r0 0x1
Parsed instruction at 800067C4: sth r0 0x0(r31)
Parsed label: L_800067C8:
Parsed instruction at 800067C8: lhz r0 0x0(r31)
Parsed instruction at 800067CC: clrlwi. r0 r0 31
Parsed instruction at 800067D0: bne .L_800067C8
Parsed instruction at 800067D4: bl OSGetArenaHi
Parsed instruction at 800067D8: subi r4 r3 0x80
Parsed instruction at 800067DC: lis r3 0x8100
Parsed instruction at 800067E0: li r5 0x80
Parsed instruction at 800067E4: bl memcpy
Parsed instruction at 800067E8: lmw r25 0x14(r1)
Parsed instruction at 800067EC: lwz r0 0x34(r1)
Parsed instruction at 800067F0: addi r1 r1 0x30
Parsed instruction at 800067F4: mtlr r0
Parsed instruction at 800067F8: blr 
End of function: __OSInitAudioSystem, 122 instructions
Parsed function: __OSStopAudioSystem at 0x800067FC
Parsed instruction at 800067FC: mflr r0
Parsed instruction at 80006800: lis r3 0xcc00
Parsed instruction at 80006804: stw r0 0x4(r1)
Parsed instruction at 80006808: li r0 0x804
Parsed instruction at 8000680C: stwu r1 -0x10(r1)
Parsed instruction at 80006810: stw r31 0xc(r1)
Parsed instruction at 80006814: addi r31 r3 0x5000
Parsed instruction at 80006818: addi r3 r3 0x5000
Parsed instruction at 8000681C: stw r30 0x8(r1)
Parsed instruction at 80006820: sth r0 0xa(r31)
Parsed instruction at 80006824: lhz r0 0x36(r3)
Parsed instruction at 80006828: rlwinm r0 r0 0 17 15
Parsed instruction at 8000682C: sth r0 0x36(r3)
Parsed instruction at 80006830: lhzu r0 0xa(r31)
Parsed instruction at 80006834: b .L_8000683C
Parsed label: L_80006838:
Parsed instruction at 80006838: lhz r0 0x0(r31)
Parsed label: L_8000683C:
Parsed instruction at 8000683C: rlwinm. r0 r0 0 21 21
Parsed instruction at 80006840: bne .L_80006838
Parsed instruction at 80006844: lhz r0 0x0(r31)
Parsed instruction at 80006848: b .L_80006850
Parsed label: L_8000684C:
Parsed instruction at 8000684C: lhz r0 0x0(r31)
Parsed label: L_80006850:
Parsed instruction at 80006850: rlwinm. r0 r0 0 22 22
Parsed instruction at 80006854: bne .L_8000684C
Parsed instruction at 80006858: li r0 0x8ac
Parsed instruction at 8000685C: lis r3 0xcc00
Parsed instruction at 80006860: sth r0 0x0(r31)
Parsed instruction at 80006864: li r0 0x0
Parsed instruction at 80006868: sth r0 0x5000(r3)
Parsed instruction at 8000686C: addi r4 r3 0x5000
Parsed label: L_80006870:
Parsed instruction at 80006870: lhz r3 0x4(r4)
Parsed instruction at 80006874: lhz r0 0x6(r4)
Parsed instruction at 80006878: rlwimi r0 r3 16 0 15
Parsed instruction at 8000687C: clrrwi. r0 r0 31
Parsed instruction at 80006880: bne .L_80006870
Parsed instruction at 80006884: bl OSGetTick
Parsed instruction at 80006888: mr r30 r3
Parsed label: L_8000688C:
Parsed instruction at 8000688C: bl OSGetTick
Parsed instruction at 80006890: subf r0 r30 r3
Parsed instruction at 80006894: cmpwi r0 0x2c
Parsed instruction at 80006898: blt .L_8000688C
Parsed instruction at 8000689C: lhz r0 0x0(r31)
Parsed instruction at 800068A0: ori r0 r0 0x1
Parsed instruction at 800068A4: sth r0 0x0(r31)
Parsed instruction at 800068A8: lhz r0 0x0(r31)
Parsed instruction at 800068AC: b .L_800068B4
Parsed label: L_800068B0:
Parsed instruction at 800068B0: lhz r0 0x0(r31)
Parsed label: L_800068B4:
Parsed instruction at 800068B4: clrlwi. r0 r0 31
Parsed instruction at 800068B8: bne .L_800068B0
Parsed instruction at 800068BC: lwz r0 0x14(r1)
Parsed instruction at 800068C0: lwz r31 0xc(r1)
Parsed instruction at 800068C4: lwz r30 0x8(r1)
Parsed instruction at 800068C8: addi r1 r1 0x10
Parsed instruction at 800068CC: mtlr r0
Parsed instruction at 800068D0: blr 
End of function: __OSStopAudioSystem, 62 instructions
Parsed function: DCEnable at 0x800068D4
Parsed instruction at 800068D4: sync 
Parsed instruction at 800068D8: mfspr r3 HID0
Parsed instruction at 800068DC: ori r3 r3 0x4000
Parsed instruction at 800068E0: mtspr HID0 r3
Parsed instruction at 800068E4: blr 
End of function: DCEnable, 5 instructions
Parsed function: DCInvalidateRange at 0x800068E8
Parsed instruction at 800068E8: cmplwi r4 0x0
Parsed instruction at 800068EC: blelr 
Parsed instruction at 800068F0: clrlwi. r5 r3 27
Parsed instruction at 800068F4: beq .L_800068FC
Parsed instruction at 800068F8: addi r4 r4 0x20
Parsed label: L_800068FC:
Parsed instruction at 800068FC: addi r4 r4 0x1f
Parsed instruction at 80006900: srwi r4 r4 5
Parsed instruction at 80006904: mtctr r4
Parsed label: L_80006908:
Parsed instruction at 80006908: dcbi r0 r3
Parsed instruction at 8000690C: addi r3 r3 0x20
Parsed instruction at 80006910: bdnz .L_80006908
Parsed instruction at 80006914: blr 
End of function: DCInvalidateRange, 14 instructions
Parsed function: DCFlushRange at 0x80006918
Parsed instruction at 80006918: cmplwi r4 0x0
Parsed instruction at 8000691C: blelr 
Parsed instruction at 80006920: clrlwi. r5 r3 27
Parsed instruction at 80006924: beq .L_8000692C
Parsed instruction at 80006928: addi r4 r4 0x20
Parsed label: L_8000692C:
Parsed instruction at 8000692C: addi r4 r4 0x1f
Parsed instruction at 80006930: srwi r4 r4 5
Parsed instruction at 80006934: mtctr r4
Parsed label: L_80006938:
Parsed instruction at 80006938: dcbf r0 r3
Parsed instruction at 8000693C: addi r3 r3 0x20
Parsed instruction at 80006940: bdnz .L_80006938
Parsed instruction at 80006944: sc 
Parsed instruction at 80006948: blr 
End of function: DCFlushRange, 15 instructions
Parsed function: fn_8000694C at 0x8000694C
Parsed instruction at 8000694C: cmplwi r4 0x0
Parsed instruction at 80006950: blelr 
Parsed instruction at 80006954: clrlwi. r5 r3 27
Parsed instruction at 80006958: beq .L_80006960
Parsed instruction at 8000695C: addi r4 r4 0x20
Parsed label: L_80006960:
Parsed instruction at 80006960: addi r4 r4 0x1f
Parsed instruction at 80006964: srwi r4 r4 5
Parsed instruction at 80006968: mtctr r4
Parsed label: L_8000696C:
Parsed instruction at 8000696C: dcbst r0 r3
Parsed instruction at 80006970: addi r3 r3 0x20
Parsed instruction at 80006974: bdnz .L_8000696C
Parsed instruction at 80006978: sc 
Parsed instruction at 8000697C: blr 
End of function: fn_8000694C, 15 instructions
Parsed function: DCFlushRangeNoSync at 0x80006980
Parsed instruction at 80006980: cmplwi r4 0x0
Parsed instruction at 80006984: blelr 
Parsed instruction at 80006988: clrlwi. r5 r3 27
Parsed instruction at 8000698C: beq .L_80006994
Parsed instruction at 80006990: addi r4 r4 0x20
Parsed label: L_80006994:
Parsed instruction at 80006994: addi r4 r4 0x1f
Parsed instruction at 80006998: srwi r4 r4 5
Parsed instruction at 8000699C: mtctr r4
Parsed label: L_800069A0:
Parsed instruction at 800069A0: dcbf r0 r3
Parsed instruction at 800069A4: addi r3 r3 0x20
Parsed instruction at 800069A8: bdnz .L_800069A0
Parsed instruction at 800069AC: blr 
End of function: DCFlushRangeNoSync, 14 instructions
Parsed function: ICInvalidateRange at 0x800069B0
Parsed instruction at 800069B0: cmplwi r4 0x0
Parsed instruction at 800069B4: blelr 
Parsed instruction at 800069B8: clrlwi. r5 r3 27
Parsed instruction at 800069BC: beq .L_800069C4
Parsed instruction at 800069C0: addi r4 r4 0x20
Parsed label: L_800069C4:
Parsed instruction at 800069C4: addi r4 r4 0x1f
Parsed instruction at 800069C8: srwi r4 r4 5
Parsed instruction at 800069CC: mtctr r4
Parsed label: L_800069D0:
Parsed instruction at 800069D0: icbi r0 r3
Parsed instruction at 800069D4: addi r3 r3 0x20
Parsed instruction at 800069D8: bdnz .L_800069D0
Parsed instruction at 800069DC: sync 
Parsed instruction at 800069E0: isync 
Parsed instruction at 800069E4: blr 
End of function: ICInvalidateRange, 16 instructions
Parsed function: ICFlashInvalidate at 0x800069E8
Parsed instruction at 800069E8: mfspr r3 HID0
Parsed instruction at 800069EC: ori r3 r3 0x800
Parsed instruction at 800069F0: mtspr HID0 r3
Parsed instruction at 800069F4: blr 
End of function: ICFlashInvalidate, 4 instructions
Parsed function: ICEnable at 0x800069F8
Parsed instruction at 800069F8: isync 
Parsed instruction at 800069FC: mfspr r3 HID0
Parsed instruction at 80006A00: ori r3 r3 0x8000
Parsed instruction at 80006A04: mtspr HID0 r3
Parsed instruction at 80006A08: blr 
End of function: ICEnable, 5 instructions
Parsed function: LCDisable at 0x80006A0C
Parsed instruction at 80006A0C: lis r3 0xe000
Parsed instruction at 80006A10: li r4 0x200
Parsed instruction at 80006A14: mtctr r4
Parsed label: L_80006A18:
Parsed instruction at 80006A18: dcbi r0 r3
Parsed instruction at 80006A1C: addi r3 r3 0x20
Parsed instruction at 80006A20: bdnz .L_80006A18
Parsed instruction at 80006A24: mfspr r4 HID2
Parsed instruction at 80006A28: rlwinm r4 r4 0 4 2
Parsed instruction at 80006A2C: mtspr HID2 r4
Parsed instruction at 80006A30: blr 
End of function: LCDisable, 11 instructions
Parsed function: L2GlobalInvalidate at 0x80006A34
Parsed instruction at 80006A34: mflr r0
Parsed instruction at 80006A38: stw r0 0x4(r1)
Parsed instruction at 80006A3C: stwu r1 -0x10(r1)
Parsed instruction at 80006A40: stw r31 0xc(r1)
Parsed instruction at 80006A44: sync 
Parsed instruction at 80006A48: bl PPCMfl2cr
Parsed instruction at 80006A4C: clrlwi r3 r3 1
Parsed instruction at 80006A50: bl PPCMtl2cr
Parsed instruction at 80006A54: sync 
Parsed instruction at 80006A58: bl PPCMfl2cr
Parsed instruction at 80006A5C: oris r3 r3 0x20
Parsed instruction at 80006A60: bl PPCMtl2cr
Parsed instruction at 80006A64: b .L_80006A68
Parsed label: L_80006A68:
Parsed instruction at 80006A68: b .L_80006A6C
Parsed label: L_80006A6C:
Parsed instruction at 80006A6C: bl PPCMfl2cr
Parsed instruction at 80006A70: clrlwi r0 r3 31
Parsed instruction at 80006A74: cmplwi r0 0x0
Parsed instruction at 80006A78: bne .L_80006A6C
Parsed instruction at 80006A7C: bl PPCMfl2cr
Parsed instruction at 80006A80: rlwinm r3 r3 0 11 9
Parsed instruction at 80006A84: bl PPCMtl2cr
Parsed instruction at 80006A88: b .L_80006A8C
Parsed label: L_80006A8C:
Parsed instruction at 80006A8C: lis r3 "@69_8001A920"@ha
Parsed instruction at 80006A90: addi r31 r3 "@69_8001A920"@l
Parsed instruction at 80006A94: b .L_80006A98
Parsed label: L_80006A98:
Parsed instruction at 80006A98: b .L_80006AA8
Parsed label: L_80006A9C:
Parsed instruction at 80006A9C: mr r3 r31
Parsed instruction at 80006AA0: crclr cr1eq
Parsed instruction at 80006AA4: bl DBPrintf
Parsed label: L_80006AA8:
Parsed instruction at 80006AA8: bl PPCMfl2cr
Parsed instruction at 80006AAC: clrlwi r0 r3 31
Parsed instruction at 80006AB0: cmplwi r0 0x0
Parsed instruction at 80006AB4: bne .L_80006A9C
Parsed instruction at 80006AB8: lwz r0 0x14(r1)
Parsed instruction at 80006ABC: lwz r31 0xc(r1)
Parsed instruction at 80006AC0: addi r1 r1 0x10
Parsed instruction at 80006AC4: mtlr r0
Parsed instruction at 80006AC8: blr 
End of function: L2GlobalInvalidate, 44 instructions
Parsed function: DMAErrorHandler at 0x80006ACC
Parsed instruction at 80006ACC: mflr r0
Parsed instruction at 80006AD0: stw r0 0x4(r1)
Parsed instruction at 80006AD4: stwu r1 -0x80(r1)
Parsed instruction at 80006AD8: stw r31 0x7c(r1)
Parsed instruction at 80006ADC: stw r30 0x78(r1)
Parsed instruction at 80006AE0: stw r29 0x74(r1)
Parsed instruction at 80006AE4: bne cr1 .L_80006B08
Parsed instruction at 80006AE8: stfd f1 0x28(r1)
Parsed instruction at 80006AEC: stfd f2 0x30(r1)
Parsed instruction at 80006AF0: stfd f3 0x38(r1)
Parsed instruction at 80006AF4: stfd f4 0x40(r1)
Parsed instruction at 80006AF8: stfd f5 0x48(r1)
Parsed instruction at 80006AFC: stfd f6 0x50(r1)
Parsed instruction at 80006B00: stfd f7 0x58(r1)
Parsed instruction at 80006B04: stfd f8 0x60(r1)
Parsed label: L_80006B08:
Parsed instruction at 80006B08: stw r3 0x8(r1)
Parsed instruction at 80006B0C: stw r4 0xc(r1)
Parsed instruction at 80006B10: stw r5 0x10(r1)
Parsed instruction at 80006B14: stw r6 0x14(r1)
Parsed instruction at 80006B18: stw r7 0x18(r1)
Parsed instruction at 80006B1C: stw r8 0x1c(r1)
Parsed instruction at 80006B20: stw r9 0x20(r1)
Parsed instruction at 80006B24: stw r10 0x24(r1)
Parsed instruction at 80006B28: mr r29 r4
Parsed instruction at 80006B2C: lis r3 "@69_8001A920"@ha
Parsed instruction at 80006B30: addi r31 r3 "@69_8001A920"@l
Parsed instruction at 80006B34: bl PPCMfhid2
Parsed instruction at 80006B38: mr r30 r3
Parsed instruction at 80006B3C: crclr cr1eq
Parsed instruction at 80006B40: addi r3 r31 0x2c
Parsed instruction at 80006B44: bl OSReport
Parsed instruction at 80006B48: lwz r5 0x19c(r29)
Parsed instruction at 80006B4C: mr r4 r30
Parsed instruction at 80006B50: addi r3 r31 0x44
Parsed instruction at 80006B54: crclr cr1eq
Parsed instruction at 80006B58: bl OSReport
Parsed instruction at 80006B5C: rlwinm r0 r30 0 8 11
Parsed instruction at 80006B60: cmplwi r0 0x0
Parsed instruction at 80006B64: beq .L_80006B78
Parsed instruction at 80006B68: lwz r0 0x19c(r29)
Parsed instruction at 80006B6C: rlwinm r0 r0 0 10 10
Parsed instruction at 80006B70: cmplwi r0 0x0
Parsed instruction at 80006B74: bne .L_80006B90
Parsed label: L_80006B78:
Parsed instruction at 80006B78: addi r3 r31 0x60
Parsed instruction at 80006B7C: crclr cr1eq
Parsed instruction at 80006B80: bl OSReport
Parsed instruction at 80006B84: mr r3 r29
Parsed instruction at 80006B88: bl OSDumpContext
Parsed instruction at 80006B8C: bl PPCHalt
Parsed label: L_80006B90:
Parsed instruction at 80006B90: addi r3 r31 0x90
Parsed instruction at 80006B94: crclr cr1eq
Parsed instruction at 80006B98: bl OSReport
Parsed instruction at 80006B9C: addi r3 r31 0xcc
Parsed instruction at 80006BA0: crclr cr1eq
Parsed instruction at 80006BA4: bl OSReport
Parsed instruction at 80006BA8: rlwinm r0 r30 0 8 8
Parsed instruction at 80006BAC: cmplwi r0 0x0
Parsed instruction at 80006BB0: beq .L_80006BC0
Parsed instruction at 80006BB4: addi r3 r31 0x104
Parsed instruction at 80006BB8: crclr cr1eq
Parsed instruction at 80006BBC: bl OSReport
Parsed label: L_80006BC0:
Parsed instruction at 80006BC0: rlwinm r0 r30 0 9 9
Parsed instruction at 80006BC4: cmplwi r0 0x0
Parsed instruction at 80006BC8: beq .L_80006BD8
Parsed instruction at 80006BCC: addi r3 r31 0x144
Parsed instruction at 80006BD0: crclr cr1eq
Parsed instruction at 80006BD4: bl OSReport
Parsed label: L_80006BD8:
Parsed instruction at 80006BD8: rlwinm r0 r30 0 10 10
Parsed instruction at 80006BDC: cmplwi r0 0x0
Parsed instruction at 80006BE0: beq .L_80006BF0
Parsed instruction at 80006BE4: addi r3 r31 0x170
Parsed instruction at 80006BE8: crclr cr1eq
Parsed instruction at 80006BEC: bl OSReport
Parsed label: L_80006BF0:
Parsed instruction at 80006BF0: rlwinm r0 r30 0 11 11
Parsed instruction at 80006BF4: cmplwi r0 0x0
Parsed instruction at 80006BF8: beq .L_80006C08
Parsed instruction at 80006BFC: addi r3 r31 0x190
Parsed instruction at 80006C00: crclr cr1eq
Parsed instruction at 80006C04: bl OSReport
Parsed label: L_80006C08:
Parsed instruction at 80006C08: mr r3 r30
Parsed instruction at 80006C0C: bl PPCMthid2
Parsed instruction at 80006C10: lwz r0 0x84(r1)
Parsed instruction at 80006C14: lwz r31 0x7c(r1)
Parsed instruction at 80006C18: lwz r30 0x78(r1)
Parsed instruction at 80006C1C: lwz r29 0x74(r1)
Parsed instruction at 80006C20: addi r1 r1 0x80
Parsed instruction at 80006C24: mtlr r0
Parsed instruction at 80006C28: blr 
End of function: DMAErrorHandler, 95 instructions
Parsed function: __OSCacheInit at 0x80006C2C
Parsed instruction at 80006C2C: mflr r0
Parsed instruction at 80006C30: stw r0 0x4(r1)
Parsed instruction at 80006C34: stwu r1 -0x10(r1)
Parsed instruction at 80006C38: stw r31 0xc(r1)
Parsed instruction at 80006C3C: stw r30 0x8(r1)
Parsed instruction at 80006C40: lis r3 "@69_8001A920"@ha
Parsed instruction at 80006C44: addi r31 r3 "@69_8001A920"@l
Parsed instruction at 80006C48: bl PPCMfhid0
Parsed instruction at 80006C4C: rlwinm r0 r3 0 16 16
Parsed instruction at 80006C50: cmplwi r0 0x0
Parsed instruction at 80006C54: bne .L_80006C68
Parsed instruction at 80006C58: bl ICEnable
Parsed instruction at 80006C5C: addi r3 r31 0x1ac
Parsed instruction at 80006C60: crclr cr1eq
Parsed instruction at 80006C64: bl DBPrintf
Parsed label: L_80006C68:
Parsed instruction at 80006C68: bl PPCMfhid0
Parsed instruction at 80006C6C: rlwinm r0 r3 0 17 17
Parsed instruction at 80006C70: cmplwi r0 0x0
Parsed instruction at 80006C74: bne .L_80006C88
Parsed instruction at 80006C78: bl DCEnable
Parsed instruction at 80006C7C: addi r3 r31 0x1c8
Parsed instruction at 80006C80: crclr cr1eq
Parsed instruction at 80006C84: bl DBPrintf
Parsed label: L_80006C88:
Parsed instruction at 80006C88: bl PPCMfl2cr
Parsed instruction at 80006C8C: clrrwi r0 r3 31
Parsed instruction at 80006C90: cmplwi r0 0x0
Parsed instruction at 80006C94: bne .L_80006CEC
Parsed instruction at 80006C98: bl PPCMfmsr
Parsed instruction at 80006C9C: mr r30 r3
Parsed instruction at 80006CA0: sync 
Parsed instruction at 80006CA4: li r3 0x30
Parsed instruction at 80006CA8: bl PPCMtmsr
Parsed instruction at 80006CAC: sync 
Parsed instruction at 80006CB0: sync 
Parsed instruction at 80006CB4: bl PPCMfl2cr
Parsed instruction at 80006CB8: clrlwi r3 r3 1
Parsed instruction at 80006CBC: bl PPCMtl2cr
Parsed instruction at 80006CC0: sync 
Parsed instruction at 80006CC4: bl L2GlobalInvalidate
Parsed instruction at 80006CC8: mr r3 r30
Parsed instruction at 80006CCC: bl PPCMtmsr
Parsed instruction at 80006CD0: bl PPCMfl2cr
Parsed instruction at 80006CD4: oris r0 r3 0x8000
Parsed instruction at 80006CD8: rlwinm r3 r0 0 11 9
Parsed instruction at 80006CDC: bl PPCMtl2cr
Parsed instruction at 80006CE0: addi r3 r31 0x1e4
Parsed instruction at 80006CE4: crclr cr1eq
Parsed instruction at 80006CE8: bl DBPrintf
Parsed label: L_80006CEC:
Parsed instruction at 80006CEC: lis r3 DMAErrorHandler@ha
Parsed instruction at 80006CF0: addi r4 r3 DMAErrorHandler@l
Parsed instruction at 80006CF4: li r3 0x1
Parsed instruction at 80006CF8: bl OSSetErrorHandler
Parsed instruction at 80006CFC: addi r3 r31 0x1fc
Parsed instruction at 80006D00: crclr cr1eq
Parsed instruction at 80006D04: bl DBPrintf
Parsed instruction at 80006D08: lwz r0 0x14(r1)
Parsed instruction at 80006D0C: lwz r31 0xc(r1)
Parsed instruction at 80006D10: lwz r30 0x8(r1)
Parsed instruction at 80006D14: addi r1 r1 0x10
Parsed instruction at 80006D18: mtlr r0
Parsed instruction at 80006D1C: blr 
End of function: __OSCacheInit, 64 instructions
Parsed function: __OSLoadFPUContext at 0x80006D20
Parsed instruction at 80006D20: lhz r5 0x1a2(r4)
Parsed instruction at 80006D24: clrlwi. r5 r5 31
Parsed instruction at 80006D28: beq .L_80006E40
Parsed instruction at 80006D2C: lfd f0 0x190(r4)
Parsed instruction at 80006D30: mtfsf 255 f0
Parsed instruction at 80006D34: mfspr r5 HID2
Parsed instruction at 80006D38: extrwi. r5 r5 1 2
Parsed instruction at 80006D3C: beq .L_80006DC0
Parsed instruction at 80006D40: psq_l f0 0x1c8(r4) 0 qr0
Parsed instruction at 80006D44: psq_l f1 0x1d0(r4) 0 qr0
Parsed instruction at 80006D48: psq_l f2 0x1d8(r4) 0 qr0
Parsed instruction at 80006D4C: psq_l f3 0x1e0(r4) 0 qr0
Parsed instruction at 80006D50: psq_l f4 0x1e8(r4) 0 qr0
Parsed instruction at 80006D54: psq_l f5 0x1f0(r4) 0 qr0
Parsed instruction at 80006D58: psq_l f6 0x1f8(r4) 0 qr0
Parsed instruction at 80006D5C: psq_l f7 0x200(r4) 0 qr0
Parsed instruction at 80006D60: psq_l f8 0x208(r4) 0 qr0
Parsed instruction at 80006D64: psq_l f9 0x210(r4) 0 qr0
Parsed instruction at 80006D68: psq_l f10 0x218(r4) 0 qr0
Parsed instruction at 80006D6C: psq_l f11 0x220(r4) 0 qr0
Parsed instruction at 80006D70: psq_l f12 0x228(r4) 0 qr0
Parsed instruction at 80006D74: psq_l f13 0x230(r4) 0 qr0
Parsed instruction at 80006D78: psq_l f14 0x238(r4) 0 qr0
Parsed instruction at 80006D7C: psq_l f15 0x240(r4) 0 qr0
Parsed instruction at 80006D80: psq_l f16 0x248(r4) 0 qr0
Parsed instruction at 80006D84: psq_l f17 0x250(r4) 0 qr0
Parsed instruction at 80006D88: psq_l f18 0x258(r4) 0 qr0
Parsed instruction at 80006D8C: psq_l f19 0x260(r4) 0 qr0
Parsed instruction at 80006D90: psq_l f20 0x268(r4) 0 qr0
Parsed instruction at 80006D94: psq_l f21 0x270(r4) 0 qr0
Parsed instruction at 80006D98: psq_l f22 0x278(r4) 0 qr0
Parsed instruction at 80006D9C: psq_l f23 0x280(r4) 0 qr0
Parsed instruction at 80006DA0: psq_l f24 0x288(r4) 0 qr0
Parsed instruction at 80006DA4: psq_l f25 0x290(r4) 0 qr0
Parsed instruction at 80006DA8: psq_l f26 0x298(r4) 0 qr0
Parsed instruction at 80006DAC: psq_l f27 0x2a0(r4) 0 qr0
Parsed instruction at 80006DB0: psq_l f28 0x2a8(r4) 0 qr0
Parsed instruction at 80006DB4: psq_l f29 0x2b0(r4) 0 qr0
Parsed instruction at 80006DB8: psq_l f30 0x2b8(r4) 0 qr0
Parsed instruction at 80006DBC: psq_l f31 0x2c0(r4) 0 qr0
Parsed label: L_80006DC0:
Parsed instruction at 80006DC0: lfd f0 0x90(r4)
Parsed instruction at 80006DC4: lfd f1 0x98(r4)
Parsed instruction at 80006DC8: lfd f2 0xa0(r4)
Parsed instruction at 80006DCC: lfd f3 0xa8(r4)
Parsed instruction at 80006DD0: lfd f4 0xb0(r4)
Parsed instruction at 80006DD4: lfd f5 0xb8(r4)
Parsed instruction at 80006DD8: lfd f6 0xc0(r4)
Parsed instruction at 80006DDC: lfd f7 0xc8(r4)
Parsed instruction at 80006DE0: lfd f8 0xd0(r4)
Parsed instruction at 80006DE4: lfd f9 0xd8(r4)
Parsed instruction at 80006DE8: lfd f10 0xe0(r4)
Parsed instruction at 80006DEC: lfd f11 0xe8(r4)
Parsed instruction at 80006DF0: lfd f12 0xf0(r4)
Parsed instruction at 80006DF4: lfd f13 0xf8(r4)
Parsed instruction at 80006DF8: lfd f14 0x100(r4)
Parsed instruction at 80006DFC: lfd f15 0x108(r4)
Parsed instruction at 80006E00: lfd f16 0x110(r4)
Parsed instruction at 80006E04: lfd f17 0x118(r4)
Parsed instruction at 80006E08: lfd f18 0x120(r4)
Parsed instruction at 80006E0C: lfd f19 0x128(r4)
Parsed instruction at 80006E10: lfd f20 0x130(r4)
Parsed instruction at 80006E14: lfd f21 0x138(r4)
Parsed instruction at 80006E18: lfd f22 0x140(r4)
Parsed instruction at 80006E1C: lfd f23 0x148(r4)
Parsed instruction at 80006E20: lfd f24 0x150(r4)
Parsed instruction at 80006E24: lfd f25 0x158(r4)
Parsed instruction at 80006E28: lfd f26 0x160(r4)
Parsed instruction at 80006E2C: lfd f27 0x168(r4)
Parsed instruction at 80006E30: lfd f28 0x170(r4)
Parsed instruction at 80006E34: lfd f29 0x178(r4)
Parsed instruction at 80006E38: lfd f30 0x180(r4)
Parsed instruction at 80006E3C: lfd f31 0x188(r4)
Parsed label: L_80006E40:
Parsed instruction at 80006E40: blr 
End of function: __OSLoadFPUContext, 75 instructions
Parsed function: __OSSaveFPUContext at 0x80006E44
Parsed instruction at 80006E44: lhz r3 0x1a2(r5)
Parsed instruction at 80006E48: ori r3 r3 0x1
Parsed instruction at 80006E4C: sth r3 0x1a2(r5)
Parsed instruction at 80006E50: stfd f0 0x90(r5)
Parsed instruction at 80006E54: stfd f1 0x98(r5)
Parsed instruction at 80006E58: stfd f2 0xa0(r5)
Parsed instruction at 80006E5C: stfd f3 0xa8(r5)
Parsed instruction at 80006E60: stfd f4 0xb0(r5)
Parsed instruction at 80006E64: stfd f5 0xb8(r5)
Parsed instruction at 80006E68: stfd f6 0xc0(r5)
Parsed instruction at 80006E6C: stfd f7 0xc8(r5)
Parsed instruction at 80006E70: stfd f8 0xd0(r5)
Parsed instruction at 80006E74: stfd f9 0xd8(r5)
Parsed instruction at 80006E78: stfd f10 0xe0(r5)
Parsed instruction at 80006E7C: stfd f11 0xe8(r5)
Parsed instruction at 80006E80: stfd f12 0xf0(r5)
Parsed instruction at 80006E84: stfd f13 0xf8(r5)
Parsed instruction at 80006E88: stfd f14 0x100(r5)
Parsed instruction at 80006E8C: stfd f15 0x108(r5)
Parsed instruction at 80006E90: stfd f16 0x110(r5)
Parsed instruction at 80006E94: stfd f17 0x118(r5)
Parsed instruction at 80006E98: stfd f18 0x120(r5)
Parsed instruction at 80006E9C: stfd f19 0x128(r5)
Parsed instruction at 80006EA0: stfd f20 0x130(r5)
Parsed instruction at 80006EA4: stfd f21 0x138(r5)
Parsed instruction at 80006EA8: stfd f22 0x140(r5)
Parsed instruction at 80006EAC: stfd f23 0x148(r5)
Parsed instruction at 80006EB0: stfd f24 0x150(r5)
Parsed instruction at 80006EB4: stfd f25 0x158(r5)
Parsed instruction at 80006EB8: stfd f26 0x160(r5)
Parsed instruction at 80006EBC: stfd f27 0x168(r5)
Parsed instruction at 80006EC0: stfd f28 0x170(r5)
Parsed instruction at 80006EC4: stfd f29 0x178(r5)
Parsed instruction at 80006EC8: stfd f30 0x180(r5)
Parsed instruction at 80006ECC: stfd f31 0x188(r5)
Parsed instruction at 80006ED0: mffs f0
Parsed instruction at 80006ED4: stfd f0 0x190(r5)
Parsed instruction at 80006ED8: lfd f0 0x90(r5)
Parsed instruction at 80006EDC: mfspr r3 HID2
Parsed instruction at 80006EE0: extrwi. r3 r3 1 2
Parsed instruction at 80006EE4: beq .L_80006F68
Parsed instruction at 80006EE8: psq_st f0 0x1c8(r5) 0 qr0
Parsed instruction at 80006EEC: psq_st f1 0x1d0(r5) 0 qr0
Parsed instruction at 80006EF0: psq_st f2 0x1d8(r5) 0 qr0
Parsed instruction at 80006EF4: psq_st f3 0x1e0(r5) 0 qr0
Parsed instruction at 80006EF8: psq_st f4 0x1e8(r5) 0 qr0
Parsed instruction at 80006EFC: psq_st f5 0x1f0(r5) 0 qr0
Parsed instruction at 80006F00: psq_st f6 0x1f8(r5) 0 qr0
Parsed instruction at 80006F04: psq_st f7 0x200(r5) 0 qr0
Parsed instruction at 80006F08: psq_st f8 0x208(r5) 0 qr0
Parsed instruction at 80006F0C: psq_st f9 0x210(r5) 0 qr0
Parsed instruction at 80006F10: psq_st f10 0x218(r5) 0 qr0
Parsed instruction at 80006F14: psq_st f11 0x220(r5) 0 qr0
Parsed instruction at 80006F18: psq_st f12 0x228(r5) 0 qr0
Parsed instruction at 80006F1C: psq_st f13 0x230(r5) 0 qr0
Parsed instruction at 80006F20: psq_st f14 0x238(r5) 0 qr0
Parsed instruction at 80006F24: psq_st f15 0x240(r5) 0 qr0
Parsed instruction at 80006F28: psq_st f16 0x248(r5) 0 qr0
Parsed instruction at 80006F2C: psq_st f17 0x250(r5) 0 qr0
Parsed instruction at 80006F30: psq_st f18 0x258(r5) 0 qr0
Parsed instruction at 80006F34: psq_st f19 0x260(r5) 0 qr0
Parsed instruction at 80006F38: psq_st f20 0x268(r5) 0 qr0
Parsed instruction at 80006F3C: psq_st f21 0x270(r5) 0 qr0
Parsed instruction at 80006F40: psq_st f22 0x278(r5) 0 qr0
Parsed instruction at 80006F44: psq_st f23 0x280(r5) 0 qr0
Parsed instruction at 80006F48: psq_st f24 0x288(r5) 0 qr0
Parsed instruction at 80006F4C: psq_st f25 0x290(r5) 0 qr0
Parsed instruction at 80006F50: psq_st f26 0x298(r5) 0 qr0
Parsed instruction at 80006F54: psq_st f27 0x2a0(r5) 0 qr0
Parsed instruction at 80006F58: psq_st f28 0x2a8(r5) 0 qr0
Parsed instruction at 80006F5C: psq_st f29 0x2b0(r5) 0 qr0
Parsed instruction at 80006F60: psq_st f30 0x2b8(r5) 0 qr0
Parsed instruction at 80006F64: psq_st f31 0x2c0(r5) 0 qr0
Parsed label: L_80006F68:
Parsed instruction at 80006F68: blr 
End of function: __OSSaveFPUContext, 75 instructions
Parsed function: OSSetCurrentContext at 0x80006F6C
Parsed instruction at 80006F6C: lis r4 0x8000
Parsed instruction at 80006F70: stw r3 0xd4(r4)
Parsed instruction at 80006F74: clrlwi r5 r3 2
Parsed instruction at 80006F78: stw r5 0xc0(r4)
Parsed instruction at 80006F7C: lwz r5 0xd8(r4)
Parsed instruction at 80006F80: cmpw r5 r3
Parsed instruction at 80006F84: bne .L_80006FA4
Parsed instruction at 80006F88: lwz r6 0x19c(r3)
Parsed instruction at 80006F8C: ori r6 r6 0x2000
Parsed instruction at 80006F90: stw r6 0x19c(r3)
Parsed instruction at 80006F94: mfmsr r6
Parsed instruction at 80006F98: ori r6 r6 0x2
Parsed instruction at 80006F9C: mtmsr r6
Parsed instruction at 80006FA0: blr 
Parsed label: L_80006FA4:
Parsed instruction at 80006FA4: lwz r6 0x19c(r3)
Parsed instruction at 80006FA8: rlwinm r6 r6 0 19 17
Parsed instruction at 80006FAC: stw r6 0x19c(r3)
Parsed instruction at 80006FB0: mfmsr r6
Parsed instruction at 80006FB4: rlwinm r6 r6 0 19 17
Parsed instruction at 80006FB8: ori r6 r6 0x2
Parsed instruction at 80006FBC: mtmsr r6
Parsed instruction at 80006FC0: isync 
Parsed instruction at 80006FC4: blr 
End of function: OSSetCurrentContext, 24 instructions
Parsed function: fn_80006FC8 at 0x80006FC8
Parsed instruction at 80006FC8: lis r3 0x8000
Parsed instruction at 80006FCC: lwz r3 0xd4(r3)
Parsed instruction at 80006FD0: blr 
End of function: fn_80006FC8, 3 instructions
Parsed function: fn_80006FD4 at 0x80006FD4
Parsed instruction at 80006FD4: stmw r13 0x34(r3)
Parsed instruction at 80006FD8: mfspr r0 GQR1
Parsed instruction at 80006FDC: stw r0 0x1a8(r3)
Parsed instruction at 80006FE0: mfspr r0 GQR2
Parsed instruction at 80006FE4: stw r0 0x1ac(r3)
Parsed instruction at 80006FE8: mfspr r0 GQR3
Parsed instruction at 80006FEC: stw r0 0x1b0(r3)
Parsed instruction at 80006FF0: mfspr r0 GQR4
Parsed instruction at 80006FF4: stw r0 0x1b4(r3)
Parsed instruction at 80006FF8: mfspr r0 GQR5
Parsed instruction at 80006FFC: stw r0 0x1b8(r3)
Parsed instruction at 80007000: mfspr r0 GQR6
Parsed instruction at 80007004: stw r0 0x1bc(r3)
Parsed instruction at 80007008: mfspr r0 GQR7
Parsed instruction at 8000700C: stw r0 0x1c0(r3)
Parsed instruction at 80007010: mfcr r0
Parsed instruction at 80007014: stw r0 0x80(r3)
Parsed instruction at 80007018: mflr r0
Parsed instruction at 8000701C: stw r0 0x84(r3)
Parsed instruction at 80007020: stw r0 0x198(r3)
Parsed instruction at 80007024: mfmsr r0
Parsed instruction at 80007028: stw r0 0x19c(r3)
Parsed instruction at 8000702C: mfctr r0
Parsed instruction at 80007030: stw r0 0x88(r3)
Parsed instruction at 80007034: mfxer r0
Parsed instruction at 80007038: stw r0 0x8c(r3)
Parsed instruction at 8000703C: stw r1 0x4(r3)
Parsed instruction at 80007040: stw r2 0x8(r3)
Parsed instruction at 80007044: li r0 0x1
Parsed instruction at 80007048: stw r0 0xc(r3)
Parsed instruction at 8000704C: li r3 0x0
Parsed instruction at 80007050: blr 
End of function: fn_80006FD4, 32 instructions
Parsed function: OSLoadContext at 0x80007054
Parsed instruction at 80007054: lis r4 OSDisableInterrupts@ha
Parsed instruction at 80007058: lwz r6 0x198(r3)
Parsed instruction at 8000705C: addi r5 r4 OSDisableInterrupts@l
Parsed instruction at 80007060: cmplw r6 r5
Parsed instruction at 80007064: blt .L_8000707C
Parsed instruction at 80007068: lis r4 OSDisableInterrupts+0x10@ha
Parsed instruction at 8000706C: addi r0 r4 OSDisableInterrupts+0x10@l
Parsed instruction at 80007070: cmplw r6 r0
Parsed instruction at 80007074: bgt .L_8000707C
Parsed instruction at 80007078: stw r5 0x198(r3)
Parsed label: L_8000707C:
Parsed instruction at 8000707C: lwz r0 0x0(r3)
Parsed instruction at 80007080: lwz r1 0x4(r3)
Parsed instruction at 80007084: lwz r2 0x8(r3)
Parsed instruction at 80007088: lhz r4 0x1a2(r3)
Parsed instruction at 8000708C: rlwinm. r5 r4 0 30 30
Parsed instruction at 80007090: beq .L_800070A4
Parsed instruction at 80007094: rlwinm r4 r4 0 31 29
Parsed instruction at 80007098: sth r4 0x1a2(r3)
Parsed instruction at 8000709C: lmw r5 0x14(r3)
Parsed instruction at 800070A0: b .L_800070A8
Parsed label: L_800070A4:
Parsed instruction at 800070A4: lmw r13 0x34(r3)
Parsed label: L_800070A8:
Parsed instruction at 800070A8: lwz r4 0x1a8(r3)
Parsed instruction at 800070AC: mtspr GQR1 r4
Parsed instruction at 800070B0: lwz r4 0x1ac(r3)
Parsed instruction at 800070B4: mtspr GQR2 r4
Parsed instruction at 800070B8: lwz r4 0x1b0(r3)
Parsed instruction at 800070BC: mtspr GQR3 r4
Parsed instruction at 800070C0: lwz r4 0x1b4(r3)
Parsed instruction at 800070C4: mtspr GQR4 r4
Parsed instruction at 800070C8: lwz r4 0x1b8(r3)
Parsed instruction at 800070CC: mtspr GQR5 r4
Parsed instruction at 800070D0: lwz r4 0x1bc(r3)
Parsed instruction at 800070D4: mtspr GQR6 r4
Parsed instruction at 800070D8: lwz r4 0x1c0(r3)
Parsed instruction at 800070DC: mtspr GQR7 r4
Parsed instruction at 800070E0: lwz r4 0x80(r3)
Parsed instruction at 800070E4: mtcrf 255 r4
Parsed instruction at 800070E8: lwz r4 0x84(r3)
Parsed instruction at 800070EC: mtlr r4
Parsed instruction at 800070F0: lwz r4 0x88(r3)
Parsed instruction at 800070F4: mtctr r4
Parsed instruction at 800070F8: lwz r4 0x8c(r3)
Parsed instruction at 800070FC: mtxer r4
Parsed instruction at 80007100: mfmsr r4
Parsed instruction at 80007104: rlwinm r4 r4 0 17 15
Parsed instruction at 80007108: rlwinm r4 r4 0 31 29
Parsed instruction at 8000710C: mtmsr r4
Parsed instruction at 80007110: lwz r4 0x198(r3)
Parsed instruction at 80007114: mtsrr0 r4
Parsed instruction at 80007118: lwz r4 0x19c(r3)
Parsed instruction at 8000711C: mtsrr1 r4
Parsed instruction at 80007120: lwz r4 0x10(r3)
Parsed instruction at 80007124: lwz r3 0xc(r3)
Parsed instruction at 80007128: rfi 
End of function: OSLoadContext, 57 instructions
Parsed function: OSClearContext at 0x8000712C
Parsed instruction at 8000712C: li r5 0x0
Parsed instruction at 80007130: sth r5 0x1a0(r3)
Parsed instruction at 80007134: lis r4 0x8000
Parsed instruction at 80007138: sth r5 0x1a2(r3)
Parsed instruction at 8000713C: lwz r0 0xd8(r4)
Parsed instruction at 80007140: cmplw r3 r0
Parsed instruction at 80007144: bne .L_8000714C
Parsed instruction at 80007148: stw r5 0xd8(r4)
Parsed label: L_8000714C:
Parsed instruction at 8000714C: blr 
End of function: OSClearContext, 10 instructions
Parsed function: OSDumpContext at 0x80007150
Parsed instruction at 80007150: mflr r0
Parsed instruction at 80007154: stw r0 0x4(r1)
Parsed instruction at 80007158: stwu r1 -0x2f8(r1)
Parsed instruction at 8000715C: stmw r25 0x2dc(r1)
Parsed instruction at 80007160: mr r28 r3
Parsed instruction at 80007164: lis r3 lbl_8001AB50@ha
Parsed instruction at 80007168: crclr cr1eq
Parsed instruction at 8000716C: addi r31 r3 lbl_8001AB50@l
Parsed instruction at 80007170: mr r3 r31
Parsed instruction at 80007174: mr r4 r28
Parsed instruction at 80007178: bl OSReport
Parsed instruction at 8000717C: li r25 0x0
Parsed instruction at 80007180: slwi r0 r25 2
Parsed instruction at 80007184: add r27 r28 r0
Parsed instruction at 80007188: b .L_8000718C
Parsed label: L_8000718C:
Parsed instruction at 8000718C: b .L_80007190
Parsed label: L_80007190:
Parsed instruction at 80007190: b .L_80007194
Parsed label: L_80007194:
Parsed instruction at 80007194: lwz r8 0x40(r27)
Parsed instruction at 80007198: mr r4 r25
Parsed instruction at 8000719C: lwz r5 0x0(r27)
Parsed instruction at 800071A0: addi r3 r31 0x44
Parsed instruction at 800071A4: crclr cr1eq
Parsed instruction at 800071A8: mr r6 r5
Parsed instruction at 800071AC: mr r9 r8
Parsed instruction at 800071B0: addi r7 r25 0x10
Parsed instruction at 800071B4: bl OSReport
Parsed instruction at 800071B8: addi r27 r27 0x4
Parsed instruction at 800071BC: addi r25 r25 0x1
Parsed instruction at 800071C0: cmplwi r25 0x10
Parsed instruction at 800071C4: blt .L_80007194
Parsed instruction at 800071C8: lwz r4 0x84(r28)
Parsed instruction at 800071CC: addi r3 r31 0x74
Parsed instruction at 800071D0: lwz r5 0x80(r28)
Parsed instruction at 800071D4: crclr cr1eq
Parsed instruction at 800071D8: bl OSReport
Parsed instruction at 800071DC: lwz r4 0x198(r28)
Parsed instruction at 800071E0: addi r3 r31 0xa4
Parsed instruction at 800071E4: lwz r5 0x19c(r28)
Parsed instruction at 800071E8: crclr cr1eq
Parsed instruction at 800071EC: bl OSReport
Parsed instruction at 800071F0: addi r3 r31 0xd4
Parsed instruction at 800071F4: crclr cr1eq
Parsed instruction at 800071F8: bl OSReport
Parsed instruction at 800071FC: li r25 0x0
Parsed instruction at 80007200: slwi r0 r25 2
Parsed instruction at 80007204: add r27 r28 r0
Parsed instruction at 80007208: b .L_8000720C
Parsed label: L_8000720C:
Parsed instruction at 8000720C: b .L_80007210
Parsed label: L_80007210:
Parsed instruction at 80007210: b .L_80007214
Parsed label: L_80007214:
Parsed instruction at 80007214: lwz r5 0x1a4(r27)
Parsed instruction at 80007218: mr r4 r25
Parsed instruction at 8000721C: lwz r7 0x1b4(r27)
Parsed instruction at 80007220: addi r3 r31 0xe8
Parsed instruction at 80007224: addi r6 r25 0x4
Parsed instruction at 80007228: crclr cr1eq
Parsed instruction at 8000722C: bl OSReport
Parsed instruction at 80007230: addi r27 r27 0x4
Parsed instruction at 80007234: addi r25 r25 0x1
Parsed instruction at 80007238: cmplwi r25 0x4
Parsed instruction at 8000723C: blt .L_80007214
Parsed instruction at 80007240: lhz r0 0x1a2(r28)
Parsed instruction at 80007244: clrlwi r0 r0 31
Parsed instruction at 80007248: cmplwi r0 0x0
Parsed instruction at 8000724C: beq .L_80007388
Parsed instruction at 80007250: bl OSDisableInterrupts
Parsed instruction at 80007254: lis r6 0x8000
Parsed instruction at 80007258: lwz r0 0xd4(r6)
Parsed instruction at 8000725C: li r5 0x0
Parsed instruction at 80007260: addi r4 r1 0x10
Parsed instruction at 80007264: sth r5 0x1b0(r1)
Parsed instruction at 80007268: mr r30 r0
Parsed instruction at 8000726C: mr r29 r3
Parsed instruction at 80007270: sth r5 0x1b2(r1)
Parsed instruction at 80007274: lwz r0 0xd8(r6)
Parsed instruction at 80007278: cmplw r4 r0
Parsed instruction at 8000727C: bne .L_80007284
Parsed instruction at 80007280: stw r5 0xd8(r6)
Parsed label: L_80007284:
Parsed instruction at 80007284: addi r3 r1 0x10
Parsed instruction at 80007288: bl OSSetCurrentContext
Parsed instruction at 8000728C: addi r3 r31 0x10c
Parsed instruction at 80007290: crclr cr1eq
Parsed instruction at 80007294: bl OSReport
Parsed instruction at 80007298: li r25 0x0
Parsed instruction at 8000729C: slwi r0 r25 3
Parsed instruction at 800072A0: add r26 r28 r0
Parsed instruction at 800072A4: b .L_800072A8
Parsed label: L_800072A8:
Parsed instruction at 800072A8: b .L_800072AC
Parsed label: L_800072AC:
Parsed instruction at 800072AC: b .L_800072B0
Parsed label: L_800072B0:
Parsed instruction at 800072B0: lfd f1 0x98(r26)
Parsed instruction at 800072B4: bl fn_800114CC
Parsed instruction at 800072B8: mr r27 r3
Parsed instruction at 800072BC: lfd f1 0x90(r26)
Parsed instruction at 800072C0: bl fn_800114CC
Parsed instruction at 800072C4: mr r5 r3
Parsed instruction at 800072C8: crclr cr1eq
Parsed instruction at 800072CC: mr r4 r25
Parsed instruction at 800072D0: mr r7 r27
Parsed instruction at 800072D4: addi r3 r31 0x120
Parsed instruction at 800072D8: addi r6 r25 0x1
Parsed instruction at 800072DC: bl OSReport
Parsed instruction at 800072E0: addi r26 r26 0x10
Parsed instruction at 800072E4: addi r25 r25 0x2
Parsed instruction at 800072E8: cmplwi r25 0x20
Parsed instruction at 800072EC: blt .L_800072B0
Parsed instruction at 800072F0: addi r3 r31 0x13c
Parsed instruction at 800072F4: crclr cr1eq
Parsed instruction at 800072F8: bl OSReport
Parsed instruction at 800072FC: li r25 0x0
Parsed instruction at 80007300: slwi r0 r25 3
Parsed instruction at 80007304: add r26 r28 r0
Parsed instruction at 80007308: b .L_8000730C
Parsed label: L_8000730C:
Parsed instruction at 8000730C: b .L_80007310
Parsed label: L_80007310:
Parsed instruction at 80007310: b .L_80007314
Parsed label: L_80007314:
Parsed instruction at 80007314: lfd f1 0x1d0(r26)
Parsed instruction at 80007318: bl fn_800114CC
Parsed instruction at 8000731C: mr r27 r3
Parsed instruction at 80007320: lfd f1 0x1c8(r26)
Parsed instruction at 80007324: bl fn_800114CC
Parsed instruction at 80007328: mr r5 r3
Parsed instruction at 8000732C: crclr cr1eq
Parsed instruction at 80007330: mr r4 r25
Parsed instruction at 80007334: mr r7 r27
Parsed instruction at 80007338: addi r3 r31 0x150
Parsed instruction at 8000733C: addi r6 r25 0x1
Parsed instruction at 80007340: bl OSReport
Parsed instruction at 80007344: addi r26 r26 0x10
Parsed instruction at 80007348: addi r25 r25 0x2
Parsed instruction at 8000734C: cmplwi r25 0x20
Parsed instruction at 80007350: blt .L_80007314
Parsed instruction at 80007354: li r5 0x0
Parsed instruction at 80007358: sth r5 0x1b0(r1)
Parsed instruction at 8000735C: lis r3 0x8000
Parsed instruction at 80007360: addi r4 r1 0x10
Parsed instruction at 80007364: sth r5 0x1b2(r1)
Parsed instruction at 80007368: lwz r0 0xd8(r3)
Parsed instruction at 8000736C: cmplw r4 r0
Parsed instruction at 80007370: bne .L_80007378
Parsed instruction at 80007374: stw r5 0xd8(r3)
Parsed label: L_80007378:
Parsed instruction at 80007378: mr r3 r30
Parsed instruction at 8000737C: bl OSSetCurrentContext
Parsed instruction at 80007380: mr r3 r29
Parsed instruction at 80007384: bl OSRestoreInterrupts
Parsed label: L_80007388:
Parsed instruction at 80007388: addi r3 r31 0x170
Parsed instruction at 8000738C: crclr cr1eq
Parsed instruction at 80007390: bl OSReport
Parsed instruction at 80007394: lwz r25 0x4(r28)
Parsed instruction at 80007398: li r26 0x0
Parsed instruction at 8000739C: b .L_800073A0
Parsed label: L_800073A0:
Parsed instruction at 800073A0: b .L_800073A4
Parsed label: L_800073A4:
Parsed instruction at 800073A4: b .L_800073C4
Parsed label: L_800073A8:
Parsed instruction at 800073A8: lwz r5 0x0(r25)
Parsed instruction at 800073AC: mr r4 r25
Parsed instruction at 800073B0: lwz r6 0x4(r25)
Parsed instruction at 800073B4: addi r3 r31 0x198
Parsed instruction at 800073B8: crclr cr1eq
Parsed instruction at 800073BC: bl OSReport
Parsed instruction at 800073C0: lwz r25 0x0(r25)
Parsed label: L_800073C4:
Parsed instruction at 800073C4: cmplwi r25 0x0
Parsed instruction at 800073C8: beq .L_800073E4
Parsed instruction at 800073CC: addis r0 r25 0x1
Parsed instruction at 800073D0: cmplwi r0 0xffff
Parsed instruction at 800073D4: beq .L_800073E4
Parsed instruction at 800073D8: cmplwi r26 0x10
Parsed instruction at 800073DC: addi r26 r26 0x1
Parsed instruction at 800073E0: blt .L_800073A8
Parsed label: L_800073E4:
Parsed instruction at 800073E4: lmw r25 0x2dc(r1)
Parsed instruction at 800073E8: lwz r0 0x2fc(r1)
Parsed instruction at 800073EC: addi r1 r1 0x2f8
Parsed instruction at 800073F0: mtlr r0
Parsed instruction at 800073F4: blr 
End of function: OSDumpContext, 190 instructions
Parsed function: OSSwitchFPUContext at 0x800073F8
Parsed instruction at 800073F8: mfmsr r5
Parsed instruction at 800073FC: ori r5 r5 0x2000
Parsed instruction at 80007400: mtmsr r5
Parsed instruction at 80007404: isync 
Parsed instruction at 80007408: lwz r5 0x19c(r4)
Parsed instruction at 8000740C: ori r5 r5 0x2000
Parsed instruction at 80007410: mtsrr1 r5
Parsed instruction at 80007414: lis r3 0x8000
Parsed instruction at 80007418: lwz r5 0xd8(r3)
Parsed instruction at 8000741C: stw r4 0xd8(r3)
Parsed instruction at 80007420: cmpw r5 r4
Parsed instruction at 80007424: beq .L_80007438
Parsed instruction at 80007428: cmpwi r5 0x0
Parsed instruction at 8000742C: beq .L_80007434
Parsed instruction at 80007430: bl __OSSaveFPUContext
Parsed label: L_80007434:
Parsed instruction at 80007434: bl __OSLoadFPUContext
Parsed label: L_80007438:
Parsed instruction at 80007438: lwz r3 0x80(r4)
Parsed instruction at 8000743C: mtcrf 255 r3
Parsed instruction at 80007440: lwz r3 0x84(r4)
Parsed instruction at 80007444: mtlr r3
Parsed instruction at 80007448: lwz r3 0x198(r4)
Parsed instruction at 8000744C: mtsrr0 r3
Parsed instruction at 80007450: lwz r3 0x88(r4)
Parsed instruction at 80007454: mtctr r3
Parsed instruction at 80007458: lwz r3 0x8c(r4)
Parsed instruction at 8000745C: mtxer r3
Parsed instruction at 80007460: lhz r3 0x1a2(r4)
Parsed instruction at 80007464: rlwinm r3 r3 0 31 29
Parsed instruction at 80007468: sth r3 0x1a2(r4)
Parsed instruction at 8000746C: lwz r5 0x14(r4)
Parsed instruction at 80007470: lwz r3 0xc(r4)
Parsed instruction at 80007474: lwz r4 0x10(r4)
Parsed instruction at 80007478: rfi 
End of function: OSSwitchFPUContext, 35 instructions
Parsed function: __OSContextInit at 0x8000747C
Parsed instruction at 8000747C: mflr r0
Parsed instruction at 80007480: stw r0 0x4(r1)
Parsed instruction at 80007484: stwu r1 -0x8(r1)
Parsed instruction at 80007488: lis r3 OSSwitchFPUContext@ha
Parsed instruction at 8000748C: addi r4 r3 OSSwitchFPUContext@l
Parsed instruction at 80007490: li r3 0x7
Parsed instruction at 80007494: bl __OSSetExceptionHandler
Parsed instruction at 80007498: li r0 0x0
Parsed instruction at 8000749C: crclr cr1eq
Parsed instruction at 800074A0: lis r4 0x8000
Parsed instruction at 800074A4: lis r3 "@74_8001AD04"@ha
Parsed instruction at 800074A8: stw r0 0xd8(r4)
Parsed instruction at 800074AC: addi r3 r3 "@74_8001AD04"@l
Parsed instruction at 800074B0: bl DBPrintf
Parsed instruction at 800074B4: lwz r0 0xc(r1)
Parsed instruction at 800074B8: addi r1 r1 0x8
Parsed instruction at 800074BC: mtlr r0
Parsed instruction at 800074C0: blr 
End of function: __OSContextInit, 18 instructions
Parsed function: OSReport at 0x800074C4
Parsed instruction at 800074C4: mflr r0
Parsed instruction at 800074C8: stw r0 0x4(r1)
Parsed instruction at 800074CC: stwu r1 -0x78(r1)
Parsed instruction at 800074D0: bne cr1 .L_800074F4
Parsed instruction at 800074D4: stfd f1 0x28(r1)
Parsed instruction at 800074D8: stfd f2 0x30(r1)
Parsed instruction at 800074DC: stfd f3 0x38(r1)
Parsed instruction at 800074E0: stfd f4 0x40(r1)
Parsed instruction at 800074E4: stfd f5 0x48(r1)
Parsed instruction at 800074E8: stfd f6 0x50(r1)
Parsed instruction at 800074EC: stfd f7 0x58(r1)
Parsed instruction at 800074F0: stfd f8 0x60(r1)
Parsed label: L_800074F4:
Parsed instruction at 800074F4: stw r3 0x8(r1)
Parsed instruction at 800074F8: lis r0 0x100
Parsed instruction at 800074FC: stw r4 0xc(r1)
Parsed instruction at 80007500: addi r4 r1 0x6c
Parsed instruction at 80007504: stw r5 0x10(r1)
Parsed instruction at 80007508: stw r6 0x14(r1)
Parsed instruction at 8000750C: stw r7 0x18(r1)
Parsed instruction at 80007510: stw r8 0x1c(r1)
Parsed instruction at 80007514: stw r9 0x20(r1)
Parsed instruction at 80007518: stw r10 0x24(r1)
Parsed instruction at 8000751C: stw r0 0x6c(r1)
Parsed instruction at 80007520: addi r0 r1 0x80
Parsed instruction at 80007524: stw r0 0x70(r1)
Parsed instruction at 80007528: addi r0 r1 0x8
Parsed instruction at 8000752C: stw r0 0x74(r1)
Parsed instruction at 80007530: bl vprintf
Parsed instruction at 80007534: lwz r0 0x7c(r1)
Parsed instruction at 80007538: addi r1 r1 0x78
Parsed instruction at 8000753C: mtlr r0
Parsed instruction at 80007540: blr 
End of function: OSReport, 33 instructions
Parsed function: OSSetErrorHandler at 0x80007544
Parsed instruction at 80007544: lis r5 __OSErrorTable@ha
Parsed instruction at 80007548: clrlslwi r3 r3 16 2
Parsed instruction at 8000754C: addi r0 r5 __OSErrorTable@l
Parsed instruction at 80007550: add r5 r0 r3
Parsed instruction at 80007554: lwz r3 0x0(r5)
Parsed instruction at 80007558: stw r4 0x0(r5)
Parsed instruction at 8000755C: blr 
End of function: OSSetErrorHandler, 7 instructions
Parsed function: __OSUnhandledException at 0x80007560
Parsed instruction at 80007560: mflr r0
Parsed instruction at 80007564: stw r0 0x4(r1)
Parsed instruction at 80007568: stwu r1 -0x38(r1)
Parsed instruction at 8000756C: stmw r25 0x1c(r1)
Parsed instruction at 80007570: mr r31 r4
Parsed instruction at 80007574: addi r25 r3 0x0
Parsed instruction at 80007578: addi r26 r5 0x0
Parsed instruction at 8000757C: addi r27 r6 0x0
Parsed instruction at 80007580: lwz r0 0x19c(r4)
Parsed instruction at 80007584: lis r4 "@10_8001AD28"@ha
Parsed instruction at 80007588: addi r29 r4 "@10_8001AD28"@l
Parsed instruction at 8000758C: rlwinm. r0 r0 0 30 30
Parsed instruction at 80007590: bne .L_800075A8
Parsed instruction at 80007594: addi r3 r29 0x5c
Parsed instruction at 80007598: crclr cr1eq
Parsed instruction at 8000759C: clrlwi r4 r25 24
Parsed instruction at 800075A0: bl OSReport
Parsed instruction at 800075A4: b .L_80007620
Parsed label: L_800075A8:
Parsed instruction at 800075A8: clrlwi r30 r25 24
Parsed instruction at 800075AC: lis r3 __OSErrorTable@ha
Parsed instruction at 800075B0: clrlslwi r4 r25 24 2
Parsed instruction at 800075B4: addi r0 r3 __OSErrorTable@l
Parsed instruction at 800075B8: add r28 r0 r4
Parsed instruction at 800075BC: lwz r0 0x0(r28)
Parsed instruction at 800075C0: cmplwi r0 0x0
Parsed instruction at 800075C4: beq .L_800075FC
Parsed instruction at 800075C8: bl OSDisableScheduler
Parsed instruction at 800075CC: lwz r12 0x0(r28)
Parsed instruction at 800075D0: addi r3 r30 0x0
Parsed instruction at 800075D4: addi r4 r31 0x0
Parsed instruction at 800075D8: crclr cr1eq
Parsed instruction at 800075DC: mtlr r12
Parsed instruction at 800075E0: addi r5 r26 0x0
Parsed instruction at 800075E4: addi r6 r27 0x0
Parsed instruction at 800075E8: blrl 
Parsed instruction at 800075EC: bl OSEnableScheduler
Parsed instruction at 800075F0: bl __OSReschedule
Parsed instruction at 800075F4: mr r3 r31
Parsed instruction at 800075F8: bl OSLoadContext
Parsed label: L_800075FC:
Parsed instruction at 800075FC: clrlwi r0 r25 24
Parsed instruction at 80007600: cmplwi r0 0x8
Parsed instruction at 80007604: bne .L_80007610
Parsed instruction at 80007608: mr r3 r31
Parsed instruction at 8000760C: bl OSLoadContext
Parsed label: L_80007610:
Parsed instruction at 80007610: addi r3 r29 0x7c
Parsed instruction at 80007614: crclr cr1eq
Parsed instruction at 80007618: clrlwi r4 r25 24
Parsed instruction at 8000761C: bl OSReport
Parsed label: L_80007620:
Parsed instruction at 80007620: li r3 "@32_8001EE10"@sda21
Parsed instruction at 80007624: crclr cr1eq
Parsed instruction at 80007628: bl OSReport
Parsed instruction at 8000762C: mr r3 r31
Parsed instruction at 80007630: bl OSDumpContext
Parsed instruction at 80007634: addi r4 r26 0x0
Parsed instruction at 80007638: crclr cr1eq
Parsed instruction at 8000763C: addi r5 r27 0x0
Parsed instruction at 80007640: addi r3 r29 0x94
Parsed instruction at 80007644: bl OSReport
Parsed instruction at 80007648: bl OSGetTime
Parsed instruction at 8000764C: addi r5 r3 0x0
Parsed instruction at 80007650: crclr cr1eq
Parsed instruction at 80007654: addi r6 r4 0x0
Parsed instruction at 80007658: addi r3 r29 0xc8
Parsed instruction at 8000765C: bl OSReport
Parsed instruction at 80007660: clrlwi r0 r25 24
Parsed instruction at 80007664: cmplwi r0 0xf
Parsed instruction at 80007668: bgt .L_8000772C
Parsed instruction at 8000766C: lis r3 "@43_8001B004"@ha
Parsed instruction at 80007670: addi r3 r3 "@43_8001B004"@l
Parsed instruction at 80007674: slwi r0 r0 2
Parsed instruction at 80007678: lwzx r0 r3 r0
Parsed instruction at 8000767C: mtctr r0
Parsed instruction at 80007680: bctr 
Parsed instruction at 80007684: lwz r4 0x198(r31)
Parsed instruction at 80007688: addi r5 r27 0x0
Parsed instruction at 8000768C: addi r3 r29 0xd8
Parsed instruction at 80007690: crclr cr1eq
Parsed instruction at 80007694: bl OSReport
Parsed instruction at 80007698: b .L_8000772C
Parsed instruction at 8000769C: lwz r4 0x198(r31)
Parsed instruction at 800076A0: addi r3 r29 0x138
Parsed instruction at 800076A4: crclr cr1eq
Parsed instruction at 800076A8: bl OSReport
Parsed instruction at 800076AC: b .L_8000772C
Parsed instruction at 800076B0: lwz r4 0x198(r31)
Parsed instruction at 800076B4: addi r5 r27 0x0
Parsed instruction at 800076B8: addi r3 r29 0x184
Parsed instruction at 800076BC: crclr cr1eq
Parsed instruction at 800076C0: bl OSReport
Parsed instruction at 800076C4: b .L_8000772C
Parsed instruction at 800076C8: lwz r4 0x198(r31)
Parsed instruction at 800076CC: addi r5 r27 0x0
Parsed instruction at 800076D0: addi r3 r29 0x1e8
Parsed instruction at 800076D4: crclr cr1eq
Parsed instruction at 800076D8: bl OSReport
Parsed instruction at 800076DC: b .L_8000772C
Parsed instruction at 800076E0: li r3 "@32_8001EE10"@sda21
Parsed instruction at 800076E4: crclr cr1eq
Parsed instruction at 800076E8: bl OSReport
Parsed instruction at 800076EC: lis r30 0xcc00
Parsed instruction at 800076F0: crclr cr1eq
Parsed instruction at 800076F4: addi r31 r30 0x5000
Parsed instruction at 800076F8: lhz r4 0x5030(r30)
Parsed instruction at 800076FC: addi r3 r29 0x248
Parsed instruction at 80007700: lhz r5 0x5032(r30)
Parsed instruction at 80007704: bl OSReport
Parsed instruction at 80007708: lhz r4 0x20(r31)
Parsed instruction at 8000770C: addi r3 r29 0x268
Parsed instruction at 80007710: lhz r5 0x22(r31)
Parsed instruction at 80007714: crclr cr1eq
Parsed instruction at 80007718: bl OSReport
Parsed instruction at 8000771C: lwz r4 0x6014(r30)
Parsed instruction at 80007720: crclr cr1eq
Parsed instruction at 80007724: addi r3 r29 0x288
Parsed instruction at 80007728: bl OSReport
Parsed label: L_8000772C:
Parsed instruction at 8000772C: lha r4 __OSLastInterrupt@sda21(r0)
Parsed instruction at 80007730: addi r3 r29 0x2a4
Parsed instruction at 80007734: crclr cr1eq
Parsed instruction at 80007738: lwz r5 __OSLastInterruptSrr0@sda21(r0)
Parsed instruction at 8000773C: lwz r7 __OSLastInterruptTime@sda21(r0)
Parsed instruction at 80007740: lwz r8 __OSLastInterruptTime+0x4@sda21(r0)
Parsed instruction at 80007744: bl OSReport
Parsed instruction at 80007748: bl PPCHalt
Parsed instruction at 8000774C: lmw r25 0x1c(r1)
Parsed instruction at 80007750: lwz r0 0x3c(r1)
Parsed instruction at 80007754: addi r1 r1 0x38
Parsed instruction at 80007758: mtlr r0
Parsed instruction at 8000775C: blr 
End of function: __OSUnhandledException, 133 instructions
Parsed function: OSDisableInterrupts at 0x80007760
Parsed instruction at 80007760: mfmsr r3
Parsed instruction at 80007764: rlwinm r4 r3 0 17 15
Parsed instruction at 80007768: mtmsr r4
Parsed instruction at 8000776C: extrwi r3 r3 1 16
Parsed instruction at 80007770: blr 
End of function: OSDisableInterrupts, 5 instructions
Parsed function: OSEnableInterrupts at 0x80007774
Parsed instruction at 80007774: mfmsr r3
Parsed instruction at 80007778: ori r4 r3 0x8000
Parsed instruction at 8000777C: mtmsr r4
Parsed instruction at 80007780: extrwi r3 r3 1 16
Parsed instruction at 80007784: blr 
End of function: OSEnableInterrupts, 5 instructions
Parsed function: OSRestoreInterrupts at 0x80007788
Parsed instruction at 80007788: cmpwi r3 0x0
Parsed instruction at 8000778C: mfmsr r4
Parsed instruction at 80007790: beq .L_8000779C
Parsed instruction at 80007794: ori r5 r4 0x8000
Parsed instruction at 80007798: b .L_800077A0
Parsed label: L_8000779C:
Parsed instruction at 8000779C: rlwinm r5 r4 0 17 15
Parsed label: L_800077A0:
Parsed instruction at 800077A0: mtmsr r5
Parsed instruction at 800077A4: extrwi r4 r4 1 16
Parsed instruction at 800077A8: blr 
End of function: OSRestoreInterrupts, 11 instructions
Parsed function: __OSSetInterruptHandler at 0x800077AC
Parsed instruction at 800077AC: extsh r0 r3
Parsed instruction at 800077B0: lwz r3 InterruptHandlerTable_8001EE98@sda21(r0)
Parsed instruction at 800077B4: slwi r0 r0 2
Parsed instruction at 800077B8: add r5 r3 r0
Parsed instruction at 800077BC: lwz r3 0x0(r5)
Parsed instruction at 800077C0: stw r4 0x0(r5)
Parsed instruction at 800077C4: blr 
End of function: __OSSetInterruptHandler, 7 instructions
Parsed function: fn_800077C8 at 0x800077C8
Parsed instruction at 800077C8: extsh r0 r3
Parsed instruction at 800077CC: lwz r3 InterruptHandlerTable_8001EE98@sda21(r0)
Parsed instruction at 800077D0: slwi r0 r0 2
Parsed instruction at 800077D4: lwzx r3 r3 r0
Parsed instruction at 800077D8: blr 
End of function: fn_800077C8, 5 instructions
Parsed function: __OSInterruptInit at 0x800077DC
Parsed instruction at 800077DC: mflr r0
Parsed instruction at 800077E0: stw r0 0x4(r1)
Parsed instruction at 800077E4: stwu r1 -0x10(r1)
Parsed instruction at 800077E8: stw r31 0xc(r1)
Parsed instruction at 800077EC: lis r31 0x8000
Parsed instruction at 800077F0: addi r0 r31 0x3040
Parsed instruction at 800077F4: stw r0 InterruptHandlerTable_8001EE98@sda21(r0)
Parsed instruction at 800077F8: li r4 0x0
Parsed instruction at 800077FC: li r5 0x80
Parsed instruction at 80007800: lwz r3 InterruptHandlerTable_8001EE98@sda21(r0)
Parsed instruction at 80007804: bl memset
Parsed instruction at 80007808: li r0 0x0
Parsed instruction at 8000780C: stw r0 0xc4(r31)
Parsed instruction at 80007810: lis r3 0xcc00
Parsed instruction at 80007814: addi r4 r3 0x3000
Parsed instruction at 80007818: stw r0 0xc8(r31)
Parsed instruction at 8000781C: li r0 0xf0
Parsed instruction at 80007820: li r3 -0x20
Parsed instruction at 80007824: stw r0 0x4(r4)
Parsed instruction at 80007828: bl __OSMaskInterrupts
Parsed instruction at 8000782C: lis r3 ExternalInterruptHandler@ha
Parsed instruction at 80007830: addi r4 r3 ExternalInterruptHandler@l
Parsed instruction at 80007834: li r3 0x4
Parsed instruction at 80007838: bl __OSSetExceptionHandler
Parsed instruction at 8000783C: lwz r0 0x14(r1)
Parsed instruction at 80007840: lwz r31 0xc(r1)
Parsed instruction at 80007844: addi r1 r1 0x10
Parsed instruction at 80007848: mtlr r0
Parsed instruction at 8000784C: blr 
End of function: __OSInterruptInit, 29 instructions
Parsed function: fn_80007850 at 0x80007850
Parsed instruction at 80007850: cntlzw r0 r3
Parsed instruction at 80007854: cmpwi r0 0xc
Parsed instruction at 80007858: bge .L_8000787C
Parsed instruction at 8000785C: cmpwi r0 0x8
Parsed instruction at 80007860: beq .L_8000795C
Parsed instruction at 80007864: bge .L_8000798C
Parsed instruction at 80007868: cmpwi r0 0x5
Parsed instruction at 8000786C: bge .L_80007908
Parsed instruction at 80007870: cmpwi r0 0x0
Parsed instruction at 80007874: bge .L_8000789C
Parsed instruction at 80007878: b .L_80007B24
Parsed label: L_8000787C:
Parsed instruction at 8000787C: cmpwi r0 0x11
Parsed instruction at 80007880: bge .L_80007890
Parsed instruction at 80007884: cmpwi r0 0xf
Parsed instruction at 80007888: bge .L_80007A30
Parsed instruction at 8000788C: b .L_800079DC
Parsed label: L_80007890:
Parsed instruction at 80007890: cmpwi r0 0x1b
Parsed instruction at 80007894: bge .L_80007B24
Parsed instruction at 80007898: b .L_80007A70
Parsed label: L_8000789C:
Parsed instruction at 8000789C: clrrwi r0 r4 31
Parsed instruction at 800078A0: cmplwi r0 0x0
Parsed instruction at 800078A4: li r5 0x0
Parsed instruction at 800078A8: bne .L_800078B0
Parsed instruction at 800078AC: ori r5 r5 0x1
Parsed label: L_800078B0:
Parsed instruction at 800078B0: rlwinm r0 r4 0 1 1
Parsed instruction at 800078B4: cmplwi r0 0x0
Parsed instruction at 800078B8: bne .L_800078C0
Parsed instruction at 800078BC: ori r5 r5 0x2
Parsed label: L_800078C0:
Parsed instruction at 800078C0: rlwinm r0 r4 0 2 2
Parsed instruction at 800078C4: cmplwi r0 0x0
Parsed instruction at 800078C8: bne .L_800078D0
Parsed instruction at 800078CC: ori r5 r5 0x4
Parsed label: L_800078D0:
Parsed instruction at 800078D0: rlwinm r0 r4 0 3 3
Parsed instruction at 800078D4: cmplwi r0 0x0
Parsed instruction at 800078D8: bne .L_800078E0
Parsed instruction at 800078DC: ori r5 r5 0x8
Parsed label: L_800078E0:
Parsed instruction at 800078E0: rlwinm r0 r4 0 4 4
Parsed instruction at 800078E4: cmplwi r0 0x0
Parsed instruction at 800078E8: bne .L_800078F0
Parsed instruction at 800078EC: ori r5 r5 0x10
Parsed label: L_800078F0:
Parsed instruction at 800078F0: lis r4 0xcc00
Parsed instruction at 800078F4: clrlwi r0 r5 16
Parsed instruction at 800078F8: addi r4 r4 0x4000
Parsed instruction at 800078FC: sth r0 0x1c(r4)
Parsed instruction at 80007900: clrlwi r3 r3 5
Parsed instruction at 80007904: b .L_80007B24
Parsed label: L_80007908:
Parsed instruction at 80007908: lis r5 0xcc00
Parsed instruction at 8000790C: addi r5 r5 0x5000
Parsed instruction at 80007910: addi r5 r5 0xa
Parsed instruction at 80007914: rlwinm r0 r4 0 5 5
Parsed instruction at 80007918: lhz r6 0x0(r5)
Parsed instruction at 8000791C: cmplwi r0 0x0
Parsed instruction at 80007920: rlwinm r6 r6 0 29 22
Parsed instruction at 80007924: bne .L_8000792C
Parsed instruction at 80007928: ori r6 r6 0x10
Parsed label: L_8000792C:
Parsed instruction at 8000792C: rlwinm r0 r4 0 6 6
Parsed instruction at 80007930: cmplwi r0 0x0
Parsed instruction at 80007934: bne .L_8000793C
Parsed instruction at 80007938: ori r6 r6 0x40
Parsed label: L_8000793C:
Parsed instruction at 8000793C: rlwinm r0 r4 0 7 7
Parsed instruction at 80007940: cmplwi r0 0x0
Parsed instruction at 80007944: bne .L_8000794C
Parsed instruction at 80007948: ori r6 r6 0x100
Parsed label: L_8000794C:
Parsed instruction at 8000794C: clrlwi r0 r6 16
Parsed instruction at 80007950: sth r0 0x0(r5)
Parsed instruction at 80007954: rlwinm r3 r3 0 8 4
Parsed instruction at 80007958: b .L_80007B24
Parsed label: L_8000795C:
Parsed instruction at 8000795C: rlwinm r0 r4 0 8 8
Parsed instruction at 80007960: lis r4 0xcc00
Parsed instruction at 80007964: cmplwi r0 0x0
Parsed instruction at 80007968: lwz r5 0x6c00(r4)
Parsed instruction at 8000796C: li r0 -0x2d
Parsed instruction at 80007970: and r5 r5 r0
Parsed instruction at 80007974: bne .L_8000797C
Parsed instruction at 80007978: ori r5 r5 0x4
Parsed label: L_8000797C:
Parsed instruction at 8000797C: lis r4 0xcc00
Parsed instruction at 80007980: stw r5 0x6c00(r4)
Parsed instruction at 80007984: rlwinm r3 r3 0 9 7
Parsed instruction at 80007988: b .L_80007B24
Parsed label: L_8000798C:
Parsed instruction at 8000798C: rlwinm r0 r4 0 9 9
Parsed instruction at 80007990: lis r5 0xcc00
Parsed instruction at 80007994: cmplwi r0 0x0
Parsed instruction at 80007998: lwz r5 0x6800(r5)
Parsed instruction at 8000799C: li r0 -0x2c10
Parsed instruction at 800079A0: and r5 r5 r0
Parsed instruction at 800079A4: bne .L_800079AC
Parsed instruction at 800079A8: ori r5 r5 0x1
Parsed label: L_800079AC:
Parsed instruction at 800079AC: rlwinm r0 r4 0 10 10
Parsed instruction at 800079B0: cmplwi r0 0x0
Parsed instruction at 800079B4: bne .L_800079BC
Parsed instruction at 800079B8: ori r5 r5 0x4
Parsed label: L_800079BC:
Parsed instruction at 800079BC: rlwinm r0 r4 0 11 11
Parsed instruction at 800079C0: cmplwi r0 0x0
Parsed instruction at 800079C4: bne .L_800079CC
Parsed instruction at 800079C8: ori r5 r5 0x400
Parsed label: L_800079CC:
Parsed instruction at 800079CC: lis r4 0xcc00
Parsed instruction at 800079D0: stw r5 0x6800(r4)
Parsed instruction at 800079D4: rlwinm r3 r3 0 12 8
Parsed instruction at 800079D8: b .L_80007B24
Parsed label: L_800079DC:
Parsed instruction at 800079DC: lis r5 0xcc00
Parsed instruction at 800079E0: addi r6 r5 0x6800
Parsed instruction at 800079E4: addi r6 r6 0x14
Parsed instruction at 800079E8: rlwinm r0 r4 0 12 12
Parsed instruction at 800079EC: lwz r7 0x0(r6)
Parsed instruction at 800079F0: li r5 -0xc10
Parsed instruction at 800079F4: cmplwi r0 0x0
Parsed instruction at 800079F8: and r7 r7 r5
Parsed instruction at 800079FC: bne .L_80007A04
Parsed instruction at 80007A00: ori r7 r7 0x1
Parsed label: L_80007A04:
Parsed instruction at 80007A04: rlwinm r0 r4 0 13 13
Parsed instruction at 80007A08: cmplwi r0 0x0
Parsed instruction at 80007A0C: bne .L_80007A14
Parsed instruction at 80007A10: ori r7 r7 0x4
Parsed label: L_80007A14:
Parsed instruction at 80007A14: rlwinm r0 r4 0 14 14
Parsed instruction at 80007A18: cmplwi r0 0x0
Parsed instruction at 80007A1C: bne .L_80007A24
Parsed instruction at 80007A20: ori r7 r7 0x400
Parsed label: L_80007A24:
Parsed instruction at 80007A24: stw r7 0x0(r6)
Parsed instruction at 80007A28: rlwinm r3 r3 0 15 11
Parsed instruction at 80007A2C: b .L_80007B24
Parsed label: L_80007A30:
Parsed instruction at 80007A30: lis r5 0xcc00
Parsed instruction at 80007A34: addi r5 r5 0x6800
Parsed instruction at 80007A38: addi r5 r5 0x28
Parsed instruction at 80007A3C: rlwinm r0 r4 0 15 15
Parsed instruction at 80007A40: lwz r6 0x0(r5)
Parsed instruction at 80007A44: cmplwi r0 0x0
Parsed instruction at 80007A48: clrrwi r6 r6 4
Parsed instruction at 80007A4C: bne .L_80007A54
Parsed instruction at 80007A50: ori r6 r6 0x1
Parsed label: L_80007A54:
Parsed instruction at 80007A54: rlwinm r0 r4 0 16 16
Parsed instruction at 80007A58: cmplwi r0 0x0
Parsed instruction at 80007A5C: bne .L_80007A64
Parsed instruction at 80007A60: ori r6 r6 0x4
Parsed label: L_80007A64:
Parsed instruction at 80007A64: stw r6 0x0(r5)
Parsed instruction at 80007A68: rlwinm r3 r3 0 17 14
Parsed instruction at 80007A6C: b .L_80007B24
Parsed label: L_80007A70:
Parsed instruction at 80007A70: rlwinm r0 r4 0 17 17
Parsed instruction at 80007A74: cmplwi r0 0x0
Parsed instruction at 80007A78: li r5 0xf0
Parsed instruction at 80007A7C: bne .L_80007A84
Parsed instruction at 80007A80: ori r5 r5 0x800
Parsed label: L_80007A84:
Parsed instruction at 80007A84: rlwinm r0 r4 0 20 20
Parsed instruction at 80007A88: cmplwi r0 0x0
Parsed instruction at 80007A8C: bne .L_80007A94
Parsed instruction at 80007A90: ori r5 r5 0x8
Parsed label: L_80007A94:
Parsed instruction at 80007A94: rlwinm r0 r4 0 21 21
Parsed instruction at 80007A98: cmplwi r0 0x0
Parsed instruction at 80007A9C: bne .L_80007AA4
Parsed instruction at 80007AA0: ori r5 r5 0x4
Parsed label: L_80007AA4:
Parsed instruction at 80007AA4: rlwinm r0 r4 0 22 22
Parsed instruction at 80007AA8: cmplwi r0 0x0
Parsed instruction at 80007AAC: bne .L_80007AB4
Parsed instruction at 80007AB0: ori r5 r5 0x2
Parsed label: L_80007AB4:
Parsed instruction at 80007AB4: rlwinm r0 r4 0 23 23
Parsed instruction at 80007AB8: cmplwi r0 0x0
Parsed instruction at 80007ABC: bne .L_80007AC4
Parsed instruction at 80007AC0: ori r5 r5 0x1
Parsed label: L_80007AC4:
Parsed instruction at 80007AC4: rlwinm r0 r4 0 24 24
Parsed instruction at 80007AC8: cmplwi r0 0x0
Parsed instruction at 80007ACC: bne .L_80007AD4
Parsed instruction at 80007AD0: ori r5 r5 0x100
Parsed label: L_80007AD4:
Parsed instruction at 80007AD4: rlwinm r0 r4 0 25 25
Parsed instruction at 80007AD8: cmplwi r0 0x0
Parsed instruction at 80007ADC: bne .L_80007AE4
Parsed instruction at 80007AE0: ori r5 r5 0x1000
Parsed label: L_80007AE4:
Parsed instruction at 80007AE4: rlwinm r0 r4 0 18 18
Parsed instruction at 80007AE8: cmplwi r0 0x0
Parsed instruction at 80007AEC: bne .L_80007AF4
Parsed instruction at 80007AF0: ori r5 r5 0x200
Parsed label: L_80007AF4:
Parsed instruction at 80007AF4: rlwinm r0 r4 0 19 19
Parsed instruction at 80007AF8: cmplwi r0 0x0
Parsed instruction at 80007AFC: bne .L_80007B04
Parsed instruction at 80007B00: ori r5 r5 0x400
Parsed label: L_80007B04:
Parsed instruction at 80007B04: rlwinm r0 r4 0 26 26
Parsed instruction at 80007B08: cmplwi r0 0x0
Parsed instruction at 80007B0C: bne .L_80007B14
Parsed instruction at 80007B10: ori r5 r5 0x2000
Parsed label: L_80007B14:
Parsed instruction at 80007B14: lis r4 0xcc00
Parsed instruction at 80007B18: addi r4 r4 0x3000
Parsed instruction at 80007B1C: stw r5 0x4(r4)
Parsed instruction at 80007B20: rlwinm r3 r3 0 27 16
Parsed label: L_80007B24:
Parsed instruction at 80007B24: blr 
End of function: fn_80007850, 219 instructions
Parsed function: __OSMaskInterrupts at 0x80007B28
Parsed instruction at 80007B28: mflr r0
Parsed instruction at 80007B2C: stw r0 0x4(r1)
Parsed instruction at 80007B30: stwu r1 -0x20(r1)
Parsed instruction at 80007B34: stw r31 0x1c(r1)
Parsed instruction at 80007B38: stw r30 0x18(r1)
Parsed instruction at 80007B3C: stw r29 0x14(r1)
Parsed instruction at 80007B40: mr r31 r3
Parsed instruction at 80007B44: bl OSDisableInterrupts
Parsed instruction at 80007B48: lis r4 0x8000
Parsed instruction at 80007B4C: lwz r29 0xc4(r4)
Parsed instruction at 80007B50: mr r30 r3
Parsed instruction at 80007B54: lwz r5 0xc8(r4)
Parsed instruction at 80007B58: or r0 r29 r5
Parsed instruction at 80007B5C: andc r3 r31 r0
Parsed instruction at 80007B60: or r31 r31 r29
Parsed instruction at 80007B64: stw r31 0xc4(r4)
Parsed instruction at 80007B68: or r31 r31 r5
Parsed instruction at 80007B6C: b .L_80007B70
Parsed label: L_80007B70:
Parsed instruction at 80007B70: b .L_80007B74
Parsed label: L_80007B74:
Parsed instruction at 80007B74: b .L_80007B80
Parsed label: L_80007B78:
Parsed instruction at 80007B78: mr r4 r31
Parsed instruction at 80007B7C: bl fn_80007850
Parsed label: L_80007B80:
Parsed instruction at 80007B80: cmplwi r3 0x0
Parsed instruction at 80007B84: bne .L_80007B78
Parsed instruction at 80007B88: mr r3 r30
Parsed instruction at 80007B8C: bl OSRestoreInterrupts
Parsed instruction at 80007B90: mr r3 r29
Parsed instruction at 80007B94: lwz r0 0x24(r1)
Parsed instruction at 80007B98: lwz r31 0x1c(r1)
Parsed instruction at 80007B9C: lwz r30 0x18(r1)
Parsed instruction at 80007BA0: lwz r29 0x14(r1)
Parsed instruction at 80007BA4: addi r1 r1 0x20
Parsed instruction at 80007BA8: mtlr r0
Parsed instruction at 80007BAC: blr 
End of function: __OSMaskInterrupts, 38 instructions
Parsed function: __OSUnmaskInterrupts at 0x80007BB0
Parsed instruction at 80007BB0: mflr r0
Parsed instruction at 80007BB4: stw r0 0x4(r1)
Parsed instruction at 80007BB8: stwu r1 -0x20(r1)
Parsed instruction at 80007BBC: stw r31 0x1c(r1)
Parsed instruction at 80007BC0: stw r30 0x18(r1)
Parsed instruction at 80007BC4: stw r29 0x14(r1)
Parsed instruction at 80007BC8: mr r31 r3
Parsed instruction at 80007BCC: bl OSDisableInterrupts
Parsed instruction at 80007BD0: lis r4 0x8000
Parsed instruction at 80007BD4: lwz r29 0xc4(r4)
Parsed instruction at 80007BD8: mr r30 r3
Parsed instruction at 80007BDC: lwz r5 0xc8(r4)
Parsed instruction at 80007BE0: or r0 r29 r5
Parsed instruction at 80007BE4: and r3 r31 r0
Parsed instruction at 80007BE8: andc r31 r29 r31
Parsed instruction at 80007BEC: stw r31 0xc4(r4)
Parsed instruction at 80007BF0: or r31 r31 r5
Parsed instruction at 80007BF4: b .L_80007BF8
Parsed label: L_80007BF8:
Parsed instruction at 80007BF8: b .L_80007BFC
Parsed label: L_80007BFC:
Parsed instruction at 80007BFC: b .L_80007C08
Parsed label: L_80007C00:
Parsed instruction at 80007C00: mr r4 r31
Parsed instruction at 80007C04: bl fn_80007850
Parsed label: L_80007C08:
Parsed instruction at 80007C08: cmplwi r3 0x0
Parsed instruction at 80007C0C: bne .L_80007C00
Parsed instruction at 80007C10: mr r3 r30
Parsed instruction at 80007C14: bl OSRestoreInterrupts
Parsed instruction at 80007C18: mr r3 r29
Parsed instruction at 80007C1C: lwz r0 0x24(r1)
Parsed instruction at 80007C20: lwz r31 0x1c(r1)
Parsed instruction at 80007C24: lwz r30 0x18(r1)
Parsed instruction at 80007C28: lwz r29 0x14(r1)
Parsed instruction at 80007C2C: addi r1 r1 0x20
Parsed instruction at 80007C30: mtlr r0
Parsed instruction at 80007C34: blr 
End of function: __OSUnmaskInterrupts, 38 instructions
Parsed function: fn_80007C38 at 0x80007C38
Parsed instruction at 80007C38: mflr r0
Parsed instruction at 80007C3C: stw r0 0x4(r1)
Parsed instruction at 80007C40: stwu r1 -0x28(r1)
Parsed instruction at 80007C44: stw r31 0x24(r1)
Parsed instruction at 80007C48: stw r30 0x20(r1)
Parsed instruction at 80007C4C: stw r29 0x1c(r1)
Parsed instruction at 80007C50: mr r30 r4
Parsed instruction at 80007C54: lis r3 0xcc00
Parsed instruction at 80007C58: lwz r31 0x3000(r3)
Parsed instruction at 80007C5C: rlwinm r31 r31 0 16 14
Parsed instruction at 80007C60: cmplwi r31 0x0
Parsed instruction at 80007C64: beq .L_80007C7C
Parsed instruction at 80007C68: addi r3 r3 0x3000
Parsed instruction at 80007C6C: lwz r0 0x4(r3)
Parsed instruction at 80007C70: and r0 r31 r0
Parsed instruction at 80007C74: cmplwi r0 0x0
Parsed instruction at 80007C78: bne .L_80007C84
Parsed label: L_80007C7C:
Parsed instruction at 80007C7C: mr r3 r30
Parsed instruction at 80007C80: bl OSLoadContext
Parsed label: L_80007C84:
Parsed instruction at 80007C84: rlwinm r0 r31 0 24 24
Parsed instruction at 80007C88: cmplwi r0 0x0
Parsed instruction at 80007C8C: li r0 0x0
Parsed instruction at 80007C90: beq .L_80007CF0
Parsed instruction at 80007C94: lis r3 0xcc00
Parsed instruction at 80007C98: addi r3 r3 0x4000
Parsed instruction at 80007C9C: lhz r4 0x1e(r3)
Parsed instruction at 80007CA0: clrlwi r3 r4 31
Parsed instruction at 80007CA4: cmplwi r3 0x0
Parsed instruction at 80007CA8: beq .L_80007CB0
Parsed instruction at 80007CAC: oris r0 r0 0x8000
Parsed label: L_80007CB0:
Parsed instruction at 80007CB0: rlwinm r3 r4 0 30 30
Parsed instruction at 80007CB4: cmplwi r3 0x0
Parsed instruction at 80007CB8: beq .L_80007CC0
Parsed instruction at 80007CBC: oris r0 r0 0x4000
Parsed label: L_80007CC0:
Parsed instruction at 80007CC0: rlwinm r3 r4 0 29 29
Parsed instruction at 80007CC4: cmplwi r3 0x0
Parsed instruction at 80007CC8: beq .L_80007CD0
Parsed instruction at 80007CCC: oris r0 r0 0x2000
Parsed label: L_80007CD0:
Parsed instruction at 80007CD0: rlwinm r3 r4 0 28 28
Parsed instruction at 80007CD4: cmplwi r3 0x0
Parsed instruction at 80007CD8: beq .L_80007CE0
Parsed instruction at 80007CDC: oris r0 r0 0x1000
Parsed label: L_80007CE0:
Parsed instruction at 80007CE0: rlwinm r3 r4 0 27 27
Parsed instruction at 80007CE4: cmplwi r3 0x0
Parsed instruction at 80007CE8: beq .L_80007CF0
Parsed instruction at 80007CEC: oris r0 r0 0x800
Parsed label: L_80007CF0:
Parsed instruction at 80007CF0: rlwinm r3 r31 0 25 25
Parsed instruction at 80007CF4: cmplwi r3 0x0
Parsed instruction at 80007CF8: beq .L_80007D38
Parsed instruction at 80007CFC: lis r3 0xcc00
Parsed instruction at 80007D00: addi r3 r3 0x5000
Parsed instruction at 80007D04: lhz r4 0xa(r3)
Parsed instruction at 80007D08: rlwinm r3 r4 0 28 28
Parsed instruction at 80007D0C: cmplwi r3 0x0
Parsed instruction at 80007D10: beq .L_80007D18
Parsed instruction at 80007D14: oris r0 r0 0x400
Parsed label: L_80007D18:
Parsed instruction at 80007D18: rlwinm r3 r4 0 26 26
Parsed instruction at 80007D1C: cmplwi r3 0x0
Parsed instruction at 80007D20: beq .L_80007D28
Parsed instruction at 80007D24: oris r0 r0 0x200
Parsed label: L_80007D28:
Parsed instruction at 80007D28: rlwinm r3 r4 0 24 24
Parsed instruction at 80007D2C: cmplwi r3 0x0
Parsed instruction at 80007D30: beq .L_80007D38
Parsed instruction at 80007D34: oris r0 r0 0x100
Parsed label: L_80007D38:
Parsed instruction at 80007D38: rlwinm r3 r31 0 26 26
Parsed instruction at 80007D3C: cmplwi r3 0x0
Parsed instruction at 80007D40: beq .L_80007D5C
Parsed instruction at 80007D44: lis r3 0xcc00
Parsed instruction at 80007D48: lwz r3 0x6c00(r3)
Parsed instruction at 80007D4C: rlwinm r3 r3 0 28 28
Parsed instruction at 80007D50: cmplwi r3 0x0
Parsed instruction at 80007D54: beq .L_80007D5C
Parsed instruction at 80007D58: oris r0 r0 0x80
Parsed label: L_80007D5C:
Parsed instruction at 80007D5C: rlwinm r3 r31 0 27 27
Parsed instruction at 80007D60: cmplwi r3 0x0
Parsed instruction at 80007D64: beq .L_80007E08
Parsed instruction at 80007D68: lis r3 0xcc00
Parsed instruction at 80007D6C: lwz r4 0x6800(r3)
Parsed instruction at 80007D70: rlwinm r3 r4 0 30 30
Parsed instruction at 80007D74: cmplwi r3 0x0
Parsed instruction at 80007D78: beq .L_80007D80
Parsed instruction at 80007D7C: oris r0 r0 0x40
Parsed label: L_80007D80:
Parsed instruction at 80007D80: rlwinm r3 r4 0 28 28
Parsed instruction at 80007D84: cmplwi r3 0x0
Parsed instruction at 80007D88: beq .L_80007D90
Parsed instruction at 80007D8C: oris r0 r0 0x20
Parsed label: L_80007D90:
Parsed instruction at 80007D90: rlwinm r3 r4 0 20 20
Parsed instruction at 80007D94: cmplwi r3 0x0
Parsed instruction at 80007D98: beq .L_80007DA0
Parsed instruction at 80007D9C: oris r0 r0 0x10
Parsed label: L_80007DA0:
Parsed instruction at 80007DA0: lis r3 0xcc00
Parsed instruction at 80007DA4: addi r3 r3 0x6800
Parsed instruction at 80007DA8: lwz r4 0x14(r3)
Parsed instruction at 80007DAC: rlwinm r3 r4 0 30 30
Parsed instruction at 80007DB0: cmplwi r3 0x0
Parsed instruction at 80007DB4: beq .L_80007DBC
Parsed instruction at 80007DB8: oris r0 r0 0x8
Parsed label: L_80007DBC:
Parsed instruction at 80007DBC: rlwinm r3 r4 0 28 28
Parsed instruction at 80007DC0: cmplwi r3 0x0
Parsed instruction at 80007DC4: beq .L_80007DCC
Parsed instruction at 80007DC8: oris r0 r0 0x4
Parsed label: L_80007DCC:
Parsed instruction at 80007DCC: rlwinm r3 r4 0 20 20
Parsed instruction at 80007DD0: cmplwi r3 0x0
Parsed instruction at 80007DD4: beq .L_80007DDC
Parsed instruction at 80007DD8: oris r0 r0 0x2
Parsed label: L_80007DDC:
Parsed instruction at 80007DDC: lis r3 0xcc00
Parsed instruction at 80007DE0: addi r3 r3 0x6800
Parsed instruction at 80007DE4: lwz r4 0x28(r3)
Parsed instruction at 80007DE8: rlwinm r3 r4 0 30 30
Parsed instruction at 80007DEC: cmplwi r3 0x0
Parsed instruction at 80007DF0: beq .L_80007DF8
Parsed instruction at 80007DF4: oris r0 r0 0x1
Parsed label: L_80007DF8:
Parsed instruction at 80007DF8: rlwinm r3 r4 0 28 28
Parsed instruction at 80007DFC: cmplwi r3 0x0
Parsed instruction at 80007E00: beq .L_80007E08
Parsed instruction at 80007E04: ori r0 r0 0x8000
Parsed label: L_80007E08:
Parsed instruction at 80007E08: rlwinm r3 r31 0 18 18
Parsed instruction at 80007E0C: cmplwi r3 0x0
Parsed instruction at 80007E10: beq .L_80007E18
Parsed instruction at 80007E14: ori r0 r0 0x20
Parsed label: L_80007E18:
Parsed instruction at 80007E18: rlwinm r3 r31 0 19 19
Parsed instruction at 80007E1C: cmplwi r3 0x0
Parsed instruction at 80007E20: beq .L_80007E28
Parsed instruction at 80007E24: ori r0 r0 0x40
Parsed label: L_80007E28:
Parsed instruction at 80007E28: rlwinm r3 r31 0 21 21
Parsed instruction at 80007E2C: cmplwi r3 0x0
Parsed instruction at 80007E30: beq .L_80007E38
Parsed instruction at 80007E34: ori r0 r0 0x1000
Parsed label: L_80007E38:
Parsed instruction at 80007E38: rlwinm r3 r31 0 22 22
Parsed instruction at 80007E3C: cmplwi r3 0x0
Parsed instruction at 80007E40: beq .L_80007E48
Parsed instruction at 80007E44: ori r0 r0 0x2000
Parsed label: L_80007E48:
Parsed instruction at 80007E48: rlwinm r3 r31 0 23 23
Parsed instruction at 80007E4C: cmplwi r3 0x0
Parsed instruction at 80007E50: beq .L_80007E58
Parsed instruction at 80007E54: ori r0 r0 0x80
Parsed label: L_80007E58:
Parsed instruction at 80007E58: rlwinm r3 r31 0 28 28
Parsed instruction at 80007E5C: cmplwi r3 0x0
Parsed instruction at 80007E60: beq .L_80007E68
Parsed instruction at 80007E64: ori r0 r0 0x800
Parsed label: L_80007E68:
Parsed instruction at 80007E68: rlwinm r3 r31 0 29 29
Parsed instruction at 80007E6C: cmplwi r3 0x0
Parsed instruction at 80007E70: beq .L_80007E78
Parsed instruction at 80007E74: ori r0 r0 0x400
Parsed label: L_80007E78:
Parsed instruction at 80007E78: rlwinm r3 r31 0 30 30
Parsed instruction at 80007E7C: cmplwi r3 0x0
Parsed instruction at 80007E80: beq .L_80007E88
Parsed instruction at 80007E84: ori r0 r0 0x200
Parsed label: L_80007E88:
Parsed instruction at 80007E88: rlwinm r3 r31 0 20 20
Parsed instruction at 80007E8C: cmplwi r3 0x0
Parsed instruction at 80007E90: beq .L_80007E98
Parsed instruction at 80007E94: ori r0 r0 0x4000
Parsed label: L_80007E98:
Parsed instruction at 80007E98: clrlwi r3 r31 31
Parsed instruction at 80007E9C: cmplwi r3 0x0
Parsed instruction at 80007EA0: beq .L_80007EA8
Parsed instruction at 80007EA4: ori r0 r0 0x100
Parsed label: L_80007EA8:
Parsed instruction at 80007EA8: lis r3 0x8000
Parsed instruction at 80007EAC: lwz r4 0xc4(r3)
Parsed instruction at 80007EB0: lwz r3 0xc8(r3)
Parsed instruction at 80007EB4: or r3 r4 r3
Parsed instruction at 80007EB8: andc r4 r0 r3
Parsed instruction at 80007EBC: cmplwi r4 0x0
Parsed instruction at 80007EC0: beq .L_80007F58
Parsed instruction at 80007EC4: lis r3 lbl_8001B048@ha
Parsed instruction at 80007EC8: addi r0 r3 lbl_8001B048@l
Parsed instruction at 80007ECC: mr r3 r0
Parsed instruction at 80007ED0: b .L_80007ED4
Parsed label: L_80007ED4:
Parsed instruction at 80007ED4: b .L_80007ED8
Parsed label: L_80007ED8:
Parsed instruction at 80007ED8: lwz r0 0x0(r3)
Parsed instruction at 80007EDC: and r0 r4 r0
Parsed instruction at 80007EE0: cmplwi r0 0x0
Parsed instruction at 80007EE4: beq .L_80007EF4
Parsed instruction at 80007EE8: cntlzw r0 r0
Parsed instruction at 80007EEC: extsh r29 r0
Parsed instruction at 80007EF0: b .L_80007EFC
Parsed label: L_80007EF4:
Parsed instruction at 80007EF4: addi r3 r3 0x4
Parsed instruction at 80007EF8: b .L_80007ED8
Parsed label: L_80007EFC:
Parsed instruction at 80007EFC: lwz r3 InterruptHandlerTable_8001EE98@sda21(r0)
Parsed instruction at 80007F00: slwi r0 r29 2
Parsed instruction at 80007F04: lwzx r31 r3 r0
Parsed instruction at 80007F08: cmplwi r31 0x0
Parsed instruction at 80007F0C: beq .L_80007F58
Parsed instruction at 80007F10: cmpwi r29 0x4
Parsed instruction at 80007F14: ble .L_80007F30
Parsed instruction at 80007F18: sth r29 __OSLastInterrupt@sda21(r0)
Parsed instruction at 80007F1C: bl OSGetTime
Parsed instruction at 80007F20: stw r4 __OSLastInterruptTime+0x4@sda21(r0)
Parsed instruction at 80007F24: stw r3 __OSLastInterruptTime@sda21(r0)
Parsed instruction at 80007F28: lwz r0 0x198(r30)
Parsed instruction at 80007F2C: stw r0 __OSLastInterruptSrr0@sda21(r0)
Parsed label: L_80007F30:
Parsed instruction at 80007F30: bl OSDisableScheduler
Parsed instruction at 80007F34: mr r3 r29
Parsed instruction at 80007F38: mr r4 r30
Parsed instruction at 80007F3C: mr r12 r31
Parsed instruction at 80007F40: mtlr r12
Parsed instruction at 80007F44: blrl 
Parsed instruction at 80007F48: bl OSEnableScheduler
Parsed instruction at 80007F4C: bl __OSReschedule
Parsed instruction at 80007F50: mr r3 r30
Parsed instruction at 80007F54: bl OSLoadContext
Parsed label: L_80007F58:
Parsed instruction at 80007F58: mr r3 r30
Parsed instruction at 80007F5C: bl OSLoadContext
Parsed instruction at 80007F60: lwz r0 0x2c(r1)
Parsed instruction at 80007F64: lwz r31 0x24(r1)
Parsed instruction at 80007F68: lwz r30 0x20(r1)
Parsed instruction at 80007F6C: lwz r29 0x1c(r1)
Parsed instruction at 80007F70: addi r1 r1 0x28
Parsed instruction at 80007F74: mtlr r0
Parsed instruction at 80007F78: blr 
End of function: fn_80007C38, 244 instructions
Parsed function: ExternalInterruptHandler at 0x80007F7C
Parsed instruction at 80007F7C: stw r0 0x0(r4)
Parsed instruction at 80007F80: stw r1 0x4(r4)
Parsed instruction at 80007F84: stw r2 0x8(r4)
Parsed instruction at 80007F88: stmw r6 0x18(r4)
Parsed instruction at 80007F8C: mfspr r0 GQR1
Parsed instruction at 80007F90: stw r0 0x1a8(r4)
Parsed instruction at 80007F94: mfspr r0 GQR2
Parsed instruction at 80007F98: stw r0 0x1ac(r4)
Parsed instruction at 80007F9C: mfspr r0 GQR3
Parsed instruction at 80007FA0: stw r0 0x1b0(r4)
Parsed instruction at 80007FA4: mfspr r0 GQR4
Parsed instruction at 80007FA8: stw r0 0x1b4(r4)
Parsed instruction at 80007FAC: mfspr r0 GQR5
Parsed instruction at 80007FB0: stw r0 0x1b8(r4)
Parsed instruction at 80007FB4: mfspr r0 GQR6
Parsed instruction at 80007FB8: stw r0 0x1bc(r4)
Parsed instruction at 80007FBC: mfspr r0 GQR7
Parsed instruction at 80007FC0: stw r0 0x1c0(r4)
Parsed instruction at 80007FC4: b fn_80007C38
End of function: ExternalInterruptHandler, 19 instructions
Parsed function: __OSModuleInit at 0x80007FC8
Parsed instruction at 80007FC8: lis r4 0x8000
Parsed instruction at 80007FCC: li r0 0x0
Parsed instruction at 80007FD0: stw r0 0x30cc(r4)
Parsed instruction at 80007FD4: stw r0 0x30c8(r4)
Parsed instruction at 80007FD8: stw r0 0x30d0(r4)
Parsed instruction at 80007FDC: blr 
End of function: __OSModuleInit, 6 instructions
Parsed function: fn_80007FE0 at 0x80007FE0
Parsed instruction at 80007FE0: mflr r0
Parsed instruction at 80007FE4: cmpwi r3 0x0
Parsed instruction at 80007FE8: stw r0 0x4(r1)
Parsed instruction at 80007FEC: stwu r1 -0x8(r1)
Parsed instruction at 80007FF0: beq .L_80008008
Parsed instruction at 80007FF4: lis r3 0xcc00
Parsed instruction at 80007FF8: li r0 0xff
Parsed instruction at 80007FFC: sth r0 0x4010(r3)
Parsed instruction at 80008000: lis r3 0xf000
Parsed instruction at 80008004: bl __OSMaskInterrupts
Parsed label: L_80008008:
Parsed instruction at 80008008: li r3 0x1
Parsed instruction at 8000800C: lwz r0 0xc(r1)
Parsed instruction at 80008010: addi r1 r1 0x8
Parsed instruction at 80008014: mtlr r0
Parsed instruction at 80008018: blr 
End of function: fn_80007FE0, 16 instructions
Parsed function: MEMIntrruptHandler at 0x8000801C
Parsed instruction at 8000801C: mflr r0
Parsed instruction at 80008020: lis r3 0xcc00
Parsed instruction at 80008024: stw r0 0x4(r1)
Parsed instruction at 80008028: addi r8 r3 0x4000
Parsed instruction at 8000802C: li r0 0x0
Parsed instruction at 80008030: stwu r1 -0x8(r1)
Parsed instruction at 80008034: lhz r7 0x4024(r3)
Parsed instruction at 80008038: lis r3 __OSErrorTable@ha
Parsed instruction at 8000803C: lhz r6 0x22(r8)
Parsed instruction at 80008040: addi r3 r3 __OSErrorTable@l
Parsed instruction at 80008044: lhz r5 0x1e(r8)
Parsed instruction at 80008048: rlwimi r6 r7 16 6 15
Parsed instruction at 8000804C: sth r0 0x20(r8)
Parsed instruction at 80008050: lwz r12 0x3c(r3)
Parsed instruction at 80008054: cmplwi r12 0x0
Parsed instruction at 80008058: beq .L_80008070
Parsed instruction at 8000805C: mtlr r12
Parsed instruction at 80008060: li r3 0xf
Parsed instruction at 80008064: crclr cr1eq
Parsed instruction at 80008068: blrl 
Parsed instruction at 8000806C: b .L_80008078
Parsed label: L_80008070:
Parsed instruction at 80008070: li r3 0xf
Parsed instruction at 80008074: bl __OSUnhandledException
Parsed label: L_80008078:
Parsed instruction at 80008078: lwz r0 0xc(r1)
Parsed instruction at 8000807C: addi r1 r1 0x8
Parsed instruction at 80008080: mtlr r0
Parsed instruction at 80008084: blr 
End of function: MEMIntrruptHandler, 29 instructions
Parsed function: Config24MB at 0x80008088
Parsed instruction at 80008088: li r7 0x0
Parsed instruction at 8000808C: lis r4 0x0
Parsed instruction at 80008090: addi r4 r4 0x2
Parsed instruction at 80008094: lis r3 0x8000
Parsed instruction at 80008098: addi r3 r3 0x1ff
Parsed instruction at 8000809C: lis r6 0x100
Parsed instruction at 800080A0: addi r6 r6 0x2
Parsed instruction at 800080A4: lis r5 0x8100
Parsed instruction at 800080A8: addi r5 r5 0xff
Parsed instruction at 800080AC: isync 
Parsed instruction at 800080B0: mtdbatu 0 r7
Parsed instruction at 800080B4: mtdbatl 0 r4
Parsed instruction at 800080B8: mtdbatu 0 r3
Parsed instruction at 800080BC: isync 
Parsed instruction at 800080C0: mtibatu 0 r7
Parsed instruction at 800080C4: mtibatl 0 r4
Parsed instruction at 800080C8: mtibatu 0 r3
Parsed instruction at 800080CC: isync 
Parsed instruction at 800080D0: mtdbatu 2 r7
Parsed instruction at 800080D4: mtdbatl 2 r6
Parsed instruction at 800080D8: mtdbatu 2 r5
Parsed instruction at 800080DC: isync 
Parsed instruction at 800080E0: mtibatu 2 r7
Parsed instruction at 800080E4: mtibatl 2 r6
Parsed instruction at 800080E8: mtibatu 2 r5
Parsed instruction at 800080EC: isync 
Parsed instruction at 800080F0: mfmsr r3
Parsed instruction at 800080F4: ori r3 r3 0x30
Parsed instruction at 800080F8: mtsrr1 r3
Parsed instruction at 800080FC: mflr r3
Parsed instruction at 80008100: mtsrr0 r3
Parsed instruction at 80008104: rfi 
End of function: Config24MB, 32 instructions
Parsed function: Config48MB at 0x80008108
Parsed instruction at 80008108: li r7 0x0
Parsed instruction at 8000810C: lis r4 0x0
Parsed instruction at 80008110: addi r4 r4 0x2
Parsed instruction at 80008114: lis r3 0x8000
Parsed instruction at 80008118: addi r3 r3 0x3ff
Parsed instruction at 8000811C: lis r6 0x200
Parsed instruction at 80008120: addi r6 r6 0x2
Parsed instruction at 80008124: lis r5 0x8200
Parsed instruction at 80008128: addi r5 r5 0x1ff
Parsed instruction at 8000812C: isync 
Parsed instruction at 80008130: mtdbatu 0 r7
Parsed instruction at 80008134: mtdbatl 0 r4
Parsed instruction at 80008138: mtdbatu 0 r3
Parsed instruction at 8000813C: isync 
Parsed instruction at 80008140: mtibatu 0 r7
Parsed instruction at 80008144: mtibatl 0 r4
Parsed instruction at 80008148: mtibatu 0 r3
Parsed instruction at 8000814C: isync 
Parsed instruction at 80008150: mtdbatu 2 r7
Parsed instruction at 80008154: mtdbatl 2 r6
Parsed instruction at 80008158: mtdbatu 2 r5
Parsed instruction at 8000815C: isync 
Parsed instruction at 80008160: mtibatu 2 r7
Parsed instruction at 80008164: mtibatl 2 r6
Parsed instruction at 80008168: mtibatu 2 r5
Parsed instruction at 8000816C: isync 
Parsed instruction at 80008170: mfmsr r3
Parsed instruction at 80008174: ori r3 r3 0x30
Parsed instruction at 80008178: mtsrr1 r3
Parsed instruction at 8000817C: mflr r3
Parsed instruction at 80008180: mtsrr0 r3
Parsed instruction at 80008184: rfi 
End of function: Config48MB, 32 instructions
Parsed function: RealMode at 0x80008188
Parsed instruction at 80008188: clrlwi r3 r3 2
Parsed instruction at 8000818C: mtsrr0 r3
Parsed instruction at 80008190: mfmsr r3
Parsed instruction at 80008194: rlwinm r3 r3 0 28 25
Parsed instruction at 80008198: mtsrr1 r3
Parsed instruction at 8000819C: rfi 
End of function: RealMode, 6 instructions
Parsed function: __OSInitMemoryProtection at 0x800081A0
Parsed instruction at 800081A0: mflr r0
Parsed instruction at 800081A4: stw r0 0x4(r1)
Parsed instruction at 800081A8: stwu r1 -0x48(r1)
Parsed instruction at 800081AC: stw r31 0x44(r1)
Parsed instruction at 800081B0: stw r30 0x40(r1)
Parsed instruction at 800081B4: stw r29 0x3c(r1)
Parsed instruction at 800081B8: lis r3 0x8000
Parsed instruction at 800081BC: lwz r29 0xf0(r3)
Parsed instruction at 800081C0: bl OSDisableInterrupts
Parsed instruction at 800081C4: lis r0 0x180
Parsed instruction at 800081C8: cmplw r29 r0
Parsed instruction at 800081CC: mr r31 r3
Parsed instruction at 800081D0: bgt .L_800081E4
Parsed instruction at 800081D4: lis r3 Config24MB@ha
Parsed instruction at 800081D8: addi r3 r3 Config24MB@l
Parsed instruction at 800081DC: bl RealMode
Parsed instruction at 800081E0: b .L_800081FC
Parsed label: L_800081E4:
Parsed instruction at 800081E4: lis r0 0x300
Parsed instruction at 800081E8: cmplw r29 r0
Parsed instruction at 800081EC: bgt .L_800081FC
Parsed instruction at 800081F0: lis r3 Config48MB@ha
Parsed instruction at 800081F4: addi r3 r3 Config48MB@l
Parsed instruction at 800081F8: bl RealMode
Parsed label: L_800081FC:
Parsed instruction at 800081FC: lis r3 0xcc00
Parsed instruction at 80008200: addi r29 r3 0x4000
Parsed instruction at 80008204: li r0 0x0
Parsed instruction at 80008208: sth r0 0x20(r29)
Parsed instruction at 8000820C: li r0 0xff
Parsed instruction at 80008210: lis r3 0xf000
Parsed instruction at 80008214: sth r0 0x10(r29)
Parsed instruction at 80008218: bl __OSMaskInterrupts
Parsed instruction at 8000821C: lis r3 MEMIntrruptHandler@ha
Parsed instruction at 80008220: addi r30 r3 MEMIntrruptHandler@l
Parsed instruction at 80008224: mr r4 r30
Parsed instruction at 80008228: li r3 0x0
Parsed instruction at 8000822C: bl __OSSetInterruptHandler
Parsed instruction at 80008230: mr r4 r30
Parsed instruction at 80008234: li r3 0x1
Parsed instruction at 80008238: bl __OSSetInterruptHandler
Parsed instruction at 8000823C: mr r4 r30
Parsed instruction at 80008240: li r3 0x2
Parsed instruction at 80008244: bl __OSSetInterruptHandler
Parsed instruction at 80008248: mr r4 r30
Parsed instruction at 8000824C: li r3 0x3
Parsed instruction at 80008250: bl __OSSetInterruptHandler
Parsed instruction at 80008254: mr r4 r30
Parsed instruction at 80008258: li r3 0x4
Parsed instruction at 8000825C: bl __OSSetInterruptHandler
Parsed instruction at 80008260: lis r3 ResetFunctionInfo_8001B078@ha
Parsed instruction at 80008264: addi r3 r3 ResetFunctionInfo_8001B078@l
Parsed instruction at 80008268: bl OSRegisterResetFunction
Parsed instruction at 8000826C: lis r3 0x8000
Parsed instruction at 80008270: lwz r4 0xf0(r3)
Parsed instruction at 80008274: lwz r0 0x28(r3)
Parsed instruction at 80008278: cmplw r4 r0
Parsed instruction at 8000827C: bge .L_80008294
Parsed instruction at 80008280: subis r0 r4 0x180
Parsed instruction at 80008284: cmplwi r0 0x0
Parsed instruction at 80008288: bne .L_80008294
Parsed instruction at 8000828C: li r0 0x2
Parsed instruction at 80008290: sth r0 0x28(r29)
Parsed label: L_80008294:
Parsed instruction at 80008294: lis r3 0x800
Parsed instruction at 80008298: bl __OSUnmaskInterrupts
Parsed instruction at 8000829C: mr r3 r31
Parsed instruction at 800082A0: bl OSRestoreInterrupts
Parsed instruction at 800082A4: lwz r0 0x4c(r1)
Parsed instruction at 800082A8: lwz r31 0x44(r1)
Parsed instruction at 800082AC: lwz r30 0x40(r1)
Parsed instruction at 800082B0: lwz r29 0x3c(r1)
Parsed instruction at 800082B4: addi r1 r1 0x48
Parsed instruction at 800082B8: mtlr r0
Parsed instruction at 800082BC: blr 
End of function: __OSInitMemoryProtection, 75 instructions
Parsed function: fn_800082C0 at 0x800082C0
Parsed instruction at 800082C0: mflr r0
Parsed instruction at 800082C4: stw r0 0x4(r1)
Parsed instruction at 800082C8: stwu r1 -0x18(r1)
Parsed instruction at 800082CC: stw r31 0x14(r1)
Parsed instruction at 800082D0: li r31 0x0
Parsed instruction at 800082D4: stw r30 0x10(r1)
Parsed instruction at 800082D8: addi r30 r3 0x0
Parsed instruction at 800082DC: b .L_8000830C
Parsed label: L_800082E0:
Parsed instruction at 800082E0: lwz r5 0x10(r4)
Parsed instruction at 800082E4: addi r3 r4 0x0
Parsed instruction at 800082E8: cmplwi r5 0x0
Parsed instruction at 800082EC: bne .L_800082F8
Parsed instruction at 800082F0: stw r31 0x2f8(r30)
Parsed instruction at 800082F4: b .L_800082FC
Parsed label: L_800082F8:
Parsed instruction at 800082F8: stw r31 0x14(r5)
Parsed label: L_800082FC:
Parsed instruction at 800082FC: stw r5 0x2f4(r30)
Parsed instruction at 80008300: stw r31 0xc(r4)
Parsed instruction at 80008304: stw r31 0x8(r4)
Parsed instruction at 80008308: bl fn_80009B7C
Parsed label: L_8000830C:
Parsed instruction at 8000830C: lwz r4 0x2f4(r30)
Parsed instruction at 80008310: cmplwi r4 0x0
Parsed instruction at 80008314: bne .L_800082E0
Parsed instruction at 80008318: lwz r0 0x1c(r1)
Parsed instruction at 8000831C: lwz r31 0x14(r1)
Parsed instruction at 80008320: lwz r30 0x10(r1)
Parsed instruction at 80008324: addi r1 r1 0x18
Parsed instruction at 80008328: mtlr r0
Parsed instruction at 8000832C: blr 
End of function: fn_800082C0, 32 instructions
Parsed function: fn_80008330 at 0x80008330
Parsed instruction at 80008330: mflr r0
Parsed instruction at 80008334: stw r0 0x4(r1)
Parsed instruction at 80008338: stwu r1 -0x18(r1)
Parsed instruction at 8000833C: stw r31 0x14(r1)
Parsed instruction at 80008340: mr r31 r3
Parsed instruction at 80008344: bl OSDisableInterrupts
Parsed instruction at 80008348: bl ICFlashInvalidate
Parsed instruction at 8000834C: sync 
Parsed instruction at 80008350: isync 
Parsed instruction at 80008354: mtlr r31
Parsed instruction at 80008358: blr 
End of function: fn_80008330, 11 instructions
Parsed function: fn_8000835C at 0x8000835C
Parsed instruction at 8000835C: lwz r0 0x1c(r1)
Parsed instruction at 80008360: lwz r31 0x14(r1)
Parsed instruction at 80008364: addi r1 r1 0x18
Parsed instruction at 80008368: mtlr r0
Parsed instruction at 8000836C: blr 
End of function: fn_8000835C, 5 instructions
Parsed function: fn_80008370 at 0x80008370
Parsed instruction at 80008370: li r0 0x1
Parsed instruction at 80008374: stw r0 lbl_8001EEB8@sda21(r0)
Parsed instruction at 80008378: blr 
End of function: fn_80008370, 3 instructions
Parsed function: __OSReboot at 0x8000837C
Parsed instruction at 8000837C: mflr r0
Parsed instruction at 80008380: stw r0 0x4(r1)
Parsed instruction at 80008384: stwu r1 -0x348(r1)
Parsed instruction at 80008388: stw r31 0x344(r1)
Parsed instruction at 8000838C: stw r30 0x340(r1)
Parsed instruction at 80008390: stw r29 0x33c(r1)
Parsed instruction at 80008394: mr r29 r3
Parsed instruction at 80008398: lis r3 lbl_8001BBA0@ha
Parsed instruction at 8000839C: addi r30 r3 lbl_8001BBA0@l
Parsed instruction at 800083A0: bl OSDisableInterrupts
Parsed instruction at 800083A4: lwz r5 lbl_8001EEB0@sda21(r0)
Parsed instruction at 800083A8: lis r31 0x8180
Parsed instruction at 800083AC: li r3 0x0
Parsed instruction at 800083B0: lwz r0 lbl_8001EEB4@sda21(r0)
Parsed instruction at 800083B4: lis r4 0x8130
Parsed instruction at 800083B8: li r7 0x1
Parsed instruction at 800083BC: stw r29 -0x4(r31)
Parsed instruction at 800083C0: lis r6 0x8000
Parsed instruction at 800083C4: stw r3 -0x8(r31)
Parsed instruction at 800083C8: addi r3 r1 0x70
Parsed instruction at 800083CC: stb r7 0x30e2(r6)
Parsed instruction at 800083D0: stw r5 -0x2010(r4)
Parsed instruction at 800083D4: stw r0 -0x2014(r4)
Parsed instruction at 800083D8: bl OSClearContext
Parsed instruction at 800083DC: addi r3 r1 0x70
Parsed instruction at 800083E0: bl OSSetCurrentContext
Parsed instruction at 800083E4: bl fn_8000D27C
Parsed instruction at 800083E8: li r3 0x1
Parsed instruction at 800083EC: bl fn_8000EFB0
Parsed instruction at 800083F0: lis r3 fn_80008370@ha
Parsed instruction at 800083F4: addi r3 r3 fn_80008370@l
Parsed instruction at 800083F8: bl fn_8000F31C
Parsed instruction at 800083FC: bl fn_8000F238
Parsed instruction at 80008400: cmpwi r3 0x0
Parsed instruction at 80008404: bne .L_80008410
Parsed instruction at 80008408: lwz r3 -0x4(r31)
Parsed instruction at 8000840C: bl fn_8000863C
Parsed label: L_80008410:
Parsed instruction at 80008410: li r3 -0x20
Parsed instruction at 80008414: bl __OSMaskInterrupts
Parsed instruction at 80008418: li r3 0x400
Parsed instruction at 8000841C: bl __OSUnmaskInterrupts
Parsed instruction at 80008420: bl OSEnableInterrupts
Parsed instruction at 80008424: b .L_80008428
Parsed label: L_80008428:
Parsed instruction at 80008428: b .L_8000842C
Parsed label: L_8000842C:
Parsed instruction at 8000842C: lwz r0 lbl_8001EEB8@sda21(r0)
Parsed instruction at 80008430: cmpwi r0 0x0
Parsed instruction at 80008434: beq .L_8000842C
Parsed instruction at 80008438: mr r4 r30
Parsed instruction at 8000843C: addi r3 r1 0x40
Parsed instruction at 80008440: li r5 0x20
Parsed instruction at 80008444: li r6 0x2440
Parsed instruction at 80008448: li r7 0x0
Parsed instruction at 8000844C: bl fn_8000ED1C
Parsed instruction at 80008450: lis r31 0x8180
Parsed instruction at 80008454: b .L_80008458
Parsed label: L_80008458:
Parsed instruction at 80008458: b .L_8000845C
Parsed label: L_8000845C:
Parsed instruction at 8000845C: lwz r0 0x4c(r1)
Parsed instruction at 80008460: cmpwi r0 0x1
Parsed instruction at 80008464: beq .L_8000845C
Parsed instruction at 80008468: bge .L_8000847C
Parsed instruction at 8000846C: cmpwi r0 -0x1
Parsed instruction at 80008470: beq .L_80008488
Parsed instruction at 80008474: bge .L_80008494
Parsed instruction at 80008478: b .L_8000845C
Parsed label: L_8000847C:
Parsed instruction at 8000847C: cmpwi r0 0xc
Parsed instruction at 80008480: bge .L_8000845C
Parsed instruction at 80008484: b .L_80008488
Parsed label: L_80008488:
Parsed instruction at 80008488: lwz r3 -0x4(r31)
Parsed instruction at 8000848C: bl fn_8000863C
Parsed instruction at 80008490: b .L_8000845C
Parsed label: L_80008494:
Parsed instruction at 80008494: lwz r3 0x18(r30)
Parsed instruction at 80008498: lwz r4 0x14(r30)
Parsed instruction at 8000849C: addi r0 r3 0x1f
Parsed instruction at 800084A0: addi r4 r4 0x20
Parsed instruction at 800084A4: clrrwi r30 r0 5
Parsed instruction at 800084A8: b .L_800084AC
Parsed label: L_800084AC:
Parsed instruction at 800084AC: b .L_800084B0
Parsed label: L_800084B0:
Parsed instruction at 800084B0: lwz r0 lbl_8001EEB8@sda21(r0)
Parsed instruction at 800084B4: cmpwi r0 0x0
Parsed instruction at 800084B8: beq .L_800084B0
Parsed instruction at 800084BC: mr r5 r30
Parsed instruction at 800084C0: addi r3 r1 0x10
Parsed instruction at 800084C4: addi r6 r4 0x2440
Parsed instruction at 800084C8: lis r4 0x8130
Parsed instruction at 800084CC: li r7 0x0
Parsed instruction at 800084D0: bl fn_8000ED1C
Parsed instruction at 800084D4: lis r31 0x8180
Parsed instruction at 800084D8: b .L_800084DC
Parsed label: L_800084DC:
Parsed instruction at 800084DC: b .L_800084E0
Parsed label: L_800084E0:
Parsed instruction at 800084E0: lwz r0 0x1c(r1)
Parsed instruction at 800084E4: cmpwi r0 0x1
Parsed instruction at 800084E8: beq .L_800084E0
Parsed instruction at 800084EC: bge .L_80008500
Parsed instruction at 800084F0: cmpwi r0 -0x1
Parsed instruction at 800084F4: beq .L_8000850C
Parsed instruction at 800084F8: bge .L_80008518
Parsed instruction at 800084FC: b .L_800084E0
Parsed label: L_80008500:
Parsed instruction at 80008500: cmpwi r0 0xc
Parsed instruction at 80008504: bge .L_800084E0
Parsed instruction at 80008508: b .L_8000850C
Parsed label: L_8000850C:
Parsed instruction at 8000850C: lwz r3 -0x4(r31)
Parsed instruction at 80008510: bl fn_8000863C
Parsed instruction at 80008514: b .L_800084E0
Parsed label: L_80008518:
Parsed instruction at 80008518: lis r3 0x8130
Parsed instruction at 8000851C: mr r4 r30
Parsed instruction at 80008520: bl ICInvalidateRange
Parsed instruction at 80008524: lis r3 0x8130
Parsed instruction at 80008528: bl fn_80008330
Parsed instruction at 8000852C: lwz r0 0x34c(r1)
Parsed instruction at 80008530: lwz r31 0x344(r1)
Parsed instruction at 80008534: lwz r30 0x340(r1)
Parsed instruction at 80008538: lwz r29 0x33c(r1)
Parsed instruction at 8000853C: addi r1 r1 0x348
Parsed instruction at 80008540: mtlr r0
Parsed instruction at 80008544: blr 
End of function: __OSReboot, 130 instructions
Parsed function: OSRegisterResetFunction at 0x80008548
Parsed instruction at 80008548: lwz r5 ResetFunctionQueue_8001EEC0@sda21(r0)
Parsed instruction at 8000854C: b .L_80008554
Parsed label: L_80008550:
Parsed instruction at 80008550: lwz r5 0x8(r5)
Parsed label: L_80008554:
Parsed instruction at 80008554: cmplwi r5 0x0
Parsed instruction at 80008558: beq .L_8000856C
Parsed instruction at 8000855C: lwz r4 0x4(r5)
Parsed instruction at 80008560: lwz r0 0x4(r3)
Parsed instruction at 80008564: cmplw r4 r0
Parsed instruction at 80008568: ble .L_80008550
Parsed label: L_8000856C:
Parsed instruction at 8000856C: cmplwi r5 0x0
Parsed instruction at 80008570: bne .L_800085A4
Parsed instruction at 80008574: li r5 ResetFunctionQueue_8001EEC0@sda21
Parsed instruction at 80008578: lwzu r4 0x4(r5)
Parsed instruction at 8000857C: cmplwi r4 0x0
Parsed instruction at 80008580: bne .L_8000858C
Parsed instruction at 80008584: stw r3 ResetFunctionQueue_8001EEC0@sda21(r0)
Parsed instruction at 80008588: b .L_80008590
Parsed label: L_8000858C:
Parsed instruction at 8000858C: stw r3 0x8(r4)
Parsed label: L_80008590:
Parsed instruction at 80008590: stw r4 0xc(r3)
Parsed instruction at 80008594: li r0 0x0
Parsed instruction at 80008598: stw r0 0x8(r3)
Parsed instruction at 8000859C: stw r3 0x0(r5)
Parsed instruction at 800085A0: blr 
Parsed label: L_800085A4:
Parsed instruction at 800085A4: stw r5 0x8(r3)
Parsed instruction at 800085A8: lwz r4 0xc(r5)
Parsed instruction at 800085AC: stw r3 0xc(r5)
Parsed instruction at 800085B0: cmplwi r4 0x0
Parsed instruction at 800085B4: stw r4 0xc(r3)
Parsed instruction at 800085B8: bne .L_800085C4
Parsed instruction at 800085BC: stw r3 ResetFunctionQueue_8001EEC0@sda21(r0)
Parsed instruction at 800085C0: blr 
Parsed label: L_800085C4:
Parsed instruction at 800085C4: stw r3 0x8(r4)
Parsed instruction at 800085C8: blr 
End of function: OSRegisterResetFunction, 40 instructions
Parsed function: Reset at 0x800085CC
Parsed instruction at 800085CC: b .L_800085EC
Parsed label: L_800085D0:
Parsed instruction at 800085D0: mfspr r8 HID0
Parsed instruction at 800085D4: ori r8 r8 0x8
Parsed instruction at 800085D8: mtspr HID0 r8
Parsed instruction at 800085DC: isync 
Parsed instruction at 800085E0: sync 
Parsed instruction at 800085E4: nop 
Parsed instruction at 800085E8: b .L_800085F0
Parsed label: L_800085EC:
Parsed instruction at 800085EC: b .L_8000860C
Parsed label: L_800085F0:
Parsed instruction at 800085F0: mftb r5 268
Parsed label: L_800085F4:
Parsed instruction at 800085F4: mftb r6 268
Parsed instruction at 800085F8: subf r7 r5 r6
Parsed instruction at 800085FC: cmplwi r7 0x1124
Parsed instruction at 80008600: blt .L_800085F4
Parsed instruction at 80008604: nop 
Parsed instruction at 80008608: b .L_80008610
Parsed label: L_8000860C:
Parsed instruction at 8000860C: b .L_8000862C
Parsed label: L_80008610:
Parsed instruction at 80008610: lis r8 0xcc00
Parsed instruction at 80008614: ori r8 r8 0x3000
Parsed instruction at 80008618: li r4 0x3
Parsed instruction at 8000861C: stw r4 0x24(r8)
Parsed instruction at 80008620: stw r3 0x24(r8)
Parsed instruction at 80008624: nop 
Parsed instruction at 80008628: b .L_80008630
Parsed label: L_8000862C:
Parsed instruction at 8000862C: b .L_80008638
Parsed label: L_80008630:
Parsed instruction at 80008630: nop 
Parsed instruction at 80008634: b .L_80008630
Parsed label: L_80008638:
Parsed instruction at 80008638: b .L_800085D0
End of function: Reset, 37 instructions
Parsed function: fn_8000863C at 0x8000863C
Parsed instruction at 8000863C: mflr r0
Parsed instruction at 80008640: stw r0 0x4(r1)
Parsed instruction at 80008644: stwu r1 -0x18(r1)
Parsed instruction at 80008648: stw r31 0x14(r1)
Parsed instruction at 8000864C: mr r31 r3
Parsed instruction at 80008650: bl OSDisableInterrupts
Parsed instruction at 80008654: lis r3 0xcc00
Parsed instruction at 80008658: addi r3 r3 0x2000
Parsed instruction at 8000865C: li r0 0x0
Parsed instruction at 80008660: sth r0 0x2(r3)
Parsed instruction at 80008664: bl ICFlashInvalidate
Parsed instruction at 80008668: slwi r3 r31 3
Parsed instruction at 8000866C: bl Reset
Parsed instruction at 80008670: lwz r0 0x1c(r1)
Parsed instruction at 80008674: lwz r31 0x14(r1)
Parsed instruction at 80008678: addi r1 r1 0x18
Parsed instruction at 8000867C: mtlr r0
Parsed instruction at 80008680: blr 
End of function: fn_8000863C, 18 instructions
Parsed function: OSResetSystem at 0x80008684
Parsed instruction at 80008684: mflr r0
Parsed instruction at 80008688: stw r0 0x4(r1)
Parsed instruction at 8000868C: stwu r1 -0x40(r1)
Parsed instruction at 80008690: stmw r26 0x28(r1)
Parsed instruction at 80008694: mr r26 r3
Parsed instruction at 80008698: mr r29 r4
Parsed instruction at 8000869C: mr r30 r5
Parsed instruction at 800086A0: bl OSDisableScheduler
Parsed instruction at 800086A4: bl __OSStopAudioSystem
Parsed instruction at 800086A8: cmpwi r26 0x2
Parsed instruction at 800086AC: bne .L_800086BC
Parsed instruction at 800086B0: li r3 0x1
Parsed instruction at 800086B4: bl __PADDisableRecalibration
Parsed instruction at 800086B8: mr r31 r3
Parsed label: L_800086BC:
Parsed instruction at 800086BC: b .L_800086C0
Parsed label: L_800086C0:
Parsed instruction at 800086C0: b .L_800086C4
Parsed label: L_800086C4:
Parsed instruction at 800086C4: lwz r27 ResetFunctionQueue_8001EEC0@sda21(r0)
Parsed instruction at 800086C8: li r28 0x0
Parsed instruction at 800086CC: b .L_800086D0
Parsed label: L_800086D0:
Parsed instruction at 800086D0: b .L_800086D4
Parsed label: L_800086D4:
Parsed instruction at 800086D4: b .L_800086F8
Parsed label: L_800086D8:
Parsed instruction at 800086D8: li r3 0x0
Parsed instruction at 800086DC: lwz r12 0x0(r27)
Parsed instruction at 800086E0: mtlr r12
Parsed instruction at 800086E4: blrl 
Parsed instruction at 800086E8: cntlzw r0 r3
Parsed instruction at 800086EC: lwz r27 0x8(r27)
Parsed instruction at 800086F0: srwi r0 r0 5
Parsed instruction at 800086F4: or r28 r28 r0
Parsed label: L_800086F8:
Parsed instruction at 800086F8: cmplwi r27 0x0
Parsed instruction at 800086FC: bne .L_800086D8
Parsed instruction at 80008700: bl __OSSyncSram
Parsed instruction at 80008704: cntlzw r0 r3
Parsed instruction at 80008708: srwi r0 r0 5
Parsed instruction at 8000870C: or r28 r28 r0
Parsed instruction at 80008710: cmpwi r28 0x0
Parsed instruction at 80008714: beq .L_80008720
Parsed instruction at 80008718: li r0 0x0
Parsed instruction at 8000871C: b .L_80008724
Parsed label: L_80008720:
Parsed instruction at 80008720: li r0 0x1
Parsed label: L_80008724:
Parsed instruction at 80008724: cmpwi r0 0x0
Parsed instruction at 80008728: beq .L_800086C4
Parsed instruction at 8000872C: cmpwi r26 0x1
Parsed instruction at 80008730: bne .L_80008768
Parsed instruction at 80008734: cmpwi r30 0x0
Parsed instruction at 80008738: beq .L_80008768
Parsed instruction at 8000873C: bl __OSLockSram
Parsed instruction at 80008740: lbz r0 0x13(r3)
Parsed instruction at 80008744: ori r0 r0 0x40
Parsed instruction at 80008748: stb r0 0x13(r3)
Parsed instruction at 8000874C: li r3 0x1
Parsed instruction at 80008750: bl __OSUnlockSram
Parsed instruction at 80008754: b .L_80008758
Parsed label: L_80008758:
Parsed instruction at 80008758: b .L_8000875C
Parsed label: L_8000875C:
Parsed instruction at 8000875C: bl __OSSyncSram
Parsed instruction at 80008760: cmpwi r3 0x0
Parsed instruction at 80008764: beq .L_8000875C
Parsed label: L_80008768:
Parsed instruction at 80008768: bl OSDisableInterrupts
Parsed instruction at 8000876C: lwz r28 ResetFunctionQueue_8001EEC0@sda21(r0)
Parsed instruction at 80008770: li r27 0x0
Parsed instruction at 80008774: b .L_80008778
Parsed label: L_80008778:
Parsed instruction at 80008778: b .L_8000877C
Parsed label: L_8000877C:
Parsed instruction at 8000877C: b .L_800087A0
Parsed label: L_80008780:
Parsed instruction at 80008780: li r3 0x1
Parsed instruction at 80008784: lwz r12 0x0(r28)
Parsed instruction at 80008788: mtlr r12
Parsed instruction at 8000878C: blrl 
Parsed instruction at 80008790: cntlzw r0 r3
Parsed instruction at 80008794: lwz r28 0x8(r28)
Parsed instruction at 80008798: srwi r0 r0 5
Parsed instruction at 8000879C: or r27 r27 r0
Parsed label: L_800087A0:
Parsed instruction at 800087A0: cmplwi r28 0x0
Parsed instruction at 800087A4: bne .L_80008780
Parsed instruction at 800087A8: bl __OSSyncSram
Parsed instruction at 800087AC: bl LCDisable
Parsed instruction at 800087B0: cmpwi r26 0x1
Parsed instruction at 800087B4: bne .L_800087DC
Parsed instruction at 800087B8: bl OSDisableInterrupts
Parsed instruction at 800087BC: lis r3 0xcc00
Parsed instruction at 800087C0: addi r3 r3 0x2000
Parsed instruction at 800087C4: li r0 0x0
Parsed instruction at 800087C8: sth r0 0x2(r3)
Parsed instruction at 800087CC: bl ICFlashInvalidate
Parsed instruction at 800087D0: slwi r3 r29 3
Parsed instruction at 800087D4: bl Reset
Parsed instruction at 800087D8: b .L_80008838
Parsed label: L_800087DC:
Parsed instruction at 800087DC: cmpwi r26 0x0
Parsed instruction at 800087E0: bne .L_80008838
Parsed instruction at 800087E4: lis r3 0x8000
Parsed instruction at 800087E8: lwz r3 0xdc(r3)
Parsed instruction at 800087EC: b .L_800087F0
Parsed label: L_800087F0:
Parsed instruction at 800087F0: b .L_800087F4
Parsed label: L_800087F4:
Parsed instruction at 800087F4: b .L_80008820
Parsed label: L_800087F8:
Parsed instruction at 800087F8: lhz r0 0x2c8(r3)
Parsed instruction at 800087FC: lwz r27 0x2fc(r3)
Parsed instruction at 80008800: cmpwi r0 0x4
Parsed instruction at 80008804: beq .L_80008818
Parsed instruction at 80008808: bge .L_8000881C
Parsed instruction at 8000880C: cmpwi r0 0x1
Parsed instruction at 80008810: beq .L_80008818
Parsed instruction at 80008814: b .L_8000881C
Parsed label: L_80008818:
Parsed instruction at 80008818: bl OSCancelThread
Parsed label: L_8000881C:
Parsed instruction at 8000881C: mr r3 r27
Parsed label: L_80008820:
Parsed instruction at 80008820: cmplwi r3 0x0
Parsed instruction at 80008824: bne .L_800087F8
Parsed instruction at 80008828: bl OSEnableScheduler
Parsed instruction at 8000882C: mr r3 r29
Parsed instruction at 80008830: mr r4 r30
Parsed instruction at 80008834: bl __OSReboot
Parsed label: L_80008838:
Parsed instruction at 80008838: lis r3 0x8000
Parsed instruction at 8000883C: lwz r3 0xdc(r3)
Parsed instruction at 80008840: b .L_80008844
Parsed label: L_80008844:
Parsed instruction at 80008844: b .L_80008848
Parsed label: L_80008848:
Parsed instruction at 80008848: b .L_80008874
Parsed label: L_8000884C:
Parsed instruction at 8000884C: lhz r0 0x2c8(r3)
Parsed instruction at 80008850: lwz r27 0x2fc(r3)
Parsed instruction at 80008854: cmpwi r0 0x4
Parsed instruction at 80008858: beq .L_8000886C
Parsed instruction at 8000885C: bge .L_80008870
Parsed instruction at 80008860: cmpwi r0 0x1
Parsed instruction at 80008864: beq .L_8000886C
Parsed instruction at 80008868: b .L_80008870
Parsed label: L_8000886C:
Parsed instruction at 8000886C: bl OSCancelThread
Parsed label: L_80008870:
Parsed instruction at 80008870: mr r3 r27
Parsed label: L_80008874:
Parsed instruction at 80008874: cmplwi r3 0x0
Parsed instruction at 80008878: bne .L_8000884C
Parsed instruction at 8000887C: lis r29 0x8000
Parsed instruction at 80008880: addi r3 r29 0x40
Parsed instruction at 80008884: li r4 0x0
Parsed instruction at 80008888: li r5 0x8c
Parsed instruction at 8000888C: bl memset
Parsed instruction at 80008890: addi r3 r29 0xd4
Parsed instruction at 80008894: li r4 0x0
Parsed instruction at 80008898: li r5 0x14
Parsed instruction at 8000889C: bl memset
Parsed instruction at 800088A0: addi r3 r29 0xf4
Parsed instruction at 800088A4: li r4 0x0
Parsed instruction at 800088A8: li r5 0x4
Parsed instruction at 800088AC: bl memset
Parsed instruction at 800088B0: addi r3 r29 0x3000
Parsed instruction at 800088B4: li r4 0x0
Parsed instruction at 800088B8: li r5 0xc0
Parsed instruction at 800088BC: bl memset
Parsed instruction at 800088C0: addi r3 r29 0x30c8
Parsed instruction at 800088C4: li r4 0x0
Parsed instruction at 800088C8: li r5 0xc
Parsed instruction at 800088CC: bl memset
Parsed instruction at 800088D0: mr r3 r31
Parsed instruction at 800088D4: bl __PADDisableRecalibration
Parsed instruction at 800088D8: lmw r26 0x28(r1)
Parsed instruction at 800088DC: lwz r0 0x44(r1)
Parsed instruction at 800088E0: addi r1 r1 0x40
Parsed instruction at 800088E4: mtlr r0
Parsed instruction at 800088E8: blr 
End of function: OSResetSystem, 184 instructions
Parsed function: OSGetResetCode at 0x800088EC
Parsed instruction at 800088EC: lis r3 0x8000
Parsed instruction at 800088F0: lbz r0 0x30e2(r3)
Parsed instruction at 800088F4: cmplwi r0 0x0
Parsed instruction at 800088F8: beq .L_80008904
Parsed instruction at 800088FC: lis r3 0x8000
Parsed instruction at 80008900: b .L_80008918
Parsed label: L_80008904:
Parsed instruction at 80008904: lis r3 0xcc00
Parsed instruction at 80008908: addi r3 r3 0x3000
Parsed instruction at 8000890C: lwz r0 0x24(r3)
Parsed instruction at 80008910: clrrwi r0 r0 3
Parsed instruction at 80008914: srwi r3 r0 3
Parsed label: L_80008918:
Parsed instruction at 80008918: blr 
End of function: OSGetResetCode, 14 instructions
Parsed function: __OSResetSWInterruptHandler at 0x8000891C
Parsed instruction at 8000891C: mflr r0
Parsed instruction at 80008920: stw r0 0x4(r1)
Parsed instruction at 80008924: stwu r1 -0x28(r1)
Parsed instruction at 80008928: stw r31 0x24(r1)
Parsed instruction at 8000892C: stw r30 0x20(r1)
Parsed instruction at 80008930: stw r29 0x1c(r1)
Parsed instruction at 80008934: bl __OSGetSystemTime
Parsed instruction at 80008938: lis r5 0x8000
Parsed instruction at 8000893C: stw r4 lbl_8001EEDC@sda21(r0)
Parsed instruction at 80008940: lwz r0 0xf8(r5)
Parsed instruction at 80008944: lis r4 0x431c
Parsed instruction at 80008948: subi r4 r4 0x217d
Parsed instruction at 8000894C: stw r3 lbl_8001EED8@sda21(r0)
Parsed instruction at 80008950: srwi r0 r0 2
Parsed instruction at 80008954: mulhwu r0 r4 r0
Parsed instruction at 80008958: srwi r0 r0 15
Parsed instruction at 8000895C: mulli r0 r0 0x64
Parsed instruction at 80008960: srwi r29 r0 3
Parsed instruction at 80008964: li r30 0x0
Parsed instruction at 80008968: lis r31 0xcc00
Parsed label: L_8000896C:
Parsed instruction at 8000896C: bl __OSGetSystemTime
Parsed instruction at 80008970: lwz r6 lbl_8001EEDC@sda21(r0)
Parsed instruction at 80008974: xoris r5 r30 0x8000
Parsed instruction at 80008978: lwz r0 lbl_8001EED8@sda21(r0)
Parsed instruction at 8000897C: subfc r4 r6 r4
Parsed instruction at 80008980: subfe r0 r0 r3
Parsed instruction at 80008984: xoris r3 r0 0x8000
Parsed instruction at 80008988: subfc r0 r29 r4
Parsed instruction at 8000898C: subfe r5 r5 r3
Parsed instruction at 80008990: subfe r5 r3 r3
Parsed instruction at 80008994: neg. r5 r5
Parsed instruction at 80008998: beq .L_800089A8
Parsed instruction at 8000899C: lwz r0 0x3000(r31)
Parsed instruction at 800089A0: rlwinm. r0 r0 0 15 15
Parsed instruction at 800089A4: beq .L_8000896C
Parsed label: L_800089A8:
Parsed instruction at 800089A8: lis r3 0xcc00
Parsed instruction at 800089AC: lwz r0 0x3000(r3)
Parsed instruction at 800089B0: rlwinm. r0 r0 0 15 15
Parsed instruction at 800089B4: bne .L_800089E8
Parsed instruction at 800089B8: li r0 0x1
Parsed instruction at 800089BC: stw r0 lbl_8001EECC@sda21(r0)
Parsed instruction at 800089C0: li r3 0x200
Parsed instruction at 800089C4: stw r0 lbl_8001EED0@sda21(r0)
Parsed instruction at 800089C8: bl __OSMaskInterrupts
Parsed instruction at 800089CC: lwz r12 lbl_8001EEC8@sda21(r0)
Parsed instruction at 800089D0: cmplwi r12 0x0
Parsed instruction at 800089D4: beq .L_800089E8
Parsed instruction at 800089D8: li r0 0x0
Parsed instruction at 800089DC: mtlr r12
Parsed instruction at 800089E0: stw r0 lbl_8001EEC8@sda21(r0)
Parsed instruction at 800089E4: blrl 
Parsed label: L_800089E8:
Parsed instruction at 800089E8: li r0 0x2
Parsed instruction at 800089EC: lis r3 0xcc00
Parsed instruction at 800089F0: stw r0 0x3000(r3)
Parsed instruction at 800089F4: lwz r0 0x2c(r1)
Parsed instruction at 800089F8: lwz r31 0x24(r1)
Parsed instruction at 800089FC: lwz r30 0x20(r1)
Parsed instruction at 80008A00: lwz r29 0x1c(r1)
Parsed instruction at 80008A04: addi r1 r1 0x28
Parsed instruction at 80008A08: mtlr r0
Parsed instruction at 80008A0C: blr 
End of function: __OSResetSWInterruptHandler, 64 instructions
Parsed function: fn_80008A10 at 0x80008A10
Parsed instruction at 80008A10: mflr r0
Parsed instruction at 80008A14: lis r3 Scb_8001BBC0@ha
Parsed instruction at 80008A18: stw r0 0x4(r1)
Parsed instruction at 80008A1C: stwu r1 -0x18(r1)
Parsed instruction at 80008A20: stw r31 0x14(r1)
Parsed instruction at 80008A24: addi r31 r3 Scb_8001BBC0@l
Parsed instruction at 80008A28: stw r30 0x10(r1)
Parsed instruction at 80008A2C: addi r30 r31 0x40
Parsed instruction at 80008A30: lwz r4 0x40(r31)
Parsed instruction at 80008A34: add r3 r31 r4
Parsed instruction at 80008A38: subfic r5 r4 0x40
Parsed instruction at 80008A3C: bl fn_80008A70
Parsed instruction at 80008A40: stw r3 0x4c(r31)
Parsed instruction at 80008A44: lwz r0 0x4c(r31)
Parsed instruction at 80008A48: cmpwi r0 0x0
Parsed instruction at 80008A4C: beq .L_80008A58
Parsed instruction at 80008A50: li r0 0x40
Parsed instruction at 80008A54: stw r0 0x0(r30)
Parsed label: L_80008A58:
Parsed instruction at 80008A58: lwz r0 0x1c(r1)
Parsed instruction at 80008A5C: lwz r31 0x14(r1)
Parsed instruction at 80008A60: lwz r30 0x10(r1)
Parsed instruction at 80008A64: addi r1 r1 0x18
Parsed instruction at 80008A68: mtlr r0
Parsed instruction at 80008A6C: blr 
End of function: fn_80008A10, 25 instructions
Parsed function: fn_80008A70 at 0x80008A70
Parsed instruction at 80008A70: mflr r0
Parsed instruction at 80008A74: lis r6 fn_80008A10@ha
Parsed instruction at 80008A78: stw r0 0x4(r1)
Parsed instruction at 80008A7C: addi r0 r6 fn_80008A10@l
Parsed instruction at 80008A80: stwu r1 -0x28(r1)
Parsed instruction at 80008A84: stw r31 0x24(r1)
Parsed instruction at 80008A88: addi r31 r4 0x0
Parsed instruction at 80008A8C: li r4 0x1
Parsed instruction at 80008A90: stw r30 0x20(r1)
Parsed instruction at 80008A94: addi r30 r5 0x0
Parsed instruction at 80008A98: mr r5 r0
Parsed instruction at 80008A9C: stw r29 0x1c(r1)
Parsed instruction at 80008AA0: addi r29 r3 0x0
Parsed instruction at 80008AA4: li r3 0x0
Parsed instruction at 80008AA8: bl EXILock
Parsed instruction at 80008AAC: cmpwi r3 0x0
Parsed instruction at 80008AB0: bne .L_80008ABC
Parsed instruction at 80008AB4: li r3 0x0
Parsed instruction at 80008AB8: b .L_80008B6C
Parsed label: L_80008ABC:
Parsed instruction at 80008ABC: li r3 0x0
Parsed instruction at 80008AC0: li r4 0x1
Parsed instruction at 80008AC4: li r5 0x3
Parsed instruction at 80008AC8: bl EXISelect
Parsed instruction at 80008ACC: cmpwi r3 0x0
Parsed instruction at 80008AD0: bne .L_80008AE4
Parsed instruction at 80008AD4: li r3 0x0
Parsed instruction at 80008AD8: bl EXIUnlock
Parsed instruction at 80008ADC: li r3 0x0
Parsed instruction at 80008AE0: b .L_80008B6C
Parsed label: L_80008AE4:
Parsed instruction at 80008AE4: slwi r31 r31 6
Parsed instruction at 80008AE8: addi r0 r31 0x100
Parsed instruction at 80008AEC: oris r0 r0 0xa000
Parsed instruction at 80008AF0: stw r0 0x14(r1)
Parsed instruction at 80008AF4: addi r4 r1 0x14
Parsed instruction at 80008AF8: li r3 0x0
Parsed instruction at 80008AFC: li r5 0x4
Parsed instruction at 80008B00: li r6 0x1
Parsed instruction at 80008B04: li r7 0x0
Parsed instruction at 80008B08: bl EXIImm
Parsed instruction at 80008B0C: cntlzw r0 r3
Parsed instruction at 80008B10: srwi r31 r0 5
Parsed instruction at 80008B14: li r3 0x0
Parsed instruction at 80008B18: bl EXISync
Parsed instruction at 80008B1C: cntlzw r0 r3
Parsed instruction at 80008B20: srwi r0 r0 5
Parsed instruction at 80008B24: addi r4 r29 0x0
Parsed instruction at 80008B28: addi r5 r30 0x0
Parsed instruction at 80008B2C: or r31 r31 r0
Parsed instruction at 80008B30: li r3 0x0
Parsed instruction at 80008B34: li r6 0x1
Parsed instruction at 80008B38: bl fn_8000A0E8
Parsed instruction at 80008B3C: cntlzw r0 r3
Parsed instruction at 80008B40: srwi r0 r0 5
Parsed instruction at 80008B44: or r31 r31 r0
Parsed instruction at 80008B48: li r3 0x0
Parsed instruction at 80008B4C: bl EXIDeselect
Parsed instruction at 80008B50: cntlzw r0 r3
Parsed instruction at 80008B54: srwi r0 r0 5
Parsed instruction at 80008B58: or r31 r31 r0
Parsed instruction at 80008B5C: li r3 0x0
Parsed instruction at 80008B60: bl EXIUnlock
Parsed instruction at 80008B64: cntlzw r0 r31
Parsed instruction at 80008B68: srwi r3 r0 5
Parsed label: L_80008B6C:
Parsed instruction at 80008B6C: lwz r0 0x2c(r1)
Parsed instruction at 80008B70: lwz r31 0x24(r1)
Parsed instruction at 80008B74: lwz r30 0x20(r1)
Parsed instruction at 80008B78: lwz r29 0x1c(r1)
Parsed instruction at 80008B7C: addi r1 r1 0x28
Parsed instruction at 80008B80: mtlr r0
Parsed instruction at 80008B84: blr 
End of function: fn_80008A70, 73 instructions
Parsed function: __OSInitSram at 0x80008B88
Parsed instruction at 80008B88: mflr r0
Parsed instruction at 80008B8C: lis r3 Scb_8001BBC0@ha
Parsed instruction at 80008B90: stw r0 0x4(r1)
Parsed instruction at 80008B94: li r4 0x40
Parsed instruction at 80008B98: stwu r1 -0x18(r1)
Parsed instruction at 80008B9C: stw r31 0x14(r1)
Parsed instruction at 80008BA0: li r31 0x0
Parsed instruction at 80008BA4: stw r30 0x10(r1)
Parsed instruction at 80008BA8: addi r30 r3 Scb_8001BBC0@l
Parsed instruction at 80008BAC: addi r3 r30 0x0
Parsed instruction at 80008BB0: stw r31 0x44(r30)
Parsed instruction at 80008BB4: stw r31 0x48(r30)
Parsed instruction at 80008BB8: bl DCInvalidateRange
Parsed instruction at 80008BBC: li r3 0x0
Parsed instruction at 80008BC0: li r4 0x1
Parsed instruction at 80008BC4: li r5 0x0
Parsed instruction at 80008BC8: bl EXILock
Parsed instruction at 80008BCC: cmpwi r3 0x0
Parsed instruction at 80008BD0: bne .L_80008BD8
Parsed instruction at 80008BD4: b .L_80008C98
Parsed label: L_80008BD8:
Parsed instruction at 80008BD8: li r3 0x0
Parsed instruction at 80008BDC: li r4 0x1
Parsed instruction at 80008BE0: li r5 0x3
Parsed instruction at 80008BE4: bl EXISelect
Parsed instruction at 80008BE8: cmpwi r3 0x0
Parsed instruction at 80008BEC: bne .L_80008BFC
Parsed instruction at 80008BF0: li r3 0x0
Parsed instruction at 80008BF4: bl EXIUnlock
Parsed instruction at 80008BF8: b .L_80008C98
Parsed label: L_80008BFC:
Parsed instruction at 80008BFC: lis r3 0x2000
Parsed instruction at 80008C00: addi r0 r3 0x100
Parsed instruction at 80008C04: stw r0 0x8(r1)
Parsed instruction at 80008C08: addi r4 r1 0x8
Parsed instruction at 80008C0C: li r3 0x0
Parsed instruction at 80008C10: li r5 0x4
Parsed instruction at 80008C14: li r6 0x1
Parsed instruction at 80008C18: li r7 0x0
Parsed instruction at 80008C1C: bl EXIImm
Parsed instruction at 80008C20: cntlzw r0 r3
Parsed instruction at 80008C24: srwi r31 r0 5
Parsed instruction at 80008C28: li r3 0x0
Parsed instruction at 80008C2C: bl EXISync
Parsed instruction at 80008C30: cntlzw r0 r3
Parsed instruction at 80008C34: srwi r0 r0 5
Parsed instruction at 80008C38: addi r4 r30 0x0
Parsed instruction at 80008C3C: or r31 r31 r0
Parsed instruction at 80008C40: li r3 0x0
Parsed instruction at 80008C44: li r5 0x40
Parsed instruction at 80008C48: li r6 0x0
Parsed instruction at 80008C4C: li r7 0x0
Parsed instruction at 80008C50: bl EXIDma
Parsed instruction at 80008C54: cntlzw r0 r3
Parsed instruction at 80008C58: srwi r0 r0 5
Parsed instruction at 80008C5C: or r31 r31 r0
Parsed instruction at 80008C60: li r3 0x0
Parsed instruction at 80008C64: bl EXISync
Parsed instruction at 80008C68: cntlzw r0 r3
Parsed instruction at 80008C6C: srwi r0 r0 5
Parsed instruction at 80008C70: or r31 r31 r0
Parsed instruction at 80008C74: li r3 0x0
Parsed instruction at 80008C78: bl EXIDeselect
Parsed instruction at 80008C7C: cntlzw r0 r3
Parsed instruction at 80008C80: srwi r0 r0 5
Parsed instruction at 80008C84: or r31 r31 r0
Parsed instruction at 80008C88: li r3 0x0
Parsed instruction at 80008C8C: bl EXIUnlock
Parsed instruction at 80008C90: cntlzw r0 r31
Parsed instruction at 80008C94: srwi r31 r0 5
Parsed label: L_80008C98:
Parsed instruction at 80008C98: stw r31 0x4c(r30)
Parsed instruction at 80008C9C: li r0 0x40
Parsed instruction at 80008CA0: stw r0 0x40(r30)
Parsed instruction at 80008CA4: lwz r0 0x1c(r1)
Parsed instruction at 80008CA8: lwz r31 0x14(r1)
Parsed instruction at 80008CAC: lwz r30 0x10(r1)
Parsed instruction at 80008CB0: addi r1 r1 0x18
Parsed instruction at 80008CB4: mtlr r0
Parsed instruction at 80008CB8: blr 
End of function: __OSInitSram, 80 instructions
Parsed function: __OSLockSram at 0x80008CBC
Parsed instruction at 80008CBC: mflr r0
Parsed instruction at 80008CC0: lis r3 Scb_8001BBC0@ha
Parsed instruction at 80008CC4: stw r0 0x4(r1)
Parsed instruction at 80008CC8: stwu r1 -0x10(r1)
Parsed instruction at 80008CCC: stw r31 0xc(r1)
Parsed instruction at 80008CD0: addi r31 r3 Scb_8001BBC0@l
Parsed instruction at 80008CD4: bl OSDisableInterrupts
Parsed instruction at 80008CD8: lwz r0 0x48(r31)
Parsed instruction at 80008CDC: addi r4 r31 0x48
Parsed instruction at 80008CE0: cmpwi r0 0x0
Parsed instruction at 80008CE4: beq .L_80008CF4
Parsed instruction at 80008CE8: bl OSRestoreInterrupts
Parsed instruction at 80008CEC: li r31 0x0
Parsed instruction at 80008CF0: b .L_80008D00
Parsed label: L_80008CF4:
Parsed instruction at 80008CF4: stw r3 0x44(r31)
Parsed instruction at 80008CF8: li r0 0x1
Parsed instruction at 80008CFC: stw r0 0x0(r4)
Parsed label: L_80008D00:
Parsed instruction at 80008D00: mr r3 r31
Parsed instruction at 80008D04: lwz r0 0x14(r1)
Parsed instruction at 80008D08: lwz r31 0xc(r1)
Parsed instruction at 80008D0C: addi r1 r1 0x10
Parsed instruction at 80008D10: mtlr r0
Parsed instruction at 80008D14: blr 
End of function: __OSLockSram, 25 instructions
Parsed function: fn_80008D18 at 0x80008D18
Parsed instruction at 80008D18: mflr r0
Parsed instruction at 80008D1C: lis r3 Scb_8001BBC0@ha
Parsed instruction at 80008D20: stw r0 0x4(r1)
Parsed instruction at 80008D24: stwu r1 -0x10(r1)
Parsed instruction at 80008D28: stw r31 0xc(r1)
Parsed instruction at 80008D2C: addi r31 r3 Scb_8001BBC0@l
Parsed instruction at 80008D30: bl OSDisableInterrupts
Parsed instruction at 80008D34: lwz r0 0x48(r31)
Parsed instruction at 80008D38: addi r4 r31 0x48
Parsed instruction at 80008D3C: cmpwi r0 0x0
Parsed instruction at 80008D40: beq .L_80008D50
Parsed instruction at 80008D44: bl OSRestoreInterrupts
Parsed instruction at 80008D48: li r3 0x0
Parsed instruction at 80008D4C: b .L_80008D60
Parsed label: L_80008D50:
Parsed instruction at 80008D50: stw r3 0x44(r31)
Parsed instruction at 80008D54: li r0 0x1
Parsed instruction at 80008D58: addi r3 r31 0x14
Parsed instruction at 80008D5C: stw r0 0x0(r4)
Parsed label: L_80008D60:
Parsed instruction at 80008D60: lwz r0 0x14(r1)
Parsed instruction at 80008D64: lwz r31 0xc(r1)
Parsed instruction at 80008D68: addi r1 r1 0x10
Parsed instruction at 80008D6C: mtlr r0
Parsed instruction at 80008D70: blr 
End of function: fn_80008D18, 25 instructions
Parsed function: fn_80008D74 at 0x80008D74
Parsed instruction at 80008D74: mflr r0
Parsed instruction at 80008D78: cmpwi r3 0x0
Parsed instruction at 80008D7C: stw r0 0x4(r1)
Parsed instruction at 80008D80: lis r3 Scb_8001BBC0@ha
Parsed instruction at 80008D84: stwu r1 -0x30(r1)
Parsed instruction at 80008D88: stmw r27 0x1c(r1)
Parsed instruction at 80008D8C: addi r31 r3 Scb_8001BBC0@l
Parsed instruction at 80008D90: beq .L_80009054
Parsed instruction at 80008D94: cmplwi r4 0x0
Parsed instruction at 80008D98: bne .L_80008F48
Parsed instruction at 80008D9C: lbz r3 0x13(r31)
Parsed instruction at 80008DA0: clrlwi r0 r3 30
Parsed instruction at 80008DA4: cmplwi r0 0x2
Parsed instruction at 80008DA8: ble .L_80008DB4
Parsed instruction at 80008DAC: clrrwi r0 r3 2
Parsed instruction at 80008DB0: stb r0 0x13(r31)
Parsed label: L_80008DB4:
Parsed instruction at 80008DB4: li r0 0x0
Parsed instruction at 80008DB8: sth r0 0x2(r31)
Parsed instruction at 80008DBC: addi r5 r31 0x14
Parsed instruction at 80008DC0: addi r6 r31 0xc
Parsed instruction at 80008DC4: addi r3 r5 0x1
Parsed instruction at 80008DC8: sth r0 0x0(r31)
Parsed instruction at 80008DCC: subf r3 r6 r3
Parsed instruction at 80008DD0: cmplw r6 r5
Parsed instruction at 80008DD4: srwi r3 r3 1
Parsed instruction at 80008DD8: bge .L_80008F48
Parsed instruction at 80008DDC: srwi. r0 r3 3
Parsed instruction at 80008DE0: mtctr r0
Parsed instruction at 80008DE4: beq .L_80008F18
Parsed label: L_80008DE8:
Parsed instruction at 80008DE8: lhz r5 0x0(r31)
Parsed instruction at 80008DEC: lhz r0 0x0(r6)
Parsed instruction at 80008DF0: add r0 r5 r0
Parsed instruction at 80008DF4: sth r0 0x0(r31)
Parsed instruction at 80008DF8: lhz r0 0x0(r6)
Parsed instruction at 80008DFC: lhz r5 0x2(r31)
Parsed instruction at 80008E00: nor r0 r0 r0
Parsed instruction at 80008E04: add r0 r5 r0
Parsed instruction at 80008E08: sth r0 0x2(r31)
Parsed instruction at 80008E0C: lhz r5 0x0(r31)
Parsed instruction at 80008E10: lhz r0 0x2(r6)
Parsed instruction at 80008E14: add r0 r5 r0
Parsed instruction at 80008E18: sth r0 0x0(r31)
Parsed instruction at 80008E1C: lhz r0 0x2(r6)
Parsed instruction at 80008E20: lhz r5 0x2(r31)
Parsed instruction at 80008E24: nor r0 r0 r0
Parsed instruction at 80008E28: add r0 r5 r0
Parsed instruction at 80008E2C: sth r0 0x2(r31)
Parsed instruction at 80008E30: lhz r5 0x0(r31)
Parsed instruction at 80008E34: lhz r0 0x4(r6)
Parsed instruction at 80008E38: add r0 r5 r0
Parsed instruction at 80008E3C: sth r0 0x0(r31)
Parsed instruction at 80008E40: lhz r0 0x4(r6)
Parsed instruction at 80008E44: lhz r5 0x2(r31)
Parsed instruction at 80008E48: nor r0 r0 r0
Parsed instruction at 80008E4C: add r0 r5 r0
Parsed instruction at 80008E50: sth r0 0x2(r31)
Parsed instruction at 80008E54: lhz r5 0x0(r31)
Parsed instruction at 80008E58: lhz r0 0x6(r6)
Parsed instruction at 80008E5C: add r0 r5 r0
Parsed instruction at 80008E60: sth r0 0x0(r31)
Parsed instruction at 80008E64: lhz r0 0x6(r6)
Parsed instruction at 80008E68: lhz r5 0x2(r31)
Parsed instruction at 80008E6C: nor r0 r0 r0
Parsed instruction at 80008E70: add r0 r5 r0
Parsed instruction at 80008E74: sth r0 0x2(r31)
Parsed instruction at 80008E78: lhz r5 0x0(r31)
Parsed instruction at 80008E7C: lhz r0 0x8(r6)
Parsed instruction at 80008E80: add r0 r5 r0
Parsed instruction at 80008E84: sth r0 0x0(r31)
Parsed instruction at 80008E88: lhz r0 0x8(r6)
Parsed instruction at 80008E8C: lhz r5 0x2(r31)
Parsed instruction at 80008E90: nor r0 r0 r0
Parsed instruction at 80008E94: add r0 r5 r0
Parsed instruction at 80008E98: sth r0 0x2(r31)
Parsed instruction at 80008E9C: lhz r5 0x0(r31)
Parsed instruction at 80008EA0: lhz r0 0xa(r6)
Parsed instruction at 80008EA4: add r0 r5 r0
Parsed instruction at 80008EA8: sth r0 0x0(r31)
Parsed instruction at 80008EAC: lhz r0 0xa(r6)
Parsed instruction at 80008EB0: lhz r5 0x2(r31)
Parsed instruction at 80008EB4: nor r0 r0 r0
Parsed instruction at 80008EB8: add r0 r5 r0
Parsed instruction at 80008EBC: sth r0 0x2(r31)
Parsed instruction at 80008EC0: lhz r5 0x0(r31)
Parsed instruction at 80008EC4: lhz r0 0xc(r6)
Parsed instruction at 80008EC8: add r0 r5 r0
Parsed instruction at 80008ECC: sth r0 0x0(r31)
Parsed instruction at 80008ED0: lhz r0 0xc(r6)
Parsed instruction at 80008ED4: lhz r5 0x2(r31)
Parsed instruction at 80008ED8: nor r0 r0 r0
Parsed instruction at 80008EDC: add r0 r5 r0
Parsed instruction at 80008EE0: sth r0 0x2(r31)
Parsed instruction at 80008EE4: lhz r5 0x0(r31)
Parsed instruction at 80008EE8: lhz r0 0xe(r6)
Parsed instruction at 80008EEC: add r0 r5 r0
Parsed instruction at 80008EF0: sth r0 0x0(r31)
Parsed instruction at 80008EF4: lhz r0 0xe(r6)
Parsed instruction at 80008EF8: addi r6 r6 0x10
Parsed instruction at 80008EFC: lhz r5 0x2(r31)
Parsed instruction at 80008F00: nor r0 r0 r0
Parsed instruction at 80008F04: add r0 r5 r0
Parsed instruction at 80008F08: sth r0 0x2(r31)
Parsed instruction at 80008F0C: bdnz .L_80008DE8
Parsed instruction at 80008F10: andi. r3 r3 0x7
Parsed instruction at 80008F14: beq .L_80008F48
Parsed label: L_80008F18:
Parsed instruction at 80008F18: mtctr r3
Parsed label: L_80008F1C:
Parsed instruction at 80008F1C: lhz r5 0x0(r31)
Parsed instruction at 80008F20: lhz r0 0x0(r6)
Parsed instruction at 80008F24: add r0 r5 r0
Parsed instruction at 80008F28: sth r0 0x0(r31)
Parsed instruction at 80008F2C: lhz r0 0x0(r6)
Parsed instruction at 80008F30: addi r6 r6 0x2
Parsed instruction at 80008F34: lhz r5 0x2(r31)
Parsed instruction at 80008F38: nor r0 r0 r0
Parsed instruction at 80008F3C: add r0 r5 r0
Parsed instruction at 80008F40: sth r0 0x2(r31)
Parsed instruction at 80008F44: bdnz .L_80008F1C
Parsed label: L_80008F48:
Parsed instruction at 80008F48: addi r30 r31 0x40
Parsed instruction at 80008F4C: lwz r0 0x40(r31)
Parsed instruction at 80008F50: cmplw r4 r0
Parsed instruction at 80008F54: bge .L_80008F5C
Parsed instruction at 80008F58: stw r4 0x0(r30)
Parsed label: L_80008F5C:
Parsed instruction at 80008F5C: lwz r29 0x0(r30)
Parsed instruction at 80008F60: lis r3 fn_80008A10@ha
Parsed instruction at 80008F64: addi r5 r3 fn_80008A10@l
Parsed instruction at 80008F68: subfic r27 r29 0x40
Parsed instruction at 80008F6C: add r28 r31 r29
Parsed instruction at 80008F70: li r3 0x0
Parsed instruction at 80008F74: li r4 0x1
Parsed instruction at 80008F78: bl EXILock
Parsed instruction at 80008F7C: cmpwi r3 0x0
Parsed instruction at 80008F80: bne .L_80008F8C
Parsed instruction at 80008F84: li r0 0x0
Parsed instruction at 80008F88: b .L_8000903C
Parsed label: L_80008F8C:
Parsed instruction at 80008F8C: li r3 0x0
Parsed instruction at 80008F90: li r4 0x1
Parsed instruction at 80008F94: li r5 0x3
Parsed instruction at 80008F98: bl EXISelect
Parsed instruction at 80008F9C: cmpwi r3 0x0
Parsed instruction at 80008FA0: bne .L_80008FB4
Parsed instruction at 80008FA4: li r3 0x0
Parsed instruction at 80008FA8: bl EXIUnlock
Parsed instruction at 80008FAC: li r0 0x0
Parsed instruction at 80008FB0: b .L_8000903C
Parsed label: L_80008FB4:
Parsed instruction at 80008FB4: slwi r3 r29 6
Parsed instruction at 80008FB8: addi r0 r3 0x100
Parsed instruction at 80008FBC: oris r0 r0 0xa000
Parsed instruction at 80008FC0: stw r0 0x10(r1)
Parsed instruction at 80008FC4: addi r4 r1 0x10
Parsed instruction at 80008FC8: li r3 0x0
Parsed instruction at 80008FCC: li r5 0x4
Parsed instruction at 80008FD0: li r6 0x1
Parsed instruction at 80008FD4: li r7 0x0
Parsed instruction at 80008FD8: bl EXIImm
Parsed instruction at 80008FDC: cntlzw r0 r3
Parsed instruction at 80008FE0: srwi r29 r0 5
Parsed instruction at 80008FE4: li r3 0x0
Parsed instruction at 80008FE8: bl EXISync
Parsed instruction at 80008FEC: cntlzw r0 r3
Parsed instruction at 80008FF0: srwi r0 r0 5
Parsed instruction at 80008FF4: addi r4 r28 0x0
Parsed instruction at 80008FF8: addi r5 r27 0x0
Parsed instruction at 80008FFC: or r29 r29 r0
Parsed instruction at 80009000: li r3 0x0
Parsed instruction at 80009004: li r6 0x1
Parsed instruction at 80009008: bl fn_8000A0E8
Parsed instruction at 8000900C: cntlzw r0 r3
Parsed instruction at 80009010: srwi r0 r0 5
Parsed instruction at 80009014: or r29 r29 r0
Parsed instruction at 80009018: li r3 0x0
Parsed instruction at 8000901C: bl EXIDeselect
Parsed instruction at 80009020: cntlzw r0 r3
Parsed instruction at 80009024: srwi r0 r0 5
Parsed instruction at 80009028: or r29 r29 r0
Parsed instruction at 8000902C: li r3 0x0
Parsed instruction at 80009030: bl EXIUnlock
Parsed instruction at 80009034: cntlzw r0 r29
Parsed instruction at 80009038: srwi r0 r0 5
Parsed label: L_8000903C:
Parsed instruction at 8000903C: stw r0 0x4c(r31)
Parsed instruction at 80009040: lwz r0 0x4c(r31)
Parsed instruction at 80009044: cmpwi r0 0x0
Parsed instruction at 80009048: beq .L_80009054
Parsed instruction at 8000904C: li r0 0x40
Parsed instruction at 80009050: stw r0 0x0(r30)
Parsed label: L_80009054:
Parsed instruction at 80009054: li r0 0x0
Parsed instruction at 80009058: stw r0 0x48(r31)
Parsed instruction at 8000905C: lwz r3 0x44(r31)
Parsed instruction at 80009060: bl OSRestoreInterrupts
Parsed instruction at 80009064: lwz r3 0x4c(r31)
Parsed instruction at 80009068: lmw r27 0x1c(r1)
Parsed instruction at 8000906C: lwz r0 0x34(r1)
Parsed instruction at 80009070: addi r1 r1 0x30
Parsed instruction at 80009074: mtlr r0
Parsed instruction at 80009078: blr 
End of function: fn_80008D74, 204 instructions
Parsed function: __OSUnlockSram at 0x8000907C
Parsed instruction at 8000907C: mflr r0
Parsed instruction at 80009080: li r4 0x0
Parsed instruction at 80009084: stw r0 0x4(r1)
Parsed instruction at 80009088: stwu r1 -0x8(r1)
Parsed instruction at 8000908C: bl fn_80008D74
Parsed instruction at 80009090: lwz r0 0xc(r1)
Parsed instruction at 80009094: addi r1 r1 0x8
Parsed instruction at 80009098: mtlr r0
Parsed instruction at 8000909C: blr 
End of function: __OSUnlockSram, 9 instructions
Parsed function: fn_800090A0 at 0x800090A0
Parsed instruction at 800090A0: mflr r0
Parsed instruction at 800090A4: li r4 0x14
Parsed instruction at 800090A8: stw r0 0x4(r1)
Parsed instruction at 800090AC: stwu r1 -0x8(r1)
Parsed instruction at 800090B0: bl fn_80008D74
Parsed instruction at 800090B4: lwz r0 0xc(r1)
Parsed instruction at 800090B8: addi r1 r1 0x8
Parsed instruction at 800090BC: mtlr r0
Parsed instruction at 800090C0: blr 
End of function: fn_800090A0, 9 instructions
Parsed function: __OSSyncSram at 0x800090C4
Parsed instruction at 800090C4: lis r3 Scb_8001BBC0@ha
Parsed instruction at 800090C8: addi r3 r3 Scb_8001BBC0@l
Parsed instruction at 800090CC: lwz r3 0x4c(r3)
Parsed instruction at 800090D0: blr 
End of function: __OSSyncSram, 4 instructions
Parsed function: fn_800090D4 at 0x800090D4
Parsed instruction at 800090D4: mflr r0
Parsed instruction at 800090D8: lis r4 Scb_8001BBC0@ha
Parsed instruction at 800090DC: stw r0 0x4(r1)
Parsed instruction at 800090E0: stwu r1 -0x20(r1)
Parsed instruction at 800090E4: stw r31 0x1c(r1)
Parsed instruction at 800090E8: addi r31 r4 Scb_8001BBC0@l
Parsed instruction at 800090EC: stw r30 0x18(r1)
Parsed instruction at 800090F0: addi r30 r3 0x0
Parsed instruction at 800090F4: bl OSDisableInterrupts
Parsed instruction at 800090F8: lwz r0 0x48(r31)
Parsed instruction at 800090FC: addi r4 r31 0x48
Parsed instruction at 80009100: cmpwi r0 0x0
Parsed instruction at 80009104: beq .L_80009114
Parsed instruction at 80009108: bl OSRestoreInterrupts
Parsed instruction at 8000910C: li r3 0x0
Parsed instruction at 80009110: b .L_80009124
Parsed label: L_80009114:
Parsed instruction at 80009114: stw r3 0x44(r31)
Parsed instruction at 80009118: li r0 0x1
Parsed instruction at 8000911C: addi r3 r31 0x14
Parsed instruction at 80009120: stw r0 0x0(r4)
Parsed label: L_80009124:
Parsed instruction at 80009124: slwi r0 r30 1
Parsed instruction at 80009128: add r3 r3 r0
Parsed instruction at 8000912C: lhz r31 0x1c(r3)
Parsed instruction at 80009130: li r3 0x0
Parsed instruction at 80009134: li r4 0x14
Parsed instruction at 80009138: bl fn_80008D74
Parsed instruction at 8000913C: mr r3 r31
Parsed instruction at 80009140: lwz r0 0x24(r1)
Parsed instruction at 80009144: lwz r31 0x1c(r1)
Parsed instruction at 80009148: lwz r30 0x18(r1)
Parsed instruction at 8000914C: addi r1 r1 0x20
Parsed instruction at 80009150: mtlr r0
Parsed instruction at 80009154: blr 
End of function: fn_800090D4, 35 instructions
Parsed function: fn_80009158 at 0x80009158
Parsed instruction at 80009158: mflr r0
Parsed instruction at 8000915C: lis r5 Scb_8001BBC0@ha
Parsed instruction at 80009160: stw r0 0x4(r1)
Parsed instruction at 80009164: stwu r1 -0x28(r1)
Parsed instruction at 80009168: stw r31 0x24(r1)
Parsed instruction at 8000916C: addi r31 r5 Scb_8001BBC0@l
Parsed instruction at 80009170: stw r30 0x20(r1)
Parsed instruction at 80009174: addi r30 r4 0x0
Parsed instruction at 80009178: stw r29 0x1c(r1)
Parsed instruction at 8000917C: addi r29 r3 0x0
Parsed instruction at 80009180: bl OSDisableInterrupts
Parsed instruction at 80009184: lwz r0 0x48(r31)
Parsed instruction at 80009188: addi r4 r31 0x48
Parsed instruction at 8000918C: cmpwi r0 0x0
Parsed instruction at 80009190: beq .L_800091A0
Parsed instruction at 80009194: bl OSRestoreInterrupts
Parsed instruction at 80009198: li r3 0x0
Parsed instruction at 8000919C: b .L_800091B0
Parsed label: L_800091A0:
Parsed instruction at 800091A0: stw r3 0x44(r31)
Parsed instruction at 800091A4: li r0 0x1
Parsed instruction at 800091A8: addi r3 r31 0x14
Parsed instruction at 800091AC: stw r0 0x0(r4)
Parsed label: L_800091B0:
Parsed instruction at 800091B0: slwi r0 r29 1
Parsed instruction at 800091B4: add r4 r3 r0
Parsed instruction at 800091B8: lhzu r3 0x1c(r4)
Parsed instruction at 800091BC: clrlwi r0 r30 16
Parsed instruction at 800091C0: cmplw r3 r0
Parsed instruction at 800091C4: beq .L_800091DC
Parsed instruction at 800091C8: sth r30 0x0(r4)
Parsed instruction at 800091CC: li r3 0x1
Parsed instruction at 800091D0: li r4 0x14
Parsed instruction at 800091D4: bl fn_80008D74
Parsed instruction at 800091D8: b .L_800091E8
Parsed label: L_800091DC:
Parsed instruction at 800091DC: li r3 0x0
Parsed instruction at 800091E0: li r4 0x14
Parsed instruction at 800091E4: bl fn_80008D74
Parsed label: L_800091E8:
Parsed instruction at 800091E8: lwz r0 0x2c(r1)
Parsed instruction at 800091EC: lwz r31 0x24(r1)
Parsed instruction at 800091F0: lwz r30 0x20(r1)
Parsed instruction at 800091F4: lwz r29 0x1c(r1)
Parsed instruction at 800091F8: addi r1 r1 0x28
Parsed instruction at 800091FC: mtlr r0
Parsed instruction at 80009200: blr 
End of function: fn_80009158, 47 instructions
Parsed function: fn_80009204 at 0x80009204
Parsed instruction at 80009204: mfspr r9 HID0
Parsed instruction at 80009208: ori r10 r9 0x8
Parsed instruction at 8000920C: mtspr HID0 r10
Parsed instruction at 80009210: isync 
Parsed instruction at 80009214: sync 
Parsed instruction at 80009218: mtspr HID0 r9
Parsed instruction at 8000921C: rfi 
Warning: Unrecognized line: .sym __OSSystemCallVectorEnd, global
Parsed instruction at 80009220: nop 
End of function: fn_80009204, 8 instructions
Parsed function: __OSInitSystemCall at 0x80009224
Parsed instruction at 80009224: mflr r0
Parsed instruction at 80009228: stw r0 0x4(r1)
Parsed instruction at 8000922C: stwu r1 -0x10(r1)
Parsed instruction at 80009230: stw r31 0xc(r1)
Parsed instruction at 80009234: lis r5 0x8000
Parsed instruction at 80009238: lis r4 __OSSystemCallVectorStart@ha
Parsed instruction at 8000923C: lis r3 __OSSystemCallVectorEnd@ha
Parsed instruction at 80009240: addi r31 r5 0xc00
Parsed instruction at 80009244: addi r0 r3 __OSSystemCallVectorEnd@l
Parsed instruction at 80009248: addi r4 r4 __OSSystemCallVectorStart@l
Parsed instruction at 8000924C: mr r3 r31
Parsed instruction at 80009250: subf r5 r4 r0
Parsed instruction at 80009254: bl memcpy
Parsed instruction at 80009258: mr r3 r31
Parsed instruction at 8000925C: li r4 0x100
Parsed instruction at 80009260: bl DCFlushRangeNoSync
Parsed instruction at 80009264: sync 
Parsed instruction at 80009268: mr r3 r31
Parsed instruction at 8000926C: li r4 0x100
Parsed instruction at 80009270: bl ICInvalidateRange
Parsed instruction at 80009274: lwz r0 0x14(r1)
Parsed instruction at 80009278: lwz r31 0xc(r1)
Parsed instruction at 8000927C: addi r1 r1 0x10
Parsed instruction at 80009280: mtlr r0
Parsed instruction at 80009284: blr 
End of function: __OSInitSystemCall, 25 instructions
Parsed function: __OSThreadInit at 0x80009288
Parsed instruction at 80009288: mflr r0
Parsed instruction at 8000928C: lis r3 RunQueue_8001BC18@ha
Parsed instruction at 80009290: stw r0 0x4(r1)
Parsed instruction at 80009294: li r0 0x2
Parsed instruction at 80009298: li r4 0x10
Parsed instruction at 8000929C: stwu r1 -0x20(r1)
Parsed instruction at 800092A0: stmw r26 0x8(r1)
Parsed instruction at 800092A4: addi r28 r3 RunQueue_8001BC18@l
Parsed instruction at 800092A8: addi r31 r28 0x410
Parsed instruction at 800092AC: li r29 0x0
Parsed instruction at 800092B0: addi r3 r31 0x2e8
Parsed instruction at 800092B4: sth r0 0x6d8(r28)
Parsed instruction at 800092B8: li r0 0x1
Parsed instruction at 800092BC: sth r0 0x6da(r28)
Parsed instruction at 800092C0: li r0 -0x1
Parsed instruction at 800092C4: stw r4 0x6e4(r28)
Parsed instruction at 800092C8: stw r4 0x6e0(r28)
Parsed instruction at 800092CC: stw r29 0x6dc(r28)
Parsed instruction at 800092D0: stw r0 0x6e8(r28)
Parsed instruction at 800092D4: stw r29 0x700(r28)
Parsed instruction at 800092D8: bl OSInitThreadQueue
Parsed instruction at 800092DC: stw r29 0x708(r28)
Parsed instruction at 800092E0: lis r30 0x8000
Parsed instruction at 800092E4: addi r3 r31 0x0
Parsed instruction at 800092E8: stw r29 0x704(r28)
Parsed instruction at 800092EC: stw r31 0xd8(r30)
Parsed instruction at 800092F0: bl OSClearContext
Parsed instruction at 800092F4: mr r3 r31
Parsed instruction at 800092F8: bl OSSetCurrentContext
Parsed instruction at 800092FC: lis r3 _stack_addr@ha
Parsed instruction at 80009300: addi r0 r3 _stack_addr@l
Parsed instruction at 80009304: lis r3 _stack_end@ha
Parsed instruction at 80009308: stw r0 0x714(r28)
Parsed instruction at 8000930C: addi r0 r3 _stack_end@l
Parsed instruction at 80009310: addi r3 r28 0x718
Parsed instruction at 80009314: stw r0 0x718(r28)
Parsed instruction at 80009318: lis r4 0xdeae
Parsed instruction at 8000931C: li r26 0x0
Parsed instruction at 80009320: lwz r3 0x0(r3)
Parsed instruction at 80009324: subi r4 r4 0x4542
Parsed instruction at 80009328: slwi r0 r26 3
Parsed instruction at 8000932C: stw r4 0x0(r3)
Parsed instruction at 80009330: add r27 r28 r0
Parsed instruction at 80009334: stw r29 RunQueueBits_8001EEE0@sda21(r0)
Parsed instruction at 80009338: stw r31 0xe4(r30)
Parsed instruction at 8000933C: stw r29 RunQueueHint_8001EEE4@sda21(r0)
Parsed label: L_80009340:
Parsed instruction at 80009340: mr r3 r27
Parsed instruction at 80009344: bl OSInitThreadQueue
Parsed instruction at 80009348: addi r26 r26 0x1
Parsed instruction at 8000934C: cmpwi r26 0x1f
Parsed instruction at 80009350: addi r27 r27 0x8
Parsed instruction at 80009354: ble .L_80009340
Parsed instruction at 80009358: lis r30 0x8000
Parsed instruction at 8000935C: addi r3 r30 0xdc
Parsed instruction at 80009360: bl OSInitThreadQueue
Parsed instruction at 80009364: addi r4 r30 0xdc
Parsed instruction at 80009368: lwzu r3 0x4(r4)
Parsed instruction at 8000936C: cmplwi r3 0x0
Parsed instruction at 80009370: bne .L_8000937C
Parsed instruction at 80009374: stw r31 0xdc(r30)
Parsed instruction at 80009378: b .L_80009380
Parsed label: L_8000937C:
Parsed instruction at 8000937C: stw r31 0x2fc(r3)
Parsed label: L_80009380:
Parsed instruction at 80009380: stw r3 0x300(r31)
Parsed instruction at 80009384: li r30 0x0
Parsed instruction at 80009388: addi r3 r28 0x720
Parsed instruction at 8000938C: stw r30 0x2fc(r31)
Parsed instruction at 80009390: stw r31 0x0(r4)
Parsed instruction at 80009394: bl OSClearContext
Parsed instruction at 80009398: stw r30 Reschedule_8001EEE8@sda21(r0)
Parsed instruction at 8000939C: lmw r26 0x8(r1)
Parsed instruction at 800093A0: lwz r0 0x24(r1)
Parsed instruction at 800093A4: addi r1 r1 0x20
Parsed instruction at 800093A8: mtlr r0
Parsed instruction at 800093AC: blr 
End of function: __OSThreadInit, 77 instructions
Parsed function: OSInitThreadQueue at 0x800093B0
Parsed instruction at 800093B0: li r0 0x0
Parsed instruction at 800093B4: stw r0 0x4(r3)
Parsed instruction at 800093B8: stw r0 0x0(r3)
Parsed instruction at 800093BC: blr 
End of function: OSInitThreadQueue, 4 instructions
Parsed function: OSDisableScheduler at 0x800093C0
Parsed instruction at 800093C0: mflr r0
Parsed instruction at 800093C4: stw r0 0x4(r1)
Parsed instruction at 800093C8: stwu r1 -0x10(r1)
Parsed instruction at 800093CC: stw r31 0xc(r1)
Parsed instruction at 800093D0: bl OSDisableInterrupts
Parsed instruction at 800093D4: lwz r4 Reschedule_8001EEE8@sda21(r0)
Parsed instruction at 800093D8: addi r0 r4 0x1
Parsed instruction at 800093DC: stw r0 Reschedule_8001EEE8@sda21(r0)
Parsed instruction at 800093E0: mr r31 r4
Parsed instruction at 800093E4: bl OSRestoreInterrupts
Parsed instruction at 800093E8: mr r3 r31
Parsed instruction at 800093EC: lwz r0 0x14(r1)
Parsed instruction at 800093F0: lwz r31 0xc(r1)
Parsed instruction at 800093F4: addi r1 r1 0x10
Parsed instruction at 800093F8: mtlr r0
Parsed instruction at 800093FC: blr 
End of function: OSDisableScheduler, 16 instructions
Parsed function: OSEnableScheduler at 0x80009400
Parsed instruction at 80009400: mflr r0
Parsed instruction at 80009404: stw r0 0x4(r1)
Parsed instruction at 80009408: stwu r1 -0x10(r1)
Parsed instruction at 8000940C: stw r31 0xc(r1)
Parsed instruction at 80009410: bl OSDisableInterrupts
Parsed instruction at 80009414: lwz r4 Reschedule_8001EEE8@sda21(r0)
Parsed instruction at 80009418: subi r0 r4 0x1
Parsed instruction at 8000941C: stw r0 Reschedule_8001EEE8@sda21(r0)
Parsed instruction at 80009420: mr r31 r4
Parsed instruction at 80009424: bl OSRestoreInterrupts
Parsed instruction at 80009428: mr r3 r31
Parsed instruction at 8000942C: lwz r0 0x14(r1)
Parsed instruction at 80009430: lwz r31 0xc(r1)
Parsed instruction at 80009434: addi r1 r1 0x10
Parsed instruction at 80009438: mtlr r0
Parsed instruction at 8000943C: blr 
End of function: OSEnableScheduler, 16 instructions
Parsed function: fn_80009440 at 0x80009440
Parsed instruction at 80009440: lwz r4 0x2e0(r3)
Parsed instruction at 80009444: lwz r5 0x2dc(r3)
Parsed instruction at 80009448: cmplwi r4 0x0
Parsed instruction at 8000944C: lwz r6 0x2e4(r3)
Parsed instruction at 80009450: bne .L_8000945C
Parsed instruction at 80009454: stw r6 0x4(r5)
Parsed instruction at 80009458: b .L_80009460
Parsed label: L_8000945C:
Parsed instruction at 8000945C: stw r6 0x2e4(r4)
Parsed label: L_80009460:
Parsed instruction at 80009460: cmplwi r6 0x0
Parsed instruction at 80009464: bne .L_80009470
Parsed instruction at 80009468: stw r4 0x0(r5)
Parsed instruction at 8000946C: b .L_80009474
Parsed label: L_80009470:
Parsed instruction at 80009470: stw r4 0x2e0(r6)
Parsed label: L_80009474:
Parsed instruction at 80009474: lwz r0 0x0(r5)
Parsed instruction at 80009478: cmplwi r0 0x0
Parsed instruction at 8000947C: bne .L_8000949C
Parsed instruction at 80009480: lwz r0 0x2d0(r3)
Parsed instruction at 80009484: li r4 0x1
Parsed instruction at 80009488: lwz r5 RunQueueBits_8001EEE0@sda21(r0)
Parsed instruction at 8000948C: subfic r0 r0 0x1f
Parsed instruction at 80009490: slw r0 r4 r0
Parsed instruction at 80009494: andc r0 r5 r0
Parsed instruction at 80009498: stw r0 RunQueueBits_8001EEE0@sda21(r0)
Parsed label: L_8000949C:
Parsed instruction at 8000949C: li r0 0x0
Parsed instruction at 800094A0: stw r0 0x2dc(r3)
Parsed instruction at 800094A4: blr 
End of function: fn_80009440, 31 instructions
Parsed function: fn_800094A8 at 0x800094A8
Parsed instruction at 800094A8: lwz r4 0x2d4(r3)
Parsed instruction at 800094AC: lwz r5 0x2f4(r3)
Parsed instruction at 800094B0: b .L_800094D4
Parsed label: L_800094B4:
Parsed instruction at 800094B4: lwz r3 0x0(r5)
Parsed instruction at 800094B8: cmplwi r3 0x0
Parsed instruction at 800094BC: beq .L_800094D0
Parsed instruction at 800094C0: lwz r0 0x2d0(r3)
Parsed instruction at 800094C4: cmpw r0 r4
Parsed instruction at 800094C8: bge .L_800094D0
Parsed instruction at 800094CC: mr r4 r0
Parsed label: L_800094D0:
Parsed instruction at 800094D0: lwz r5 0x10(r5)
Parsed label: L_800094D4:
Parsed instruction at 800094D4: cmplwi r5 0x0
Parsed instruction at 800094D8: bne .L_800094B4
Parsed instruction at 800094DC: mr r3 r4
Parsed instruction at 800094E0: blr 
End of function: fn_800094A8, 18 instructions
Parsed function: fn_800094E4 at 0x800094E4
Parsed instruction at 800094E4: mflr r0
Parsed instruction at 800094E8: stw r0 0x4(r1)
Parsed instruction at 800094EC: stwu r1 -0x18(r1)
Parsed instruction at 800094F0: stw r31 0x14(r1)
Parsed instruction at 800094F4: mr r31 r3
Parsed instruction at 800094F8: stw r30 0x10(r1)
Parsed instruction at 800094FC: addi r30 r4 0x0
Parsed instruction at 80009500: lhz r0 0x2c8(r3)
Parsed instruction at 80009504: cmpwi r0 0x3
Parsed instruction at 80009508: beq .L_80009688
Parsed instruction at 8000950C: bge .L_80009520
Parsed instruction at 80009510: cmpwi r0 0x1
Parsed instruction at 80009514: beq .L_8000952C
Parsed instruction at 80009518: bge .L_8000967C
Parsed instruction at 8000951C: b .L_80009688
Parsed label: L_80009520:
Parsed instruction at 80009520: cmpwi r0 0x5
Parsed instruction at 80009524: bge .L_80009688
Parsed instruction at 80009528: b .L_800095A4
Parsed label: L_8000952C:
Parsed instruction at 8000952C: mr r3 r31
Parsed instruction at 80009530: bl fn_80009440
Parsed instruction at 80009534: stw r30 0x2d0(r31)
Parsed instruction at 80009538: lis r3 RunQueue_8001BC18@ha
Parsed instruction at 8000953C: addi r0 r3 RunQueue_8001BC18@l
Parsed instruction at 80009540: lwz r3 0x2d0(r31)
Parsed instruction at 80009544: slwi r3 r3 3
Parsed instruction at 80009548: add r0 r0 r3
Parsed instruction at 8000954C: stw r0 0x2dc(r31)
Parsed instruction at 80009550: lwz r4 0x2dc(r31)
Parsed instruction at 80009554: lwz r3 0x4(r4)
Parsed instruction at 80009558: cmplwi r3 0x0
Parsed instruction at 8000955C: bne .L_80009568
Parsed instruction at 80009560: stw r31 0x0(r4)
Parsed instruction at 80009564: b .L_8000956C
Parsed label: L_80009568:
Parsed instruction at 80009568: stw r31 0x2e0(r3)
Parsed label: L_8000956C:
Parsed instruction at 8000956C: stw r3 0x2e4(r31)
Parsed instruction at 80009570: li r0 0x0
Parsed instruction at 80009574: li r3 0x1
Parsed instruction at 80009578: stw r0 0x2e0(r31)
Parsed instruction at 8000957C: lwz r4 0x2dc(r31)
Parsed instruction at 80009580: stw r31 0x4(r4)
Parsed instruction at 80009584: lwz r0 0x2d0(r31)
Parsed instruction at 80009588: lwz r4 RunQueueBits_8001EEE0@sda21(r0)
Parsed instruction at 8000958C: subfic r0 r0 0x1f
Parsed instruction at 80009590: slw r0 r3 r0
Parsed instruction at 80009594: or r0 r4 r0
Parsed instruction at 80009598: stw r0 RunQueueBits_8001EEE0@sda21(r0)
Parsed instruction at 8000959C: stw r3 RunQueueHint_8001EEE4@sda21(r0)
Parsed instruction at 800095A0: b .L_80009688
Parsed label: L_800095A4:
Parsed instruction at 800095A4: lwz r4 0x2e0(r31)
Parsed instruction at 800095A8: lwz r5 0x2e4(r31)
Parsed instruction at 800095AC: cmplwi r4 0x0
Parsed instruction at 800095B0: bne .L_800095C0
Parsed instruction at 800095B4: lwz r3 0x2dc(r31)
Parsed instruction at 800095B8: stw r5 0x4(r3)
Parsed instruction at 800095BC: b .L_800095C4
Parsed label: L_800095C0:
Parsed instruction at 800095C0: stw r5 0x2e4(r4)
Parsed label: L_800095C4:
Parsed instruction at 800095C4: cmplwi r5 0x0
Parsed instruction at 800095C8: bne .L_800095D8
Parsed instruction at 800095CC: lwz r3 0x2dc(r31)
Parsed instruction at 800095D0: stw r4 0x0(r3)
Parsed instruction at 800095D4: b .L_800095DC
Parsed label: L_800095D8:
Parsed instruction at 800095D8: stw r4 0x2e0(r5)
Parsed label: L_800095DC:
Parsed instruction at 800095DC: stw r30 0x2d0(r31)
Parsed instruction at 800095E0: lwz r4 0x2dc(r31)
Parsed instruction at 800095E4: lwz r5 0x0(r4)
Parsed instruction at 800095E8: b .L_800095F0
Parsed label: L_800095EC:
Parsed instruction at 800095EC: lwz r5 0x2e0(r5)
Parsed label: L_800095F0:
Parsed instruction at 800095F0: cmplwi r5 0x0
Parsed instruction at 800095F4: beq .L_80009608
Parsed instruction at 800095F8: lwz r3 0x2d0(r5)
Parsed instruction at 800095FC: lwz r0 0x2d0(r31)
Parsed instruction at 80009600: cmpw r3 r0
Parsed instruction at 80009604: ble .L_800095EC
Parsed label: L_80009608:
Parsed instruction at 80009608: cmplwi r5 0x0
Parsed instruction at 8000960C: bne .L_80009640
Parsed instruction at 80009610: lwz r3 0x4(r4)
Parsed instruction at 80009614: cmplwi r3 0x0
Parsed instruction at 80009618: bne .L_80009624
Parsed instruction at 8000961C: stw r31 0x0(r4)
Parsed instruction at 80009620: b .L_80009628
Parsed label: L_80009624:
Parsed instruction at 80009624: stw r31 0x2e0(r3)
Parsed label: L_80009628:
Parsed instruction at 80009628: stw r3 0x2e4(r31)
Parsed instruction at 8000962C: li r0 0x0
Parsed instruction at 80009630: stw r0 0x2e0(r31)
Parsed instruction at 80009634: lwz r3 0x2dc(r31)
Parsed instruction at 80009638: stw r31 0x4(r3)
Parsed instruction at 8000963C: b .L_80009668
Parsed label: L_80009640:
Parsed instruction at 80009640: stw r5 0x2e0(r31)
Parsed instruction at 80009644: lwz r3 0x2e4(r5)
Parsed instruction at 80009648: stw r31 0x2e4(r5)
Parsed instruction at 8000964C: cmplwi r3 0x0
Parsed instruction at 80009650: stw r3 0x2e4(r31)
Parsed instruction at 80009654: bne .L_80009664
Parsed instruction at 80009658: lwz r3 0x2dc(r31)
Parsed instruction at 8000965C: stw r31 0x0(r3)
Parsed instruction at 80009660: b .L_80009668
Parsed label: L_80009664:
Parsed instruction at 80009664: stw r31 0x2e0(r3)
Parsed label: L_80009668:
Parsed instruction at 80009668: lwz r3 0x2f0(r31)
Parsed instruction at 8000966C: cmplwi r3 0x0
Parsed instruction at 80009670: beq .L_80009688
Parsed instruction at 80009674: lwz r3 0x8(r3)
Parsed instruction at 80009678: b .L_8000968C
Parsed label: L_8000967C:
Parsed instruction at 8000967C: li r0 0x1
Parsed instruction at 80009680: stw r0 RunQueueHint_8001EEE4@sda21(r0)
Parsed instruction at 80009684: stw r30 0x2d0(r31)
Parsed label: L_80009688:
Parsed instruction at 80009688: li r3 0x0
Parsed label: L_8000968C:
Parsed instruction at 8000968C: lwz r0 0x1c(r1)
Parsed instruction at 80009690: lwz r31 0x14(r1)
Parsed instruction at 80009694: lwz r30 0x10(r1)
Parsed instruction at 80009698: addi r1 r1 0x18
Parsed instruction at 8000969C: mtlr r0
Parsed instruction at 800096A0: blr 
End of function: fn_800094E4, 132 instructions
Parsed function: SelectThread at 0x800096A4
Parsed instruction at 800096A4: mflr r0
Parsed instruction at 800096A8: lis r4 RunQueue_8001BC18@ha
Parsed instruction at 800096AC: stw r0 0x4(r1)
Parsed instruction at 800096B0: stwu r1 -0x18(r1)
Parsed instruction at 800096B4: stw r31 0x14(r1)
Parsed instruction at 800096B8: addi r31 r4 RunQueue_8001BC18@l
Parsed instruction at 800096BC: stw r30 0x10(r1)
Parsed instruction at 800096C0: addi r30 r3 0x0
Parsed instruction at 800096C4: lwz r0 Reschedule_8001EEE8@sda21(r0)
Parsed instruction at 800096C8: cmpwi r0 0x0
Parsed instruction at 800096CC: ble .L_800096D8
Parsed instruction at 800096D0: li r3 0x0
Parsed instruction at 800096D4: b .L_8000988C
Parsed label: L_800096D8:
Parsed instruction at 800096D8: bl fn_80006FC8
Parsed instruction at 800096DC: lis r4 0x8000
Parsed instruction at 800096E0: lwz r6 0xe4(r4)
Parsed instruction at 800096E4: cmplw r3 r6
Parsed instruction at 800096E8: addi r3 r6 0x0
Parsed instruction at 800096EC: beq .L_800096F8
Parsed instruction at 800096F0: li r3 0x0
Parsed instruction at 800096F4: b .L_8000988C
Parsed label: L_800096F8:
Parsed instruction at 800096F8: cmplwi r6 0x0
Parsed instruction at 800096FC: beq .L_800097B8
Parsed instruction at 80009700: lhz r0 0x2c8(r6)
Parsed instruction at 80009704: cmplwi r0 0x2
Parsed instruction at 80009708: bne .L_80009798
Parsed instruction at 8000970C: cmpwi r30 0x0
Parsed instruction at 80009710: bne .L_80009730
Parsed instruction at 80009714: lwz r4 RunQueueBits_8001EEE0@sda21(r0)
Parsed instruction at 80009718: lwz r0 0x2d0(r6)
Parsed instruction at 8000971C: cntlzw r4 r4
Parsed instruction at 80009720: cmpw r0 r4
Parsed instruction at 80009724: bgt .L_80009730
Parsed instruction at 80009728: li r3 0x0
Parsed instruction at 8000972C: b .L_8000988C
Parsed label: L_80009730:
Parsed instruction at 80009730: li r0 0x1
Parsed instruction at 80009734: sth r0 0x2c8(r6)
Parsed instruction at 80009738: lwz r0 0x2d0(r6)
Parsed instruction at 8000973C: slwi r0 r0 3
Parsed instruction at 80009740: add r0 r31 r0
Parsed instruction at 80009744: stw r0 0x2dc(r6)
Parsed instruction at 80009748: lwz r5 0x2dc(r6)
Parsed instruction at 8000974C: lwz r4 0x4(r5)
Parsed instruction at 80009750: cmplwi r4 0x0
Parsed instruction at 80009754: bne .L_80009760
Parsed instruction at 80009758: stw r6 0x0(r5)
Parsed instruction at 8000975C: b .L_80009764
Parsed label: L_80009760:
Parsed instruction at 80009760: stw r6 0x2e0(r4)
Parsed label: L_80009764:
Parsed instruction at 80009764: stw r4 0x2e4(r6)
Parsed instruction at 80009768: li r0 0x0
Parsed instruction at 8000976C: li r4 0x1
Parsed instruction at 80009770: stw r0 0x2e0(r6)
Parsed instruction at 80009774: lwz r5 0x2dc(r6)
Parsed instruction at 80009778: stw r6 0x4(r5)
Parsed instruction at 8000977C: lwz r0 0x2d0(r6)
Parsed instruction at 80009780: lwz r5 RunQueueBits_8001EEE0@sda21(r0)
Parsed instruction at 80009784: subfic r0 r0 0x1f
Parsed instruction at 80009788: slw r0 r4 r0
Parsed instruction at 8000978C: or r0 r5 r0
Parsed instruction at 80009790: stw r0 RunQueueBits_8001EEE0@sda21(r0)
Parsed instruction at 80009794: stw r4 RunQueueHint_8001EEE4@sda21(r0)
Parsed label: L_80009798:
Parsed instruction at 80009798: lhz r0 0x1a2(r6)
Parsed instruction at 8000979C: rlwinm. r0 r0 0 30 30
Parsed instruction at 800097A0: bne .L_800097B8
Parsed instruction at 800097A4: bl fn_80006FD4
Parsed instruction at 800097A8: cmplwi r3 0x0
Parsed instruction at 800097AC: beq .L_800097B8
Parsed instruction at 800097B0: li r3 0x0
Parsed instruction at 800097B4: b .L_8000988C
Parsed label: L_800097B8:
Parsed instruction at 800097B8: lwz r0 RunQueueBits_8001EEE0@sda21(r0)
Parsed instruction at 800097BC: li r4 0x0
Parsed instruction at 800097C0: lis r3 0x8000
Parsed instruction at 800097C4: cmplwi r0 0x0
Parsed instruction at 800097C8: stw r4 0xe4(r3)
Parsed instruction at 800097CC: bne .L_80009800
Parsed instruction at 800097D0: addi r3 r31 0x720
Parsed instruction at 800097D4: bl OSSetCurrentContext
Parsed label: L_800097D8:
Parsed instruction at 800097D8: bl OSEnableInterrupts
Parsed label: L_800097DC:
Parsed instruction at 800097DC: lwz r0 RunQueueBits_8001EEE0@sda21(r0)
Parsed instruction at 800097E0: cmplwi r0 0x0
Parsed instruction at 800097E4: beq .L_800097DC
Parsed instruction at 800097E8: bl OSDisableInterrupts
Parsed instruction at 800097EC: lwz r0 RunQueueBits_8001EEE0@sda21(r0)
Parsed instruction at 800097F0: cmplwi r0 0x0
Parsed instruction at 800097F4: beq .L_800097D8
Parsed instruction at 800097F8: addi r3 r31 0x720
Parsed instruction at 800097FC: bl OSClearContext
Parsed label: L_80009800:
Parsed instruction at 80009800: li r3 0x0
Parsed instruction at 80009804: stw r3 RunQueueHint_8001EEE4@sda21(r0)
Parsed instruction at 80009808: lwz r0 RunQueueBits_8001EEE0@sda21(r0)
Parsed instruction at 8000980C: cntlzw r7 r0
Parsed instruction at 80009810: slwi r0 r7 3
Parsed instruction at 80009814: add r4 r31 r0
Parsed instruction at 80009818: lwz r5 0x0(r4)
Parsed instruction at 8000981C: lwz r6 0x2e0(r5)
Parsed instruction at 80009820: addi r31 r5 0x0
Parsed instruction at 80009824: cmplwi r6 0x0
Parsed instruction at 80009828: bne .L_80009834
Parsed instruction at 8000982C: stw r3 0x4(r4)
Parsed instruction at 80009830: b .L_80009838
Parsed label: L_80009834:
Parsed instruction at 80009834: stw r3 0x2e4(r6)
Parsed label: L_80009838:
Parsed instruction at 80009838: stw r6 0x0(r4)
Parsed instruction at 8000983C: lwz r0 0x0(r4)
Parsed instruction at 80009840: cmplwi r0 0x0
Parsed instruction at 80009844: bne .L_80009860
Parsed instruction at 80009848: subfic r0 r7 0x1f
Parsed instruction at 8000984C: lwz r4 RunQueueBits_8001EEE0@sda21(r0)
Parsed instruction at 80009850: li r3 0x1
Parsed instruction at 80009854: slw r0 r3 r0
Parsed instruction at 80009858: andc r0 r4 r0
Parsed instruction at 8000985C: stw r0 RunQueueBits_8001EEE0@sda21(r0)
Parsed label: L_80009860:
Parsed instruction at 80009860: li r0 0x0
Parsed instruction at 80009864: stw r0 0x2dc(r31)
Parsed instruction at 80009868: li r0 0x2
Parsed instruction at 8000986C: lis r4 0x8000
Parsed instruction at 80009870: sth r0 0x2c8(r31)
Parsed instruction at 80009874: mr r3 r31
Parsed instruction at 80009878: stw r31 0xe4(r4)
Parsed instruction at 8000987C: bl OSSetCurrentContext
Parsed instruction at 80009880: mr r3 r31
Parsed instruction at 80009884: bl OSLoadContext
Parsed instruction at 80009888: mr r3 r31
Parsed label: L_8000988C:
Parsed instruction at 8000988C: lwz r0 0x1c(r1)
Parsed instruction at 80009890: lwz r31 0x14(r1)
Parsed instruction at 80009894: lwz r30 0x10(r1)
Parsed instruction at 80009898: addi r1 r1 0x18
Parsed instruction at 8000989C: mtlr r0
Parsed instruction at 800098A0: blr 
End of function: SelectThread, 142 instructions
Parsed function: __OSReschedule at 0x800098A4
Parsed instruction at 800098A4: mflr r0
Parsed instruction at 800098A8: stw r0 0x4(r1)
Parsed instruction at 800098AC: stwu r1 -0x8(r1)
Parsed instruction at 800098B0: lwz r0 RunQueueHint_8001EEE4@sda21(r0)
Parsed instruction at 800098B4: cmpwi r0 0x0
Parsed instruction at 800098B8: beq .L_800098C4
Parsed instruction at 800098BC: li r3 0x0
Parsed instruction at 800098C0: bl SelectThread
Parsed label: L_800098C4:
Parsed instruction at 800098C4: lwz r0 0xc(r1)
Parsed instruction at 800098C8: addi r1 r1 0x8
Parsed instruction at 800098CC: mtlr r0
Parsed instruction at 800098D0: blr 
End of function: __OSReschedule, 13 instructions
Parsed function: OSCancelThread at 0x800098D4
Parsed instruction at 800098D4: mflr r0
Parsed instruction at 800098D8: stw r0 0x4(r1)
Parsed instruction at 800098DC: stwu r1 -0x20(r1)
Parsed instruction at 800098E0: stw r31 0x1c(r1)
Parsed instruction at 800098E4: stw r30 0x18(r1)
Parsed instruction at 800098E8: mr r30 r3
Parsed instruction at 800098EC: stw r29 0x14(r1)
Parsed instruction at 800098F0: bl OSDisableInterrupts
Parsed instruction at 800098F4: lhz r0 0x2c8(r30)
Parsed instruction at 800098F8: addi r31 r3 0x0
Parsed instruction at 800098FC: cmpwi r0 0x3
Parsed instruction at 80009900: beq .L_800099DC
Parsed instruction at 80009904: bge .L_80009918
Parsed instruction at 80009908: cmpwi r0 0x1
Parsed instruction at 8000990C: beq .L_80009924
Parsed instruction at 80009910: bge .L_8000993C
Parsed instruction at 80009914: b .L_800099DC
Parsed label: L_80009918:
Parsed instruction at 80009918: cmpwi r0 0x5
Parsed instruction at 8000991C: bge .L_800099DC
Parsed instruction at 80009920: b .L_80009948
Parsed label: L_80009924:
Parsed instruction at 80009924: lwz r0 0x2cc(r30)
Parsed instruction at 80009928: cmpwi r0 0x0
Parsed instruction at 8000992C: bgt .L_800099E8
Parsed instruction at 80009930: mr r3 r30
Parsed instruction at 80009934: bl fn_80009440
Parsed instruction at 80009938: b .L_800099E8
Parsed label: L_8000993C:
Parsed instruction at 8000993C: li r0 0x1
Parsed instruction at 80009940: stw r0 RunQueueHint_8001EEE4@sda21(r0)
Parsed instruction at 80009944: b .L_800099E8
Parsed label: L_80009948:
Parsed instruction at 80009948: lwz r4 0x2e0(r30)
Parsed instruction at 8000994C: lwz r5 0x2e4(r30)
Parsed instruction at 80009950: cmplwi r4 0x0
Parsed instruction at 80009954: bne .L_80009964
Parsed instruction at 80009958: lwz r3 0x2dc(r30)
Parsed instruction at 8000995C: stw r5 0x4(r3)
Parsed instruction at 80009960: b .L_80009968
Parsed label: L_80009964:
Parsed instruction at 80009964: stw r5 0x2e4(r4)
Parsed label: L_80009968:
Parsed instruction at 80009968: cmplwi r5 0x0
Parsed instruction at 8000996C: bne .L_8000997C
Parsed instruction at 80009970: lwz r3 0x2dc(r30)
Parsed instruction at 80009974: stw r4 0x0(r3)
Parsed instruction at 80009978: b .L_80009980
Parsed label: L_8000997C:
Parsed instruction at 8000997C: stw r4 0x2e0(r5)
Parsed label: L_80009980:
Parsed instruction at 80009980: li r0 0x0
Parsed instruction at 80009984: stw r0 0x2dc(r30)
Parsed instruction at 80009988: lwz r0 0x2cc(r30)
Parsed instruction at 8000998C: cmpwi r0 0x0
Parsed instruction at 80009990: bgt .L_800099E8
Parsed instruction at 80009994: lwz r3 0x2f0(r30)
Parsed instruction at 80009998: cmplwi r3 0x0
Parsed instruction at 8000999C: beq .L_800099E8
Parsed instruction at 800099A0: lwz r29 0x8(r3)
Parsed label: L_800099A4:
Parsed instruction at 800099A4: lwz r0 0x2cc(r29)
Parsed instruction at 800099A8: cmpwi r0 0x0
Parsed instruction at 800099AC: bgt .L_800099E8
Parsed instruction at 800099B0: mr r3 r29
Parsed instruction at 800099B4: bl fn_800094A8
Parsed instruction at 800099B8: lwz r0 0x2d0(r29)
Parsed instruction at 800099BC: addi r4 r3 0x0
Parsed instruction at 800099C0: cmpw r0 r4
Parsed instruction at 800099C4: beq .L_800099E8
Parsed instruction at 800099C8: mr r3 r29
Parsed instruction at 800099CC: bl fn_800094E4
Parsed instruction at 800099D0: mr. r29 r3
Parsed instruction at 800099D4: bne .L_800099A4
Parsed instruction at 800099D8: b .L_800099E8
Parsed label: L_800099DC:
Parsed instruction at 800099DC: mr r3 r31
Parsed instruction at 800099E0: bl OSRestoreInterrupts
Parsed instruction at 800099E4: b .L_80009A74
Parsed label: L_800099E8:
Parsed instruction at 800099E8: mr r3 r30
Parsed instruction at 800099EC: bl OSClearContext
Parsed instruction at 800099F0: lhz r0 0x2ca(r30)
Parsed instruction at 800099F4: clrlwi. r0 r0 31
Parsed instruction at 800099F8: beq .L_80009A40
Parsed instruction at 800099FC: lwz r4 0x2fc(r30)
Parsed instruction at 80009A00: lwz r5 0x300(r30)
Parsed instruction at 80009A04: cmplwi r4 0x0
Parsed instruction at 80009A08: bne .L_80009A18
Parsed instruction at 80009A0C: lis r3 0x8000
Parsed instruction at 80009A10: stw r5 0xe0(r3)
Parsed instruction at 80009A14: b .L_80009A1C
Parsed label: L_80009A18:
Parsed instruction at 80009A18: stw r5 0x300(r4)
Parsed label: L_80009A1C:
Parsed instruction at 80009A1C: cmplwi r5 0x0
Parsed instruction at 80009A20: bne .L_80009A30
Parsed instruction at 80009A24: lis r3 0x8000
Parsed instruction at 80009A28: stw r4 0xdc(r3)
Parsed instruction at 80009A2C: b .L_80009A34
Parsed label: L_80009A30:
Parsed instruction at 80009A30: stw r4 0x2fc(r5)
Parsed label: L_80009A34:
Parsed instruction at 80009A34: li r0 0x0
Parsed instruction at 80009A38: sth r0 0x2c8(r30)
Parsed instruction at 80009A3C: b .L_80009A48
Parsed label: L_80009A40:
Parsed instruction at 80009A40: li r0 0x8
Parsed instruction at 80009A44: sth r0 0x2c8(r30)
Parsed label: L_80009A48:
Parsed instruction at 80009A48: mr r3 r30
Parsed instruction at 80009A4C: bl fn_800082C0
Parsed instruction at 80009A50: addi r3 r30 0x2e8
Parsed instruction at 80009A54: bl fn_80009B7C
Parsed instruction at 80009A58: lwz r0 RunQueueHint_8001EEE4@sda21(r0)
Parsed instruction at 80009A5C: cmpwi r0 0x0
Parsed instruction at 80009A60: beq .L_80009A6C
Parsed instruction at 80009A64: li r3 0x0
Parsed instruction at 80009A68: bl SelectThread
Parsed label: L_80009A6C:
Parsed instruction at 80009A6C: mr r3 r31
Parsed instruction at 80009A70: bl OSRestoreInterrupts
Parsed label: L_80009A74:
Parsed instruction at 80009A74: lwz r0 0x24(r1)
Parsed instruction at 80009A78: lwz r31 0x1c(r1)
Parsed instruction at 80009A7C: lwz r30 0x18(r1)
Parsed instruction at 80009A80: lwz r29 0x14(r1)
Parsed instruction at 80009A84: addi r1 r1 0x20
Parsed instruction at 80009A88: mtlr r0
Parsed instruction at 80009A8C: blr 
End of function: OSCancelThread, 130 instructions
Parsed function: fn_80009A90 at 0x80009A90
Parsed instruction at 80009A90: mflr r0
Parsed instruction at 80009A94: stw r0 0x4(r1)
Parsed instruction at 80009A98: stwu r1 -0x18(r1)
Parsed instruction at 80009A9C: stw r31 0x14(r1)
Parsed instruction at 80009AA0: stw r30 0x10(r1)
Parsed instruction at 80009AA4: mr r30 r3
Parsed instruction at 80009AA8: bl OSDisableInterrupts
Parsed instruction at 80009AAC: lis r4 0x8000
Parsed instruction at 80009AB0: lwz r4 0xe4(r4)
Parsed instruction at 80009AB4: li r0 0x4
Parsed instruction at 80009AB8: mr r31 r3
Parsed instruction at 80009ABC: sth r0 0x2c8(r4)
Parsed instruction at 80009AC0: stw r30 0x2dc(r4)
Parsed instruction at 80009AC4: lwz r5 0x0(r30)
Parsed instruction at 80009AC8: b .L_80009AD0
Parsed label: L_80009ACC:
Parsed instruction at 80009ACC: lwz r5 0x2e0(r5)
Parsed label: L_80009AD0:
Parsed instruction at 80009AD0: cmplwi r5 0x0
Parsed instruction at 80009AD4: beq .L_80009AE8
Parsed instruction at 80009AD8: lwz r3 0x2d0(r5)
Parsed instruction at 80009ADC: lwz r0 0x2d0(r4)
Parsed instruction at 80009AE0: cmpw r3 r0
Parsed instruction at 80009AE4: ble .L_80009ACC
Parsed label: L_80009AE8:
Parsed instruction at 80009AE8: cmplwi r5 0x0
Parsed instruction at 80009AEC: bne .L_80009B1C
Parsed instruction at 80009AF0: lwz r3 0x4(r30)
Parsed instruction at 80009AF4: cmplwi r3 0x0
Parsed instruction at 80009AF8: bne .L_80009B04
Parsed instruction at 80009AFC: stw r4 0x0(r30)
Parsed instruction at 80009B00: b .L_80009B08
Parsed label: L_80009B04:
Parsed instruction at 80009B04: stw r4 0x2e0(r3)
Parsed label: L_80009B08:
Parsed instruction at 80009B08: stw r3 0x2e4(r4)
Parsed instruction at 80009B0C: li r0 0x0
Parsed instruction at 80009B10: stw r0 0x2e0(r4)
Parsed instruction at 80009B14: stw r4 0x4(r30)
Parsed instruction at 80009B18: b .L_80009B40
Parsed label: L_80009B1C:
Parsed instruction at 80009B1C: stw r5 0x2e0(r4)
Parsed instruction at 80009B20: lwz r3 0x2e4(r5)
Parsed instruction at 80009B24: stw r4 0x2e4(r5)
Parsed instruction at 80009B28: cmplwi r3 0x0
Parsed instruction at 80009B2C: stw r3 0x2e4(r4)
Parsed instruction at 80009B30: bne .L_80009B3C
Parsed instruction at 80009B34: stw r4 0x0(r30)
Parsed instruction at 80009B38: b .L_80009B40
Parsed label: L_80009B3C:
Parsed instruction at 80009B3C: stw r4 0x2e0(r3)
Parsed label: L_80009B40:
Parsed instruction at 80009B40: li r0 0x1
Parsed instruction at 80009B44: stw r0 RunQueueHint_8001EEE4@sda21(r0)
Parsed instruction at 80009B48: lwz r0 RunQueueHint_8001EEE4@sda21(r0)
Parsed instruction at 80009B4C: cmpwi r0 0x0
Parsed instruction at 80009B50: beq .L_80009B5C
Parsed instruction at 80009B54: li r3 0x0
Parsed instruction at 80009B58: bl SelectThread
Parsed label: L_80009B5C:
Parsed instruction at 80009B5C: mr r3 r31
Parsed instruction at 80009B60: bl OSRestoreInterrupts
Parsed instruction at 80009B64: lwz r0 0x1c(r1)
Parsed instruction at 80009B68: lwz r31 0x14(r1)
Parsed instruction at 80009B6C: lwz r30 0x10(r1)
Parsed instruction at 80009B70: addi r1 r1 0x18
Parsed instruction at 80009B74: mtlr r0
Parsed instruction at 80009B78: blr 
End of function: fn_80009A90, 68 instructions
Parsed function: fn_80009B7C at 0x80009B7C
Parsed instruction at 80009B7C: mflr r0
Parsed instruction at 80009B80: stw r0 0x4(r1)
Parsed instruction at 80009B84: stwu r1 -0x18(r1)
Parsed instruction at 80009B88: stw r31 0x14(r1)
Parsed instruction at 80009B8C: stw r30 0x10(r1)
Parsed instruction at 80009B90: mr r30 r3
Parsed instruction at 80009B94: bl OSDisableInterrupts
Parsed instruction at 80009B98: lis r4 RunQueue_8001BC18@ha
Parsed instruction at 80009B9C: addi r31 r3 0x0
Parsed instruction at 80009BA0: addi r5 r4 RunQueue_8001BC18@l
Parsed instruction at 80009BA4: b .L_80009C40
Parsed label: L_80009BA8:
Parsed instruction at 80009BA8: lwz r3 0x2e0(r6)
Parsed instruction at 80009BAC: cmplwi r3 0x0
Parsed instruction at 80009BB0: bne .L_80009BC0
Parsed instruction at 80009BB4: li r0 0x0
Parsed instruction at 80009BB8: stw r0 0x4(r30)
Parsed instruction at 80009BBC: b .L_80009BC8
Parsed label: L_80009BC0:
Parsed instruction at 80009BC0: li r0 0x0
Parsed instruction at 80009BC4: stw r0 0x2e4(r3)
Parsed label: L_80009BC8:
Parsed instruction at 80009BC8: stw r3 0x0(r30)
Parsed instruction at 80009BCC: li r0 0x1
Parsed instruction at 80009BD0: sth r0 0x2c8(r6)
Parsed instruction at 80009BD4: lwz r0 0x2cc(r6)
Parsed instruction at 80009BD8: cmpwi r0 0x0
Parsed instruction at 80009BDC: bgt .L_80009C40
Parsed instruction at 80009BE0: lwz r0 0x2d0(r6)
Parsed instruction at 80009BE4: slwi r0 r0 3
Parsed instruction at 80009BE8: add r0 r5 r0
Parsed instruction at 80009BEC: stw r0 0x2dc(r6)
Parsed instruction at 80009BF0: lwz r4 0x2dc(r6)
Parsed instruction at 80009BF4: lwz r3 0x4(r4)
Parsed instruction at 80009BF8: cmplwi r3 0x0
Parsed instruction at 80009BFC: bne .L_80009C08
Parsed instruction at 80009C00: stw r6 0x0(r4)
Parsed instruction at 80009C04: b .L_80009C0C
Parsed label: L_80009C08:
Parsed instruction at 80009C08: stw r6 0x2e0(r3)
Parsed label: L_80009C0C:
Parsed instruction at 80009C0C: stw r3 0x2e4(r6)
Parsed instruction at 80009C10: li r0 0x0
Parsed instruction at 80009C14: li r3 0x1
Parsed instruction at 80009C18: stw r0 0x2e0(r6)
Parsed instruction at 80009C1C: lwz r4 0x2dc(r6)
Parsed instruction at 80009C20: stw r6 0x4(r4)
Parsed instruction at 80009C24: lwz r0 0x2d0(r6)
Parsed instruction at 80009C28: lwz r4 RunQueueBits_8001EEE0@sda21(r0)
Parsed instruction at 80009C2C: subfic r0 r0 0x1f
Parsed instruction at 80009C30: slw r0 r3 r0
Parsed instruction at 80009C34: or r0 r4 r0
Parsed instruction at 80009C38: stw r0 RunQueueBits_8001EEE0@sda21(r0)
Parsed instruction at 80009C3C: stw r3 RunQueueHint_8001EEE4@sda21(r0)
Parsed label: L_80009C40:
Parsed instruction at 80009C40: lwz r6 0x0(r30)
Parsed instruction at 80009C44: cmplwi r6 0x0
Parsed instruction at 80009C48: bne .L_80009BA8
Parsed instruction at 80009C4C: lwz r0 RunQueueHint_8001EEE4@sda21(r0)
Parsed instruction at 80009C50: cmpwi r0 0x0
Parsed instruction at 80009C54: beq .L_80009C60
Parsed instruction at 80009C58: li r3 0x0
Parsed instruction at 80009C5C: bl SelectThread
Parsed label: L_80009C60:
Parsed instruction at 80009C60: mr r3 r31
Parsed instruction at 80009C64: bl OSRestoreInterrupts
Parsed instruction at 80009C68: lwz r0 0x1c(r1)
Parsed instruction at 80009C6C: lwz r31 0x14(r1)
Parsed instruction at 80009C70: lwz r30 0x10(r1)
Parsed instruction at 80009C74: addi r1 r1 0x18
Parsed instruction at 80009C78: mtlr r0
Parsed instruction at 80009C7C: blr 
End of function: fn_80009B7C, 72 instructions
Parsed function: OSGetTime at 0x80009C80
Parsed instruction at 80009C80: mftb r3 269
Parsed instruction at 80009C84: mftb r4 268
Parsed instruction at 80009C88: mftb r5 269
Parsed instruction at 80009C8C: cmpw r3 r5
Parsed instruction at 80009C90: bne OSGetTime
Parsed instruction at 80009C94: blr 
End of function: OSGetTime, 6 instructions
Parsed function: OSGetTick at 0x80009C98
Parsed instruction at 80009C98: mftb r3 268
Parsed instruction at 80009C9C: blr 
End of function: OSGetTick, 2 instructions
Parsed function: __OSGetSystemTime at 0x80009CA0
Parsed instruction at 80009CA0: mflr r0
Parsed instruction at 80009CA4: stw r0 0x4(r1)
Parsed instruction at 80009CA8: stwu r1 -0x20(r1)
Parsed instruction at 80009CAC: stw r31 0x1c(r1)
Parsed instruction at 80009CB0: stw r30 0x18(r1)
Parsed instruction at 80009CB4: stw r29 0x14(r1)
Parsed instruction at 80009CB8: bl OSDisableInterrupts
Parsed instruction at 80009CBC: mr r31 r3
Parsed instruction at 80009CC0: bl OSGetTime
Parsed instruction at 80009CC4: lis r6 0x8000
Parsed instruction at 80009CC8: lwz r5 0x30dc(r6)
Parsed instruction at 80009CCC: lwz r0 0x30d8(r6)
Parsed instruction at 80009CD0: addc r29 r5 r4
Parsed instruction at 80009CD4: adde r30 r0 r3
Parsed instruction at 80009CD8: mr r3 r31
Parsed instruction at 80009CDC: bl OSRestoreInterrupts
Parsed instruction at 80009CE0: mr r4 r29
Parsed instruction at 80009CE4: mr r3 r30
Parsed instruction at 80009CE8: lwz r0 0x24(r1)
Parsed instruction at 80009CEC: lwz r31 0x1c(r1)
Parsed instruction at 80009CF0: lwz r30 0x18(r1)
Parsed instruction at 80009CF4: lwz r29 0x14(r1)
Parsed instruction at 80009CF8: addi r1 r1 0x20
Parsed instruction at 80009CFC: mtlr r0
Parsed instruction at 80009D00: blr 
End of function: __OSGetSystemTime, 25 instructions
Parsed function: __init_user at 0x80009D04
Parsed instruction at 80009D04: mflr r0
Parsed instruction at 80009D08: stw r0 0x4(r1)
Parsed instruction at 80009D0C: stwu r1 -0x8(r1)
Parsed instruction at 80009D10: bl __init_cpp
Parsed instruction at 80009D14: lwz r0 0xc(r1)
Parsed instruction at 80009D18: addi r1 r1 0x8
Parsed instruction at 80009D1C: mtlr r0
Parsed instruction at 80009D20: blr 
End of function: __init_user, 8 instructions
Parsed function: __init_cpp at 0x80009D24
Parsed instruction at 80009D24: mflr r0
Parsed instruction at 80009D28: stw r0 0x4(r1)
Parsed instruction at 80009D2C: stwu r1 -0x10(r1)
Parsed instruction at 80009D30: stw r31 0xc(r1)
Parsed instruction at 80009D34: lis r3 _ctors@ha
Parsed instruction at 80009D38: addi r0 r3 _ctors@l
Parsed instruction at 80009D3C: mr r31 r0
Parsed instruction at 80009D40: b .L_80009D44
Parsed label: L_80009D44:
Parsed instruction at 80009D44: b .L_80009D48
Parsed label: L_80009D48:
Parsed instruction at 80009D48: b .L_80009D58
Parsed label: L_80009D4C:
Parsed instruction at 80009D4C: mtlr r12
Parsed instruction at 80009D50: blrl 
Parsed instruction at 80009D54: addi r31 r31 0x4
Parsed label: L_80009D58:
Parsed instruction at 80009D58: lwz r12 0x0(r31)
Parsed instruction at 80009D5C: cmplwi r12 0x0
Parsed instruction at 80009D60: bne .L_80009D4C
Parsed instruction at 80009D64: lwz r0 0x14(r1)
Parsed instruction at 80009D68: lwz r31 0xc(r1)
Parsed instruction at 80009D6C: addi r1 r1 0x10
Parsed instruction at 80009D70: mtlr r0
Parsed instruction at 80009D74: blr 
End of function: __init_cpp, 25 instructions
Parsed function: _ExitProcess at 0x80009D78
Parsed instruction at 80009D78: mflr r0
Parsed instruction at 80009D7C: stw r0 0x4(r1)
Parsed instruction at 80009D80: stwu r1 -0x8(r1)
Parsed instruction at 80009D84: bl PPCHalt
Parsed instruction at 80009D88: lwz r0 0xc(r1)
Parsed instruction at 80009D8C: addi r1 r1 0x8
Parsed instruction at 80009D90: mtlr r0
Parsed instruction at 80009D94: blr 
End of function: _ExitProcess, 8 instructions
Parsed function: fn_80009D98 at 0x80009D98
Parsed instruction at 80009D98: mflr r0
Parsed instruction at 80009D9C: lis r5 Ecb_8001C600@ha
Parsed instruction at 80009DA0: stw r0 0x4(r1)
Parsed instruction at 80009DA4: cmpwi r3 0x1
Parsed instruction at 80009DA8: addi r5 r5 Ecb_8001C600@l
Parsed instruction at 80009DAC: stwu r1 -0x18(r1)
Parsed instruction at 80009DB0: stw r31 0x14(r1)
Parsed instruction at 80009DB4: addi r31 r4 0x0
Parsed instruction at 80009DB8: addi r4 r5 0x80
Parsed instruction at 80009DBC: beq .L_80009E18
Parsed instruction at 80009DC0: bge .L_80009DD0
Parsed instruction at 80009DC4: cmpwi r3 0x0
Parsed instruction at 80009DC8: bge .L_80009DDC
Parsed instruction at 80009DCC: b .L_80009E78
Parsed label: L_80009DD0:
Parsed instruction at 80009DD0: cmpwi r3 0x3
Parsed instruction at 80009DD4: bge .L_80009E78
Parsed instruction at 80009DD8: b .L_80009E48
Parsed label: L_80009DDC:
Parsed instruction at 80009DDC: lwz r0 0x0(r31)
Parsed instruction at 80009DE0: cmplwi r0 0x0
Parsed instruction at 80009DE4: bne .L_80009DF4
Parsed instruction at 80009DE8: lwz r0 0x0(r4)
Parsed instruction at 80009DEC: cmplwi r0 0x0
Parsed instruction at 80009DF0: beq .L_80009E00
Parsed label: L_80009DF4:
Parsed instruction at 80009DF4: lwz r0 0xc(r31)
Parsed instruction at 80009DF8: rlwinm. r0 r0 0 27 27
Parsed instruction at 80009DFC: beq .L_80009E0C
Parsed label: L_80009E00:
Parsed instruction at 80009E00: lis r3 0x41
Parsed instruction at 80009E04: bl __OSMaskInterrupts
Parsed instruction at 80009E08: b .L_80009E78
Parsed label: L_80009E0C:
Parsed instruction at 80009E0C: lis r3 0x41
Parsed instruction at 80009E10: bl __OSUnmaskInterrupts
Parsed instruction at 80009E14: b .L_80009E78
Parsed label: L_80009E18:
Parsed instruction at 80009E18: lwz r0 0x0(r31)
Parsed instruction at 80009E1C: cmplwi r0 0x0
Parsed instruction at 80009E20: beq .L_80009E30
Parsed instruction at 80009E24: lwz r0 0xc(r31)
Parsed instruction at 80009E28: rlwinm. r0 r0 0 27 27
Parsed instruction at 80009E2C: beq .L_80009E3C
Parsed label: L_80009E30:
Parsed instruction at 80009E30: lis r3 0x8
Parsed instruction at 80009E34: bl __OSMaskInterrupts
Parsed instruction at 80009E38: b .L_80009E78
Parsed label: L_80009E3C:
Parsed instruction at 80009E3C: lis r3 0x8
Parsed instruction at 80009E40: bl __OSUnmaskInterrupts
Parsed instruction at 80009E44: b .L_80009E78
Parsed label: L_80009E48:
Parsed instruction at 80009E48: li r3 0x19
Parsed instruction at 80009E4C: bl fn_800077C8
Parsed instruction at 80009E50: cmplwi r3 0x0
Parsed instruction at 80009E54: beq .L_80009E64
Parsed instruction at 80009E58: lwz r0 0xc(r31)
Parsed instruction at 80009E5C: rlwinm. r0 r0 0 27 27
Parsed instruction at 80009E60: beq .L_80009E70
Parsed label: L_80009E64:
Parsed instruction at 80009E64: li r3 0x40
Parsed instruction at 80009E68: bl __OSMaskInterrupts
Parsed instruction at 80009E6C: b .L_80009E78
Parsed label: L_80009E70:
Parsed instruction at 80009E70: li r3 0x40
Parsed instruction at 80009E74: bl __OSUnmaskInterrupts
Parsed label: L_80009E78:
Parsed instruction at 80009E78: lwz r0 0x1c(r1)
Parsed instruction at 80009E7C: lwz r31 0x14(r1)
Parsed instruction at 80009E80: addi r1 r1 0x18
Parsed instruction at 80009E84: mtlr r0
Parsed instruction at 80009E88: blr 
End of function: fn_80009D98, 73 instructions
Parsed function: EXIImm at 0x80009E8C
Parsed instruction at 80009E8C: mflr r0
Parsed instruction at 80009E90: stw r0 0x4(r1)
Parsed instruction at 80009E94: stwu r1 -0x58(r1)
Parsed instruction at 80009E98: stmw r19 0x24(r1)
Parsed instruction at 80009E9C: addi r28 r3 0x0
Parsed instruction at 80009EA0: lis r3 Ecb_8001C600@ha
Parsed instruction at 80009EA4: slwi r8 r28 6
Parsed instruction at 80009EA8: addi r0 r3 Ecb_8001C600@l
Parsed instruction at 80009EAC: addi r29 r4 0x0
Parsed instruction at 80009EB0: addi r30 r5 0x0
Parsed instruction at 80009EB4: addi r31 r6 0x0
Parsed instruction at 80009EB8: addi r19 r7 0x0
Parsed instruction at 80009EBC: add r27 r0 r8
Parsed instruction at 80009EC0: bl OSDisableInterrupts
Parsed instruction at 80009EC4: lwz r0 0xc(r27)
Parsed instruction at 80009EC8: addi r26 r3 0x0
Parsed instruction at 80009ECC: clrlwi. r0 r0 30
Parsed instruction at 80009ED0: bne .L_80009EE0
Parsed instruction at 80009ED4: lwz r0 0xc(r27)
Parsed instruction at 80009ED8: rlwinm. r0 r0 0 29 29
Parsed instruction at 80009EDC: bne .L_80009EF0
Parsed label: L_80009EE0:
Parsed instruction at 80009EE0: mr r3 r26
Parsed instruction at 80009EE4: bl OSRestoreInterrupts
Parsed instruction at 80009EE8: li r3 0x0
Parsed instruction at 80009EEC: b .L_8000A0D4
Parsed label: L_80009EF0:
Parsed instruction at 80009EF0: stw r19 0x4(r27)
Parsed instruction at 80009EF4: lwz r0 0x4(r27)
Parsed instruction at 80009EF8: cmplwi r0 0x0
Parsed instruction at 80009EFC: beq .L_80009F24
Parsed instruction at 80009F00: addi r3 r28 0x0
Parsed instruction at 80009F04: li r4 0x0
Parsed instruction at 80009F08: li r5 0x1
Parsed instruction at 80009F0C: li r6 0x0
Parsed instruction at 80009F10: bl fn_8000A47C
Parsed instruction at 80009F14: mulli r0 r28 0x3
Parsed instruction at 80009F18: lis r3 0x20
Parsed instruction at 80009F1C: srw r3 r3 r0
Parsed instruction at 80009F20: bl __OSUnmaskInterrupts
Parsed label: L_80009F24:
Parsed instruction at 80009F24: lwz r0 0xc(r27)
Parsed instruction at 80009F28: cmplwi r31 0x0
Parsed instruction at 80009F2C: ori r0 r0 0x2
Parsed instruction at 80009F30: stw r0 0xc(r27)
Parsed instruction at 80009F34: beq .L_8000A078
Parsed instruction at 80009F38: li r24 0x0
Parsed instruction at 80009F3C: cmpw r24 r30
Parsed instruction at 80009F40: li r25 0x0
Parsed instruction at 80009F44: bge .L_8000A064
Parsed instruction at 80009F48: cmpwi r30 0x8
Parsed instruction at 80009F4C: subi r3 r30 0x8
Parsed instruction at 80009F50: ble .L_8000A0CC
Parsed instruction at 80009F54: addi r0 r3 0x7
Parsed instruction at 80009F58: srwi r0 r0 3
Parsed instruction at 80009F5C: cmpwi r3 0x0
Parsed instruction at 80009F60: mtctr r0
Parsed instruction at 80009F64: addi r12 r29 0x0
Parsed instruction at 80009F68: ble .L_8000A0CC
Parsed label: L_80009F6C:
Parsed instruction at 80009F6C: subfic r3 r24 0x3
Parsed instruction at 80009F70: lbz r9 0x0(r12)
Parsed instruction at 80009F74: addi r0 r24 0x1
Parsed instruction at 80009F78: lbz r10 0x1(r12)
Parsed instruction at 80009F7C: slwi r7 r3 3
Parsed instruction at 80009F80: lbz r8 0x2(r12)
Parsed instruction at 80009F84: subfic r5 r0 0x3
Parsed instruction at 80009F88: lbz r6 0x3(r12)
Parsed instruction at 80009F8C: addi r3 r24 0x2
Parsed instruction at 80009F90: lbz r4 0x4(r12)
Parsed instruction at 80009F94: slw r11 r9 r7
Parsed instruction at 80009F98: lbz r0 0x5(r12)
Parsed instruction at 80009F9C: slwi r9 r5 3
Parsed instruction at 80009FA0: lbz r20 0x6(r12)
Parsed instruction at 80009FA4: subfic r3 r3 0x3
Parsed instruction at 80009FA8: lbz r22 0x7(r12)
Parsed instruction at 80009FAC: slwi r7 r3 3
Parsed instruction at 80009FB0: neg r5 r24
Parsed instruction at 80009FB4: addi r3 r24 0x4
Parsed instruction at 80009FB8: slwi r5 r5 3
Parsed instruction at 80009FBC: subfic r3 r3 0x3
Parsed instruction at 80009FC0: addi r19 r24 0x5
Parsed instruction at 80009FC4: slwi r3 r3 3
Parsed instruction at 80009FC8: subfic r19 r19 0x3
Parsed instruction at 80009FCC: addi r21 r24 0x6
Parsed instruction at 80009FD0: slwi r19 r19 3
Parsed instruction at 80009FD4: subfic r21 r21 0x3
Parsed instruction at 80009FD8: addi r23 r24 0x7
Parsed instruction at 80009FDC: slwi r21 r21 3
Parsed instruction at 80009FE0: subfic r23 r23 0x3
Parsed instruction at 80009FE4: slwi r23 r23 3
Parsed instruction at 80009FE8: or r25 r25 r11
Parsed instruction at 80009FEC: slw r9 r10 r9
Parsed instruction at 80009FF0: or r25 r25 r9
Parsed instruction at 80009FF4: slw r7 r8 r7
Parsed instruction at 80009FF8: or r25 r25 r7
Parsed instruction at 80009FFC: slw r5 r6 r5
Parsed instruction at 8000A000: or r25 r25 r5
Parsed instruction at 8000A004: slw r3 r4 r3
Parsed instruction at 8000A008: or r25 r25 r3
Parsed instruction at 8000A00C: slw r0 r0 r19
Parsed instruction at 8000A010: or r25 r25 r0
Parsed instruction at 8000A014: slw r0 r20 r21
Parsed instruction at 8000A018: or r25 r25 r0
Parsed instruction at 8000A01C: slw r0 r22 r23
Parsed instruction at 8000A020: or r25 r25 r0
Parsed instruction at 8000A024: addi r12 r12 0x8
Parsed instruction at 8000A028: addi r24 r24 0x8
Parsed instruction at 8000A02C: bdnz .L_80009F6C
Parsed instruction at 8000A030: b .L_8000A0CC
Parsed label: L_8000A034:
Parsed instruction at 8000A034: subf r0 r24 r30
Parsed instruction at 8000A038: cmpw r24 r30
Parsed instruction at 8000A03C: mtctr r0
Parsed instruction at 8000A040: bge .L_8000A064
Parsed label: L_8000A044:
Parsed instruction at 8000A044: subfic r0 r24 0x3
Parsed instruction at 8000A048: lbz r3 0x0(r4)
Parsed instruction at 8000A04C: slwi r0 r0 3
Parsed instruction at 8000A050: slw r0 r3 r0
Parsed instruction at 8000A054: or r25 r25 r0
Parsed instruction at 8000A058: addi r4 r4 0x1
Parsed instruction at 8000A05C: addi r24 r24 0x1
Parsed instruction at 8000A060: bdnz .L_8000A044
Parsed label: L_8000A064:
Parsed instruction at 8000A064: mulli r0 r28 0x14
Parsed instruction at 8000A068: lis r3 0xcc00
Parsed instruction at 8000A06C: addi r3 r3 0x6800
Parsed instruction at 8000A070: add r3 r3 r0
Parsed instruction at 8000A074: stw r25 0x10(r3)
Parsed label: L_8000A078:
Parsed instruction at 8000A078: cmplwi r31 0x1
Parsed instruction at 8000A07C: stw r29 0x14(r27)
Parsed instruction at 8000A080: beq .L_8000A08C
Parsed instruction at 8000A084: mr r3 r30
Parsed instruction at 8000A088: b .L_8000A090
Parsed label: L_8000A08C:
Parsed instruction at 8000A08C: li r3 0x0
Parsed label: L_8000A090:
Parsed instruction at 8000A090: mulli r0 r28 0x14
Parsed instruction at 8000A094: stw r3 0x10(r27)
Parsed instruction at 8000A098: slwi r5 r31 2
Parsed instruction at 8000A09C: subi r4 r30 0x1
Parsed instruction at 8000A0A0: lis r3 0xcc00
Parsed instruction at 8000A0A4: addi r3 r3 0x6800
Parsed instruction at 8000A0A8: ori r5 r5 0x1
Parsed instruction at 8000A0AC: slwi r4 r4 4
Parsed instruction at 8000A0B0: or r4 r5 r4
Parsed instruction at 8000A0B4: add r3 r3 r0
Parsed instruction at 8000A0B8: stw r4 0xc(r3)
Parsed instruction at 8000A0BC: mr r3 r26
Parsed instruction at 8000A0C0: bl OSRestoreInterrupts
Parsed instruction at 8000A0C4: li r3 0x1
Parsed instruction at 8000A0C8: b .L_8000A0D4
Parsed label: L_8000A0CC:
Parsed instruction at 8000A0CC: add r4 r29 r24
Parsed instruction at 8000A0D0: b .L_8000A034
Parsed label: L_8000A0D4:
Parsed instruction at 8000A0D4: lmw r19 0x24(r1)
Parsed instruction at 8000A0D8: lwz r0 0x5c(r1)
Parsed instruction at 8000A0DC: addi r1 r1 0x58
Parsed instruction at 8000A0E0: mtlr r0
Parsed instruction at 8000A0E4: blr 
End of function: EXIImm, 163 instructions
Parsed function: fn_8000A0E8 at 0x8000A0E8
Parsed instruction at 8000A0E8: mflr r0
Parsed instruction at 8000A0EC: stw r0 0x4(r1)
Parsed instruction at 8000A0F0: stwu r1 -0x30(r1)
Parsed instruction at 8000A0F4: stmw r27 0x1c(r1)
Parsed instruction at 8000A0F8: addi r27 r3 0x0
Parsed instruction at 8000A0FC: addi r28 r4 0x0
Parsed instruction at 8000A100: addi r29 r5 0x0
Parsed instruction at 8000A104: addi r30 r6 0x0
Parsed instruction at 8000A108: b .L_8000A168
Parsed label: L_8000A10C:
Parsed instruction at 8000A10C: cmpwi r29 0x4
Parsed instruction at 8000A110: bge .L_8000A11C
Parsed instruction at 8000A114: mr r31 r29
Parsed instruction at 8000A118: b .L_8000A120
Parsed label: L_8000A11C:
Parsed instruction at 8000A11C: li r31 0x4
Parsed label: L_8000A120:
Parsed instruction at 8000A120: addi r5 r31 0x0
Parsed instruction at 8000A124: addi r3 r27 0x0
Parsed instruction at 8000A128: addi r4 r28 0x0
Parsed instruction at 8000A12C: addi r6 r30 0x0
Parsed instruction at 8000A130: li r7 0x0
Parsed instruction at 8000A134: bl EXIImm
Parsed instruction at 8000A138: cmpwi r3 0x0
Parsed instruction at 8000A13C: bne .L_8000A148
Parsed instruction at 8000A140: li r3 0x0
Parsed instruction at 8000A144: b .L_8000A174
Parsed label: L_8000A148:
Parsed instruction at 8000A148: mr r3 r27
Parsed instruction at 8000A14C: bl EXISync
Parsed instruction at 8000A150: cmpwi r3 0x0
Parsed instruction at 8000A154: bne .L_8000A160
Parsed instruction at 8000A158: li r3 0x0
Parsed instruction at 8000A15C: b .L_8000A174
Parsed label: L_8000A160:
Parsed instruction at 8000A160: add r28 r28 r31
Parsed instruction at 8000A164: subf r29 r31 r29
Parsed label: L_8000A168:
Parsed instruction at 8000A168: cmpwi r29 0x0
Parsed instruction at 8000A16C: bne .L_8000A10C
Parsed instruction at 8000A170: li r3 0x1
Parsed label: L_8000A174:
Parsed instruction at 8000A174: lmw r27 0x1c(r1)
Parsed instruction at 8000A178: lwz r0 0x34(r1)
Parsed instruction at 8000A17C: addi r1 r1 0x30
Parsed instruction at 8000A180: mtlr r0
Parsed instruction at 8000A184: blr 
End of function: fn_8000A0E8, 47 instructions
Parsed function: EXIDma at 0x8000A188
Parsed instruction at 8000A188: mflr r0
Parsed instruction at 8000A18C: stw r0 0x4(r1)
Parsed instruction at 8000A190: stwu r1 -0x40(r1)
Parsed instruction at 8000A194: stmw r25 0x24(r1)
Parsed instruction at 8000A198: addi r27 r3 0x0
Parsed instruction at 8000A19C: lis r3 Ecb_8001C600@ha
Parsed instruction at 8000A1A0: slwi r8 r27 6
Parsed instruction at 8000A1A4: addi r0 r3 Ecb_8001C600@l
Parsed instruction at 8000A1A8: addi r28 r4 0x0
Parsed instruction at 8000A1AC: addi r29 r5 0x0
Parsed instruction at 8000A1B0: addi r30 r6 0x0
Parsed instruction at 8000A1B4: addi r25 r7 0x0
Parsed instruction at 8000A1B8: add r26 r0 r8
Parsed instruction at 8000A1BC: bl OSDisableInterrupts
Parsed instruction at 8000A1C0: lwz r0 0xc(r26)
Parsed instruction at 8000A1C4: addi r31 r3 0x0
Parsed instruction at 8000A1C8: clrlwi. r0 r0 30
Parsed instruction at 8000A1CC: bne .L_8000A1DC
Parsed instruction at 8000A1D0: lwz r0 0xc(r26)
Parsed instruction at 8000A1D4: rlwinm. r0 r0 0 29 29
Parsed instruction at 8000A1D8: bne .L_8000A1EC
Parsed label: L_8000A1DC:
Parsed instruction at 8000A1DC: mr r3 r31
Parsed instruction at 8000A1E0: bl OSRestoreInterrupts
Parsed instruction at 8000A1E4: li r3 0x0
Parsed instruction at 8000A1E8: b .L_8000A260
Parsed label: L_8000A1EC:
Parsed instruction at 8000A1EC: stw r25 0x4(r26)
Parsed instruction at 8000A1F0: lwz r0 0x4(r26)
Parsed instruction at 8000A1F4: cmplwi r0 0x0
Parsed instruction at 8000A1F8: beq .L_8000A220
Parsed instruction at 8000A1FC: addi r3 r27 0x0
Parsed instruction at 8000A200: li r4 0x0
Parsed instruction at 8000A204: li r5 0x1
Parsed instruction at 8000A208: li r6 0x0
Parsed instruction at 8000A20C: bl fn_8000A47C
Parsed instruction at 8000A210: mulli r0 r27 0x3
Parsed instruction at 8000A214: lis r3 0x20
Parsed instruction at 8000A218: srw r3 r3 r0
Parsed instruction at 8000A21C: bl __OSUnmaskInterrupts
Parsed label: L_8000A220:
Parsed instruction at 8000A220: lwz r0 0xc(r26)
Parsed instruction at 8000A224: lis r3 0xcc00
Parsed instruction at 8000A228: mulli r5 r27 0x14
Parsed instruction at 8000A22C: ori r4 r0 0x1
Parsed instruction at 8000A230: addi r0 r3 0x6800
Parsed instruction at 8000A234: stw r4 0xc(r26)
Parsed instruction at 8000A238: rlwinm r3 r28 0 6 26
Parsed instruction at 8000A23C: add r4 r0 r5
Parsed instruction at 8000A240: stw r3 0x4(r4)
Parsed instruction at 8000A244: slwi r0 r30 2
Parsed instruction at 8000A248: ori r0 r0 0x3
Parsed instruction at 8000A24C: stw r29 0x8(r4)
Parsed instruction at 8000A250: mr r3 r31
Parsed instruction at 8000A254: stw r0 0xc(r4)
Parsed instruction at 8000A258: bl OSRestoreInterrupts
Parsed instruction at 8000A25C: li r3 0x1
Parsed label: L_8000A260:
Parsed instruction at 8000A260: lmw r25 0x24(r1)
Parsed instruction at 8000A264: lwz r0 0x44(r1)
Parsed instruction at 8000A268: addi r1 r1 0x40
Parsed instruction at 8000A26C: mtlr r0
Parsed instruction at 8000A270: blr 
End of function: EXIDma, 63 instructions
Parsed function: EXISync at 0x8000A274
Parsed instruction at 8000A274: mflr r0
Parsed instruction at 8000A278: lis r5 Ecb_8001C600@ha
Parsed instruction at 8000A27C: stw r0 0x4(r1)
Parsed instruction at 8000A280: lis r4 0xcc00
Parsed instruction at 8000A284: addi r0 r5 Ecb_8001C600@l
Parsed instruction at 8000A288: stwu r1 -0x30(r1)
Parsed instruction at 8000A28C: stmw r27 0x1c(r1)
Parsed instruction at 8000A290: mulli r30 r3 0x14
Parsed instruction at 8000A294: addi r29 r4 0x6800
Parsed instruction at 8000A298: slwi r3 r3 6
Parsed instruction at 8000A29C: add r31 r0 r3
Parsed instruction at 8000A2A0: add r29 r29 r30
Parsed instruction at 8000A2A4: li r28 0x0
Parsed instruction at 8000A2A8: b .L_8000A458
Parsed label: L_8000A2AC:
Parsed instruction at 8000A2AC: lwz r0 0xc(r29)
Parsed instruction at 8000A2B0: clrlwi. r0 r0 31
Parsed instruction at 8000A2B4: bne .L_8000A458
Parsed instruction at 8000A2B8: bl OSDisableInterrupts
Parsed instruction at 8000A2BC: lwz r0 0xc(r31)
Parsed instruction at 8000A2C0: addi r27 r3 0x0
Parsed instruction at 8000A2C4: rlwinm. r0 r0 0 29 29
Parsed instruction at 8000A2C8: beq .L_8000A44C
Parsed instruction at 8000A2CC: lwz r0 0xc(r31)
Parsed instruction at 8000A2D0: clrlwi. r0 r0 30
Parsed instruction at 8000A2D4: beq .L_8000A408
Parsed instruction at 8000A2D8: lwz r0 0xc(r31)
Parsed instruction at 8000A2DC: rlwinm. r0 r0 0 30 30
Parsed instruction at 8000A2E0: beq .L_8000A3FC
Parsed instruction at 8000A2E4: lwz r4 0x10(r31)
Parsed instruction at 8000A2E8: cmpwi r4 0x0
Parsed instruction at 8000A2EC: beq .L_8000A3FC
Parsed instruction at 8000A2F0: lis r3 0xcc00
Parsed instruction at 8000A2F4: lwz r7 0x14(r31)
Parsed instruction at 8000A2F8: addi r0 r3 0x6800
Parsed instruction at 8000A2FC: add r3 r0 r30
Parsed instruction at 8000A300: lwz r6 0x10(r3)
Parsed instruction at 8000A304: li r5 0x0
Parsed instruction at 8000A308: ble .L_8000A3FC
Parsed instruction at 8000A30C: cmpwi r4 0x8
Parsed instruction at 8000A310: subi r3 r4 0x8
Parsed instruction at 8000A314: ble .L_8000A3D0
Parsed instruction at 8000A318: addi r0 r3 0x7
Parsed instruction at 8000A31C: srwi r0 r0 3
Parsed instruction at 8000A320: cmpwi r3 0x0
Parsed instruction at 8000A324: mtctr r0
Parsed instruction at 8000A328: ble .L_8000A3D0
Parsed label: L_8000A32C:
Parsed instruction at 8000A32C: subfic r0 r5 0x3
Parsed instruction at 8000A330: slwi r3 r0 3
Parsed instruction at 8000A334: addi r0 r5 0x1
Parsed instruction at 8000A338: srw r8 r6 r3
Parsed instruction at 8000A33C: subfic r0 r0 0x3
Parsed instruction at 8000A340: stb r8 0x0(r7)
Parsed instruction at 8000A344: slwi r3 r0 3
Parsed instruction at 8000A348: addi r0 r5 0x2
Parsed instruction at 8000A34C: srw r3 r6 r3
Parsed instruction at 8000A350: subfic r0 r0 0x3
Parsed instruction at 8000A354: stb r3 0x1(r7)
Parsed instruction at 8000A358: slwi r0 r0 3
Parsed instruction at 8000A35C: srw r0 r6 r0
Parsed instruction at 8000A360: neg r8 r5
Parsed instruction at 8000A364: stb r0 0x2(r7)
Parsed instruction at 8000A368: slwi r9 r8 3
Parsed instruction at 8000A36C: addi r8 r5 0x4
Parsed instruction at 8000A370: srw r12 r6 r9
Parsed instruction at 8000A374: subfic r8 r8 0x3
Parsed instruction at 8000A378: stb r12 0x3(r7)
Parsed instruction at 8000A37C: slwi r9 r8 3
Parsed instruction at 8000A380: addi r8 r5 0x5
Parsed instruction at 8000A384: srw r11 r6 r9
Parsed instruction at 8000A388: subfic r8 r8 0x3
Parsed instruction at 8000A38C: stb r11 0x4(r7)
Parsed instruction at 8000A390: slwi r9 r8 3
Parsed instruction at 8000A394: srw r10 r6 r9
Parsed instruction at 8000A398: addi r8 r5 0x6
Parsed instruction at 8000A39C: stb r10 0x5(r7)
Parsed instruction at 8000A3A0: subfic r9 r8 0x3
Parsed instruction at 8000A3A4: addi r8 r5 0x7
Parsed instruction at 8000A3A8: slwi r9 r9 3
Parsed instruction at 8000A3AC: srw r9 r6 r9
Parsed instruction at 8000A3B0: subfic r8 r8 0x3
Parsed instruction at 8000A3B4: stb r9 0x6(r7)
Parsed instruction at 8000A3B8: slwi r8 r8 3
Parsed instruction at 8000A3BC: srw r8 r6 r8
Parsed instruction at 8000A3C0: stb r8 0x7(r7)
Parsed instruction at 8000A3C4: addi r7 r7 0x8
Parsed instruction at 8000A3C8: addi r5 r5 0x8
Parsed instruction at 8000A3CC: bdnz .L_8000A32C
Parsed label: L_8000A3D0:
Parsed instruction at 8000A3D0: subf r0 r5 r4
Parsed instruction at 8000A3D4: cmpw r5 r4
Parsed instruction at 8000A3D8: mtctr r0
Parsed instruction at 8000A3DC: bge .L_8000A3FC
Parsed label: L_8000A3E0:
Parsed instruction at 8000A3E0: subfic r0 r5 0x3
Parsed instruction at 8000A3E4: slwi r0 r0 3
Parsed instruction at 8000A3E8: srw r0 r6 r0
Parsed instruction at 8000A3EC: stb r0 0x0(r7)
Parsed instruction at 8000A3F0: addi r7 r7 0x1
Parsed instruction at 8000A3F4: addi r5 r5 0x1
Parsed instruction at 8000A3F8: bdnz .L_8000A3E0
Parsed label: L_8000A3FC:
Parsed instruction at 8000A3FC: lwz r0 0xc(r31)
Parsed instruction at 8000A400: clrrwi r0 r0 2
Parsed instruction at 8000A404: stw r0 0xc(r31)
Parsed label: L_8000A408:
Parsed instruction at 8000A408: bl fn_80005F64
Parsed instruction at 8000A40C: cmplwi r3 0xff
Parsed instruction at 8000A410: bne .L_8000A448
Parsed instruction at 8000A414: lwz r0 0x10(r31)
Parsed instruction at 8000A418: cmpwi r0 0x4
Parsed instruction at 8000A41C: bne .L_8000A448
Parsed instruction at 8000A420: lwz r0 0x0(r29)
Parsed instruction at 8000A424: rlwinm. r0 r0 0 25 27
Parsed instruction at 8000A428: bne .L_8000A448
Parsed instruction at 8000A42C: lis r3 0xcc00
Parsed instruction at 8000A430: addi r0 r3 0x6800
Parsed instruction at 8000A434: add r3 r0 r30
Parsed instruction at 8000A438: lwz r3 0x10(r3)
Parsed instruction at 8000A43C: subis r0 r3 0x101
Parsed instruction at 8000A440: cmplwi r0 0x0
Parsed instruction at 8000A444: beq .L_8000A44C
Parsed label: L_8000A448:
Parsed instruction at 8000A448: li r28 0x1
Parsed label: L_8000A44C:
Parsed instruction at 8000A44C: mr r3 r27
Parsed instruction at 8000A450: bl OSRestoreInterrupts
Parsed instruction at 8000A454: b .L_8000A464
Parsed label: L_8000A458:
Parsed instruction at 8000A458: lwz r0 0xc(r31)
Parsed instruction at 8000A45C: rlwinm. r0 r0 0 29 29
Parsed instruction at 8000A460: bne .L_8000A2AC
Parsed label: L_8000A464:
Parsed instruction at 8000A464: mr r3 r28
Parsed instruction at 8000A468: lmw r27 0x1c(r1)
Parsed instruction at 8000A46C: lwz r0 0x34(r1)
Parsed instruction at 8000A470: addi r1 r1 0x30
Parsed instruction at 8000A474: mtlr r0
Parsed instruction at 8000A478: blr 
End of function: EXISync, 140 instructions
Parsed function: fn_8000A47C at 0x8000A47C
Parsed instruction at 8000A47C: mulli r0 r3 0x14
Parsed instruction at 8000A480: lis r3 0xcc00
Parsed instruction at 8000A484: addi r7 r3 0x6800
Parsed instruction at 8000A488: add r7 r7 r0
Parsed instruction at 8000A48C: lwz r0 0x0(r7)
Parsed instruction at 8000A490: mr r3 r0
Parsed instruction at 8000A494: andi. r0 r0 0x7f5
Parsed instruction at 8000A498: cmpwi r4 0x0
Parsed instruction at 8000A49C: beq .L_8000A4A4
Parsed instruction at 8000A4A0: ori r0 r0 0x2
Parsed label: L_8000A4A4:
Parsed instruction at 8000A4A4: cmpwi r5 0x0
Parsed instruction at 8000A4A8: beq .L_8000A4B0
Parsed instruction at 8000A4AC: ori r0 r0 0x8
Parsed label: L_8000A4B0:
Parsed instruction at 8000A4B0: cmpwi r6 0x0
Parsed instruction at 8000A4B4: beq .L_8000A4BC
Parsed instruction at 8000A4B8: ori r0 r0 0x800
Parsed label: L_8000A4BC:
Parsed instruction at 8000A4BC: stw r0 0x0(r7)
Parsed instruction at 8000A4C0: blr 
End of function: fn_8000A47C, 21 instructions
Parsed function: __EXIProbe at 0x8000A4C4
Parsed instruction at 8000A4C4: mflr r0
Parsed instruction at 8000A4C8: stw r0 0x4(r1)
Parsed instruction at 8000A4CC: stwu r1 -0x28(r1)
Parsed instruction at 8000A4D0: stmw r27 0x14(r1)
Parsed instruction at 8000A4D4: addi r28 r3 0x0
Parsed instruction at 8000A4D8: lis r3 Ecb_8001C600@ha
Parsed instruction at 8000A4DC: cmpwi r28 0x2
Parsed instruction at 8000A4E0: slwi r4 r28 6
Parsed instruction at 8000A4E4: addi r0 r3 Ecb_8001C600@l
Parsed instruction at 8000A4E8: add r31 r0 r4
Parsed instruction at 8000A4EC: bne .L_8000A4F8
Parsed instruction at 8000A4F0: li r3 0x1
Parsed instruction at 8000A4F4: b .L_8000A624
Parsed label: L_8000A4F8:
Parsed instruction at 8000A4F8: li r29 0x1
Parsed instruction at 8000A4FC: bl OSDisableInterrupts
Parsed instruction at 8000A500: mulli r5 r28 0x14
Parsed instruction at 8000A504: lwz r0 0xc(r31)
Parsed instruction at 8000A508: lis r4 0xcc00
Parsed instruction at 8000A50C: addi r6 r4 0x6800
Parsed instruction at 8000A510: add r6 r6 r5
Parsed instruction at 8000A514: rlwinm. r0 r0 0 28 28
Parsed instruction at 8000A518: lwz r7 0x0(r6)
Parsed instruction at 8000A51C: mr r30 r3
Parsed instruction at 8000A520: bne .L_8000A5EC
Parsed instruction at 8000A524: rlwinm. r0 r7 0 20 20
Parsed instruction at 8000A528: beq .L_8000A554
Parsed instruction at 8000A52C: lwz r5 0x0(r6)
Parsed instruction at 8000A530: lis r3 0x8000
Parsed instruction at 8000A534: li r4 0x0
Parsed instruction at 8000A538: andi. r5 r5 0x7f5
Parsed instruction at 8000A53C: slwi r0 r28 2
Parsed instruction at 8000A540: addi r3 r3 0x30c0
Parsed instruction at 8000A544: ori r5 r5 0x800
Parsed instruction at 8000A548: stw r5 0x0(r6)
Parsed instruction at 8000A54C: stw r4 0x20(r31)
Parsed instruction at 8000A550: stwx r4 r3 r0
Parsed label: L_8000A554:
Parsed instruction at 8000A554: rlwinm. r0 r7 0 19 19
Parsed instruction at 8000A558: beq .L_8000A5CC
Parsed instruction at 8000A55C: lis r31 0x8000
Parsed instruction at 8000A560: lwz r0 0xf8(r31)
Parsed instruction at 8000A564: lis r3 0x1062
Parsed instruction at 8000A568: addi r3 r3 0x4dd3
Parsed instruction at 8000A56C: srwi r0 r0 2
Parsed instruction at 8000A570: mulhwu r0 r3 r0
Parsed instruction at 8000A574: srwi r27 r0 6
Parsed instruction at 8000A578: bl OSGetTime
Parsed instruction at 8000A57C: addi r6 r27 0x0
Parsed instruction at 8000A580: li r5 0x0
Parsed instruction at 8000A584: bl fn_800116AC
Parsed instruction at 8000A588: li r5 0x0
Parsed instruction at 8000A58C: li r6 0x64
Parsed instruction at 8000A590: bl fn_800116AC
Parsed instruction at 8000A594: slwi r0 r28 2
Parsed instruction at 8000A598: addi r3 r31 0x30c0
Parsed instruction at 8000A59C: add r3 r3 r0
Parsed instruction at 8000A5A0: lwz r0 0x0(r3)
Parsed instruction at 8000A5A4: addi r4 r4 0x1
Parsed instruction at 8000A5A8: cmpwi r0 0x0
Parsed instruction at 8000A5AC: bne .L_8000A5B4
Parsed instruction at 8000A5B0: stw r4 0x0(r3)
Parsed label: L_8000A5B4:
Parsed instruction at 8000A5B4: lwz r0 0x0(r3)
Parsed instruction at 8000A5B8: subf r0 r0 r4
Parsed instruction at 8000A5BC: cmpwi r0 0x3
Parsed instruction at 8000A5C0: bge .L_8000A618
Parsed instruction at 8000A5C4: li r29 0x0
Parsed instruction at 8000A5C8: b .L_8000A618
Parsed label: L_8000A5CC:
Parsed instruction at 8000A5CC: li r4 0x0
Parsed instruction at 8000A5D0: lis r3 0x8000
Parsed instruction at 8000A5D4: stw r4 0x20(r31)
Parsed instruction at 8000A5D8: slwi r0 r28 2
Parsed instruction at 8000A5DC: addi r3 r3 0x30c0
Parsed instruction at 8000A5E0: stwx r4 r3 r0
Parsed instruction at 8000A5E4: li r29 0x0
Parsed instruction at 8000A5E8: b .L_8000A618
Parsed label: L_8000A5EC:
Parsed instruction at 8000A5EC: rlwinm. r0 r7 0 19 19
Parsed instruction at 8000A5F0: beq .L_8000A5FC
Parsed instruction at 8000A5F4: rlwinm. r0 r7 0 20 20
Parsed instruction at 8000A5F8: beq .L_8000A618
Parsed label: L_8000A5FC:
Parsed instruction at 8000A5FC: li r4 0x0
Parsed instruction at 8000A600: lis r3 0x8000
Parsed instruction at 8000A604: stw r4 0x20(r31)
Parsed instruction at 8000A608: slwi r0 r28 2
Parsed instruction at 8000A60C: addi r3 r3 0x30c0
Parsed instruction at 8000A610: stwx r4 r3 r0
Parsed instruction at 8000A614: li r29 0x0
Parsed label: L_8000A618:
Parsed instruction at 8000A618: mr r3 r30
Parsed instruction at 8000A61C: bl OSRestoreInterrupts
Parsed instruction at 8000A620: mr r3 r29
Parsed label: L_8000A624:
Parsed instruction at 8000A624: lmw r27 0x14(r1)
Parsed instruction at 8000A628: lwz r0 0x2c(r1)
Parsed instruction at 8000A62C: addi r1 r1 0x28
Parsed instruction at 8000A630: mtlr r0
Parsed instruction at 8000A634: blr 
End of function: __EXIProbe, 101 instructions
Parsed function: EXISelect at 0x8000A638
Parsed instruction at 8000A638: mflr r0
Parsed instruction at 8000A63C: stw r0 0x4(r1)
Parsed instruction at 8000A640: stwu r1 -0x30(r1)
Parsed instruction at 8000A644: stmw r27 0x1c(r1)
Parsed instruction at 8000A648: addi r27 r3 0x0
Parsed instruction at 8000A64C: lis r3 Ecb_8001C600@ha
Parsed instruction at 8000A650: slwi r6 r27 6
Parsed instruction at 8000A654: addi r0 r3 Ecb_8001C600@l
Parsed instruction at 8000A658: addi r28 r4 0x0
Parsed instruction at 8000A65C: addi r29 r5 0x0
Parsed instruction at 8000A660: add r31 r0 r6
Parsed instruction at 8000A664: bl OSDisableInterrupts
Parsed instruction at 8000A668: lwz r0 0xc(r31)
Parsed instruction at 8000A66C: addi r30 r3 0x0
Parsed instruction at 8000A670: rlwinm. r0 r0 0 29 29
Parsed instruction at 8000A674: bne .L_8000A6BC
Parsed instruction at 8000A678: cmpwi r27 0x2
Parsed instruction at 8000A67C: beq .L_8000A6CC
Parsed instruction at 8000A680: cmplwi r28 0x0
Parsed instruction at 8000A684: bne .L_8000A6A4
Parsed instruction at 8000A688: lwz r0 0xc(r31)
Parsed instruction at 8000A68C: rlwinm. r0 r0 0 28 28
Parsed instruction at 8000A690: bne .L_8000A6A4
Parsed instruction at 8000A694: mr r3 r27
Parsed instruction at 8000A698: bl __EXIProbe
Parsed instruction at 8000A69C: cmpwi r3 0x0
Parsed instruction at 8000A6A0: beq .L_8000A6BC
Parsed label: L_8000A6A4:
Parsed instruction at 8000A6A4: lwz r0 0xc(r31)
Parsed instruction at 8000A6A8: rlwinm. r0 r0 0 27 27
Parsed instruction at 8000A6AC: beq .L_8000A6BC
Parsed instruction at 8000A6B0: lwz r0 0x18(r31)
Parsed instruction at 8000A6B4: cmplw r0 r28
Parsed instruction at 8000A6B8: beq .L_8000A6CC
Parsed label: L_8000A6BC:
Parsed instruction at 8000A6BC: mr r3 r30
Parsed instruction at 8000A6C0: bl OSRestoreInterrupts
Parsed instruction at 8000A6C4: li r3 0x0
Parsed instruction at 8000A6C8: b .L_8000A750
Parsed label: L_8000A6CC:
Parsed instruction at 8000A6CC: lwz r4 0xc(r31)
Parsed instruction at 8000A6D0: lis r3 0xcc00
Parsed instruction at 8000A6D4: mulli r0 r27 0x14
Parsed instruction at 8000A6D8: ori r4 r4 0x4
Parsed instruction at 8000A6DC: addi r5 r3 0x6800
Parsed instruction at 8000A6E0: stw r4 0xc(r31)
Parsed instruction at 8000A6E4: add r5 r5 r0
Parsed instruction at 8000A6E8: lwz r4 0x0(r5)
Parsed instruction at 8000A6EC: li r0 0x1
Parsed instruction at 8000A6F0: slw r0 r0 r28
Parsed instruction at 8000A6F4: slwi r3 r0 7
Parsed instruction at 8000A6F8: slwi r0 r29 4
Parsed instruction at 8000A6FC: andi. r4 r4 0x405
Parsed instruction at 8000A700: or r0 r3 r0
Parsed instruction at 8000A704: or r4 r4 r0
Parsed instruction at 8000A708: stw r4 0x0(r5)
Parsed instruction at 8000A70C: lwz r0 0xc(r31)
Parsed instruction at 8000A710: rlwinm. r0 r0 0 28 28
Parsed instruction at 8000A714: beq .L_8000A744
Parsed instruction at 8000A718: cmpwi r27 0x1
Parsed instruction at 8000A71C: beq .L_8000A73C
Parsed instruction at 8000A720: bge .L_8000A744
Parsed instruction at 8000A724: cmpwi r27 0x0
Parsed instruction at 8000A728: bge .L_8000A730
Parsed instruction at 8000A72C: b .L_8000A744
Parsed label: L_8000A730:
Parsed instruction at 8000A730: lis r3 0x10
Parsed instruction at 8000A734: bl __OSMaskInterrupts
Parsed instruction at 8000A738: b .L_8000A744
Parsed label: L_8000A73C:
Parsed instruction at 8000A73C: lis r3 0x2
Parsed instruction at 8000A740: bl __OSMaskInterrupts
Parsed label: L_8000A744:
Parsed instruction at 8000A744: mr r3 r30
Parsed instruction at 8000A748: bl OSRestoreInterrupts
Parsed instruction at 8000A74C: li r3 0x1
Parsed label: L_8000A750:
Parsed instruction at 8000A750: lmw r27 0x1c(r1)
Parsed instruction at 8000A754: lwz r0 0x34(r1)
Parsed instruction at 8000A758: addi r1 r1 0x30
Parsed instruction at 8000A75C: mtlr r0
Parsed instruction at 8000A760: blr 
End of function: EXISelect, 82 instructions
Parsed function: EXIDeselect at 0x8000A764
Parsed instruction at 8000A764: mflr r0
Parsed instruction at 8000A768: stw r0 0x4(r1)
Parsed instruction at 8000A76C: stwu r1 -0x20(r1)
Parsed instruction at 8000A770: stw r31 0x1c(r1)
Parsed instruction at 8000A774: addi r31 r3 0x0
Parsed instruction at 8000A778: lis r3 Ecb_8001C600@ha
Parsed instruction at 8000A77C: stw r30 0x18(r1)
Parsed instruction at 8000A780: slwi r4 r31 6
Parsed instruction at 8000A784: addi r0 r3 Ecb_8001C600@l
Parsed instruction at 8000A788: stw r29 0x14(r1)
Parsed instruction at 8000A78C: add r30 r0 r4
Parsed instruction at 8000A790: stw r28 0x10(r1)
Parsed instruction at 8000A794: bl OSDisableInterrupts
Parsed instruction at 8000A798: lwz r0 0xc(r30)
Parsed instruction at 8000A79C: addi r28 r3 0x0
Parsed instruction at 8000A7A0: rlwinm. r0 r0 0 29 29
Parsed instruction at 8000A7A4: bne .L_8000A7B8
Parsed instruction at 8000A7A8: mr r3 r28
Parsed instruction at 8000A7AC: bl OSRestoreInterrupts
Parsed instruction at 8000A7B0: li r3 0x0
Parsed instruction at 8000A7B4: b .L_8000A854
Parsed label: L_8000A7B8:
Parsed instruction at 8000A7B8: lwz r4 0xc(r30)
Parsed instruction at 8000A7BC: lis r3 0xcc00
Parsed instruction at 8000A7C0: mulli r0 r31 0x14
Parsed instruction at 8000A7C4: rlwinm r4 r4 0 30 28
Parsed instruction at 8000A7C8: addi r3 r3 0x6800
Parsed instruction at 8000A7CC: stw r4 0xc(r30)
Parsed instruction at 8000A7D0: add r3 r3 r0
Parsed instruction at 8000A7D4: lwz r29 0x0(r3)
Parsed instruction at 8000A7D8: andi. r0 r29 0x405
Parsed instruction at 8000A7DC: stw r0 0x0(r3)
Parsed instruction at 8000A7E0: lwz r0 0xc(r30)
Parsed instruction at 8000A7E4: rlwinm. r0 r0 0 28 28
Parsed instruction at 8000A7E8: beq .L_8000A818
Parsed instruction at 8000A7EC: cmpwi r31 0x1
Parsed instruction at 8000A7F0: beq .L_8000A810
Parsed instruction at 8000A7F4: bge .L_8000A818
Parsed instruction at 8000A7F8: cmpwi r31 0x0
Parsed instruction at 8000A7FC: bge .L_8000A804
Parsed instruction at 8000A800: b .L_8000A818
Parsed label: L_8000A804:
Parsed instruction at 8000A804: lis r3 0x10
Parsed instruction at 8000A808: bl __OSUnmaskInterrupts
Parsed instruction at 8000A80C: b .L_8000A818
Parsed label: L_8000A810:
Parsed instruction at 8000A810: lis r3 0x2
Parsed instruction at 8000A814: bl __OSUnmaskInterrupts
Parsed label: L_8000A818:
Parsed instruction at 8000A818: mr r3 r28
Parsed instruction at 8000A81C: bl OSRestoreInterrupts
Parsed instruction at 8000A820: cmpwi r31 0x2
Parsed instruction at 8000A824: beq .L_8000A850
Parsed instruction at 8000A828: rlwinm. r0 r29 0 24 24
Parsed instruction at 8000A82C: beq .L_8000A850
Parsed instruction at 8000A830: mr r3 r31
Parsed instruction at 8000A834: bl __EXIProbe
Parsed instruction at 8000A838: cmpwi r3 0x0
Parsed instruction at 8000A83C: beq .L_8000A848
Parsed instruction at 8000A840: li r3 0x1
Parsed instruction at 8000A844: b .L_8000A854
Parsed label: L_8000A848:
Parsed instruction at 8000A848: li r3 0x0
Parsed instruction at 8000A84C: b .L_8000A854
Parsed label: L_8000A850:
Parsed instruction at 8000A850: li r3 0x1
Parsed label: L_8000A854:
Parsed instruction at 8000A854: lwz r0 0x24(r1)
Parsed instruction at 8000A858: lwz r31 0x1c(r1)
Parsed instruction at 8000A85C: lwz r30 0x18(r1)
Parsed instruction at 8000A860: lwz r29 0x14(r1)
Parsed instruction at 8000A864: lwz r28 0x10(r1)
Parsed instruction at 8000A868: addi r1 r1 0x20
Parsed instruction at 8000A86C: mtlr r0
Parsed instruction at 8000A870: blr 
End of function: EXIDeselect, 75 instructions
Parsed function: EXIIntrruptHandler at 0x8000A874
Parsed instruction at 8000A874: mflr r0
Parsed instruction at 8000A878: extsh r5 r3
Parsed instruction at 8000A87C: stw r0 0x4(r1)
Parsed instruction at 8000A880: lis r3 0x5555
Parsed instruction at 8000A884: subi r0 r5 0x9
Parsed instruction at 8000A888: addi r3 r3 0x5556
Parsed instruction at 8000A88C: stwu r1 -0x2f8(r1)
Parsed instruction at 8000A890: mulhw r3 r3 r0
Parsed instruction at 8000A894: stw r31 0x2f4(r1)
Parsed instruction at 8000A898: stw r30 0x2f0(r1)
Parsed instruction at 8000A89C: srwi r0 r3 31
Parsed instruction at 8000A8A0: stw r29 0x2ec(r1)
Parsed instruction at 8000A8A4: add r31 r3 r0
Parsed instruction at 8000A8A8: lis r3 0xcc00
Parsed instruction at 8000A8AC: addi r7 r3 0x6800
Parsed instruction at 8000A8B0: mulli r0 r31 0x14
Parsed instruction at 8000A8B4: add r7 r7 r0
Parsed instruction at 8000A8B8: lwz r6 0x0(r7)
Parsed instruction at 8000A8BC: lis r3 Ecb_8001C600@ha
Parsed instruction at 8000A8C0: slwi r5 r31 6
Parsed instruction at 8000A8C4: andi. r6 r6 0x7f5
Parsed instruction at 8000A8C8: addi r0 r3 Ecb_8001C600@l
Parsed instruction at 8000A8CC: add r3 r0 r5
Parsed instruction at 8000A8D0: ori r6 r6 0x2
Parsed instruction at 8000A8D4: stw r6 0x0(r7)
Parsed instruction at 8000A8D8: mr r29 r4
Parsed instruction at 8000A8DC: lwz r0 0x0(r3)
Parsed instruction at 8000A8E0: cmplwi r0 0x0
Parsed instruction at 8000A8E4: mr r30 r0
Parsed instruction at 8000A8E8: beq .L_8000A920
Parsed instruction at 8000A8EC: addi r3 r1 0x18
Parsed instruction at 8000A8F0: bl OSClearContext
Parsed instruction at 8000A8F4: addi r3 r1 0x18
Parsed instruction at 8000A8F8: bl OSSetCurrentContext
Parsed instruction at 8000A8FC: addi r12 r30 0x0
Parsed instruction at 8000A900: mtlr r12
Parsed instruction at 8000A904: addi r3 r31 0x0
Parsed instruction at 8000A908: addi r4 r29 0x0
Parsed instruction at 8000A90C: blrl 
Parsed instruction at 8000A910: addi r3 r1 0x18
Parsed instruction at 8000A914: bl OSClearContext
Parsed instruction at 8000A918: mr r3 r29
Parsed instruction at 8000A91C: bl OSSetCurrentContext
Parsed label: L_8000A920:
Parsed instruction at 8000A920: lwz r0 0x2fc(r1)
Parsed instruction at 8000A924: lwz r31 0x2f4(r1)
Parsed instruction at 8000A928: lwz r30 0x2f0(r1)
Parsed instruction at 8000A92C: lwz r29 0x2ec(r1)
Parsed instruction at 8000A930: addi r1 r1 0x2f8
Parsed instruction at 8000A934: mtlr r0
Parsed instruction at 8000A938: blr 
End of function: EXIIntrruptHandler, 51 instructions
Parsed function: TCIntrruptHandler at 0x8000A93C
Parsed instruction at 8000A93C: mflr r0
Parsed instruction at 8000A940: extsh r6 r3
Parsed instruction at 8000A944: stw r0 0x4(r1)
Parsed instruction at 8000A948: lis r3 0x5555
Parsed instruction at 8000A94C: subi r0 r6 0xa
Parsed instruction at 8000A950: stwu r1 -0x2f8(r1)
Parsed instruction at 8000A954: addi r3 r3 0x5556
Parsed instruction at 8000A958: mulhw r3 r3 r0
Parsed instruction at 8000A95C: stw r31 0x2f4(r1)
Parsed instruction at 8000A960: stw r30 0x2f0(r1)
Parsed instruction at 8000A964: stw r29 0x2ec(r1)
Parsed instruction at 8000A968: srwi r0 r3 31
Parsed instruction at 8000A96C: add r30 r3 r0
Parsed instruction at 8000A970: lis r3 Ecb_8001C600@ha
Parsed instruction at 8000A974: stw r28 0x2e8(r1)
Parsed instruction at 8000A978: lis r0 0x8000
Parsed instruction at 8000A97C: slwi r5 r30 6
Parsed instruction at 8000A980: addi r3 r3 Ecb_8001C600@l
Parsed instruction at 8000A984: add r31 r3 r5
Parsed instruction at 8000A988: addi r28 r4 0x0
Parsed instruction at 8000A98C: srw r3 r0 r6
Parsed instruction at 8000A990: bl __OSMaskInterrupts
Parsed instruction at 8000A994: mulli r6 r30 0x14
Parsed instruction at 8000A998: lis r3 0xcc00
Parsed instruction at 8000A99C: addi r4 r3 0x6800
Parsed instruction at 8000A9A0: add r4 r4 r6
Parsed instruction at 8000A9A4: lwz r0 0x0(r4)
Parsed instruction at 8000A9A8: andi. r0 r0 0x7f5
Parsed instruction at 8000A9AC: ori r0 r0 0x8
Parsed instruction at 8000A9B0: stw r0 0x0(r4)
Parsed instruction at 8000A9B4: lwz r0 0x4(r31)
Parsed instruction at 8000A9B8: cmplwi r0 0x0
Parsed instruction at 8000A9BC: mr r29 r0
Parsed instruction at 8000A9C0: beq .L_8000AB34
Parsed instruction at 8000A9C4: li r5 0x0
Parsed instruction at 8000A9C8: stw r5 0x4(r31)
Parsed instruction at 8000A9CC: lwz r0 0xc(r31)
Parsed instruction at 8000A9D0: clrlwi. r0 r0 30
Parsed instruction at 8000A9D4: beq .L_8000AB00
Parsed instruction at 8000A9D8: lwz r0 0xc(r31)
Parsed instruction at 8000A9DC: rlwinm. r0 r0 0 30 30
Parsed instruction at 8000A9E0: beq .L_8000AAF4
Parsed instruction at 8000A9E4: lwz r4 0x10(r31)
Parsed instruction at 8000A9E8: cmpwi r4 0x0
Parsed instruction at 8000A9EC: beq .L_8000AAF4
Parsed instruction at 8000A9F0: addi r0 r3 0x6800
Parsed instruction at 8000A9F4: lwz r7 0x14(r31)
Parsed instruction at 8000A9F8: add r3 r0 r6
Parsed instruction at 8000A9FC: lwz r6 0x10(r3)
Parsed instruction at 8000AA00: ble .L_8000AAF4
Parsed instruction at 8000AA04: cmpwi r4 0x8
Parsed instruction at 8000AA08: subi r3 r4 0x8
Parsed instruction at 8000AA0C: ble .L_8000AAC8
Parsed instruction at 8000AA10: addi r0 r3 0x7
Parsed instruction at 8000AA14: srwi r0 r0 3
Parsed instruction at 8000AA18: cmpwi r3 0x0
Parsed instruction at 8000AA1C: mtctr r0
Parsed instruction at 8000AA20: ble .L_8000AAC8
Parsed label: L_8000AA24:
Parsed instruction at 8000AA24: subfic r0 r5 0x3
Parsed instruction at 8000AA28: slwi r3 r0 3
Parsed instruction at 8000AA2C: addi r0 r5 0x1
Parsed instruction at 8000AA30: srw r8 r6 r3
Parsed instruction at 8000AA34: subfic r0 r0 0x3
Parsed instruction at 8000AA38: stb r8 0x0(r7)
Parsed instruction at 8000AA3C: slwi r3 r0 3
Parsed instruction at 8000AA40: addi r0 r5 0x2
Parsed instruction at 8000AA44: srw r3 r6 r3
Parsed instruction at 8000AA48: subfic r0 r0 0x3
Parsed instruction at 8000AA4C: stb r3 0x1(r7)
Parsed instruction at 8000AA50: slwi r0 r0 3
Parsed instruction at 8000AA54: srw r0 r6 r0
Parsed instruction at 8000AA58: neg r8 r5
Parsed instruction at 8000AA5C: stb r0 0x2(r7)
Parsed instruction at 8000AA60: slwi r9 r8 3
Parsed instruction at 8000AA64: addi r8 r5 0x4
Parsed instruction at 8000AA68: srw r12 r6 r9
Parsed instruction at 8000AA6C: subfic r8 r8 0x3
Parsed instruction at 8000AA70: stb r12 0x3(r7)
Parsed instruction at 8000AA74: slwi r9 r8 3
Parsed instruction at 8000AA78: addi r8 r5 0x5
Parsed instruction at 8000AA7C: srw r11 r6 r9
Parsed instruction at 8000AA80: subfic r8 r8 0x3
Parsed instruction at 8000AA84: stb r11 0x4(r7)
Parsed instruction at 8000AA88: slwi r9 r8 3
Parsed instruction at 8000AA8C: srw r10 r6 r9
Parsed instruction at 8000AA90: addi r8 r5 0x6
Parsed instruction at 8000AA94: stb r10 0x5(r7)
Parsed instruction at 8000AA98: subfic r9 r8 0x3
Parsed instruction at 8000AA9C: addi r8 r5 0x7
Parsed instruction at 8000AAA0: slwi r9 r9 3
Parsed instruction at 8000AAA4: srw r9 r6 r9
Parsed instruction at 8000AAA8: subfic r8 r8 0x3
Parsed instruction at 8000AAAC: stb r9 0x6(r7)
Parsed instruction at 8000AAB0: slwi r8 r8 3
Parsed instruction at 8000AAB4: srw r8 r6 r8
Parsed instruction at 8000AAB8: stb r8 0x7(r7)
Parsed instruction at 8000AABC: addi r7 r7 0x8
Parsed instruction at 8000AAC0: addi r5 r5 0x8
Parsed instruction at 8000AAC4: bdnz .L_8000AA24
Parsed label: L_8000AAC8:
Parsed instruction at 8000AAC8: subf r0 r5 r4
Parsed instruction at 8000AACC: cmpw r5 r4
Parsed instruction at 8000AAD0: mtctr r0
Parsed instruction at 8000AAD4: bge .L_8000AAF4
Parsed label: L_8000AAD8:
Parsed instruction at 8000AAD8: subfic r0 r5 0x3
Parsed instruction at 8000AADC: slwi r0 r0 3
Parsed instruction at 8000AAE0: srw r0 r6 r0
Parsed instruction at 8000AAE4: stb r0 0x0(r7)
Parsed instruction at 8000AAE8: addi r7 r7 0x1
Parsed instruction at 8000AAEC: addi r5 r5 0x1
Parsed instruction at 8000AAF0: bdnz .L_8000AAD8
Parsed label: L_8000AAF4:
Parsed instruction at 8000AAF4: lwz r0 0xc(r31)
Parsed instruction at 8000AAF8: clrrwi r0 r0 2
Parsed instruction at 8000AAFC: stw r0 0xc(r31)
Parsed label: L_8000AB00:
Parsed instruction at 8000AB00: addi r3 r1 0x20
Parsed instruction at 8000AB04: bl OSClearContext
Parsed instruction at 8000AB08: addi r3 r1 0x20
Parsed instruction at 8000AB0C: bl OSSetCurrentContext
Parsed instruction at 8000AB10: addi r12 r29 0x0
Parsed instruction at 8000AB14: mtlr r12
Parsed instruction at 8000AB18: addi r3 r30 0x0
Parsed instruction at 8000AB1C: addi r4 r28 0x0
Parsed instruction at 8000AB20: blrl 
Parsed instruction at 8000AB24: addi r3 r1 0x20
Parsed instruction at 8000AB28: bl OSClearContext
Parsed instruction at 8000AB2C: mr r3 r28
Parsed instruction at 8000AB30: bl OSSetCurrentContext
Parsed label: L_8000AB34:
Parsed instruction at 8000AB34: lwz r0 0x2fc(r1)
Parsed instruction at 8000AB38: lwz r31 0x2f4(r1)
Parsed instruction at 8000AB3C: lwz r30 0x2f0(r1)
Parsed instruction at 8000AB40: lwz r29 0x2ec(r1)
Parsed instruction at 8000AB44: lwz r28 0x2e8(r1)
Parsed instruction at 8000AB48: addi r1 r1 0x2f8
Parsed instruction at 8000AB4C: mtlr r0
Parsed instruction at 8000AB50: blr 
End of function: TCIntrruptHandler, 140 instructions
Parsed function: EXTIntrruptHandler at 0x8000AB54
Parsed instruction at 8000AB54: mflr r0
Parsed instruction at 8000AB58: extsh r5 r3
Parsed instruction at 8000AB5C: stw r0 0x4(r1)
Parsed instruction at 8000AB60: lis r3 0x5555
Parsed instruction at 8000AB64: subi r0 r5 0xb
Parsed instruction at 8000AB68: addi r3 r3 0x5556
Parsed instruction at 8000AB6C: stwu r1 -0x2f0(r1)
Parsed instruction at 8000AB70: mulhw r3 r3 r0
Parsed instruction at 8000AB74: stmw r27 0x2dc(r1)
Parsed instruction at 8000AB78: srwi r0 r3 31
Parsed instruction at 8000AB7C: add r30 r3 r0
Parsed instruction at 8000AB80: mulli r0 r30 0x3
Parsed instruction at 8000AB84: lis r3 0x70
Parsed instruction at 8000AB88: addi r27 r4 0x0
Parsed instruction at 8000AB8C: srw r3 r3 r0
Parsed instruction at 8000AB90: bl __OSMaskInterrupts
Parsed instruction at 8000AB94: mulli r0 r30 0x14
Parsed instruction at 8000AB98: lis r4 0xcc00
Parsed instruction at 8000AB9C: lis r3 Ecb_8001C600@ha
Parsed instruction at 8000ABA0: addi r4 r4 0x6800
Parsed instruction at 8000ABA4: li r31 0x0
Parsed instruction at 8000ABA8: stwx r31 r4 r0
Parsed instruction at 8000ABAC: slwi r4 r30 6
Parsed instruction at 8000ABB0: addi r0 r3 Ecb_8001C600@l
Parsed instruction at 8000ABB4: add r29 r0 r4
Parsed instruction at 8000ABB8: lwz r28 0x8(r29)
Parsed instruction at 8000ABBC: lwz r0 0xc(r29)
Parsed instruction at 8000ABC0: cmplwi r28 0x0
Parsed instruction at 8000ABC4: rlwinm r0 r0 0 29 27
Parsed instruction at 8000ABC8: stw r0 0xc(r29)
Parsed instruction at 8000ABCC: beq .L_8000AC08
Parsed instruction at 8000ABD0: addi r3 r1 0x10
Parsed instruction at 8000ABD4: bl OSClearContext
Parsed instruction at 8000ABD8: addi r3 r1 0x10
Parsed instruction at 8000ABDC: bl OSSetCurrentContext
Parsed instruction at 8000ABE0: mr r12 r28
Parsed instruction at 8000ABE4: stw r31 0x8(r29)
Parsed instruction at 8000ABE8: mtlr r12
Parsed instruction at 8000ABEC: addi r3 r30 0x0
Parsed instruction at 8000ABF0: addi r4 r27 0x0
Parsed instruction at 8000ABF4: blrl 
Parsed instruction at 8000ABF8: addi r3 r1 0x10
Parsed instruction at 8000ABFC: bl OSClearContext
Parsed instruction at 8000AC00: mr r3 r27
Parsed instruction at 8000AC04: bl OSSetCurrentContext
Parsed label: L_8000AC08:
Parsed instruction at 8000AC08: lmw r27 0x2dc(r1)
Parsed instruction at 8000AC0C: lwz r0 0x2f4(r1)
Parsed instruction at 8000AC10: addi r1 r1 0x2f0
Parsed instruction at 8000AC14: mtlr r0
Parsed instruction at 8000AC18: blr 
End of function: EXTIntrruptHandler, 51 instructions
Parsed function: EXIInit at 0x8000AC1C
Parsed instruction at 8000AC1C: mflr r0
Parsed instruction at 8000AC20: lis r3 0x80
Parsed instruction at 8000AC24: stw r0 0x4(r1)
Parsed instruction at 8000AC28: addi r3 r3 -0x8000
Parsed instruction at 8000AC2C: stwu r1 -0x18(r1)
Parsed instruction at 8000AC30: stw r31 0x14(r1)
Parsed instruction at 8000AC34: stw r30 0x10(r1)
Parsed instruction at 8000AC38: stw r29 0xc(r1)
Parsed instruction at 8000AC3C: stw r28 0x8(r1)
Parsed instruction at 8000AC40: bl __OSMaskInterrupts
Parsed instruction at 8000AC44: lis r5 0xcc00
Parsed instruction at 8000AC48: li r31 0x0
Parsed instruction at 8000AC4C: stw r31 0x6800(r5)
Parsed instruction at 8000AC50: li r0 0x2000
Parsed instruction at 8000AC54: lis r3 EXIIntrruptHandler@ha
Parsed instruction at 8000AC58: stw r31 0x6814(r5)
Parsed instruction at 8000AC5C: addi r28 r3 EXIIntrruptHandler@l
Parsed instruction at 8000AC60: addi r4 r28 0x0
Parsed instruction at 8000AC64: stw r31 0x6828(r5)
Parsed instruction at 8000AC68: li r3 0x9
Parsed instruction at 8000AC6C: stw r0 0x6800(r5)
Parsed instruction at 8000AC70: bl __OSSetInterruptHandler
Parsed instruction at 8000AC74: lis r3 TCIntrruptHandler@ha
Parsed instruction at 8000AC78: addi r29 r3 TCIntrruptHandler@l
Parsed instruction at 8000AC7C: addi r4 r29 0x0
Parsed instruction at 8000AC80: li r3 0xa
Parsed instruction at 8000AC84: bl __OSSetInterruptHandler
Parsed instruction at 8000AC88: lis r3 EXTIntrruptHandler@ha
Parsed instruction at 8000AC8C: addi r30 r3 EXTIntrruptHandler@l
Parsed instruction at 8000AC90: addi r4 r30 0x0
Parsed instruction at 8000AC94: li r3 0xb
Parsed instruction at 8000AC98: bl __OSSetInterruptHandler
Parsed instruction at 8000AC9C: addi r4 r28 0x0
Parsed instruction at 8000ACA0: li r3 0xc
Parsed instruction at 8000ACA4: bl __OSSetInterruptHandler
Parsed instruction at 8000ACA8: addi r4 r29 0x0
Parsed instruction at 8000ACAC: li r3 0xd
Parsed instruction at 8000ACB0: bl __OSSetInterruptHandler
Parsed instruction at 8000ACB4: addi r4 r30 0x0
Parsed instruction at 8000ACB8: li r3 0xe
Parsed instruction at 8000ACBC: bl __OSSetInterruptHandler
Parsed instruction at 8000ACC0: addi r4 r28 0x0
Parsed instruction at 8000ACC4: li r3 0xf
Parsed instruction at 8000ACC8: bl __OSSetInterruptHandler
Parsed instruction at 8000ACCC: addi r4 r29 0x0
Parsed instruction at 8000ACD0: li r3 0x10
Parsed instruction at 8000ACD4: bl __OSSetInterruptHandler
Parsed instruction at 8000ACD8: bl OSGetConsoleType
Parsed instruction at 8000ACDC: rlwinm. r0 r3 0 3 3
Parsed instruction at 8000ACE0: beq .L_8000AD10
Parsed instruction at 8000ACE4: lis r5 0x8000
Parsed instruction at 8000ACE8: stw r31 0x30c4(r5)
Parsed instruction at 8000ACEC: lis r3 Ecb_8001C600@ha
Parsed instruction at 8000ACF0: addi r4 r3 Ecb_8001C600@l
Parsed instruction at 8000ACF4: stw r31 0x30c0(r5)
Parsed instruction at 8000ACF8: li r3 0x0
Parsed instruction at 8000ACFC: stw r31 0x60(r4)
Parsed instruction at 8000AD00: stw r31 0x20(r4)
Parsed instruction at 8000AD04: bl __EXIProbe
Parsed instruction at 8000AD08: li r3 0x1
Parsed instruction at 8000AD0C: bl __EXIProbe
Parsed label: L_8000AD10:
Parsed instruction at 8000AD10: lwz r0 0x1c(r1)
Parsed instruction at 8000AD14: lwz r31 0x14(r1)
Parsed instruction at 8000AD18: lwz r30 0x10(r1)
Parsed instruction at 8000AD1C: lwz r29 0xc(r1)
Parsed instruction at 8000AD20: lwz r28 0x8(r1)
Parsed instruction at 8000AD24: addi r1 r1 0x18
Parsed instruction at 8000AD28: mtlr r0
Parsed instruction at 8000AD2C: blr 
End of function: EXIInit, 70 instructions
Parsed function: EXILock at 0x8000AD30
Parsed instruction at 8000AD30: mflr r0
Parsed instruction at 8000AD34: stw r0 0x4(r1)
Parsed instruction at 8000AD38: stwu r1 -0x30(r1)
Parsed instruction at 8000AD3C: stmw r27 0x1c(r1)
Parsed instruction at 8000AD40: addi r27 r3 0x0
Parsed instruction at 8000AD44: lis r3 Ecb_8001C600@ha
Parsed instruction at 8000AD48: slwi r6 r27 6
Parsed instruction at 8000AD4C: addi r0 r3 Ecb_8001C600@l
Parsed instruction at 8000AD50: add r31 r0 r6
Parsed instruction at 8000AD54: addi r28 r4 0x0
Parsed instruction at 8000AD58: addi r29 r5 0x0
Parsed instruction at 8000AD5C: bl OSDisableInterrupts
Parsed instruction at 8000AD60: lwz r0 0xc(r31)
Parsed instruction at 8000AD64: addi r30 r3 0x0
Parsed instruction at 8000AD68: rlwinm. r0 r0 0 27 27
Parsed instruction at 8000AD6C: beq .L_8000ADE8
Parsed instruction at 8000AD70: cmplwi r29 0x0
Parsed instruction at 8000AD74: beq .L_8000ADD8
Parsed instruction at 8000AD78: lwz r4 0x24(r31)
Parsed instruction at 8000AD7C: addi r3 r31 0x0
Parsed instruction at 8000AD80: cmpwi r4 0x0
Parsed instruction at 8000AD84: mtctr r4
Parsed instruction at 8000AD88: ble .L_8000ADB0
Parsed label: L_8000AD8C:
Parsed instruction at 8000AD8C: lwz r0 0x28(r3)
Parsed instruction at 8000AD90: cmplw r0 r28
Parsed instruction at 8000AD94: bne .L_8000ADA8
Parsed instruction at 8000AD98: mr r3 r30
Parsed instruction at 8000AD9C: bl OSRestoreInterrupts
Parsed instruction at 8000ADA0: li r3 0x0
Parsed instruction at 8000ADA4: b .L_8000AE10
Parsed label: L_8000ADA8:
Parsed instruction at 8000ADA8: addi r3 r3 0x8
Parsed instruction at 8000ADAC: bdnz .L_8000AD8C
Parsed label: L_8000ADB0:
Parsed instruction at 8000ADB0: slwi r0 r4 3
Parsed instruction at 8000ADB4: add r3 r31 r0
Parsed instruction at 8000ADB8: stw r29 0x2c(r3)
Parsed instruction at 8000ADBC: lwz r0 0x24(r31)
Parsed instruction at 8000ADC0: slwi r0 r0 3
Parsed instruction at 8000ADC4: add r3 r31 r0
Parsed instruction at 8000ADC8: stw r28 0x28(r3)
Parsed instruction at 8000ADCC: lwz r3 0x24(r31)
Parsed instruction at 8000ADD0: addi r0 r3 0x1
Parsed instruction at 8000ADD4: stw r0 0x24(r31)
Parsed label: L_8000ADD8:
Parsed instruction at 8000ADD8: mr r3 r30
Parsed instruction at 8000ADDC: bl OSRestoreInterrupts
Parsed instruction at 8000ADE0: li r3 0x0
Parsed instruction at 8000ADE4: b .L_8000AE10
Parsed label: L_8000ADE8:
Parsed instruction at 8000ADE8: lwz r0 0xc(r31)
Parsed instruction at 8000ADEC: addi r3 r27 0x0
Parsed instruction at 8000ADF0: addi r4 r31 0x0
Parsed instruction at 8000ADF4: ori r0 r0 0x10
Parsed instruction at 8000ADF8: stw r0 0xc(r31)
Parsed instruction at 8000ADFC: stw r28 0x18(r31)
Parsed instruction at 8000AE00: bl fn_80009D98
Parsed instruction at 8000AE04: mr r3 r30
Parsed instruction at 8000AE08: bl OSRestoreInterrupts
Parsed instruction at 8000AE0C: li r3 0x1
Parsed label: L_8000AE10:
Parsed instruction at 8000AE10: lmw r27 0x1c(r1)
Parsed instruction at 8000AE14: lwz r0 0x34(r1)
Parsed instruction at 8000AE18: addi r1 r1 0x30
Parsed instruction at 8000AE1C: mtlr r0
Parsed instruction at 8000AE20: blr 
End of function: EXILock, 67 instructions
Parsed function: EXIUnlock at 0x8000AE24
Parsed instruction at 8000AE24: mflr r0
Parsed instruction at 8000AE28: stw r0 0x4(r1)
Parsed instruction at 8000AE2C: stwu r1 -0x20(r1)
Parsed instruction at 8000AE30: stw r31 0x1c(r1)
Parsed instruction at 8000AE34: stw r30 0x18(r1)
Parsed instruction at 8000AE38: stw r29 0x14(r1)
Parsed instruction at 8000AE3C: stw r28 0x10(r1)
Parsed instruction at 8000AE40: addi r28 r3 0x0
Parsed instruction at 8000AE44: lis r3 Ecb_8001C600@ha
Parsed instruction at 8000AE48: slwi r4 r28 6
Parsed instruction at 8000AE4C: addi r0 r3 Ecb_8001C600@l
Parsed instruction at 8000AE50: add r31 r0 r4
Parsed instruction at 8000AE54: bl OSDisableInterrupts
Parsed instruction at 8000AE58: lwz r0 0xc(r31)
Parsed instruction at 8000AE5C: addi r30 r3 0x0
Parsed instruction at 8000AE60: rlwinm. r0 r0 0 27 27
Parsed instruction at 8000AE64: bne .L_8000AE78
Parsed instruction at 8000AE68: mr r3 r30
Parsed instruction at 8000AE6C: bl OSRestoreInterrupts
Parsed instruction at 8000AE70: li r3 0x0
Parsed instruction at 8000AE74: b .L_8000AEE0
Parsed label: L_8000AE78:
Parsed instruction at 8000AE78: lwz r0 0xc(r31)
Parsed instruction at 8000AE7C: addi r3 r28 0x0
Parsed instruction at 8000AE80: addi r4 r31 0x0
Parsed instruction at 8000AE84: rlwinm r0 r0 0 28 26
Parsed instruction at 8000AE88: stw r0 0xc(r31)
Parsed instruction at 8000AE8C: bl fn_80009D98
Parsed instruction at 8000AE90: lwz r3 0x24(r31)
Parsed instruction at 8000AE94: cmpwi r3 0x0
Parsed instruction at 8000AE98: ble .L_8000AED4
Parsed instruction at 8000AE9C: subic. r0 r3 0x1
Parsed instruction at 8000AEA0: lwz r29 0x2c(r31)
Parsed instruction at 8000AEA4: stw r0 0x24(r31)
Parsed instruction at 8000AEA8: ble .L_8000AEC0
Parsed instruction at 8000AEAC: lwz r0 0x24(r31)
Parsed instruction at 8000AEB0: addi r3 r31 0x28
Parsed instruction at 8000AEB4: addi r4 r31 0x30
Parsed instruction at 8000AEB8: slwi r5 r0 3
Parsed instruction at 8000AEBC: bl fn_8001225C
Parsed label: L_8000AEC0:
Parsed instruction at 8000AEC0: addi r12 r29 0x0
Parsed instruction at 8000AEC4: mtlr r12
Parsed instruction at 8000AEC8: addi r3 r28 0x0
Parsed instruction at 8000AECC: li r4 0x0
Parsed instruction at 8000AED0: blrl 
Parsed label: L_8000AED4:
Parsed instruction at 8000AED4: mr r3 r30
Parsed instruction at 8000AED8: bl OSRestoreInterrupts
Parsed instruction at 8000AEDC: li r3 0x1
Parsed label: L_8000AEE0:
Parsed instruction at 8000AEE0: lwz r0 0x24(r1)
Parsed instruction at 8000AEE4: lwz r31 0x1c(r1)
Parsed instruction at 8000AEE8: lwz r30 0x18(r1)
Parsed instruction at 8000AEEC: lwz r29 0x14(r1)
Parsed instruction at 8000AEF0: lwz r28 0x10(r1)
Parsed instruction at 8000AEF4: addi r1 r1 0x20
Parsed instruction at 8000AEF8: mtlr r0
Parsed instruction at 8000AEFC: blr 
End of function: EXIUnlock, 59 instructions
Parsed function: fn_8000AF00 at 0x8000AF00
Parsed instruction at 8000AF00: mflr r0
Parsed instruction at 8000AF04: stw r0 0x4(r1)
Parsed instruction at 8000AF08: stwu r1 -0x8(r1)
Parsed instruction at 8000AF0C: lwz r3 lbl_8001EEFC@sda21(r0)
Parsed instruction at 8000AF10: addis r0 r3 0x5a01
Parsed instruction at 8000AF14: cmplwi r0 0x5a
Parsed instruction at 8000AF18: bne .L_8000AF24
Parsed instruction at 8000AF1C: li r3 0x0
Parsed instruction at 8000AF20: b .L_8000AF60
Parsed label: L_8000AF24:
Parsed instruction at 8000AF24: bl OSGetConsoleType
Parsed instruction at 8000AF28: rlwinm. r0 r3 0 3 3
Parsed instruction at 8000AF2C: bne .L_8000AF40
Parsed instruction at 8000AF30: li r0 0x0
Parsed instruction at 8000AF34: stw r0 lbl_8001EEF8@sda21(r0)
Parsed instruction at 8000AF38: li r3 0x2
Parsed instruction at 8000AF3C: b .L_8000AF60
Parsed label: L_8000AF40:
Parsed instruction at 8000AF40: lis r3 0xa5ff
Parsed instruction at 8000AF44: addi r0 r3 0x5a
Parsed instruction at 8000AF48: li r3 0x0
Parsed instruction at 8000AF4C: stw r0 lbl_8001EEF8@sda21(r0)
Parsed instruction at 8000AF50: li r0 0x1
Parsed instruction at 8000AF54: stw r3 lbl_8001EEF0@sda21(r0)
Parsed instruction at 8000AF58: li r3 0x0
Parsed instruction at 8000AF5C: stw r0 lbl_8001EEF4@sda21(r0)
Parsed label: L_8000AF60:
Parsed instruction at 8000AF60: lwz r0 0xc(r1)
Parsed instruction at 8000AF64: addi r1 r1 0x8
Parsed instruction at 8000AF68: mtlr r0
Parsed instruction at 8000AF6C: blr 
End of function: fn_8000AF00, 31 instructions
Parsed function: fn_8000AF70 at 0x8000AF70
Parsed instruction at 8000AF70: li r3 0x4
Parsed instruction at 8000AF74: blr 
End of function: fn_8000AF70, 2 instructions
Parsed function: fn_8000AF78 at 0x8000AF78
Parsed instruction at 8000AF78: mflr r0
Parsed instruction at 8000AF7C: stw r0 0x4(r1)
Parsed instruction at 8000AF80: stwu r1 -0x30(r1)
Parsed instruction at 8000AF84: stmw r26 0x18(r1)
Parsed instruction at 8000AF88: addi r30 r3 0x0
Parsed instruction at 8000AF8C: addi r31 r4 0x0
Parsed instruction at 8000AF90: lwz r5 lbl_8001EEF8@sda21(r0)
Parsed instruction at 8000AF94: addis r0 r5 0x5a01
Parsed instruction at 8000AF98: cmplwi r0 0x5a
Parsed instruction at 8000AF9C: beq .L_8000AFA8
Parsed instruction at 8000AFA0: li r3 0x2
Parsed instruction at 8000AFA4: b .L_8000B164
Parsed label: L_8000AFA8:
Parsed instruction at 8000AFA8: lwz r3 lbl_8001EEF0@sda21(r0)
Parsed instruction at 8000AFAC: li r5 0x0
Parsed instruction at 8000AFB0: lwz r4 lbl_8001EEF4@sda21(r0)
Parsed instruction at 8000AFB4: bl EXILock
Parsed instruction at 8000AFB8: cmpwi r3 0x0
Parsed instruction at 8000AFBC: bne .L_8000AFC8
Parsed instruction at 8000AFC0: li r3 0x0
Parsed instruction at 8000AFC4: b .L_8000B164
Parsed label: L_8000AFC8:
Parsed instruction at 8000AFC8: addi r4 r30 0x0
Parsed instruction at 8000AFCC: li r3 0xd
Parsed instruction at 8000AFD0: b .L_8000AFE8
Parsed label: L_8000AFD4:
Parsed instruction at 8000AFD4: lbz r0 0x0(r4)
Parsed instruction at 8000AFD8: cmpwi r0 0xa
Parsed instruction at 8000AFDC: bne .L_8000AFE4
Parsed instruction at 8000AFE0: stb r3 0x0(r4)
Parsed label: L_8000AFE4:
Parsed instruction at 8000AFE4: addi r4 r4 0x1
Parsed label: L_8000AFE8:
Parsed instruction at 8000AFE8: subf r0 r30 r4
Parsed instruction at 8000AFEC: cmplw r0 r31
Parsed instruction at 8000AFF0: blt .L_8000AFD4
Parsed instruction at 8000AFF4: lis r0 0xa001
Parsed instruction at 8000AFF8: stw r0 0x14(r1)
Parsed instruction at 8000AFFC: li r26 0x0
Parsed instruction at 8000B000: lis r29 0x2001
Parsed instruction at 8000B004: b .L_8000B150
Parsed label: L_8000B008:
Parsed instruction at 8000B008: lwz r3 lbl_8001EEF0@sda21(r0)
Parsed instruction at 8000B00C: li r5 0x3
Parsed instruction at 8000B010: lwz r4 lbl_8001EEF4@sda21(r0)
Parsed instruction at 8000B014: bl EXISelect
Parsed instruction at 8000B018: cmpwi r3 0x0
Parsed instruction at 8000B01C: bne .L_8000B028
Parsed instruction at 8000B020: li r0 -0x1
Parsed instruction at 8000B024: b .L_8000B080
Parsed label: L_8000B028:
Parsed instruction at 8000B028: stw r29 0x10(r1)
Parsed instruction at 8000B02C: addi r4 r1 0x10
Parsed instruction at 8000B030: lwz r3 lbl_8001EEF0@sda21(r0)
Parsed instruction at 8000B034: li r5 0x4
Parsed instruction at 8000B038: li r6 0x1
Parsed instruction at 8000B03C: li r7 0x0
Parsed instruction at 8000B040: bl EXIImm
Parsed instruction at 8000B044: lwz r3 lbl_8001EEF0@sda21(r0)
Parsed instruction at 8000B048: bl EXISync
Parsed instruction at 8000B04C: lwz r3 lbl_8001EEF0@sda21(r0)
Parsed instruction at 8000B050: addi r4 r1 0x10
Parsed instruction at 8000B054: li r5 0x1
Parsed instruction at 8000B058: li r6 0x0
Parsed instruction at 8000B05C: li r7 0x0
Parsed instruction at 8000B060: bl EXIImm
Parsed instruction at 8000B064: lwz r3 lbl_8001EEF0@sda21(r0)
Parsed instruction at 8000B068: bl EXISync
Parsed instruction at 8000B06C: lwz r3 lbl_8001EEF0@sda21(r0)
Parsed instruction at 8000B070: bl EXIDeselect
Parsed instruction at 8000B074: lwz r0 0x10(r1)
Parsed instruction at 8000B078: srwi r0 r0 24
Parsed instruction at 8000B07C: subfic r0 r0 0x10
Parsed label: L_8000B080:
Parsed instruction at 8000B080: cmpwi r0 0x0
Parsed instruction at 8000B084: mr r27 r0
Parsed instruction at 8000B088: bge .L_8000B094
Parsed instruction at 8000B08C: li r26 0x3
Parsed instruction at 8000B090: b .L_8000B158
Parsed label: L_8000B094:
Parsed instruction at 8000B094: cmpwi r0 0xc
Parsed instruction at 8000B098: bge .L_8000B0A4
Parsed instruction at 8000B09C: cmplw r0 r31
Parsed instruction at 8000B0A0: blt .L_8000B150
Parsed label: L_8000B0A4:
Parsed instruction at 8000B0A4: lwz r3 lbl_8001EEF0@sda21(r0)
Parsed instruction at 8000B0A8: li r5 0x3
Parsed instruction at 8000B0AC: lwz r4 lbl_8001EEF4@sda21(r0)
Parsed instruction at 8000B0B0: bl EXISelect
Parsed instruction at 8000B0B4: cmpwi r3 0x0
Parsed instruction at 8000B0B8: bne .L_8000B0C4
Parsed instruction at 8000B0BC: li r26 0x3
Parsed instruction at 8000B0C0: b .L_8000B158
Parsed label: L_8000B0C4:
Parsed instruction at 8000B0C4: lwz r3 lbl_8001EEF0@sda21(r0)
Parsed instruction at 8000B0C8: addi r4 r1 0x14
Parsed instruction at 8000B0CC: li r5 0x4
Parsed instruction at 8000B0D0: li r6 0x1
Parsed instruction at 8000B0D4: li r7 0x0
Parsed instruction at 8000B0D8: bl EXIImm
Parsed instruction at 8000B0DC: lwz r3 lbl_8001EEF0@sda21(r0)
Parsed instruction at 8000B0E0: bl EXISync
Parsed instruction at 8000B0E4: b .L_8000B138
Parsed label: L_8000B0E8:
Parsed instruction at 8000B0E8: cmpwi r27 0x4
Parsed instruction at 8000B0EC: bge .L_8000B0F8
Parsed instruction at 8000B0F0: cmplw r27 r31
Parsed instruction at 8000B0F4: blt .L_8000B148
Parsed label: L_8000B0F8:
Parsed instruction at 8000B0F8: cmplwi r31 0x4
Parsed instruction at 8000B0FC: bge .L_8000B108
Parsed instruction at 8000B100: mr r28 r31
Parsed instruction at 8000B104: b .L_8000B10C
Parsed label: L_8000B108:
Parsed instruction at 8000B108: li r28 0x4
Parsed label: L_8000B10C:
Parsed instruction at 8000B10C: lwz r3 lbl_8001EEF0@sda21(r0)
Parsed instruction at 8000B110: mr r5 r28
Parsed instruction at 8000B114: addi r4 r30 0x0
Parsed instruction at 8000B118: li r6 0x1
Parsed instruction at 8000B11C: li r7 0x0
Parsed instruction at 8000B120: bl EXIImm
Parsed instruction at 8000B124: lwz r3 lbl_8001EEF0@sda21(r0)
Parsed instruction at 8000B128: add r30 r30 r28
Parsed instruction at 8000B12C: subf r31 r28 r31
Parsed instruction at 8000B130: subf r27 r28 r27
Parsed instruction at 8000B134: bl EXISync
Parsed label: L_8000B138:
Parsed instruction at 8000B138: cmpwi r27 0x0
Parsed instruction at 8000B13C: beq .L_8000B148
Parsed instruction at 8000B140: cmplwi r31 0x0
Parsed instruction at 8000B144: bne .L_8000B0E8
Parsed label: L_8000B148:
Parsed instruction at 8000B148: lwz r3 lbl_8001EEF0@sda21(r0)
Parsed instruction at 8000B14C: bl EXIDeselect
Parsed label: L_8000B150:
Parsed instruction at 8000B150: cmplwi r31 0x0
Parsed instruction at 8000B154: bne .L_8000B008
Parsed label: L_8000B158:
Parsed instruction at 8000B158: lwz r3 lbl_8001EEF0@sda21(r0)
Parsed instruction at 8000B15C: bl EXIUnlock
Parsed instruction at 8000B160: mr r3 r26
Parsed label: L_8000B164:
Parsed instruction at 8000B164: lmw r26 0x18(r1)
Parsed instruction at 8000B168: lwz r0 0x34(r1)
Parsed instruction at 8000B16C: addi r1 r1 0x30
Parsed instruction at 8000B170: mtlr r0
Parsed instruction at 8000B174: blr 
End of function: fn_8000AF78, 148 instructions
Parsed function: fn_8000B178 at 0x8000B178
Parsed instruction at 8000B178: mflr r0
Parsed instruction at 8000B17C: lis r3 0xcc00
Parsed instruction at 8000B180: stw r0 0x4(r1)
Parsed instruction at 8000B184: stwu r1 -0x20(r1)
Parsed instruction at 8000B188: stw r31 0x1c(r1)
Parsed instruction at 8000B18C: stw r30 0x18(r1)
Parsed instruction at 8000B190: addi r30 r3 0x6400
Parsed instruction at 8000B194: stw r29 0x14(r1)
Parsed instruction at 8000B198: addi r29 r30 0x34
Parsed instruction at 8000B19C: stw r28 0x10(r1)
Parsed instruction at 8000B1A0: lwz r0 0x6434(r3)
Parsed instruction at 8000B1A4: lwz r28 0x6438(r3)
Parsed instruction at 8000B1A8: lis r3 Si_8001B088@ha
Parsed instruction at 8000B1AC: oris r0 r0 0x8000
Parsed instruction at 8000B1B0: clrrwi r0 r0 1
Parsed instruction at 8000B1B4: stw r0 0x34(r30)
Parsed instruction at 8000B1B8: addi r31 r3 Si_8001B088@l
Parsed instruction at 8000B1BC: lwz r0 0x0(r31)
Parsed instruction at 8000B1C0: cmpwi r0 -0x1
Parsed instruction at 8000B1C4: beq .L_8000B438
Parsed instruction at 8000B1C8: bl __OSGetSystemTime
Parsed instruction at 8000B1CC: lwz r6 0x0(r31)
Parsed instruction at 8000B1D0: lis r5 lbl_8001C800@ha
Parsed instruction at 8000B1D4: addi r0 r5 lbl_8001C800@l
Parsed instruction at 8000B1D8: slwi r5 r6 3
Parsed instruction at 8000B1DC: add r5 r0 r5
Parsed instruction at 8000B1E0: stw r4 0x4(r5)
Parsed instruction at 8000B1E4: addi r6 r31 0x8
Parsed instruction at 8000B1E8: li r4 0x0
Parsed instruction at 8000B1EC: stw r3 0x0(r5)
Parsed instruction at 8000B1F0: lwz r0 0x8(r31)
Parsed instruction at 8000B1F4: lwz r5 0xc(r31)
Parsed instruction at 8000B1F8: srwi r7 r0 2
Parsed instruction at 8000B1FC: cmplwi r7 0x0
Parsed instruction at 8000B200: ble .L_8000B2A0
Parsed instruction at 8000B204: cmplwi r7 0x8
Parsed instruction at 8000B208: subi r3 r7 0x8
Parsed instruction at 8000B20C: ble .L_8000B440
Parsed instruction at 8000B210: addi r0 r3 0x7
Parsed instruction at 8000B214: srwi r0 r0 3
Parsed instruction at 8000B218: cmplwi r3 0x0
Parsed instruction at 8000B21C: mtctr r0
Parsed instruction at 8000B220: ble .L_8000B440
Parsed label: L_8000B224:
Parsed instruction at 8000B224: lwz r0 0x80(r30)
Parsed instruction at 8000B228: addi r4 r4 0x8
Parsed instruction at 8000B22C: stw r0 0x0(r5)
Parsed instruction at 8000B230: lwz r0 0x84(r30)
Parsed instruction at 8000B234: stw r0 0x4(r5)
Parsed instruction at 8000B238: lwz r0 0x88(r30)
Parsed instruction at 8000B23C: stw r0 0x8(r5)
Parsed instruction at 8000B240: lwz r0 0x8c(r30)
Parsed instruction at 8000B244: stw r0 0xc(r5)
Parsed instruction at 8000B248: lwz r0 0x90(r30)
Parsed instruction at 8000B24C: stw r0 0x10(r5)
Parsed instruction at 8000B250: lwz r0 0x94(r30)
Parsed instruction at 8000B254: stw r0 0x14(r5)
Parsed instruction at 8000B258: lwz r0 0x98(r30)
Parsed instruction at 8000B25C: stw r0 0x18(r5)
Parsed instruction at 8000B260: lwz r0 0x9c(r30)
Parsed instruction at 8000B264: addi r30 r30 0x20
Parsed instruction at 8000B268: stw r0 0x1c(r5)
Parsed instruction at 8000B26C: addi r5 r5 0x20
Parsed instruction at 8000B270: bdnz .L_8000B224
Parsed instruction at 8000B274: b .L_8000B440
Parsed label: L_8000B278:
Parsed instruction at 8000B278: subf r0 r4 r7
Parsed instruction at 8000B27C: cmplw r4 r7
Parsed instruction at 8000B280: mtctr r0
Parsed instruction at 8000B284: bge .L_8000B2A0
Parsed label: L_8000B288:
Parsed instruction at 8000B288: lwz r0 0x80(r3)
Parsed instruction at 8000B28C: addi r3 r3 0x4
Parsed instruction at 8000B290: addi r4 r4 0x1
Parsed instruction at 8000B294: stw r0 0x0(r5)
Parsed instruction at 8000B298: addi r5 r5 0x4
Parsed instruction at 8000B29C: bdnz .L_8000B288
Parsed label: L_8000B2A0:
Parsed instruction at 8000B2A0: lwz r0 0x0(r6)
Parsed instruction at 8000B2A4: clrlwi. r3 r0 30
Parsed instruction at 8000B2A8: beq .L_8000B3B8
Parsed instruction at 8000B2AC: lis r6 0xcc00
Parsed instruction at 8000B2B0: addi r6 r6 0x6400
Parsed instruction at 8000B2B4: slwi r0 r4 2
Parsed instruction at 8000B2B8: add r4 r6 r0
Parsed instruction at 8000B2BC: lwz r6 0x80(r4)
Parsed instruction at 8000B2C0: li r4 0x0
Parsed instruction at 8000B2C4: ble .L_8000B3B8
Parsed instruction at 8000B2C8: cmplwi r3 0x8
Parsed instruction at 8000B2CC: subi r7 r3 0x8
Parsed instruction at 8000B2D0: ble .L_8000B38C
Parsed instruction at 8000B2D4: addi r0 r7 0x7
Parsed instruction at 8000B2D8: srwi r0 r0 3
Parsed instruction at 8000B2DC: cmplwi r7 0x0
Parsed instruction at 8000B2E0: mtctr r0
Parsed instruction at 8000B2E4: ble .L_8000B38C
Parsed label: L_8000B2E8:
Parsed instruction at 8000B2E8: subfic r0 r4 0x3
Parsed instruction at 8000B2EC: slwi r7 r0 3
Parsed instruction at 8000B2F0: addi r0 r4 0x1
Parsed instruction at 8000B2F4: srw r7 r6 r7
Parsed instruction at 8000B2F8: subfic r0 r0 0x3
Parsed instruction at 8000B2FC: stb r7 0x0(r5)
Parsed instruction at 8000B300: slwi r0 r0 3
Parsed instruction at 8000B304: addi r7 r4 0x2
Parsed instruction at 8000B308: srw r0 r6 r0
Parsed instruction at 8000B30C: subfic r7 r7 0x3
Parsed instruction at 8000B310: stb r0 0x1(r5)
Parsed instruction at 8000B314: slwi r7 r7 3
Parsed instruction at 8000B318: srw r12 r6 r7
Parsed instruction at 8000B31C: neg r7 r4
Parsed instruction at 8000B320: stb r12 0x2(r5)
Parsed instruction at 8000B324: slwi r8 r7 3
Parsed instruction at 8000B328: addi r7 r4 0x4
Parsed instruction at 8000B32C: srw r11 r6 r8
Parsed instruction at 8000B330: subfic r7 r7 0x3
Parsed instruction at 8000B334: stb r11 0x3(r5)
Parsed instruction at 8000B338: slwi r8 r7 3
Parsed instruction at 8000B33C: addi r7 r4 0x5
Parsed instruction at 8000B340: srw r10 r6 r8
Parsed instruction at 8000B344: subfic r7 r7 0x3
Parsed instruction at 8000B348: stb r10 0x4(r5)
Parsed instruction at 8000B34C: slwi r8 r7 3
Parsed instruction at 8000B350: srw r9 r6 r8
Parsed instruction at 8000B354: addi r7 r4 0x6
Parsed instruction at 8000B358: stb r9 0x5(r5)
Parsed instruction at 8000B35C: subfic r8 r7 0x3
Parsed instruction at 8000B360: addi r7 r4 0x7
Parsed instruction at 8000B364: slwi r8 r8 3
Parsed instruction at 8000B368: srw r8 r6 r8
Parsed instruction at 8000B36C: subfic r7 r7 0x3
Parsed instruction at 8000B370: stb r8 0x6(r5)
Parsed instruction at 8000B374: slwi r7 r7 3
Parsed instruction at 8000B378: srw r7 r6 r7
Parsed instruction at 8000B37C: stb r7 0x7(r5)
Parsed instruction at 8000B380: addi r5 r5 0x8
Parsed instruction at 8000B384: addi r4 r4 0x8
Parsed instruction at 8000B388: bdnz .L_8000B2E8
Parsed label: L_8000B38C:
Parsed instruction at 8000B38C: subf r0 r4 r3
Parsed instruction at 8000B390: cmplw r4 r3
Parsed instruction at 8000B394: mtctr r0
Parsed instruction at 8000B398: bge .L_8000B3B8
Parsed label: L_8000B39C:
Parsed instruction at 8000B39C: subfic r0 r4 0x3
Parsed instruction at 8000B3A0: slwi r0 r0 3
Parsed instruction at 8000B3A4: srw r0 r6 r0
Parsed instruction at 8000B3A8: stb r0 0x0(r5)
Parsed instruction at 8000B3AC: addi r5 r5 0x1
Parsed instruction at 8000B3B0: addi r4 r4 0x1
Parsed instruction at 8000B3B4: bdnz .L_8000B39C
Parsed label: L_8000B3B8:
Parsed instruction at 8000B3B8: lwz r0 0x0(r29)
Parsed instruction at 8000B3BC: rlwinm. r0 r0 0 2 2
Parsed instruction at 8000B3C0: beq .L_8000B40C
Parsed instruction at 8000B3C4: lwz r3 0x0(r31)
Parsed instruction at 8000B3C8: subfic r0 r3 0x3
Parsed instruction at 8000B3CC: slwi r0 r0 3
Parsed instruction at 8000B3D0: srw r28 r28 r0
Parsed instruction at 8000B3D4: clrlwi r28 r28 28
Parsed instruction at 8000B3D8: rlwinm. r0 r28 0 28 28
Parsed instruction at 8000B3DC: beq .L_8000B3FC
Parsed instruction at 8000B3E0: slwi r0 r3 2
Parsed instruction at 8000B3E4: add r3 r31 r0
Parsed instruction at 8000B3E8: lwzu r0 0x14(r3)
Parsed instruction at 8000B3EC: rlwinm. r0 r0 0 24 24
Parsed instruction at 8000B3F0: bne .L_8000B3FC
Parsed instruction at 8000B3F4: li r0 0x8
Parsed instruction at 8000B3F8: stw r0 0x0(r3)
Parsed label: L_8000B3FC:
Parsed instruction at 8000B3FC: cmplwi r28 0x0
Parsed instruction at 8000B400: bne .L_8000B430
Parsed instruction at 8000B404: li r28 0x4
Parsed instruction at 8000B408: b .L_8000B430
Parsed label: L_8000B40C:
Parsed instruction at 8000B40C: bl __OSGetSystemTime
Parsed instruction at 8000B410: lwz r6 0x0(r31)
Parsed instruction at 8000B414: lis r5 TypeTime_8001C7E0@ha
Parsed instruction at 8000B418: addi r0 r5 TypeTime_8001C7E0@l
Parsed instruction at 8000B41C: slwi r5 r6 3
Parsed instruction at 8000B420: add r5 r0 r5
Parsed instruction at 8000B424: stw r4 0x4(r5)
Parsed instruction at 8000B428: li r28 0x0
Parsed instruction at 8000B42C: stw r3 0x0(r5)
Parsed label: L_8000B430:
Parsed instruction at 8000B430: li r0 -0x1
Parsed instruction at 8000B434: stw r0 0x0(r31)
Parsed label: L_8000B438:
Parsed instruction at 8000B438: mr r3 r28
Parsed instruction at 8000B43C: b .L_8000B454
Parsed label: L_8000B440:
Parsed instruction at 8000B440: lis r3 0xcc00
Parsed instruction at 8000B444: slwi r0 r4 2
Parsed instruction at 8000B448: addi r3 r3 0x6400
Parsed instruction at 8000B44C: add r3 r3 r0
Parsed instruction at 8000B450: b .L_8000B278
Parsed label: L_8000B454:
Parsed instruction at 8000B454: lwz r0 0x24(r1)
Parsed instruction at 8000B458: lwz r31 0x1c(r1)
Parsed instruction at 8000B45C: lwz r30 0x18(r1)
Parsed instruction at 8000B460: lwz r29 0x14(r1)
Parsed instruction at 8000B464: lwz r28 0x10(r1)
Parsed instruction at 8000B468: addi r1 r1 0x20
Parsed instruction at 8000B46C: mtlr r0
Parsed instruction at 8000B470: blr 
End of function: fn_8000B178, 205 instructions
Parsed function: SIInterruptHandler at 0x8000B474
Parsed instruction at 8000B474: mflr r0
Parsed instruction at 8000B478: lis r5 0xcc00
Parsed instruction at 8000B47C: stw r0 0x4(r1)
Parsed instruction at 8000B480: lis r7 Packet_8001C6C0@ha
Parsed instruction at 8000B484: lis r6 Si_8001B088@ha
Parsed instruction at 8000B488: stwu r1 -0x48(r1)
Parsed instruction at 8000B48C: stmw r21 0x1c(r1)
Parsed instruction at 8000B490: addi r30 r3 0x0
Parsed instruction at 8000B494: addi r31 r4 0x0
Parsed instruction at 8000B498: addi r28 r7 Packet_8001C6C0@l
Parsed instruction at 8000B49C: addi r29 r6 Si_8001B088@l
Parsed instruction at 8000B4A0: lwz r24 0x6434(r5)
Parsed instruction at 8000B4A4: clrrwi r5 r24 30
Parsed instruction at 8000B4A8: addis r0 r5 0x4000
Parsed instruction at 8000B4AC: cmplwi r0 0x0
Parsed instruction at 8000B4B0: bne .L_8000B634
Parsed instruction at 8000B4B4: lwz r23 0x0(r29)
Parsed instruction at 8000B4B8: bl fn_8000B178
Parsed instruction at 8000B4BC: lwz r21 0x10(r29)
Parsed instruction at 8000B4C0: li r27 0x0
Parsed instruction at 8000B4C4: addi r22 r3 0x0
Parsed instruction at 8000B4C8: stw r27 0x10(r29)
Parsed instruction at 8000B4CC: addi r26 r23 0x0
Parsed label: L_8000B4D0:
Parsed instruction at 8000B4D0: addi r26 r26 0x1
Parsed instruction at 8000B4D4: srawi r0 r26 2
Parsed instruction at 8000B4D8: addze r0 r0
Parsed instruction at 8000B4DC: slwi r0 r0 2
Parsed instruction at 8000B4E0: subfc r0 r0 r26
Parsed instruction at 8000B4E4: mr r26 r0
Parsed instruction at 8000B4E8: slwi r0 r0 5
Parsed instruction at 8000B4EC: add r25 r28 r0
Parsed instruction at 8000B4F0: lwz r0 0x0(r25)
Parsed instruction at 8000B4F4: cmpwi r0 -0x1
Parsed instruction at 8000B4F8: beq .L_8000B564
Parsed instruction at 8000B4FC: bl __OSGetSystemTime
Parsed instruction at 8000B500: lwz r0 0x18(r25)
Parsed instruction at 8000B504: xoris r5 r3 0x8000
Parsed instruction at 8000B508: lwz r6 0x1c(r25)
Parsed instruction at 8000B50C: xoris r3 r0 0x8000
Parsed instruction at 8000B510: subfc r0 r6 r4
Parsed instruction at 8000B514: subfe r3 r3 r5
Parsed instruction at 8000B518: subfe r3 r5 r5
Parsed instruction at 8000B51C: neg. r3 r3
Parsed instruction at 8000B520: bne .L_8000B564
Parsed instruction at 8000B524: lwz r3 0x0(r25)
Parsed instruction at 8000B528: lwz r4 0x4(r25)
Parsed instruction at 8000B52C: lwz r5 0x8(r25)
Parsed instruction at 8000B530: lwz r6 0xc(r25)
Parsed instruction at 8000B534: lwz r7 0x10(r25)
Parsed instruction at 8000B538: lwz r8 0x14(r25)
Parsed instruction at 8000B53C: bl fn_8000B85C
Parsed instruction at 8000B540: cmpwi r3 0x0
Parsed instruction at 8000B544: beq .L_8000B570
Parsed instruction at 8000B548: mulli r0 r26 0x28
Parsed instruction at 8000B54C: add r3 r28 r0
Parsed instruction at 8000B550: addi r3 r3 0x80
Parsed instruction at 8000B554: bl fn_80006288
Parsed instruction at 8000B558: li r0 -0x1
Parsed instruction at 8000B55C: stw r0 0x0(r25)
Parsed instruction at 8000B560: b .L_8000B570
Parsed label: L_8000B564:
Parsed instruction at 8000B564: addi r27 r27 0x1
Parsed instruction at 8000B568: cmpwi r27 0x4
Parsed instruction at 8000B56C: blt .L_8000B4D0
Parsed label: L_8000B570:
Parsed instruction at 8000B570: cmplwi r21 0x0
Parsed instruction at 8000B574: beq .L_8000B590
Parsed instruction at 8000B578: addi r12 r21 0x0
Parsed instruction at 8000B57C: mtlr r12
Parsed instruction at 8000B580: addi r3 r23 0x0
Parsed instruction at 8000B584: addi r4 r22 0x0
Parsed instruction at 8000B588: addi r5 r31 0x0
Parsed instruction at 8000B58C: blrl 
Parsed label: L_8000B590:
Parsed instruction at 8000B590: lis r3 0xcc00
Parsed instruction at 8000B594: addi r4 r3 0x6400
Parsed instruction at 8000B598: lwz r5 0x6438(r3)
Parsed instruction at 8000B59C: slwi r0 r23 3
Parsed instruction at 8000B5A0: lis r3 0xf00
Parsed instruction at 8000B5A4: sraw r0 r3 r0
Parsed instruction at 8000B5A8: and r5 r5 r0
Parsed instruction at 8000B5AC: slwi r0 r23 2
Parsed instruction at 8000B5B0: stw r5 0x38(r4)
Parsed instruction at 8000B5B4: add r6 r29 r0
Parsed instruction at 8000B5B8: lwzu r0 0x14(r6)
Parsed instruction at 8000B5BC: cmplwi r0 0x80
Parsed instruction at 8000B5C0: bne .L_8000B634
Parsed instruction at 8000B5C4: slwi r0 r23 5
Parsed instruction at 8000B5C8: lwzx r0 r28 r0
Parsed instruction at 8000B5CC: li r3 0x1
Parsed instruction at 8000B5D0: cmpwi r0 -0x1
Parsed instruction at 8000B5D4: bne .L_8000B5E8
Parsed instruction at 8000B5D8: lwz r0 0x0(r29)
Parsed instruction at 8000B5DC: cmpw r0 r23
Parsed instruction at 8000B5E0: beq .L_8000B5E8
Parsed instruction at 8000B5E4: li r3 0x0
Parsed label: L_8000B5E8:
Parsed instruction at 8000B5E8: cmpwi r3 0x0
Parsed instruction at 8000B5EC: bne .L_8000B634
Parsed instruction at 8000B5F0: lis r3 0x8000
Parsed instruction at 8000B5F4: lwz r0 0xf8(r3)
Parsed instruction at 8000B5F8: lis r3 0x431c
Parsed instruction at 8000B5FC: lis r4 GetTypeCallback@ha
Parsed instruction at 8000B600: srwi r0 r0 2
Parsed instruction at 8000B604: subi r3 r3 0x217d
Parsed instruction at 8000B608: mulhwu r0 r3 r0
Parsed instruction at 8000B60C: srwi r0 r0 15
Parsed instruction at 8000B610: mulli r0 r0 0x41
Parsed instruction at 8000B614: addi r8 r4 GetTypeCallback@l
Parsed instruction at 8000B618: srwi r10 r0 3
Parsed instruction at 8000B61C: addi r3 r23 0x0
Parsed instruction at 8000B620: li r4 lbl_8001EF00@sda21
Parsed instruction at 8000B624: li r5 0x1
Parsed instruction at 8000B628: li r7 0x3
Parsed instruction at 8000B62C: li r9 0x0
Parsed instruction at 8000B630: bl SITransfer
Parsed label: L_8000B634:
Parsed instruction at 8000B634: rlwinm r3 r24 0 3 4
Parsed instruction at 8000B638: subis r0 r3 0x1800
Parsed instruction at 8000B63C: cmplwi r0 0x0
Parsed instruction at 8000B640: bne .L_8000B7A4
Parsed instruction at 8000B644: bl fn_80011200
Parsed instruction at 8000B648: lwz r0 0x4(r29)
Parsed instruction at 8000B64C: addi r23 r28 0x1e0
Parsed instruction at 8000B650: addi r24 r29 0x4
Parsed instruction at 8000B654: addi r22 r23 0x0
Parsed instruction at 8000B658: addi r21 r3 0x1
Parsed instruction at 8000B65C: extrwi r26 r0 10 6
Parsed instruction at 8000B660: li r25 0x0
Parsed label: L_8000B664:
Parsed instruction at 8000B664: mr r3 r25
Parsed instruction at 8000B668: bl fn_8000BAD4
Parsed instruction at 8000B66C: cmpwi r3 0x0
Parsed instruction at 8000B670: beq .L_8000B678
Parsed instruction at 8000B674: stw r21 0x0(r22)
Parsed label: L_8000B678:
Parsed instruction at 8000B678: addi r25 r25 0x1
Parsed instruction at 8000B67C: cmpwi r25 0x4
Parsed instruction at 8000B680: addi r22 r22 0x4
Parsed instruction at 8000B684: blt .L_8000B664
Parsed instruction at 8000B688: lwz r5 0x0(r24)
Parsed instruction at 8000B68C: lis r3 0x8000
Parsed instruction at 8000B690: li r0 0x18
Parsed instruction at 8000B694: srw r0 r3 r0
Parsed instruction at 8000B698: and. r0 r5 r0
Parsed instruction at 8000B69C: srwi r6 r26 1
Parsed instruction at 8000B6A0: beq .L_8000B6C4
Parsed instruction at 8000B6A4: lwz r0 0x0(r23)
Parsed instruction at 8000B6A8: cmplwi r0 0x0
Parsed instruction at 8000B6AC: beq .L_8000B7A4
Parsed instruction at 8000B6B0: lwz r0 0x0(r23)
Parsed instruction at 8000B6B4: add r0 r6 r0
Parsed instruction at 8000B6B8: cmplw r0 r21
Parsed instruction at 8000B6BC: bge .L_8000B6C4
Parsed instruction at 8000B6C0: b .L_8000B7A4
Parsed label: L_8000B6C4:
Parsed instruction at 8000B6C4: li r0 0x19
Parsed instruction at 8000B6C8: srw r0 r3 r0
Parsed instruction at 8000B6CC: and. r0 r5 r0
Parsed instruction at 8000B6D0: addi r4 r23 0x4
Parsed instruction at 8000B6D4: beq .L_8000B6F8
Parsed instruction at 8000B6D8: lwz r0 0x0(r4)
Parsed instruction at 8000B6DC: cmplwi r0 0x0
Parsed instruction at 8000B6E0: beq .L_8000B7A4
Parsed instruction at 8000B6E4: lwz r0 0x0(r4)
Parsed instruction at 8000B6E8: add r0 r6 r0
Parsed instruction at 8000B6EC: cmplw r0 r21
Parsed instruction at 8000B6F0: bge .L_8000B6F8
Parsed instruction at 8000B6F4: b .L_8000B7A4
Parsed label: L_8000B6F8:
Parsed instruction at 8000B6F8: li r0 0x1a
Parsed instruction at 8000B6FC: srw r0 r3 r0
Parsed instruction at 8000B700: and. r0 r5 r0
Parsed instruction at 8000B704: addi r4 r4 0x4
Parsed instruction at 8000B708: beq .L_8000B72C
Parsed instruction at 8000B70C: lwz r0 0x0(r4)
Parsed instruction at 8000B710: cmplwi r0 0x0
Parsed instruction at 8000B714: beq .L_8000B7A4
Parsed instruction at 8000B718: lwz r0 0x0(r4)
Parsed instruction at 8000B71C: add r0 r6 r0
Parsed instruction at 8000B720: cmplw r0 r21
Parsed instruction at 8000B724: bge .L_8000B72C
Parsed instruction at 8000B728: b .L_8000B7A4
Parsed label: L_8000B72C:
Parsed instruction at 8000B72C: li r0 0x1b
Parsed instruction at 8000B730: srw r0 r3 r0
Parsed instruction at 8000B734: and. r0 r5 r0
Parsed instruction at 8000B738: addi r4 r4 0x4
Parsed instruction at 8000B73C: beq .L_8000B760
Parsed instruction at 8000B740: lwz r0 0x0(r4)
Parsed instruction at 8000B744: cmplwi r0 0x0
Parsed instruction at 8000B748: beq .L_8000B7A4
Parsed instruction at 8000B74C: lwz r0 0x0(r4)
Parsed instruction at 8000B750: add r0 r6 r0
Parsed instruction at 8000B754: cmplw r0 r21
Parsed instruction at 8000B758: bge .L_8000B760
Parsed instruction at 8000B75C: b .L_8000B7A4
Parsed label: L_8000B760:
Parsed instruction at 8000B760: li r22 0x0
Parsed instruction at 8000B764: stw r22 0x0(r23)
Parsed instruction at 8000B768: addi r21 r28 0x1a0
Parsed instruction at 8000B76C: stw r22 0x1e4(r28)
Parsed instruction at 8000B770: stw r22 0x1e8(r28)
Parsed instruction at 8000B774: stw r22 0x1ec(r28)
Parsed label: L_8000B778:
Parsed instruction at 8000B778: lwz r12 0x0(r21)
Parsed instruction at 8000B77C: cmplwi r12 0x0
Parsed instruction at 8000B780: beq .L_8000B794
Parsed instruction at 8000B784: mtlr r12
Parsed instruction at 8000B788: addi r3 r30 0x0
Parsed instruction at 8000B78C: addi r4 r31 0x0
Parsed instruction at 8000B790: blrl 
Parsed label: L_8000B794:
Parsed instruction at 8000B794: addi r22 r22 0x1
Parsed instruction at 8000B798: cmpwi r22 0x4
Parsed instruction at 8000B79C: addi r21 r21 0x4
Parsed instruction at 8000B7A0: blt .L_8000B778
Parsed label: L_8000B7A4:
Parsed instruction at 8000B7A4: lmw r21 0x1c(r1)
Parsed instruction at 8000B7A8: lwz r0 0x4c(r1)
Parsed instruction at 8000B7AC: addi r1 r1 0x48
Parsed instruction at 8000B7B0: mtlr r0
Parsed instruction at 8000B7B4: blr 
End of function: SIInterruptHandler, 224 instructions
Parsed function: SIInit at 0x8000B7B8
Parsed instruction at 8000B7B8: mflr r0
Parsed instruction at 8000B7BC: lis r3 Packet_8001C6C0@ha
Parsed instruction at 8000B7C0: stw r0 0x4(r1)
Parsed instruction at 8000B7C4: addi r6 r3 Packet_8001C6C0@l
Parsed instruction at 8000B7C8: lis r3 Si_8001B088@ha
Parsed instruction at 8000B7CC: stwu r1 -0x8(r1)
Parsed instruction at 8000B7D0: li r5 -0x1
Parsed instruction at 8000B7D4: addi r4 r3 Si_8001B088@l
Parsed instruction at 8000B7D8: stw r5 0x60(r6)
Parsed instruction at 8000B7DC: li r0 0x0
Parsed instruction at 8000B7E0: li r3 0x0
Parsed instruction at 8000B7E4: stw r5 0x40(r6)
Parsed instruction at 8000B7E8: stw r5 0x20(r6)
Parsed instruction at 8000B7EC: stw r5 0x0(r6)
Parsed instruction at 8000B7F0: stw r0 0x4(r4)
Parsed instruction at 8000B7F4: bl SISetSamplingRate
Parsed instruction at 8000B7F8: lis r3 0xcc00
Parsed label: L_8000B7FC:
Parsed instruction at 8000B7FC: addi r4 r3 0x6400
Parsed instruction at 8000B800: lwzu r0 0x34(r4)
Parsed instruction at 8000B804: clrlwi. r0 r0 31
Parsed instruction at 8000B808: bne .L_8000B7FC
Parsed instruction at 8000B80C: lis r0 0x8000
Parsed instruction at 8000B810: lis r3 SIInterruptHandler@ha
Parsed instruction at 8000B814: stw r0 0x0(r4)
Parsed instruction at 8000B818: addi r4 r3 SIInterruptHandler@l
Parsed instruction at 8000B81C: li r3 0x14
Parsed instruction at 8000B820: bl __OSSetInterruptHandler
Parsed instruction at 8000B824: li r3 0x800
Parsed instruction at 8000B828: bl __OSUnmaskInterrupts
Parsed instruction at 8000B82C: li r3 0x0
Parsed instruction at 8000B830: bl SIGetType
Parsed instruction at 8000B834: li r3 0x1
Parsed instruction at 8000B838: bl SIGetType
Parsed instruction at 8000B83C: li r3 0x2
Parsed instruction at 8000B840: bl SIGetType
Parsed instruction at 8000B844: li r3 0x3
Parsed instruction at 8000B848: bl SIGetType
Parsed instruction at 8000B84C: lwz r0 0xc(r1)
Parsed instruction at 8000B850: addi r1 r1 0x8
Parsed instruction at 8000B854: mtlr r0
Parsed instruction at 8000B858: blr 
End of function: SIInit, 42 instructions
Parsed function: fn_8000B85C at 0x8000B85C
Parsed instruction at 8000B85C: mflr r0
Parsed instruction at 8000B860: lis r9 Si_8001B088@ha
Parsed instruction at 8000B864: stw r0 0x4(r1)
Parsed instruction at 8000B868: stwu r1 -0x48(r1)
Parsed instruction at 8000B86C: stmw r25 0x2c(r1)
Parsed instruction at 8000B870: addi r26 r3 0x0
Parsed instruction at 8000B874: addi r27 r4 0x0
Parsed instruction at 8000B878: addi r28 r5 0x0
Parsed instruction at 8000B87C: addi r29 r6 0x0
Parsed instruction at 8000B880: addi r30 r7 0x0
Parsed instruction at 8000B884: addi r31 r8 0x0
Parsed instruction at 8000B888: addi r25 r9 Si_8001B088@l
Parsed instruction at 8000B88C: bl OSDisableInterrupts
Parsed instruction at 8000B890: lwz r0 0x0(r25)
Parsed instruction at 8000B894: cmpwi r0 -0x1
Parsed instruction at 8000B898: beq .L_8000B8A8
Parsed instruction at 8000B89C: bl OSRestoreInterrupts
Parsed instruction at 8000B8A0: li r3 0x0
Parsed instruction at 8000B8A4: b .L_8000BA54
Parsed label: L_8000B8A8:
Parsed instruction at 8000B8A8: lis r6 0xcc00
Parsed instruction at 8000B8AC: slwi r0 r26 3
Parsed instruction at 8000B8B0: lwz r7 0x6438(r6)
Parsed instruction at 8000B8B4: lis r4 0xf00
Parsed instruction at 8000B8B8: sraw r0 r4 r0
Parsed instruction at 8000B8BC: and r7 r7 r0
Parsed instruction at 8000B8C0: stw r7 0x6438(r6)
Parsed instruction at 8000B8C4: addi r0 r28 0x3
Parsed instruction at 8000B8C8: srwi r4 r0 2
Parsed instruction at 8000B8CC: stw r26 0x0(r25)
Parsed instruction at 8000B8D0: cmplwi r4 0x0
Parsed instruction at 8000B8D4: li r5 0x0
Parsed instruction at 8000B8D8: stw r31 0x10(r25)
Parsed instruction at 8000B8DC: stw r30 0x8(r25)
Parsed instruction at 8000B8E0: stw r29 0xc(r25)
Parsed instruction at 8000B8E4: ble .L_8000B988
Parsed instruction at 8000B8E8: cmplwi r4 0x8
Parsed instruction at 8000B8EC: subi r7 r4 0x8
Parsed instruction at 8000B8F0: ble .L_8000BA3C
Parsed instruction at 8000B8F4: addi r0 r7 0x7
Parsed instruction at 8000B8F8: srwi r0 r0 3
Parsed instruction at 8000B8FC: cmplwi r7 0x0
Parsed instruction at 8000B900: mtctr r0
Parsed instruction at 8000B904: addi r7 r27 0x0
Parsed instruction at 8000B908: addi r6 r6 0x6400
Parsed instruction at 8000B90C: ble .L_8000BA3C
Parsed label: L_8000B910:
Parsed instruction at 8000B910: lwz r0 0x0(r7)
Parsed instruction at 8000B914: addi r5 r5 0x8
Parsed instruction at 8000B918: stw r0 0x80(r6)
Parsed instruction at 8000B91C: lwz r0 0x4(r7)
Parsed instruction at 8000B920: stw r0 0x84(r6)
Parsed instruction at 8000B924: lwz r0 0x8(r7)
Parsed instruction at 8000B928: stw r0 0x88(r6)
Parsed instruction at 8000B92C: lwz r0 0xc(r7)
Parsed instruction at 8000B930: stw r0 0x8c(r6)
Parsed instruction at 8000B934: lwz r0 0x10(r7)
Parsed instruction at 8000B938: stw r0 0x90(r6)
Parsed instruction at 8000B93C: lwz r0 0x14(r7)
Parsed instruction at 8000B940: stw r0 0x94(r6)
Parsed instruction at 8000B944: lwz r0 0x18(r7)
Parsed instruction at 8000B948: stw r0 0x98(r6)
Parsed instruction at 8000B94C: lwz r0 0x1c(r7)
Parsed instruction at 8000B950: addi r7 r7 0x20
Parsed instruction at 8000B954: stw r0 0x9c(r6)
Parsed instruction at 8000B958: addi r6 r6 0x20
Parsed instruction at 8000B95C: bdnz .L_8000B910
Parsed instruction at 8000B960: b .L_8000BA3C
Parsed label: L_8000B964:
Parsed instruction at 8000B964: subf r0 r5 r4
Parsed instruction at 8000B968: cmplw r5 r4
Parsed instruction at 8000B96C: mtctr r0
Parsed instruction at 8000B970: bge .L_8000B988
Parsed label: L_8000B974:
Parsed instruction at 8000B974: lwz r0 0x0(r6)
Parsed instruction at 8000B978: addi r6 r6 0x4
Parsed instruction at 8000B97C: stw r0 0x80(r7)
Parsed instruction at 8000B980: addi r7 r7 0x4
Parsed instruction at 8000B984: bdnz .L_8000B974
Parsed label: L_8000B988:
Parsed instruction at 8000B988: lis r4 0xcc00
Parsed instruction at 8000B98C: addi r6 r4 0x6400
Parsed instruction at 8000B990: lwzu r0 0x34(r6)
Parsed instruction at 8000B994: li r4 0x1
Parsed instruction at 8000B998: stw r0 0x24(r1)
Parsed instruction at 8000B99C: cmplwi r31 0x0
Parsed instruction at 8000B9A0: lbz r0 0x24(r1)
Parsed instruction at 8000B9A4: rlwimi r0 r4 7 24 24
Parsed instruction at 8000B9A8: stb r0 0x24(r1)
Parsed instruction at 8000B9AC: beq .L_8000B9B4
Parsed instruction at 8000B9B0: b .L_8000B9B8
Parsed label: L_8000B9B4:
Parsed instruction at 8000B9B4: li r4 0x0
Parsed label: L_8000B9B8:
Parsed instruction at 8000B9B8: lbz r0 0x24(r1)
Parsed instruction at 8000B9BC: rlwimi r0 r4 6 25 25
Parsed instruction at 8000B9C0: cmplwi r28 0x80
Parsed instruction at 8000B9C4: stb r0 0x24(r1)
Parsed instruction at 8000B9C8: bne .L_8000B9D4
Parsed instruction at 8000B9CC: li r0 0x0
Parsed instruction at 8000B9D0: b .L_8000B9D8
Parsed label: L_8000B9D4:
Parsed instruction at 8000B9D4: mr r0 r28
Parsed label: L_8000B9D8:
Parsed instruction at 8000B9D8: clrlwi r4 r0 24
Parsed instruction at 8000B9DC: lbz r0 0x25(r1)
Parsed instruction at 8000B9E0: rlwimi r0 r4 0 25 31
Parsed instruction at 8000B9E4: cmplwi r30 0x80
Parsed instruction at 8000B9E8: stb r0 0x25(r1)
Parsed instruction at 8000B9EC: bne .L_8000B9F8
Parsed instruction at 8000B9F0: li r0 0x0
Parsed instruction at 8000B9F4: b .L_8000B9FC
Parsed label: L_8000B9F8:
Parsed instruction at 8000B9F8: mr r0 r30
Parsed label: L_8000B9FC:
Parsed instruction at 8000B9FC: clrlwi r4 r0 24
Parsed instruction at 8000BA00: lbz r0 0x26(r1)
Parsed instruction at 8000BA04: rlwimi r0 r4 0 25 31
Parsed instruction at 8000BA08: stb r0 0x26(r1)
Parsed instruction at 8000BA0C: li r4 0x1
Parsed instruction at 8000BA10: lbz r0 0x27(r1)
Parsed instruction at 8000BA14: rlwimi r0 r26 1 29 30
Parsed instruction at 8000BA18: stb r0 0x27(r1)
Parsed instruction at 8000BA1C: lbz r0 0x27(r1)
Parsed instruction at 8000BA20: rlwimi r0 r4 0 31 31
Parsed instruction at 8000BA24: stb r0 0x27(r1)
Parsed instruction at 8000BA28: lwz r0 0x24(r1)
Parsed instruction at 8000BA2C: stw r0 0x0(r6)
Parsed instruction at 8000BA30: bl OSRestoreInterrupts
Parsed instruction at 8000BA34: li r3 0x1
Parsed instruction at 8000BA38: b .L_8000BA54
Parsed label: L_8000BA3C:
Parsed instruction at 8000BA3C: lis r6 0xcc00
Parsed instruction at 8000BA40: slwi r0 r5 2
Parsed instruction at 8000BA44: addi r7 r6 0x6400
Parsed instruction at 8000BA48: add r6 r27 r0
Parsed instruction at 8000BA4C: add r7 r7 r0
Parsed instruction at 8000BA50: b .L_8000B964
Parsed label: L_8000BA54:
Parsed instruction at 8000BA54: lmw r25 0x2c(r1)
Parsed instruction at 8000BA58: lwz r0 0x4c(r1)
Parsed instruction at 8000BA5C: addi r1 r1 0x48
Parsed instruction at 8000BA60: mtlr r0
Parsed instruction at 8000BA64: blr 
End of function: fn_8000B85C, 144 instructions
Parsed function: SISetXY at 0x8000BA68
Parsed instruction at 8000BA68: mflr r0
Parsed instruction at 8000BA6C: stw r0 0x4(r1)
Parsed instruction at 8000BA70: slwi r0 r4 8
Parsed instruction at 8000BA74: stwu r1 -0x18(r1)
Parsed instruction at 8000BA78: stw r31 0x14(r1)
Parsed instruction at 8000BA7C: slwi r31 r3 16
Parsed instruction at 8000BA80: or r31 r31 r0
Parsed instruction at 8000BA84: bl OSDisableInterrupts
Parsed instruction at 8000BA88: lis r4 Si_8001B088@ha
Parsed instruction at 8000BA8C: addi r4 r4 Si_8001B088@l
Parsed instruction at 8000BA90: lwz r0 0x4(r4)
Parsed instruction at 8000BA94: addi r5 r4 0x4
Parsed instruction at 8000BA98: lis r4 0xcc00
Parsed instruction at 8000BA9C: rlwinm r0 r0 0 24 5
Parsed instruction at 8000BAA0: stw r0 0x0(r5)
Parsed instruction at 8000BAA4: lwz r0 0x0(r5)
Parsed instruction at 8000BAA8: or r0 r0 r31
Parsed instruction at 8000BAAC: stw r0 0x0(r5)
Parsed instruction at 8000BAB0: lwz r31 0x0(r5)
Parsed instruction at 8000BAB4: stw r31 0x6430(r4)
Parsed instruction at 8000BAB8: bl OSRestoreInterrupts
Parsed instruction at 8000BABC: mr r3 r31
Parsed instruction at 8000BAC0: lwz r0 0x1c(r1)
Parsed instruction at 8000BAC4: lwz r31 0x14(r1)
Parsed instruction at 8000BAC8: addi r1 r1 0x18
Parsed instruction at 8000BACC: mtlr r0
Parsed instruction at 8000BAD0: blr 
End of function: SISetXY, 27 instructions
Parsed function: fn_8000BAD4 at 0x8000BAD4
Parsed instruction at 8000BAD4: mflr r0
Parsed instruction at 8000BAD8: lis r4 Packet_8001C6C0@ha
Parsed instruction at 8000BADC: stw r0 0x4(r1)
Parsed instruction at 8000BAE0: stwu r1 -0x28(r1)
Parsed instruction at 8000BAE4: stw r31 0x24(r1)
Parsed instruction at 8000BAE8: addi r31 r4 Packet_8001C6C0@l
Parsed instruction at 8000BAEC: stw r30 0x20(r1)
Parsed instruction at 8000BAF0: addi r30 r3 0x0
Parsed instruction at 8000BAF4: stw r29 0x1c(r1)
Parsed instruction at 8000BAF8: bl OSDisableInterrupts
Parsed instruction at 8000BAFC: lis r4 0xcc00
Parsed instruction at 8000BB00: subfic r0 r30 0x3
Parsed instruction at 8000BB04: lwz r29 0x6438(r4)
Parsed instruction at 8000BB08: slwi r0 r0 3
Parsed instruction at 8000BB0C: srw r29 r29 r0
Parsed instruction at 8000BB10: rlwinm. r0 r29 0 28 28
Parsed instruction at 8000BB14: beq .L_8000BB3C
Parsed instruction at 8000BB18: lis r4 Type_8001B09C@ha
Parsed instruction at 8000BB1C: slwi r5 r30 2
Parsed instruction at 8000BB20: addi r0 r4 Type_8001B09C@l
Parsed instruction at 8000BB24: add r4 r0 r5
Parsed instruction at 8000BB28: lwz r0 0x0(r4)
Parsed instruction at 8000BB2C: rlwinm. r0 r0 0 24 24
Parsed instruction at 8000BB30: bne .L_8000BB3C
Parsed instruction at 8000BB34: li r0 0x8
Parsed instruction at 8000BB38: stw r0 0x0(r4)
Parsed label: L_8000BB3C:
Parsed instruction at 8000BB3C: bl OSRestoreInterrupts
Parsed instruction at 8000BB40: rlwinm. r0 r29 0 26 26
Parsed instruction at 8000BB44: beq .L_8000BB88
Parsed instruction at 8000BB48: mulli r4 r30 0xc
Parsed instruction at 8000BB4C: lis r3 0xcc00
Parsed instruction at 8000BB50: addi r0 r3 0x6400
Parsed instruction at 8000BB54: add r3 r0 r4
Parsed instruction at 8000BB58: slwi r4 r30 3
Parsed instruction at 8000BB5C: lwz r0 0x4(r3)
Parsed instruction at 8000BB60: add r6 r31 r4
Parsed instruction at 8000BB64: stw r0 0x1c0(r6)
Parsed instruction at 8000BB68: slwi r0 r30 2
Parsed instruction at 8000BB6C: add r4 r31 r0
Parsed instruction at 8000BB70: lwz r5 0x8(r3)
Parsed instruction at 8000BB74: li r0 0x1
Parsed instruction at 8000BB78: li r3 0x1
Parsed instruction at 8000BB7C: stw r5 0x1c4(r6)
Parsed instruction at 8000BB80: stw r0 0x1b0(r4)
Parsed instruction at 8000BB84: b .L_8000BB8C
Parsed label: L_8000BB88:
Parsed instruction at 8000BB88: li r3 0x0
Parsed label: L_8000BB8C:
Parsed instruction at 8000BB8C: lwz r0 0x2c(r1)
Parsed instruction at 8000BB90: lwz r31 0x24(r1)
Parsed instruction at 8000BB94: lwz r30 0x20(r1)
Parsed instruction at 8000BB98: lwz r29 0x1c(r1)
Parsed instruction at 8000BB9C: addi r1 r1 0x28
Parsed instruction at 8000BBA0: mtlr r0
Parsed instruction at 8000BBA4: blr 
End of function: fn_8000BAD4, 56 instructions
Parsed function: fn_8000BBA8 at 0x8000BBA8
Parsed instruction at 8000BBA8: mflr r0
Parsed instruction at 8000BBAC: lis r4 lbl_8001C740@ha
Parsed instruction at 8000BBB0: stw r0 0x4(r1)
Parsed instruction at 8000BBB4: addi r0 r4 lbl_8001C740@l
Parsed instruction at 8000BBB8: lis r4 0x6666
Parsed instruction at 8000BBBC: subf r0 r0 r3
Parsed instruction at 8000BBC0: stwu r1 -0x20(r1)
Parsed instruction at 8000BBC4: addi r3 r4 0x6667
Parsed instruction at 8000BBC8: mulhw r0 r3 r0
Parsed instruction at 8000BBCC: stw r31 0x1c(r1)
Parsed instruction at 8000BBD0: srawi r0 r0 4
Parsed instruction at 8000BBD4: srwi r3 r0 31
Parsed instruction at 8000BBD8: add r0 r0 r3
Parsed instruction at 8000BBDC: lis r3 Packet_8001C6C0@ha
Parsed instruction at 8000BBE0: slwi r4 r0 5
Parsed instruction at 8000BBE4: addi r0 r3 Packet_8001C6C0@l
Parsed instruction at 8000BBE8: add r31 r0 r4
Parsed instruction at 8000BBEC: lwz r3 0x0(r31)
Parsed instruction at 8000BBF0: cmpwi r3 -0x1
Parsed instruction at 8000BBF4: beq .L_8000BC20
Parsed instruction at 8000BBF8: lwz r4 0x4(r31)
Parsed instruction at 8000BBFC: lwz r5 0x8(r31)
Parsed instruction at 8000BC00: lwz r6 0xc(r31)
Parsed instruction at 8000BC04: lwz r7 0x10(r31)
Parsed instruction at 8000BC08: lwz r8 0x14(r31)
Parsed instruction at 8000BC0C: bl fn_8000B85C
Parsed instruction at 8000BC10: cmpwi r3 0x0
Parsed instruction at 8000BC14: beq .L_8000BC20
Parsed instruction at 8000BC18: li r0 -0x1
Parsed instruction at 8000BC1C: stw r0 0x0(r31)
Parsed label: L_8000BC20:
Parsed instruction at 8000BC20: lwz r0 0x24(r1)
Parsed instruction at 8000BC24: lwz r31 0x1c(r1)
Parsed instruction at 8000BC28: addi r1 r1 0x20
Parsed instruction at 8000BC2C: mtlr r0
Parsed instruction at 8000BC30: blr 
End of function: fn_8000BBA8, 36 instructions
Parsed function: SITransfer at 0x8000BC34
Parsed instruction at 8000BC34: mflr r0
Parsed instruction at 8000BC38: stw r0 0x4(r1)
Parsed instruction at 8000BC3C: stwu r1 -0x60(r1)
Parsed instruction at 8000BC40: stmw r19 0x2c(r1)
Parsed instruction at 8000BC44: addi r24 r3 0x0
Parsed instruction at 8000BC48: lis r3 Packet_8001C6C0@ha
Parsed instruction at 8000BC4C: addi r23 r3 Packet_8001C6C0@l
Parsed instruction at 8000BC50: slwi r0 r24 5
Parsed instruction at 8000BC54: addi r25 r4 0x0
Parsed instruction at 8000BC58: addi r26 r5 0x0
Parsed instruction at 8000BC5C: addi r27 r6 0x0
Parsed instruction at 8000BC60: addi r28 r7 0x0
Parsed instruction at 8000BC64: addi r29 r8 0x0
Parsed instruction at 8000BC68: addi r31 r9 0x0
Parsed instruction at 8000BC6C: addi r30 r10 0x0
Parsed instruction at 8000BC70: add r22 r23 r0
Parsed instruction at 8000BC74: bl OSDisableInterrupts
Parsed instruction at 8000BC78: lwz r0 0x0(r22)
Parsed instruction at 8000BC7C: addi r21 r3 0x0
Parsed instruction at 8000BC80: cmpwi r0 -0x1
Parsed instruction at 8000BC84: bne .L_8000BC98
Parsed instruction at 8000BC88: lis r3 Si_8001B088@ha
Parsed instruction at 8000BC8C: lwz r0 Si_8001B088@l(r3)
Parsed instruction at 8000BC90: cmpw r0 r24
Parsed instruction at 8000BC94: bne .L_8000BCA8
Parsed label: L_8000BC98:
Parsed instruction at 8000BC98: mr r3 r21
Parsed instruction at 8000BC9C: bl OSRestoreInterrupts
Parsed instruction at 8000BCA0: li r3 0x0
Parsed instruction at 8000BCA4: b .L_8000BD8C
Parsed label: L_8000BCA8:
Parsed instruction at 8000BCA8: bl __OSGetSystemTime
Parsed instruction at 8000BCAC: li r0 0x0
Parsed instruction at 8000BCB0: xor r5 r30 r0
Parsed instruction at 8000BCB4: xor r0 r31 r0
Parsed instruction at 8000BCB8: or. r0 r5 r0
Parsed instruction at 8000BCBC: bne .L_8000BCCC
Parsed instruction at 8000BCC0: addi r19 r4 0x0
Parsed instruction at 8000BCC4: addi r20 r3 0x0
Parsed instruction at 8000BCC8: b .L_8000BCE4
Parsed label: L_8000BCCC:
Parsed instruction at 8000BCCC: slwi r0 r24 3
Parsed instruction at 8000BCD0: add r6 r23 r0
Parsed instruction at 8000BCD4: lwz r5 0x144(r6)
Parsed instruction at 8000BCD8: lwz r0 0x140(r6)
Parsed instruction at 8000BCDC: addc r19 r30 r5
Parsed instruction at 8000BCE0: adde r20 r31 r0
Parsed label: L_8000BCE4:
Parsed instruction at 8000BCE4: xoris r6 r3 0x8000
Parsed instruction at 8000BCE8: xoris r5 r20 0x8000
Parsed instruction at 8000BCEC: subfc r0 r19 r4
Parsed instruction at 8000BCF0: subfe r5 r5 r6
Parsed instruction at 8000BCF4: subfe r5 r6 r6
Parsed instruction at 8000BCF8: neg. r5 r5
Parsed instruction at 8000BCFC: beq .L_8000BD2C
Parsed instruction at 8000BD00: mulli r0 r24 0x28
Parsed instruction at 8000BD04: subfc r30 r4 r19
Parsed instruction at 8000BD08: subfe r31 r3 r20
Parsed instruction at 8000BD0C: lis r4 fn_8000BBA8@ha
Parsed instruction at 8000BD10: add r3 r23 r0
Parsed instruction at 8000BD14: addi r7 r4 fn_8000BBA8@l
Parsed instruction at 8000BD18: addi r6 r30 0x0
Parsed instruction at 8000BD1C: addi r5 r31 0x0
Parsed instruction at 8000BD20: addi r3 r3 0x80
Parsed instruction at 8000BD24: bl fn_80006220
Parsed instruction at 8000BD28: b .L_8000BD60
Parsed label: L_8000BD2C:
Parsed instruction at 8000BD2C: addi r3 r24 0x0
Parsed instruction at 8000BD30: addi r4 r25 0x0
Parsed instruction at 8000BD34: addi r5 r26 0x0
Parsed instruction at 8000BD38: addi r6 r27 0x0
Parsed instruction at 8000BD3C: addi r7 r28 0x0
Parsed instruction at 8000BD40: addi r8 r29 0x0
Parsed instruction at 8000BD44: bl fn_8000B85C
Parsed instruction at 8000BD48: cmpwi r3 0x0
Parsed instruction at 8000BD4C: beq .L_8000BD60
Parsed instruction at 8000BD50: mr r3 r21
Parsed instruction at 8000BD54: bl OSRestoreInterrupts
Parsed instruction at 8000BD58: li r3 0x1
Parsed instruction at 8000BD5C: b .L_8000BD8C
Parsed label: L_8000BD60:
Parsed instruction at 8000BD60: stw r24 0x0(r22)
Parsed instruction at 8000BD64: mr r3 r21
Parsed instruction at 8000BD68: stw r25 0x4(r22)
Parsed instruction at 8000BD6C: stw r26 0x8(r22)
Parsed instruction at 8000BD70: stw r27 0xc(r22)
Parsed instruction at 8000BD74: stw r28 0x10(r22)
Parsed instruction at 8000BD78: stw r29 0x14(r22)
Parsed instruction at 8000BD7C: stw r19 0x1c(r22)
Parsed instruction at 8000BD80: stw r20 0x18(r22)
Parsed instruction at 8000BD84: bl OSRestoreInterrupts
Parsed instruction at 8000BD88: li r3 0x1
Parsed label: L_8000BD8C:
Parsed instruction at 8000BD8C: lmw r19 0x2c(r1)
Parsed instruction at 8000BD90: lwz r0 0x64(r1)
Parsed instruction at 8000BD94: addi r1 r1 0x60
Parsed instruction at 8000BD98: mtlr r0
Parsed instruction at 8000BD9C: blr 
End of function: SITransfer, 98 instructions
Parsed function: GetTypeCallback at 0x8000BDA0
Parsed instruction at 8000BDA0: mflr r0
Parsed instruction at 8000BDA4: stw r0 0x4(r1)
Parsed instruction at 8000BDA8: stwu r1 -0x30(r1)
Parsed instruction at 8000BDAC: stmw r26 0x18(r1)
Parsed instruction at 8000BDB0: addi r27 r3 0x0
Parsed instruction at 8000BDB4: lis r3 Type_8001B09C@ha
Parsed instruction at 8000BDB8: addi r0 r3 Type_8001B09C@l
Parsed instruction at 8000BDBC: slwi r29 r27 2
Parsed instruction at 8000BDC0: add r30 r0 r29
Parsed instruction at 8000BDC4: lis r3 Packet_8001C6C0@ha
Parsed instruction at 8000BDC8: addi r26 r4 0x0
Parsed instruction at 8000BDCC: addi r31 r3 Packet_8001C6C0@l
Parsed instruction at 8000BDD0: lwz r0 0x0(r30)
Parsed instruction at 8000BDD4: rlwinm r0 r0 0 25 23
Parsed instruction at 8000BDD8: stw r0 0x0(r30)
Parsed instruction at 8000BDDC: lwz r0 0x0(r30)
Parsed instruction at 8000BDE0: or r0 r0 r26
Parsed instruction at 8000BDE4: stw r0 0x0(r30)
Parsed instruction at 8000BDE8: bl __OSGetSystemTime
Parsed instruction at 8000BDEC: slwi r0 r27 3
Parsed instruction at 8000BDF0: add r5 r31 r0
Parsed instruction at 8000BDF4: stw r4 0x124(r5)
Parsed instruction at 8000BDF8: lis r4 0x8000
Parsed instruction at 8000BDFC: clrlwi. r0 r26 28
Parsed instruction at 8000BE00: stw r3 0x120(r5)
Parsed instruction at 8000BE04: srw r4 r4 r27
Parsed instruction at 8000BE08: lwz r3 lbl_8001EF08@sda21(r0)
Parsed instruction at 8000BE0C: lwz r28 0x0(r30)
Parsed instruction at 8000BE10: andc r0 r3 r4
Parsed instruction at 8000BE14: stw r0 lbl_8001EF08@sda21(r0)
Parsed instruction at 8000BE18: and r26 r3 r4
Parsed instruction at 8000BE1C: bne .L_8000BE40
Parsed instruction at 8000BE20: rlwinm r3 r28 0 3 4
Parsed instruction at 8000BE24: subis r0 r3 0x800
Parsed instruction at 8000BE28: cmplwi r0 0x0
Parsed instruction at 8000BE2C: bne .L_8000BE40
Parsed instruction at 8000BE30: clrrwi. r0 r28 31
Parsed instruction at 8000BE34: beq .L_8000BE40
Parsed instruction at 8000BE38: rlwinm. r0 r28 0 5 5
Parsed instruction at 8000BE3C: beq .L_8000BE98
Parsed label: L_8000BE40:
Parsed instruction at 8000BE40: addi r3 r27 0x0
Parsed instruction at 8000BE44: li r4 0x0
Parsed instruction at 8000BE48: bl fn_80009158
Parsed instruction at 8000BE4C: slwi r0 r27 4
Parsed instruction at 8000BE50: lwz r30 0x0(r30)
Parsed instruction at 8000BE54: add r31 r31 r0
Parsed instruction at 8000BE58: li r29 0x0
Parsed instruction at 8000BE5C: addi r28 r29 0x0
Parsed instruction at 8000BE60: addi r31 r31 0x160
Parsed label: L_8000BE64:
Parsed instruction at 8000BE64: lwz r12 0x0(r31)
Parsed instruction at 8000BE68: cmplwi r12 0x0
Parsed instruction at 8000BE6C: beq .L_8000BE84
Parsed instruction at 8000BE70: stw r28 0x0(r31)
Parsed instruction at 8000BE74: mtlr r12
Parsed instruction at 8000BE78: addi r3 r27 0x0
Parsed instruction at 8000BE7C: addi r4 r30 0x0
Parsed instruction at 8000BE80: blrl 
Parsed label: L_8000BE84:
Parsed instruction at 8000BE84: addi r29 r29 0x1
Parsed instruction at 8000BE88: cmpwi r29 0x4
Parsed instruction at 8000BE8C: addi r31 r31 0x4
Parsed instruction at 8000BE90: blt .L_8000BE64
Parsed instruction at 8000BE94: b .L_8000C024
Parsed label: L_8000BE98:
Parsed instruction at 8000BE98: mr r3 r27
Parsed instruction at 8000BE9C: bl fn_800090D4
Parsed instruction at 8000BEA0: cmpwi r26 0x0
Parsed instruction at 8000BEA4: clrlslwi r26 r3 16 8
Parsed instruction at 8000BEA8: beq .L_8000BEFC
Parsed instruction at 8000BEAC: rlwinm. r0 r26 0 11 11
Parsed instruction at 8000BEB0: beq .L_8000BEFC
Parsed instruction at 8000BEB4: lis r3 0xd0
Parsed instruction at 8000BEB8: subi r0 r3 0x100
Parsed instruction at 8000BEBC: and r0 r26 r0
Parsed instruction at 8000BEC0: oris r0 r0 0x4e10
Parsed instruction at 8000BEC4: add r4 r31 r29
Parsed instruction at 8000BEC8: stwu r0 0x1f0(r4)
Parsed instruction at 8000BECC: li r0 0x80
Parsed instruction at 8000BED0: lis r3 GetTypeCallback@ha
Parsed instruction at 8000BED4: stw r0 0x0(r30)
Parsed instruction at 8000BED8: addi r8 r3 GetTypeCallback@l
Parsed instruction at 8000BEDC: addi r3 r27 0x0
Parsed instruction at 8000BEE0: addi r6 r30 0x0
Parsed instruction at 8000BEE4: li r5 0x3
Parsed instruction at 8000BEE8: li r7 0x3
Parsed instruction at 8000BEEC: li r10 0x0
Parsed instruction at 8000BEF0: li r9 0x0
Parsed instruction at 8000BEF4: bl SITransfer
Parsed instruction at 8000BEF8: b .L_8000C024
Parsed label: L_8000BEFC:
Parsed instruction at 8000BEFC: rlwinm. r0 r28 0 11 11
Parsed instruction at 8000BF00: beq .L_8000BF70
Parsed instruction at 8000BF04: lis r3 0xd0
Parsed instruction at 8000BF08: subi r3 r3 0x100
Parsed instruction at 8000BF0C: and r0 r26 r3
Parsed instruction at 8000BF10: and r3 r28 r3
Parsed instruction at 8000BF14: cmplw r0 r3
Parsed instruction at 8000BF18: beq .L_8000BFDC
Parsed instruction at 8000BF1C: rlwinm. r0 r26 0 11 11
Parsed instruction at 8000BF20: bne .L_8000BF34
Parsed instruction at 8000BF24: oris r26 r3 0x10
Parsed instruction at 8000BF28: addi r3 r27 0x0
Parsed instruction at 8000BF2C: extrwi r4 r26 16 8
Parsed instruction at 8000BF30: bl fn_80009158
Parsed label: L_8000BF34:
Parsed instruction at 8000BF34: oris r0 r26 0x4e00
Parsed instruction at 8000BF38: add r4 r31 r29
Parsed instruction at 8000BF3C: stwu r0 0x1f0(r4)
Parsed instruction at 8000BF40: li r0 0x80
Parsed instruction at 8000BF44: lis r3 GetTypeCallback@ha
Parsed instruction at 8000BF48: stw r0 0x0(r30)
Parsed instruction at 8000BF4C: addi r8 r3 GetTypeCallback@l
Parsed instruction at 8000BF50: addi r3 r27 0x0
Parsed instruction at 8000BF54: addi r6 r30 0x0
Parsed instruction at 8000BF58: li r5 0x3
Parsed instruction at 8000BF5C: li r7 0x3
Parsed instruction at 8000BF60: li r10 0x0
Parsed instruction at 8000BF64: li r9 0x0
Parsed instruction at 8000BF68: bl SITransfer
Parsed instruction at 8000BF6C: b .L_8000C024
Parsed label: L_8000BF70:
Parsed instruction at 8000BF70: rlwinm. r0 r28 0 1 1
Parsed instruction at 8000BF74: beq .L_8000BFD0
Parsed instruction at 8000BF78: lis r3 0xd0
Parsed instruction at 8000BF7C: subi r0 r3 0x100
Parsed instruction at 8000BF80: and r28 r28 r0
Parsed instruction at 8000BF84: oris r28 r28 0x10
Parsed instruction at 8000BF88: addi r3 r27 0x0
Parsed instruction at 8000BF8C: extrwi r4 r28 16 8
Parsed instruction at 8000BF90: bl fn_80009158
Parsed instruction at 8000BF94: oris r0 r28 0x4e00
Parsed instruction at 8000BF98: add r4 r31 r29
Parsed instruction at 8000BF9C: stwu r0 0x1f0(r4)
Parsed instruction at 8000BFA0: li r0 0x80
Parsed instruction at 8000BFA4: lis r3 GetTypeCallback@ha
Parsed instruction at 8000BFA8: stw r0 0x0(r30)
Parsed instruction at 8000BFAC: addi r8 r3 GetTypeCallback@l
Parsed instruction at 8000BFB0: addi r3 r27 0x0
Parsed instruction at 8000BFB4: addi r6 r30 0x0
Parsed instruction at 8000BFB8: li r5 0x3
Parsed instruction at 8000BFBC: li r7 0x3
Parsed instruction at 8000BFC0: li r10 0x0
Parsed instruction at 8000BFC4: li r9 0x0
Parsed instruction at 8000BFC8: bl SITransfer
Parsed instruction at 8000BFCC: b .L_8000C024
Parsed label: L_8000BFD0:
Parsed instruction at 8000BFD0: addi r3 r27 0x0
Parsed instruction at 8000BFD4: li r4 0x0
Parsed instruction at 8000BFD8: bl fn_80009158
Parsed label: L_8000BFDC:
Parsed instruction at 8000BFDC: slwi r0 r27 4
Parsed instruction at 8000BFE0: lwz r30 0x0(r30)
Parsed instruction at 8000BFE4: add r31 r31 r0
Parsed instruction at 8000BFE8: li r29 0x0
Parsed instruction at 8000BFEC: addi r28 r29 0x0
Parsed instruction at 8000BFF0: addi r31 r31 0x160
Parsed label: L_8000BFF4:
Parsed instruction at 8000BFF4: lwz r12 0x0(r31)
Parsed instruction at 8000BFF8: cmplwi r12 0x0
Parsed instruction at 8000BFFC: beq .L_8000C014
Parsed instruction at 8000C000: stw r28 0x0(r31)
Parsed instruction at 8000C004: mtlr r12
Parsed instruction at 8000C008: addi r3 r27 0x0
Parsed instruction at 8000C00C: addi r4 r30 0x0
Parsed instruction at 8000C010: blrl 
Parsed label: L_8000C014:
Parsed instruction at 8000C014: addi r29 r29 0x1
Parsed instruction at 8000C018: cmpwi r29 0x4
Parsed instruction at 8000C01C: addi r31 r31 0x4
Parsed instruction at 8000C020: blt .L_8000BFF4
Parsed label: L_8000C024:
Parsed instruction at 8000C024: lmw r26 0x18(r1)
Parsed instruction at 8000C028: lwz r0 0x34(r1)
Parsed instruction at 8000C02C: addi r1 r1 0x30
Parsed instruction at 8000C030: mtlr r0
Parsed instruction at 8000C034: blr 
End of function: GetTypeCallback, 178 instructions
Parsed function: SIGetType at 0x8000C038
Parsed instruction at 8000C038: mflr r0
Parsed instruction at 8000C03C: stw r0 0x4(r1)
Parsed instruction at 8000C040: stwu r1 -0x28(r1)
Parsed instruction at 8000C044: stmw r27 0x14(r1)
Parsed instruction at 8000C048: mr r27 r3
Parsed instruction at 8000C04C: bl OSDisableInterrupts
Parsed instruction at 8000C050: lis r4 Type_8001B09C@ha
Parsed instruction at 8000C054: slwi r5 r27 2
Parsed instruction at 8000C058: addi r0 r4 Type_8001B09C@l
Parsed instruction at 8000C05C: add r30 r0 r5
Parsed instruction at 8000C060: lwz r28 0x0(r30)
Parsed instruction at 8000C064: mr r29 r3
Parsed instruction at 8000C068: bl __OSGetSystemTime
Parsed instruction at 8000C06C: lis r5 TypeTime_8001C7E0@ha
Parsed instruction at 8000C070: slwi r6 r27 3
Parsed instruction at 8000C074: addi r0 r5 TypeTime_8001C7E0@l
Parsed instruction at 8000C078: add r31 r0 r6
Parsed instruction at 8000C07C: lwz r6 0x4(r31)
Parsed instruction at 8000C080: lis r5 Si_8001B088@ha
Parsed instruction at 8000C084: addi r5 r5 Si_8001B088@l
Parsed instruction at 8000C088: lwz r0 0x0(r31)
Parsed instruction at 8000C08C: subfc r4 r6 r4
Parsed instruction at 8000C090: subfe r0 r0 r3
Parsed instruction at 8000C094: lwz r6 0x4(r5)
Parsed instruction at 8000C098: li r5 0x80
Parsed instruction at 8000C09C: sraw r3 r5 r27
Parsed instruction at 8000C0A0: and. r3 r6 r3
Parsed instruction at 8000C0A4: beq .L_8000C0D8
Parsed instruction at 8000C0A8: cmplwi r28 0x8
Parsed instruction at 8000C0AC: beq .L_8000C0CC
Parsed instruction at 8000C0B0: bl __OSGetSystemTime
Parsed instruction at 8000C0B4: stw r4 0x4(r31)
Parsed instruction at 8000C0B8: stw r3 0x0(r31)
Parsed instruction at 8000C0BC: mr r3 r29
Parsed instruction at 8000C0C0: bl OSRestoreInterrupts
Parsed instruction at 8000C0C4: mr r3 r28
Parsed instruction at 8000C0C8: b .L_8000C1E8
Parsed label: L_8000C0CC:
Parsed instruction at 8000C0CC: stw r5 0x0(r30)
Parsed instruction at 8000C0D0: li r28 0x80
Parsed instruction at 8000C0D4: b .L_8000C188
Parsed label: L_8000C0D8:
Parsed instruction at 8000C0D8: lis r3 0x8000
Parsed instruction at 8000C0DC: lwz r6 0xf8(r3)
Parsed instruction at 8000C0E0: lis r5 0x1062
Parsed instruction at 8000C0E4: addi r5 r5 0x4dd3
Parsed instruction at 8000C0E8: srwi r6 r6 2
Parsed instruction at 8000C0EC: mulhwu r5 r5 r6
Parsed instruction at 8000C0F0: srwi r5 r5 6
Parsed instruction at 8000C0F4: mulli r7 r5 0x32
Parsed instruction at 8000C0F8: li r3 0x0
Parsed instruction at 8000C0FC: xoris r6 r3 0x8000
Parsed instruction at 8000C100: xoris r5 r0 0x8000
Parsed instruction at 8000C104: subfc r3 r4 r7
Parsed instruction at 8000C108: subfe r5 r5 r6
Parsed instruction at 8000C10C: subfe r5 r6 r6
Parsed instruction at 8000C110: neg. r5 r5
Parsed instruction at 8000C114: bne .L_8000C130
Parsed instruction at 8000C118: cmplwi r28 0x8
Parsed instruction at 8000C11C: beq .L_8000C130
Parsed instruction at 8000C120: mr r3 r29
Parsed instruction at 8000C124: bl OSRestoreInterrupts
Parsed instruction at 8000C128: mr r3 r28
Parsed instruction at 8000C12C: b .L_8000C1E8
Parsed label: L_8000C130:
Parsed instruction at 8000C130: lis r3 0x8000
Parsed instruction at 8000C134: lwz r6 0xf8(r3)
Parsed instruction at 8000C138: lis r5 0x1062
Parsed instruction at 8000C13C: addi r5 r5 0x4dd3
Parsed instruction at 8000C140: srwi r6 r6 2
Parsed instruction at 8000C144: mulhwu r5 r5 r6
Parsed instruction at 8000C148: srwi r5 r5 6
Parsed instruction at 8000C14C: mulli r6 r5 0x4b
Parsed instruction at 8000C150: li r3 0x0
Parsed instruction at 8000C154: xoris r5 r3 0x8000
Parsed instruction at 8000C158: xoris r3 r0 0x8000
Parsed instruction at 8000C15C: subfc r0 r4 r6
Parsed instruction at 8000C160: subfe r3 r3 r5
Parsed instruction at 8000C164: subfe r3 r5 r5
Parsed instruction at 8000C168: neg. r3 r3
Parsed instruction at 8000C16C: bne .L_8000C17C
Parsed instruction at 8000C170: li r0 0x80
Parsed instruction at 8000C174: stw r0 0x0(r30)
Parsed instruction at 8000C178: b .L_8000C188
Parsed label: L_8000C17C:
Parsed instruction at 8000C17C: li r0 0x80
Parsed instruction at 8000C180: stw r0 0x0(r30)
Parsed instruction at 8000C184: li r28 0x80
Parsed label: L_8000C188:
Parsed instruction at 8000C188: bl __OSGetSystemTime
Parsed instruction at 8000C18C: stw r4 0x4(r31)
Parsed instruction at 8000C190: lis r4 0x431c
Parsed instruction at 8000C194: lis r5 GetTypeCallback@ha
Parsed instruction at 8000C198: stw r3 0x0(r31)
Parsed instruction at 8000C19C: lis r3 0x8000
Parsed instruction at 8000C1A0: addi r8 r5 GetTypeCallback@l
Parsed instruction at 8000C1A4: lwz r0 0xf8(r3)
Parsed instruction at 8000C1A8: subi r4 r4 0x217d
Parsed instruction at 8000C1AC: addi r3 r27 0x0
Parsed instruction at 8000C1B0: srwi r0 r0 2
Parsed instruction at 8000C1B4: mulhwu r0 r4 r0
Parsed instruction at 8000C1B8: srwi r0 r0 15
Parsed instruction at 8000C1BC: mulli r0 r0 0x41
Parsed instruction at 8000C1C0: srwi r10 r0 3
Parsed instruction at 8000C1C4: addi r6 r30 0x0
Parsed instruction at 8000C1C8: li r4 cmdTypeAndStatus$371_8001EF04@sda21
Parsed instruction at 8000C1CC: li r5 0x1
Parsed instruction at 8000C1D0: li r7 0x3
Parsed instruction at 8000C1D4: li r9 0x0
Parsed instruction at 8000C1D8: bl SITransfer
Parsed instruction at 8000C1DC: mr r3 r29
Parsed instruction at 8000C1E0: bl OSRestoreInterrupts
Parsed instruction at 8000C1E4: mr r3 r28
Parsed label: L_8000C1E8:
Parsed instruction at 8000C1E8: lmw r27 0x14(r1)
Parsed instruction at 8000C1EC: lwz r0 0x2c(r1)
Parsed instruction at 8000C1F0: addi r1 r1 0x28
Parsed instruction at 8000C1F4: mtlr r0
Parsed instruction at 8000C1F8: blr 
End of function: SIGetType, 119 instructions
Parsed function: SISetSamplingRate at 0x8000C1FC
Parsed instruction at 8000C1FC: mflr r0
Parsed instruction at 8000C200: stw r0 0x4(r1)
Parsed instruction at 8000C204: stwu r1 -0x20(r1)
Parsed instruction at 8000C208: stw r31 0x1c(r1)
Parsed instruction at 8000C20C: stw r30 0x18(r1)
Parsed instruction at 8000C210: stw r29 0x14(r1)
Parsed instruction at 8000C214: addi r29 r3 0x0
Parsed instruction at 8000C218: cmplwi r29 0xb
Parsed instruction at 8000C21C: lis r3 XYNTSC_8001B158@ha
Parsed instruction at 8000C220: addi r31 r3 XYNTSC_8001B158@l
Parsed instruction at 8000C224: ble .L_8000C22C
Parsed instruction at 8000C228: li r29 0xb
Parsed label: L_8000C22C:
Parsed instruction at 8000C22C: bl OSDisableInterrupts
Parsed instruction at 8000C230: stw r29 SamplingRate_8001EF10@sda21(r0)
Parsed instruction at 8000C234: mr r30 r3
Parsed instruction at 8000C238: bl VIGetTvFormat
Parsed instruction at 8000C23C: cmpwi r3 0x2
Parsed instruction at 8000C240: beq .L_8000C264
Parsed instruction at 8000C244: bge .L_8000C258
Parsed instruction at 8000C248: cmpwi r3 0x0
Parsed instruction at 8000C24C: beq .L_8000C264
Parsed instruction at 8000C250: bge .L_8000C26C
Parsed instruction at 8000C254: b .L_8000C274
Parsed label: L_8000C258:
Parsed instruction at 8000C258: cmpwi r3 0x5
Parsed instruction at 8000C25C: beq .L_8000C264
Parsed instruction at 8000C260: b .L_8000C274
Parsed label: L_8000C264:
Parsed instruction at 8000C264: mr r4 r31
Parsed instruction at 8000C268: b .L_8000C288
Parsed label: L_8000C26C:
Parsed instruction at 8000C26C: addi r4 r31 0x30
Parsed instruction at 8000C270: b .L_8000C288
Parsed label: L_8000C274:
Parsed instruction at 8000C274: addi r3 r31 0x60
Parsed instruction at 8000C278: crclr cr1eq
Parsed instruction at 8000C27C: bl OSReport
Parsed instruction at 8000C280: li r29 0x0
Parsed instruction at 8000C284: addi r4 r31 0x0
Parsed label: L_8000C288:
Parsed instruction at 8000C288: lis r3 0xcc00
Parsed instruction at 8000C28C: lhz r0 0x206c(r3)
Parsed instruction at 8000C290: clrlwi. r0 r0 31
Parsed instruction at 8000C294: beq .L_8000C2A0
Parsed instruction at 8000C298: li r5 0x2
Parsed instruction at 8000C29C: b .L_8000C2A4
Parsed label: L_8000C2A0:
Parsed instruction at 8000C2A0: li r5 0x1
Parsed label: L_8000C2A4:
Parsed instruction at 8000C2A4: slwi r3 r29 2
Parsed instruction at 8000C2A8: lhzx r0 r4 r3
Parsed instruction at 8000C2AC: add r3 r4 r3
Parsed instruction at 8000C2B0: lbz r4 0x2(r3)
Parsed instruction at 8000C2B4: mullw r3 r5 r0
Parsed instruction at 8000C2B8: bl SISetXY
Parsed instruction at 8000C2BC: mr r3 r30
Parsed instruction at 8000C2C0: bl OSRestoreInterrupts
Parsed instruction at 8000C2C4: lwz r0 0x24(r1)
Parsed instruction at 8000C2C8: lwz r31 0x1c(r1)
Parsed instruction at 8000C2CC: lwz r30 0x18(r1)
Parsed instruction at 8000C2D0: lwz r29 0x14(r1)
Parsed instruction at 8000C2D4: addi r1 r1 0x20
Parsed instruction at 8000C2D8: mtlr r0
Parsed instruction at 8000C2DC: blr 
End of function: SISetSamplingRate, 65 instructions
Parsed function: fn_8000C2E0 at 0x8000C2E0
Parsed instruction at 8000C2E0: mflr r0
Parsed instruction at 8000C2E4: stw r0 0x4(r1)
Parsed instruction at 8000C2E8: stwu r1 -0x8(r1)
Parsed instruction at 8000C2EC: lwz r3 SamplingRate_8001EF10@sda21(r0)
Parsed instruction at 8000C2F0: bl SISetSamplingRate
Parsed instruction at 8000C2F4: lwz r0 0xc(r1)
Parsed instruction at 8000C2F8: addi r1 r1 0x8
Parsed instruction at 8000C2FC: mtlr r0
Parsed instruction at 8000C300: blr 
End of function: fn_8000C2E0, 9 instructions
Parsed function: DBInit at 0x8000C304
Parsed instruction at 8000C304: lis r4 0x8000
Parsed instruction at 8000C308: addi r0 r4 0x40
Parsed instruction at 8000C30C: lis r3 __DBExceptionDestination@ha
Parsed instruction at 8000C310: stw r0 __DBInterface@sda21(r0)
Parsed instruction at 8000C314: addi r3 r3 __DBExceptionDestination@l
Parsed instruction at 8000C318: addis r0 r3 0x8000
Parsed instruction at 8000C31C: stw r0 0x48(r4)
Parsed instruction at 8000C320: li r0 0x1
Parsed instruction at 8000C324: stw r0 DBVerbose@sda21(r0)
Parsed instruction at 8000C328: blr 
End of function: DBInit, 10 instructions
Parsed function: fn_8000C32C at 0x8000C32C
Parsed instruction at 8000C32C: mflr r0
Parsed instruction at 8000C330: lis r3 lbl_8001B1F0@ha
Parsed instruction at 8000C334: stw r0 0x4(r1)
Parsed instruction at 8000C338: addi r3 r3 lbl_8001B1F0@l
Parsed instruction at 8000C33C: crclr cr1eq
Parsed instruction at 8000C340: stwu r1 -0x18(r1)
Parsed instruction at 8000C344: stw r31 0x14(r1)
Parsed instruction at 8000C348: lwz r4 0xc0(r0)
Parsed instruction at 8000C34C: addis r31 r4 0x8000
Parsed instruction at 8000C350: bl OSReport
Parsed instruction at 8000C354: mr r3 r31
Parsed instruction at 8000C358: bl OSDumpContext
Parsed instruction at 8000C35C: bl PPCHalt
Parsed instruction at 8000C360: lwz r0 0x1c(r1)
Parsed instruction at 8000C364: lwz r31 0x14(r1)
Parsed instruction at 8000C368: addi r1 r1 0x18
Parsed instruction at 8000C36C: mtlr r0
Parsed instruction at 8000C370: blr 
End of function: fn_8000C32C, 18 instructions
Parsed function: __DBExceptionDestination at 0x8000C374
Parsed instruction at 8000C374: mfmsr r3
Parsed instruction at 8000C378: ori r3 r3 0x30
Parsed instruction at 8000C37C: mtmsr r3
Parsed instruction at 8000C380: b fn_8000C32C
End of function: __DBExceptionDestination, 4 instructions
Parsed function: __DBIsExceptionMarked at 0x8000C384
Parsed instruction at 8000C384: lwz r4 __DBInterface@sda21(r0)
Parsed instruction at 8000C388: clrlwi r0 r3 24
Parsed instruction at 8000C38C: li r3 0x1
Parsed instruction at 8000C390: lwz r4 0x4(r4)
Parsed instruction at 8000C394: slw r0 r3 r0
Parsed instruction at 8000C398: and r3 r4 r0
Parsed instruction at 8000C39C: blr 
End of function: __DBIsExceptionMarked, 7 instructions
Parsed function: DBPrintf at 0x8000C3A0
Parsed instruction at 8000C3A0: stwu r1 -0x70(r1)
Parsed instruction at 8000C3A4: bne cr1 .L_8000C3C8
Parsed instruction at 8000C3A8: stfd f1 0x28(r1)
Parsed instruction at 8000C3AC: stfd f2 0x30(r1)
Parsed instruction at 8000C3B0: stfd f3 0x38(r1)
Parsed instruction at 8000C3B4: stfd f4 0x40(r1)
Parsed instruction at 8000C3B8: stfd f5 0x48(r1)
Parsed instruction at 8000C3BC: stfd f6 0x50(r1)
Parsed instruction at 8000C3C0: stfd f7 0x58(r1)
Parsed instruction at 8000C3C4: stfd f8 0x60(r1)
Parsed label: L_8000C3C8:
Parsed instruction at 8000C3C8: stw r3 0x8(r1)
Parsed instruction at 8000C3CC: stw r4 0xc(r1)
Parsed instruction at 8000C3D0: stw r5 0x10(r1)
Parsed instruction at 8000C3D4: stw r6 0x14(r1)
Parsed instruction at 8000C3D8: stw r7 0x18(r1)
Parsed instruction at 8000C3DC: stw r8 0x1c(r1)
Parsed instruction at 8000C3E0: stw r9 0x20(r1)
Parsed instruction at 8000C3E4: stw r10 0x24(r1)
Parsed instruction at 8000C3E8: addi r1 r1 0x70
Parsed instruction at 8000C3EC: blr 
End of function: DBPrintf, 21 instructions
Parsed function: fn_8000C3F0 at 0x8000C3F0
Parsed instruction at 8000C3F0: mflr r0
Parsed instruction at 8000C3F4: lis r3 lbl_8001C8C0@ha
Parsed instruction at 8000C3F8: stw r0 0x4(r1)
Parsed instruction at 8000C3FC: li r0 0x0
Parsed instruction at 8000C400: li r4 0x0
Parsed instruction at 8000C404: stwu r1 -0x8(r1)
Parsed instruction at 8000C408: stw r0 lbl_8001EF64@sda21(r0)
Parsed instruction at 8000C40C: li r0 -0x1
Parsed instruction at 8000C410: stw r0 lbl_8001C8C0@l(r3)
Parsed instruction at 8000C414: li r3 0x0
Parsed instruction at 8000C418: bl fn_8000D200
Parsed instruction at 8000C41C: bl OSInitAlarm
Parsed instruction at 8000C420: lwz r0 0xc(r1)
Parsed instruction at 8000C424: addi r1 r1 0x8
Parsed instruction at 8000C428: mtlr r0
Parsed instruction at 8000C42C: blr 
End of function: fn_8000C3F0, 16 instructions
Parsed function: fn_8000C430 at 0x8000C430
Parsed instruction at 8000C430: mflr r0
Parsed instruction at 8000C434: lis r3 lbl_8001C8C0@ha
Parsed instruction at 8000C438: stw r0 0x4(r1)
Parsed instruction at 8000C43C: stwu r1 -0x2e8(r1)
Parsed instruction at 8000C440: stw r31 0x2e4(r1)
Parsed instruction at 8000C444: stw r30 0x2e0(r1)
Parsed instruction at 8000C448: addi r30 r3 lbl_8001C8C0@l
Parsed instruction at 8000C44C: addi r3 r30 0x68
Parsed instruction at 8000C450: stw r29 0x2dc(r1)
Parsed instruction at 8000C454: li r29 0x0
Parsed instruction at 8000C458: stw r28 0x2d8(r1)
Parsed instruction at 8000C45C: addi r28 r4 0x0
Parsed instruction at 8000C460: bl fn_80006288
Parsed instruction at 8000C464: lwz r0 lbl_8001EF60@sda21(r0)
Parsed instruction at 8000C468: cmpwi r0 0x0
Parsed instruction at 8000C46C: beq .L_8000C4AC
Parsed instruction at 8000C470: bl __OSGetSystemTime
Parsed instruction at 8000C474: stw r4 lbl_8001EF54@sda21(r0)
Parsed instruction at 8000C478: li r0 0x0
Parsed instruction at 8000C47C: stw r3 lbl_8001EF50@sda21(r0)
Parsed instruction at 8000C480: stw r0 lbl_8001EE18@sda21(r0)
Parsed instruction at 8000C484: lwz r0 0xc4(r30)
Parsed instruction at 8000C488: stw r0 0xb8(r30)
Parsed instruction at 8000C48C: lwz r0 0xc8(r30)
Parsed instruction at 8000C490: stw r0 0xbc(r30)
Parsed instruction at 8000C494: lwz r0 0xcc(r30)
Parsed instruction at 8000C498: stw r0 0xc0(r30)
Parsed instruction at 8000C49C: lwz r0 lbl_8001EF20@sda21(r0)
Parsed instruction at 8000C4A0: cmpwi r0 0x1
Parsed instruction at 8000C4A4: bne .L_8000C4AC
Parsed instruction at 8000C4A8: ori r29 r29 0x8
Parsed label: L_8000C4AC:
Parsed instruction at 8000C4AC: li r0 0x0
Parsed instruction at 8000C4B0: stw r0 lbl_8001EF60@sda21(r0)
Parsed instruction at 8000C4B4: lis r3 0xcc00
Parsed instruction at 8000C4B8: stw r0 lbl_8001EF20@sda21(r0)
Parsed instruction at 8000C4BC: lwz r0 0x6000(r3)
Parsed instruction at 8000C4C0: andi. r4 r0 0x2a
Parsed instruction at 8000C4C4: andi. r3 r0 0x54
Parsed instruction at 8000C4C8: slwi r0 r4 1
Parsed instruction at 8000C4CC: and r3 r3 r0
Parsed instruction at 8000C4D0: rlwinm. r0 r3 0 25 25
Parsed instruction at 8000C4D4: beq .L_8000C4DC
Parsed instruction at 8000C4D8: ori r29 r29 0x8
Parsed label: L_8000C4DC:
Parsed instruction at 8000C4DC: rlwinm. r0 r3 0 27 27
Parsed instruction at 8000C4E0: beq .L_8000C4E8
Parsed instruction at 8000C4E4: ori r29 r29 0x1
Parsed label: L_8000C4E8:
Parsed instruction at 8000C4E8: rlwinm. r0 r3 0 29 29
Parsed instruction at 8000C4EC: beq .L_8000C4F4
Parsed instruction at 8000C4F0: ori r29 r29 0x2
Parsed label: L_8000C4F4:
Parsed instruction at 8000C4F4: cmplwi r29 0x0
Parsed instruction at 8000C4F8: beq .L_8000C504
Parsed instruction at 8000C4FC: li r0 0x0
Parsed instruction at 8000C500: stw r0 lbl_8001EF38@sda21(r0)
Parsed label: L_8000C504:
Parsed instruction at 8000C504: or r0 r3 r4
Parsed instruction at 8000C508: lis r31 0xcc00
Parsed instruction at 8000C50C: stw r0 0x6000(r31)
Parsed instruction at 8000C510: lwz r0 lbl_8001EF38@sda21(r0)
Parsed instruction at 8000C514: cmplwi r0 0x0
Parsed instruction at 8000C518: beq .L_8000C5B4
Parsed instruction at 8000C51C: bl __OSGetSystemTime
Parsed instruction at 8000C520: lis r5 0x8000
Parsed instruction at 8000C524: lwz r7 lbl_8001EF30@sda21(r0)
Parsed instruction at 8000C528: lwz r6 0xf8(r5)
Parsed instruction at 8000C52C: lis r5 0x1062
Parsed instruction at 8000C530: addi r5 r5 0x4dd3
Parsed instruction at 8000C534: lwz r8 lbl_8001EF34@sda21(r0)
Parsed instruction at 8000C538: srwi r6 r6 2
Parsed instruction at 8000C53C: mulhwu r5 r5 r6
Parsed instruction at 8000C540: srwi r5 r5 6
Parsed instruction at 8000C544: mulli r5 r5 0xc8
Parsed instruction at 8000C548: subfc r6 r8 r4
Parsed instruction at 8000C54C: subfe r3 r7 r3
Parsed instruction at 8000C550: li r0 0x0
Parsed instruction at 8000C554: xoris r4 r3 0x8000
Parsed instruction at 8000C558: xoris r3 r0 0x8000
Parsed instruction at 8000C55C: subfc r0 r5 r6
Parsed instruction at 8000C560: subfe r3 r3 r4
Parsed instruction at 8000C564: subfe r3 r4 r4
Parsed instruction at 8000C568: neg. r3 r3
Parsed instruction at 8000C56C: beq .L_8000C5B4
Parsed instruction at 8000C570: lwzu r0 0x6004(r31)
Parsed instruction at 8000C574: rlwinm r3 r0 0 29 29
Parsed instruction at 8000C578: rlwinm r0 r0 1 29 29
Parsed instruction at 8000C57C: and r0 r3 r0
Parsed instruction at 8000C580: rlwinm. r0 r0 0 29 29
Parsed instruction at 8000C584: beq .L_8000C5A8
Parsed instruction at 8000C588: lwz r12 lbl_8001EF2C@sda21(r0)
Parsed instruction at 8000C58C: cmplwi r12 0x0
Parsed instruction at 8000C590: beq .L_8000C5A0
Parsed instruction at 8000C594: mtlr r12
Parsed instruction at 8000C598: li r3 0x4
Parsed instruction at 8000C59C: blrl 
Parsed label: L_8000C5A0:
Parsed instruction at 8000C5A0: li r0 0x0
Parsed instruction at 8000C5A4: stw r0 lbl_8001EF2C@sda21(r0)
Parsed label: L_8000C5A8:
Parsed instruction at 8000C5A8: lwz r0 0x0(r31)
Parsed instruction at 8000C5AC: stw r0 0x0(r31)
Parsed instruction at 8000C5B0: b .L_8000C608
Parsed label: L_8000C5B4:
Parsed instruction at 8000C5B4: lwz r0 lbl_8001EF3C@sda21(r0)
Parsed instruction at 8000C5B8: cmpwi r0 0x0
Parsed instruction at 8000C5BC: beq .L_8000C5FC
Parsed instruction at 8000C5C0: lis r3 0xcc00
Parsed instruction at 8000C5C4: addi r5 r3 0x6000
Parsed instruction at 8000C5C8: lwzu r0 0x4(r5)
Parsed instruction at 8000C5CC: rlwinm r4 r0 0 30 30
Parsed instruction at 8000C5D0: rlwinm r3 r0 0 29 29
Parsed instruction at 8000C5D4: rlwinm r0 r0 1 29 29
Parsed instruction at 8000C5D8: and r3 r3 r0
Parsed instruction at 8000C5DC: rlwinm. r0 r3 0 29 29
Parsed instruction at 8000C5E0: beq .L_8000C5E8
Parsed instruction at 8000C5E4: ori r29 r29 0x4
Parsed label: L_8000C5E8:
Parsed instruction at 8000C5E8: or r0 r3 r4
Parsed instruction at 8000C5EC: stw r0 0x0(r5)
Parsed instruction at 8000C5F0: li r0 0x0
Parsed instruction at 8000C5F4: stw r0 lbl_8001EF3C@sda21(r0)
Parsed instruction at 8000C5F8: b .L_8000C608
Parsed label: L_8000C5FC:
Parsed instruction at 8000C5FC: lis r3 0xcc00
Parsed instruction at 8000C600: li r0 0x0
Parsed instruction at 8000C604: stw r0 0x6004(r3)
Parsed label: L_8000C608:
Parsed instruction at 8000C608: rlwinm. r0 r29 0 28 28
Parsed instruction at 8000C60C: beq .L_8000C620
Parsed instruction at 8000C610: lwz r0 lbl_8001EF40@sda21(r0)
Parsed instruction at 8000C614: cmpwi r0 0x0
Parsed instruction at 8000C618: bne .L_8000C620
Parsed instruction at 8000C61C: rlwinm r29 r29 0 29 27
Parsed label: L_8000C620:
Parsed instruction at 8000C620: clrlwi. r0 r29 31
Parsed instruction at 8000C624: beq .L_8000C6A4
Parsed instruction at 8000C628: lwz r0 lbl_8001EF64@sda21(r0)
Parsed instruction at 8000C62C: mulli r0 r0 0x14
Parsed instruction at 8000C630: lwzx r3 r30 r0
Parsed instruction at 8000C634: cmpwi r3 0x1
Parsed instruction at 8000C638: bne .L_8000C668
Parsed instruction at 8000C63C: lwz r3 lbl_8001EF64@sda21(r0)
Parsed instruction at 8000C640: add r6 r30 r0
Parsed instruction at 8000C644: addi r0 r3 0x1
Parsed instruction at 8000C648: stw r0 lbl_8001EF64@sda21(r0)
Parsed instruction at 8000C64C: lwz r3 0x4(r6)
Parsed instruction at 8000C650: lwz r4 0x8(r6)
Parsed instruction at 8000C654: lwz r5 0xc(r6)
Parsed instruction at 8000C658: lwz r6 0x10(r6)
Parsed instruction at 8000C65C: bl fn_8000C818
Parsed instruction at 8000C660: li r0 0x1
Parsed instruction at 8000C664: b .L_8000C698
Parsed label: L_8000C668:
Parsed instruction at 8000C668: cmpwi r3 0x2
Parsed instruction at 8000C66C: bne .L_8000C694
Parsed instruction at 8000C670: lwz r3 lbl_8001EF64@sda21(r0)
Parsed instruction at 8000C674: add r4 r30 r0
Parsed instruction at 8000C678: addi r0 r3 0x1
Parsed instruction at 8000C67C: stw r0 lbl_8001EF64@sda21(r0)
Parsed instruction at 8000C680: lwz r3 0xc(r4)
Parsed instruction at 8000C684: lwz r4 0x10(r4)
Parsed instruction at 8000C688: bl fn_8000CC40
Parsed instruction at 8000C68C: li r0 0x1
Parsed instruction at 8000C690: b .L_8000C698
Parsed label: L_8000C694:
Parsed instruction at 8000C694: li r0 0x0
Parsed label: L_8000C698:
Parsed instruction at 8000C698: cmpwi r0 0x0
Parsed instruction at 8000C69C: beq .L_8000C6B4
Parsed instruction at 8000C6A0: b .L_8000C704
Parsed label: L_8000C6A4:
Parsed instruction at 8000C6A4: li r0 -0x1
Parsed instruction at 8000C6A8: stw r0 0x0(r30)
Parsed instruction at 8000C6AC: li r0 0x0
Parsed instruction at 8000C6B0: stw r0 lbl_8001EF64@sda21(r0)
Parsed label: L_8000C6B4:
Parsed instruction at 8000C6B4: addi r3 r1 0x10
Parsed instruction at 8000C6B8: bl OSClearContext
Parsed instruction at 8000C6BC: addi r3 r1 0x10
Parsed instruction at 8000C6C0: bl OSSetCurrentContext
Parsed instruction at 8000C6C4: cmplwi r29 0x0
Parsed instruction at 8000C6C8: beq .L_8000C6F4
Parsed instruction at 8000C6CC: lwz r12 lbl_8001EF28@sda21(r0)
Parsed instruction at 8000C6D0: li r0 0x0
Parsed instruction at 8000C6D4: cmplwi r12 0x0
Parsed instruction at 8000C6D8: stw r0 lbl_8001EF28@sda21(r0)
Parsed instruction at 8000C6DC: beq .L_8000C6EC
Parsed instruction at 8000C6E0: mtlr r12
Parsed instruction at 8000C6E4: addi r3 r29 0x0
Parsed instruction at 8000C6E8: blrl 
Parsed label: L_8000C6EC:
Parsed instruction at 8000C6EC: li r0 0x0
Parsed instruction at 8000C6F0: stw r0 lbl_8001EF40@sda21(r0)
Parsed label: L_8000C6F4:
Parsed instruction at 8000C6F4: addi r3 r1 0x10
Parsed instruction at 8000C6F8: bl OSClearContext
Parsed instruction at 8000C6FC: mr r3 r28
Parsed instruction at 8000C700: bl OSSetCurrentContext
Parsed label: L_8000C704:
Parsed instruction at 8000C704: lwz r0 0x2ec(r1)
Parsed instruction at 8000C708: lwz r31 0x2e4(r1)
Parsed instruction at 8000C70C: lwz r30 0x2e0(r1)
Parsed instruction at 8000C710: lwz r29 0x2dc(r1)
Parsed instruction at 8000C714: lwz r28 0x2d8(r1)
Parsed instruction at 8000C718: addi r1 r1 0x2e8
Parsed instruction at 8000C71C: mtlr r0
Parsed instruction at 8000C720: blr 
End of function: fn_8000C430, 209 instructions
Parsed function: fn_8000C724 at 0x8000C724
Parsed instruction at 8000C724: mflr r0
Parsed instruction at 8000C728: lis r3 lbl_8001C8C0@ha
Parsed instruction at 8000C72C: stw r0 0x4(r1)
Parsed instruction at 8000C730: addi r4 r3 lbl_8001C8C0@l
Parsed instruction at 8000C734: stwu r1 -0x8(r1)
Parsed instruction at 8000C738: lwz r0 lbl_8001EF64@sda21(r0)
Parsed instruction at 8000C73C: mulli r0 r0 0x14
Parsed instruction at 8000C740: lwzx r3 r4 r0
Parsed instruction at 8000C744: cmpwi r3 0x1
Parsed instruction at 8000C748: bne .L_8000C774
Parsed instruction at 8000C74C: lwz r3 lbl_8001EF64@sda21(r0)
Parsed instruction at 8000C750: add r6 r4 r0
Parsed instruction at 8000C754: addi r0 r3 0x1
Parsed instruction at 8000C758: stw r0 lbl_8001EF64@sda21(r0)
Parsed instruction at 8000C75C: lwz r3 0x4(r6)
Parsed instruction at 8000C760: lwz r4 0x8(r6)
Parsed instruction at 8000C764: lwz r5 0xc(r6)
Parsed instruction at 8000C768: lwz r6 0x10(r6)
Parsed instruction at 8000C76C: bl fn_8000C818
Parsed instruction at 8000C770: b .L_8000C798
Parsed label: L_8000C774:
Parsed instruction at 8000C774: cmpwi r3 0x2
Parsed instruction at 8000C778: bne .L_8000C798
Parsed instruction at 8000C77C: lwz r3 lbl_8001EF64@sda21(r0)
Parsed instruction at 8000C780: add r4 r4 r0
Parsed instruction at 8000C784: addi r0 r3 0x1
Parsed instruction at 8000C788: stw r0 lbl_8001EF64@sda21(r0)
Parsed instruction at 8000C78C: lwz r3 0xc(r4)
Parsed instruction at 8000C790: lwz r4 0x10(r4)
Parsed instruction at 8000C794: bl fn_8000CC40
Parsed label: L_8000C798:
Parsed instruction at 8000C798: lwz r0 0xc(r1)
Parsed instruction at 8000C79C: addi r1 r1 0x8
Parsed instruction at 8000C7A0: mtlr r0
Parsed instruction at 8000C7A4: blr 
End of function: fn_8000C724, 35 instructions
Parsed function: fn_8000C7A8 at 0x8000C7A8
Parsed instruction at 8000C7A8: mflr r0
Parsed instruction at 8000C7AC: li r3 0x400
Parsed instruction at 8000C7B0: stw r0 0x4(r1)
Parsed instruction at 8000C7B4: stwu r1 -0x2e0(r1)
Parsed instruction at 8000C7B8: stw r31 0x2dc(r1)
Parsed instruction at 8000C7BC: addi r31 r4 0x0
Parsed instruction at 8000C7C0: bl __OSMaskInterrupts
Parsed instruction at 8000C7C4: addi r3 r1 0x10
Parsed instruction at 8000C7C8: bl OSClearContext
Parsed instruction at 8000C7CC: addi r3 r1 0x10
Parsed instruction at 8000C7D0: bl OSSetCurrentContext
Parsed instruction at 8000C7D4: lwz r12 lbl_8001EF28@sda21(r0)
Parsed instruction at 8000C7D8: li r0 0x0
Parsed instruction at 8000C7DC: cmplwi r12 0x0
Parsed instruction at 8000C7E0: stw r0 lbl_8001EF28@sda21(r0)
Parsed instruction at 8000C7E4: beq .L_8000C7F4
Parsed instruction at 8000C7E8: mtlr r12
Parsed instruction at 8000C7EC: li r3 0x10
Parsed instruction at 8000C7F0: blrl 
Parsed label: L_8000C7F4:
Parsed instruction at 8000C7F4: addi r3 r1 0x10
Parsed instruction at 8000C7F8: bl OSClearContext
Parsed instruction at 8000C7FC: mr r3 r31
Parsed instruction at 8000C800: bl OSSetCurrentContext
Parsed instruction at 8000C804: lwz r0 0x2e4(r1)
Parsed instruction at 8000C808: lwz r31 0x2dc(r1)
Parsed instruction at 8000C80C: addi r1 r1 0x2e0
Parsed instruction at 8000C810: mtlr r0
Parsed instruction at 8000C814: blr 
End of function: fn_8000C7A8, 29 instructions
Parsed function: fn_8000C818 at 0x8000C818
Parsed instruction at 8000C818: mflr r0
Parsed instruction at 8000C81C: stw r0 0x4(r1)
Parsed instruction at 8000C820: li r0 0x0
Parsed instruction at 8000C824: stwu r1 -0x28(r1)
Parsed instruction at 8000C828: stw r31 0x24(r1)
Parsed instruction at 8000C82C: stw r30 0x20(r1)
Parsed instruction at 8000C830: addi r30 r5 0x0
Parsed instruction at 8000C834: stw r29 0x1c(r1)
Parsed instruction at 8000C838: addi r29 r4 0x0
Parsed instruction at 8000C83C: stw r28 0x18(r1)
Parsed instruction at 8000C840: addi r28 r3 0x0
Parsed instruction at 8000C844: stw r0 lbl_8001EF20@sda21(r0)
Parsed instruction at 8000C848: li r0 0x1
Parsed instruction at 8000C84C: stw r6 lbl_8001EF28@sda21(r0)
Parsed instruction at 8000C850: lis r6 lbl_8001C8C0@ha
Parsed instruction at 8000C854: addi r31 r6 lbl_8001C8C0@l
Parsed instruction at 8000C858: stw r0 lbl_8001EF60@sda21(r0)
Parsed instruction at 8000C85C: bl __OSGetSystemTime
Parsed instruction at 8000C860: stw r4 lbl_8001EF5C@sda21(r0)
Parsed instruction at 8000C864: lis r4 0xcc00
Parsed instruction at 8000C868: lis r0 0xa0
Parsed instruction at 8000C86C: stw r3 lbl_8001EF58@sda21(r0)
Parsed instruction at 8000C870: addi r4 r4 0x6000
Parsed instruction at 8000C874: lis r3 0xa800
Parsed instruction at 8000C878: stw r3 0x8(r4)
Parsed instruction at 8000C87C: srwi r3 r30 2
Parsed instruction at 8000C880: cmplw r29 r0
Parsed instruction at 8000C884: stw r3 0xc(r4)
Parsed instruction at 8000C888: li r0 0x3
Parsed instruction at 8000C88C: stw r29 0x10(r4)
Parsed instruction at 8000C890: stw r28 0x14(r4)
Parsed instruction at 8000C894: stw r29 0x18(r4)
Parsed instruction at 8000C898: stw r29 lbl_8001EF24@sda21(r0)
Parsed instruction at 8000C89C: stw r0 0x1c(r4)
Parsed instruction at 8000C8A0: ble .L_8000C8D8
Parsed instruction at 8000C8A4: lis r3 0x8000
Parsed instruction at 8000C8A8: lwz r0 0xf8(r3)
Parsed instruction at 8000C8AC: addi r3 r31 0x68
Parsed instruction at 8000C8B0: srwi r0 r0 2
Parsed instruction at 8000C8B4: mulli r30 r0 0x14
Parsed instruction at 8000C8B8: bl fn_80005FC4
Parsed instruction at 8000C8BC: lis r3 fn_8000C7A8@ha
Parsed instruction at 8000C8C0: addi r7 r3 fn_8000C7A8@l
Parsed instruction at 8000C8C4: addi r6 r30 0x0
Parsed instruction at 8000C8C8: addi r3 r31 0x68
Parsed instruction at 8000C8CC: li r5 0x0
Parsed instruction at 8000C8D0: bl fn_80006220
Parsed instruction at 8000C8D4: b .L_8000C908
Parsed label: L_8000C8D8:
Parsed instruction at 8000C8D8: lis r3 0x8000
Parsed instruction at 8000C8DC: lwz r0 0xf8(r3)
Parsed instruction at 8000C8E0: addi r3 r31 0x68
Parsed instruction at 8000C8E4: srwi r0 r0 2
Parsed instruction at 8000C8E8: mulli r30 r0 0xa
Parsed instruction at 8000C8EC: bl fn_80005FC4
Parsed instruction at 8000C8F0: lis r3 fn_8000C7A8@ha
Parsed instruction at 8000C8F4: addi r7 r3 fn_8000C7A8@l
Parsed instruction at 8000C8F8: addi r6 r30 0x0
Parsed instruction at 8000C8FC: addi r3 r31 0x68
Parsed instruction at 8000C900: li r5 0x0
Parsed instruction at 8000C904: bl fn_80006220
Parsed label: L_8000C908:
Parsed instruction at 8000C908: lwz r0 0x2c(r1)
Parsed instruction at 8000C90C: lwz r31 0x24(r1)
Parsed instruction at 8000C910: lwz r30 0x20(r1)
Parsed instruction at 8000C914: lwz r29 0x1c(r1)
Parsed instruction at 8000C918: lwz r28 0x18(r1)
Parsed instruction at 8000C91C: addi r1 r1 0x28
Parsed instruction at 8000C920: mtlr r0
Parsed instruction at 8000C924: blr 
End of function: fn_8000C818, 70 instructions
Parsed function: fn_8000C928 at 0x8000C928
Parsed instruction at 8000C928: mflr r0
Parsed instruction at 8000C92C: lis r7 lbl_8001C8C0@ha
Parsed instruction at 8000C930: stw r0 0x4(r1)
Parsed instruction at 8000C934: clrrwi. r8 r5 15
Parsed instruction at 8000C938: addi r9 r7 lbl_8001C8C0@l
Parsed instruction at 8000C93C: stwu r1 -0x8(r1)
Parsed instruction at 8000C940: bne .L_8000C94C
Parsed instruction at 8000C944: li r10 0x0
Parsed instruction at 8000C948: b .L_8000C954
Parsed label: L_8000C94C:
Parsed instruction at 8000C94C: lwz r0 lbl_8001EF48@sda21(r0)
Parsed instruction at 8000C950: add r10 r8 r0
Parsed label: L_8000C954:
Parsed instruction at 8000C954: li r0 0x2
Parsed instruction at 8000C958: stw r0 0x0(r9)
Parsed instruction at 8000C95C: li r8 0x1
Parsed instruction at 8000C960: li r7 -0x1
Parsed instruction at 8000C964: stw r10 0xc(r9)
Parsed instruction at 8000C968: li r0 0x0
Parsed instruction at 8000C96C: stw r6 0x10(r9)
Parsed instruction at 8000C970: stw r8 0x14(r9)
Parsed instruction at 8000C974: stw r3 0x18(r9)
Parsed instruction at 8000C978: mr r3 r10
Parsed instruction at 8000C97C: stw r4 0x1c(r9)
Parsed instruction at 8000C980: mr r4 r6
Parsed instruction at 8000C984: stw r5 0x20(r9)
Parsed instruction at 8000C988: stw r6 0x24(r9)
Parsed instruction at 8000C98C: stw r7 0x28(r9)
Parsed instruction at 8000C990: stw r0 lbl_8001EF64@sda21(r0)
Parsed instruction at 8000C994: bl fn_8000CC40
Parsed instruction at 8000C998: lwz r0 0xc(r1)
Parsed instruction at 8000C99C: addi r1 r1 0x8
Parsed instruction at 8000C9A0: mtlr r0
Parsed instruction at 8000C9A4: blr 
End of function: fn_8000C928, 34 instructions
Parsed function: fn_8000C9A8 at 0x8000C9A8
Parsed instruction at 8000C9A8: mflr r0
Parsed instruction at 8000C9AC: lis r7 0xcc00
Parsed instruction at 8000C9B0: stw r0 0x4(r1)
Parsed instruction at 8000C9B4: stwu r1 -0x40(r1)
Parsed instruction at 8000C9B8: stmw r22 0x18(r1)
Parsed instruction at 8000C9BC: addi r25 r4 0x0
Parsed instruction at 8000C9C0: addi r4 r7 0x6000
Parsed instruction at 8000C9C4: lis r7 lbl_8001C8C0@ha
Parsed instruction at 8000C9C8: addi r31 r7 lbl_8001C8C0@l
Parsed instruction at 8000C9CC: addi r24 r3 0x0
Parsed instruction at 8000C9D0: addi r26 r5 0x0
Parsed instruction at 8000C9D4: addi r30 r31 0xcc
Parsed instruction at 8000C9D8: mr r27 r6
Parsed instruction at 8000C9DC: stw r25 0x18(r4)
Parsed instruction at 8000C9E0: stw r24 0xc4(r31)
Parsed instruction at 8000C9E4: stw r25 0xc8(r31)
Parsed instruction at 8000C9E8: stw r26 0xcc(r31)
Parsed instruction at 8000C9EC: lwz r0 lbl_8001EF44@sda21(r0)
Parsed instruction at 8000C9F0: cmplwi r0 0x0
Parsed instruction at 8000C9F4: bne .L_8000CA20
Parsed instruction at 8000C9F8: li r0 -0x1
Parsed instruction at 8000C9FC: stw r0 0x0(r31)
Parsed instruction at 8000CA00: li r0 0x0
Parsed instruction at 8000CA04: addi r3 r24 0x0
Parsed instruction at 8000CA08: stw r0 lbl_8001EF64@sda21(r0)
Parsed instruction at 8000CA0C: addi r4 r25 0x0
Parsed instruction at 8000CA10: addi r5 r26 0x0
Parsed instruction at 8000CA14: addi r6 r27 0x0
Parsed instruction at 8000CA18: bl fn_8000C818
Parsed instruction at 8000CA1C: b .L_8000CC28
Parsed label: L_8000CA20:
Parsed instruction at 8000CA20: lwz r0 lbl_8001EF44@sda21(r0)
Parsed instruction at 8000CA24: cmplwi r0 0x1
Parsed instruction at 8000CA28: bne .L_8000CC28
Parsed instruction at 8000CA2C: lwz r0 lbl_8001EE18@sda21(r0)
Parsed instruction at 8000CA30: cmpwi r0 0x0
Parsed instruction at 8000CA34: beq .L_8000CA50
Parsed instruction at 8000CA38: addi r3 r24 0x0
Parsed instruction at 8000CA3C: addi r4 r25 0x0
Parsed instruction at 8000CA40: addi r5 r26 0x0
Parsed instruction at 8000CA44: addi r6 r27 0x0
Parsed instruction at 8000CA48: bl fn_8000C928
Parsed instruction at 8000CA4C: b .L_8000CC28
Parsed label: L_8000CA50:
Parsed instruction at 8000CA50: addi r29 r31 0xbc
Parsed instruction at 8000CA54: lwz r0 0x0(r30)
Parsed instruction at 8000CA58: addi r28 r31 0xc0
Parsed instruction at 8000CA5C: lwz r3 0xbc(r31)
Parsed instruction at 8000CA60: lwz r4 0xc0(r31)
Parsed instruction at 8000CA64: srwi r23 r0 15
Parsed instruction at 8000CA68: subi r0 r3 0x1
Parsed instruction at 8000CA6C: add r0 r4 r0
Parsed instruction at 8000CA70: srwi r22 r0 15
Parsed instruction at 8000CA74: bl fn_8000F230
Parsed instruction at 8000CA78: lbz r0 0x8(r3)
Parsed instruction at 8000CA7C: cmplwi r0 0x0
Parsed instruction at 8000CA80: beq .L_8000CA8C
Parsed instruction at 8000CA84: li r0 0x1
Parsed instruction at 8000CA88: b .L_8000CA90
Parsed label: L_8000CA8C:
Parsed instruction at 8000CA8C: li r0 0x0
Parsed label: L_8000CA90:
Parsed instruction at 8000CA90: cmpwi r0 0x0
Parsed instruction at 8000CA94: beq .L_8000CAA0
Parsed instruction at 8000CA98: li r3 0x5
Parsed instruction at 8000CA9C: b .L_8000CAA4
Parsed label: L_8000CAA0:
Parsed instruction at 8000CAA0: li r3 0xf
Parsed label: L_8000CAA4:
Parsed instruction at 8000CAA4: subi r0 r22 0x2
Parsed instruction at 8000CAA8: cmplw r23 r0
Parsed instruction at 8000CAAC: bgt .L_8000CAC0
Parsed instruction at 8000CAB0: addi r0 r3 0x3
Parsed instruction at 8000CAB4: add r0 r22 r0
Parsed instruction at 8000CAB8: cmplw r23 r0
Parsed instruction at 8000CABC: bge .L_8000CAC8
Parsed label: L_8000CAC0:
Parsed instruction at 8000CAC0: li r0 0x1
Parsed instruction at 8000CAC4: b .L_8000CACC
Parsed label: L_8000CAC8:
Parsed instruction at 8000CAC8: li r0 0x0
Parsed label: L_8000CACC:
Parsed instruction at 8000CACC: cmpwi r0 0x0
Parsed instruction at 8000CAD0: bne .L_8000CAFC
Parsed instruction at 8000CAD4: li r0 -0x1
Parsed instruction at 8000CAD8: stw r0 0x0(r31)
Parsed instruction at 8000CADC: li r0 0x0
Parsed instruction at 8000CAE0: addi r3 r24 0x0
Parsed instruction at 8000CAE4: stw r0 lbl_8001EF64@sda21(r0)
Parsed instruction at 8000CAE8: addi r4 r25 0x0
Parsed instruction at 8000CAEC: addi r5 r26 0x0
Parsed instruction at 8000CAF0: addi r6 r27 0x0
Parsed instruction at 8000CAF4: bl fn_8000C818
Parsed instruction at 8000CAF8: b .L_8000CC28
Parsed label: L_8000CAFC:
Parsed instruction at 8000CAFC: lwz r3 0x0(r29)
Parsed instruction at 8000CB00: lwz r4 0x0(r28)
Parsed instruction at 8000CB04: subi r3 r3 0x1
Parsed instruction at 8000CB08: lwz r0 0x0(r30)
Parsed instruction at 8000CB0C: add r3 r4 r3
Parsed instruction at 8000CB10: srwi r3 r3 15
Parsed instruction at 8000CB14: srwi r4 r0 15
Parsed instruction at 8000CB18: cmplw r3 r4
Parsed instruction at 8000CB1C: beq .L_8000CB2C
Parsed instruction at 8000CB20: addi r0 r3 0x1
Parsed instruction at 8000CB24: cmplw r0 r4
Parsed instruction at 8000CB28: bne .L_8000CC14
Parsed label: L_8000CB2C:
Parsed instruction at 8000CB2C: bl __OSGetSystemTime
Parsed instruction at 8000CB30: lis r5 0x8000
Parsed instruction at 8000CB34: lwz r8 lbl_8001EF50@sda21(r0)
Parsed instruction at 8000CB38: lwz r0 0xf8(r5)
Parsed instruction at 8000CB3C: lis r5 0x1062
Parsed instruction at 8000CB40: lwz r9 lbl_8001EF54@sda21(r0)
Parsed instruction at 8000CB44: li r6 0x0
Parsed instruction at 8000CB48: srwi r7 r0 2
Parsed instruction at 8000CB4C: addi r0 r5 0x4dd3
Parsed instruction at 8000CB50: mulhwu r0 r0 r7
Parsed instruction at 8000CB54: srwi r0 r0 6
Parsed instruction at 8000CB58: subfc r9 r9 r4
Parsed instruction at 8000CB5C: subfe r8 r8 r3
Parsed instruction at 8000CB60: mulli r5 r0 0x5
Parsed instruction at 8000CB64: xoris r4 r6 0x8000
Parsed instruction at 8000CB68: xoris r3 r8 0x8000
Parsed instruction at 8000CB6C: subfc r0 r9 r5
Parsed instruction at 8000CB70: subfe r3 r3 r4
Parsed instruction at 8000CB74: subfe r3 r4 r4
Parsed instruction at 8000CB78: neg. r3 r3
Parsed instruction at 8000CB7C: beq .L_8000CBA4
Parsed instruction at 8000CB80: li r0 -0x1
Parsed instruction at 8000CB84: stw r0 0x0(r31)
Parsed instruction at 8000CB88: addi r3 r24 0x0
Parsed instruction at 8000CB8C: addi r4 r25 0x0
Parsed instruction at 8000CB90: stw r6 lbl_8001EF64@sda21(r0)
Parsed instruction at 8000CB94: addi r5 r26 0x0
Parsed instruction at 8000CB98: addi r6 r27 0x0
Parsed instruction at 8000CB9C: bl fn_8000C818
Parsed instruction at 8000CBA0: b .L_8000CC28
Parsed label: L_8000CBA4:
Parsed instruction at 8000CBA4: li r0 0x1
Parsed instruction at 8000CBA8: stw r0 0x0(r31)
Parsed instruction at 8000CBAC: lis r3 0x431c
Parsed instruction at 8000CBB0: subi r0 r3 0x217d
Parsed instruction at 8000CBB4: stw r24 0x4(r31)
Parsed instruction at 8000CBB8: mulhwu r0 r0 r7
Parsed instruction at 8000CBBC: stw r25 0x8(r31)
Parsed instruction at 8000CBC0: stw r26 0xc(r31)
Parsed instruction at 8000CBC4: srwi r0 r0 15
Parsed instruction at 8000CBC8: mulli r3 r0 0x1f4
Parsed instruction at 8000CBCC: stw r27 0x10(r31)
Parsed instruction at 8000CBD0: li r0 -0x1
Parsed instruction at 8000CBD4: stw r0 0x14(r31)
Parsed instruction at 8000CBD8: subfc r5 r9 r5
Parsed instruction at 8000CBDC: subfe r4 r8 r6
Parsed instruction at 8000CBE0: srwi r0 r3 3
Parsed instruction at 8000CBE4: stw r6 lbl_8001EF64@sda21(r0)
Parsed instruction at 8000CBE8: addc r23 r5 r0
Parsed instruction at 8000CBEC: adde r22 r4 r6
Parsed instruction at 8000CBF0: addi r3 r31 0x40
Parsed instruction at 8000CBF4: bl fn_80005FC4
Parsed instruction at 8000CBF8: lis r3 fn_8000C724@ha
Parsed instruction at 8000CBFC: addi r7 r3 fn_8000C724@l
Parsed instruction at 8000CC00: addi r6 r23 0x0
Parsed instruction at 8000CC04: addi r5 r22 0x0
Parsed instruction at 8000CC08: addi r3 r31 0x40
Parsed instruction at 8000CC0C: bl fn_80006220
Parsed instruction at 8000CC10: b .L_8000CC28
Parsed label: L_8000CC14:
Parsed instruction at 8000CC14: addi r3 r24 0x0
Parsed instruction at 8000CC18: addi r4 r25 0x0
Parsed instruction at 8000CC1C: addi r5 r26 0x0
Parsed instruction at 8000CC20: addi r6 r27 0x0
Parsed instruction at 8000CC24: bl fn_8000C928
Parsed label: L_8000CC28:
Parsed instruction at 8000CC28: lmw r22 0x18(r1)
Parsed instruction at 8000CC2C: li r3 0x1
Parsed instruction at 8000CC30: lwz r0 0x44(r1)
Parsed instruction at 8000CC34: addi r1 r1 0x40
Parsed instruction at 8000CC38: mtlr r0
Parsed instruction at 8000CC3C: blr 
End of function: fn_8000C9A8, 180 instructions
Parsed function: fn_8000CC40 at 0x8000CC40
Parsed instruction at 8000CC40: mflr r0
Parsed instruction at 8000CC44: stw r0 0x4(r1)
Parsed instruction at 8000CC48: li r0 0x0
Parsed instruction at 8000CC4C: stwu r1 -0x18(r1)
Parsed instruction at 8000CC50: stw r31 0x14(r1)
Parsed instruction at 8000CC54: stw r30 0x10(r1)
Parsed instruction at 8000CC58: stw r4 lbl_8001EF28@sda21(r0)
Parsed instruction at 8000CC5C: lis r4 0xcc00
Parsed instruction at 8000CC60: addi r4 r4 0x6000
Parsed instruction at 8000CC64: stw r0 lbl_8001EF20@sda21(r0)
Parsed instruction at 8000CC68: lis r0 0xab00
Parsed instruction at 8000CC6C: stw r0 0x8(r4)
Parsed instruction at 8000CC70: srwi r0 r3 2
Parsed instruction at 8000CC74: lis r3 lbl_8001C928@ha
Parsed instruction at 8000CC78: stw r0 0xc(r4)
Parsed instruction at 8000CC7C: li r0 0x1
Parsed instruction at 8000CC80: addi r31 r3 lbl_8001C928@l
Parsed instruction at 8000CC84: stw r0 0x1c(r4)
Parsed instruction at 8000CC88: lis r4 0x8000
Parsed instruction at 8000CC8C: addi r3 r31 0x0
Parsed instruction at 8000CC90: lwz r0 0xf8(r4)
Parsed instruction at 8000CC94: srwi r0 r0 2
Parsed instruction at 8000CC98: mulli r30 r0 0xa
Parsed instruction at 8000CC9C: bl fn_80005FC4
Parsed instruction at 8000CCA0: lis r3 fn_8000C7A8@ha
Parsed instruction at 8000CCA4: addi r7 r3 fn_8000C7A8@l
Parsed instruction at 8000CCA8: addi r3 r31 0x0
Parsed instruction at 8000CCAC: addi r6 r30 0x0
Parsed instruction at 8000CCB0: li r5 0x0
Parsed instruction at 8000CCB4: bl fn_80006220
Parsed instruction at 8000CCB8: lwz r0 0x1c(r1)
Parsed instruction at 8000CCBC: li r3 0x1
Parsed instruction at 8000CCC0: lwz r31 0x14(r1)
Parsed instruction at 8000CCC4: lwz r30 0x10(r1)
Parsed instruction at 8000CCC8: addi r1 r1 0x18
Parsed instruction at 8000CCCC: mtlr r0
Parsed instruction at 8000CCD0: blr 
End of function: fn_8000CC40, 37 instructions
Parsed function: fn_8000CCD4 at 0x8000CCD4
Parsed instruction at 8000CCD4: li r0 0x1
Parsed instruction at 8000CCD8: stw r3 lbl_8001EF28@sda21(r0)
Parsed instruction at 8000CCDC: lis r3 0xcc00
Parsed instruction at 8000CCE0: stw r0 lbl_8001EF3C@sda21(r0)
Parsed instruction at 8000CCE4: li r0 0x0
Parsed instruction at 8000CCE8: addi r4 r3 0x6000
Parsed instruction at 8000CCEC: stw r0 lbl_8001EF20@sda21(r0)
Parsed instruction at 8000CCF0: li r0 0x2
Parsed instruction at 8000CCF4: li r3 0x1
Parsed instruction at 8000CCF8: stw r0 0x4(r4)
Parsed instruction at 8000CCFC: blr 
End of function: fn_8000CCD4, 11 instructions
Parsed function: fn_8000CD00 at 0x8000CD00
Parsed instruction at 8000CD00: mflr r0
Parsed instruction at 8000CD04: li r8 0x0
Parsed instruction at 8000CD08: stw r0 0x4(r1)
Parsed instruction at 8000CD0C: lis r5 0xa800
Parsed instruction at 8000CD10: addi r0 r5 0x40
Parsed instruction at 8000CD14: stwu r1 -0x18(r1)
Parsed instruction at 8000CD18: li r6 0x20
Parsed instruction at 8000CD1C: lis r5 0x8000
Parsed instruction at 8000CD20: stw r31 0x14(r1)
Parsed instruction at 8000CD24: stw r30 0x10(r1)
Parsed instruction at 8000CD28: stw r4 lbl_8001EF28@sda21(r0)
Parsed instruction at 8000CD2C: lis r4 0xcc00
Parsed instruction at 8000CD30: addi r7 r4 0x6000
Parsed instruction at 8000CD34: stw r8 lbl_8001EF20@sda21(r0)
Parsed instruction at 8000CD38: stw r0 0x6008(r4)
Parsed instruction at 8000CD3C: lis r4 lbl_8001C928@ha
Parsed instruction at 8000CD40: li r0 0x3
Parsed instruction at 8000CD44: stw r8 0xc(r7)
Parsed instruction at 8000CD48: addi r31 r4 lbl_8001C928@l
Parsed instruction at 8000CD4C: stw r6 0x10(r7)
Parsed instruction at 8000CD50: stw r3 0x14(r7)
Parsed instruction at 8000CD54: mr r3 r31
Parsed instruction at 8000CD58: stw r6 0x18(r7)
Parsed instruction at 8000CD5C: stw r0 0x1c(r7)
Parsed instruction at 8000CD60: lwz r0 0xf8(r5)
Parsed instruction at 8000CD64: srwi r0 r0 2
Parsed instruction at 8000CD68: mulli r30 r0 0xa
Parsed instruction at 8000CD6C: bl fn_80005FC4
Parsed instruction at 8000CD70: lis r3 fn_8000C7A8@ha
Parsed instruction at 8000CD74: addi r7 r3 fn_8000C7A8@l
Parsed instruction at 8000CD78: addi r3 r31 0x0
Parsed instruction at 8000CD7C: addi r6 r30 0x0
Parsed instruction at 8000CD80: li r5 0x0
Parsed instruction at 8000CD84: bl fn_80006220
Parsed instruction at 8000CD88: lwz r0 0x1c(r1)
Parsed instruction at 8000CD8C: li r3 0x1
Parsed instruction at 8000CD90: lwz r31 0x14(r1)
Parsed instruction at 8000CD94: lwz r30 0x10(r1)
Parsed instruction at 8000CD98: addi r1 r1 0x18
Parsed instruction at 8000CD9C: mtlr r0
Parsed instruction at 8000CDA0: blr 
End of function: fn_8000CD00, 41 instructions
Parsed function: fn_8000CDA4 at 0x8000CDA4
Parsed instruction at 8000CDA4: mflr r0
Parsed instruction at 8000CDA8: stw r0 0x4(r1)
Parsed instruction at 8000CDAC: li r0 0x0
Parsed instruction at 8000CDB0: stwu r1 -0x18(r1)
Parsed instruction at 8000CDB4: stw r31 0x14(r1)
Parsed instruction at 8000CDB8: stw r30 0x10(r1)
Parsed instruction at 8000CDBC: stw r3 lbl_8001EF28@sda21(r0)
Parsed instruction at 8000CDC0: lis r3 0xcc00
Parsed instruction at 8000CDC4: addi r4 r3 0x6000
Parsed instruction at 8000CDC8: stw r0 lbl_8001EF20@sda21(r0)
Parsed instruction at 8000CDCC: lis r0 0xe300
Parsed instruction at 8000CDD0: stw r0 0x6008(r3)
Parsed instruction at 8000CDD4: li r0 0x1
Parsed instruction at 8000CDD8: lis r3 lbl_8001C928@ha
Parsed instruction at 8000CDDC: stw r0 0x1c(r4)
Parsed instruction at 8000CDE0: lis r4 0x8000
Parsed instruction at 8000CDE4: addi r31 r3 lbl_8001C928@l
Parsed instruction at 8000CDE8: lwz r0 0xf8(r4)
Parsed instruction at 8000CDEC: addi r3 r31 0x0
Parsed instruction at 8000CDF0: srwi r0 r0 2
Parsed instruction at 8000CDF4: mulli r30 r0 0xa
Parsed instruction at 8000CDF8: bl fn_80005FC4
Parsed instruction at 8000CDFC: lis r3 fn_8000C7A8@ha
Parsed instruction at 8000CE00: addi r7 r3 fn_8000C7A8@l
Parsed instruction at 8000CE04: addi r3 r31 0x0
Parsed instruction at 8000CE08: addi r6 r30 0x0
Parsed instruction at 8000CE0C: li r5 0x0
Parsed instruction at 8000CE10: bl fn_80006220
Parsed instruction at 8000CE14: lwz r0 0x1c(r1)
Parsed instruction at 8000CE18: li r3 0x1
Parsed instruction at 8000CE1C: lwz r31 0x14(r1)
Parsed instruction at 8000CE20: lwz r30 0x10(r1)
Parsed instruction at 8000CE24: addi r1 r1 0x18
Parsed instruction at 8000CE28: mtlr r0
Parsed instruction at 8000CE2C: blr 
End of function: fn_8000CDA4, 35 instructions
Parsed function: fn_8000CE30 at 0x8000CE30
Parsed instruction at 8000CE30: mflr r0
Parsed instruction at 8000CE34: stw r0 0x4(r1)
Parsed instruction at 8000CE38: li r0 0x0
Parsed instruction at 8000CE3C: stwu r1 -0x18(r1)
Parsed instruction at 8000CE40: stw r31 0x14(r1)
Parsed instruction at 8000CE44: stw r30 0x10(r1)
Parsed instruction at 8000CE48: stw r3 lbl_8001EF28@sda21(r0)
Parsed instruction at 8000CE4C: lis r3 0xcc00
Parsed instruction at 8000CE50: addi r4 r3 0x6000
Parsed instruction at 8000CE54: stw r0 lbl_8001EF20@sda21(r0)
Parsed instruction at 8000CE58: lis r0 0xe000
Parsed instruction at 8000CE5C: stw r0 0x6008(r3)
Parsed instruction at 8000CE60: li r0 0x1
Parsed instruction at 8000CE64: lis r3 lbl_8001C928@ha
Parsed instruction at 8000CE68: stw r0 0x1c(r4)
Parsed instruction at 8000CE6C: lis r4 0x8000
Parsed instruction at 8000CE70: addi r31 r3 lbl_8001C928@l
Parsed instruction at 8000CE74: lwz r0 0xf8(r4)
Parsed instruction at 8000CE78: addi r3 r31 0x0
Parsed instruction at 8000CE7C: srwi r0 r0 2
Parsed instruction at 8000CE80: mulli r30 r0 0xa
Parsed instruction at 8000CE84: bl fn_80005FC4
Parsed instruction at 8000CE88: lis r3 fn_8000C7A8@ha
Parsed instruction at 8000CE8C: addi r7 r3 fn_8000C7A8@l
Parsed instruction at 8000CE90: addi r3 r31 0x0
Parsed instruction at 8000CE94: addi r6 r30 0x0
Parsed instruction at 8000CE98: li r5 0x0
Parsed instruction at 8000CE9C: bl fn_80006220
Parsed instruction at 8000CEA0: lwz r0 0x1c(r1)
Parsed instruction at 8000CEA4: li r3 0x1
Parsed instruction at 8000CEA8: lwz r31 0x14(r1)
Parsed instruction at 8000CEAC: lwz r30 0x10(r1)
Parsed instruction at 8000CEB0: addi r1 r1 0x18
Parsed instruction at 8000CEB4: mtlr r0
Parsed instruction at 8000CEB8: blr 
End of function: fn_8000CE30, 35 instructions
Parsed function: fn_8000CEBC at 0x8000CEBC
Parsed instruction at 8000CEBC: mflr r0
Parsed instruction at 8000CEC0: li r6 0x20
Parsed instruction at 8000CEC4: stw r0 0x4(r1)
Parsed instruction at 8000CEC8: li r0 0x0
Parsed instruction at 8000CECC: lis r5 0x8000
Parsed instruction at 8000CED0: stwu r1 -0x18(r1)
Parsed instruction at 8000CED4: stw r31 0x14(r1)
Parsed instruction at 8000CED8: stw r30 0x10(r1)
Parsed instruction at 8000CEDC: stw r4 lbl_8001EF28@sda21(r0)
Parsed instruction at 8000CEE0: lis r4 0xcc00
Parsed instruction at 8000CEE4: addi r7 r4 0x6000
Parsed instruction at 8000CEE8: stw r0 lbl_8001EF20@sda21(r0)
Parsed instruction at 8000CEEC: lis r0 0x1200
Parsed instruction at 8000CEF0: stw r0 0x6008(r4)
Parsed instruction at 8000CEF4: lis r4 lbl_8001C928@ha
Parsed instruction at 8000CEF8: li r0 0x3
Parsed instruction at 8000CEFC: stw r6 0x10(r7)
Parsed instruction at 8000CF00: addi r31 r4 lbl_8001C928@l
Parsed instruction at 8000CF04: stw r3 0x14(r7)
Parsed instruction at 8000CF08: addi r3 r31 0x0
Parsed instruction at 8000CF0C: stw r6 0x18(r7)
Parsed instruction at 8000CF10: stw r0 0x1c(r7)
Parsed instruction at 8000CF14: lwz r0 0xf8(r5)
Parsed instruction at 8000CF18: srwi r0 r0 2
Parsed instruction at 8000CF1C: mulli r30 r0 0xa
Parsed instruction at 8000CF20: bl fn_80005FC4
Parsed instruction at 8000CF24: lis r3 fn_8000C7A8@ha
Parsed instruction at 8000CF28: addi r7 r3 fn_8000C7A8@l
Parsed instruction at 8000CF2C: addi r3 r31 0x0
Parsed instruction at 8000CF30: addi r6 r30 0x0
Parsed instruction at 8000CF34: li r5 0x0
Parsed instruction at 8000CF38: bl fn_80006220
Parsed instruction at 8000CF3C: lwz r0 0x1c(r1)
Parsed instruction at 8000CF40: li r3 0x1
Parsed instruction at 8000CF44: lwz r31 0x14(r1)
Parsed instruction at 8000CF48: lwz r30 0x10(r1)
Parsed instruction at 8000CF4C: addi r1 r1 0x18
Parsed instruction at 8000CF50: mtlr r0
Parsed instruction at 8000CF54: blr 
End of function: fn_8000CEBC, 39 instructions
Parsed function: fn_8000CF58 at 0x8000CF58
Parsed instruction at 8000CF58: mflr r0
Parsed instruction at 8000CF5C: stw r0 0x4(r1)
Parsed instruction at 8000CF60: li r0 0x0
Parsed instruction at 8000CF64: stwu r1 -0x20(r1)
Parsed instruction at 8000CF68: stw r31 0x1c(r1)
Parsed instruction at 8000CF6C: stw r30 0x18(r1)
Parsed instruction at 8000CF70: stw r6 lbl_8001EF28@sda21(r0)
Parsed instruction at 8000CF74: lis r6 0xcc00
Parsed instruction at 8000CF78: addi r6 r6 0x6000
Parsed instruction at 8000CF7C: stw r0 lbl_8001EF20@sda21(r0)
Parsed instruction at 8000CF80: oris r0 r3 0xe100
Parsed instruction at 8000CF84: lis r3 lbl_8001C928@ha
Parsed instruction at 8000CF88: stw r0 0x8(r6)
Parsed instruction at 8000CF8C: srwi r0 r5 2
Parsed instruction at 8000CF90: addi r31 r3 lbl_8001C928@l
Parsed instruction at 8000CF94: stw r0 0xc(r6)
Parsed instruction at 8000CF98: li r0 0x1
Parsed instruction at 8000CF9C: addi r3 r31 0x0
Parsed instruction at 8000CFA0: stw r4 0x10(r6)
Parsed instruction at 8000CFA4: lis r4 0x8000
Parsed instruction at 8000CFA8: stw r0 0x1c(r6)
Parsed instruction at 8000CFAC: lwz r0 0xf8(r4)
Parsed instruction at 8000CFB0: srwi r0 r0 2
Parsed instruction at 8000CFB4: mulli r30 r0 0xa
Parsed instruction at 8000CFB8: bl fn_80005FC4
Parsed instruction at 8000CFBC: lis r3 fn_8000C7A8@ha
Parsed instruction at 8000CFC0: addi r7 r3 fn_8000C7A8@l
Parsed instruction at 8000CFC4: addi r3 r31 0x0
Parsed instruction at 8000CFC8: addi r6 r30 0x0
Parsed instruction at 8000CFCC: li r5 0x0
Parsed instruction at 8000CFD0: bl fn_80006220
Parsed instruction at 8000CFD4: lwz r0 0x24(r1)
Parsed instruction at 8000CFD8: li r3 0x1
Parsed instruction at 8000CFDC: lwz r31 0x1c(r1)
Parsed instruction at 8000CFE0: lwz r30 0x18(r1)
Parsed instruction at 8000CFE4: addi r1 r1 0x20
Parsed instruction at 8000CFE8: mtlr r0
Parsed instruction at 8000CFEC: blr 
End of function: fn_8000CF58, 38 instructions
Parsed function: fn_8000CFF0 at 0x8000CFF0
Parsed instruction at 8000CFF0: mflr r0
Parsed instruction at 8000CFF4: stw r0 0x4(r1)
Parsed instruction at 8000CFF8: li r0 0x0
Parsed instruction at 8000CFFC: stwu r1 -0x18(r1)
Parsed instruction at 8000D000: stw r31 0x14(r1)
Parsed instruction at 8000D004: stw r30 0x10(r1)
Parsed instruction at 8000D008: stw r4 lbl_8001EF28@sda21(r0)
Parsed instruction at 8000D00C: lis r4 0xcc00
Parsed instruction at 8000D010: addi r4 r4 0x6000
Parsed instruction at 8000D014: stw r0 lbl_8001EF20@sda21(r0)
Parsed instruction at 8000D018: oris r0 r3 0xe200
Parsed instruction at 8000D01C: lis r3 lbl_8001C928@ha
Parsed instruction at 8000D020: stw r0 0x8(r4)
Parsed instruction at 8000D024: li r0 0x1
Parsed instruction at 8000D028: addi r31 r3 lbl_8001C928@l
Parsed instruction at 8000D02C: stw r0 0x1c(r4)
Parsed instruction at 8000D030: lis r4 0x8000
Parsed instruction at 8000D034: addi r3 r31 0x0
Parsed instruction at 8000D038: lwz r0 0xf8(r4)
Parsed instruction at 8000D03C: srwi r0 r0 2
Parsed instruction at 8000D040: mulli r30 r0 0xa
Parsed instruction at 8000D044: bl fn_80005FC4
Parsed instruction at 8000D048: lis r3 fn_8000C7A8@ha
Parsed instruction at 8000D04C: addi r7 r3 fn_8000C7A8@l
Parsed instruction at 8000D050: addi r3 r31 0x0
Parsed instruction at 8000D054: addi r6 r30 0x0
Parsed instruction at 8000D058: li r5 0x0
Parsed instruction at 8000D05C: bl fn_80006220
Parsed instruction at 8000D060: lwz r0 0x1c(r1)
Parsed instruction at 8000D064: li r3 0x1
Parsed instruction at 8000D068: lwz r31 0x14(r1)
Parsed instruction at 8000D06C: lwz r30 0x10(r1)
Parsed instruction at 8000D070: addi r1 r1 0x18
Parsed instruction at 8000D074: mtlr r0
Parsed instruction at 8000D078: blr 
End of function: fn_8000CFF0, 35 instructions
Parsed function: fn_8000D07C at 0x8000D07C
Parsed instruction at 8000D07C: mflr r0
Parsed instruction at 8000D080: cmpwi r3 0x0
Parsed instruction at 8000D084: stw r0 0x4(r1)
Parsed instruction at 8000D088: li r0 0x0
Parsed instruction at 8000D08C: stwu r1 -0x20(r1)
Parsed instruction at 8000D090: stw r31 0x1c(r1)
Parsed instruction at 8000D094: stw r30 0x18(r1)
Parsed instruction at 8000D098: stw r5 lbl_8001EF28@sda21(r0)
Parsed instruction at 8000D09C: stw r0 lbl_8001EF20@sda21(r0)
Parsed instruction at 8000D0A0: beq .L_8000D0A8
Parsed instruction at 8000D0A4: lis r0 0x1
Parsed label: L_8000D0A8:
Parsed instruction at 8000D0A8: oris r0 r0 0xe400
Parsed instruction at 8000D0AC: lis r3 0xcc00
Parsed instruction at 8000D0B0: or r0 r4 r0
Parsed instruction at 8000D0B4: addi r3 r3 0x6000
Parsed instruction at 8000D0B8: stw r0 0x8(r3)
Parsed instruction at 8000D0BC: li r0 0x1
Parsed instruction at 8000D0C0: lis r4 0x8000
Parsed instruction at 8000D0C4: stw r0 0x1c(r3)
Parsed instruction at 8000D0C8: lis r3 lbl_8001C928@ha
Parsed instruction at 8000D0CC: addi r31 r3 lbl_8001C928@l
Parsed instruction at 8000D0D0: lwz r0 0xf8(r4)
Parsed instruction at 8000D0D4: addi r3 r31 0x0
Parsed instruction at 8000D0D8: srwi r0 r0 2
Parsed instruction at 8000D0DC: mulli r30 r0 0xa
Parsed instruction at 8000D0E0: bl fn_80005FC4
Parsed instruction at 8000D0E4: lis r3 fn_8000C7A8@ha
Parsed instruction at 8000D0E8: addi r7 r3 fn_8000C7A8@l
Parsed instruction at 8000D0EC: addi r3 r31 0x0
Parsed instruction at 8000D0F0: addi r6 r30 0x0
Parsed instruction at 8000D0F4: li r5 0x0
Parsed instruction at 8000D0F8: bl fn_80006220
Parsed instruction at 8000D0FC: lwz r0 0x24(r1)
Parsed instruction at 8000D100: li r3 0x1
Parsed instruction at 8000D104: lwz r31 0x1c(r1)
Parsed instruction at 8000D108: lwz r30 0x18(r1)
Parsed instruction at 8000D10C: addi r1 r1 0x20
Parsed instruction at 8000D110: mtlr r0
Parsed instruction at 8000D114: blr 
End of function: fn_8000D07C, 40 instructions
Parsed function: fn_8000D118 at 0x8000D118
Parsed instruction at 8000D118: mflr r0
Parsed instruction at 8000D11C: lis r4 0xcc00
Parsed instruction at 8000D120: stw r0 0x4(r1)
Parsed instruction at 8000D124: li r0 0x2
Parsed instruction at 8000D128: stwu r1 -0x20(r1)
Parsed instruction at 8000D12C: stmw r26 0x8(r1)
Parsed instruction at 8000D130: addi r31 r4 0x3000
Parsed instruction at 8000D134: stw r0 0x6004(r4)
Parsed instruction at 8000D138: lwz r30 0x3024(r4)
Parsed instruction at 8000D13C: rlwinm r0 r30 0 30 28
Parsed instruction at 8000D140: ori r0 r0 0x1
Parsed instruction at 8000D144: stwu r0 0x24(r31)
Parsed instruction at 8000D148: bl __OSGetSystemTime
Parsed instruction at 8000D14C: lis r5 0x8000
Parsed instruction at 8000D150: lwz r0 0xf8(r5)
Parsed instruction at 8000D154: lis r5 0x431c
Parsed instruction at 8000D158: subi r5 r5 0x217d
Parsed instruction at 8000D15C: srwi r0 r0 2
Parsed instruction at 8000D160: mulhwu r0 r5 r0
Parsed instruction at 8000D164: srwi r0 r0 15
Parsed instruction at 8000D168: mulli r0 r0 0xc
Parsed instruction at 8000D16C: addi r26 r4 0x0
Parsed instruction at 8000D170: addi r27 r3 0x0
Parsed instruction at 8000D174: srwi r28 r0 3
Parsed instruction at 8000D178: li r29 0x0
Parsed label: L_8000D17C:
Parsed instruction at 8000D17C: bl __OSGetSystemTime
Parsed instruction at 8000D180: subfc r5 r26 r4
Parsed instruction at 8000D184: subfe r0 r27 r3
Parsed instruction at 8000D188: xoris r4 r0 0x8000
Parsed instruction at 8000D18C: xoris r3 r29 0x8000
Parsed instruction at 8000D190: subfc r0 r28 r5
Parsed instruction at 8000D194: subfe r3 r3 r4
Parsed instruction at 8000D198: subfe r3 r4 r4
Parsed instruction at 8000D19C: neg. r3 r3
Parsed instruction at 8000D1A0: bne .L_8000D17C
Parsed instruction at 8000D1A4: ori r0 r30 0x5
Parsed instruction at 8000D1A8: stw r0 0x0(r31)
Parsed instruction at 8000D1AC: li r0 0x1
Parsed instruction at 8000D1B0: stw r0 lbl_8001EF38@sda21(r0)
Parsed instruction at 8000D1B4: bl __OSGetSystemTime
Parsed instruction at 8000D1B8: stw r4 lbl_8001EF34@sda21(r0)
Parsed instruction at 8000D1BC: stw r3 lbl_8001EF30@sda21(r0)
Parsed instruction at 8000D1C0: lmw r26 0x8(r1)
Parsed instruction at 8000D1C4: lwz r0 0x24(r1)
Parsed instruction at 8000D1C8: addi r1 r1 0x20
Parsed instruction at 8000D1CC: mtlr r0
Parsed instruction at 8000D1D0: blr 
End of function: fn_8000D118, 48 instructions
Parsed function: fn_8000D1D4 at 0x8000D1D4
Parsed instruction at 8000D1D4: li r0 0x1
Parsed instruction at 8000D1D8: stw r0 lbl_8001EF20@sda21(r0)
Parsed instruction at 8000D1DC: li r3 0x1
Parsed instruction at 8000D1E0: stw r0 lbl_8001EF40@sda21(r0)
Parsed instruction at 8000D1E4: blr 
End of function: fn_8000D1D4, 5 instructions
Parsed function: fn_8000D1E8 at 0x8000D1E8
Parsed instruction at 8000D1E8: lis r3 0xcc00
Parsed instruction at 8000D1EC: li r0 0x0
Parsed instruction at 8000D1F0: stw r0 0x6004(r3)
Parsed instruction at 8000D1F4: lwz r3 lbl_8001EF28@sda21(r0)
Parsed instruction at 8000D1F8: stw r0 lbl_8001EF28@sda21(r0)
Parsed instruction at 8000D1FC: blr 
End of function: fn_8000D1E8, 6 instructions
Parsed function: fn_8000D200 at 0x8000D200
Parsed instruction at 8000D200: mflr r0
Parsed instruction at 8000D204: stw r0 0x4(r1)
Parsed instruction at 8000D208: stwu r1 -0x18(r1)
Parsed instruction at 8000D20C: stw r31 0x14(r1)
Parsed instruction at 8000D210: addi r31 r4 0x0
Parsed instruction at 8000D214: stw r30 0x10(r1)
Parsed instruction at 8000D218: addi r30 r3 0x0
Parsed instruction at 8000D21C: bl OSDisableInterrupts
Parsed instruction at 8000D220: stw r30 lbl_8001EF44@sda21(r0)
Parsed instruction at 8000D224: stw r31 lbl_8001EF48@sda21(r0)
Parsed instruction at 8000D228: bl OSRestoreInterrupts
Parsed instruction at 8000D22C: lwz r0 0x1c(r1)
Parsed instruction at 8000D230: lwz r31 0x14(r1)
Parsed instruction at 8000D234: lwz r30 0x10(r1)
Parsed instruction at 8000D238: addi r1 r1 0x18
Parsed instruction at 8000D23C: mtlr r0
Parsed instruction at 8000D240: blr 
End of function: fn_8000D200, 17 instructions
Parsed function: fn_8000D244 at 0x8000D244
Parsed instruction at 8000D244: lis r3 0x8000
Parsed instruction at 8000D248: stw r3 lbl_8001EF68@sda21(r0)
Parsed instruction at 8000D24C: lwz r0 0x38(r3)
Parsed instruction at 8000D250: stw r0 lbl_8001EF6C@sda21(r0)
Parsed instruction at 8000D254: lwz r3 lbl_8001EF6C@sda21(r0)
Parsed instruction at 8000D258: cmplwi r3 0x0
Parsed instruction at 8000D25C: beqlr 
Parsed instruction at 8000D260: lwz r0 0x8(r3)
Parsed instruction at 8000D264: stw r0 lbl_8001EF74@sda21(r0)
Parsed instruction at 8000D268: lwz r0 lbl_8001EF74@sda21(r0)
Parsed instruction at 8000D26C: mulli r0 r0 0xc
Parsed instruction at 8000D270: add r0 r3 r0
Parsed instruction at 8000D274: stw r0 lbl_8001EF70@sda21(r0)
Parsed instruction at 8000D278: blr 
End of function: fn_8000D244, 14 instructions
Parsed function: fn_8000D27C at 0x8000D27C
Parsed instruction at 8000D27C: mflr r0
Parsed instruction at 8000D280: lis r3 lbl_8001B208@ha
Parsed instruction at 8000D284: stw r0 0x4(r1)
Parsed instruction at 8000D288: stwu r1 -0x10(r1)
Parsed instruction at 8000D28C: stw r31 0xc(r1)
Parsed instruction at 8000D290: stw r30 0x8(r1)
Parsed instruction at 8000D294: addi r30 r3 lbl_8001B208@l
Parsed instruction at 8000D298: lwz r0 lbl_8001EFC8@sda21(r0)
Parsed instruction at 8000D29C: cmpwi r0 0x0
Parsed instruction at 8000D2A0: bne .L_8000D360
Parsed instruction at 8000D2A4: bl OSInitAlarm
Parsed instruction at 8000D2A8: li r31 0x1
Parsed instruction at 8000D2AC: stw r31 lbl_8001EFC8@sda21(r0)
Parsed instruction at 8000D2B0: bl fn_8000D244
Parsed instruction at 8000D2B4: bl fn_8000F438
Parsed instruction at 8000D2B8: bl fn_8000C3F0
Parsed instruction at 8000D2BC: lis r0 0x8000
Parsed instruction at 8000D2C0: lis r3 fn_8000C430@ha
Parsed instruction at 8000D2C4: stw r0 lbl_8001EF90@sda21(r0)
Parsed instruction at 8000D2C8: addi r4 r3 fn_8000C430@l
Parsed instruction at 8000D2CC: stw r0 lbl_8001EF8C@sda21(r0)
Parsed instruction at 8000D2D0: li r3 0x15
Parsed instruction at 8000D2D4: bl __OSSetInterruptHandler
Parsed instruction at 8000D2D8: li r3 0x400
Parsed instruction at 8000D2DC: bl __OSUnmaskInterrupts
Parsed instruction at 8000D2E0: li r3 lbl_8001EF7C@sda21
Parsed instruction at 8000D2E4: bl OSInitThreadQueue
Parsed instruction at 8000D2E8: lis r3 0xcc00
Parsed instruction at 8000D2EC: li r0 0x2a
Parsed instruction at 8000D2F0: stw r0 0x6000(r3)
Parsed instruction at 8000D2F4: li r0 0x0
Parsed instruction at 8000D2F8: stw r0 0x6004(r3)
Parsed instruction at 8000D2FC: lwz r3 lbl_8001EF90@sda21(r0)
Parsed instruction at 8000D300: addi r3 r3 0x20
Parsed instruction at 8000D304: lwz r3 0x0(r3)
Parsed instruction at 8000D308: addis r0 r3 0x1ae0
Parsed instruction at 8000D30C: cmplwi r0 0x7c22
Parsed instruction at 8000D310: bne .L_8000D334
Parsed instruction at 8000D314: addi r3 r30 0x0
Parsed instruction at 8000D318: crclr cr1eq
Parsed instruction at 8000D31C: bl OSReport
Parsed instruction at 8000D320: addi r3 r30 0x18
Parsed instruction at 8000D324: crclr cr1eq
Parsed instruction at 8000D328: bl OSReport
Parsed instruction at 8000D32C: bl fn_8000F8A0
Parsed instruction at 8000D330: b .L_8000D360
Parsed label: L_8000D334:
Parsed instruction at 8000D334: subis r0 r3 0xd15
Parsed instruction at 8000D338: cmplwi r0 0xea5e
Parsed instruction at 8000D33C: bne .L_8000D350
Parsed instruction at 8000D340: addi r3 r30 0x24
Parsed instruction at 8000D344: crclr cr1eq
Parsed instruction at 8000D348: bl OSReport
Parsed instruction at 8000D34C: b .L_8000D360
Parsed label: L_8000D350:
Parsed instruction at 8000D350: stw r31 lbl_8001EFC4@sda21(r0)
Parsed instruction at 8000D354: addi r3 r30 0x40
Parsed instruction at 8000D358: crclr cr1eq
Parsed instruction at 8000D35C: bl OSReport
Parsed label: L_8000D360:
Parsed instruction at 8000D360: lwz r0 0x14(r1)
Parsed instruction at 8000D364: lwz r31 0xc(r1)
Parsed instruction at 8000D368: lwz r30 0x8(r1)
Parsed instruction at 8000D36C: addi r1 r1 0x10
Parsed instruction at 8000D370: mtlr r0
Parsed instruction at 8000D374: blr 
End of function: fn_8000D27C, 66 instructions
Parsed function: fn_8000D378 at 0x8000D378
Parsed instruction at 8000D378: mflr r0
Parsed instruction at 8000D37C: lis r3 fn_8000D378@ha
Parsed instruction at 8000D380: stw r0 0x4(r1)
Parsed instruction at 8000D384: addi r0 r3 fn_8000D378@l
Parsed instruction at 8000D388: lis r3 lbl_8001C9A0@ha
Parsed instruction at 8000D38C: stwu r1 -0x8(r1)
Parsed instruction at 8000D390: addi r5 r3 lbl_8001C9A0@l
Parsed instruction at 8000D394: lis r3 fn_8000D3CC@ha
Parsed instruction at 8000D398: stw r0 lbl_8001EFCC@sda21(r0)
Parsed instruction at 8000D39C: addi r6 r3 fn_8000D3CC@l
Parsed instruction at 8000D3A0: lwz r7 lbl_8001EF90@sda21(r0)
Parsed instruction at 8000D3A4: lwz r4 0x8(r5)
Parsed instruction at 8000D3A8: lwz r3 0x38(r7)
Parsed instruction at 8000D3AC: addi r0 r4 0x1f
Parsed instruction at 8000D3B0: lwz r5 0x4(r5)
Parsed instruction at 8000D3B4: clrrwi r4 r0 5
Parsed instruction at 8000D3B8: bl fn_8000C9A8
Parsed instruction at 8000D3BC: lwz r0 0xc(r1)
Parsed instruction at 8000D3C0: addi r1 r1 0x8
Parsed instruction at 8000D3C4: mtlr r0
Parsed instruction at 8000D3C8: blr 
End of function: fn_8000D378, 21 instructions
Parsed function: fn_8000D3CC at 0x8000D3CC
Parsed instruction at 8000D3CC: mflr r0
Parsed instruction at 8000D3D0: cmplwi r3 0x10
Parsed instruction at 8000D3D4: stw r0 0x4(r1)
Parsed instruction at 8000D3D8: stwu r1 -0x8(r1)
Parsed instruction at 8000D3DC: bne .L_8000D3F4
Parsed instruction at 8000D3E0: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D3E4: li r0 -0x1
Parsed instruction at 8000D3E8: stw r0 0xc(r3)
Parsed instruction at 8000D3EC: bl fn_8000D4F4
Parsed instruction at 8000D3F0: b .L_8000D43C
Parsed label: L_8000D3F4:
Parsed instruction at 8000D3F4: clrlwi. r0 r3 31
Parsed instruction at 8000D3F8: beq .L_8000D438
Parsed instruction at 8000D3FC: lis r3 lbl_8001CA20@ha
Parsed instruction at 8000D400: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D404: addi r0 r3 lbl_8001CA20@l
Parsed instruction at 8000D408: li r3 0x0
Parsed instruction at 8000D40C: stw r0 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D410: stw r3 lbl_8001EFBC@sda21(r0)
Parsed instruction at 8000D414: stw r3 0xc(r4)
Parsed instruction at 8000D418: lwz r12 0x28(r4)
Parsed instruction at 8000D41C: cmplwi r12 0x0
Parsed instruction at 8000D420: beq .L_8000D430
Parsed instruction at 8000D424: mtlr r12
Parsed instruction at 8000D428: li r3 0x0
Parsed instruction at 8000D42C: blrl 
Parsed label: L_8000D430:
Parsed instruction at 8000D430: bl fn_8000E240
Parsed instruction at 8000D434: b .L_8000D43C
Parsed label: L_8000D438:
Parsed instruction at 8000D438: bl fn_8000D590
Parsed label: L_8000D43C:
Parsed instruction at 8000D43C: lwz r0 0xc(r1)
Parsed instruction at 8000D440: addi r1 r1 0x8
Parsed instruction at 8000D444: mtlr r0
Parsed instruction at 8000D448: blr 
End of function: fn_8000D3CC, 36 instructions
Parsed function: fn_8000D44C at 0x8000D44C
Parsed instruction at 8000D44C: mflr r0
Parsed instruction at 8000D450: cmplwi r3 0x10
Parsed instruction at 8000D454: stw r0 0x4(r1)
Parsed instruction at 8000D458: stwu r1 -0x18(r1)
Parsed instruction at 8000D45C: stw r31 0x14(r1)
Parsed instruction at 8000D460: bne .L_8000D478
Parsed instruction at 8000D464: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D468: li r0 -0x1
Parsed instruction at 8000D46C: stw r0 0xc(r3)
Parsed instruction at 8000D470: bl fn_8000D4F4
Parsed instruction at 8000D474: b .L_8000D4E0
Parsed label: L_8000D478:
Parsed instruction at 8000D478: lis r3 lbl_8001CA20@ha
Parsed instruction at 8000D47C: lwz r31 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D480: addi r0 r3 lbl_8001CA20@l
Parsed instruction at 8000D484: li r3 0x1
Parsed instruction at 8000D488: stw r0 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D48C: stw r3 lbl_8001EFA0@sda21(r0)
Parsed instruction at 8000D490: lwz r12 0x28(r31)
Parsed instruction at 8000D494: cmplwi r12 0x0
Parsed instruction at 8000D498: beq .L_8000D4AC
Parsed instruction at 8000D49C: mtlr r12
Parsed instruction at 8000D4A0: addi r4 r31 0x0
Parsed instruction at 8000D4A4: li r3 -0x1
Parsed instruction at 8000D4A8: blrl 
Parsed label: L_8000D4AC:
Parsed instruction at 8000D4AC: lwz r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000D4B0: cmplwi r0 0x0
Parsed instruction at 8000D4B4: beq .L_8000D4DC
Parsed instruction at 8000D4B8: lwz r12 lbl_8001EFAC@sda21(r0)
Parsed instruction at 8000D4BC: li r0 0x0
Parsed instruction at 8000D4C0: stw r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000D4C4: cmplwi r12 0x0
Parsed instruction at 8000D4C8: beq .L_8000D4DC
Parsed instruction at 8000D4CC: mtlr r12
Parsed instruction at 8000D4D0: addi r4 r31 0x0
Parsed instruction at 8000D4D4: li r3 0x0
Parsed instruction at 8000D4D8: blrl 
Parsed label: L_8000D4DC:
Parsed instruction at 8000D4DC: bl fn_8000E240
Parsed label: L_8000D4E0:
Parsed instruction at 8000D4E0: lwz r0 0x1c(r1)
Parsed instruction at 8000D4E4: lwz r31 0x14(r1)
Parsed instruction at 8000D4E8: addi r1 r1 0x18
Parsed instruction at 8000D4EC: mtlr r0
Parsed instruction at 8000D4F0: blr 
End of function: fn_8000D44C, 46 instructions
Parsed function: fn_8000D4F4 at 0x8000D4F4
Parsed instruction at 8000D4F4: mflr r0
Parsed instruction at 8000D4F8: lis r3 0x123
Parsed instruction at 8000D4FC: stw r0 0x4(r1)
Parsed instruction at 8000D500: addi r3 r3 0x4568
Parsed instruction at 8000D504: stwu r1 -0x10(r1)
Parsed instruction at 8000D508: stw r31 0xc(r1)
Parsed instruction at 8000D50C: bl fn_8000F74C
Parsed instruction at 8000D510: bl fn_8000EEC0
Parsed instruction at 8000D514: lis r3 lbl_8001CA20@ha
Parsed instruction at 8000D518: lwz r31 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D51C: addi r0 r3 lbl_8001CA20@l
Parsed instruction at 8000D520: li r3 0x1
Parsed instruction at 8000D524: stw r0 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D528: stw r3 lbl_8001EFA0@sda21(r0)
Parsed instruction at 8000D52C: lwz r12 0x28(r31)
Parsed instruction at 8000D530: cmplwi r12 0x0
Parsed instruction at 8000D534: beq .L_8000D548
Parsed instruction at 8000D538: mtlr r12
Parsed instruction at 8000D53C: addi r4 r31 0x0
Parsed instruction at 8000D540: li r3 -0x1
Parsed instruction at 8000D544: blrl 
Parsed label: L_8000D548:
Parsed instruction at 8000D548: lwz r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000D54C: cmplwi r0 0x0
Parsed instruction at 8000D550: beq .L_8000D578
Parsed instruction at 8000D554: lwz r12 lbl_8001EFAC@sda21(r0)
Parsed instruction at 8000D558: li r0 0x0
Parsed instruction at 8000D55C: stw r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000D560: cmplwi r12 0x0
Parsed instruction at 8000D564: beq .L_8000D578
Parsed instruction at 8000D568: mtlr r12
Parsed instruction at 8000D56C: addi r4 r31 0x0
Parsed instruction at 8000D570: li r3 0x0
Parsed instruction at 8000D574: blrl 
Parsed label: L_8000D578:
Parsed instruction at 8000D578: bl fn_8000E240
Parsed instruction at 8000D57C: lwz r0 0x14(r1)
Parsed instruction at 8000D580: lwz r31 0xc(r1)
Parsed instruction at 8000D584: addi r1 r1 0x10
Parsed instruction at 8000D588: mtlr r0
Parsed instruction at 8000D58C: blr 
End of function: fn_8000D4F4, 41 instructions
Parsed function: fn_8000D590 at 0x8000D590
Parsed instruction at 8000D590: mflr r0
Parsed instruction at 8000D594: lis r3 fn_8000D66C@ha
Parsed instruction at 8000D598: stw r0 0x4(r1)
Parsed instruction at 8000D59C: addi r3 r3 fn_8000D66C@l
Parsed instruction at 8000D5A0: stwu r1 -0x8(r1)
Parsed instruction at 8000D5A4: bl fn_8000CE30
Parsed instruction at 8000D5A8: lwz r0 0xc(r1)
Parsed instruction at 8000D5AC: addi r1 r1 0x8
Parsed instruction at 8000D5B0: mtlr r0
Parsed instruction at 8000D5B4: blr 
End of function: fn_8000D590, 10 instructions
Parsed function: fn_8000D5B8 at 0x8000D5B8
Parsed instruction at 8000D5B8: subis r0 r3 0x2
Parsed instruction at 8000D5BC: cmplwi r0 0x400
Parsed instruction at 8000D5C0: bne .L_8000D5D0
Parsed instruction at 8000D5C4: stw r3 lbl_8001EFB8@sda21(r0)
Parsed instruction at 8000D5C8: li r3 0x1
Parsed instruction at 8000D5CC: blr 
Parsed label: L_8000D5D0:
Parsed instruction at 8000D5D0: clrlwi r4 r3 8
Parsed instruction at 8000D5D4: subis r0 r4 0x6
Parsed instruction at 8000D5D8: cmplwi r0 0x2800
Parsed instruction at 8000D5DC: beq .L_8000D5F8
Parsed instruction at 8000D5E0: subis r0 r4 0x2
Parsed instruction at 8000D5E4: cmplwi r0 0x3a00
Parsed instruction at 8000D5E8: beq .L_8000D5F8
Parsed instruction at 8000D5EC: subis r0 r4 0xb
Parsed instruction at 8000D5F0: cmplwi r0 0x5a01
Parsed instruction at 8000D5F4: bne .L_8000D600
Parsed label: L_8000D5F8:
Parsed instruction at 8000D5F8: li r3 0x0
Parsed instruction at 8000D5FC: blr 
Parsed label: L_8000D600:
Parsed instruction at 8000D600: lwz r3 lbl_8001EFBC@sda21(r0)
Parsed instruction at 8000D604: addi r0 r3 0x1
Parsed instruction at 8000D608: stw r0 lbl_8001EFBC@sda21(r0)
Parsed instruction at 8000D60C: lwz r0 lbl_8001EFBC@sda21(r0)
Parsed instruction at 8000D610: cmpwi r0 0x2
Parsed instruction at 8000D614: bne .L_8000D63C
Parsed instruction at 8000D618: lwz r0 lbl_8001EFB8@sda21(r0)
Parsed instruction at 8000D61C: cmplw r4 r0
Parsed instruction at 8000D620: bne .L_8000D630
Parsed instruction at 8000D624: stw r4 lbl_8001EFB8@sda21(r0)
Parsed instruction at 8000D628: li r3 0x1
Parsed instruction at 8000D62C: blr 
Parsed label: L_8000D630:
Parsed instruction at 8000D630: stw r4 lbl_8001EFB8@sda21(r0)
Parsed instruction at 8000D634: li r3 0x2
Parsed instruction at 8000D638: blr 
Parsed label: L_8000D63C:
Parsed instruction at 8000D63C: subis r0 r4 0x3
Parsed instruction at 8000D640: stw r4 lbl_8001EFB8@sda21(r0)
Parsed instruction at 8000D644: cmplwi r0 0x1100
Parsed instruction at 8000D648: beq .L_8000D65C
Parsed instruction at 8000D64C: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D650: lwz r0 0x8(r3)
Parsed instruction at 8000D654: cmplwi r0 0x5
Parsed instruction at 8000D658: bne .L_8000D664
Parsed label: L_8000D65C:
Parsed instruction at 8000D65C: li r3 0x2
Parsed instruction at 8000D660: blr 
Parsed label: L_8000D664:
Parsed instruction at 8000D664: li r3 0x3
Parsed instruction at 8000D668: blr 
End of function: fn_8000D5B8, 52 instructions
Parsed function: fn_8000D66C at 0x8000D66C
Parsed instruction at 8000D66C: mflr r0
Parsed instruction at 8000D670: cmplwi r3 0x10
Parsed instruction at 8000D674: stw r0 0x4(r1)
Parsed instruction at 8000D678: stwu r1 -0x20(r1)
Parsed instruction at 8000D67C: stw r31 0x1c(r1)
Parsed instruction at 8000D680: stw r30 0x18(r1)
Parsed instruction at 8000D684: stw r29 0x14(r1)
Parsed instruction at 8000D688: stw r28 0x10(r1)
Parsed instruction at 8000D68C: bne .L_8000D6B8
Parsed instruction at 8000D690: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D694: li r0 -0x1
Parsed instruction at 8000D698: lis r3 0x123
Parsed instruction at 8000D69C: stw r0 0xc(r4)
Parsed instruction at 8000D6A0: addi r3 r3 0x4568
Parsed instruction at 8000D6A4: bl fn_8000F74C
Parsed instruction at 8000D6A8: bl fn_8000EEC0
Parsed instruction at 8000D6AC: li r3 0x0
Parsed instruction at 8000D6B0: bl fn_8000D44C
Parsed instruction at 8000D6B4: b .L_8000D8E0
Parsed label: L_8000D6B8:
Parsed instruction at 8000D6B8: rlwinm. r0 r3 0 30 30
Parsed instruction at 8000D6BC: beq .L_8000D6E8
Parsed instruction at 8000D6C0: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D6C4: li r0 -0x1
Parsed instruction at 8000D6C8: lis r3 0x123
Parsed instruction at 8000D6CC: stw r0 0xc(r4)
Parsed instruction at 8000D6D0: addi r3 r3 0x4567
Parsed instruction at 8000D6D4: bl fn_8000F74C
Parsed instruction at 8000D6D8: lis r3 fn_8000D44C@ha
Parsed instruction at 8000D6DC: addi r3 r3 fn_8000D44C@l
Parsed instruction at 8000D6E0: bl fn_8000CDA4
Parsed instruction at 8000D6E4: b .L_8000D8E0
Parsed label: L_8000D6E8:
Parsed instruction at 8000D6E8: lis r3 0xcc00
Parsed instruction at 8000D6EC: lwz r29 0x6020(r3)
Parsed instruction at 8000D6F0: addi r3 r29 0x0
Parsed instruction at 8000D6F4: clrrwi r28 r29 24
Parsed instruction at 8000D6F8: bl fn_8000D5B8
Parsed instruction at 8000D6FC: addi r31 r3 0x0
Parsed instruction at 8000D700: cmplwi r31 0x1
Parsed instruction at 8000D704: bne .L_8000D72C
Parsed instruction at 8000D708: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D70C: li r0 -0x1
Parsed instruction at 8000D710: addi r3 r29 0x0
Parsed instruction at 8000D714: stw r0 0xc(r4)
Parsed instruction at 8000D718: bl fn_8000F74C
Parsed instruction at 8000D71C: lis r3 fn_8000D44C@ha
Parsed instruction at 8000D720: addi r3 r3 fn_8000D44C@l
Parsed instruction at 8000D724: bl fn_8000CDA4
Parsed instruction at 8000D728: b .L_8000D8E0
Parsed label: L_8000D72C:
Parsed instruction at 8000D72C: subi r0 r31 0x2
Parsed instruction at 8000D730: cmplwi r0 0x1
Parsed instruction at 8000D734: bgt .L_8000D740
Parsed instruction at 8000D738: li r4 0x0
Parsed instruction at 8000D73C: b .L_8000D780
Parsed label: L_8000D740:
Parsed instruction at 8000D740: subis r0 r28 0x100
Parsed instruction at 8000D744: cmplwi r0 0x0
Parsed instruction at 8000D748: bne .L_8000D754
Parsed instruction at 8000D74C: li r4 0x4
Parsed instruction at 8000D750: b .L_8000D780
Parsed label: L_8000D754:
Parsed instruction at 8000D754: subis r0 r28 0x200
Parsed instruction at 8000D758: cmplwi r0 0x0
Parsed instruction at 8000D75C: bne .L_8000D768
Parsed instruction at 8000D760: li r4 0x6
Parsed instruction at 8000D764: b .L_8000D780
Parsed label: L_8000D768:
Parsed instruction at 8000D768: subis r0 r28 0x300
Parsed instruction at 8000D76C: cmplwi r0 0x0
Parsed instruction at 8000D770: bne .L_8000D77C
Parsed instruction at 8000D774: li r4 0x3
Parsed instruction at 8000D778: b .L_8000D780
Parsed label: L_8000D77C:
Parsed instruction at 8000D77C: li r4 0x5
Parsed label: L_8000D780:
Parsed instruction at 8000D780: lwz r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000D784: cmplwi r0 0x0
Parsed instruction at 8000D788: beq .L_8000D7F4
Parsed instruction at 8000D78C: lis r3 lbl_8001CA20@ha
Parsed instruction at 8000D790: stw r4 lbl_8001EFB0@sda21(r0)
Parsed instruction at 8000D794: li r0 0x0
Parsed instruction at 8000D798: lwz r30 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D79C: addi r3 r3 lbl_8001CA20@l
Parsed instruction at 8000D7A0: stw r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000D7A4: li r0 0xa
Parsed instruction at 8000D7A8: stw r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D7AC: stw r0 0xc(r30)
Parsed instruction at 8000D7B0: lwz r12 0x28(r30)
Parsed instruction at 8000D7B4: cmplwi r12 0x0
Parsed instruction at 8000D7B8: beq .L_8000D7CC
Parsed instruction at 8000D7BC: mtlr r12
Parsed instruction at 8000D7C0: addi r4 r30 0x0
Parsed instruction at 8000D7C4: li r3 -0x3
Parsed instruction at 8000D7C8: blrl 
Parsed label: L_8000D7CC:
Parsed instruction at 8000D7CC: lwz r12 lbl_8001EFAC@sda21(r0)
Parsed instruction at 8000D7D0: cmplwi r12 0x0
Parsed instruction at 8000D7D4: beq .L_8000D7E8
Parsed instruction at 8000D7D8: mtlr r12
Parsed instruction at 8000D7DC: addi r4 r30 0x0
Parsed instruction at 8000D7E0: li r3 0x0
Parsed instruction at 8000D7E4: blrl 
Parsed label: L_8000D7E8:
Parsed instruction at 8000D7E8: bl fn_8000E240
Parsed instruction at 8000D7EC: li r0 0x1
Parsed instruction at 8000D7F0: b .L_8000D7F8
Parsed label: L_8000D7F4:
Parsed instruction at 8000D7F4: li r0 0x0
Parsed label: L_8000D7F8:
Parsed instruction at 8000D7F8: cmpwi r0 0x0
Parsed instruction at 8000D7FC: bne .L_8000D8E0
Parsed instruction at 8000D800: cmplwi r31 0x2
Parsed instruction at 8000D804: bne .L_8000D818
Parsed instruction at 8000D808: mr r3 r29
Parsed instruction at 8000D80C: bl fn_8000F74C
Parsed instruction at 8000D810: bl fn_8000DA00
Parsed instruction at 8000D814: b .L_8000D8E0
Parsed label: L_8000D818:
Parsed instruction at 8000D818: cmplwi r31 0x3
Parsed instruction at 8000D81C: bne .L_8000D85C
Parsed instruction at 8000D820: clrlwi r3 r29 8
Parsed instruction at 8000D824: subis r0 r3 0x3
Parsed instruction at 8000D828: cmplwi r0 0x1100
Parsed instruction at 8000D82C: bne .L_8000D848
Parsed instruction at 8000D830: lwz r5 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D834: lis r3 fn_8000D900@ha
Parsed instruction at 8000D838: addi r4 r3 fn_8000D900@l
Parsed instruction at 8000D83C: lwz r3 0x10(r5)
Parsed instruction at 8000D840: bl fn_8000CC40
Parsed instruction at 8000D844: b .L_8000D8E0
Parsed label: L_8000D848:
Parsed instruction at 8000D848: lwz r12 lbl_8001EFCC@sda21(r0)
Parsed instruction at 8000D84C: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D850: mtlr r12
Parsed instruction at 8000D854: blrl 
Parsed instruction at 8000D858: b .L_8000D8E0
Parsed label: L_8000D85C:
Parsed instruction at 8000D85C: subis r0 r28 0x100
Parsed instruction at 8000D860: cmplwi r0 0x0
Parsed instruction at 8000D864: bne .L_8000D87C
Parsed instruction at 8000D868: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D86C: li r0 0x5
Parsed instruction at 8000D870: stw r0 0xc(r3)
Parsed instruction at 8000D874: bl fn_8000E134
Parsed instruction at 8000D878: b .L_8000D8E0
Parsed label: L_8000D87C:
Parsed instruction at 8000D87C: subis r0 r28 0x200
Parsed instruction at 8000D880: cmplwi r0 0x0
Parsed instruction at 8000D884: bne .L_8000D89C
Parsed instruction at 8000D888: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D88C: li r0 0x3
Parsed instruction at 8000D890: stw r0 0xc(r3)
Parsed instruction at 8000D894: bl fn_8000DFC8
Parsed instruction at 8000D898: b .L_8000D8E0
Parsed label: L_8000D89C:
Parsed instruction at 8000D89C: subis r0 r28 0x300
Parsed instruction at 8000D8A0: cmplwi r0 0x0
Parsed instruction at 8000D8A4: bne .L_8000D8BC
Parsed instruction at 8000D8A8: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D8AC: li r0 0x4
Parsed instruction at 8000D8B0: stw r0 0xc(r3)
Parsed instruction at 8000D8B4: bl fn_8000E134
Parsed instruction at 8000D8B8: b .L_8000D8E0
Parsed label: L_8000D8BC:
Parsed instruction at 8000D8BC: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D8C0: li r0 -0x1
Parsed instruction at 8000D8C4: lis r3 0x123
Parsed instruction at 8000D8C8: stw r0 0xc(r4)
Parsed instruction at 8000D8CC: addi r3 r3 0x4567
Parsed instruction at 8000D8D0: bl fn_8000F74C
Parsed instruction at 8000D8D4: lis r3 fn_8000D44C@ha
Parsed instruction at 8000D8D8: addi r3 r3 fn_8000D44C@l
Parsed instruction at 8000D8DC: bl fn_8000CDA4
Parsed label: L_8000D8E0:
Parsed instruction at 8000D8E0: lwz r0 0x24(r1)
Parsed instruction at 8000D8E4: lwz r31 0x1c(r1)
Parsed instruction at 8000D8E8: lwz r30 0x18(r1)
Parsed instruction at 8000D8EC: lwz r29 0x14(r1)
Parsed instruction at 8000D8F0: lwz r28 0x10(r1)
Parsed instruction at 8000D8F4: addi r1 r1 0x20
Parsed instruction at 8000D8F8: mtlr r0
Parsed instruction at 8000D8FC: blr 
End of function: fn_8000D66C, 184 instructions
Parsed function: fn_8000D900 at 0x8000D900
Parsed instruction at 8000D900: mflr r0
Parsed instruction at 8000D904: cmplwi r3 0x10
Parsed instruction at 8000D908: stw r0 0x4(r1)
Parsed instruction at 8000D90C: stwu r1 -0x8(r1)
Parsed instruction at 8000D910: bne .L_8000D93C
Parsed instruction at 8000D914: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D918: li r0 -0x1
Parsed instruction at 8000D91C: lis r3 0x123
Parsed instruction at 8000D920: stw r0 0xc(r4)
Parsed instruction at 8000D924: addi r3 r3 0x4568
Parsed instruction at 8000D928: bl fn_8000F74C
Parsed instruction at 8000D92C: bl fn_8000EEC0
Parsed instruction at 8000D930: li r3 0x0
Parsed instruction at 8000D934: bl fn_8000D44C
Parsed instruction at 8000D938: b .L_8000D958
Parsed label: L_8000D93C:
Parsed instruction at 8000D93C: clrlwi. r0 r3 31
Parsed instruction at 8000D940: beq .L_8000D94C
Parsed instruction at 8000D944: bl fn_8000DA00
Parsed instruction at 8000D948: b .L_8000D958
Parsed label: L_8000D94C:
Parsed instruction at 8000D94C: lis r3 fn_8000D968@ha
Parsed instruction at 8000D950: addi r3 r3 fn_8000D968@l
Parsed instruction at 8000D954: bl fn_8000CE30
Parsed label: L_8000D958:
Parsed instruction at 8000D958: lwz r0 0xc(r1)
Parsed instruction at 8000D95C: addi r1 r1 0x8
Parsed instruction at 8000D960: mtlr r0
Parsed instruction at 8000D964: blr 
End of function: fn_8000D900, 29 instructions
Parsed function: fn_8000D968 at 0x8000D968
Parsed instruction at 8000D968: mflr r0
Parsed instruction at 8000D96C: cmplwi r3 0x10
Parsed instruction at 8000D970: stw r0 0x4(r1)
Parsed instruction at 8000D974: stwu r1 -0x8(r1)
Parsed instruction at 8000D978: bne .L_8000D9A4
Parsed instruction at 8000D97C: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D980: li r0 -0x1
Parsed instruction at 8000D984: lis r3 0x123
Parsed instruction at 8000D988: stw r0 0xc(r4)
Parsed instruction at 8000D98C: addi r3 r3 0x4568
Parsed instruction at 8000D990: bl fn_8000F74C
Parsed instruction at 8000D994: bl fn_8000EEC0
Parsed instruction at 8000D998: li r3 0x0
Parsed instruction at 8000D99C: bl fn_8000D44C
Parsed instruction at 8000D9A0: b .L_8000D9F0
Parsed label: L_8000D9A4:
Parsed instruction at 8000D9A4: rlwinm. r0 r3 0 30 30
Parsed instruction at 8000D9A8: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000D9AC: li r4 -0x1
Parsed instruction at 8000D9B0: stw r4 0xc(r3)
Parsed instruction at 8000D9B4: beq .L_8000D9D4
Parsed instruction at 8000D9B8: lis r3 0x123
Parsed instruction at 8000D9BC: addi r3 r3 0x4567
Parsed instruction at 8000D9C0: bl fn_8000F74C
Parsed instruction at 8000D9C4: lis r3 fn_8000D44C@ha
Parsed instruction at 8000D9C8: addi r3 r3 fn_8000D44C@l
Parsed instruction at 8000D9CC: bl fn_8000CDA4
Parsed instruction at 8000D9D0: b .L_8000D9F0
Parsed label: L_8000D9D4:
Parsed instruction at 8000D9D4: lis r3 0xcc00
Parsed instruction at 8000D9D8: addi r3 r3 0x6000
Parsed instruction at 8000D9DC: lwz r3 0x20(r3)
Parsed instruction at 8000D9E0: bl fn_8000F74C
Parsed instruction at 8000D9E4: lis r3 fn_8000D44C@ha
Parsed instruction at 8000D9E8: addi r3 r3 fn_8000D44C@l
Parsed instruction at 8000D9EC: bl fn_8000CDA4
Parsed label: L_8000D9F0:
Parsed instruction at 8000D9F0: lwz r0 0xc(r1)
Parsed instruction at 8000D9F4: addi r1 r1 0x8
Parsed instruction at 8000D9F8: mtlr r0
Parsed instruction at 8000D9FC: blr 
End of function: fn_8000D968, 41 instructions
Parsed function: fn_8000DA00 at 0x8000DA00
Parsed instruction at 8000DA00: mflr r0
Parsed instruction at 8000DA04: lis r3 fn_8000DA28@ha
Parsed instruction at 8000DA08: stw r0 0x4(r1)
Parsed instruction at 8000DA0C: addi r3 r3 fn_8000DA28@l
Parsed instruction at 8000DA10: stwu r1 -0x8(r1)
Parsed instruction at 8000DA14: bl fn_8000CDA4
Parsed instruction at 8000DA18: lwz r0 0xc(r1)
Parsed instruction at 8000DA1C: addi r1 r1 0x8
Parsed instruction at 8000DA20: mtlr r0
Parsed instruction at 8000DA24: blr 
End of function: fn_8000DA00, 10 instructions
Parsed function: fn_8000DA28 at 0x8000DA28
Parsed instruction at 8000DA28: mflr r0
Parsed instruction at 8000DA2C: cmplwi r3 0x10
Parsed instruction at 8000DA30: stw r0 0x4(r1)
Parsed instruction at 8000DA34: stwu r1 -0x18(r1)
Parsed instruction at 8000DA38: stw r31 0x14(r1)
Parsed instruction at 8000DA3C: bne .L_8000DA68
Parsed instruction at 8000DA40: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DA44: li r0 -0x1
Parsed instruction at 8000DA48: lis r3 0x123
Parsed instruction at 8000DA4C: stw r0 0xc(r4)
Parsed instruction at 8000DA50: addi r3 r3 0x4568
Parsed instruction at 8000DA54: bl fn_8000F74C
Parsed instruction at 8000DA58: bl fn_8000EEC0
Parsed instruction at 8000DA5C: li r3 0x0
Parsed instruction at 8000DA60: bl fn_8000D44C
Parsed instruction at 8000DA64: b .L_8000DB6C
Parsed label: L_8000DA68:
Parsed instruction at 8000DA68: rlwinm. r0 r3 0 30 30
Parsed instruction at 8000DA6C: beq .L_8000DA98
Parsed instruction at 8000DA70: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DA74: li r0 -0x1
Parsed instruction at 8000DA78: lis r3 0x123
Parsed instruction at 8000DA7C: stw r0 0xc(r4)
Parsed instruction at 8000DA80: addi r3 r3 0x4567
Parsed instruction at 8000DA84: bl fn_8000F74C
Parsed instruction at 8000DA88: lis r3 fn_8000D44C@ha
Parsed instruction at 8000DA8C: addi r3 r3 fn_8000D44C@l
Parsed instruction at 8000DA90: bl fn_8000CDA4
Parsed instruction at 8000DA94: b .L_8000DB6C
Parsed label: L_8000DA98:
Parsed instruction at 8000DA98: li r0 0x0
Parsed instruction at 8000DA9C: stw r0 lbl_8001EFBC@sda21(r0)
Parsed instruction at 8000DAA0: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000DAA4: cmplwi r0 0x4
Parsed instruction at 8000DAA8: beq .L_8000DAD0
Parsed instruction at 8000DAAC: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000DAB0: cmplwi r0 0x5
Parsed instruction at 8000DAB4: beq .L_8000DAD0
Parsed instruction at 8000DAB8: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000DABC: cmplwi r0 0xd
Parsed instruction at 8000DAC0: beq .L_8000DAD0
Parsed instruction at 8000DAC4: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000DAC8: cmplwi r0 0xf
Parsed instruction at 8000DACC: bne .L_8000DAD8
Parsed label: L_8000DAD0:
Parsed instruction at 8000DAD0: li r0 0x1
Parsed instruction at 8000DAD4: stw r0 lbl_8001EFC0@sda21(r0)
Parsed label: L_8000DAD8:
Parsed instruction at 8000DAD8: lwz r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000DADC: cmplwi r0 0x0
Parsed instruction at 8000DAE0: beq .L_8000DB50
Parsed instruction at 8000DAE4: li r0 0x2
Parsed instruction at 8000DAE8: lwz r31 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DAEC: lis r3 lbl_8001CA20@ha
Parsed instruction at 8000DAF0: stw r0 lbl_8001EFB0@sda21(r0)
Parsed instruction at 8000DAF4: addi r0 r3 lbl_8001CA20@l
Parsed instruction at 8000DAF8: li r3 0x0
Parsed instruction at 8000DAFC: stw r0 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DB00: li r0 0xa
Parsed instruction at 8000DB04: stw r3 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000DB08: stw r0 0xc(r31)
Parsed instruction at 8000DB0C: lwz r12 0x28(r31)
Parsed instruction at 8000DB10: cmplwi r12 0x0
Parsed instruction at 8000DB14: beq .L_8000DB28
Parsed instruction at 8000DB18: mtlr r12
Parsed instruction at 8000DB1C: addi r4 r31 0x0
Parsed instruction at 8000DB20: li r3 -0x3
Parsed instruction at 8000DB24: blrl 
Parsed label: L_8000DB28:
Parsed instruction at 8000DB28: lwz r12 lbl_8001EFAC@sda21(r0)
Parsed instruction at 8000DB2C: cmplwi r12 0x0
Parsed instruction at 8000DB30: beq .L_8000DB44
Parsed instruction at 8000DB34: mtlr r12
Parsed instruction at 8000DB38: addi r4 r31 0x0
Parsed instruction at 8000DB3C: li r3 0x0
Parsed instruction at 8000DB40: blrl 
Parsed label: L_8000DB44:
Parsed instruction at 8000DB44: bl fn_8000E240
Parsed instruction at 8000DB48: li r0 0x1
Parsed instruction at 8000DB4C: b .L_8000DB54
Parsed label: L_8000DB50:
Parsed instruction at 8000DB50: li r0 0x0
Parsed label: L_8000DB54:
Parsed instruction at 8000DB54: cmpwi r0 0x0
Parsed instruction at 8000DB58: bne .L_8000DB6C
Parsed instruction at 8000DB5C: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DB60: li r0 0xb
Parsed instruction at 8000DB64: stw r0 0xc(r3)
Parsed instruction at 8000DB68: bl fn_8000E134
Parsed label: L_8000DB6C:
Parsed instruction at 8000DB6C: lwz r0 0x1c(r1)
Parsed instruction at 8000DB70: lwz r31 0x14(r1)
Parsed instruction at 8000DB74: addi r1 r1 0x18
Parsed instruction at 8000DB78: mtlr r0
Parsed instruction at 8000DB7C: blr 
End of function: fn_8000DA28, 95 instructions
Parsed function: fn_8000DB80 at 0x8000DB80
Parsed instruction at 8000DB80: mflr r0
Parsed instruction at 8000DB84: lis r3 lbl_8001C9A0@ha
Parsed instruction at 8000DB88: stw r0 0x4(r1)
Parsed instruction at 8000DB8C: stwu r1 -0x10(r1)
Parsed instruction at 8000DB90: stw r31 0xc(r1)
Parsed instruction at 8000DB94: addi r31 r3 lbl_8001C9A0@l
Parsed instruction at 8000DB98: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000DB9C: cmpwi r0 0x3
Parsed instruction at 8000DBA0: beq .L_8000DBA8
Parsed instruction at 8000DBA4: b .L_8000DC14
Parsed label: L_8000DBA8:
Parsed instruction at 8000DBA8: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DBAC: addi r3 r31 0x0
Parsed instruction at 8000DBB0: li r5 0x1c
Parsed instruction at 8000DBB4: lwz r4 0x24(r4)
Parsed instruction at 8000DBB8: bl fn_800121EC
Parsed instruction at 8000DBBC: cmpwi r3 0x0
Parsed instruction at 8000DBC0: beq .L_8000DBD4
Parsed instruction at 8000DBC4: lis r3 fn_8000DCD0@ha
Parsed instruction at 8000DBC8: addi r3 r3 fn_8000DCD0@l
Parsed instruction at 8000DBCC: bl fn_8000CDA4
Parsed instruction at 8000DBD0: b .L_8000DC50
Parsed label: L_8000DBD4:
Parsed instruction at 8000DBD4: lwz r3 lbl_8001EF8C@sda21(r0)
Parsed instruction at 8000DBD8: addi r4 r31 0x0
Parsed instruction at 8000DBDC: li r5 0x20
Parsed instruction at 8000DBE0: bl memcpy
Parsed instruction at 8000DBE4: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DBE8: li r0 0x1
Parsed instruction at 8000DBEC: addi r3 r31 0x0
Parsed instruction at 8000DBF0: stw r0 0xc(r4)
Parsed instruction at 8000DBF4: li r4 0x20
Parsed instruction at 8000DBF8: bl DCInvalidateRange
Parsed instruction at 8000DBFC: lis r4 fn_8000DC98@ha
Parsed instruction at 8000DC00: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DC04: addi r0 r4 fn_8000DC98@l
Parsed instruction at 8000DC08: stw r0 lbl_8001EFCC@sda21(r0)
Parsed instruction at 8000DC0C: bl fn_8000DC98
Parsed instruction at 8000DC10: b .L_8000DC50
Parsed label: L_8000DC14:
Parsed instruction at 8000DC14: lwz r4 lbl_8001EF8C@sda21(r0)
Parsed instruction at 8000DC18: addi r3 r31 0x0
Parsed instruction at 8000DC1C: li r5 0x20
Parsed instruction at 8000DC20: bl fn_800121EC
Parsed instruction at 8000DC24: cmpwi r3 0x0
Parsed instruction at 8000DC28: beq .L_8000DC3C
Parsed instruction at 8000DC2C: lis r3 fn_8000DCD0@ha
Parsed instruction at 8000DC30: addi r3 r3 fn_8000DCD0@l
Parsed instruction at 8000DC34: bl fn_8000CDA4
Parsed instruction at 8000DC38: b .L_8000DC50
Parsed label: L_8000DC3C:
Parsed instruction at 8000DC3C: lis r4 fn_8000DC64@ha
Parsed instruction at 8000DC40: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DC44: addi r0 r4 fn_8000DC64@l
Parsed instruction at 8000DC48: stw r0 lbl_8001EFCC@sda21(r0)
Parsed instruction at 8000DC4C: bl fn_8000DC64
Parsed label: L_8000DC50:
Parsed instruction at 8000DC50: lwz r0 0x14(r1)
Parsed instruction at 8000DC54: lwz r31 0xc(r1)
Parsed instruction at 8000DC58: addi r1 r1 0x10
Parsed instruction at 8000DC5C: mtlr r0
Parsed instruction at 8000DC60: blr 
End of function: fn_8000DB80, 62 instructions
Parsed function: fn_8000DC64 at 0x8000DC64
Parsed instruction at 8000DC64: mflr r0
Parsed instruction at 8000DC68: lis r3 fn_8000DE88@ha
Parsed instruction at 8000DC6C: stw r0 0x4(r1)
Parsed instruction at 8000DC70: addi r5 r3 fn_8000DE88@l
Parsed instruction at 8000DC74: stwu r1 -0x8(r1)
Parsed instruction at 8000DC78: lwz r4 lbl_8001EF8C@sda21(r0)
Parsed instruction at 8000DC7C: lbz r3 0x8(r4)
Parsed instruction at 8000DC80: li r4 0xa
Parsed instruction at 8000DC84: bl fn_8000D07C
Parsed instruction at 8000DC88: lwz r0 0xc(r1)
Parsed instruction at 8000DC8C: addi r1 r1 0x8
Parsed instruction at 8000DC90: mtlr r0
Parsed instruction at 8000DC94: blr 
End of function: fn_8000DC64, 13 instructions
Parsed function: fn_8000DC98 at 0x8000DC98
Parsed instruction at 8000DC98: mflr r0
Parsed instruction at 8000DC9C: lis r3 lbl_8001C9A0@ha
Parsed instruction at 8000DCA0: stw r0 0x4(r1)
Parsed instruction at 8000DCA4: lis r4 fn_8000DDE4@ha
Parsed instruction at 8000DCA8: addi r6 r4 fn_8000DDE4@l
Parsed instruction at 8000DCAC: stwu r1 -0x8(r1)
Parsed instruction at 8000DCB0: addi r3 r3 lbl_8001C9A0@l
Parsed instruction at 8000DCB4: li r4 0x20
Parsed instruction at 8000DCB8: li r5 0x420
Parsed instruction at 8000DCBC: bl fn_8000C9A8
Parsed instruction at 8000DCC0: lwz r0 0xc(r1)
Parsed instruction at 8000DCC4: addi r1 r1 0x8
Parsed instruction at 8000DCC8: mtlr r0
Parsed instruction at 8000DCCC: blr 
End of function: fn_8000DC98, 14 instructions
Parsed function: fn_8000DCD0 at 0x8000DCD0
Parsed instruction at 8000DCD0: mflr r0
Parsed instruction at 8000DCD4: cmplwi r3 0x10
Parsed instruction at 8000DCD8: stw r0 0x4(r1)
Parsed instruction at 8000DCDC: stwu r1 -0x18(r1)
Parsed instruction at 8000DCE0: stw r31 0x14(r1)
Parsed instruction at 8000DCE4: bne .L_8000DD10
Parsed instruction at 8000DCE8: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DCEC: li r0 -0x1
Parsed instruction at 8000DCF0: lis r3 0x123
Parsed instruction at 8000DCF4: stw r0 0xc(r4)
Parsed instruction at 8000DCF8: addi r3 r3 0x4568
Parsed instruction at 8000DCFC: bl fn_8000F74C
Parsed instruction at 8000DD00: bl fn_8000EEC0
Parsed instruction at 8000DD04: li r3 0x0
Parsed instruction at 8000DD08: bl fn_8000D44C
Parsed instruction at 8000DD0C: b .L_8000DDD0
Parsed label: L_8000DD10:
Parsed instruction at 8000DD10: rlwinm. r0 r3 0 30 30
Parsed instruction at 8000DD14: beq .L_8000DD40
Parsed instruction at 8000DD18: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DD1C: li r0 -0x1
Parsed instruction at 8000DD20: lis r3 0x123
Parsed instruction at 8000DD24: stw r0 0xc(r4)
Parsed instruction at 8000DD28: addi r3 r3 0x4567
Parsed instruction at 8000DD2C: bl fn_8000F74C
Parsed instruction at 8000DD30: lis r3 fn_8000D44C@ha
Parsed instruction at 8000DD34: addi r3 r3 fn_8000D44C@l
Parsed instruction at 8000DD38: bl fn_8000CDA4
Parsed instruction at 8000DD3C: b .L_8000DDD0
Parsed label: L_8000DD40:
Parsed instruction at 8000DD40: li r4 0x0
Parsed instruction at 8000DD44: stw r4 lbl_8001EFBC@sda21(r0)
Parsed instruction at 8000DD48: lwz r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000DD4C: cmplwi r0 0x0
Parsed instruction at 8000DD50: beq .L_8000DDB8
Parsed instruction at 8000DD54: li r0 0x1
Parsed instruction at 8000DD58: lwz r31 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DD5C: stw r0 lbl_8001EFB0@sda21(r0)
Parsed instruction at 8000DD60: lis r3 lbl_8001CA20@ha
Parsed instruction at 8000DD64: addi r3 r3 lbl_8001CA20@l
Parsed instruction at 8000DD68: stw r4 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000DD6C: li r0 0xa
Parsed instruction at 8000DD70: stw r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DD74: stw r0 0xc(r31)
Parsed instruction at 8000DD78: lwz r12 0x28(r31)
Parsed instruction at 8000DD7C: cmplwi r12 0x0
Parsed instruction at 8000DD80: beq .L_8000DD94
Parsed instruction at 8000DD84: mtlr r12
Parsed instruction at 8000DD88: addi r4 r31 0x0
Parsed instruction at 8000DD8C: li r3 -0x3
Parsed instruction at 8000DD90: blrl 
Parsed label: L_8000DD94:
Parsed instruction at 8000DD94: lwz r12 lbl_8001EFAC@sda21(r0)
Parsed instruction at 8000DD98: cmplwi r12 0x0
Parsed instruction at 8000DD9C: beq .L_8000DDB0
Parsed instruction at 8000DDA0: mtlr r12
Parsed instruction at 8000DDA4: addi r4 r31 0x0
Parsed instruction at 8000DDA8: li r3 0x0
Parsed instruction at 8000DDAC: blrl 
Parsed label: L_8000DDB0:
Parsed instruction at 8000DDB0: bl fn_8000E240
Parsed instruction at 8000DDB4: li r4 0x1
Parsed label: L_8000DDB8:
Parsed instruction at 8000DDB8: cmpwi r4 0x0
Parsed instruction at 8000DDBC: bne .L_8000DDD0
Parsed instruction at 8000DDC0: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DDC4: li r0 0x6
Parsed instruction at 8000DDC8: stw r0 0xc(r3)
Parsed instruction at 8000DDCC: bl fn_8000E134
Parsed label: L_8000DDD0:
Parsed instruction at 8000DDD0: lwz r0 0x1c(r1)
Parsed instruction at 8000DDD4: lwz r31 0x14(r1)
Parsed instruction at 8000DDD8: addi r1 r1 0x18
Parsed instruction at 8000DDDC: mtlr r0
Parsed instruction at 8000DDE0: blr 
End of function: fn_8000DCD0, 75 instructions
Parsed function: fn_8000DDE4 at 0x8000DDE4
Parsed instruction at 8000DDE4: mflr r0
Parsed instruction at 8000DDE8: cmplwi r3 0x10
Parsed instruction at 8000DDEC: stw r0 0x4(r1)
Parsed instruction at 8000DDF0: stwu r1 -0x8(r1)
Parsed instruction at 8000DDF4: bne .L_8000DE20
Parsed instruction at 8000DDF8: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DDFC: li r0 -0x1
Parsed instruction at 8000DE00: lis r3 0x123
Parsed instruction at 8000DE04: stw r0 0xc(r4)
Parsed instruction at 8000DE08: addi r3 r3 0x4568
Parsed instruction at 8000DE0C: bl fn_8000F74C
Parsed instruction at 8000DE10: bl fn_8000EEC0
Parsed instruction at 8000DE14: li r3 0x0
Parsed instruction at 8000DE18: bl fn_8000D44C
Parsed instruction at 8000DE1C: b .L_8000DE78
Parsed label: L_8000DE20:
Parsed instruction at 8000DE20: clrlwi. r0 r3 31
Parsed instruction at 8000DE24: beq .L_8000DE6C
Parsed instruction at 8000DE28: lis r3 fn_8000D378@ha
Parsed instruction at 8000DE2C: lwz r7 lbl_8001EF90@sda21(r0)
Parsed instruction at 8000DE30: addi r0 r3 fn_8000D378@l
Parsed instruction at 8000DE34: li r4 0x0
Parsed instruction at 8000DE38: stw r0 lbl_8001EFCC@sda21(r0)
Parsed instruction at 8000DE3C: lis r3 lbl_8001C9A0@ha
Parsed instruction at 8000DE40: addi r5 r3 lbl_8001C9A0@l
Parsed instruction at 8000DE44: stw r4 lbl_8001EFBC@sda21(r0)
Parsed instruction at 8000DE48: lis r3 fn_8000D3CC@ha
Parsed instruction at 8000DE4C: lwz r4 0x8(r5)
Parsed instruction at 8000DE50: addi r6 r3 fn_8000D3CC@l
Parsed instruction at 8000DE54: lwz r3 0x38(r7)
Parsed instruction at 8000DE58: addi r0 r4 0x1f
Parsed instruction at 8000DE5C: lwz r5 0x4(r5)
Parsed instruction at 8000DE60: clrrwi r4 r0 5
Parsed instruction at 8000DE64: bl fn_8000C9A8
Parsed instruction at 8000DE68: b .L_8000DE78
Parsed label: L_8000DE6C:
Parsed instruction at 8000DE6C: lis r3 fn_8000D66C@ha
Parsed instruction at 8000DE70: addi r3 r3 fn_8000D66C@l
Parsed instruction at 8000DE74: bl fn_8000CE30
Parsed label: L_8000DE78:
Parsed instruction at 8000DE78: lwz r0 0xc(r1)
Parsed instruction at 8000DE7C: addi r1 r1 0x8
Parsed instruction at 8000DE80: mtlr r0
Parsed instruction at 8000DE84: blr 
End of function: fn_8000DDE4, 44 instructions
Parsed function: fn_8000DE88 at 0x8000DE88
Parsed instruction at 8000DE88: mflr r0
Parsed instruction at 8000DE8C: cmplwi r3 0x10
Parsed instruction at 8000DE90: stw r0 0x4(r1)
Parsed instruction at 8000DE94: stwu r1 -0x18(r1)
Parsed instruction at 8000DE98: stw r31 0x14(r1)
Parsed instruction at 8000DE9C: bne .L_8000DEC8
Parsed instruction at 8000DEA0: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DEA4: li r0 -0x1
Parsed instruction at 8000DEA8: lis r3 0x123
Parsed instruction at 8000DEAC: stw r0 0xc(r4)
Parsed instruction at 8000DEB0: addi r3 r3 0x4568
Parsed instruction at 8000DEB4: bl fn_8000F74C
Parsed instruction at 8000DEB8: bl fn_8000EEC0
Parsed instruction at 8000DEBC: li r3 0x0
Parsed instruction at 8000DEC0: bl fn_8000D44C
Parsed instruction at 8000DEC4: b .L_8000DF70
Parsed label: L_8000DEC8:
Parsed instruction at 8000DEC8: clrlwi. r0 r3 31
Parsed instruction at 8000DECC: beq .L_8000DF64
Parsed instruction at 8000DED0: li r4 0x0
Parsed instruction at 8000DED4: stw r4 lbl_8001EFBC@sda21(r0)
Parsed instruction at 8000DED8: lwz r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000DEDC: cmplwi r0 0x0
Parsed instruction at 8000DEE0: beq .L_8000DF44
Parsed instruction at 8000DEE4: stw r4 lbl_8001EFB0@sda21(r0)
Parsed instruction at 8000DEE8: lis r3 lbl_8001CA20@ha
Parsed instruction at 8000DEEC: lwz r31 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DEF0: addi r3 r3 lbl_8001CA20@l
Parsed instruction at 8000DEF4: stw r4 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000DEF8: li r0 0xa
Parsed instruction at 8000DEFC: stw r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DF00: stw r0 0xc(r31)
Parsed instruction at 8000DF04: lwz r12 0x28(r31)
Parsed instruction at 8000DF08: cmplwi r12 0x0
Parsed instruction at 8000DF0C: beq .L_8000DF20
Parsed instruction at 8000DF10: mtlr r12
Parsed instruction at 8000DF14: addi r4 r31 0x0
Parsed instruction at 8000DF18: li r3 -0x3
Parsed instruction at 8000DF1C: blrl 
Parsed label: L_8000DF20:
Parsed instruction at 8000DF20: lwz r12 lbl_8001EFAC@sda21(r0)
Parsed instruction at 8000DF24: cmplwi r12 0x0
Parsed instruction at 8000DF28: beq .L_8000DF3C
Parsed instruction at 8000DF2C: mtlr r12
Parsed instruction at 8000DF30: addi r4 r31 0x0
Parsed instruction at 8000DF34: li r3 0x0
Parsed instruction at 8000DF38: blrl 
Parsed label: L_8000DF3C:
Parsed instruction at 8000DF3C: bl fn_8000E240
Parsed instruction at 8000DF40: li r4 0x1
Parsed label: L_8000DF44:
Parsed instruction at 8000DF44: cmpwi r4 0x0
Parsed instruction at 8000DF48: bne .L_8000DF70
Parsed instruction at 8000DF4C: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DF50: li r0 0x1
Parsed instruction at 8000DF54: stw r0 0xc(r3)
Parsed instruction at 8000DF58: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DF5C: bl fn_8000E488
Parsed instruction at 8000DF60: b .L_8000DF70
Parsed label: L_8000DF64:
Parsed instruction at 8000DF64: lis r3 fn_8000D66C@ha
Parsed instruction at 8000DF68: addi r3 r3 fn_8000D66C@l
Parsed instruction at 8000DF6C: bl fn_8000CE30
Parsed label: L_8000DF70:
Parsed instruction at 8000DF70: lwz r0 0x1c(r1)
Parsed instruction at 8000DF74: lwz r31 0x14(r1)
Parsed instruction at 8000DF78: addi r1 r1 0x18
Parsed instruction at 8000DF7C: mtlr r0
Parsed instruction at 8000DF80: blr 
End of function: fn_8000DE88, 69 instructions
Parsed function: fn_8000DF84 at 0x8000DF84
Parsed instruction at 8000DF84: mflr r0
Parsed instruction at 8000DF88: stw r0 0x4(r1)
Parsed instruction at 8000DF8C: stwu r1 -0x8(r1)
Parsed instruction at 8000DF90: bl fn_8000EEC0
Parsed instruction at 8000DF94: lis r3 lbl_8001C9A0@ha
Parsed instruction at 8000DF98: addi r3 r3 lbl_8001C9A0@l
Parsed instruction at 8000DF9C: li r4 0x20
Parsed instruction at 8000DFA0: bl DCInvalidateRange
Parsed instruction at 8000DFA4: lis r4 fn_8000E094@ha
Parsed instruction at 8000DFA8: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000DFAC: addi r0 r4 fn_8000E094@l
Parsed instruction at 8000DFB0: stw r0 lbl_8001EFCC@sda21(r0)
Parsed instruction at 8000DFB4: bl fn_8000E094
Parsed instruction at 8000DFB8: lwz r0 0xc(r1)
Parsed instruction at 8000DFBC: addi r1 r1 0x8
Parsed instruction at 8000DFC0: mtlr r0
Parsed instruction at 8000DFC4: blr 
End of function: fn_8000DF84, 17 instructions
Parsed function: fn_8000DFC8 at 0x8000DFC8
Parsed instruction at 8000DFC8: mflr r0
Parsed instruction at 8000DFCC: lis r3 lbl_8001C9A0@ha
Parsed instruction at 8000DFD0: stw r0 0x4(r1)
Parsed instruction at 8000DFD4: stwu r1 -0x10(r1)
Parsed instruction at 8000DFD8: stw r31 0xc(r1)
Parsed instruction at 8000DFDC: addi r31 r3 lbl_8001C9A0@l
Parsed instruction at 8000DFE0: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000DFE4: cmpwi r0 0xd
Parsed instruction at 8000DFE8: beq .L_8000E010
Parsed instruction at 8000DFEC: bge .L_8000E004
Parsed instruction at 8000DFF0: cmpwi r0 0x6
Parsed instruction at 8000DFF4: bge .L_8000E040
Parsed instruction at 8000DFF8: cmpwi r0 0x4
Parsed instruction at 8000DFFC: bge .L_8000E010
Parsed instruction at 8000E000: b .L_8000E040
Parsed label: L_8000E004:
Parsed instruction at 8000E004: cmpwi r0 0xf
Parsed instruction at 8000E008: beq .L_8000E010
Parsed instruction at 8000E00C: b .L_8000E040
Parsed label: L_8000E010:
Parsed instruction at 8000E010: bl fn_8000F438
Parsed instruction at 8000E014: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E018: addi r0 r31 0x80
Parsed instruction at 8000E01C: stw r0 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E020: lwz r12 0x28(r4)
Parsed instruction at 8000E024: cmplwi r12 0x0
Parsed instruction at 8000E028: beq .L_8000E038
Parsed instruction at 8000E02C: mtlr r12
Parsed instruction at 8000E030: li r3 -0x4
Parsed instruction at 8000E034: blrl 
Parsed label: L_8000E038:
Parsed instruction at 8000E038: bl fn_8000E240
Parsed instruction at 8000E03C: b .L_8000E080
Parsed label: L_8000E040:
Parsed instruction at 8000E040: bl fn_8000EEC0
Parsed instruction at 8000E044: addi r3 r31 0xb0
Parsed instruction at 8000E048: bl fn_80005FC4
Parsed instruction at 8000E04C: lis r3 0x8000
Parsed instruction at 8000E050: lwz r0 0xf8(r3)
Parsed instruction at 8000E054: lis r4 0x1062
Parsed instruction at 8000E058: lis r3 fn_8000DF84@ha
Parsed instruction at 8000E05C: srwi r0 r0 2
Parsed instruction at 8000E060: addi r4 r4 0x4dd3
Parsed instruction at 8000E064: mulhwu r0 r4 r0
Parsed instruction at 8000E068: srwi r0 r0 6
Parsed instruction at 8000E06C: mulli r6 r0 0x47e
Parsed instruction at 8000E070: addi r7 r3 fn_8000DF84@l
Parsed instruction at 8000E074: addi r3 r31 0xb0
Parsed instruction at 8000E078: li r5 0x0
Parsed instruction at 8000E07C: bl fn_80006220
Parsed label: L_8000E080:
Parsed instruction at 8000E080: lwz r0 0x14(r1)
Parsed instruction at 8000E084: lwz r31 0xc(r1)
Parsed instruction at 8000E088: addi r1 r1 0x10
Parsed instruction at 8000E08C: mtlr r0
Parsed instruction at 8000E090: blr 
End of function: fn_8000DFC8, 56 instructions
Parsed function: fn_8000E094 at 0x8000E094
Parsed instruction at 8000E094: mflr r0
Parsed instruction at 8000E098: lis r3 lbl_8001C9A0@ha
Parsed instruction at 8000E09C: stw r0 0x4(r1)
Parsed instruction at 8000E0A0: lis r4 fn_8000E0C4@ha
Parsed instruction at 8000E0A4: addi r3 r3 lbl_8001C9A0@l
Parsed instruction at 8000E0A8: stwu r1 -0x8(r1)
Parsed instruction at 8000E0AC: addi r4 r4 fn_8000E0C4@l
Parsed instruction at 8000E0B0: bl fn_8000CD00
Parsed instruction at 8000E0B4: lwz r0 0xc(r1)
Parsed instruction at 8000E0B8: addi r1 r1 0x8
Parsed instruction at 8000E0BC: mtlr r0
Parsed instruction at 8000E0C0: blr 
End of function: fn_8000E094, 12 instructions
Parsed function: fn_8000E0C4 at 0x8000E0C4
Parsed instruction at 8000E0C4: mflr r0
Parsed instruction at 8000E0C8: cmplwi r3 0x10
Parsed instruction at 8000E0CC: stw r0 0x4(r1)
Parsed instruction at 8000E0D0: stwu r1 -0x8(r1)
Parsed instruction at 8000E0D4: bne .L_8000E100
Parsed instruction at 8000E0D8: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E0DC: li r0 -0x1
Parsed instruction at 8000E0E0: lis r3 0x123
Parsed instruction at 8000E0E4: stw r0 0xc(r4)
Parsed instruction at 8000E0E8: addi r3 r3 0x4568
Parsed instruction at 8000E0EC: bl fn_8000F74C
Parsed instruction at 8000E0F0: bl fn_8000EEC0
Parsed instruction at 8000E0F4: li r3 0x0
Parsed instruction at 8000E0F8: bl fn_8000D44C
Parsed instruction at 8000E0FC: b .L_8000E124
Parsed label: L_8000E100:
Parsed instruction at 8000E100: clrlwi. r0 r3 31
Parsed instruction at 8000E104: beq .L_8000E118
Parsed instruction at 8000E108: li r0 0x0
Parsed instruction at 8000E10C: stw r0 lbl_8001EFBC@sda21(r0)
Parsed instruction at 8000E110: bl fn_8000DB80
Parsed instruction at 8000E114: b .L_8000E124
Parsed label: L_8000E118:
Parsed instruction at 8000E118: lis r3 fn_8000D66C@ha
Parsed instruction at 8000E11C: addi r3 r3 fn_8000D66C@l
Parsed instruction at 8000E120: bl fn_8000CE30
Parsed label: L_8000E124:
Parsed instruction at 8000E124: lwz r0 0xc(r1)
Parsed instruction at 8000E128: addi r1 r1 0x8
Parsed instruction at 8000E12C: mtlr r0
Parsed instruction at 8000E130: blr 
End of function: fn_8000E0C4, 31 instructions
Parsed function: fn_8000E134 at 0x8000E134
Parsed instruction at 8000E134: mflr r0
Parsed instruction at 8000E138: lis r3 fn_8000E15C@ha
Parsed instruction at 8000E13C: stw r0 0x4(r1)
Parsed instruction at 8000E140: addi r3 r3 fn_8000E15C@l
Parsed instruction at 8000E144: stwu r1 -0x8(r1)
Parsed instruction at 8000E148: bl fn_8000CCD4
Parsed instruction at 8000E14C: lwz r0 0xc(r1)
Parsed instruction at 8000E150: addi r1 r1 0x8
Parsed instruction at 8000E154: mtlr r0
Parsed instruction at 8000E158: blr 
End of function: fn_8000E134, 10 instructions
Parsed function: fn_8000E15C at 0x8000E15C
Parsed instruction at 8000E15C: mflr r0
Parsed instruction at 8000E160: lis r3 0xcc00
Parsed instruction at 8000E164: stw r0 0x4(r1)
Parsed instruction at 8000E168: li r0 0x0
Parsed instruction at 8000E16C: lis r4 lbl_8001C9A0@ha
Parsed instruction at 8000E170: stwu r1 -0x18(r1)
Parsed instruction at 8000E174: stw r31 0x14(r1)
Parsed instruction at 8000E178: addi r31 r4 lbl_8001C9A0@l
Parsed instruction at 8000E17C: stw r0 0x6004(r3)
Parsed instruction at 8000E180: li r0 0x3
Parsed instruction at 8000E184: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E188: stw r0 0xc(r3)
Parsed instruction at 8000E18C: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000E190: cmpwi r0 0xd
Parsed instruction at 8000E194: beq .L_8000E1BC
Parsed instruction at 8000E198: bge .L_8000E1B0
Parsed instruction at 8000E19C: cmpwi r0 0x6
Parsed instruction at 8000E1A0: bge .L_8000E1EC
Parsed instruction at 8000E1A4: cmpwi r0 0x4
Parsed instruction at 8000E1A8: bge .L_8000E1BC
Parsed instruction at 8000E1AC: b .L_8000E1EC
Parsed label: L_8000E1B0:
Parsed instruction at 8000E1B0: cmpwi r0 0xf
Parsed instruction at 8000E1B4: beq .L_8000E1BC
Parsed instruction at 8000E1B8: b .L_8000E1EC
Parsed label: L_8000E1BC:
Parsed instruction at 8000E1BC: bl fn_8000F438
Parsed instruction at 8000E1C0: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E1C4: addi r0 r31 0x80
Parsed instruction at 8000E1C8: stw r0 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E1CC: lwz r12 0x28(r4)
Parsed instruction at 8000E1D0: cmplwi r12 0x0
Parsed instruction at 8000E1D4: beq .L_8000E1E4
Parsed instruction at 8000E1D8: mtlr r12
Parsed instruction at 8000E1DC: li r3 -0x4
Parsed instruction at 8000E1E0: blrl 
Parsed label: L_8000E1E4:
Parsed instruction at 8000E1E4: bl fn_8000E240
Parsed instruction at 8000E1E8: b .L_8000E22C
Parsed label: L_8000E1EC:
Parsed instruction at 8000E1EC: bl fn_8000EEC0
Parsed instruction at 8000E1F0: addi r3 r31 0xb0
Parsed instruction at 8000E1F4: bl fn_80005FC4
Parsed instruction at 8000E1F8: lis r3 0x8000
Parsed instruction at 8000E1FC: lwz r0 0xf8(r3)
Parsed instruction at 8000E200: lis r4 0x1062
Parsed instruction at 8000E204: lis r3 fn_8000DF84@ha
Parsed instruction at 8000E208: srwi r0 r0 2
Parsed instruction at 8000E20C: addi r4 r4 0x4dd3
Parsed instruction at 8000E210: mulhwu r0 r4 r0
Parsed instruction at 8000E214: srwi r0 r0 6
Parsed instruction at 8000E218: mulli r6 r0 0x47e
Parsed instruction at 8000E21C: addi r7 r3 fn_8000DF84@l
Parsed instruction at 8000E220: addi r3 r31 0xb0
Parsed instruction at 8000E224: li r5 0x0
Parsed instruction at 8000E228: bl fn_80006220
Parsed label: L_8000E22C:
Parsed instruction at 8000E22C: lwz r0 0x1c(r1)
Parsed instruction at 8000E230: lwz r31 0x14(r1)
Parsed instruction at 8000E234: addi r1 r1 0x18
Parsed instruction at 8000E238: mtlr r0
Parsed instruction at 8000E23C: blr 
End of function: fn_8000E15C, 62 instructions
Parsed function: fn_8000E240 at 0x8000E240
Parsed instruction at 8000E240: mflr r0
Parsed instruction at 8000E244: lis r3 lbl_8001C9A0@ha
Parsed instruction at 8000E248: stw r0 0x4(r1)
Parsed instruction at 8000E24C: stwu r1 -0x10(r1)
Parsed instruction at 8000E250: stw r31 0xc(r1)
Parsed instruction at 8000E254: addi r31 r3 lbl_8001C9A0@l
Parsed instruction at 8000E258: bl fn_8000F578
Parsed instruction at 8000E25C: cmpwi r3 0x0
Parsed instruction at 8000E260: bne .L_8000E270
Parsed instruction at 8000E264: li r0 0x0
Parsed instruction at 8000E268: stw r0 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E26C: b .L_8000E474
Parsed label: L_8000E270:
Parsed instruction at 8000E270: lwz r0 lbl_8001EF94@sda21(r0)
Parsed instruction at 8000E274: cmpwi r0 0x0
Parsed instruction at 8000E278: beq .L_8000E290
Parsed instruction at 8000E27C: li r3 0x1
Parsed instruction at 8000E280: li r0 0x0
Parsed instruction at 8000E284: stw r3 lbl_8001EF98@sda21(r0)
Parsed instruction at 8000E288: stw r0 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E28C: b .L_8000E474
Parsed label: L_8000E290:
Parsed instruction at 8000E290: bl fn_8000F4D8
Parsed instruction at 8000E294: lwz r0 lbl_8001EFA0@sda21(r0)
Parsed instruction at 8000E298: stw r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E29C: cmpwi r0 0x0
Parsed instruction at 8000E2A0: beq .L_8000E2DC
Parsed instruction at 8000E2A4: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E2A8: li r4 -0x1
Parsed instruction at 8000E2AC: addi r0 r31 0x80
Parsed instruction at 8000E2B0: stw r4 0xc(r3)
Parsed instruction at 8000E2B4: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E2B8: stw r0 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E2BC: lwz r12 0x28(r4)
Parsed instruction at 8000E2C0: cmplwi r12 0x0
Parsed instruction at 8000E2C4: beq .L_8000E2D4
Parsed instruction at 8000E2C8: mtlr r12
Parsed instruction at 8000E2CC: li r3 -0x1
Parsed instruction at 8000E2D0: blrl 
Parsed label: L_8000E2D4:
Parsed instruction at 8000E2D4: bl fn_8000E240
Parsed instruction at 8000E2D8: b .L_8000E474
Parsed label: L_8000E2DC:
Parsed instruction at 8000E2DC: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E2E0: lwz r0 0x8(r4)
Parsed instruction at 8000E2E4: stw r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000E2E8: lwz r0 lbl_8001EFB0@sda21(r0)
Parsed instruction at 8000E2EC: cmplwi r0 0x0
Parsed instruction at 8000E2F0: beq .L_8000E464
Parsed instruction at 8000E2F4: lwz r0 lbl_8001EFB0@sda21(r0)
Parsed instruction at 8000E2F8: cmplwi r0 0x7
Parsed instruction at 8000E2FC: bgt .L_8000E458
Parsed instruction at 8000E300: lis r3 jumptable_8001B254@ha
Parsed instruction at 8000E304: addi r3 r3 jumptable_8001B254@l
Parsed instruction at 8000E308: slwi r0 r0 2
Parsed instruction at 8000E30C: lwzx r0 r3 r0
Parsed instruction at 8000E310: mtctr r0
Parsed instruction at 8000E314: bctr 
Parsed instruction at 8000E318: li r0 0x6
Parsed instruction at 8000E31C: lis r3 fn_8000E15C@ha
Parsed instruction at 8000E320: stw r0 0xc(r4)
Parsed instruction at 8000E324: addi r3 r3 fn_8000E15C@l
Parsed instruction at 8000E328: bl fn_8000CCD4
Parsed instruction at 8000E32C: b .L_8000E458
Parsed instruction at 8000E330: li r0 0xb
Parsed instruction at 8000E334: lis r3 fn_8000E15C@ha
Parsed instruction at 8000E338: stw r0 0xc(r4)
Parsed instruction at 8000E33C: addi r3 r3 fn_8000E15C@l
Parsed instruction at 8000E340: bl fn_8000CCD4
Parsed instruction at 8000E344: b .L_8000E458
Parsed instruction at 8000E348: li r0 0x4
Parsed instruction at 8000E34C: lis r3 fn_8000E15C@ha
Parsed instruction at 8000E350: stw r0 0xc(r4)
Parsed instruction at 8000E354: addi r3 r3 fn_8000E15C@l
Parsed instruction at 8000E358: bl fn_8000CCD4
Parsed instruction at 8000E35C: b .L_8000E458
Parsed instruction at 8000E360: li r0 0x7
Parsed instruction at 8000E364: lis r3 fn_8000E15C@ha
Parsed instruction at 8000E368: stw r0 0xc(r4)
Parsed instruction at 8000E36C: addi r3 r3 fn_8000E15C@l
Parsed instruction at 8000E370: bl fn_8000CCD4
Parsed instruction at 8000E374: b .L_8000E458
Parsed instruction at 8000E378: li r0 0x5
Parsed instruction at 8000E37C: lis r3 fn_8000E15C@ha
Parsed instruction at 8000E380: stw r0 0xc(r4)
Parsed instruction at 8000E384: addi r3 r3 fn_8000E15C@l
Parsed instruction at 8000E388: bl fn_8000CCD4
Parsed instruction at 8000E38C: b .L_8000E458
Parsed instruction at 8000E390: li r0 0x3
Parsed instruction at 8000E394: stw r0 0xc(r4)
Parsed instruction at 8000E398: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000E39C: cmpwi r0 0xd
Parsed instruction at 8000E3A0: beq .L_8000E3C8
Parsed instruction at 8000E3A4: bge .L_8000E3BC
Parsed instruction at 8000E3A8: cmpwi r0 0x6
Parsed instruction at 8000E3AC: bge .L_8000E3F8
Parsed instruction at 8000E3B0: cmpwi r0 0x4
Parsed instruction at 8000E3B4: bge .L_8000E3C8
Parsed instruction at 8000E3B8: b .L_8000E3F8
Parsed label: L_8000E3BC:
Parsed instruction at 8000E3BC: cmpwi r0 0xf
Parsed instruction at 8000E3C0: beq .L_8000E3C8
Parsed instruction at 8000E3C4: b .L_8000E3F8
Parsed label: L_8000E3C8:
Parsed instruction at 8000E3C8: bl fn_8000F438
Parsed instruction at 8000E3CC: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E3D0: addi r0 r31 0x80
Parsed instruction at 8000E3D4: stw r0 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E3D8: lwz r12 0x28(r4)
Parsed instruction at 8000E3DC: cmplwi r12 0x0
Parsed instruction at 8000E3E0: beq .L_8000E3F0
Parsed instruction at 8000E3E4: mtlr r12
Parsed instruction at 8000E3E8: li r3 -0x4
Parsed instruction at 8000E3EC: blrl 
Parsed label: L_8000E3F0:
Parsed instruction at 8000E3F0: bl fn_8000E240
Parsed instruction at 8000E3F4: b .L_8000E458
Parsed label: L_8000E3F8:
Parsed instruction at 8000E3F8: bl fn_8000EEC0
Parsed instruction at 8000E3FC: addi r3 r31 0xb0
Parsed instruction at 8000E400: bl fn_80005FC4
Parsed instruction at 8000E404: lis r3 0x8000
Parsed instruction at 8000E408: lwz r0 0xf8(r3)
Parsed instruction at 8000E40C: lis r4 0x1062
Parsed instruction at 8000E410: lis r3 fn_8000DF84@ha
Parsed instruction at 8000E414: srwi r0 r0 2
Parsed instruction at 8000E418: addi r4 r4 0x4dd3
Parsed instruction at 8000E41C: mulhwu r0 r4 r0
Parsed instruction at 8000E420: srwi r0 r0 6
Parsed instruction at 8000E424: mulli r6 r0 0x47e
Parsed instruction at 8000E428: addi r7 r3 fn_8000DF84@l
Parsed instruction at 8000E42C: addi r3 r31 0xb0
Parsed instruction at 8000E430: li r5 0x0
Parsed instruction at 8000E434: bl fn_80006220
Parsed instruction at 8000E438: b .L_8000E458
Parsed instruction at 8000E43C: li r0 -0x1
Parsed instruction at 8000E440: stw r0 0xc(r4)
Parsed instruction at 8000E444: lwz r3 lbl_8001EFB4@sda21(r0)
Parsed instruction at 8000E448: bl fn_8000F74C
Parsed instruction at 8000E44C: lis r3 fn_8000D44C@ha
Parsed instruction at 8000E450: addi r3 r3 fn_8000D44C@l
Parsed instruction at 8000E454: bl fn_8000CDA4
Parsed label: L_8000E458:
Parsed instruction at 8000E458: li r0 0x0
Parsed instruction at 8000E45C: stw r0 lbl_8001EFB0@sda21(r0)
Parsed instruction at 8000E460: b .L_8000E474
Parsed label: L_8000E464:
Parsed instruction at 8000E464: li r0 0x1
Parsed instruction at 8000E468: stw r0 0xc(r4)
Parsed instruction at 8000E46C: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E470: bl fn_8000E488
Parsed label: L_8000E474:
Parsed instruction at 8000E474: lwz r0 0x14(r1)
Parsed instruction at 8000E478: lwz r31 0xc(r1)
Parsed instruction at 8000E47C: addi r1 r1 0x10
Parsed instruction at 8000E480: mtlr r0
Parsed instruction at 8000E484: blr 
End of function: fn_8000E240, 157 instructions
Parsed function: fn_8000E488 at 0x8000E488
Parsed instruction at 8000E488: mflr r0
Parsed instruction at 8000E48C: lis r4 fn_8000E488@ha
Parsed instruction at 8000E490: stw r0 0x4(r1)
Parsed instruction at 8000E494: addi r0 r4 fn_8000E488@l
Parsed instruction at 8000E498: mr r7 r3
Parsed instruction at 8000E49C: stwu r1 -0x8(r1)
Parsed instruction at 8000E4A0: stw r0 lbl_8001EFCC@sda21(r0)
Parsed instruction at 8000E4A4: lwz r0 0x8(r3)
Parsed instruction at 8000E4A8: cmplwi r0 0xf
Parsed instruction at 8000E4AC: bgt .L_8000E738
Parsed instruction at 8000E4B0: lis r3 jumptable_8001B274@ha
Parsed instruction at 8000E4B4: addi r3 r3 jumptable_8001B274@l
Parsed instruction at 8000E4B8: slwi r0 r0 2
Parsed instruction at 8000E4BC: lwzx r0 r3 r0
Parsed instruction at 8000E4C0: mtctr r0
Parsed instruction at 8000E4C4: bctr 
Parsed instruction at 8000E4C8: lis r3 0xcc00
Parsed instruction at 8000E4CC: lwz r0 0x6004(r3)
Parsed instruction at 8000E4D0: addi r5 r3 0x6000
Parsed instruction at 8000E4D4: lis r3 fn_8000E748@ha
Parsed instruction at 8000E4D8: stw r0 0x4(r5)
Parsed instruction at 8000E4DC: li r0 0x20
Parsed instruction at 8000E4E0: addi r4 r3 fn_8000E748@l
Parsed instruction at 8000E4E4: stw r0 0x1c(r7)
Parsed instruction at 8000E4E8: lwz r3 0x18(r7)
Parsed instruction at 8000E4EC: bl fn_8000CD00
Parsed instruction at 8000E4F0: b .L_8000E738
Parsed instruction at 8000E4F4: lis r3 0xcc00
Parsed instruction at 8000E4F8: addi r3 r3 0x6000
Parsed instruction at 8000E4FC: lwz r0 0x4(r3)
Parsed instruction at 8000E500: lis r4 0x8
Parsed instruction at 8000E504: stw r0 0x4(r3)
Parsed instruction at 8000E508: lwz r3 0x20(r7)
Parsed instruction at 8000E50C: lwz r0 0x14(r7)
Parsed instruction at 8000E510: subf r0 r3 r0
Parsed instruction at 8000E514: cmplw r0 r4
Parsed instruction at 8000E518: ble .L_8000E520
Parsed instruction at 8000E51C: b .L_8000E524
Parsed label: L_8000E520:
Parsed instruction at 8000E520: mr r4 r0
Parsed label: L_8000E524:
Parsed instruction at 8000E524: stw r4 0x1c(r7)
Parsed instruction at 8000E528: lis r3 fn_8000E748@ha
Parsed instruction at 8000E52C: addi r6 r3 fn_8000E748@l
Parsed instruction at 8000E530: lwz r5 0x20(r7)
Parsed instruction at 8000E534: lwz r3 0x18(r7)
Parsed instruction at 8000E538: lwz r0 0x10(r7)
Parsed instruction at 8000E53C: add r3 r3 r5
Parsed instruction at 8000E540: lwz r4 0x1c(r7)
Parsed instruction at 8000E544: add r5 r0 r5
Parsed instruction at 8000E548: bl fn_8000C9A8
Parsed instruction at 8000E54C: b .L_8000E738
Parsed instruction at 8000E550: lis r3 0xcc00
Parsed instruction at 8000E554: lwz r0 0x6004(r3)
Parsed instruction at 8000E558: addi r5 r3 0x6000
Parsed instruction at 8000E55C: lis r3 fn_8000E748@ha
Parsed instruction at 8000E560: stw r0 0x4(r5)
Parsed instruction at 8000E564: addi r4 r3 fn_8000E748@l
Parsed instruction at 8000E568: lwz r3 0x10(r7)
Parsed instruction at 8000E56C: bl fn_8000CC40
Parsed instruction at 8000E570: b .L_8000E738
Parsed instruction at 8000E574: lis r3 fn_8000E748@ha
Parsed instruction at 8000E578: addi r3 r3 fn_8000E748@l
Parsed instruction at 8000E57C: bl fn_8000CDA4
Parsed instruction at 8000E580: b .L_8000E738
Parsed instruction at 8000E584: lis r3 fn_8000E748@ha
Parsed instruction at 8000E588: addi r3 r3 fn_8000E748@l
Parsed instruction at 8000E58C: bl fn_8000CDA4
Parsed instruction at 8000E590: b .L_8000E738
Parsed instruction at 8000E594: lis r3 0xcc00
Parsed instruction at 8000E598: addi r3 r3 0x6000
Parsed instruction at 8000E59C: lwz r0 0x4(r3)
Parsed instruction at 8000E5A0: stw r0 0x4(r3)
Parsed instruction at 8000E5A4: lwz r0 lbl_8001EF9C@sda21(r0)
Parsed instruction at 8000E5A8: cmpwi r0 0x0
Parsed instruction at 8000E5AC: beq .L_8000E5D0
Parsed instruction at 8000E5B0: lwz r5 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E5B4: li r0 0x0
Parsed instruction at 8000E5B8: lis r3 fn_8000E748@ha
Parsed instruction at 8000E5BC: stw r0 0x1c(r5)
Parsed instruction at 8000E5C0: addi r4 r3 fn_8000E748@l
Parsed instruction at 8000E5C4: li r3 0x0
Parsed instruction at 8000E5C8: bl fn_8000CFF0
Parsed instruction at 8000E5CC: b .L_8000E738
Parsed label: L_8000E5D0:
Parsed instruction at 8000E5D0: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E5D4: li r0 0x1
Parsed instruction at 8000E5D8: lis r3 fn_8000E748@ha
Parsed instruction at 8000E5DC: stw r0 0x1c(r4)
Parsed instruction at 8000E5E0: addi r6 r3 fn_8000E748@l
Parsed instruction at 8000E5E4: li r3 0x0
Parsed instruction at 8000E5E8: lwz r4 0x14(r7)
Parsed instruction at 8000E5EC: lwz r5 0x10(r7)
Parsed instruction at 8000E5F0: bl fn_8000CF58
Parsed instruction at 8000E5F4: b .L_8000E738
Parsed instruction at 8000E5F8: lis r3 0xcc00
Parsed instruction at 8000E5FC: lwz r0 0x6004(r3)
Parsed instruction at 8000E600: addi r4 r3 0x6000
Parsed instruction at 8000E604: lis r3 fn_8000E748@ha
Parsed instruction at 8000E608: stw r0 0x4(r4)
Parsed instruction at 8000E60C: addi r6 r3 fn_8000E748@l
Parsed instruction at 8000E610: lis r3 0x1
Parsed instruction at 8000E614: li r4 0x0
Parsed instruction at 8000E618: li r5 0x0
Parsed instruction at 8000E61C: bl fn_8000CF58
Parsed instruction at 8000E620: b .L_8000E738
Parsed instruction at 8000E624: lis r3 0xcc00
Parsed instruction at 8000E628: lwz r0 0x6004(r3)
Parsed instruction at 8000E62C: addi r4 r3 0x6000
Parsed instruction at 8000E630: lis r3 fn_8000E748@ha
Parsed instruction at 8000E634: stw r0 0x4(r4)
Parsed instruction at 8000E638: li r0 0x1
Parsed instruction at 8000E63C: addi r6 r3 fn_8000E748@l
Parsed instruction at 8000E640: stw r0 lbl_8001EF9C@sda21(r0)
Parsed instruction at 8000E644: li r3 0x0
Parsed instruction at 8000E648: li r4 0x0
Parsed instruction at 8000E64C: li r5 0x0
Parsed instruction at 8000E650: bl fn_8000CF58
Parsed instruction at 8000E654: b .L_8000E738
Parsed instruction at 8000E658: lis r3 0xcc00
Parsed instruction at 8000E65C: lwz r0 0x6004(r3)
Parsed instruction at 8000E660: addi r5 r3 0x6000
Parsed instruction at 8000E664: lis r3 fn_8000E748@ha
Parsed instruction at 8000E668: stw r0 0x4(r5)
Parsed instruction at 8000E66C: addi r4 r3 fn_8000E748@l
Parsed instruction at 8000E670: li r3 0x0
Parsed instruction at 8000E674: bl fn_8000CFF0
Parsed instruction at 8000E678: b .L_8000E738
Parsed instruction at 8000E67C: lis r3 0xcc00
Parsed instruction at 8000E680: lwz r0 0x6004(r3)
Parsed instruction at 8000E684: addi r5 r3 0x6000
Parsed instruction at 8000E688: lis r3 fn_8000E748@ha
Parsed instruction at 8000E68C: stw r0 0x4(r5)
Parsed instruction at 8000E690: addi r4 r3 fn_8000E748@l
Parsed instruction at 8000E694: lis r3 0x1
Parsed instruction at 8000E698: bl fn_8000CFF0
Parsed instruction at 8000E69C: b .L_8000E738
Parsed instruction at 8000E6A0: lis r3 0xcc00
Parsed instruction at 8000E6A4: lwz r0 0x6004(r3)
Parsed instruction at 8000E6A8: addi r5 r3 0x6000
Parsed instruction at 8000E6AC: lis r3 fn_8000E748@ha
Parsed instruction at 8000E6B0: stw r0 0x4(r5)
Parsed instruction at 8000E6B4: addi r4 r3 fn_8000E748@l
Parsed instruction at 8000E6B8: lis r3 0x2
Parsed instruction at 8000E6BC: bl fn_8000CFF0
Parsed instruction at 8000E6C0: b .L_8000E738
Parsed instruction at 8000E6C4: lis r3 0xcc00
Parsed instruction at 8000E6C8: lwz r0 0x6004(r3)
Parsed instruction at 8000E6CC: addi r5 r3 0x6000
Parsed instruction at 8000E6D0: lis r3 fn_8000E748@ha
Parsed instruction at 8000E6D4: stw r0 0x4(r5)
Parsed instruction at 8000E6D8: addi r4 r3 fn_8000E748@l
Parsed instruction at 8000E6DC: lis r3 0x3
Parsed instruction at 8000E6E0: bl fn_8000CFF0
Parsed instruction at 8000E6E4: b .L_8000E738
Parsed instruction at 8000E6E8: lis r3 0xcc00
Parsed instruction at 8000E6EC: lwz r0 0x6004(r3)
Parsed instruction at 8000E6F0: addi r4 r3 0x6000
Parsed instruction at 8000E6F4: lis r3 fn_8000E748@ha
Parsed instruction at 8000E6F8: stw r0 0x4(r4)
Parsed instruction at 8000E6FC: addi r5 r3 fn_8000E748@l
Parsed instruction at 8000E700: lwz r3 0x10(r7)
Parsed instruction at 8000E704: lwz r4 0x14(r7)
Parsed instruction at 8000E708: bl fn_8000D07C
Parsed instruction at 8000E70C: b .L_8000E738
Parsed instruction at 8000E710: lis r3 0xcc00
Parsed instruction at 8000E714: lwz r0 0x6004(r3)
Parsed instruction at 8000E718: addi r5 r3 0x6000
Parsed instruction at 8000E71C: lis r3 fn_8000E748@ha
Parsed instruction at 8000E720: stw r0 0x4(r5)
Parsed instruction at 8000E724: li r0 0x20
Parsed instruction at 8000E728: addi r4 r3 fn_8000E748@l
Parsed instruction at 8000E72C: stw r0 0x1c(r7)
Parsed instruction at 8000E730: lwz r3 0x18(r7)
Parsed instruction at 8000E734: bl fn_8000CEBC
Parsed label: L_8000E738:
Parsed instruction at 8000E738: lwz r0 0xc(r1)
Parsed instruction at 8000E73C: addi r1 r1 0x8
Parsed instruction at 8000E740: mtlr r0
Parsed instruction at 8000E744: blr 
End of function: fn_8000E488, 180 instructions
Parsed function: fn_8000E748 at 0x8000E748
Parsed instruction at 8000E748: mflr r0
Parsed instruction at 8000E74C: cmplwi r3 0x10
Parsed instruction at 8000E750: stw r0 0x4(r1)
Parsed instruction at 8000E754: lis r4 lbl_8001C9A0@ha
Parsed instruction at 8000E758: stwu r1 -0x18(r1)
Parsed instruction at 8000E75C: stw r31 0x14(r1)
Parsed instruction at 8000E760: addi r31 r4 lbl_8001C9A0@l
Parsed instruction at 8000E764: stw r30 0x10(r1)
Parsed instruction at 8000E768: bne .L_8000E794
Parsed instruction at 8000E76C: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E770: li r0 -0x1
Parsed instruction at 8000E774: lis r3 0x123
Parsed instruction at 8000E778: stw r0 0xc(r4)
Parsed instruction at 8000E77C: addi r3 r3 0x4568
Parsed instruction at 8000E780: bl fn_8000F74C
Parsed instruction at 8000E784: bl fn_8000EEC0
Parsed instruction at 8000E788: li r3 0x0
Parsed instruction at 8000E78C: bl fn_8000D44C
Parsed instruction at 8000E790: b .L_8000ED04
Parsed label: L_8000E794:
Parsed instruction at 8000E794: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000E798: cmplwi r0 0x3
Parsed instruction at 8000E79C: beq .L_8000E7AC
Parsed instruction at 8000E7A0: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000E7A4: cmplwi r0 0xf
Parsed instruction at 8000E7A8: bne .L_8000E894
Parsed label: L_8000E7AC:
Parsed instruction at 8000E7AC: rlwinm. r0 r3 0 30 30
Parsed instruction at 8000E7B0: beq .L_8000E7DC
Parsed instruction at 8000E7B4: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E7B8: li r0 -0x1
Parsed instruction at 8000E7BC: lis r3 0x123
Parsed instruction at 8000E7C0: stw r0 0xc(r4)
Parsed instruction at 8000E7C4: addi r3 r3 0x4567
Parsed instruction at 8000E7C8: bl fn_8000F74C
Parsed instruction at 8000E7CC: lis r3 fn_8000D44C@ha
Parsed instruction at 8000E7D0: addi r3 r3 fn_8000D44C@l
Parsed instruction at 8000E7D4: bl fn_8000CDA4
Parsed instruction at 8000E7D8: b .L_8000ED04
Parsed label: L_8000E7DC:
Parsed instruction at 8000E7DC: li r0 0x0
Parsed instruction at 8000E7E0: stw r0 lbl_8001EFBC@sda21(r0)
Parsed instruction at 8000E7E4: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000E7E8: cmplwi r0 0xf
Parsed instruction at 8000E7EC: bne .L_8000E7F8
Parsed instruction at 8000E7F0: li r0 0x1
Parsed instruction at 8000E7F4: stw r0 lbl_8001EFC0@sda21(r0)
Parsed label: L_8000E7F8:
Parsed instruction at 8000E7F8: lwz r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000E7FC: cmplwi r0 0x0
Parsed instruction at 8000E800: beq .L_8000E86C
Parsed instruction at 8000E804: li r0 0x7
Parsed instruction at 8000E808: lwz r30 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E80C: stw r0 lbl_8001EFB0@sda21(r0)
Parsed instruction at 8000E810: addi r3 r31 0x80
Parsed instruction at 8000E814: li r0 0x0
Parsed instruction at 8000E818: stw r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000E81C: li r0 0xa
Parsed instruction at 8000E820: stw r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E824: stw r0 0xc(r30)
Parsed instruction at 8000E828: lwz r12 0x28(r30)
Parsed instruction at 8000E82C: cmplwi r12 0x0
Parsed instruction at 8000E830: beq .L_8000E844
Parsed instruction at 8000E834: mtlr r12
Parsed instruction at 8000E838: addi r4 r30 0x0
Parsed instruction at 8000E83C: li r3 -0x3
Parsed instruction at 8000E840: blrl 
Parsed label: L_8000E844:
Parsed instruction at 8000E844: lwz r12 lbl_8001EFAC@sda21(r0)
Parsed instruction at 8000E848: cmplwi r12 0x0
Parsed instruction at 8000E84C: beq .L_8000E860
Parsed instruction at 8000E850: mtlr r12
Parsed instruction at 8000E854: addi r4 r30 0x0
Parsed instruction at 8000E858: li r3 0x0
Parsed instruction at 8000E85C: blrl 
Parsed label: L_8000E860:
Parsed instruction at 8000E860: bl fn_8000E240
Parsed instruction at 8000E864: li r0 0x1
Parsed instruction at 8000E868: b .L_8000E870
Parsed label: L_8000E86C:
Parsed instruction at 8000E86C: li r0 0x0
Parsed label: L_8000E870:
Parsed instruction at 8000E870: cmpwi r0 0x0
Parsed instruction at 8000E874: bne .L_8000ED04
Parsed instruction at 8000E878: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E87C: li r0 0x7
Parsed instruction at 8000E880: lis r3 fn_8000E15C@ha
Parsed instruction at 8000E884: stw r0 0xc(r4)
Parsed instruction at 8000E888: addi r3 r3 fn_8000E15C@l
Parsed instruction at 8000E88C: bl fn_8000CCD4
Parsed instruction at 8000E890: b .L_8000ED04
Parsed label: L_8000E894:
Parsed instruction at 8000E894: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000E898: cmplwi r0 0x1
Parsed instruction at 8000E89C: beq .L_8000E8C4
Parsed instruction at 8000E8A0: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000E8A4: cmplwi r0 0x4
Parsed instruction at 8000E8A8: beq .L_8000E8C4
Parsed instruction at 8000E8AC: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000E8B0: cmplwi r0 0x5
Parsed instruction at 8000E8B4: beq .L_8000E8C4
Parsed instruction at 8000E8B8: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000E8BC: cmplwi r0 0xe
Parsed instruction at 8000E8C0: bne .L_8000E8E8
Parsed label: L_8000E8C4:
Parsed instruction at 8000E8C4: lwz r6 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E8C8: lis r4 0xcc00
Parsed instruction at 8000E8CC: addi r4 r4 0x6000
Parsed instruction at 8000E8D0: lwz r4 0x18(r4)
Parsed instruction at 8000E8D4: lwz r0 0x1c(r6)
Parsed instruction at 8000E8D8: lwz r5 0x20(r6)
Parsed instruction at 8000E8DC: subf r0 r4 r0
Parsed instruction at 8000E8E0: add r0 r5 r0
Parsed instruction at 8000E8E4: stw r0 0x20(r6)
Parsed label: L_8000E8E8:
Parsed instruction at 8000E8E8: rlwinm. r0 r3 0 28 28
Parsed instruction at 8000E8EC: beq .L_8000E94C
Parsed instruction at 8000E8F0: lwz r30 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E8F4: addi r3 r31 0x80
Parsed instruction at 8000E8F8: li r0 0x0
Parsed instruction at 8000E8FC: stw r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000E900: li r0 0xa
Parsed instruction at 8000E904: stw r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E908: stw r0 0xc(r30)
Parsed instruction at 8000E90C: lwz r12 0x28(r30)
Parsed instruction at 8000E910: cmplwi r12 0x0
Parsed instruction at 8000E914: beq .L_8000E928
Parsed instruction at 8000E918: mtlr r12
Parsed instruction at 8000E91C: addi r4 r30 0x0
Parsed instruction at 8000E920: li r3 -0x3
Parsed instruction at 8000E924: blrl 
Parsed label: L_8000E928:
Parsed instruction at 8000E928: lwz r12 lbl_8001EFAC@sda21(r0)
Parsed instruction at 8000E92C: cmplwi r12 0x0
Parsed instruction at 8000E930: beq .L_8000E944
Parsed instruction at 8000E934: mtlr r12
Parsed instruction at 8000E938: addi r4 r30 0x0
Parsed instruction at 8000E93C: li r3 0x0
Parsed instruction at 8000E940: blrl 
Parsed label: L_8000E944:
Parsed instruction at 8000E944: bl fn_8000E240
Parsed instruction at 8000E948: b .L_8000ED04
Parsed label: L_8000E94C:
Parsed instruction at 8000E94C: clrlwi. r0 r3 31
Parsed instruction at 8000E950: beq .L_8000EBD4
Parsed instruction at 8000E954: li r4 0x0
Parsed instruction at 8000E958: stw r4 lbl_8001EFBC@sda21(r0)
Parsed instruction at 8000E95C: lwz r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000E960: cmplwi r0 0x0
Parsed instruction at 8000E964: beq .L_8000E9C4
Parsed instruction at 8000E968: stw r4 lbl_8001EFB0@sda21(r0)
Parsed instruction at 8000E96C: addi r3 r31 0x80
Parsed instruction at 8000E970: lwz r30 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E974: li r0 0xa
Parsed instruction at 8000E978: stw r4 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000E97C: stw r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000E980: stw r0 0xc(r30)
Parsed instruction at 8000E984: lwz r12 0x28(r30)
Parsed instruction at 8000E988: cmplwi r12 0x0
Parsed instruction at 8000E98C: beq .L_8000E9A0
Parsed instruction at 8000E990: mtlr r12
Parsed instruction at 8000E994: addi r4 r30 0x0
Parsed instruction at 8000E998: li r3 -0x3
Parsed instruction at 8000E99C: blrl 
Parsed label: L_8000E9A0:
Parsed instruction at 8000E9A0: lwz r12 lbl_8001EFAC@sda21(r0)
Parsed instruction at 8000E9A4: cmplwi r12 0x0
Parsed instruction at 8000E9A8: beq .L_8000E9BC
Parsed instruction at 8000E9AC: mtlr r12
Parsed instruction at 8000E9B0: addi r4 r30 0x0
Parsed instruction at 8000E9B4: li r3 0x0
Parsed instruction at 8000E9B8: blrl 
Parsed label: L_8000E9BC:
Parsed instruction at 8000E9BC: bl fn_8000E240
Parsed instruction at 8000E9C0: li r4 0x1
Parsed label: L_8000E9C4:
Parsed instruction at 8000E9C4: cmpwi r4 0x0
Parsed instruction at 8000E9C8: bne .L_8000ED04
Parsed instruction at 8000E9CC: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000E9D0: cmplwi r0 0x1
Parsed instruction at 8000E9D4: beq .L_8000E9FC
Parsed instruction at 8000E9D8: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000E9DC: cmplwi r0 0x4
Parsed instruction at 8000E9E0: beq .L_8000E9FC
Parsed instruction at 8000E9E4: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000E9E8: cmplwi r0 0x5
Parsed instruction at 8000E9EC: beq .L_8000E9FC
Parsed instruction at 8000E9F0: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000E9F4: cmplwi r0 0xe
Parsed instruction at 8000E9F8: bne .L_8000EA4C
Parsed label: L_8000E9FC:
Parsed instruction at 8000E9FC: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000EA00: lwz r4 0x20(r3)
Parsed instruction at 8000EA04: lwz r0 0x14(r3)
Parsed instruction at 8000EA08: cmplw r4 r0
Parsed instruction at 8000EA0C: beq .L_8000EA18
Parsed instruction at 8000EA10: bl fn_8000E488
Parsed instruction at 8000EA14: b .L_8000ED04
Parsed label: L_8000EA18:
Parsed instruction at 8000EA18: addi r0 r31 0x80
Parsed instruction at 8000EA1C: stw r0 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000EA20: li r0 0x0
Parsed instruction at 8000EA24: addi r4 r3 0x0
Parsed instruction at 8000EA28: stw r0 0xc(r3)
Parsed instruction at 8000EA2C: lwz r12 0x28(r3)
Parsed instruction at 8000EA30: cmplwi r12 0x0
Parsed instruction at 8000EA34: beq .L_8000EA44
Parsed instruction at 8000EA38: lwz r3 0x20(r4)
Parsed instruction at 8000EA3C: mtlr r12
Parsed instruction at 8000EA40: blrl 
Parsed label: L_8000EA44:
Parsed instruction at 8000EA44: bl fn_8000E240
Parsed instruction at 8000EA48: b .L_8000ED04
Parsed label: L_8000EA4C:
Parsed instruction at 8000EA4C: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000EA50: cmplwi r0 0x9
Parsed instruction at 8000EA54: beq .L_8000EA7C
Parsed instruction at 8000EA58: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000EA5C: cmplwi r0 0xa
Parsed instruction at 8000EA60: beq .L_8000EA7C
Parsed instruction at 8000EA64: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000EA68: cmplwi r0 0xb
Parsed instruction at 8000EA6C: beq .L_8000EA7C
Parsed instruction at 8000EA70: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000EA74: cmplwi r0 0xc
Parsed instruction at 8000EA78: bne .L_8000EAE0
Parsed label: L_8000EA7C:
Parsed instruction at 8000EA7C: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000EA80: cmplwi r0 0xb
Parsed instruction at 8000EA84: beq .L_8000EA94
Parsed instruction at 8000EA88: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000EA8C: cmplwi r0 0xa
Parsed instruction at 8000EA90: bne .L_8000EAA4
Parsed label: L_8000EA94:
Parsed instruction at 8000EA94: lis r3 0xcc00
Parsed instruction at 8000EA98: lwz r0 0x6020(r3)
Parsed instruction at 8000EA9C: slwi r3 r0 2
Parsed instruction at 8000EAA0: b .L_8000EAB0
Parsed label: L_8000EAA4:
Parsed instruction at 8000EAA4: lis r3 0xcc00
Parsed instruction at 8000EAA8: addi r3 r3 0x6000
Parsed instruction at 8000EAAC: lwz r3 0x20(r3)
Parsed label: L_8000EAB0:
Parsed instruction at 8000EAB0: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000EAB4: addi r5 r31 0x80
Parsed instruction at 8000EAB8: li r0 0x0
Parsed instruction at 8000EABC: stw r5 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000EAC0: stw r0 0xc(r4)
Parsed instruction at 8000EAC4: lwz r12 0x28(r4)
Parsed instruction at 8000EAC8: cmplwi r12 0x0
Parsed instruction at 8000EACC: beq .L_8000EAD8
Parsed instruction at 8000EAD0: mtlr r12
Parsed instruction at 8000EAD4: blrl 
Parsed label: L_8000EAD8:
Parsed instruction at 8000EAD8: bl fn_8000E240
Parsed instruction at 8000EADC: b .L_8000ED04
Parsed label: L_8000EAE0:
Parsed instruction at 8000EAE0: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000EAE4: cmplwi r0 0x6
Parsed instruction at 8000EAE8: bne .L_8000EBA0
Parsed instruction at 8000EAEC: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000EAF0: addi r5 r4 0x1c
Parsed instruction at 8000EAF4: lwz r0 0x1c(r4)
Parsed instruction at 8000EAF8: cmplwi r0 0x0
Parsed instruction at 8000EAFC: bne .L_8000EB70
Parsed instruction at 8000EB00: lis r3 0xcc00
Parsed instruction at 8000EB04: lwz r0 0x6020(r3)
Parsed instruction at 8000EB08: clrlwi. r0 r0 31
Parsed instruction at 8000EB0C: beq .L_8000EB40
Parsed instruction at 8000EB10: addi r0 r31 0x80
Parsed instruction at 8000EB14: stw r0 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000EB18: li r0 0x9
Parsed instruction at 8000EB1C: stw r0 0xc(r4)
Parsed instruction at 8000EB20: lwz r12 0x28(r4)
Parsed instruction at 8000EB24: cmplwi r12 0x0
Parsed instruction at 8000EB28: beq .L_8000EB38
Parsed instruction at 8000EB2C: mtlr r12
Parsed instruction at 8000EB30: li r3 -0x2
Parsed instruction at 8000EB34: blrl 
Parsed label: L_8000EB38:
Parsed instruction at 8000EB38: bl fn_8000E240
Parsed instruction at 8000EB3C: b .L_8000ED04
Parsed label: L_8000EB40:
Parsed instruction at 8000EB40: li r0 0x0
Parsed instruction at 8000EB44: stw r0 lbl_8001EF9C@sda21(r0)
Parsed instruction at 8000EB48: li r0 0x1
Parsed instruction at 8000EB4C: lis r3 fn_8000E748@ha
Parsed instruction at 8000EB50: stw r0 0x0(r5)
Parsed instruction at 8000EB54: addi r6 r3 fn_8000E748@l
Parsed instruction at 8000EB58: li r3 0x0
Parsed instruction at 8000EB5C: lwz r5 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000EB60: lwz r4 0x14(r5)
Parsed instruction at 8000EB64: lwz r5 0x10(r5)
Parsed instruction at 8000EB68: bl fn_8000CF58
Parsed instruction at 8000EB6C: b .L_8000ED04
Parsed label: L_8000EB70:
Parsed instruction at 8000EB70: addi r0 r31 0x80
Parsed instruction at 8000EB74: stw r0 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000EB78: li r0 0x0
Parsed instruction at 8000EB7C: stw r0 0xc(r4)
Parsed instruction at 8000EB80: lwz r12 0x28(r4)
Parsed instruction at 8000EB84: cmplwi r12 0x0
Parsed instruction at 8000EB88: beq .L_8000EB98
Parsed instruction at 8000EB8C: mtlr r12
Parsed instruction at 8000EB90: li r3 0x0
Parsed instruction at 8000EB94: blrl 
Parsed label: L_8000EB98:
Parsed instruction at 8000EB98: bl fn_8000E240
Parsed instruction at 8000EB9C: b .L_8000ED04
Parsed label: L_8000EBA0:
Parsed instruction at 8000EBA0: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000EBA4: addi r3 r31 0x80
Parsed instruction at 8000EBA8: li r0 0x0
Parsed instruction at 8000EBAC: stw r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000EBB0: stw r0 0xc(r4)
Parsed instruction at 8000EBB4: lwz r12 0x28(r4)
Parsed instruction at 8000EBB8: cmplwi r12 0x0
Parsed instruction at 8000EBBC: beq .L_8000EBCC
Parsed instruction at 8000EBC0: mtlr r12
Parsed instruction at 8000EBC4: li r3 0x0
Parsed instruction at 8000EBC8: blrl 
Parsed label: L_8000EBCC:
Parsed instruction at 8000EBCC: bl fn_8000E240
Parsed instruction at 8000EBD0: b .L_8000ED04
Parsed label: L_8000EBD4:
Parsed instruction at 8000EBD4: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000EBD8: cmplwi r0 0xe
Parsed instruction at 8000EBDC: bne .L_8000EC08
Parsed instruction at 8000EBE0: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000EBE4: li r0 -0x1
Parsed instruction at 8000EBE8: lis r3 0x123
Parsed instruction at 8000EBEC: stw r0 0xc(r4)
Parsed instruction at 8000EBF0: addi r3 r3 0x4567
Parsed instruction at 8000EBF4: bl fn_8000F74C
Parsed instruction at 8000EBF8: lis r3 fn_8000D44C@ha
Parsed instruction at 8000EBFC: addi r3 r3 fn_8000D44C@l
Parsed instruction at 8000EC00: bl fn_8000CDA4
Parsed instruction at 8000EC04: b .L_8000ED04
Parsed label: L_8000EC08:
Parsed instruction at 8000EC08: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000EC0C: cmplwi r0 0x1
Parsed instruction at 8000EC10: beq .L_8000EC38
Parsed instruction at 8000EC14: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000EC18: cmplwi r0 0x4
Parsed instruction at 8000EC1C: beq .L_8000EC38
Parsed instruction at 8000EC20: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000EC24: cmplwi r0 0x5
Parsed instruction at 8000EC28: beq .L_8000EC38
Parsed instruction at 8000EC2C: lwz r0 lbl_8001EFA4@sda21(r0)
Parsed instruction at 8000EC30: cmplwi r0 0xe
Parsed instruction at 8000EC34: bne .L_8000ECF8
Parsed label: L_8000EC38:
Parsed instruction at 8000EC38: lwz r30 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000EC3C: lwz r3 0x20(r30)
Parsed instruction at 8000EC40: lwz r0 0x14(r30)
Parsed instruction at 8000EC44: cmplw r3 r0
Parsed instruction at 8000EC48: bne .L_8000ECF8
Parsed instruction at 8000EC4C: lwz r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000EC50: cmplwi r0 0x0
Parsed instruction at 8000EC54: beq .L_8000ECB8
Parsed instruction at 8000EC58: li r4 0x0
Parsed instruction at 8000EC5C: stw r4 lbl_8001EFB0@sda21(r0)
Parsed instruction at 8000EC60: addi r3 r31 0x80
Parsed instruction at 8000EC64: li r0 0xa
Parsed instruction at 8000EC68: stw r4 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000EC6C: stw r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000EC70: stw r0 0xc(r30)
Parsed instruction at 8000EC74: lwz r12 0x28(r30)
Parsed instruction at 8000EC78: cmplwi r12 0x0
Parsed instruction at 8000EC7C: beq .L_8000EC90
Parsed instruction at 8000EC80: mtlr r12
Parsed instruction at 8000EC84: addi r4 r30 0x0
Parsed instruction at 8000EC88: li r3 -0x3
Parsed instruction at 8000EC8C: blrl 
Parsed label: L_8000EC90:
Parsed instruction at 8000EC90: lwz r12 lbl_8001EFAC@sda21(r0)
Parsed instruction at 8000EC94: cmplwi r12 0x0
Parsed instruction at 8000EC98: beq .L_8000ECAC
Parsed instruction at 8000EC9C: mtlr r12
Parsed instruction at 8000ECA0: addi r4 r30 0x0
Parsed instruction at 8000ECA4: li r3 0x0
Parsed instruction at 8000ECA8: blrl 
Parsed label: L_8000ECAC:
Parsed instruction at 8000ECAC: bl fn_8000E240
Parsed instruction at 8000ECB0: li r0 0x1
Parsed instruction at 8000ECB4: b .L_8000ECBC
Parsed label: L_8000ECB8:
Parsed instruction at 8000ECB8: li r0 0x0
Parsed label: L_8000ECBC:
Parsed instruction at 8000ECBC: cmpwi r0 0x0
Parsed instruction at 8000ECC0: bne .L_8000ED04
Parsed instruction at 8000ECC4: lwz r4 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000ECC8: addi r3 r31 0x80
Parsed instruction at 8000ECCC: li r0 0x0
Parsed instruction at 8000ECD0: stw r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000ECD4: stw r0 0xc(r4)
Parsed instruction at 8000ECD8: lwz r12 0x28(r4)
Parsed instruction at 8000ECDC: cmplwi r12 0x0
Parsed instruction at 8000ECE0: beq .L_8000ECF0
Parsed instruction at 8000ECE4: lwz r3 0x20(r4)
Parsed instruction at 8000ECE8: mtlr r12
Parsed instruction at 8000ECEC: blrl 
Parsed label: L_8000ECF0:
Parsed instruction at 8000ECF0: bl fn_8000E240
Parsed instruction at 8000ECF4: b .L_8000ED04
Parsed label: L_8000ECF8:
Parsed instruction at 8000ECF8: lis r3 fn_8000D66C@ha
Parsed instruction at 8000ECFC: addi r3 r3 fn_8000D66C@l
Parsed instruction at 8000ED00: bl fn_8000CE30
Parsed label: L_8000ED04:
Parsed instruction at 8000ED04: lwz r0 0x1c(r1)
Parsed instruction at 8000ED08: lwz r31 0x14(r1)
Parsed instruction at 8000ED0C: lwz r30 0x10(r1)
Parsed instruction at 8000ED10: addi r1 r1 0x18
Parsed instruction at 8000ED14: mtlr r0
Parsed instruction at 8000ED18: blr 
End of function: fn_8000E748, 416 instructions
Parsed function: fn_8000ED1C at 0x8000ED1C
Parsed instruction at 8000ED1C: mflr r0
Parsed instruction at 8000ED20: stw r0 0x4(r1)
Parsed instruction at 8000ED24: li r0 0x4
Parsed instruction at 8000ED28: stwu r1 -0x30(r1)
Parsed instruction at 8000ED2C: stw r31 0x2c(r1)
Parsed instruction at 8000ED30: addi r31 r3 0x0
Parsed instruction at 8000ED34: stw r30 0x28(r1)
Parsed instruction at 8000ED38: stw r0 0x8(r3)
Parsed instruction at 8000ED3C: li r0 0x0
Parsed instruction at 8000ED40: stw r4 0x18(r3)
Parsed instruction at 8000ED44: stw r5 0x14(r3)
Parsed instruction at 8000ED48: stw r6 0x10(r3)
Parsed instruction at 8000ED4C: stw r0 0x20(r3)
Parsed instruction at 8000ED50: stw r7 0x28(r3)
Parsed instruction at 8000ED54: lwz r0 lbl_8001EE20@sda21(r0)
Parsed instruction at 8000ED58: cmpwi r0 0x0
Parsed instruction at 8000ED5C: beq .L_8000ED8C
Parsed instruction at 8000ED60: lwz r3 0x8(r31)
Parsed instruction at 8000ED64: cmplwi r3 0x1
Parsed instruction at 8000ED68: beq .L_8000ED80
Parsed instruction at 8000ED6C: subi r0 r3 0x4
Parsed instruction at 8000ED70: cmplwi r0 0x1
Parsed instruction at 8000ED74: ble .L_8000ED80
Parsed instruction at 8000ED78: cmplwi r3 0xe
Parsed instruction at 8000ED7C: bne .L_8000ED8C
Parsed label: L_8000ED80:
Parsed instruction at 8000ED80: lwz r3 0x18(r31)
Parsed instruction at 8000ED84: lwz r4 0x14(r31)
Parsed instruction at 8000ED88: bl DCInvalidateRange
Parsed label: L_8000ED8C:
Parsed instruction at 8000ED8C: bl OSDisableInterrupts
Parsed instruction at 8000ED90: li r0 0x2
Parsed instruction at 8000ED94: stw r0 0xc(r31)
Parsed instruction at 8000ED98: addi r30 r3 0x0
Parsed instruction at 8000ED9C: addi r4 r31 0x0
Parsed instruction at 8000EDA0: li r3 0x2
Parsed instruction at 8000EDA4: bl fn_8000F470
Parsed instruction at 8000EDA8: lwz r0 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000EDAC: addi r31 r3 0x0
Parsed instruction at 8000EDB0: cmplwi r0 0x0
Parsed instruction at 8000EDB4: bne .L_8000EDC8
Parsed instruction at 8000EDB8: lwz r0 lbl_8001EF94@sda21(r0)
Parsed instruction at 8000EDBC: cmpwi r0 0x0
Parsed instruction at 8000EDC0: bne .L_8000EDC8
Parsed instruction at 8000EDC4: bl fn_8000E240
Parsed label: L_8000EDC8:
Parsed instruction at 8000EDC8: mr r3 r30
Parsed instruction at 8000EDCC: bl OSRestoreInterrupts
Parsed instruction at 8000EDD0: mr r3 r31
Parsed instruction at 8000EDD4: lwz r0 0x34(r1)
Parsed instruction at 8000EDD8: lwz r31 0x2c(r1)
Parsed instruction at 8000EDDC: lwz r30 0x28(r1)
Parsed instruction at 8000EDE0: addi r1 r1 0x30
Parsed instruction at 8000EDE4: mtlr r0
Parsed instruction at 8000EDE8: blr 
End of function: fn_8000ED1C, 55 instructions
Parsed function: fn_8000EDEC at 0x8000EDEC
Parsed instruction at 8000EDEC: mflr r0
Parsed instruction at 8000EDF0: stw r0 0x4(r1)
Parsed instruction at 8000EDF4: li r0 0x5
Parsed instruction at 8000EDF8: stwu r1 -0x28(r1)
Parsed instruction at 8000EDFC: stw r31 0x24(r1)
Parsed instruction at 8000EE00: addi r31 r3 0x0
Parsed instruction at 8000EE04: stw r30 0x20(r1)
Parsed instruction at 8000EE08: stw r0 0x8(r3)
Parsed instruction at 8000EE0C: li r3 0x20
Parsed instruction at 8000EE10: li r0 0x0
Parsed instruction at 8000EE14: stw r4 0x18(r31)
Parsed instruction at 8000EE18: stw r3 0x14(r31)
Parsed instruction at 8000EE1C: stw r0 0x10(r31)
Parsed instruction at 8000EE20: stw r0 0x20(r31)
Parsed instruction at 8000EE24: stw r5 0x28(r31)
Parsed instruction at 8000EE28: lwz r0 lbl_8001EE20@sda21(r0)
Parsed instruction at 8000EE2C: cmpwi r0 0x0
Parsed instruction at 8000EE30: beq .L_8000EE60
Parsed instruction at 8000EE34: lwz r3 0x8(r31)
Parsed instruction at 8000EE38: cmplwi r3 0x1
Parsed instruction at 8000EE3C: beq .L_8000EE54
Parsed instruction at 8000EE40: subi r0 r3 0x4
Parsed instruction at 8000EE44: cmplwi r0 0x1
Parsed instruction at 8000EE48: ble .L_8000EE54
Parsed instruction at 8000EE4C: cmplwi r3 0xe
Parsed instruction at 8000EE50: bne .L_8000EE60
Parsed label: L_8000EE54:
Parsed instruction at 8000EE54: lwz r3 0x18(r31)
Parsed instruction at 8000EE58: lwz r4 0x14(r31)
Parsed instruction at 8000EE5C: bl DCInvalidateRange
Parsed label: L_8000EE60:
Parsed instruction at 8000EE60: bl OSDisableInterrupts
Parsed instruction at 8000EE64: li r0 0x2
Parsed instruction at 8000EE68: stw r0 0xc(r31)
Parsed instruction at 8000EE6C: addi r30 r3 0x0
Parsed instruction at 8000EE70: addi r4 r31 0x0
Parsed instruction at 8000EE74: li r3 0x2
Parsed instruction at 8000EE78: bl fn_8000F470
Parsed instruction at 8000EE7C: lwz r0 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000EE80: addi r31 r3 0x0
Parsed instruction at 8000EE84: cmplwi r0 0x0
Parsed instruction at 8000EE88: bne .L_8000EE9C
Parsed instruction at 8000EE8C: lwz r0 lbl_8001EF94@sda21(r0)
Parsed instruction at 8000EE90: cmpwi r0 0x0
Parsed instruction at 8000EE94: bne .L_8000EE9C
Parsed instruction at 8000EE98: bl fn_8000E240
Parsed label: L_8000EE9C:
Parsed instruction at 8000EE9C: mr r3 r30
Parsed instruction at 8000EEA0: bl OSRestoreInterrupts
Parsed instruction at 8000EEA4: mr r3 r31
Parsed instruction at 8000EEA8: lwz r0 0x2c(r1)
Parsed instruction at 8000EEAC: lwz r31 0x24(r1)
Parsed instruction at 8000EEB0: lwz r30 0x20(r1)
Parsed instruction at 8000EEB4: addi r1 r1 0x28
Parsed instruction at 8000EEB8: mtlr r0
Parsed instruction at 8000EEBC: blr 
End of function: fn_8000EDEC, 56 instructions
Parsed function: fn_8000EEC0 at 0x8000EEC0
Parsed instruction at 8000EEC0: mflr r0
Parsed instruction at 8000EEC4: stw r0 0x4(r1)
Parsed instruction at 8000EEC8: stwu r1 -0x8(r1)
Parsed instruction at 8000EECC: bl fn_8000D118
Parsed instruction at 8000EED0: lis r3 0xcc00
Parsed instruction at 8000EED4: li r0 0x2a
Parsed instruction at 8000EED8: stw r0 0x6000(r3)
Parsed instruction at 8000EEDC: addi r4 r3 0x6000
Parsed instruction at 8000EEE0: li r0 0x0
Parsed instruction at 8000EEE4: lwz r3 0x6004(r3)
Parsed instruction at 8000EEE8: stw r3 0x4(r4)
Parsed instruction at 8000EEEC: stw r0 lbl_8001EFC0@sda21(r0)
Parsed instruction at 8000EEF0: stw r0 lbl_8001EFB0@sda21(r0)
Parsed instruction at 8000EEF4: lwz r0 0xc(r1)
Parsed instruction at 8000EEF8: addi r1 r1 0x8
Parsed instruction at 8000EEFC: mtlr r0
Parsed instruction at 8000EF00: blr 
End of function: fn_8000EEC0, 17 instructions
Parsed function: fn_8000EF04 at 0x8000EF04
Parsed instruction at 8000EF04: mflr r0
Parsed instruction at 8000EF08: stw r0 0x4(r1)
Parsed instruction at 8000EF0C: stwu r1 -0x18(r1)
Parsed instruction at 8000EF10: stw r31 0x14(r1)
Parsed instruction at 8000EF14: stw r30 0x10(r1)
Parsed instruction at 8000EF18: bl OSDisableInterrupts
Parsed instruction at 8000EF1C: lwz r0 lbl_8001EFA0@sda21(r0)
Parsed instruction at 8000EF20: addi r30 r3 0x0
Parsed instruction at 8000EF24: cmpwi r0 0x0
Parsed instruction at 8000EF28: beq .L_8000EF34
Parsed instruction at 8000EF2C: li r31 -0x1
Parsed instruction at 8000EF30: b .L_8000EF8C
Parsed label: L_8000EF34:
Parsed instruction at 8000EF34: lwz r0 lbl_8001EF98@sda21(r0)
Parsed instruction at 8000EF38: cmpwi r0 0x0
Parsed instruction at 8000EF3C: beq .L_8000EF48
Parsed instruction at 8000EF40: li r31 0x8
Parsed instruction at 8000EF44: b .L_8000EF8C
Parsed label: L_8000EF48:
Parsed instruction at 8000EF48: lwz r31 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000EF4C: cmplwi r31 0x0
Parsed instruction at 8000EF50: bne .L_8000EF5C
Parsed instruction at 8000EF54: li r31 0x0
Parsed instruction at 8000EF58: b .L_8000EF8C
Parsed label: L_8000EF5C:
Parsed instruction at 8000EF5C: lis r3 lbl_8001CA20@ha
Parsed instruction at 8000EF60: addi r0 r3 lbl_8001CA20@l
Parsed instruction at 8000EF64: cmplw r31 r0
Parsed instruction at 8000EF68: bne .L_8000EF74
Parsed instruction at 8000EF6C: li r31 0x0
Parsed instruction at 8000EF70: b .L_8000EF8C
Parsed label: L_8000EF74:
Parsed instruction at 8000EF74: bl OSDisableInterrupts
Parsed instruction at 8000EF78: lwz r31 0xc(r31)
Parsed instruction at 8000EF7C: cmpwi r31 0x3
Parsed instruction at 8000EF80: bne .L_8000EF88
Parsed instruction at 8000EF84: li r31 0x1
Parsed label: L_8000EF88:
Parsed instruction at 8000EF88: bl OSRestoreInterrupts
Parsed label: L_8000EF8C:
Parsed instruction at 8000EF8C: mr r3 r30
Parsed instruction at 8000EF90: bl OSRestoreInterrupts
Parsed instruction at 8000EF94: mr r3 r31
Parsed instruction at 8000EF98: lwz r0 0x1c(r1)
Parsed instruction at 8000EF9C: lwz r31 0x14(r1)
Parsed instruction at 8000EFA0: lwz r30 0x10(r1)
Parsed instruction at 8000EFA4: addi r1 r1 0x18
Parsed instruction at 8000EFA8: mtlr r0
Parsed instruction at 8000EFAC: blr 
End of function: fn_8000EF04, 49 instructions
Parsed function: fn_8000EFB0 at 0x8000EFB0
Parsed instruction at 8000EFB0: lwz r0 lbl_8001EE20@sda21(r0)
Parsed instruction at 8000EFB4: stw r3 lbl_8001EE20@sda21(r0)
Parsed instruction at 8000EFB8: mr r3 r0
Parsed instruction at 8000EFBC: blr 
End of function: fn_8000EFB0, 4 instructions
Parsed function: fn_8000EFC0 at 0x8000EFC0
Parsed instruction at 8000EFC0: mflr r0
Parsed instruction at 8000EFC4: stw r0 0x4(r1)
Parsed instruction at 8000EFC8: stwu r1 -0x20(r1)
Parsed instruction at 8000EFCC: stw r31 0x1c(r1)
Parsed instruction at 8000EFD0: stw r30 0x18(r1)
Parsed instruction at 8000EFD4: addi r30 r4 0x0
Parsed instruction at 8000EFD8: stw r29 0x14(r1)
Parsed instruction at 8000EFDC: addi r29 r3 0x0
Parsed instruction at 8000EFE0: bl OSDisableInterrupts
Parsed instruction at 8000EFE4: lwz r4 0xc(r29)
Parsed instruction at 8000EFE8: addi r31 r3 0x0
Parsed instruction at 8000EFEC: addi r0 r4 0x1
Parsed instruction at 8000EFF0: cmplwi r0 0xc
Parsed instruction at 8000EFF4: bgt .L_8000F208
Parsed instruction at 8000EFF8: lis r3 jumptable_8001B2B4@ha
Parsed instruction at 8000EFFC: addi r3 r3 jumptable_8001B2B4@l
Parsed instruction at 8000F000: slwi r0 r0 2
Parsed instruction at 8000F004: lwzx r0 r3 r0
Parsed instruction at 8000F008: mtctr r0
Parsed instruction at 8000F00C: bctr 
Parsed instruction at 8000F010: cmplwi r30 0x0
Parsed instruction at 8000F014: beq .L_8000F208
Parsed instruction at 8000F018: addi r12 r30 0x0
Parsed instruction at 8000F01C: mtlr r12
Parsed instruction at 8000F020: addi r4 r29 0x0
Parsed instruction at 8000F024: li r3 0x0
Parsed instruction at 8000F028: blrl 
Parsed instruction at 8000F02C: b .L_8000F208
Parsed instruction at 8000F030: lwz r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000F034: cmplwi r0 0x0
Parsed instruction at 8000F038: beq .L_8000F04C
Parsed instruction at 8000F03C: mr r3 r31
Parsed instruction at 8000F040: bl OSRestoreInterrupts
Parsed instruction at 8000F044: li r3 0x0
Parsed instruction at 8000F048: b .L_8000F214
Parsed label: L_8000F04C:
Parsed instruction at 8000F04C: li r0 0x1
Parsed instruction at 8000F050: stw r30 lbl_8001EFAC@sda21(r0)
Parsed instruction at 8000F054: stw r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000F058: lwz r0 0x8(r29)
Parsed instruction at 8000F05C: cmplwi r0 0x4
Parsed instruction at 8000F060: beq .L_8000F06C
Parsed instruction at 8000F064: cmplwi r0 0x1
Parsed instruction at 8000F068: bne .L_8000F208
Parsed label: L_8000F06C:
Parsed instruction at 8000F06C: bl fn_8000D1D4
Parsed instruction at 8000F070: b .L_8000F208
Parsed instruction at 8000F074: mr r3 r29
Parsed instruction at 8000F078: bl fn_8000F5D0
Parsed instruction at 8000F07C: li r0 0xa
Parsed instruction at 8000F080: stw r0 0xc(r29)
Parsed instruction at 8000F084: lwz r12 0x28(r29)
Parsed instruction at 8000F088: cmplwi r12 0x0
Parsed instruction at 8000F08C: beq .L_8000F0A0
Parsed instruction at 8000F090: mtlr r12
Parsed instruction at 8000F094: addi r4 r29 0x0
Parsed instruction at 8000F098: li r3 -0x3
Parsed instruction at 8000F09C: blrl 
Parsed label: L_8000F0A0:
Parsed instruction at 8000F0A0: cmplwi r30 0x0
Parsed instruction at 8000F0A4: beq .L_8000F208
Parsed instruction at 8000F0A8: addi r12 r30 0x0
Parsed instruction at 8000F0AC: mtlr r12
Parsed instruction at 8000F0B0: addi r4 r29 0x0
Parsed instruction at 8000F0B4: li r3 0x0
Parsed instruction at 8000F0B8: blrl 
Parsed instruction at 8000F0BC: b .L_8000F208
Parsed instruction at 8000F0C0: lwz r0 0x8(r29)
Parsed instruction at 8000F0C4: cmpwi r0 0xd
Parsed instruction at 8000F0C8: beq .L_8000F0F0
Parsed instruction at 8000F0CC: bge .L_8000F0E4
Parsed instruction at 8000F0D0: cmpwi r0 0x6
Parsed instruction at 8000F0D4: bge .L_8000F110
Parsed instruction at 8000F0D8: cmpwi r0 0x4
Parsed instruction at 8000F0DC: bge .L_8000F0F0
Parsed instruction at 8000F0E0: b .L_8000F110
Parsed label: L_8000F0E4:
Parsed instruction at 8000F0E4: cmpwi r0 0xf
Parsed instruction at 8000F0E8: beq .L_8000F0F0
Parsed instruction at 8000F0EC: b .L_8000F110
Parsed label: L_8000F0F0:
Parsed instruction at 8000F0F0: cmplwi r30 0x0
Parsed instruction at 8000F0F4: beq .L_8000F208
Parsed instruction at 8000F0F8: addi r12 r30 0x0
Parsed instruction at 8000F0FC: mtlr r12
Parsed instruction at 8000F100: addi r4 r29 0x0
Parsed instruction at 8000F104: li r3 0x0
Parsed instruction at 8000F108: blrl 
Parsed instruction at 8000F10C: b .L_8000F208
Parsed label: L_8000F110:
Parsed instruction at 8000F110: lwz r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000F114: cmplwi r0 0x0
Parsed instruction at 8000F118: beq .L_8000F12C
Parsed instruction at 8000F11C: mr r3 r31
Parsed instruction at 8000F120: bl OSRestoreInterrupts
Parsed instruction at 8000F124: li r3 0x0
Parsed instruction at 8000F128: b .L_8000F214
Parsed label: L_8000F12C:
Parsed instruction at 8000F12C: li r0 0x1
Parsed instruction at 8000F130: stw r30 lbl_8001EFAC@sda21(r0)
Parsed instruction at 8000F134: stw r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000F138: b .L_8000F208
Parsed instruction at 8000F13C: bl fn_8000D1E8
Parsed instruction at 8000F140: lis r4 fn_8000E15C@ha
Parsed instruction at 8000F144: addi r0 r4 fn_8000E15C@l
Parsed instruction at 8000F148: cmplw r3 r0
Parsed instruction at 8000F14C: beq .L_8000F160
Parsed instruction at 8000F150: mr r3 r31
Parsed instruction at 8000F154: bl OSRestoreInterrupts
Parsed instruction at 8000F158: li r3 0x0
Parsed instruction at 8000F15C: b .L_8000F214
Parsed label: L_8000F160:
Parsed instruction at 8000F160: lwz r0 0xc(r29)
Parsed instruction at 8000F164: cmpwi r0 0x4
Parsed instruction at 8000F168: bne .L_8000F174
Parsed instruction at 8000F16C: li r0 0x3
Parsed instruction at 8000F170: stw r0 lbl_8001EFB0@sda21(r0)
Parsed label: L_8000F174:
Parsed instruction at 8000F174: lwz r0 0xc(r29)
Parsed instruction at 8000F178: cmpwi r0 0x5
Parsed instruction at 8000F17C: bne .L_8000F188
Parsed instruction at 8000F180: li r0 0x4
Parsed instruction at 8000F184: stw r0 lbl_8001EFB0@sda21(r0)
Parsed label: L_8000F188:
Parsed instruction at 8000F188: lwz r0 0xc(r29)
Parsed instruction at 8000F18C: cmpwi r0 0x6
Parsed instruction at 8000F190: bne .L_8000F19C
Parsed instruction at 8000F194: li r0 0x1
Parsed instruction at 8000F198: stw r0 lbl_8001EFB0@sda21(r0)
Parsed label: L_8000F19C:
Parsed instruction at 8000F19C: lwz r0 0xc(r29)
Parsed instruction at 8000F1A0: cmpwi r0 0xb
Parsed instruction at 8000F1A4: bne .L_8000F1B0
Parsed instruction at 8000F1A8: li r0 0x2
Parsed instruction at 8000F1AC: stw r0 lbl_8001EFB0@sda21(r0)
Parsed label: L_8000F1B0:
Parsed instruction at 8000F1B0: lwz r0 0xc(r29)
Parsed instruction at 8000F1B4: cmpwi r0 0x7
Parsed instruction at 8000F1B8: bne .L_8000F1C4
Parsed instruction at 8000F1BC: li r0 0x7
Parsed instruction at 8000F1C0: stw r0 lbl_8001EFB0@sda21(r0)
Parsed label: L_8000F1C4:
Parsed instruction at 8000F1C4: li r0 0xa
Parsed instruction at 8000F1C8: stw r0 0xc(r29)
Parsed instruction at 8000F1CC: lwz r12 0x28(r29)
Parsed instruction at 8000F1D0: cmplwi r12 0x0
Parsed instruction at 8000F1D4: beq .L_8000F1E8
Parsed instruction at 8000F1D8: mtlr r12
Parsed instruction at 8000F1DC: addi r4 r29 0x0
Parsed instruction at 8000F1E0: li r3 -0x3
Parsed instruction at 8000F1E4: blrl 
Parsed label: L_8000F1E8:
Parsed instruction at 8000F1E8: cmplwi r30 0x0
Parsed instruction at 8000F1EC: beq .L_8000F204
Parsed instruction at 8000F1F0: addi r12 r30 0x0
Parsed instruction at 8000F1F4: mtlr r12
Parsed instruction at 8000F1F8: addi r4 r29 0x0
Parsed instruction at 8000F1FC: li r3 0x0
Parsed instruction at 8000F200: blrl 
Parsed label: L_8000F204:
Parsed instruction at 8000F204: bl fn_8000E240
Parsed label: L_8000F208:
Parsed instruction at 8000F208: mr r3 r31
Parsed instruction at 8000F20C: bl OSRestoreInterrupts
Parsed instruction at 8000F210: li r3 0x1
Parsed label: L_8000F214:
Parsed instruction at 8000F214: lwz r0 0x24(r1)
Parsed instruction at 8000F218: lwz r31 0x1c(r1)
Parsed instruction at 8000F21C: lwz r30 0x18(r1)
Parsed instruction at 8000F220: lwz r29 0x14(r1)
Parsed instruction at 8000F224: addi r1 r1 0x20
Parsed instruction at 8000F228: mtlr r0
Parsed instruction at 8000F22C: blr 
End of function: fn_8000EFC0, 173 instructions
Parsed function: fn_8000F230 at 0x8000F230
Parsed instruction at 8000F230: lis r3 0x8000
Parsed instruction at 8000F234: blr 
End of function: fn_8000F230, 2 instructions
Parsed function: fn_8000F238 at 0x8000F238
Parsed instruction at 8000F238: mflr r0
Parsed instruction at 8000F23C: stw r0 0x4(r1)
Parsed instruction at 8000F240: stwu r1 -0x10(r1)
Parsed instruction at 8000F244: stw r31 0xc(r1)
Parsed instruction at 8000F248: bl OSDisableInterrupts
Parsed instruction at 8000F24C: lwz r0 lbl_8001EFA0@sda21(r0)
Parsed instruction at 8000F250: cmpwi r0 0x0
Parsed instruction at 8000F254: beq .L_8000F260
Parsed instruction at 8000F258: li r4 -0x1
Parsed instruction at 8000F25C: b .L_8000F2A4
Parsed label: L_8000F260:
Parsed instruction at 8000F260: lwz r0 lbl_8001EF98@sda21(r0)
Parsed instruction at 8000F264: cmpwi r0 0x0
Parsed instruction at 8000F268: beq .L_8000F274
Parsed instruction at 8000F26C: li r4 0x8
Parsed instruction at 8000F270: b .L_8000F2A4
Parsed label: L_8000F274:
Parsed instruction at 8000F274: lwz r5 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000F278: cmplwi r5 0x0
Parsed instruction at 8000F27C: bne .L_8000F288
Parsed instruction at 8000F280: li r4 0x0
Parsed instruction at 8000F284: b .L_8000F2A4
Parsed label: L_8000F288:
Parsed instruction at 8000F288: lis r4 lbl_8001CA20@ha
Parsed instruction at 8000F28C: addi r0 r4 lbl_8001CA20@l
Parsed instruction at 8000F290: cmplw r5 r0
Parsed instruction at 8000F294: bne .L_8000F2A0
Parsed instruction at 8000F298: li r4 0x0
Parsed instruction at 8000F29C: b .L_8000F2A4
Parsed label: L_8000F2A0:
Parsed instruction at 8000F2A0: lwz r4 0xc(r5)
Parsed label: L_8000F2A4:
Parsed instruction at 8000F2A4: addi r0 r4 0x1
Parsed instruction at 8000F2A8: cmplwi r0 0xc
Parsed instruction at 8000F2AC: bgt .L_8000F300
Parsed instruction at 8000F2B0: lis r4 jumptable_8001B2E8@ha
Parsed instruction at 8000F2B4: addi r4 r4 jumptable_8001B2E8@l
Parsed instruction at 8000F2B8: slwi r0 r0 2
Parsed instruction at 8000F2BC: lwzx r0 r4 r0
Parsed instruction at 8000F2C0: mtctr r0
Parsed instruction at 8000F2C4: bctr 
Parsed instruction at 8000F2C8: li r31 0x1
Parsed instruction at 8000F2CC: b .L_8000F300
Parsed instruction at 8000F2D0: li r31 0x0
Parsed instruction at 8000F2D4: b .L_8000F300
Parsed instruction at 8000F2D8: lis r4 0xcc00
Parsed instruction at 8000F2DC: addi r4 r4 0x6000
Parsed instruction at 8000F2E0: lwz r4 0x4(r4)
Parsed instruction at 8000F2E4: extrwi. r0 r4 1 29
Parsed instruction at 8000F2E8: bne .L_8000F2F4
Parsed instruction at 8000F2EC: clrlwi. r0 r4 31
Parsed instruction at 8000F2F0: beq .L_8000F2FC
Parsed label: L_8000F2F4:
Parsed instruction at 8000F2F4: li r31 0x0
Parsed instruction at 8000F2F8: b .L_8000F300
Parsed label: L_8000F2FC:
Parsed instruction at 8000F2FC: li r31 0x1
Parsed label: L_8000F300:
Parsed instruction at 8000F300: bl OSRestoreInterrupts
Parsed instruction at 8000F304: mr r3 r31
Parsed instruction at 8000F308: lwz r0 0x14(r1)
Parsed instruction at 8000F30C: lwz r31 0xc(r1)
Parsed instruction at 8000F310: addi r1 r1 0x10
Parsed instruction at 8000F314: mtlr r0
Parsed instruction at 8000F318: blr 
End of function: fn_8000F238, 65 instructions
Parsed function: fn_8000F31C at 0x8000F31C
Parsed instruction at 8000F31C: mflr r0
Parsed instruction at 8000F320: stw r0 0x4(r1)
Parsed instruction at 8000F324: stwu r1 -0x20(r1)
Parsed instruction at 8000F328: stw r31 0x1c(r1)
Parsed instruction at 8000F32C: stw r30 0x18(r1)
Parsed instruction at 8000F330: mr r30 r3
Parsed instruction at 8000F334: stw r29 0x14(r1)
Parsed instruction at 8000F338: bl OSDisableInterrupts
Parsed instruction at 8000F33C: mr r29 r3
Parsed instruction at 8000F340: bl fn_8000F438
Parsed instruction at 8000F344: lwz r0 lbl_8001EFA8@sda21(r0)
Parsed instruction at 8000F348: cmplwi r0 0x0
Parsed instruction at 8000F34C: beq .L_8000F358
Parsed instruction at 8000F350: stw r30 lbl_8001EFAC@sda21(r0)
Parsed instruction at 8000F354: b .L_8000F414
Parsed label: L_8000F358:
Parsed instruction at 8000F358: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000F35C: cmplwi r3 0x0
Parsed instruction at 8000F360: beq .L_8000F36C
Parsed instruction at 8000F364: li r0 0x0
Parsed instruction at 8000F368: stw r0 0x28(r3)
Parsed label: L_8000F36C:
Parsed instruction at 8000F36C: bl OSDisableInterrupts
Parsed instruction at 8000F370: mr r31 r3
Parsed instruction at 8000F374: bl OSDisableInterrupts
Parsed instruction at 8000F378: lwz r0 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000F37C: li r4 0x1
Parsed instruction at 8000F380: stw r4 lbl_8001EF94@sda21(r0)
Parsed instruction at 8000F384: cmplwi r0 0x0
Parsed instruction at 8000F388: bne .L_8000F390
Parsed instruction at 8000F38C: stw r4 lbl_8001EF98@sda21(r0)
Parsed label: L_8000F390:
Parsed instruction at 8000F390: bl OSRestoreInterrupts
Parsed instruction at 8000F394: b .L_8000F3A0
Parsed label: L_8000F398:
Parsed instruction at 8000F398: li r4 0x0
Parsed instruction at 8000F39C: bl fn_8000EFC0
Parsed label: L_8000F3A0:
Parsed instruction at 8000F3A0: bl fn_8000F4D8
Parsed instruction at 8000F3A4: cmplwi r3 0x0
Parsed instruction at 8000F3A8: bne .L_8000F398
Parsed instruction at 8000F3AC: lwz r3 lbl_8001EF88@sda21(r0)
Parsed instruction at 8000F3B0: cmplwi r3 0x0
Parsed instruction at 8000F3B4: beq .L_8000F3C4
Parsed instruction at 8000F3B8: mr r4 r30
Parsed instruction at 8000F3BC: bl fn_8000EFC0
Parsed instruction at 8000F3C0: b .L_8000F3E0
Parsed label: L_8000F3C4:
Parsed instruction at 8000F3C4: cmplwi r30 0x0
Parsed instruction at 8000F3C8: beq .L_8000F3E0
Parsed instruction at 8000F3CC: addi r12 r30 0x0
Parsed instruction at 8000F3D0: mtlr r12
Parsed instruction at 8000F3D4: li r3 0x0
Parsed instruction at 8000F3D8: li r4 0x0
Parsed instruction at 8000F3DC: blrl 
Parsed label: L_8000F3E0:
Parsed instruction at 8000F3E0: bl OSDisableInterrupts
Parsed instruction at 8000F3E4: li r4 0x0
Parsed instruction at 8000F3E8: stw r4 lbl_8001EF94@sda21(r0)
Parsed instruction at 8000F3EC: mr r30 r3
Parsed instruction at 8000F3F0: lwz r0 lbl_8001EF98@sda21(r0)
Parsed instruction at 8000F3F4: cmpwi r0 0x0
Parsed instruction at 8000F3F8: beq .L_8000F404
Parsed instruction at 8000F3FC: stw r4 lbl_8001EF98@sda21(r0)
Parsed instruction at 8000F400: bl fn_8000E240
Parsed label: L_8000F404:
Parsed instruction at 8000F404: mr r3 r30
Parsed instruction at 8000F408: bl OSRestoreInterrupts
Parsed instruction at 8000F40C: mr r3 r31
Parsed instruction at 8000F410: bl OSRestoreInterrupts
Parsed label: L_8000F414:
Parsed instruction at 8000F414: mr r3 r29
Parsed instruction at 8000F418: bl OSRestoreInterrupts
Parsed instruction at 8000F41C: lwz r0 0x24(r1)
Parsed instruction at 8000F420: lwz r31 0x1c(r1)
Parsed instruction at 8000F424: lwz r30 0x18(r1)
Parsed instruction at 8000F428: lwz r29 0x14(r1)
Parsed instruction at 8000F42C: addi r1 r1 0x20
Parsed instruction at 8000F430: mtlr r0
Parsed instruction at 8000F434: blr 
End of function: fn_8000F31C, 80 instructions
Parsed function: fn_8000F438 at 0x8000F438
Parsed instruction at 8000F438: lis r3 lbl_8001CA78@ha
Parsed instruction at 8000F43C: addi r3 r3 lbl_8001CA78@l
Parsed instruction at 8000F440: stw r3 0x0(r3)
Parsed instruction at 8000F444: addi r5 r3 0x8
Parsed instruction at 8000F448: addi r4 r3 0x10
Parsed instruction at 8000F44C: stw r3 0x4(r3)
Parsed instruction at 8000F450: addi r3 r3 0x18
Parsed instruction at 8000F454: stw r5 0x0(r5)
Parsed instruction at 8000F458: stw r5 0x4(r5)
Parsed instruction at 8000F45C: stw r4 0x0(r4)
Parsed instruction at 8000F460: stw r4 0x4(r4)
Parsed instruction at 8000F464: stw r3 0x0(r3)
Parsed instruction at 8000F468: stw r3 0x4(r3)
Parsed instruction at 8000F46C: blr 
End of function: fn_8000F438, 14 instructions
Parsed function: fn_8000F470 at 0x8000F470
Parsed instruction at 8000F470: mflr r0
Parsed instruction at 8000F474: stw r0 0x4(r1)
Parsed instruction at 8000F478: stwu r1 -0x18(r1)
Parsed instruction at 8000F47C: stw r31 0x14(r1)
Parsed instruction at 8000F480: addi r31 r4 0x0
Parsed instruction at 8000F484: stw r30 0x10(r1)
Parsed instruction at 8000F488: addi r30 r3 0x0
Parsed instruction at 8000F48C: bl OSDisableInterrupts
Parsed instruction at 8000F490: lis r4 lbl_8001CA78@ha
Parsed instruction at 8000F494: slwi r5 r30 3
Parsed instruction at 8000F498: addi r0 r4 lbl_8001CA78@l
Parsed instruction at 8000F49C: add r5 r0 r5
Parsed instruction at 8000F4A0: lwz r4 0x4(r5)
Parsed instruction at 8000F4A4: stw r31 0x0(r4)
Parsed instruction at 8000F4A8: lwz r0 0x4(r5)
Parsed instruction at 8000F4AC: stw r0 0x4(r31)
Parsed instruction at 8000F4B0: stw r5 0x0(r31)
Parsed instruction at 8000F4B4: stw r31 0x4(r5)
Parsed instruction at 8000F4B8: bl OSRestoreInterrupts
Parsed instruction at 8000F4BC: lwz r0 0x1c(r1)
Parsed instruction at 8000F4C0: li r3 0x1
Parsed instruction at 8000F4C4: lwz r31 0x14(r1)
Parsed instruction at 8000F4C8: lwz r30 0x10(r1)
Parsed instruction at 8000F4CC: addi r1 r1 0x18
Parsed instruction at 8000F4D0: mtlr r0
Parsed instruction at 8000F4D4: blr 
End of function: fn_8000F470, 26 instructions
Parsed function: fn_8000F4D8 at 0x8000F4D8
Parsed instruction at 8000F4D8: mflr r0
Parsed instruction at 8000F4DC: stw r0 0x4(r1)
Parsed instruction at 8000F4E0: stwu r1 -0x10(r1)
Parsed instruction at 8000F4E4: stw r31 0xc(r1)
Parsed instruction at 8000F4E8: bl OSDisableInterrupts
Parsed instruction at 8000F4EC: li r0 0x4
Parsed instruction at 8000F4F0: lis r4 lbl_8001CA78@ha
Parsed instruction at 8000F4F4: mtctr r0
Parsed instruction at 8000F4F8: addi r4 r4 lbl_8001CA78@l
Parsed instruction at 8000F4FC: li r31 0x0
Parsed label: L_8000F500:
Parsed instruction at 8000F500: lwz r0 0x0(r4)
Parsed instruction at 8000F504: cmplw r0 r4
Parsed instruction at 8000F508: beq .L_8000F550
Parsed instruction at 8000F50C: bl OSRestoreInterrupts
Parsed instruction at 8000F510: bl OSDisableInterrupts
Parsed instruction at 8000F514: lis r4 lbl_8001CA78@ha
Parsed instruction at 8000F518: slwi r5 r31 3
Parsed instruction at 8000F51C: addi r0 r4 lbl_8001CA78@l
Parsed instruction at 8000F520: add r5 r0 r5
Parsed instruction at 8000F524: lwz r31 0x0(r5)
Parsed instruction at 8000F528: lwz r0 0x0(r31)
Parsed instruction at 8000F52C: stw r0 0x0(r5)
Parsed instruction at 8000F530: lwz r4 0x0(r31)
Parsed instruction at 8000F534: stw r5 0x4(r4)
Parsed instruction at 8000F538: bl OSRestoreInterrupts
Parsed instruction at 8000F53C: li r0 0x0
Parsed instruction at 8000F540: stw r0 0x0(r31)
Parsed instruction at 8000F544: mr r3 r31
Parsed instruction at 8000F548: stw r0 0x4(r31)
Parsed instruction at 8000F54C: b .L_8000F564
Parsed label: L_8000F550:
Parsed instruction at 8000F550: addi r4 r4 0x8
Parsed instruction at 8000F554: addi r31 r31 0x1
Parsed instruction at 8000F558: bdnz .L_8000F500
Parsed instruction at 8000F55C: bl OSRestoreInterrupts
Parsed instruction at 8000F560: li r3 0x0
Parsed label: L_8000F564:
Parsed instruction at 8000F564: lwz r0 0x14(r1)
Parsed instruction at 8000F568: lwz r31 0xc(r1)
Parsed instruction at 8000F56C: addi r1 r1 0x10
Parsed instruction at 8000F570: mtlr r0
Parsed instruction at 8000F574: blr 
End of function: fn_8000F4D8, 43 instructions
Parsed function: fn_8000F578 at 0x8000F578
Parsed instruction at 8000F578: mflr r0
Parsed instruction at 8000F57C: stw r0 0x4(r1)
Parsed instruction at 8000F580: stwu r1 -0x8(r1)
Parsed instruction at 8000F584: bl OSDisableInterrupts
Parsed instruction at 8000F588: li r0 0x4
Parsed instruction at 8000F58C: lis r4 lbl_8001CA78@ha
Parsed instruction at 8000F590: mtctr r0
Parsed instruction at 8000F594: addi r4 r4 lbl_8001CA78@l
Parsed label: L_8000F598:
Parsed instruction at 8000F598: lwz r0 0x0(r4)
Parsed instruction at 8000F59C: cmplw r0 r4
Parsed instruction at 8000F5A0: beq .L_8000F5B0
Parsed instruction at 8000F5A4: bl OSRestoreInterrupts
Parsed instruction at 8000F5A8: li r3 0x1
Parsed instruction at 8000F5AC: b .L_8000F5C0
Parsed label: L_8000F5B0:
Parsed instruction at 8000F5B0: addi r4 r4 0x8
Parsed instruction at 8000F5B4: bdnz .L_8000F598
Parsed instruction at 8000F5B8: bl OSRestoreInterrupts
Parsed instruction at 8000F5BC: li r3 0x0
Parsed label: L_8000F5C0:
Parsed instruction at 8000F5C0: lwz r0 0xc(r1)
Parsed instruction at 8000F5C4: addi r1 r1 0x8
Parsed instruction at 8000F5C8: mtlr r0
Parsed instruction at 8000F5CC: blr 
End of function: fn_8000F578, 25 instructions
Parsed function: fn_8000F5D0 at 0x8000F5D0
Parsed instruction at 8000F5D0: mflr r0
Parsed instruction at 8000F5D4: stw r0 0x4(r1)
Parsed instruction at 8000F5D8: stwu r1 -0x18(r1)
Parsed instruction at 8000F5DC: stw r31 0x14(r1)
Parsed instruction at 8000F5E0: mr r31 r3
Parsed instruction at 8000F5E4: bl OSDisableInterrupts
Parsed instruction at 8000F5E8: lwz r4 0x4(r31)
Parsed instruction at 8000F5EC: lwz r5 0x0(r31)
Parsed instruction at 8000F5F0: cmplwi r4 0x0
Parsed instruction at 8000F5F4: beq .L_8000F600
Parsed instruction at 8000F5F8: cmplwi r5 0x0
Parsed instruction at 8000F5FC: bne .L_8000F60C
Parsed label: L_8000F600:
Parsed instruction at 8000F600: bl OSRestoreInterrupts
Parsed instruction at 8000F604: li r3 0x0
Parsed instruction at 8000F608: b .L_8000F61C
Parsed label: L_8000F60C:
Parsed instruction at 8000F60C: stw r5 0x0(r4)
Parsed instruction at 8000F610: stw r4 0x4(r5)
Parsed instruction at 8000F614: bl OSRestoreInterrupts
Parsed instruction at 8000F618: li r3 0x1
Parsed label: L_8000F61C:
Parsed instruction at 8000F61C: lwz r0 0x1c(r1)
Parsed instruction at 8000F620: lwz r31 0x14(r1)
Parsed instruction at 8000F624: addi r1 r1 0x18
Parsed instruction at 8000F628: mtlr r0
Parsed instruction at 8000F62C: blr 
End of function: fn_8000F5D0, 27 instructions
Parsed function: fn_8000F630 at 0x8000F630
Parsed instruction at 8000F630: li r0 0x2
Parsed instruction at 8000F634: lis r4 lbl_8001B320@ha
Parsed instruction at 8000F638: mtctr r0
Parsed instruction at 8000F63C: addi r4 r4 lbl_8001B320@l
Parsed instruction at 8000F640: li r5 0x0
Parsed label: L_8000F644:
Parsed instruction at 8000F644: lwz r0 0x0(r4)
Parsed instruction at 8000F648: cmplw r3 r0
Parsed instruction at 8000F64C: bne .L_8000F658
Parsed instruction at 8000F650: clrlwi r3 r5 24
Parsed instruction at 8000F654: blr 
Parsed label: L_8000F658:
Parsed instruction at 8000F658: lwzu r0 0x4(r4)
Parsed instruction at 8000F65C: addi r5 r5 0x1
Parsed instruction at 8000F660: cmplw r3 r0
Parsed instruction at 8000F664: bne .L_8000F670
Parsed instruction at 8000F668: clrlwi r3 r5 24
Parsed instruction at 8000F66C: blr 
Parsed label: L_8000F670:
Parsed instruction at 8000F670: lwzu r0 0x4(r4)
Parsed instruction at 8000F674: addi r5 r5 0x1
Parsed instruction at 8000F678: cmplw r3 r0
Parsed instruction at 8000F67C: bne .L_8000F688
Parsed instruction at 8000F680: clrlwi r3 r5 24
Parsed instruction at 8000F684: blr 
Parsed label: L_8000F688:
Parsed instruction at 8000F688: lwzu r0 0x4(r4)
Parsed instruction at 8000F68C: addi r5 r5 0x1
Parsed instruction at 8000F690: cmplw r3 r0
Parsed instruction at 8000F694: bne .L_8000F6A0
Parsed instruction at 8000F698: clrlwi r3 r5 24
Parsed instruction at 8000F69C: blr 
Parsed label: L_8000F6A0:
Parsed instruction at 8000F6A0: lwzu r0 0x4(r4)
Parsed instruction at 8000F6A4: addi r5 r5 0x1
Parsed instruction at 8000F6A8: cmplw r3 r0
Parsed instruction at 8000F6AC: bne .L_8000F6B8
Parsed instruction at 8000F6B0: clrlwi r3 r5 24
Parsed instruction at 8000F6B4: blr 
Parsed label: L_8000F6B8:
Parsed instruction at 8000F6B8: lwzu r0 0x4(r4)
Parsed instruction at 8000F6BC: addi r5 r5 0x1
Parsed instruction at 8000F6C0: cmplw r3 r0
Parsed instruction at 8000F6C4: bne .L_8000F6D0
Parsed instruction at 8000F6C8: clrlwi r3 r5 24
Parsed instruction at 8000F6CC: blr 
Parsed label: L_8000F6D0:
Parsed instruction at 8000F6D0: lwzu r0 0x4(r4)
Parsed instruction at 8000F6D4: addi r5 r5 0x1
Parsed instruction at 8000F6D8: cmplw r3 r0
Parsed instruction at 8000F6DC: bne .L_8000F6E8
Parsed instruction at 8000F6E0: clrlwi r3 r5 24
Parsed instruction at 8000F6E4: blr 
Parsed label: L_8000F6E8:
Parsed instruction at 8000F6E8: lwzu r0 0x4(r4)
Parsed instruction at 8000F6EC: addi r5 r5 0x1
Parsed instruction at 8000F6F0: cmplw r3 r0
Parsed instruction at 8000F6F4: bne .L_8000F700
Parsed instruction at 8000F6F8: clrlwi r3 r5 24
Parsed instruction at 8000F6FC: blr 
Parsed label: L_8000F700:
Parsed instruction at 8000F700: lwzu r0 0x4(r4)
Parsed instruction at 8000F704: addi r5 r5 0x1
Parsed instruction at 8000F708: cmplw r3 r0
Parsed instruction at 8000F70C: bne .L_8000F718
Parsed instruction at 8000F710: clrlwi r3 r5 24
Parsed instruction at 8000F714: blr 
Parsed label: L_8000F718:
Parsed instruction at 8000F718: addi r4 r4 0x4
Parsed instruction at 8000F71C: addi r5 r5 0x1
Parsed instruction at 8000F720: bdnz .L_8000F644
Parsed instruction at 8000F724: lis r4 0x10
Parsed instruction at 8000F728: cmplw r3 r4
Parsed instruction at 8000F72C: blt .L_8000F744
Parsed instruction at 8000F730: addi r0 r4 0x8
Parsed instruction at 8000F734: cmplw r3 r0
Parsed instruction at 8000F738: bgt .L_8000F744
Parsed instruction at 8000F73C: li r3 0x11
Parsed instruction at 8000F740: blr 
Parsed label: L_8000F744:
Parsed instruction at 8000F744: li r3 0x1d
Parsed instruction at 8000F748: blr 
End of function: fn_8000F630, 82 instructions
Parsed function: fn_8000F74C at 0x8000F74C
Parsed instruction at 8000F74C: mflr r0
Parsed instruction at 8000F750: stw r0 0x4(r1)
Parsed instruction at 8000F754: subis r0 r3 0x123
Parsed instruction at 8000F758: cmplwi r0 0x4567
Parsed instruction at 8000F75C: stwu r1 -0x18(r1)
Parsed instruction at 8000F760: stw r31 0x14(r1)
Parsed instruction at 8000F764: bne .L_8000F770
Parsed instruction at 8000F768: li r31 0xff
Parsed instruction at 8000F76C: b .L_8000F7A4
Parsed label: L_8000F770:
Parsed instruction at 8000F770: cmplwi r0 0x4568
Parsed instruction at 8000F774: bne .L_8000F780
Parsed instruction at 8000F778: li r31 0xfe
Parsed instruction at 8000F77C: b .L_8000F7A4
Parsed label: L_8000F780:
Parsed instruction at 8000F780: srwi r31 r3 24
Parsed instruction at 8000F784: clrlwi r3 r3 8
Parsed instruction at 8000F788: bl fn_8000F630
Parsed instruction at 8000F78C: cmplwi r31 0x6
Parsed instruction at 8000F790: blt .L_8000F798
Parsed instruction at 8000F794: li r31 0x6
Parsed label: L_8000F798:
Parsed instruction at 8000F798: mulli r0 r31 0x1e
Parsed instruction at 8000F79C: clrlwi r3 r3 24
Parsed instruction at 8000F7A0: add r31 r3 r0
Parsed label: L_8000F7A4:
Parsed instruction at 8000F7A4: bl fn_80008D18
Parsed instruction at 8000F7A8: stb r31 0x24(r3)
Parsed instruction at 8000F7AC: li r3 0x1
Parsed instruction at 8000F7B0: bl fn_800090A0
Parsed instruction at 8000F7B4: lwz r0 0x1c(r1)
Parsed instruction at 8000F7B8: lwz r31 0x14(r1)
Parsed instruction at 8000F7BC: addi r1 r1 0x18
Parsed instruction at 8000F7C0: mtlr r0
Parsed instruction at 8000F7C4: blr 
End of function: fn_8000F74C, 35 instructions
Parsed function: fn_8000F7C8 at 0x8000F7C8
Parsed instruction at 8000F7C8: mflr r0
Parsed instruction at 8000F7CC: cmpwi r3 0x0
Parsed instruction at 8000F7D0: stw r0 0x4(r1)
Parsed instruction at 8000F7D4: stwu r1 -0x18(r1)
Parsed instruction at 8000F7D8: stw r31 0x14(r1)
Parsed instruction at 8000F7DC: addi r31 r4 0x0
Parsed instruction at 8000F7E0: ble .L_8000F85C
Parsed instruction at 8000F7E4: lwz r0 lbl_8001EFD0@sda21(r0)
Parsed instruction at 8000F7E8: cmpwi r0 0x1
Parsed instruction at 8000F7EC: beq .L_8000F828
Parsed instruction at 8000F7F0: bge .L_8000F88C
Parsed instruction at 8000F7F4: cmpwi r0 0x0
Parsed instruction at 8000F7F8: bge .L_8000F800
Parsed instruction at 8000F7FC: b .L_8000F88C
Parsed label: L_8000F800:
Parsed instruction at 8000F800: li r0 0x1
Parsed instruction at 8000F804: lwz r4 lbl_8001EFD4@sda21(r0)
Parsed instruction at 8000F808: lis r3 fn_8000F7C8@ha
Parsed instruction at 8000F80C: stw r0 lbl_8001EFD0@sda21(r0)
Parsed instruction at 8000F810: addi r7 r3 fn_8000F7C8@l
Parsed instruction at 8000F814: addi r3 r31 0x0
Parsed instruction at 8000F818: li r5 0x20
Parsed instruction at 8000F81C: li r6 0x420
Parsed instruction at 8000F820: bl fn_8000ED1C
Parsed instruction at 8000F824: b .L_8000F88C
Parsed label: L_8000F828:
Parsed instruction at 8000F828: li r0 0x2
Parsed instruction at 8000F82C: lwz r6 lbl_8001EFD4@sda21(r0)
Parsed instruction at 8000F830: stw r0 lbl_8001EFD0@sda21(r0)
Parsed instruction at 8000F834: lis r3 fn_8000F7C8@ha
Parsed instruction at 8000F838: addi r7 r3 fn_8000F7C8@l
Parsed instruction at 8000F83C: lwz r5 0x8(r6)
Parsed instruction at 8000F840: mr r3 r31
Parsed instruction at 8000F844: lwz r4 0x10(r6)
Parsed instruction at 8000F848: addi r0 r5 0x1f
Parsed instruction at 8000F84C: lwz r6 0x4(r6)
Parsed instruction at 8000F850: clrrwi r5 r0 5
Parsed instruction at 8000F854: bl fn_8000ED1C
Parsed instruction at 8000F858: b .L_8000F88C
Parsed label: L_8000F85C:
Parsed instruction at 8000F85C: cmpwi r3 -0x1
Parsed instruction at 8000F860: beq .L_8000F88C
Parsed instruction at 8000F864: cmpwi r3 -0x4
Parsed instruction at 8000F868: bne .L_8000F88C
Parsed instruction at 8000F86C: li r0 0x0
Parsed instruction at 8000F870: stw r0 lbl_8001EFD0@sda21(r0)
Parsed instruction at 8000F874: bl fn_8000EEC0
Parsed instruction at 8000F878: lis r3 fn_8000F7C8@ha
Parsed instruction at 8000F87C: lwz r4 lbl_8001EFD8@sda21(r0)
Parsed instruction at 8000F880: addi r5 r3 fn_8000F7C8@l
Parsed instruction at 8000F884: addi r3 r31 0x0
Parsed instruction at 8000F888: bl fn_8000EDEC
Parsed label: L_8000F88C:
Parsed instruction at 8000F88C: lwz r0 0x1c(r1)
Parsed instruction at 8000F890: lwz r31 0x14(r1)
Parsed instruction at 8000F894: addi r1 r1 0x18
Parsed instruction at 8000F898: mtlr r0
Parsed instruction at 8000F89C: blr 
End of function: fn_8000F7C8, 58 instructions
Parsed function: fn_8000F8A0 at 0x8000F8A0
Parsed instruction at 8000F8A0: mflr r0
Parsed instruction at 8000F8A4: lis r3 lbl_8001B368@ha
Parsed instruction at 8000F8A8: stw r0 0x4(r1)
Parsed instruction at 8000F8AC: stwu r1 -0x60(r1)
Parsed instruction at 8000F8B0: stw r31 0x5c(r1)
Parsed instruction at 8000F8B4: addi r31 r3 lbl_8001B368@l
Parsed instruction at 8000F8B8: stw r30 0x58(r1)
Parsed instruction at 8000F8BC: stw r29 0x54(r1)
Parsed instruction at 8000F8C0: bl OSGetArenaHi
Parsed instruction at 8000F8C4: lis r3 lbl_8001CA98@ha
Parsed instruction at 8000F8C8: addi r3 r3 lbl_8001CA98@l
Parsed instruction at 8000F8CC: addi r4 r1 0x2b
Parsed instruction at 8000F8D0: addi r0 r3 0x1f
Parsed instruction at 8000F8D4: clrrwi r3 r4 5
Parsed instruction at 8000F8D8: clrrwi r0 r0 5
Parsed instruction at 8000F8DC: stw r3 lbl_8001EFD8@sda21(r0)
Parsed instruction at 8000F8E0: stw r0 lbl_8001EFD4@sda21(r0)
Parsed instruction at 8000F8E4: bl fn_8000EEC0
Parsed instruction at 8000F8E8: lis r3 lbl_8001CAD8@ha
Parsed instruction at 8000F8EC: lwz r4 lbl_8001EFD8@sda21(r0)
Parsed instruction at 8000F8F0: lis r5 fn_8000F7C8@ha
Parsed instruction at 8000F8F4: addi r3 r3 lbl_8001CAD8@l
Parsed instruction at 8000F8F8: addi r5 r5 fn_8000F7C8@l
Parsed instruction at 8000F8FC: bl fn_8000EDEC
Parsed label: L_8000F900:
Parsed instruction at 8000F900: bl fn_8000EF04
Parsed instruction at 8000F904: cmpwi r3 0x0
Parsed instruction at 8000F908: bne .L_8000F900
Parsed instruction at 8000F90C: lwz r3 lbl_8001EFD4@sda21(r0)
Parsed instruction at 8000F910: lis r29 0x8000
Parsed instruction at 8000F914: lis r30 0x8000
Parsed instruction at 8000F918: lwz r0 0x10(r3)
Parsed instruction at 8000F91C: addi r3 r29 0x0
Parsed instruction at 8000F920: li r5 0x20
Parsed instruction at 8000F924: stw r0 0x38(r30)
Parsed instruction at 8000F928: lwz r4 lbl_8001EFD4@sda21(r0)
Parsed instruction at 8000F92C: lwz r0 0xc(r4)
Parsed instruction at 8000F930: stw r0 0x3c(r30)
Parsed instruction at 8000F934: lwz r4 lbl_8001EFD8@sda21(r0)
Parsed instruction at 8000F938: bl memcpy
Parsed instruction at 8000F93C: li r3 lbl_8001EE28@sda21
Parsed instruction at 8000F940: crclr cr1eq
Parsed instruction at 8000F944: bl OSReport
Parsed instruction at 8000F948: lbz r4 0x0(r29)
Parsed instruction at 8000F94C: mr r3 r31
Parsed instruction at 8000F950: lbz r5 0x1(r29)
Parsed instruction at 8000F954: crclr cr1eq
Parsed instruction at 8000F958: lbz r6 0x2(r29)
Parsed instruction at 8000F95C: lbz r7 0x3(r29)
Parsed instruction at 8000F960: extsb r4 r4
Parsed instruction at 8000F964: extsb r5 r5
Parsed instruction at 8000F968: extsb r6 r6
Parsed instruction at 8000F96C: extsb r7 r7
Parsed instruction at 8000F970: bl OSReport
Parsed instruction at 8000F974: lbz r4 0x4(r29)
Parsed instruction at 8000F978: addi r3 r31 0x1c
Parsed instruction at 8000F97C: lbz r5 0x5(r29)
Parsed instruction at 8000F980: crclr cr1eq
Parsed instruction at 8000F984: extsb r4 r4
Parsed instruction at 8000F988: extsb r5 r5
Parsed instruction at 8000F98C: bl OSReport
Parsed instruction at 8000F990: lbz r4 0x6(r29)
Parsed instruction at 8000F994: addi r3 r31 0x34
Parsed instruction at 8000F998: crclr cr1eq
Parsed instruction at 8000F99C: bl OSReport
Parsed instruction at 8000F9A0: lbz r4 0x7(r29)
Parsed instruction at 8000F9A4: addi r3 r31 0x48
Parsed instruction at 8000F9A8: crclr cr1eq
Parsed instruction at 8000F9AC: bl OSReport
Parsed instruction at 8000F9B0: lbz r0 0x8(r30)
Parsed instruction at 8000F9B4: cmplwi r0 0x0
Parsed instruction at 8000F9B8: bne .L_8000F9C4
Parsed instruction at 8000F9BC: li r4 lbl_8001EE2C@sda21
Parsed instruction at 8000F9C0: b .L_8000F9C8
Parsed label: L_8000F9C4:
Parsed instruction at 8000F9C4: li r4 lbl_8001EE30@sda21
Parsed label: L_8000F9C8:
Parsed instruction at 8000F9C8: crclr cr1eq
Parsed instruction at 8000F9CC: addi r3 r31 0x5c
Parsed instruction at 8000F9D0: bl OSReport
Parsed instruction at 8000F9D4: li r3 lbl_8001EE28@sda21
Parsed instruction at 8000F9D8: crclr cr1eq
Parsed instruction at 8000F9DC: bl OSReport
Parsed instruction at 8000F9E0: lwz r3 lbl_8001EFD4@sda21(r0)
Parsed instruction at 8000F9E4: lwz r3 0x10(r3)
Parsed instruction at 8000F9E8: bl OSSetArenaHi
Parsed instruction at 8000F9EC: lwz r0 0x64(r1)
Parsed instruction at 8000F9F0: lwz r31 0x5c(r1)
Parsed instruction at 8000F9F4: lwz r30 0x58(r1)
Parsed instruction at 8000F9F8: lwz r29 0x54(r1)
Parsed instruction at 8000F9FC: addi r1 r1 0x60
Parsed instruction at 8000FA00: mtlr r0
Parsed instruction at 8000FA04: blr 
End of function: fn_8000F8A0, 93 instructions
Parsed function: fn_8000FA08 at 0x8000FA08
Parsed instruction at 8000FA08: mflr r0
Parsed instruction at 8000FA0C: lis r3 0xcc00
Parsed instruction at 8000FA10: stw r0 0x4(r1)
Parsed instruction at 8000FA14: addi r5 r3 0x2000
Parsed instruction at 8000FA18: lis r3 lbl_8001CB08@ha
Parsed instruction at 8000FA1C: stwu r1 -0x2f8(r1)
Parsed instruction at 8000FA20: li r7 0x0
Parsed instruction at 8000FA24: stmw r27 0x2e4(r1)
Parsed instruction at 8000FA28: addi r30 r4 0x0
Parsed instruction at 8000FA2C: addi r31 r3 lbl_8001CB08@l
Parsed instruction at 8000FA30: lhzu r6 0x30(r5)
Parsed instruction at 8000FA34: rlwinm. r0 r6 0 16 16
Parsed instruction at 8000FA38: beq .L_8000FA48
Parsed instruction at 8000FA3C: rlwinm r0 r6 0 17 15
Parsed instruction at 8000FA40: sth r0 0x0(r5)
Parsed instruction at 8000FA44: ori r7 r7 0x1
Parsed label: L_8000FA48:
Parsed instruction at 8000FA48: lis r3 0xcc00
Parsed instruction at 8000FA4C: lhzu r4 0x2034(r3)
Parsed instruction at 8000FA50: rlwinm. r0 r4 0 16 16
Parsed instruction at 8000FA54: beq .L_8000FA64
Parsed instruction at 8000FA58: rlwinm r0 r4 0 17 15
Parsed instruction at 8000FA5C: sth r0 0x0(r3)
Parsed instruction at 8000FA60: ori r7 r7 0x2
Parsed label: L_8000FA64:
Parsed instruction at 8000FA64: lis r3 0xcc00
Parsed instruction at 8000FA68: lhzu r4 0x2038(r3)
Parsed instruction at 8000FA6C: rlwinm. r0 r4 0 16 16
Parsed instruction at 8000FA70: beq .L_8000FA80
Parsed instruction at 8000FA74: rlwinm r0 r4 0 17 15
Parsed instruction at 8000FA78: sth r0 0x0(r3)
Parsed instruction at 8000FA7C: ori r7 r7 0x4
Parsed label: L_8000FA80:
Parsed instruction at 8000FA80: lis r3 0xcc00
Parsed instruction at 8000FA84: lhzu r4 0x203c(r3)
Parsed instruction at 8000FA88: rlwinm. r0 r4 0 16 16
Parsed instruction at 8000FA8C: beq .L_8000FA9C
Parsed instruction at 8000FA90: rlwinm r0 r4 0 17 15
Parsed instruction at 8000FA94: sth r0 0x0(r3)
Parsed instruction at 8000FA98: ori r7 r7 0x8
Parsed label: L_8000FA9C:
Parsed instruction at 8000FA9C: rlwinm. r0 r7 0 29 29
Parsed instruction at 8000FAA0: bne .L_8000FAAC
Parsed instruction at 8000FAA4: rlwinm. r0 r7 0 28 28
Parsed instruction at 8000FAA8: beq .L_8000FAB8
Parsed label: L_8000FAAC:
Parsed instruction at 8000FAAC: mr r3 r30
Parsed instruction at 8000FAB0: bl OSSetCurrentContext
Parsed instruction at 8000FAB4: b .L_8000FC1C
Parsed label: L_8000FAB8:
Parsed instruction at 8000FAB8: lwz r4 lbl_8001EFE0@sda21(r0)
Parsed instruction at 8000FABC: addi r3 r1 0x18
Parsed instruction at 8000FAC0: addi r0 r4 0x1
Parsed instruction at 8000FAC4: stw r0 lbl_8001EFE0@sda21(r0)
Parsed instruction at 8000FAC8: bl OSClearContext
Parsed instruction at 8000FACC: addi r3 r1 0x18
Parsed instruction at 8000FAD0: bl OSSetCurrentContext
Parsed instruction at 8000FAD4: lwz r12 lbl_8001EFF0@sda21(r0)
Parsed instruction at 8000FAD8: cmplwi r12 0x0
Parsed instruction at 8000FADC: beq .L_8000FAEC
Parsed instruction at 8000FAE0: lwz r3 lbl_8001EFE0@sda21(r0)
Parsed instruction at 8000FAE4: mtlr r12
Parsed instruction at 8000FAE8: blrl 
Parsed label: L_8000FAEC:
Parsed instruction at 8000FAEC: lwz r0 lbl_8001EFE4@sda21(r0)
Parsed instruction at 8000FAF0: cmplwi r0 0x0
Parsed instruction at 8000FAF4: beq .L_8000FBE0
Parsed instruction at 8000FAF8: lwz r0 lbl_8001F010@sda21(r0)
Parsed instruction at 8000FAFC: cmplwi r0 0x1
Parsed instruction at 8000FB00: bne .L_8000FB10
Parsed instruction at 8000FB04: bl fn_80011198
Parsed instruction at 8000FB08: cmplwi r3 0x0
Parsed instruction at 8000FB0C: beq .L_8000FBC8
Parsed label: L_8000FB10:
Parsed instruction at 8000FB10: lis r3 0xcc00
Parsed instruction at 8000FB14: addi r29 r3 0x2000
Parsed instruction at 8000FB18: b .L_8000FB90
Parsed label: L_8000FB1C:
Parsed instruction at 8000FB1C: lwz r3 lbl_8001F018@sda21(r0)
Parsed instruction at 8000FB20: li r5 0x20
Parsed instruction at 8000FB24: lwz r27 lbl_8001F01C@sda21(r0)
Parsed instruction at 8000FB28: addi r4 r27 0x0
Parsed instruction at 8000FB2C: bl fn_800118EC
Parsed instruction at 8000FB30: cntlzw r4 r4
Parsed instruction at 8000FB34: cmpwi r4 0x20
Parsed instruction at 8000FB38: li r0 -0x1
Parsed instruction at 8000FB3C: and r0 r27 r0
Parsed instruction at 8000FB40: bge .L_8000FB48
Parsed instruction at 8000FB44: b .L_8000FB50
Parsed label: L_8000FB48:
Parsed instruction at 8000FB48: cntlzw r3 r0
Parsed instruction at 8000FB4C: addi r4 r3 0x20
Parsed label: L_8000FB50:
Parsed instruction at 8000FB50: slwi r6 r4 1
Parsed instruction at 8000FB54: add r3 r31 r6
Parsed instruction at 8000FB58: lhz r0 0x78(r3)
Parsed instruction at 8000FB5C: subfic r5 r4 0x3f
Parsed instruction at 8000FB60: li r3 0x0
Parsed instruction at 8000FB64: sthx r0 r29 r6
Parsed instruction at 8000FB68: li r4 0x1
Parsed instruction at 8000FB6C: bl fn_800118C8
Parsed instruction at 8000FB70: lwz r0 lbl_8001F018@sda21(r0)
Parsed instruction at 8000FB74: nor r5 r3 r3
Parsed instruction at 8000FB78: nor r4 r4 r4
Parsed instruction at 8000FB7C: lwz r3 lbl_8001F01C@sda21(r0)
Parsed instruction at 8000FB80: and r0 r0 r5
Parsed instruction at 8000FB84: and r3 r3 r4
Parsed instruction at 8000FB88: stw r3 lbl_8001F01C@sda21(r0)
Parsed instruction at 8000FB8C: stw r0 lbl_8001F018@sda21(r0)
Parsed label: L_8000FB90:
Parsed instruction at 8000FB90: lwz r0 lbl_8001F018@sda21(r0)
Parsed instruction at 8000FB94: li r4 0x0
Parsed instruction at 8000FB98: lwz r3 lbl_8001F01C@sda21(r0)
Parsed instruction at 8000FB9C: xor r0 r0 r4
Parsed instruction at 8000FBA0: xor r3 r3 r4
Parsed instruction at 8000FBA4: or. r0 r3 r0
Parsed instruction at 8000FBA8: bne .L_8000FB1C
Parsed instruction at 8000FBAC: stw r4 lbl_8001F010@sda21(r0)
Parsed instruction at 8000FBB0: li r3 0x1
Parsed instruction at 8000FBB4: lwz r0 0x144(r31)
Parsed instruction at 8000FBB8: stw r0 lbl_8001F020@sda21(r0)
Parsed instruction at 8000FBBC: lwz r0 0x118(r31)
Parsed instruction at 8000FBC0: stw r0 CurrTvMode_8001F024@sda21(r0)
Parsed instruction at 8000FBC4: b .L_8000FBCC
Parsed label: L_8000FBC8:
Parsed instruction at 8000FBC8: li r3 0x0
Parsed label: L_8000FBCC:
Parsed instruction at 8000FBCC: cmpwi r3 0x0
Parsed instruction at 8000FBD0: beq .L_8000FBE0
Parsed instruction at 8000FBD4: li r0 0x0
Parsed instruction at 8000FBD8: stw r0 lbl_8001EFE4@sda21(r0)
Parsed instruction at 8000FBDC: bl fn_8000C2E0
Parsed label: L_8000FBE0:
Parsed instruction at 8000FBE0: lwz r0 lbl_8001EFF4@sda21(r0)
Parsed instruction at 8000FBE4: cmplwi r0 0x0
Parsed instruction at 8000FBE8: beq .L_8000FC04
Parsed instruction at 8000FBEC: addi r3 r1 0x18
Parsed instruction at 8000FBF0: bl OSClearContext
Parsed instruction at 8000FBF4: lwz r12 lbl_8001EFF4@sda21(r0)
Parsed instruction at 8000FBF8: lwz r3 lbl_8001EFE0@sda21(r0)
Parsed instruction at 8000FBFC: mtlr r12
Parsed instruction at 8000FC00: blrl 
Parsed label: L_8000FC04:
Parsed instruction at 8000FC04: li r3 lbl_8001EFE8@sda21
Parsed instruction at 8000FC08: bl fn_80009B7C
Parsed instruction at 8000FC0C: addi r3 r1 0x18
Parsed instruction at 8000FC10: bl OSClearContext
Parsed instruction at 8000FC14: mr r3 r30
Parsed instruction at 8000FC18: bl OSSetCurrentContext
Parsed label: L_8000FC1C:
Parsed instruction at 8000FC1C: lmw r27 0x2e4(r1)
Parsed instruction at 8000FC20: lwz r0 0x2fc(r1)
Parsed instruction at 8000FC24: addi r1 r1 0x2f8
Parsed instruction at 8000FC28: mtlr r0
Parsed instruction at 8000FC2C: blr 
End of function: fn_8000FA08, 155 instructions
Parsed function: fn_8000FC30 at 0x8000FC30
Parsed instruction at 8000FC30: cmplwi r3 0x15
Parsed instruction at 8000FC34: lis r4 lbl_8001B3D8@ha
Parsed instruction at 8000FC38: addi r5 r4 lbl_8001B3D8@l
Parsed instruction at 8000FC3C: bgt .L_8000FCB8
Parsed instruction at 8000FC40: lis r4 jumptable_8001B53C@ha
Parsed instruction at 8000FC44: addi r4 r4 jumptable_8001B53C@l
Parsed instruction at 8000FC48: slwi r0 r3 2
Parsed instruction at 8000FC4C: lwzx r0 r4 r0
Parsed instruction at 8000FC50: mtctr r0
Parsed instruction at 8000FC54: bctr 
Parsed instruction at 8000FC58: mr r3 r5
Parsed instruction at 8000FC5C: blr 
Parsed instruction at 8000FC60: addi r3 r5 0x26
Parsed instruction at 8000FC64: blr 
Parsed instruction at 8000FC68: addi r3 r5 0x4c
Parsed instruction at 8000FC6C: blr 
Parsed instruction at 8000FC70: addi r3 r5 0x72
Parsed instruction at 8000FC74: blr 
Parsed instruction at 8000FC78: mr r3 r5
Parsed instruction at 8000FC7C: blr 
Parsed instruction at 8000FC80: addi r3 r5 0x26
Parsed instruction at 8000FC84: blr 
Parsed instruction at 8000FC88: addi r3 r5 0x98
Parsed instruction at 8000FC8C: blr 
Parsed instruction at 8000FC90: addi r3 r5 0xbe
Parsed instruction at 8000FC94: blr 
Parsed instruction at 8000FC98: addi r3 r5 0xe4
Parsed instruction at 8000FC9C: blr 
Parsed instruction at 8000FCA0: addi r3 r5 0x10a
Parsed instruction at 8000FCA4: blr 
Parsed instruction at 8000FCA8: addi r3 r5 0x4c
Parsed instruction at 8000FCAC: blr 
Parsed instruction at 8000FCB0: addi r3 r5 0x72
Parsed instruction at 8000FCB4: blr 
Parsed label: L_8000FCB8:
Parsed instruction at 8000FCB8: li r3 0x0
Parsed instruction at 8000FCBC: blr 
End of function: fn_8000FC30, 37 instructions
Parsed function: fn_8000FCC0 at 0x8000FCC0
Parsed instruction at 8000FCC0: mflr r0
Parsed instruction at 8000FCC4: stw r0 0x4(r1)
Parsed instruction at 8000FCC8: stwu r1 -0x30(r1)
Parsed instruction at 8000FCCC: stw r31 0x2c(r1)
Parsed instruction at 8000FCD0: srwi r31 r3 2
Parsed instruction at 8000FCD4: stw r30 0x28(r1)
Parsed instruction at 8000FCD8: stw r29 0x24(r1)
Parsed instruction at 8000FCDC: addi r29 r3 0x0
Parsed instruction at 8000FCE0: lis r3 0x8000
Parsed instruction at 8000FCE4: stw r31 0xcc(r3)
Parsed instruction at 8000FCE8: addi r3 r29 0x0
Parsed instruction at 8000FCEC: rlwinm r30 r29 0 30 30
Parsed instruction at 8000FCF0: bl fn_8000FC30
Parsed instruction at 8000FCF4: lis r4 0xcc00
Parsed instruction at 8000FCF8: li r0 0x2
Parsed instruction at 8000FCFC: addi r5 r4 0x2000
Parsed instruction at 8000FD00: sthu r0 0x2(r5)
Parsed instruction at 8000FD04: li r0 0x0
Parsed instruction at 8000FD08: stw r0 0x1c(r1)
Parsed instruction at 8000FD0C: lwz r0 0x1c(r1)
Parsed instruction at 8000FD10: cmplwi r0 0x3e8
Parsed instruction at 8000FD14: bge .L_8000FD34
Parsed instruction at 8000FD18: b .L_8000FD28
Parsed label: L_8000FD1C:
Parsed instruction at 8000FD1C: lwz r4 0x1c(r1)
Parsed instruction at 8000FD20: addi r0 r4 0x8
Parsed instruction at 8000FD24: stw r0 0x1c(r1)
Parsed label: L_8000FD28:
Parsed instruction at 8000FD28: lwz r0 0x1c(r1)
Parsed instruction at 8000FD2C: cmplwi r0 0x3e8
Parsed instruction at 8000FD30: blt .L_8000FD1C
Parsed label: L_8000FD34:
Parsed instruction at 8000FD34: li r0 0x0
Parsed instruction at 8000FD38: sth r0 0x0(r5)
Parsed instruction at 8000FD3C: lis r12 0xcc00
Parsed instruction at 8000FD40: li r8 0x2828
Parsed instruction at 8000FD44: lhz r6 0x1a(r3)
Parsed instruction at 8000FD48: li r7 0x1
Parsed instruction at 8000FD4C: cmpwi r29 0x2
Parsed instruction at 8000FD50: sth r6 0x2006(r12)
Parsed instruction at 8000FD54: li r6 0x1001
Parsed instruction at 8000FD58: addi r4 r12 0x2000
Parsed instruction at 8000FD5C: lbz r9 0x1d(r3)
Parsed instruction at 8000FD60: lbz r10 0x1e(r3)
Parsed instruction at 8000FD64: rlwimi r10 r9 8 16 23
Parsed instruction at 8000FD68: sth r10 0x2004(r12)
Parsed instruction at 8000FD6C: lbz r9 0x1f(r3)
Parsed instruction at 8000FD70: lbz r10 0x1c(r3)
Parsed instruction at 8000FD74: slwi r9 r9 7
Parsed instruction at 8000FD78: or r9 r10 r9
Parsed instruction at 8000FD7C: sth r9 0x200a(r12)
Parsed instruction at 8000FD80: lhz r9 0x20(r3)
Parsed instruction at 8000FD84: clrlslwi r9 r9 17 1
Parsed instruction at 8000FD88: sth r9 0x2008(r12)
Parsed instruction at 8000FD8C: lhz r9 0x2(r3)
Parsed instruction at 8000FD90: lbz r11 0x0(r3)
Parsed instruction at 8000FD94: slwi r9 r9 1
Parsed instruction at 8000FD98: lhz r10 0x4(r3)
Parsed instruction at 8000FD9C: subi r9 r9 0x2
Parsed instruction at 8000FDA0: sth r11 0x2000(r12)
Parsed instruction at 8000FDA4: add r9 r10 r9
Parsed instruction at 8000FDA8: sth r9 0x200e(r12)
Parsed instruction at 8000FDAC: lhz r9 0x8(r3)
Parsed instruction at 8000FDB0: addi r9 r9 0x2
Parsed instruction at 8000FDB4: sth r9 0x200c(r12)
Parsed instruction at 8000FDB8: lhz r9 0x2(r3)
Parsed instruction at 8000FDBC: lhz r10 0x6(r3)
Parsed instruction at 8000FDC0: slwi r9 r9 1
Parsed instruction at 8000FDC4: subi r9 r9 0x2
Parsed instruction at 8000FDC8: add r9 r10 r9
Parsed instruction at 8000FDCC: sth r9 0x2012(r12)
Parsed instruction at 8000FDD0: lhz r9 0xa(r3)
Parsed instruction at 8000FDD4: addi r9 r9 0x2
Parsed instruction at 8000FDD8: sth r9 0x2010(r12)
Parsed instruction at 8000FDDC: lhz r9 0x10(r3)
Parsed instruction at 8000FDE0: lbz r10 0xc(r3)
Parsed instruction at 8000FDE4: slwi r9 r9 5
Parsed instruction at 8000FDE8: or r9 r10 r9
Parsed instruction at 8000FDEC: sth r9 0x2016(r12)
Parsed instruction at 8000FDF0: lhz r9 0x14(r3)
Parsed instruction at 8000FDF4: lbz r10 0xe(r3)
Parsed instruction at 8000FDF8: slwi r9 r9 5
Parsed instruction at 8000FDFC: or r9 r10 r9
Parsed instruction at 8000FE00: sth r9 0x2014(r12)
Parsed instruction at 8000FE04: lhz r9 0x12(r3)
Parsed instruction at 8000FE08: lbz r10 0xd(r3)
Parsed instruction at 8000FE0C: slwi r9 r9 5
Parsed instruction at 8000FE10: or r9 r10 r9
Parsed instruction at 8000FE14: sth r9 0x201a(r12)
Parsed instruction at 8000FE18: lhz r9 0x16(r3)
Parsed instruction at 8000FE1C: lbz r10 0xf(r3)
Parsed instruction at 8000FE20: slwi r9 r9 5
Parsed instruction at 8000FE24: or r9 r10 r9
Parsed instruction at 8000FE28: sth r9 0x2018(r12)
Parsed instruction at 8000FE2C: sth r8 0x2048(r12)
Parsed instruction at 8000FE30: sth r7 0x2036(r12)
Parsed instruction at 8000FE34: sth r6 0x2034(r12)
Parsed instruction at 8000FE38: lhz r6 0x18(r3)
Parsed instruction at 8000FE3C: lhz r3 0x1a(r3)
Parsed instruction at 8000FE40: srawi r6 r6 1
Parsed instruction at 8000FE44: addi r3 r3 0x1
Parsed instruction at 8000FE48: addze r6 r6
Parsed instruction at 8000FE4C: sth r3 0x2032(r12)
Parsed instruction at 8000FE50: addi r6 r6 0x1
Parsed instruction at 8000FE54: ori r3 r6 0x1000
Parsed instruction at 8000FE58: sth r3 0x2030(r12)
Parsed instruction at 8000FE5C: beq .L_8000FE84
Parsed instruction at 8000FE60: cmpwi r29 0x3
Parsed instruction at 8000FE64: beq .L_8000FE84
Parsed instruction at 8000FE68: slwi r3 r30 2
Parsed instruction at 8000FE6C: ori r6 r3 0x1
Parsed instruction at 8000FE70: slwi r3 r31 8
Parsed instruction at 8000FE74: or r3 r6 r3
Parsed instruction at 8000FE78: sth r3 0x0(r5)
Parsed instruction at 8000FE7C: sth r0 0x6c(r4)
Parsed instruction at 8000FE80: b .L_8000FE9C
Parsed label: L_8000FE84:
Parsed instruction at 8000FE84: slwi r0 r31 8
Parsed instruction at 8000FE88: ori r0 r0 0x5
Parsed instruction at 8000FE8C: sth r0 0x0(r5)
Parsed instruction at 8000FE90: lis r3 0xcc00
Parsed instruction at 8000FE94: li r0 0x1
Parsed instruction at 8000FE98: sth r0 0x206c(r3)
Parsed label: L_8000FE9C:
Parsed instruction at 8000FE9C: lwz r0 0x34(r1)
Parsed instruction at 8000FEA0: lwz r31 0x2c(r1)
Parsed instruction at 8000FEA4: lwz r30 0x28(r1)
Parsed instruction at 8000FEA8: lwz r29 0x24(r1)
Parsed instruction at 8000FEAC: addi r1 r1 0x30
Parsed instruction at 8000FEB0: mtlr r0
Parsed instruction at 8000FEB4: blr 
End of function: fn_8000FCC0, 131 instructions
Parsed function: fn_8000FEB8 at 0x8000FEB8
Parsed instruction at 8000FEB8: mflr r0
Parsed instruction at 8000FEBC: lis r3 0xcc00
Parsed instruction at 8000FEC0: stw r0 0x4(r1)
Parsed instruction at 8000FEC4: li r0 0x1
Parsed instruction at 8000FEC8: lis r4 lbl_8001B3D8@ha
Parsed instruction at 8000FECC: stwu r1 -0x18(r1)
Parsed instruction at 8000FED0: stw r31 0x14(r1)
Parsed instruction at 8000FED4: stw r30 0x10(r1)
Parsed instruction at 8000FED8: addi r30 r4 lbl_8001B3D8@l
Parsed instruction at 8000FEDC: stw r29 0xc(r1)
Parsed instruction at 8000FEE0: stw r28 0x8(r1)
Parsed instruction at 8000FEE4: addi r28 r3 0x2000
Parsed instruction at 8000FEE8: lis r3 lbl_8001CB08@ha
Parsed instruction at 8000FEEC: stw r0 lbl_8001EFF8@sda21(r0)
Parsed instruction at 8000FEF0: addi r31 r3 lbl_8001CB08@l
Parsed instruction at 8000FEF4: lhzu r0 0x2(r28)
Parsed instruction at 8000FEF8: clrlwi. r0 r0 31
Parsed instruction at 8000FEFC: bne .L_8000FF08
Parsed instruction at 8000FF00: li r3 0x0
Parsed instruction at 8000FF04: bl fn_8000FCC0
Parsed label: L_8000FF08:
Parsed instruction at 8000FF08: li r29 0x0
Parsed instruction at 8000FF0C: stw r29 lbl_8001EFE0@sda21(r0)
Parsed instruction at 8000FF10: lis r3 0xcc00
Parsed instruction at 8000FF14: addi r3 r3 0x2000
Parsed instruction at 8000FF18: stw r29 lbl_8001F00C@sda21(r0)
Parsed instruction at 8000FF1C: li r0 0x280
Parsed instruction at 8000FF20: stw r29 lbl_8001F008@sda21(r0)
Parsed instruction at 8000FF24: stw r29 lbl_8001F01C@sda21(r0)
Parsed instruction at 8000FF28: stw r29 lbl_8001F018@sda21(r0)
Parsed instruction at 8000FF2C: stw r29 lbl_8001F000@sda21(r0)
Parsed instruction at 8000FF30: stw r29 lbl_8001F010@sda21(r0)
Parsed instruction at 8000FF34: stw r29 lbl_8001EFE4@sda21(r0)
Parsed instruction at 8000FF38: lhz r5 0x132(r30)
Parsed instruction at 8000FF3C: lhz r6 0x130(r30)
Parsed instruction at 8000FF40: clrlslwi r5 r5 26 10
Parsed instruction at 8000FF44: or r5 r6 r5
Parsed instruction at 8000FF48: sth r5 0x4e(r3)
Parsed instruction at 8000FF4C: lhz r6 0x132(r30)
Parsed instruction at 8000FF50: lhz r5 0x134(r30)
Parsed instruction at 8000FF54: srawi r6 r6 6
Parsed instruction at 8000FF58: slwi r5 r5 4
Parsed instruction at 8000FF5C: or r5 r6 r5
Parsed instruction at 8000FF60: sth r5 0x4c(r3)
Parsed instruction at 8000FF64: lhz r5 0x138(r30)
Parsed instruction at 8000FF68: lhz r6 0x136(r30)
Parsed instruction at 8000FF6C: clrlslwi r5 r5 26 10
Parsed instruction at 8000FF70: or r5 r6 r5
Parsed instruction at 8000FF74: sth r5 0x52(r3)
Parsed instruction at 8000FF78: lhz r6 0x138(r30)
Parsed instruction at 8000FF7C: lhz r5 0x13a(r30)
Parsed instruction at 8000FF80: srawi r6 r6 6
Parsed instruction at 8000FF84: slwi r5 r5 4
Parsed instruction at 8000FF88: or r5 r6 r5
Parsed instruction at 8000FF8C: sth r5 0x50(r3)
Parsed instruction at 8000FF90: lhz r5 0x13e(r30)
Parsed instruction at 8000FF94: lhz r6 0x13c(r30)
Parsed instruction at 8000FF98: clrlslwi r5 r5 26 10
Parsed instruction at 8000FF9C: or r5 r6 r5
Parsed instruction at 8000FFA0: sth r5 0x56(r3)
Parsed instruction at 8000FFA4: lhz r5 0x13e(r30)
Parsed instruction at 8000FFA8: lhz r4 0x140(r30)
Parsed instruction at 8000FFAC: srawi r5 r5 6
Parsed instruction at 8000FFB0: slwi r4 r4 4
Parsed instruction at 8000FFB4: or r4 r5 r4
Parsed instruction at 8000FFB8: sth r4 0x54(r3)
Parsed instruction at 8000FFBC: lhz r4 0x144(r30)
Parsed instruction at 8000FFC0: lhz r5 0x142(r30)
Parsed instruction at 8000FFC4: slwi r4 r4 8
Parsed instruction at 8000FFC8: or r4 r5 r4
Parsed instruction at 8000FFCC: sth r4 0x5a(r3)
Parsed instruction at 8000FFD0: lhz r4 0x148(r30)
Parsed instruction at 8000FFD4: lhz r5 0x146(r30)
Parsed instruction at 8000FFD8: slwi r4 r4 8
Parsed instruction at 8000FFDC: or r4 r5 r4
Parsed instruction at 8000FFE0: sth r4 0x58(r3)
Parsed instruction at 8000FFE4: lhz r4 0x14c(r30)
Parsed instruction at 8000FFE8: lhz r5 0x14a(r30)
Parsed instruction at 8000FFEC: slwi r4 r4 8
Parsed instruction at 8000FFF0: or r4 r5 r4
Parsed instruction at 8000FFF4: sth r4 0x5e(r3)
Parsed instruction at 8000FFF8: lhz r4 0x150(r30)
Parsed instruction at 8000FFFC: lhz r5 0x14e(r30)
Parsed instruction at 80010000: slwi r4 r4 8
Parsed instruction at 80010004: or r4 r5 r4
Parsed instruction at 80010008: sth r4 0x5c(r3)
Parsed instruction at 8001000C: lhz r4 0x154(r30)
Parsed instruction at 80010010: lhz r5 0x152(r30)
Parsed instruction at 80010014: slwi r4 r4 8
Parsed instruction at 80010018: or r4 r5 r4
Parsed instruction at 8001001C: sth r4 0x62(r3)
Parsed instruction at 80010020: lhz r4 0x158(r30)
Parsed instruction at 80010024: lhz r5 0x156(r30)
Parsed instruction at 80010028: slwi r4 r4 8
Parsed instruction at 8001002C: or r4 r5 r4
Parsed instruction at 80010030: sth r4 0x60(r3)
Parsed instruction at 80010034: lhz r4 0x15c(r30)
Parsed instruction at 80010038: lhz r5 0x15a(r30)
Parsed instruction at 8001003C: slwi r4 r4 8
Parsed instruction at 80010040: or r4 r5 r4
Parsed instruction at 80010044: sth r4 0x66(r3)
Parsed instruction at 80010048: lhz r4 0x160(r30)
Parsed instruction at 8001004C: lhz r5 0x15e(r30)
Parsed instruction at 80010050: slwi r4 r4 8
Parsed instruction at 80010054: or r4 r5 r4
Parsed instruction at 80010058: sth r4 0x64(r3)
Parsed instruction at 8001005C: sth r0 0x70(r3)
Parsed instruction at 80010060: bl __OSLockSram
Parsed instruction at 80010064: lbz r0 0x10(r3)
Parsed instruction at 80010068: li r3 0x0
Parsed instruction at 8001006C: extsb r0 r0
Parsed instruction at 80010070: sth r29 lbl_8001EFFE@sda21(r0)
Parsed instruction at 80010074: sth r0 lbl_8001EFFC@sda21(r0)
Parsed instruction at 80010078: bl __OSUnlockSram
Parsed instruction at 8001007C: lhz r30 0x0(r28)
Parsed instruction at 80010080: addi r3 r31 0x114
Parsed instruction at 80010084: addi r28 r31 0x118
Parsed instruction at 80010088: extrwi r0 r30 1 29
Parsed instruction at 8001008C: stw r0 0x114(r31)
Parsed instruction at 80010090: extrwi r0 r30 2 22
Parsed instruction at 80010094: stw r0 0x118(r31)
Parsed instruction at 80010098: lwz r0 0x118(r31)
Parsed instruction at 8001009C: cmplwi r0 0x3
Parsed instruction at 800100A0: bne .L_800100A8
Parsed instruction at 800100A4: b .L_800100AC
Parsed label: L_800100A8:
Parsed instruction at 800100A8: mr r29 r0
Parsed label: L_800100AC:
Parsed instruction at 800100AC: lwz r0 0x0(r3)
Parsed instruction at 800100B0: slwi r3 r29 2
Parsed instruction at 800100B4: add r3 r3 r0
Parsed instruction at 800100B8: bl fn_8000FC30
Parsed instruction at 800100BC: stw r3 0x144(r31)
Parsed instruction at 800100C0: addi r4 r31 0x144
Parsed instruction at 800100C4: li r0 0x280
Parsed instruction at 800100C8: sth r30 0x2(r31)
Parsed instruction at 800100CC: li r8 0x0
Parsed instruction at 800100D0: addi r6 r31 0xf6
Parsed instruction at 800100D4: lwz r4 0x0(r4)
Parsed instruction at 800100D8: addi r3 r31 0xf2
Parsed instruction at 800100DC: stw r4 lbl_8001F020@sda21(r0)
Parsed instruction at 800100E0: lwz r4 0x0(r28)
Parsed instruction at 800100E4: stw r4 CurrTvMode_8001F024@sda21(r0)
Parsed instruction at 800100E8: sth r0 0xf4(r31)
Parsed instruction at 800100EC: lwz r4 lbl_8001F020@sda21(r0)
Parsed instruction at 800100F0: lhzu r0 0x2(r4)
Parsed instruction at 800100F4: clrlslwi r0 r0 17 1
Parsed instruction at 800100F8: sth r0 0xf6(r31)
Parsed instruction at 800100FC: lhz r0 0xf4(r31)
Parsed instruction at 80010100: subfic r0 r0 0x2d0
Parsed instruction at 80010104: srawi r0 r0 1
Parsed instruction at 80010108: addze r0 r0
Parsed instruction at 8001010C: sth r0 0xf0(r31)
Parsed instruction at 80010110: sth r8 0xf2(r31)
Parsed instruction at 80010114: lhz r0 0xf4(r31)
Parsed instruction at 80010118: lha r7 0xf0(r31)
Parsed instruction at 8001011C: lha r5 lbl_8001EFFC@sda21(r0)
Parsed instruction at 80010120: subfic r0 r0 0x2d0
Parsed instruction at 80010124: lhz r9 0x0(r4)
Parsed instruction at 80010128: add r5 r7 r5
Parsed instruction at 8001012C: cmpw r5 r0
Parsed instruction at 80010130: ble .L_80010138
Parsed instruction at 80010134: b .L_8001014C
Parsed label: L_80010138:
Parsed instruction at 80010138: cmpwi r5 0x0
Parsed instruction at 8001013C: bge .L_80010144
Parsed instruction at 80010140: b .L_80010148
Parsed label: L_80010144:
Parsed instruction at 80010144: mr r8 r5
Parsed label: L_80010148:
Parsed instruction at 80010148: mr r0 r8
Parsed label: L_8001014C:
Parsed instruction at 8001014C: sth r0 0xf8(r31)
Parsed instruction at 80010150: addi r8 r31 0x110
Parsed instruction at 80010154: lwz r0 0x110(r31)
Parsed instruction at 80010158: cmpwi r0 0x0
Parsed instruction at 8001015C: bne .L_80010168
Parsed instruction at 80010160: li r11 0x2
Parsed instruction at 80010164: b .L_8001016C
Parsed label: L_80010168:
Parsed instruction at 80010168: li r11 0x1
Parsed label: L_8001016C:
Parsed instruction at 8001016C: lhz r0 0x0(r3)
Parsed instruction at 80010170: lha r5 lbl_8001EFFE@sda21(r0)
Parsed instruction at 80010174: extsh r7 r0
Parsed instruction at 80010178: clrlwi r0 r0 31
Parsed instruction at 8001017C: add r7 r7 r5
Parsed instruction at 80010180: cmpw r7 r0
Parsed instruction at 80010184: ble .L_8001018C
Parsed instruction at 80010188: b .L_80010190
Parsed label: L_8001018C:
Parsed instruction at 8001018C: mr r7 r0
Parsed label: L_80010190:
Parsed instruction at 80010190: sth r7 0xfa(r31)
Parsed instruction at 80010194: extsh r7 r9
Parsed instruction at 80010198: slwi r7 r7 1
Parsed instruction at 8001019C: lhz r28 0x0(r6)
Parsed instruction at 800101A0: subf r12 r0 r7
Parsed instruction at 800101A4: lha r10 0x0(r3)
Parsed instruction at 800101A8: extsh r7 r28
Parsed instruction at 800101AC: add r9 r7 r5
Parsed instruction at 800101B0: add r9 r10 r9
Parsed instruction at 800101B4: subf. r7 r12 r9
Parsed instruction at 800101B8: ble .L_800101C4
Parsed instruction at 800101BC: subf r9 r12 r9
Parsed instruction at 800101C0: b .L_800101C8
Parsed label: L_800101C4:
Parsed instruction at 800101C4: li r9 0x0
Parsed label: L_800101C8:
Parsed instruction at 800101C8: add r10 r10 r5
Parsed instruction at 800101CC: subf. r7 r0 r10
Parsed instruction at 800101D0: bge .L_800101DC
Parsed instruction at 800101D4: subf r7 r0 r10
Parsed instruction at 800101D8: b .L_800101E0
Parsed label: L_800101DC:
Parsed instruction at 800101DC: li r7 0x0
Parsed label: L_800101E0:
Parsed instruction at 800101E0: add r7 r28 r7
Parsed instruction at 800101E4: subf r7 r9 r7
Parsed instruction at 800101E8: sth r7 0xfc(r31)
Parsed instruction at 800101EC: lha r7 0x0(r3)
Parsed instruction at 800101F0: add r9 r7 r5
Parsed instruction at 800101F4: subf. r7 r0 r9
Parsed instruction at 800101F8: bge .L_80010204
Parsed instruction at 800101FC: subf r7 r0 r9
Parsed instruction at 80010200: b .L_80010208
Parsed label: L_80010204:
Parsed instruction at 80010204: li r7 0x0
Parsed label: L_80010208:
Parsed instruction at 80010208: divw r10 r7 r11
Parsed instruction at 8001020C: addi r7 r31 0x108
Parsed instruction at 80010210: lhz r9 0x108(r31)
Parsed instruction at 80010214: subf r9 r10 r9
Parsed instruction at 80010218: sth r9 0xfe(r31)
Parsed instruction at 8001021C: lha r6 0x0(r6)
Parsed instruction at 80010220: lha r9 0x0(r3)
Parsed instruction at 80010224: add r6 r6 r5
Parsed instruction at 80010228: add r6 r9 r6
Parsed instruction at 8001022C: subf. r3 r12 r6
Parsed instruction at 80010230: ble .L_8001023C
Parsed instruction at 80010234: subf r6 r12 r6
Parsed instruction at 80010238: b .L_80010240
Parsed label: L_8001023C:
Parsed instruction at 8001023C: li r6 0x0
Parsed label: L_80010240:
Parsed instruction at 80010240: add r5 r9 r5
Parsed instruction at 80010244: subf. r3 r0 r5
Parsed instruction at 80010248: bge .L_80010254
Parsed instruction at 8001024C: subf r0 r0 r5
Parsed instruction at 80010250: b .L_80010258
Parsed label: L_80010254:
Parsed instruction at 80010254: li r0 0x0
Parsed label: L_80010258:
Parsed instruction at 80010258: divw r0 r0 r11
Parsed instruction at 8001025C: lhz r3 0x10c(r31)
Parsed instruction at 80010260: add r0 r3 r0
Parsed instruction at 80010264: divw r5 r6 r11
Parsed instruction at 80010268: subf r0 r5 r0
Parsed instruction at 8001026C: sth r0 0x100(r31)
Parsed instruction at 80010270: li r9 0x280
Parsed instruction at 80010274: li r28 0x0
Parsed instruction at 80010278: sth r9 0x102(r31)
Parsed instruction at 8001027C: li r5 0x28
Parsed instruction at 80010280: li r0 0x1
Parsed instruction at 80010284: lhz r6 0x0(r4)
Parsed instruction at 80010288: li r3 lbl_8001EFE8@sda21
Parsed instruction at 8001028C: clrlslwi r6 r6 17 1
Parsed instruction at 80010290: sth r6 0x104(r31)
Parsed instruction at 80010294: sth r28 0x106(r31)
Parsed instruction at 80010298: sth r28 0x0(r7)
Parsed instruction at 8001029C: sth r9 0x10a(r31)
Parsed instruction at 800102A0: lhz r4 0x0(r4)
Parsed instruction at 800102A4: clrlslwi r4 r4 17 1
Parsed instruction at 800102A8: sth r4 0x10c(r31)
Parsed instruction at 800102AC: stw r28 0x0(r8)
Parsed instruction at 800102B0: stb r5 0x11c(r31)
Parsed instruction at 800102B4: stb r5 0x11d(r31)
Parsed instruction at 800102B8: stb r5 0x11e(r31)
Parsed instruction at 800102BC: stb r28 0x12c(r31)
Parsed instruction at 800102C0: stw r0 0x130(r31)
Parsed instruction at 800102C4: stw r28 0x134(r31)
Parsed instruction at 800102C8: bl OSInitThreadQueue
Parsed instruction at 800102CC: lis r3 0xcc00
Parsed instruction at 800102D0: lhz r0 0x2030(r3)
Parsed instruction at 800102D4: addi r4 r3 0x2000
Parsed instruction at 800102D8: addi r5 r3 0x2000
Parsed instruction at 800102DC: clrlwi r0 r0 17
Parsed instruction at 800102E0: sth r0 0x30(r4)
Parsed instruction at 800102E4: lis r3 fn_8000FA08@ha
Parsed instruction at 800102E8: addi r4 r3 fn_8000FA08@l
Parsed instruction at 800102EC: lhz r0 0x34(r5)
Parsed instruction at 800102F0: li r3 0x18
Parsed instruction at 800102F4: clrlwi r0 r0 17
Parsed instruction at 800102F8: sth r0 0x34(r5)
Parsed instruction at 800102FC: stw r28 lbl_8001EFF0@sda21(r0)
Parsed instruction at 80010300: stw r28 lbl_8001EFF4@sda21(r0)
Parsed instruction at 80010304: bl __OSSetInterruptHandler
Parsed instruction at 80010308: li r3 0x80
Parsed instruction at 8001030C: bl __OSUnmaskInterrupts
Parsed instruction at 80010310: lwz r0 0x1c(r1)
Parsed instruction at 80010314: lwz r31 0x14(r1)
Parsed instruction at 80010318: lwz r30 0x10(r1)
Parsed instruction at 8001031C: lwz r29 0xc(r1)
Parsed instruction at 80010320: lwz r28 0x8(r1)
Parsed instruction at 80010324: addi r1 r1 0x18
Parsed instruction at 80010328: mtlr r0
Parsed instruction at 8001032C: blr 
End of function: fn_8000FEB8, 307 instructions
Parsed function: fn_80010330 at 0x80010330
Parsed instruction at 80010330: mflr r0
Parsed instruction at 80010334: stw r0 0x4(r1)
Parsed instruction at 80010338: stwu r1 -0x10(r1)
Parsed instruction at 8001033C: stw r31 0xc(r1)
Parsed instruction at 80010340: stw r30 0x8(r1)
Parsed instruction at 80010344: bl OSDisableInterrupts
Parsed instruction at 80010348: lwz r30 lbl_8001EFE0@sda21(r0)
Parsed instruction at 8001034C: mr r31 r3
Parsed label: L_80010350:
Parsed instruction at 80010350: li r3 lbl_8001EFE8@sda21
Parsed instruction at 80010354: bl fn_80009A90
Parsed instruction at 80010358: lwz r0 lbl_8001EFE0@sda21(r0)
Parsed instruction at 8001035C: cmplw r30 r0
Parsed instruction at 80010360: beq .L_80010350
Parsed instruction at 80010364: mr r3 r31
Parsed instruction at 80010368: bl OSRestoreInterrupts
Parsed instruction at 8001036C: lwz r0 0x14(r1)
Parsed instruction at 80010370: lwz r31 0xc(r1)
Parsed instruction at 80010374: lwz r30 0x8(r1)
Parsed instruction at 80010378: addi r1 r1 0x10
Parsed instruction at 8001037C: mtlr r0
Parsed instruction at 80010380: blr 
End of function: fn_80010330, 22 instructions
Parsed function: fn_80010384 at 0x80010384
Parsed instruction at 80010384: stwu r1 -0x48(r1)
Parsed instruction at 80010388: lis r9 lbl_8001CB08@ha
Parsed instruction at 8001038C: addi r9 r9 lbl_8001CB08@l
Parsed instruction at 80010390: stw r31 0x44(r1)
Parsed instruction at 80010394: lbz r8 0x2c(r3)
Parsed instruction at 80010398: lhz r0 0xe(r3)
Parsed instruction at 8001039C: slwi r31 r8 5
Parsed instruction at 800103A0: lhz r8 0x16(r3)
Parsed instruction at 800103A4: mullw r0 r31 r0
Parsed instruction at 800103A8: lwz r11 0x20(r3)
Parsed instruction at 800103AC: lwz r10 0x30(r3)
Parsed instruction at 800103B0: lhz r12 0xa(r3)
Parsed instruction at 800103B4: extlwi r8 r8 27 1
Parsed instruction at 800103B8: add r0 r8 r0
Parsed instruction at 800103BC: add r0 r10 r0
Parsed instruction at 800103C0: cmpwi r11 0x0
Parsed instruction at 800103C4: stw r0 0x0(r4)
Parsed instruction at 800103C8: bne .L_800103D4
Parsed instruction at 800103CC: lwz r8 0x0(r4)
Parsed instruction at 800103D0: b .L_800103DC
Parsed label: L_800103D4:
Parsed instruction at 800103D4: lwz r0 0x0(r4)
Parsed instruction at 800103D8: add r8 r0 r31
Parsed label: L_800103DC:
Parsed instruction at 800103DC: srawi r0 r12 1
Parsed instruction at 800103E0: stw r8 0x0(r5)
Parsed instruction at 800103E4: addze r0 r0
Parsed instruction at 800103E8: slwi r0 r0 1
Parsed instruction at 800103EC: subfc r0 r0 r12
Parsed instruction at 800103F0: cmpwi r0 0x1
Parsed instruction at 800103F4: bne .L_80010408
Parsed instruction at 800103F8: lwz r8 0x0(r4)
Parsed instruction at 800103FC: lwz r0 0x0(r5)
Parsed instruction at 80010400: stw r0 0x0(r4)
Parsed instruction at 80010404: stw r8 0x0(r5)
Parsed label: L_80010408:
Parsed instruction at 80010408: lwz r0 0x0(r4)
Parsed instruction at 8001040C: clrlwi r0 r0 2
Parsed instruction at 80010410: stw r0 0x0(r4)
Parsed instruction at 80010414: lwz r0 0x0(r5)
Parsed instruction at 80010418: clrlwi r0 r0 2
Parsed instruction at 8001041C: stw r0 0x0(r5)
Parsed instruction at 80010420: lwz r0 0x44(r3)
Parsed instruction at 80010424: cmpwi r0 0x0
Parsed instruction at 80010428: beq .L_800104B8
Parsed instruction at 8001042C: lbz r8 0x2c(r3)
Parsed instruction at 80010430: lhz r0 0xe(r3)
Parsed instruction at 80010434: slwi r31 r8 5
Parsed instruction at 80010438: lhz r8 0x16(r3)
Parsed instruction at 8001043C: mullw r0 r31 r0
Parsed instruction at 80010440: lwz r11 0x20(r3)
Parsed instruction at 80010444: lwz r10 0x48(r3)
Parsed instruction at 80010448: lhz r12 0xa(r3)
Parsed instruction at 8001044C: extlwi r8 r8 27 1
Parsed instruction at 80010450: add r0 r8 r0
Parsed instruction at 80010454: add r0 r10 r0
Parsed instruction at 80010458: cmpwi r11 0x0
Parsed instruction at 8001045C: stw r0 0x0(r6)
Parsed instruction at 80010460: bne .L_8001046C
Parsed instruction at 80010464: lwz r8 0x0(r6)
Parsed instruction at 80010468: b .L_80010474
Parsed label: L_8001046C:
Parsed instruction at 8001046C: lwz r0 0x0(r6)
Parsed instruction at 80010470: add r8 r0 r31
Parsed label: L_80010474:
Parsed instruction at 80010474: srawi r0 r12 1
Parsed instruction at 80010478: stw r8 0x0(r7)
Parsed instruction at 8001047C: addze r0 r0
Parsed instruction at 80010480: slwi r0 r0 1
Parsed instruction at 80010484: subfc r0 r0 r12
Parsed instruction at 80010488: cmpwi r0 0x1
Parsed instruction at 8001048C: bne .L_800104A0
Parsed instruction at 80010490: lwz r8 0x0(r6)
Parsed instruction at 80010494: lwz r0 0x0(r7)
Parsed instruction at 80010498: stw r0 0x0(r6)
Parsed instruction at 8001049C: stw r8 0x0(r7)
Parsed label: L_800104A0:
Parsed instruction at 800104A0: lwz r0 0x0(r6)
Parsed instruction at 800104A4: clrlwi r0 r0 2
Parsed instruction at 800104A8: stw r0 0x0(r6)
Parsed instruction at 800104AC: lwz r0 0x0(r7)
Parsed instruction at 800104B0: clrlwi r0 r0 2
Parsed instruction at 800104B4: stw r0 0x0(r7)
Parsed label: L_800104B8:
Parsed instruction at 800104B8: lwz r0 0x0(r4)
Parsed instruction at 800104BC: lis r8 0x100
Parsed instruction at 800104C0: cmplw r0 r8
Parsed instruction at 800104C4: bge .L_800104F4
Parsed instruction at 800104C8: lwz r0 0x0(r5)
Parsed instruction at 800104CC: cmplw r0 r8
Parsed instruction at 800104D0: bge .L_800104F4
Parsed instruction at 800104D4: lwz r0 0x0(r6)
Parsed instruction at 800104D8: cmplw r0 r8
Parsed instruction at 800104DC: bge .L_800104F4
Parsed instruction at 800104E0: lwz r0 0x0(r7)
Parsed instruction at 800104E4: cmplw r0 r8
Parsed instruction at 800104E8: bge .L_800104F4
Parsed instruction at 800104EC: li r10 0x0
Parsed instruction at 800104F0: b .L_800104F8
Parsed label: L_800104F4:
Parsed instruction at 800104F4: li r10 0x1
Parsed label: L_800104F8:
Parsed instruction at 800104F8: cmplwi r10 0x0
Parsed instruction at 800104FC: beq .L_80010530
Parsed instruction at 80010500: lwz r0 0x0(r4)
Parsed instruction at 80010504: srwi r0 r0 5
Parsed instruction at 80010508: stw r0 0x0(r4)
Parsed instruction at 8001050C: lwz r0 0x0(r5)
Parsed instruction at 80010510: srwi r0 r0 5
Parsed instruction at 80010514: stw r0 0x0(r5)
Parsed instruction at 80010518: lwz r0 0x0(r6)
Parsed instruction at 8001051C: srwi r0 r0 5
Parsed instruction at 80010520: stw r0 0x0(r6)
Parsed instruction at 80010524: lwz r0 0x0(r7)
Parsed instruction at 80010528: srwi r0 r0 5
Parsed instruction at 8001052C: stw r0 0x0(r7)
Parsed label: L_80010530:
Parsed instruction at 80010530: lwz r0 0x0(r4)
Parsed instruction at 80010534: slwi r11 r10 12
Parsed instruction at 80010538: lis r8 0x1
Parsed instruction at 8001053C: sth r0 0x1e(r9)
Parsed instruction at 80010540: lis r0 0x2
Parsed instruction at 80010544: lwz r10 lbl_8001F008@sda21(r0)
Parsed instruction at 80010548: lwz r12 lbl_8001F00C@sda21(r0)
Parsed instruction at 8001054C: or r10 r10 r8
Parsed instruction at 80010550: stw r12 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010554: stw r10 lbl_8001F008@sda21(r0)
Parsed instruction at 80010558: lwz r10 0x0(r4)
Parsed instruction at 8001055C: lbz r4 0x3c(r3)
Parsed instruction at 80010560: srwi r10 r10 16
Parsed instruction at 80010564: slwi r4 r4 8
Parsed instruction at 80010568: or r4 r10 r4
Parsed instruction at 8001056C: or r4 r11 r4
Parsed instruction at 80010570: sth r4 0x1c(r9)
Parsed instruction at 80010574: lwz r4 lbl_8001F008@sda21(r0)
Parsed instruction at 80010578: lwz r10 lbl_8001F00C@sda21(r0)
Parsed instruction at 8001057C: or r0 r4 r0
Parsed instruction at 80010580: stw r10 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010584: stw r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80010588: lwz r0 0x0(r5)
Parsed instruction at 8001058C: sth r0 0x26(r9)
Parsed instruction at 80010590: lwz r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80010594: lwz r4 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010598: ori r0 r0 0x1000
Parsed instruction at 8001059C: stw r4 lbl_8001F00C@sda21(r0)
Parsed instruction at 800105A0: stw r0 lbl_8001F008@sda21(r0)
Parsed instruction at 800105A4: lwz r0 0x0(r5)
Parsed instruction at 800105A8: srwi r0 r0 16
Parsed instruction at 800105AC: sth r0 0x24(r9)
Parsed instruction at 800105B0: lwz r0 lbl_8001F008@sda21(r0)
Parsed instruction at 800105B4: lwz r4 lbl_8001F00C@sda21(r0)
Parsed instruction at 800105B8: ori r0 r0 0x2000
Parsed instruction at 800105BC: stw r4 lbl_8001F00C@sda21(r0)
Parsed instruction at 800105C0: stw r0 lbl_8001F008@sda21(r0)
Parsed instruction at 800105C4: lwz r0 0x44(r3)
Parsed instruction at 800105C8: cmpwi r0 0x0
Parsed instruction at 800105CC: beq .L_8001064C
Parsed instruction at 800105D0: lwz r3 0x0(r6)
Parsed instruction at 800105D4: addi r0 r8 -0x8000
Parsed instruction at 800105D8: sth r3 0x22(r9)
Parsed instruction at 800105DC: lwz r3 lbl_8001F008@sda21(r0)
Parsed instruction at 800105E0: lwz r4 lbl_8001F00C@sda21(r0)
Parsed instruction at 800105E4: ori r3 r3 0x4000
Parsed instruction at 800105E8: stw r4 lbl_8001F00C@sda21(r0)
Parsed instruction at 800105EC: stw r3 lbl_8001F008@sda21(r0)
Parsed instruction at 800105F0: lwz r3 0x0(r6)
Parsed instruction at 800105F4: srwi r3 r3 16
Parsed instruction at 800105F8: sth r3 0x20(r9)
Parsed instruction at 800105FC: lwz r3 lbl_8001F008@sda21(r0)
Parsed instruction at 80010600: lwz r4 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010604: or r0 r3 r0
Parsed instruction at 80010608: stw r4 lbl_8001F00C@sda21(r0)
Parsed instruction at 8001060C: stw r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80010610: lwz r0 0x0(r7)
Parsed instruction at 80010614: sth r0 0x2a(r9)
Parsed instruction at 80010618: lwz r0 lbl_8001F008@sda21(r0)
Parsed instruction at 8001061C: lwz r3 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010620: ori r0 r0 0x400
Parsed instruction at 80010624: stw r3 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010628: stw r0 lbl_8001F008@sda21(r0)
Parsed instruction at 8001062C: lwz r0 0x0(r7)
Parsed instruction at 80010630: srwi r0 r0 16
Parsed instruction at 80010634: sth r0 0x28(r9)
Parsed instruction at 80010638: lwz r0 lbl_8001F008@sda21(r0)
Parsed instruction at 8001063C: lwz r3 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010640: ori r0 r0 0x800
Parsed instruction at 80010644: stw r3 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010648: stw r0 lbl_8001F008@sda21(r0)
Parsed label: L_8001064C:
Parsed instruction at 8001064C: lwz r31 0x44(r1)
Parsed instruction at 80010650: addi r1 r1 0x48
Parsed instruction at 80010654: blr 
End of function: fn_80010384, 192 instructions
Parsed function: fn_80010658 at 0x80010658
Parsed instruction at 80010658: stwu r1 -0x28(r1)
Parsed instruction at 8001065C: clrlwi r0 r5 24
Parsed instruction at 80010660: lis r11 lbl_8001CB08@ha
Parsed instruction at 80010664: stw r31 0x24(r1)
Parsed instruction at 80010668: cmplwi r0 0xa
Parsed instruction at 8001066C: lwz r31 0x30(r1)
Parsed instruction at 80010670: addi r11 r11 lbl_8001CB08@l
Parsed instruction at 80010674: stw r30 0x20(r1)
Parsed instruction at 80010678: stw r29 0x1c(r1)
Parsed instruction at 8001067C: blt .L_8001068C
Parsed instruction at 80010680: li r12 0x1
Parsed instruction at 80010684: li r29 0x2
Parsed instruction at 80010688: b .L_80010694
Parsed label: L_8001068C:
Parsed instruction at 8001068C: li r12 0x2
Parsed instruction at 80010690: li r29 0x1
Parsed label: L_80010694:
Parsed instruction at 80010694: clrlwi r30 r3 16
Parsed instruction at 80010698: srawi r0 r30 1
Parsed instruction at 8001069C: addze r0 r0
Parsed instruction at 800106A0: slwi r0 r0 1
Parsed instruction at 800106A4: subfc. r0 r0 r30
Parsed instruction at 800106A8: bne .L_800106E4
Parsed instruction at 800106AC: clrlwi r3 r12 16
Parsed instruction at 800106B0: clrlwi r0 r6 16
Parsed instruction at 800106B4: mullw r0 r3 r0
Parsed instruction at 800106B8: clrlwi r3 r4 16
Parsed instruction at 800106BC: subf r0 r3 r0
Parsed instruction at 800106C0: clrlwi r3 r29 16
Parsed instruction at 800106C4: mullw r29 r3 r30
Parsed instruction at 800106C8: subf r0 r30 r0
Parsed instruction at 800106CC: mullw r30 r3 r0
Parsed instruction at 800106D0: add r0 r7 r29
Parsed instruction at 800106D4: add r6 r9 r30
Parsed instruction at 800106D8: add r3 r8 r29
Parsed instruction at 800106DC: add r7 r10 r30
Parsed instruction at 800106E0: b .L_80010718
Parsed label: L_800106E4:
Parsed instruction at 800106E4: clrlwi r3 r12 16
Parsed instruction at 800106E8: clrlwi r0 r6 16
Parsed instruction at 800106EC: mullw r0 r3 r0
Parsed instruction at 800106F0: clrlwi r3 r4 16
Parsed instruction at 800106F4: subf r0 r3 r0
Parsed instruction at 800106F8: clrlwi r3 r29 16
Parsed instruction at 800106FC: mullw r29 r3 r30
Parsed instruction at 80010700: subf r0 r30 r0
Parsed instruction at 80010704: mullw r30 r3 r0
Parsed instruction at 80010708: add r0 r8 r29
Parsed instruction at 8001070C: add r6 r10 r30
Parsed instruction at 80010710: add r3 r7 r29
Parsed instruction at 80010714: add r7 r9 r30
Parsed label: L_80010718:
Parsed instruction at 80010718: clrlwi r8 r4 16
Parsed instruction at 8001071C: clrlwi r4 r12 16
Parsed instruction at 80010720: divw r4 r8 r4
Parsed instruction at 80010724: cmpwi r31 0x0
Parsed instruction at 80010728: clrlwi r4 r4 16
Parsed instruction at 8001072C: beq .L_8001074C
Parsed instruction at 80010730: slwi r4 r4 1
Parsed instruction at 80010734: subi r4 r4 0x2
Parsed instruction at 80010738: add r0 r0 r4
Parsed instruction at 8001073C: add r3 r3 r4
Parsed instruction at 80010740: li r4 0x0
Parsed instruction at 80010744: addi r6 r6 0x2
Parsed instruction at 80010748: addi r7 r7 0x2
Parsed label: L_8001074C:
Parsed instruction at 8001074C: clrlwi r5 r5 24
Parsed instruction at 80010750: clrlslwi r4 r4 16 4
Parsed instruction at 80010754: or r4 r5 r4
Parsed instruction at 80010758: sth r4 0x0(r11)
Parsed instruction at 8001075C: lis r4 0x8000
Parsed instruction at 80010760: lis r9 0x100
Parsed instruction at 80010764: lwz r5 lbl_8001F008@sda21(r0)
Parsed instruction at 80010768: lis r8 0x200
Parsed instruction at 8001076C: lwz r10 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010770: or r4 r5 r4
Parsed instruction at 80010774: lis r5 0x40
Parsed instruction at 80010778: stw r10 lbl_8001F00C@sda21(r0)
Parsed instruction at 8001077C: stw r4 lbl_8001F008@sda21(r0)
Parsed instruction at 80010780: lis r4 0x80
Parsed instruction at 80010784: sth r0 0xe(r11)
Parsed instruction at 80010788: lwz r0 lbl_8001F008@sda21(r0)
Parsed instruction at 8001078C: lwz r10 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010790: or r0 r0 r9
Parsed instruction at 80010794: stw r10 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010798: stw r0 lbl_8001F008@sda21(r0)
Parsed instruction at 8001079C: sth r6 0xc(r11)
Parsed instruction at 800107A0: lwz r0 lbl_8001F008@sda21(r0)
Parsed instruction at 800107A4: lwz r6 lbl_8001F00C@sda21(r0)
Parsed instruction at 800107A8: or r0 r0 r8
Parsed instruction at 800107AC: stw r6 lbl_8001F00C@sda21(r0)
Parsed instruction at 800107B0: stw r0 lbl_8001F008@sda21(r0)
Parsed instruction at 800107B4: sth r3 0x12(r11)
Parsed instruction at 800107B8: lwz r0 lbl_8001F008@sda21(r0)
Parsed instruction at 800107BC: lwz r3 lbl_8001F00C@sda21(r0)
Parsed instruction at 800107C0: or r0 r0 r5
Parsed instruction at 800107C4: stw r3 lbl_8001F00C@sda21(r0)
Parsed instruction at 800107C8: stw r0 lbl_8001F008@sda21(r0)
Parsed instruction at 800107CC: sth r7 0x10(r11)
Parsed instruction at 800107D0: lwz r0 lbl_8001F008@sda21(r0)
Parsed instruction at 800107D4: lwz r3 lbl_8001F00C@sda21(r0)
Parsed instruction at 800107D8: or r0 r0 r4
Parsed instruction at 800107DC: stw r3 lbl_8001F00C@sda21(r0)
Parsed instruction at 800107E0: stw r0 lbl_8001F008@sda21(r0)
Parsed instruction at 800107E4: lwz r31 0x24(r1)
Parsed instruction at 800107E8: lwz r30 0x20(r1)
Parsed instruction at 800107EC: lwz r29 0x1c(r1)
Parsed instruction at 800107F0: addi r1 r1 0x28
Parsed instruction at 800107F4: blr 
End of function: fn_80010658, 109 instructions
Parsed function: fn_800107F8 at 0x800107F8
Parsed instruction at 800107F8: mflr r0
Parsed instruction at 800107FC: lis r5 lbl_8001B3D8@ha
Parsed instruction at 80010800: stw r0 0x4(r1)
Parsed instruction at 80010804: lis r4 lbl_8001CB08@ha
Parsed instruction at 80010808: stwu r1 -0x78(r1)
Parsed instruction at 8001080C: stmw r14 0x30(r1)
Parsed instruction at 80010810: addi r31 r3 0x0
Parsed instruction at 80010814: addi r15 r5 lbl_8001B3D8@l
Parsed instruction at 80010818: addi r29 r4 lbl_8001CB08@l
Parsed instruction at 8001081C: bl OSDisableInterrupts
Parsed instruction at 80010820: lwz r4 0x0(r31)
Parsed instruction at 80010824: addi r28 r29 0x114
Parsed instruction at 80010828: lwz r0 0x114(r29)
Parsed instruction at 8001082C: addi r14 r3 0x0
Parsed instruction at 80010830: clrlwi r4 r4 30
Parsed instruction at 80010834: cmplw r0 r4
Parsed instruction at 80010838: beq .L_80010848
Parsed instruction at 8001083C: li r0 0x1
Parsed instruction at 80010840: stw r0 lbl_8001F000@sda21(r0)
Parsed instruction at 80010844: stw r4 0x0(r28)
Parsed label: L_80010848:
Parsed instruction at 80010848: lwz r0 0x0(r31)
Parsed instruction at 8001084C: lis r3 0x8000
Parsed instruction at 80010850: lwz r17 0xcc(r3)
Parsed instruction at 80010854: srwi r16 r0 2
Parsed instruction at 80010858: cmplwi r16 0x4
Parsed instruction at 8001085C: bne .L_800108C8
Parsed instruction at 80010860: lwz r0 lbl_8001F02C@sda21(r0)
Parsed instruction at 80010864: cmplwi r0 0x0
Parsed instruction at 80010868: bne .L_800108C8
Parsed instruction at 8001086C: li r0 0x1
Parsed instruction at 80010870: crclr cr1eq
Parsed instruction at 80010874: stw r0 lbl_8001F02C@sda21(r0)
Parsed instruction at 80010878: addi r3 r15 0x1bc
Parsed instruction at 8001087C: bl OSReport
Parsed instruction at 80010880: addi r3 r15 0x1e8
Parsed instruction at 80010884: crclr cr1eq
Parsed instruction at 80010888: bl OSReport
Parsed instruction at 8001088C: addi r3 r15 0x214
Parsed instruction at 80010890: crclr cr1eq
Parsed instruction at 80010894: bl OSReport
Parsed instruction at 80010898: addi r3 r15 0x240
Parsed instruction at 8001089C: crclr cr1eq
Parsed instruction at 800108A0: bl OSReport
Parsed instruction at 800108A4: addi r3 r15 0x26c
Parsed instruction at 800108A8: crclr cr1eq
Parsed instruction at 800108AC: bl OSReport
Parsed instruction at 800108B0: addi r3 r15 0x298
Parsed instruction at 800108B4: crclr cr1eq
Parsed instruction at 800108B8: bl OSReport
Parsed instruction at 800108BC: addi r3 r15 0x1bc
Parsed instruction at 800108C0: crclr cr1eq
Parsed instruction at 800108C4: bl OSReport
Parsed label: L_800108C8:
Parsed instruction at 800108C8: cmplwi r16 0x0
Parsed instruction at 800108CC: beq .L_800108D8
Parsed instruction at 800108D0: cmplwi r16 0x2
Parsed instruction at 800108D4: bne .L_800108E0
Parsed label: L_800108D8:
Parsed instruction at 800108D8: stw r17 0x118(r29)
Parsed instruction at 800108DC: b .L_800108E4
Parsed label: L_800108E0:
Parsed instruction at 800108E0: stw r16 0x118(r29)
Parsed label: L_800108E4:
Parsed instruction at 800108E4: lhz r0 0xa(r31)
Parsed instruction at 800108E8: sth r0 0xf0(r29)
Parsed instruction at 800108EC: lwz r0 0x0(r28)
Parsed instruction at 800108F0: cmplwi r0 0x1
Parsed instruction at 800108F4: bne .L_80010904
Parsed instruction at 800108F8: lhz r0 0xc(r31)
Parsed instruction at 800108FC: clrlslwi r0 r0 17 1
Parsed instruction at 80010900: b .L_80010908
Parsed label: L_80010904:
Parsed instruction at 80010904: lhz r0 0xc(r31)
Parsed label: L_80010908:
Parsed instruction at 80010908: sth r0 0xf2(r29)
Parsed instruction at 8001090C: addi r23 r29 0xf2
Parsed instruction at 80010910: addi r24 r29 0xf4
Parsed instruction at 80010914: lhz r0 0xe(r31)
Parsed instruction at 80010918: addi r27 r29 0x102
Parsed instruction at 8001091C: addi r25 r29 0x110
Parsed instruction at 80010920: sth r0 0xf4(r29)
Parsed instruction at 80010924: li r0 0x0
Parsed instruction at 80010928: addi r16 r29 0x10a
Parsed instruction at 8001092C: lhz r3 0x4(r31)
Parsed instruction at 80010930: addi r26 r29 0x10c
Parsed instruction at 80010934: addi r15 r29 0x106
Parsed instruction at 80010938: sth r3 0x102(r29)
Parsed instruction at 8001093C: addi r17 r29 0x108
Parsed instruction at 80010940: lhz r3 0x8(r31)
Parsed instruction at 80010944: sth r3 0x104(r29)
Parsed instruction at 80010948: lwz r3 0x14(r31)
Parsed instruction at 8001094C: stw r3 0x110(r29)
Parsed instruction at 80010950: lhz r3 0x102(r29)
Parsed instruction at 80010954: sth r3 0x10a(r29)
Parsed instruction at 80010958: lhz r3 0x104(r29)
Parsed instruction at 8001095C: sth r3 0x10c(r29)
Parsed instruction at 80010960: sth r0 0x106(r29)
Parsed instruction at 80010964: sth r0 0x108(r29)
Parsed instruction at 80010968: lwz r0 0x0(r28)
Parsed instruction at 8001096C: cmplwi r0 0x2
Parsed instruction at 80010970: bne .L_8001097C
Parsed instruction at 80010974: lhz r0 0x0(r26)
Parsed instruction at 80010978: b .L_800109A8
Parsed label: L_8001097C:
Parsed instruction at 8001097C: cmplwi r0 0x3
Parsed instruction at 80010980: bne .L_8001098C
Parsed instruction at 80010984: lhz r0 0x0(r26)
Parsed instruction at 80010988: b .L_800109A8
Parsed label: L_8001098C:
Parsed instruction at 8001098C: lwz r0 0x0(r25)
Parsed instruction at 80010990: cmpwi r0 0x0
Parsed instruction at 80010994: bne .L_800109A4
Parsed instruction at 80010998: lhz r0 0x0(r26)
Parsed instruction at 8001099C: clrlslwi r0 r0 17 1
Parsed instruction at 800109A0: b .L_800109A8
Parsed label: L_800109A4:
Parsed instruction at 800109A4: lhz r0 0x0(r26)
Parsed label: L_800109A8:
Parsed instruction at 800109A8: addi r22 r29 0xf6
Parsed instruction at 800109AC: sth r0 0xf6(r29)
Parsed instruction at 800109B0: lwz r0 0x0(r28)
Parsed instruction at 800109B4: cmplwi r0 0x3
Parsed instruction at 800109B8: bne .L_800109C4
Parsed instruction at 800109BC: li r0 0x1
Parsed instruction at 800109C0: b .L_800109C8
Parsed label: L_800109C4:
Parsed instruction at 800109C4: li r0 0x0
Parsed label: L_800109C8:
Parsed instruction at 800109C8: addi r18 r29 0x134
Parsed instruction at 800109CC: stw r0 0x134(r29)
Parsed instruction at 800109D0: addi r21 r29 0x118
Parsed instruction at 800109D4: lwz r3 0x118(r29)
Parsed instruction at 800109D8: lwz r0 0x0(r28)
Parsed instruction at 800109DC: slwi r3 r3 2
Parsed instruction at 800109E0: add r3 r3 r0
Parsed instruction at 800109E4: bl fn_8000FC30
Parsed instruction at 800109E8: mr r30 r3
Parsed instruction at 800109EC: stw r30 0x144(r29)
Parsed instruction at 800109F0: lhz r0 0x0(r24)
Parsed instruction at 800109F4: lha r4 0xf0(r29)
Parsed instruction at 800109F8: lha r3 lbl_8001EFFC@sda21(r0)
Parsed instruction at 800109FC: subfic r5 r0 0x2d0
Parsed instruction at 80010A00: lhz r0 0x2(r30)
Parsed instruction at 80010A04: add r3 r4 r3
Parsed instruction at 80010A08: cmpw r3 r5
Parsed instruction at 80010A0C: ble .L_80010A14
Parsed instruction at 80010A10: b .L_80010A24
Parsed label: L_80010A14:
Parsed instruction at 80010A14: cmpwi r3 0x0
Parsed instruction at 80010A18: bge .L_80010A20
Parsed instruction at 80010A1C: li r3 0x0
Parsed label: L_80010A20:
Parsed instruction at 80010A20: mr r5 r3
Parsed label: L_80010A24:
Parsed instruction at 80010A24: sth r5 0xf8(r29)
Parsed instruction at 80010A28: addi r3 r29 0xf8
Parsed instruction at 80010A2C: lwz r4 0x0(r25)
Parsed instruction at 80010A30: cmpwi r4 0x0
Parsed instruction at 80010A34: bne .L_80010A40
Parsed instruction at 80010A38: li r4 0x2
Parsed instruction at 80010A3C: b .L_80010A44
Parsed label: L_80010A40:
Parsed instruction at 80010A40: li r4 0x1
Parsed label: L_80010A44:
Parsed instruction at 80010A44: lhz r5 0x0(r23)
Parsed instruction at 80010A48: lha r6 lbl_8001EFFE@sda21(r0)
Parsed instruction at 80010A4C: extsh r7 r5
Parsed instruction at 80010A50: clrlwi r5 r5 31
Parsed instruction at 80010A54: add r7 r7 r6
Parsed instruction at 80010A58: cmpw r7 r5
Parsed instruction at 80010A5C: ble .L_80010A64
Parsed instruction at 80010A60: b .L_80010A68
Parsed label: L_80010A64:
Parsed instruction at 80010A64: mr r7 r5
Parsed label: L_80010A68:
Parsed instruction at 80010A68: sth r7 0xfa(r29)
Parsed instruction at 80010A6C: extsh r0 r0
Parsed instruction at 80010A70: slwi r0 r0 1
Parsed instruction at 80010A74: lhz r8 0x0(r22)
Parsed instruction at 80010A78: subf r0 r5 r0
Parsed instruction at 80010A7C: lha r7 0x0(r23)
Parsed instruction at 80010A80: addi r19 r29 0xfa
Parsed instruction at 80010A84: extsh r9 r8
Parsed instruction at 80010A88: add r10 r9 r6
Parsed instruction at 80010A8C: add r10 r7 r10
Parsed instruction at 80010A90: subf. r9 r0 r10
Parsed instruction at 80010A94: ble .L_80010AA0
Parsed instruction at 80010A98: subf r9 r0 r10
Parsed instruction at 80010A9C: b .L_80010AA4
Parsed label: L_80010AA0:
Parsed instruction at 80010AA0: li r9 0x0
Parsed label: L_80010AA4:
Parsed instruction at 80010AA4: add r10 r7 r6
Parsed instruction at 80010AA8: subf. r7 r5 r10
Parsed instruction at 80010AAC: bge .L_80010AB8
Parsed instruction at 80010AB0: subf r7 r5 r10
Parsed instruction at 80010AB4: b .L_80010ABC
Parsed label: L_80010AB8:
Parsed instruction at 80010AB8: li r7 0x0
Parsed label: L_80010ABC:
Parsed instruction at 80010ABC: add r7 r8 r7
Parsed instruction at 80010AC0: subf r7 r9 r7
Parsed instruction at 80010AC4: addi r20 r29 0xfc
Parsed instruction at 80010AC8: sth r7 0xfc(r29)
Parsed instruction at 80010ACC: lha r7 0x0(r23)
Parsed instruction at 80010AD0: add r8 r7 r6
Parsed instruction at 80010AD4: subf. r7 r5 r8
Parsed instruction at 80010AD8: bge .L_80010AE4
Parsed instruction at 80010ADC: subf r7 r5 r8
Parsed instruction at 80010AE0: b .L_80010AE8
Parsed label: L_80010AE4:
Parsed instruction at 80010AE4: li r7 0x0
Parsed label: L_80010AE8:
Parsed instruction at 80010AE8: divw r8 r7 r4
Parsed instruction at 80010AEC: lhz r7 0x0(r17)
Parsed instruction at 80010AF0: subf r7 r8 r7
Parsed instruction at 80010AF4: sth r7 0xfe(r29)
Parsed instruction at 80010AF8: lha r7 0x0(r22)
Parsed instruction at 80010AFC: lha r9 0x0(r23)
Parsed instruction at 80010B00: add r8 r7 r6
Parsed instruction at 80010B04: add r8 r9 r8
Parsed instruction at 80010B08: subf. r7 r0 r8
Parsed instruction at 80010B0C: ble .L_80010B18
Parsed instruction at 80010B10: subf r7 r0 r8
Parsed instruction at 80010B14: b .L_80010B1C
Parsed label: L_80010B18:
Parsed instruction at 80010B18: li r7 0x0
Parsed label: L_80010B1C:
Parsed instruction at 80010B1C: add r6 r9 r6
Parsed instruction at 80010B20: subf. r0 r5 r6
Parsed instruction at 80010B24: bge .L_80010B30
Parsed instruction at 80010B28: subf r0 r5 r6
Parsed instruction at 80010B2C: b .L_80010B34
Parsed label: L_80010B30:
Parsed instruction at 80010B30: li r0 0x0
Parsed label: L_80010B34:
Parsed instruction at 80010B34: divw r0 r0 r4
Parsed instruction at 80010B38: lhz r5 0x0(r26)
Parsed instruction at 80010B3C: divw r4 r7 r4
Parsed instruction at 80010B40: add r0 r5 r0
Parsed instruction at 80010B44: subf r0 r4 r0
Parsed instruction at 80010B48: sth r0 0x100(r29)
Parsed instruction at 80010B4C: lwz r0 lbl_8001EFF8@sda21(r0)
Parsed instruction at 80010B50: cmplwi r0 0x0
Parsed instruction at 80010B54: bne .L_80010B60
Parsed instruction at 80010B58: li r0 0x3
Parsed instruction at 80010B5C: stw r0 0x0(r21)
Parsed label: L_80010B60:
Parsed instruction at 80010B60: lhz r5 0x18(r30)
Parsed instruction at 80010B64: srawi r4 r5 1
Parsed instruction at 80010B68: addze r4 r4
Parsed instruction at 80010B6C: srawi r0 r5 1
Parsed instruction at 80010B70: addze r0 r0
Parsed instruction at 80010B74: slwi r0 r0 1
Parsed instruction at 80010B78: subfc r0 r0 r5
Parsed instruction at 80010B7C: clrlwi. r0 r0 16
Parsed instruction at 80010B80: clrlwi r4 r4 16
Parsed instruction at 80010B84: beq .L_80010B90
Parsed instruction at 80010B88: lhz r5 0x1a(r30)
Parsed instruction at 80010B8C: b .L_80010B94
Parsed label: L_80010B90:
Parsed instruction at 80010B90: li r5 0x0
Parsed label: L_80010B94:
Parsed instruction at 80010B94: addi r0 r5 0x1
Parsed instruction at 80010B98: sth r0 0x32(r29)
Parsed instruction at 80010B9C: addi r0 r4 0x1
Parsed instruction at 80010BA0: ori r0 r0 0x1000
Parsed instruction at 80010BA4: lwz r5 lbl_8001F008@sda21(r0)
Parsed instruction at 80010BA8: addi r4 r29 0x2
Parsed instruction at 80010BAC: lwz r6 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010BB0: ori r5 r5 0x40
Parsed instruction at 80010BB4: stw r6 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010BB8: stw r5 lbl_8001F008@sda21(r0)
Parsed instruction at 80010BBC: sth r0 0x30(r29)
Parsed instruction at 80010BC0: lwz r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80010BC4: lwz r5 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010BC8: ori r0 r0 0x80
Parsed instruction at 80010BCC: stw r5 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010BD0: stw r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80010BD4: lwz r0 0x0(r28)
Parsed instruction at 80010BD8: lhz r5 0x2(r29)
Parsed instruction at 80010BDC: cmplwi r0 0x2
Parsed instruction at 80010BE0: beq .L_80010BEC
Parsed instruction at 80010BE4: cmplwi r0 0x3
Parsed instruction at 80010BE8: bne .L_80010BF8
Parsed label: L_80010BEC:
Parsed instruction at 80010BEC: rlwinm r0 r5 0 30 28
Parsed instruction at 80010BF0: ori r5 r0 0x4
Parsed instruction at 80010BF4: b .L_80010C00
Parsed label: L_80010BF8:
Parsed instruction at 80010BF8: rlwinm r5 r5 0 30 28
Parsed instruction at 80010BFC: rlwimi r5 r0 2 29 29
Parsed label: L_80010C00:
Parsed instruction at 80010C00: lwz r6 0x0(r21)
Parsed instruction at 80010C04: rlwinm r5 r5 0 29 27
Parsed instruction at 80010C08: lwz r7 0x0(r18)
Parsed instruction at 80010C0C: cmplwi r6 0x4
Parsed instruction at 80010C10: slwi r0 r7 3
Parsed instruction at 80010C14: or r0 r5 r0
Parsed instruction at 80010C18: beq .L_80010C24
Parsed instruction at 80010C1C: cmplwi r6 0x5
Parsed instruction at 80010C20: bne .L_80010C2C
Parsed label: L_80010C24:
Parsed instruction at 80010C24: rlwinm r0 r0 0 24 21
Parsed instruction at 80010C28: b .L_80010C38
Parsed label: L_80010C2C:
Parsed instruction at 80010C2C: rlwinm r5 r0 0 24 21
Parsed instruction at 80010C30: slwi r0 r6 8
Parsed instruction at 80010C34: or r0 r5 r0
Parsed label: L_80010C38:
Parsed instruction at 80010C38: sth r0 0x0(r4)
Parsed instruction at 80010C3C: lis r0 0x4000
Parsed instruction at 80010C40: addi r6 r29 0x6c
Parsed instruction at 80010C44: lwz r4 lbl_8001F008@sda21(r0)
Parsed instruction at 80010C48: lwz r5 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010C4C: or r0 r4 r0
Parsed instruction at 80010C50: stw r5 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010C54: stw r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80010C58: lwz r0 0x0(r31)
Parsed instruction at 80010C5C: lhz r4 0x6c(r29)
Parsed instruction at 80010C60: cmpwi r0 0x2
Parsed instruction at 80010C64: beq .L_80010C70
Parsed instruction at 80010C68: cmpwi r0 0x3
Parsed instruction at 80010C6C: bne .L_80010C7C
Parsed label: L_80010C70:
Parsed instruction at 80010C70: clrrwi r0 r4 1
Parsed instruction at 80010C74: ori r0 r0 0x1
Parsed instruction at 80010C78: b .L_80010C80
Parsed label: L_80010C7C:
Parsed instruction at 80010C7C: clrrwi r0 r4 1
Parsed label: L_80010C80:
Parsed instruction at 80010C80: sth r0 0x0(r6)
Parsed instruction at 80010C84: cmpwi r7 0x0
Parsed instruction at 80010C88: lwz r4 lbl_8001F008@sda21(r0)
Parsed instruction at 80010C8C: lwz r0 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010C90: ori r0 r0 0x200
Parsed instruction at 80010C94: stw r0 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010C98: stw r4 lbl_8001F008@sda21(r0)
Parsed instruction at 80010C9C: lhz r4 0x0(r24)
Parsed instruction at 80010CA0: lhz r5 0x0(r16)
Parsed instruction at 80010CA4: beq .L_80010CB0
Parsed instruction at 80010CA8: slwi r0 r5 1
Parsed instruction at 80010CAC: b .L_80010CB4
Parsed label: L_80010CB0:
Parsed instruction at 80010CB0: mr r0 r5
Parsed label: L_80010CB4:
Parsed instruction at 80010CB4: clrlwi r8 r0 16
Parsed instruction at 80010CB8: cmplw r8 r4
Parsed instruction at 80010CBC: bge .L_80010D0C
Parsed instruction at 80010CC0: slwi r6 r8 8
Parsed instruction at 80010CC4: subi r0 r6 0x1
Parsed instruction at 80010CC8: add r0 r4 r0
Parsed instruction at 80010CCC: divwu r0 r0 r4
Parsed instruction at 80010CD0: ori r0 r0 0x1000
Parsed instruction at 80010CD4: sth r0 0x4a(r29)
Parsed instruction at 80010CD8: lis r0 0x400
Parsed instruction at 80010CDC: lwz r6 lbl_8001F008@sda21(r0)
Parsed instruction at 80010CE0: lwz r7 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010CE4: or r0 r7 r0
Parsed instruction at 80010CE8: stw r0 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010CEC: stw r6 lbl_8001F008@sda21(r0)
Parsed instruction at 80010CF0: sth r8 0x70(r29)
Parsed instruction at 80010CF4: lwz r6 lbl_8001F008@sda21(r0)
Parsed instruction at 80010CF8: lwz r0 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010CFC: ori r0 r0 0x80
Parsed instruction at 80010D00: stw r0 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010D04: stw r6 lbl_8001F008@sda21(r0)
Parsed instruction at 80010D08: b .L_80010D2C
Parsed label: L_80010D0C:
Parsed instruction at 80010D0C: li r0 0x100
Parsed instruction at 80010D10: sth r0 0x4a(r29)
Parsed instruction at 80010D14: lis r0 0x400
Parsed instruction at 80010D18: lwz r6 lbl_8001F008@sda21(r0)
Parsed instruction at 80010D1C: lwz r7 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010D20: or r0 r7 r0
Parsed instruction at 80010D24: stw r0 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010D28: stw r6 lbl_8001F008@sda21(r0)
Parsed label: L_80010D2C:
Parsed instruction at 80010D2C: lhz r0 0x0(r3)
Parsed instruction at 80010D30: subfic r12 r4 0x2d0
Parsed instruction at 80010D34: lhz r6 0x1a(r30)
Parsed instruction at 80010D38: lis r3 0x1000
Parsed instruction at 80010D3C: lis r8 0x2000
Parsed instruction at 80010D40: sth r6 0x6(r29)
Parsed instruction at 80010D44: lis r9 0x400
Parsed instruction at 80010D48: lis r7 0x800
Parsed instruction at 80010D4C: lwz r10 lbl_8001F008@sda21(r0)
Parsed instruction at 80010D50: lis r6 0x10
Parsed instruction at 80010D54: lis r4 0x20
Parsed instruction at 80010D58: lwz r11 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010D5C: or r10 r10 r3
Parsed instruction at 80010D60: lis r3 0x4
Parsed instruction at 80010D64: stw r11 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010D68: stw r10 lbl_8001F008@sda21(r0)
Parsed instruction at 80010D6C: lbz r10 0x1d(r30)
Parsed instruction at 80010D70: lbz r11 0x1e(r30)
Parsed instruction at 80010D74: rlwimi r11 r10 8 16 23
Parsed instruction at 80010D78: sth r11 0x4(r29)
Parsed instruction at 80010D7C: lwz r10 lbl_8001F008@sda21(r0)
Parsed instruction at 80010D80: lwz r11 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010D84: or r8 r10 r8
Parsed instruction at 80010D88: stw r11 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010D8C: stw r8 lbl_8001F008@sda21(r0)
Parsed instruction at 80010D90: lbz r8 0x1f(r30)
Parsed instruction at 80010D94: lbz r10 0x1c(r30)
Parsed instruction at 80010D98: add r16 r8 r0
Parsed instruction at 80010D9C: lhz r11 0x20(r30)
Parsed instruction at 80010DA0: subi r16 r16 0x28
Parsed instruction at 80010DA4: clrlslwi r8 r16 23 7
Parsed instruction at 80010DA8: or r8 r10 r8
Parsed instruction at 80010DAC: sth r8 0xa(r29)
Parsed instruction at 80010DB0: add r8 r11 r0
Parsed instruction at 80010DB4: addi r0 r8 0x28
Parsed instruction at 80010DB8: lwz r10 lbl_8001F008@sda21(r0)
Parsed instruction at 80010DBC: subf r0 r12 r0
Parsed instruction at 80010DC0: srwi r8 r16 9
Parsed instruction at 80010DC4: lwz r11 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010DC8: slwi r0 r0 1
Parsed instruction at 80010DCC: or r9 r10 r9
Parsed instruction at 80010DD0: stw r11 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010DD4: or r0 r8 r0
Parsed instruction at 80010DD8: stw r9 lbl_8001F008@sda21(r0)
Parsed instruction at 80010DDC: sth r0 0x8(r29)
Parsed instruction at 80010DE0: lwz r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80010DE4: lwz r8 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010DE8: or r0 r0 r7
Parsed instruction at 80010DEC: stw r8 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010DF0: stw r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80010DF4: lhz r0 0x10(r30)
Parsed instruction at 80010DF8: lbz r7 0xc(r30)
Parsed instruction at 80010DFC: slwi r0 r0 5
Parsed instruction at 80010E00: or r0 r7 r0
Parsed instruction at 80010E04: sth r0 0x16(r29)
Parsed instruction at 80010E08: lwz r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80010E0C: lwz r7 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010E10: or r0 r0 r6
Parsed instruction at 80010E14: stw r7 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010E18: stw r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80010E1C: lhz r0 0x14(r30)
Parsed instruction at 80010E20: lbz r6 0xe(r30)
Parsed instruction at 80010E24: slwi r0 r0 5
Parsed instruction at 80010E28: or r0 r6 r0
Parsed instruction at 80010E2C: sth r0 0x14(r29)
Parsed instruction at 80010E30: lwz r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80010E34: lwz r6 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010E38: or r0 r0 r4
Parsed instruction at 80010E3C: stw r6 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010E40: stw r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80010E44: lhz r0 0x12(r30)
Parsed instruction at 80010E48: lbz r4 0xd(r30)
Parsed instruction at 80010E4C: slwi r0 r0 5
Parsed instruction at 80010E50: or r0 r4 r0
Parsed instruction at 80010E54: sth r0 0x1a(r29)
Parsed instruction at 80010E58: lwz r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80010E5C: lwz r4 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010E60: or r0 r0 r3
Parsed instruction at 80010E64: stw r4 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010E68: stw r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80010E6C: lhz r0 0x16(r30)
Parsed instruction at 80010E70: lbz r3 0xf(r30)
Parsed instruction at 80010E74: slwi r0 r0 5
Parsed instruction at 80010E78: or r0 r3 r0
Parsed instruction at 80010E7C: sth r0 0x18(r29)
Parsed instruction at 80010E80: lwz r3 lbl_8001F008@sda21(r0)
Parsed instruction at 80010E84: lis r0 0x8
Parsed instruction at 80010E88: addi r6 r29 0x11c
Parsed instruction at 80010E8C: lwz r4 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010E90: or r0 r3 r0
Parsed instruction at 80010E94: stw r4 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010E98: stw r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80010E9C: lhz r3 0x0(r27)
Parsed instruction at 80010EA0: lwz r4 0x0(r25)
Parsed instruction at 80010EA4: addi r0 r3 0xf
Parsed instruction at 80010EA8: lhz r3 0x0(r15)
Parsed instruction at 80010EAC: srawi r0 r0 4
Parsed instruction at 80010EB0: addze r0 r0
Parsed instruction at 80010EB4: cmpwi r4 0x0
Parsed instruction at 80010EB8: stb r0 0x11c(r29)
Parsed instruction at 80010EBC: bne .L_80010EC8
Parsed instruction at 80010EC0: lbz r4 0x0(r6)
Parsed instruction at 80010EC4: b .L_80010ED0
Parsed label: L_80010EC8:
Parsed instruction at 80010EC8: lbz r0 0x0(r6)
Parsed instruction at 80010ECC: clrlslwi r4 r0 25 1
Parsed label: L_80010ED0:
Parsed instruction at 80010ED0: srawi r0 r3 4
Parsed instruction at 80010ED4: stb r4 0x11d(r29)
Parsed instruction at 80010ED8: addze r0 r0
Parsed instruction at 80010EDC: slwi r0 r0 4
Parsed instruction at 80010EE0: subfc r0 r0 r3
Parsed instruction at 80010EE4: stb r0 0x12c(r29)
Parsed instruction at 80010EE8: addi r0 r5 0xf
Parsed instruction at 80010EEC: lis r3 0x800
Parsed instruction at 80010EF0: lbz r4 0x12c(r29)
Parsed instruction at 80010EF4: add r0 r4 r0
Parsed instruction at 80010EF8: srawi r0 r0 4
Parsed instruction at 80010EFC: addze r0 r0
Parsed instruction at 80010F00: stb r0 0x11e(r29)
Parsed instruction at 80010F04: lbz r0 0x11e(r29)
Parsed instruction at 80010F08: lbz r4 0x11d(r29)
Parsed instruction at 80010F0C: rlwimi r4 r0 8 16 23
Parsed instruction at 80010F10: sth r4 0x48(r29)
Parsed instruction at 80010F14: lwz r4 lbl_8001F008@sda21(r0)
Parsed instruction at 80010F18: lwz r0 lbl_8001F028@sda21(r0)
Parsed instruction at 80010F1C: lwz r5 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010F20: cmplwi r0 0x0
Parsed instruction at 80010F24: or r0 r5 r3
Parsed instruction at 80010F28: stw r0 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010F2C: stw r4 lbl_8001F008@sda21(r0)
Parsed instruction at 80010F30: beq .L_80010F4C
Parsed instruction at 80010F34: addi r3 r29 0xf0
Parsed instruction at 80010F38: addi r4 r29 0x124
Parsed instruction at 80010F3C: addi r5 r29 0x128
Parsed instruction at 80010F40: addi r6 r29 0x13c
Parsed instruction at 80010F44: addi r7 r29 0x140
Parsed instruction at 80010F48: bl fn_80010384
Parsed label: L_80010F4C:
Parsed instruction at 80010F4C: lwz r0 0x130(r29)
Parsed instruction at 80010F50: stw r0 0x8(r1)
Parsed instruction at 80010F54: lhz r3 0x0(r19)
Parsed instruction at 80010F58: lhz r4 0x0(r20)
Parsed instruction at 80010F5C: lbz r5 0x0(r30)
Parsed instruction at 80010F60: lhz r6 0x2(r30)
Parsed instruction at 80010F64: lhz r7 0x4(r30)
Parsed instruction at 80010F68: lhz r8 0x6(r30)
Parsed instruction at 80010F6C: lhz r9 0x8(r30)
Parsed instruction at 80010F70: lhz r10 0xa(r30)
Parsed instruction at 80010F74: bl fn_80010658
Parsed instruction at 80010F78: mr r3 r14
Parsed instruction at 80010F7C: bl OSRestoreInterrupts
Parsed instruction at 80010F80: lmw r14 0x30(r1)
Parsed instruction at 80010F84: lwz r0 0x7c(r1)
Parsed instruction at 80010F88: addi r1 r1 0x78
Parsed instruction at 80010F8C: mtlr r0
Parsed instruction at 80010F90: blr 
End of function: fn_800107F8, 536 instructions
Parsed function: fn_80010F94 at 0x80010F94
Parsed instruction at 80010F94: mflr r0
Parsed instruction at 80010F98: stw r0 0x4(r1)
Parsed instruction at 80010F9C: stwu r1 -0x28(r1)
Parsed instruction at 80010FA0: stmw r27 0x14(r1)
Parsed instruction at 80010FA4: bl OSDisableInterrupts
Parsed instruction at 80010FA8: lwz r7 lbl_8001F010@sda21(r0)
Parsed instruction at 80010FAC: lis r4 lbl_8001CB80@ha
Parsed instruction at 80010FB0: lis r5 lbl_8001CB08@ha
Parsed instruction at 80010FB4: lwz r6 lbl_8001F000@sda21(r0)
Parsed instruction at 80010FB8: li r0 0x0
Parsed instruction at 80010FBC: addi r29 r4 lbl_8001CB80@l
Parsed instruction at 80010FC0: or r6 r7 r6
Parsed instruction at 80010FC4: stw r6 lbl_8001F010@sda21(r0)
Parsed instruction at 80010FC8: addi r31 r5 lbl_8001CB08@l
Parsed instruction at 80010FCC: addi r30 r3 0x0
Parsed instruction at 80010FD0: stw r0 lbl_8001F000@sda21(r0)
Parsed instruction at 80010FD4: lwz r4 lbl_8001F018@sda21(r0)
Parsed instruction at 80010FD8: lwz r5 lbl_8001F01C@sda21(r0)
Parsed instruction at 80010FDC: lwz r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80010FE0: lwz r3 lbl_8001F00C@sda21(r0)
Parsed instruction at 80010FE4: or r0 r4 r0
Parsed instruction at 80010FE8: or r3 r5 r3
Parsed instruction at 80010FEC: stw r3 lbl_8001F01C@sda21(r0)
Parsed instruction at 80010FF0: stw r0 lbl_8001F018@sda21(r0)
Parsed instruction at 80010FF4: b .L_80011070
Parsed label: L_80010FF8:
Parsed instruction at 80010FF8: lwz r3 lbl_8001F008@sda21(r0)
Parsed instruction at 80010FFC: li r5 0x20
Parsed instruction at 80011000: lwz r27 lbl_8001F00C@sda21(r0)
Parsed instruction at 80011004: addi r4 r27 0x0
Parsed instruction at 80011008: bl fn_800118EC
Parsed instruction at 8001100C: cntlzw r4 r4
Parsed instruction at 80011010: cmpwi r4 0x20
Parsed instruction at 80011014: li r0 -0x1
Parsed instruction at 80011018: and r0 r27 r0
Parsed instruction at 8001101C: bge .L_80011024
Parsed instruction at 80011020: b .L_8001102C
Parsed label: L_80011024:
Parsed instruction at 80011024: cntlzw r3 r0
Parsed instruction at 80011028: addi r4 r3 0x20
Parsed label: L_8001102C:
Parsed instruction at 8001102C: slwi r5 r4 1
Parsed instruction at 80011030: add r3 r31 r5
Parsed instruction at 80011034: lhz r0 0x0(r3)
Parsed instruction at 80011038: add r3 r29 r5
Parsed instruction at 8001103C: subfic r5 r4 0x3f
Parsed instruction at 80011040: sth r0 0x0(r3)
Parsed instruction at 80011044: li r3 0x0
Parsed instruction at 80011048: li r4 0x1
Parsed instruction at 8001104C: bl fn_800118C8
Parsed instruction at 80011050: lwz r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80011054: nor r5 r3 r3
Parsed instruction at 80011058: nor r4 r4 r4
Parsed instruction at 8001105C: lwz r3 lbl_8001F00C@sda21(r0)
Parsed instruction at 80011060: and r0 r0 r5
Parsed instruction at 80011064: and r3 r3 r4
Parsed instruction at 80011068: stw r3 lbl_8001F00C@sda21(r0)
Parsed instruction at 8001106C: stw r0 lbl_8001F008@sda21(r0)
Parsed label: L_80011070:
Parsed instruction at 80011070: lwz r0 lbl_8001F008@sda21(r0)
Parsed instruction at 80011074: li r3 0x0
Parsed instruction at 80011078: lwz r4 lbl_8001F00C@sda21(r0)
Parsed instruction at 8001107C: xor r0 r0 r3
Parsed instruction at 80011080: xor r3 r4 r3
Parsed instruction at 80011084: or. r0 r3 r0
Parsed instruction at 80011088: bne .L_80010FF8
Parsed instruction at 8001108C: li r0 0x1
Parsed instruction at 80011090: stw r0 lbl_8001EFE4@sda21(r0)
Parsed instruction at 80011094: mr r3 r30
Parsed instruction at 80011098: bl OSRestoreInterrupts
Parsed instruction at 8001109C: lmw r27 0x14(r1)
Parsed instruction at 800110A0: lwz r0 0x2c(r1)
Parsed instruction at 800110A4: addi r1 r1 0x28
Parsed instruction at 800110A8: mtlr r0
Parsed instruction at 800110AC: blr 
End of function: fn_80010F94, 75 instructions
Parsed function: fn_800110B0 at 0x800110B0
Parsed instruction at 800110B0: mflr r0
Parsed instruction at 800110B4: lis r4 lbl_8001CB08@ha
Parsed instruction at 800110B8: stw r0 0x4(r1)
Parsed instruction at 800110BC: stwu r1 -0x18(r1)
Parsed instruction at 800110C0: stw r31 0x14(r1)
Parsed instruction at 800110C4: addi r31 r4 lbl_8001CB08@l
Parsed instruction at 800110C8: stw r30 0x10(r1)
Parsed instruction at 800110CC: addi r30 r3 0x0
Parsed instruction at 800110D0: bl OSDisableInterrupts
Parsed instruction at 800110D4: stw r30 0x120(r31)
Parsed instruction at 800110D8: li r0 0x1
Parsed instruction at 800110DC: addi r30 r3 0x0
Parsed instruction at 800110E0: stw r0 lbl_8001F028@sda21(r0)
Parsed instruction at 800110E4: addi r3 r31 0xf0
Parsed instruction at 800110E8: addi r4 r31 0x124
Parsed instruction at 800110EC: addi r5 r31 0x128
Parsed instruction at 800110F0: addi r6 r31 0x13c
Parsed instruction at 800110F4: addi r7 r31 0x140
Parsed instruction at 800110F8: bl fn_80010384
Parsed instruction at 800110FC: mr r3 r30
Parsed instruction at 80011100: bl OSRestoreInterrupts
Parsed instruction at 80011104: lwz r0 0x1c(r1)
Parsed instruction at 80011108: lwz r31 0x14(r1)
Parsed instruction at 8001110C: lwz r30 0x10(r1)
Parsed instruction at 80011110: addi r1 r1 0x18
Parsed instruction at 80011114: mtlr r0
Parsed instruction at 80011118: blr 
End of function: fn_800110B0, 27 instructions
Parsed function: fn_8001111C at 0x8001111C
Parsed instruction at 8001111C: mflr r0
Parsed instruction at 80011120: lis r4 lbl_8001CB08@ha
Parsed instruction at 80011124: stw r0 0x4(r1)
Parsed instruction at 80011128: stwu r1 -0x20(r1)
Parsed instruction at 8001112C: stw r31 0x1c(r1)
Parsed instruction at 80011130: addi r31 r4 lbl_8001CB08@l
Parsed instruction at 80011134: stw r30 0x18(r1)
Parsed instruction at 80011138: addi r30 r3 0x0
Parsed instruction at 8001113C: bl OSDisableInterrupts
Parsed instruction at 80011140: stw r30 0x130(r31)
Parsed instruction at 80011144: mr r30 r3
Parsed instruction at 80011148: lwz r10 0x144(r31)
Parsed instruction at 8001114C: lwz r0 0x130(r31)
Parsed instruction at 80011150: stw r0 0x8(r1)
Parsed instruction at 80011154: lhz r3 0xfa(r31)
Parsed instruction at 80011158: lhz r4 0xf6(r31)
Parsed instruction at 8001115C: lbz r5 0x0(r10)
Parsed instruction at 80011160: lhz r6 0x2(r10)
Parsed instruction at 80011164: lhz r7 0x4(r10)
Parsed instruction at 80011168: lhz r8 0x6(r10)
Parsed instruction at 8001116C: lhz r9 0x8(r10)
Parsed instruction at 80011170: lhz r10 0xa(r10)
Parsed instruction at 80011174: bl fn_80010658
Parsed instruction at 80011178: mr r3 r30
Parsed instruction at 8001117C: bl OSRestoreInterrupts
Parsed instruction at 80011180: lwz r0 0x24(r1)
Parsed instruction at 80011184: lwz r31 0x1c(r1)
Parsed instruction at 80011188: lwz r30 0x18(r1)
Parsed instruction at 8001118C: addi r1 r1 0x20
Parsed instruction at 80011190: mtlr r0
Parsed instruction at 80011194: blr 
End of function: fn_8001111C, 31 instructions
Parsed function: fn_80011198 at 0x80011198
Parsed instruction at 80011198: lis r3 0xcc00
Parsed instruction at 8001119C: addi r7 r3 0x2000
Parsed instruction at 800111A0: lhzu r0 0x2c(r7)
Parsed instruction at 800111A4: addi r4 r3 0x2000
Parsed instruction at 800111A8: clrlwi r5 r0 21
Parsed label: L_800111AC:
Parsed instruction at 800111AC: lhz r0 0x0(r7)
Parsed instruction at 800111B0: mr r6 r5
Parsed instruction at 800111B4: lhz r3 0x2e(r4)
Parsed instruction at 800111B8: clrlwi r5 r0 21
Parsed instruction at 800111BC: cmplw r6 r5
Parsed instruction at 800111C0: clrlwi r3 r3 21
Parsed instruction at 800111C4: bne .L_800111AC
Parsed instruction at 800111C8: lwz r6 lbl_8001F020@sda21(r0)
Parsed instruction at 800111CC: subi r0 r5 0x1
Parsed instruction at 800111D0: subi r4 r3 0x1
Parsed instruction at 800111D4: lhz r3 0x1a(r6)
Parsed instruction at 800111D8: slwi r5 r0 1
Parsed instruction at 800111DC: lhz r0 0x18(r6)
Parsed instruction at 800111E0: divwu r3 r4 r3
Parsed instruction at 800111E4: add r3 r5 r3
Parsed instruction at 800111E8: cmplw r3 r0
Parsed instruction at 800111EC: bge .L_800111F8
Parsed instruction at 800111F0: li r3 0x1
Parsed instruction at 800111F4: blr 
Parsed label: L_800111F8:
Parsed instruction at 800111F8: li r3 0x0
Parsed instruction at 800111FC: blr 
End of function: fn_80011198, 28 instructions
Parsed function: fn_80011200 at 0x80011200
Parsed instruction at 80011200: mflr r0
Parsed instruction at 80011204: stw r0 0x4(r1)
Parsed instruction at 80011208: stwu r1 -0x10(r1)
Parsed instruction at 8001120C: stw r31 0xc(r1)
Parsed instruction at 80011210: stw r30 0x8(r1)
Parsed instruction at 80011214: lwz r31 lbl_8001F020@sda21(r0)
Parsed instruction at 80011218: bl OSDisableInterrupts
Parsed instruction at 8001121C: lis r4 0xcc00
Parsed instruction at 80011220: addi r8 r4 0x2000
Parsed instruction at 80011224: lhzu r0 0x2c(r8)
Parsed instruction at 80011228: addi r5 r4 0x2000
Parsed instruction at 8001122C: clrlwi r6 r0 21
Parsed label: L_80011230:
Parsed instruction at 80011230: lhz r0 0x0(r8)
Parsed instruction at 80011234: mr r7 r6
Parsed instruction at 80011238: lhz r4 0x2e(r5)
Parsed instruction at 8001123C: clrlwi r6 r0 21
Parsed instruction at 80011240: cmplw r7 r6
Parsed instruction at 80011244: clrlwi r7 r4 21
Parsed instruction at 80011248: bne .L_80011230
Parsed instruction at 8001124C: lwz r4 lbl_8001F020@sda21(r0)
Parsed instruction at 80011250: subi r5 r7 0x1
Parsed instruction at 80011254: subi r6 r6 0x1
Parsed instruction at 80011258: lhz r0 0x1a(r4)
Parsed instruction at 8001125C: slwi r4 r6 1
Parsed instruction at 80011260: divwu r0 r5 r0
Parsed instruction at 80011264: add r30 r4 r0
Parsed instruction at 80011268: bl OSRestoreInterrupts
Parsed instruction at 8001126C: lhz r0 0x18(r31)
Parsed instruction at 80011270: cmplw r30 r0
Parsed instruction at 80011274: blt .L_8001127C
Parsed instruction at 80011278: subf r30 r0 r30
Parsed label: L_8001127C:
Parsed instruction at 8001127C: srwi r3 r30 1
Parsed instruction at 80011280: lwz r0 0x14(r1)
Parsed instruction at 80011284: lwz r31 0xc(r1)
Parsed instruction at 80011288: lwz r30 0x8(r1)
Parsed instruction at 8001128C: addi r1 r1 0x10
Parsed instruction at 80011290: mtlr r0
Parsed instruction at 80011294: blr 
End of function: fn_80011200, 40 instructions
Parsed function: VIGetTvFormat at 0x80011298
Parsed instruction at 80011298: mflr r0
Parsed instruction at 8001129C: stw r0 0x4(r1)
Parsed instruction at 800112A0: stwu r1 -0x10(r1)
Parsed instruction at 800112A4: stw r31 0xc(r1)
Parsed instruction at 800112A8: bl OSDisableInterrupts
Parsed instruction at 800112AC: lwz r0 CurrTvMode_8001F024@sda21(r0)
Parsed instruction at 800112B0: cmpwi r0 0x3
Parsed instruction at 800112B4: beq .L_800112E4
Parsed instruction at 800112B8: bge .L_800112D4
Parsed instruction at 800112BC: cmpwi r0 0x1
Parsed instruction at 800112C0: beq .L_800112EC
Parsed instruction at 800112C4: bge .L_800112F4
Parsed instruction at 800112C8: cmpwi r0 0x0
Parsed instruction at 800112CC: bge .L_800112E4
Parsed instruction at 800112D0: b .L_800112F8
Parsed label: L_800112D4:
Parsed instruction at 800112D4: cmpwi r0 0x5
Parsed instruction at 800112D8: beq .L_800112F4
Parsed instruction at 800112DC: bge .L_800112F8
Parsed instruction at 800112E0: b .L_800112EC
Parsed label: L_800112E4:
Parsed instruction at 800112E4: li r31 0x0
Parsed instruction at 800112E8: b .L_800112F8
Parsed label: L_800112EC:
Parsed instruction at 800112EC: li r31 0x1
Parsed instruction at 800112F0: b .L_800112F8
Parsed label: L_800112F4:
Parsed instruction at 800112F4: mr r31 r0
Parsed label: L_800112F8:
Parsed instruction at 800112F8: bl OSRestoreInterrupts
Parsed instruction at 800112FC: mr r3 r31
Parsed instruction at 80011300: lwz r0 0x14(r1)
Parsed instruction at 80011304: lwz r31 0xc(r1)
Parsed instruction at 80011308: addi r1 r1 0x10
Parsed instruction at 8001130C: mtlr r0
Parsed instruction at 80011310: blr 
End of function: VIGetTvFormat, 36 instructions
Parsed function: __PADDisableRecalibration at 0x80011314
Parsed instruction at 80011314: mflr r0
Parsed instruction at 80011318: stw r0 0x4(r1)
Parsed instruction at 8001131C: stwu r1 -0x18(r1)
Parsed instruction at 80011320: stw r31 0x14(r1)
Parsed instruction at 80011324: stw r30 0x10(r1)
Parsed instruction at 80011328: mr r30 r3
Parsed instruction at 8001132C: bl OSDisableInterrupts
Parsed instruction at 80011330: lis r4 0x8000
Parsed instruction at 80011334: lbz r0 0x30e3(r4)
Parsed instruction at 80011338: rlwinm. r0 r0 0 25 25
Parsed instruction at 8001133C: beq .L_80011348
Parsed instruction at 80011340: li r31 0x1
Parsed instruction at 80011344: b .L_8001134C
Parsed label: L_80011348:
Parsed instruction at 80011348: li r31 0x0
Parsed label: L_8001134C:
Parsed instruction at 8001134C: lis r4 0x8000
Parsed instruction at 80011350: lbz r0 0x30e3(r4)
Parsed instruction at 80011354: andi. r0 r0 0xbf
Parsed instruction at 80011358: cmpwi r30 0x0
Parsed instruction at 8001135C: stb r0 0x30e3(r4)
Parsed instruction at 80011360: beq .L_80011370
Parsed instruction at 80011364: lbz r0 0x30e3(r4)
Parsed instruction at 80011368: ori r0 r0 0x40
Parsed instruction at 8001136C: stb r0 0x30e3(r4)
Parsed label: L_80011370:
Parsed instruction at 80011370: bl OSRestoreInterrupts
Parsed instruction at 80011374: mr r3 r31
Parsed instruction at 80011378: lwz r0 0x1c(r1)
Parsed instruction at 8001137C: lwz r31 0x14(r1)
Parsed instruction at 80011380: lwz r30 0x10(r1)
Parsed instruction at 80011384: addi r1 r1 0x18
Parsed instruction at 80011388: mtlr r0
Parsed instruction at 8001138C: blr 
End of function: __PADDisableRecalibration, 34 instructions
Parsed function: __va_arg at 0x80011390
Parsed instruction at 80011390: clrlwi r0 r4 24
Parsed instruction at 80011394: lbz r6 0x0(r3)
Parsed instruction at 80011398: cmplwi r0 0x4
Parsed instruction at 8001139C: addi r7 r3 0x0
Parsed instruction at 800113A0: extsb r6 r6
Parsed instruction at 800113A4: li r5 0x8
Parsed instruction at 800113A8: li r8 0x4
Parsed instruction at 800113AC: li r9 0x1
Parsed instruction at 800113B0: li r10 0x0
Parsed instruction at 800113B4: li r11 0x0
Parsed instruction at 800113B8: li r12 0x4
Parsed instruction at 800113BC: bne .L_800113DC
Parsed instruction at 800113C0: lwz r4 0x4(r3)
Parsed instruction at 800113C4: addi r0 r4 0xf
Parsed instruction at 800113C8: clrrwi r4 r0 4
Parsed instruction at 800113CC: addi r0 r4 0x10
Parsed instruction at 800113D0: stw r0 0x4(r3)
Parsed instruction at 800113D4: mr r3 r4
Parsed instruction at 800113D8: blr 
Parsed label: L_800113DC:
Parsed instruction at 800113DC: cmplwi r0 0x3
Parsed instruction at 800113E0: bne .L_800113FC
Parsed instruction at 800113E4: lbz r6 0x1(r3)
Parsed instruction at 800113E8: addi r7 r3 0x1
Parsed instruction at 800113EC: li r8 0x8
Parsed instruction at 800113F0: extsb r6 r6
Parsed instruction at 800113F4: li r11 0x20
Parsed instruction at 800113F8: li r12 0x8
Parsed label: L_800113FC:
Parsed instruction at 800113FC: clrlwi r0 r4 24
Parsed instruction at 80011400: cmplwi r0 0x2
Parsed instruction at 80011404: bne .L_80011420
Parsed instruction at 80011408: clrlwi. r0 r6 31
Parsed instruction at 8001140C: li r8 0x8
Parsed instruction at 80011410: li r5 0x7
Parsed instruction at 80011414: beq .L_8001141C
Parsed instruction at 80011418: li r10 0x1
Parsed label: L_8001141C:
Parsed instruction at 8001141C: li r9 0x2
Parsed label: L_80011420:
Parsed instruction at 80011420: cmpw r6 r5
Parsed instruction at 80011424: bge .L_80011448
Parsed instruction at 80011428: add r6 r6 r10
Parsed instruction at 8001142C: lwz r5 0x8(r3)
Parsed instruction at 80011430: mullw r3 r6 r12
Parsed instruction at 80011434: add r0 r6 r9
Parsed instruction at 80011438: add r6 r11 r3
Parsed instruction at 8001143C: stb r0 0x0(r7)
Parsed instruction at 80011440: add r6 r5 r6
Parsed instruction at 80011444: b .L_80011470
Parsed label: L_80011448:
Parsed instruction at 80011448: li r0 0x8
Parsed instruction at 8001144C: stb r0 0x0(r7)
Parsed instruction at 80011450: subi r0 r8 0x1
Parsed instruction at 80011454: nor r6 r0 r0
Parsed instruction at 80011458: lwz r0 0x4(r3)
Parsed instruction at 8001145C: add r5 r8 r0
Parsed instruction at 80011460: subi r0 r5 0x1
Parsed instruction at 80011464: and r6 r6 r0
Parsed instruction at 80011468: add r0 r6 r8
Parsed instruction at 8001146C: stw r0 0x4(r3)
Parsed label: L_80011470:
Parsed instruction at 80011470: clrlwi. r0 r4 24
Parsed instruction at 80011474: bne .L_8001147C
Parsed instruction at 80011478: lwz r6 0x0(r6)
Parsed label: L_8001147C:
Parsed instruction at 8001147C: mr r3 r6
Parsed instruction at 80011480: blr 
End of function: __va_arg, 68 instructions
Parsed function: __destroy_global_chain at 0x80011484
Parsed instruction at 80011484: mflr r0
Parsed instruction at 80011488: stw r0 0x4(r1)
Parsed instruction at 8001148C: stwu r1 -0x8(r1)
Parsed instruction at 80011490: b .L_800114B0
Parsed label: L_80011494:
Parsed instruction at 80011494: lwz r0 0x0(r3)
Parsed instruction at 80011498: li r4 -0x1
Parsed instruction at 8001149C: stw r0 __global_destructor_chain@sda21(r0)
Parsed instruction at 800114A0: lwz r12 0x4(r3)
Parsed instruction at 800114A4: lwz r3 0x8(r3)
Parsed instruction at 800114A8: mtlr r12
Parsed instruction at 800114AC: blrl 
Parsed label: L_800114B0:
Parsed instruction at 800114B0: lwz r3 __global_destructor_chain@sda21(r0)
Parsed instruction at 800114B4: cmplwi r3 0x0
Parsed instruction at 800114B8: bne .L_80011494
Parsed instruction at 800114BC: lwz r0 0xc(r1)
Parsed instruction at 800114C0: addi r1 r1 0x8
Parsed instruction at 800114C4: mtlr r0
Parsed instruction at 800114C8: blr 
End of function: __destroy_global_chain, 20 instructions
Parsed function: fn_800114CC at 0x800114CC
Parsed instruction at 800114CC: stwu r1 -0x10(r1)
Parsed instruction at 800114D0: lis r4 lbl_8001A460@h
Parsed instruction at 800114D4: ori r4 r4 lbl_8001A460@l
Parsed instruction at 800114D8: li r3 0x0
Parsed instruction at 800114DC: lfd f0 0x0(r4)
Parsed instruction at 800114E0: lfd f3 0x8(r4)
Parsed instruction at 800114E4: lfd f4 0x10(r4)
Parsed instruction at 800114E8: fcmpu cr0 f1 f0
Parsed instruction at 800114EC: fcmpu cr6 f1 f3
Parsed instruction at 800114F0: blt .L_80011520
Parsed instruction at 800114F4: subi r3 r3 0x1
Parsed instruction at 800114F8: bge cr6 .L_80011520
Parsed instruction at 800114FC: fcmpu cr7 f1 f4
Parsed instruction at 80011500: fmr f2 f1
Parsed instruction at 80011504: blt cr7 .L_8001150C
Parsed instruction at 80011508: fsub f2 f1 f4
Parsed label: L_8001150C:
Parsed instruction at 8001150C: fctiwz f2 f2
Parsed instruction at 80011510: stfd f2 0x8(r1)
Parsed instruction at 80011514: lwz r3 0xc(r1)
Parsed instruction at 80011518: blt cr7 .L_80011520
Parsed instruction at 8001151C: addis r3 r3 0x8000
Parsed label: L_80011520:
Parsed instruction at 80011520: addi r1 r1 0x10
Parsed instruction at 80011524: blr 
End of function: fn_800114CC, 25 instructions
Parsed function: __save_gpr at 0x80011528
Warning: Unrecognized line: .sym _savegpr_14, global
Parsed instruction at 80011528: stw r14 -0x48(r11)
Warning: Unrecognized line: .sym _savegpr_15, global
Parsed instruction at 8001152C: stw r15 -0x44(r11)
Warning: Unrecognized line: .sym _savegpr_16, global
Parsed instruction at 80011530: stw r16 -0x40(r11)
Warning: Unrecognized line: .sym _savegpr_17, global
Parsed instruction at 80011534: stw r17 -0x3c(r11)
Warning: Unrecognized line: .sym _savegpr_18, global
Parsed instruction at 80011538: stw r18 -0x38(r11)
Warning: Unrecognized line: .sym _savegpr_19, global
Parsed instruction at 8001153C: stw r19 -0x34(r11)
Warning: Unrecognized line: .sym _savegpr_20, global
Parsed instruction at 80011540: stw r20 -0x30(r11)
Warning: Unrecognized line: .sym _savegpr_21, global
Parsed instruction at 80011544: stw r21 -0x2c(r11)
Warning: Unrecognized line: .sym _savegpr_22, global
Parsed instruction at 80011548: stw r22 -0x28(r11)
Warning: Unrecognized line: .sym _savegpr_23, global
Parsed instruction at 8001154C: stw r23 -0x24(r11)
Warning: Unrecognized line: .sym _savegpr_24, global
Parsed instruction at 80011550: stw r24 -0x20(r11)
Warning: Unrecognized line: .sym _savegpr_25, global
Parsed instruction at 80011554: stw r25 -0x1c(r11)
Warning: Unrecognized line: .sym _savegpr_26, global
Parsed instruction at 80011558: stw r26 -0x18(r11)
Warning: Unrecognized line: .sym _savegpr_27, global
Parsed instruction at 8001155C: stw r27 -0x14(r11)
Warning: Unrecognized line: .sym _savegpr_28, global
Parsed instruction at 80011560: stw r28 -0x10(r11)
Warning: Unrecognized line: .sym _savegpr_29, global
Parsed instruction at 80011564: stw r29 -0xc(r11)
Warning: Unrecognized line: .sym _savegpr_30, global
Parsed instruction at 80011568: stw r30 -0x8(r11)
Warning: Unrecognized line: .sym _savegpr_31, global
Parsed instruction at 8001156C: stw r31 -0x4(r11)
Parsed instruction at 80011570: blr 
End of function: __save_gpr, 19 instructions
Parsed function: __restore_gpr at 0x80011574
Warning: Unrecognized line: .sym _restgpr_14, global
Parsed instruction at 80011574: lwz r14 -0x48(r11)
Warning: Unrecognized line: .sym _restgpr_15, global
Parsed instruction at 80011578: lwz r15 -0x44(r11)
Warning: Unrecognized line: .sym _restgpr_16, global
Parsed instruction at 8001157C: lwz r16 -0x40(r11)
Warning: Unrecognized line: .sym _restgpr_17, global
Parsed instruction at 80011580: lwz r17 -0x3c(r11)
Warning: Unrecognized line: .sym _restgpr_18, global
Parsed instruction at 80011584: lwz r18 -0x38(r11)
Warning: Unrecognized line: .sym _restgpr_19, global
Parsed instruction at 80011588: lwz r19 -0x34(r11)
Warning: Unrecognized line: .sym _restgpr_20, global
Parsed instruction at 8001158C: lwz r20 -0x30(r11)
Warning: Unrecognized line: .sym _restgpr_21, global
Parsed instruction at 80011590: lwz r21 -0x2c(r11)
Warning: Unrecognized line: .sym _restgpr_22, global
Parsed instruction at 80011594: lwz r22 -0x28(r11)
Warning: Unrecognized line: .sym _restgpr_23, global
Parsed instruction at 80011598: lwz r23 -0x24(r11)
Warning: Unrecognized line: .sym _restgpr_24, global
Parsed instruction at 8001159C: lwz r24 -0x20(r11)
Warning: Unrecognized line: .sym _restgpr_25, global
Parsed instruction at 800115A0: lwz r25 -0x1c(r11)
Warning: Unrecognized line: .sym _restgpr_26, global
Parsed instruction at 800115A4: lwz r26 -0x18(r11)
Warning: Unrecognized line: .sym _restgpr_27, global
Parsed instruction at 800115A8: lwz r27 -0x14(r11)
Warning: Unrecognized line: .sym _restgpr_28, global
Parsed instruction at 800115AC: lwz r28 -0x10(r11)
Warning: Unrecognized line: .sym _restgpr_29, global
Parsed instruction at 800115B0: lwz r29 -0xc(r11)
Warning: Unrecognized line: .sym _restgpr_30, global
Parsed instruction at 800115B4: lwz r30 -0x8(r11)
Warning: Unrecognized line: .sym _restgpr_31, global
Parsed instruction at 800115B8: lwz r31 -0x4(r11)
Parsed instruction at 800115BC: blr 
End of function: __restore_gpr, 19 instructions
Parsed function: __div2u at 0x800115C0
Parsed instruction at 800115C0: cmpwi r3 0x0
Parsed instruction at 800115C4: cntlzw r0 r3
Parsed instruction at 800115C8: cntlzw r9 r4
Parsed instruction at 800115CC: bne .L_800115D4
Parsed instruction at 800115D0: addi r0 r9 0x20
Parsed label: L_800115D4:
Parsed instruction at 800115D4: cmpwi r5 0x0
Parsed instruction at 800115D8: cntlzw r9 r5
Parsed instruction at 800115DC: cntlzw r10 r6
Parsed instruction at 800115E0: bne .L_800115E8
Parsed instruction at 800115E4: addi r9 r10 0x20
Parsed label: L_800115E8:
Parsed instruction at 800115E8: cmpw r0 r9
Parsed instruction at 800115EC: subfic r10 r0 0x40
Parsed instruction at 800115F0: bgt .L_800116A0
Parsed instruction at 800115F4: addi r9 r9 0x1
Parsed instruction at 800115F8: subfic r9 r9 0x40
Parsed instruction at 800115FC: add r0 r0 r9
Parsed instruction at 80011600: subf r9 r9 r10
Parsed instruction at 80011604: mtctr r9
Parsed instruction at 80011608: cmpwi r9 0x20
Parsed instruction at 8001160C: subi r7 r9 0x20
Parsed instruction at 80011610: blt .L_80011620
Parsed instruction at 80011614: srw r8 r3 r7
Parsed instruction at 80011618: li r7 0x0
Parsed instruction at 8001161C: b .L_80011634
Parsed label: L_80011620:
Parsed instruction at 80011620: srw r8 r4 r9
Parsed instruction at 80011624: subfic r7 r9 0x20
Parsed instruction at 80011628: slw r7 r3 r7
Parsed instruction at 8001162C: or r8 r8 r7
Parsed instruction at 80011630: srw r7 r3 r9
Parsed label: L_80011634:
Parsed instruction at 80011634: cmpwi r0 0x20
Parsed instruction at 80011638: subic r9 r0 0x20
Parsed instruction at 8001163C: blt .L_8001164C
Parsed instruction at 80011640: slw r3 r4 r9
Parsed instruction at 80011644: li r4 0x0
Parsed instruction at 80011648: b .L_80011660
Parsed label: L_8001164C:
Parsed instruction at 8001164C: slw r3 r3 r0
Parsed instruction at 80011650: subfic r9 r0 0x20
Parsed instruction at 80011654: srw r9 r4 r9
Parsed instruction at 80011658: or r3 r3 r9
Parsed instruction at 8001165C: slw r4 r4 r0
Parsed label: L_80011660:
Parsed instruction at 80011660: li r10 -0x1
Parsed instruction at 80011664: addic r7 r7 0x0
Parsed label: L_80011668:
Parsed instruction at 80011668: adde r4 r4 r4
Parsed instruction at 8001166C: adde r3 r3 r3
Parsed instruction at 80011670: adde r8 r8 r8
Parsed instruction at 80011674: adde r7 r7 r7
Parsed instruction at 80011678: subfc r0 r6 r8
Parsed instruction at 8001167C: subfe. r9 r5 r7
Parsed instruction at 80011680: blt .L_80011690
Parsed instruction at 80011684: mr r8 r0
Parsed instruction at 80011688: mr r7 r9
Parsed instruction at 8001168C: addic r0 r10 0x1
Parsed label: L_80011690:
Parsed instruction at 80011690: bdnz .L_80011668
Parsed instruction at 80011694: adde r4 r4 r4
Parsed instruction at 80011698: adde r3 r3 r3
Parsed instruction at 8001169C: blr 
Parsed label: L_800116A0:
Parsed instruction at 800116A0: li r4 0x0
Parsed instruction at 800116A4: li r3 0x0
Parsed instruction at 800116A8: blr 
End of function: __div2u, 68 instructions
Parsed function: fn_800116AC at 0x800116AC
Parsed instruction at 800116AC: stwu r1 -0x10(r1)
Parsed instruction at 800116B0: clrrwi. r9 r3 31
Parsed instruction at 800116B4: beq .L_800116C0
Parsed instruction at 800116B8: subfic r4 r4 0x0
Parsed instruction at 800116BC: subfze r3 r3
Parsed label: L_800116C0:
Parsed instruction at 800116C0: stw r9 0x8(r1)
Parsed instruction at 800116C4: clrrwi. r9 r5 31
Parsed instruction at 800116C8: beq .L_800116D4
Parsed instruction at 800116CC: subfic r6 r6 0x0
Parsed instruction at 800116D0: subfze r5 r5
Parsed label: L_800116D4:
Parsed instruction at 800116D4: stw r9 0xc(r1)
Parsed instruction at 800116D8: cmpwi r3 0x0
Parsed instruction at 800116DC: cntlzw r0 r3
Parsed instruction at 800116E0: cntlzw r9 r4
Parsed instruction at 800116E4: bne .L_800116EC
Parsed instruction at 800116E8: addi r0 r9 0x20
Parsed label: L_800116EC:
Parsed instruction at 800116EC: cmpwi r5 0x0
Parsed instruction at 800116F0: cntlzw r9 r5
Parsed instruction at 800116F4: cntlzw r10 r6
Parsed instruction at 800116F8: bne .L_80011700
Parsed instruction at 800116FC: addi r9 r10 0x20
Parsed label: L_80011700:
Parsed instruction at 80011700: cmpw r0 r9
Parsed instruction at 80011704: subfic r10 r0 0x40
Parsed instruction at 80011708: bgt .L_800117D4
Parsed instruction at 8001170C: addi r9 r9 0x1
Parsed instruction at 80011710: subfic r9 r9 0x40
Parsed instruction at 80011714: add r0 r0 r9
Parsed instruction at 80011718: subf r9 r9 r10
Parsed instruction at 8001171C: mtctr r9
Parsed instruction at 80011720: cmpwi r9 0x20
Parsed instruction at 80011724: subi r7 r9 0x20
Parsed instruction at 80011728: blt .L_80011738
Parsed instruction at 8001172C: srw r8 r3 r7
Parsed instruction at 80011730: li r7 0x0
Parsed instruction at 80011734: b .L_8001174C
Parsed label: L_80011738:
Parsed instruction at 80011738: srw r8 r4 r9
Parsed instruction at 8001173C: subfic r7 r9 0x20
Parsed instruction at 80011740: slw r7 r3 r7
Parsed instruction at 80011744: or r8 r8 r7
Parsed instruction at 80011748: srw r7 r3 r9
Parsed label: L_8001174C:
Parsed instruction at 8001174C: cmpwi r0 0x20
Parsed instruction at 80011750: subic r9 r0 0x20
Parsed instruction at 80011754: blt .L_80011764
Parsed instruction at 80011758: slw r3 r4 r9
Parsed instruction at 8001175C: li r4 0x0
Parsed instruction at 80011760: b .L_80011778
Parsed label: L_80011764:
Parsed instruction at 80011764: slw r3 r3 r0
Parsed instruction at 80011768: subfic r9 r0 0x20
Parsed instruction at 8001176C: srw r9 r4 r9
Parsed instruction at 80011770: or r3 r3 r9
Parsed instruction at 80011774: slw r4 r4 r0
Parsed label: L_80011778:
Parsed instruction at 80011778: li r10 -0x1
Parsed instruction at 8001177C: addic r7 r7 0x0
Parsed label: L_80011780:
Parsed instruction at 80011780: adde r4 r4 r4
Parsed instruction at 80011784: adde r3 r3 r3
Parsed instruction at 80011788: adde r8 r8 r8
Parsed instruction at 8001178C: adde r7 r7 r7
Parsed instruction at 80011790: subfc r0 r6 r8
Parsed instruction at 80011794: subfe. r9 r5 r7
Parsed instruction at 80011798: blt .L_800117A8
Parsed instruction at 8001179C: mr r8 r0
Parsed instruction at 800117A0: mr r7 r9
Parsed instruction at 800117A4: addic r0 r10 0x1
Parsed label: L_800117A8:
Parsed instruction at 800117A8: bdnz .L_80011780
Parsed instruction at 800117AC: adde r4 r4 r4
Parsed instruction at 800117B0: adde r3 r3 r3
Parsed instruction at 800117B4: lwz r9 0x8(r1)
Parsed instruction at 800117B8: lwz r10 0xc(r1)
Parsed instruction at 800117BC: xor. r7 r9 r10
Parsed instruction at 800117C0: beq .L_800117D0
Parsed instruction at 800117C4: cmpwi r9 0x0
Parsed instruction at 800117C8: subfic r4 r4 0x0
Parsed instruction at 800117CC: subfze r3 r3
Parsed label: L_800117D0:
Parsed instruction at 800117D0: b .L_800117DC
Parsed label: L_800117D4:
Parsed instruction at 800117D4: li r4 0x0
Parsed instruction at 800117D8: li r3 0x0
Parsed label: L_800117DC:
Parsed instruction at 800117DC: addi r1 r1 0x10
Parsed instruction at 800117E0: blr 
End of function: fn_800116AC, 91 instructions
Parsed function: __mod2u at 0x800117E4
Parsed instruction at 800117E4: cmpwi r3 0x0
Parsed instruction at 800117E8: cntlzw r0 r3
Parsed instruction at 800117EC: cntlzw r9 r4
Parsed instruction at 800117F0: bne .L_800117F8
Parsed instruction at 800117F4: addi r0 r9 0x20
Parsed label: L_800117F8:
Parsed instruction at 800117F8: cmpwi r5 0x0
Parsed instruction at 800117FC: cntlzw r9 r5
Parsed instruction at 80011800: cntlzw r10 r6
Parsed instruction at 80011804: bne .L_8001180C
Parsed instruction at 80011808: addi r9 r10 0x20
Parsed label: L_8001180C:
Parsed instruction at 8001180C: cmpw r0 r9
Parsed instruction at 80011810: subfic r10 r0 0x40
Parsed instruction at 80011814: bgt .L_800118C4
Parsed instruction at 80011818: addi r9 r9 0x1
Parsed instruction at 8001181C: subfic r9 r9 0x40
Parsed instruction at 80011820: add r0 r0 r9
Parsed instruction at 80011824: subf r9 r9 r10
Parsed instruction at 80011828: mtctr r9
Parsed instruction at 8001182C: cmpwi r9 0x20
Parsed instruction at 80011830: subi r7 r9 0x20
Parsed instruction at 80011834: blt .L_80011844
Parsed instruction at 80011838: srw r8 r3 r7
Parsed instruction at 8001183C: li r7 0x0
Parsed instruction at 80011840: b .L_80011858
Parsed label: L_80011844:
Parsed instruction at 80011844: srw r8 r4 r9
Parsed instruction at 80011848: subfic r7 r9 0x20
Parsed instruction at 8001184C: slw r7 r3 r7
Parsed instruction at 80011850: or r8 r8 r7
Parsed instruction at 80011854: srw r7 r3 r9
Parsed label: L_80011858:
Parsed instruction at 80011858: cmpwi r0 0x20
Parsed instruction at 8001185C: subic r9 r0 0x20
Parsed instruction at 80011860: blt .L_80011870
Parsed instruction at 80011864: slw r3 r4 r9
Parsed instruction at 80011868: li r4 0x0
Parsed instruction at 8001186C: b .L_80011884
Parsed label: L_80011870:
Parsed instruction at 80011870: slw r3 r3 r0
Parsed instruction at 80011874: subfic r9 r0 0x20
Parsed instruction at 80011878: srw r9 r4 r9
Parsed instruction at 8001187C: or r3 r3 r9
Parsed instruction at 80011880: slw r4 r4 r0
Parsed label: L_80011884:
Parsed instruction at 80011884: li r10 -0x1
Parsed instruction at 80011888: addic r7 r7 0x0
Parsed label: L_8001188C:
Parsed instruction at 8001188C: adde r4 r4 r4
Parsed instruction at 80011890: adde r3 r3 r3
Parsed instruction at 80011894: adde r8 r8 r8
Parsed instruction at 80011898: adde r7 r7 r7
Parsed instruction at 8001189C: subfc r0 r6 r8
Parsed instruction at 800118A0: subfe. r9 r5 r7
Parsed instruction at 800118A4: blt .L_800118B4
Parsed instruction at 800118A8: mr r8 r0
Parsed instruction at 800118AC: mr r7 r9
Parsed instruction at 800118B0: addic r0 r10 0x1
Parsed label: L_800118B4:
Parsed instruction at 800118B4: bdnz .L_8001188C
Parsed instruction at 800118B8: mr r4 r8
Parsed instruction at 800118BC: mr r3 r7
Parsed instruction at 800118C0: blr 
Parsed label: L_800118C4:
Parsed instruction at 800118C4: blr 
End of function: __mod2u, 66 instructions
Parsed function: fn_800118C8 at 0x800118C8
Parsed instruction at 800118C8: subfic r8 r5 0x20
Parsed instruction at 800118CC: subic r9 r5 0x20
Parsed instruction at 800118D0: slw r3 r3 r5
Parsed instruction at 800118D4: srw r10 r4 r8
Parsed instruction at 800118D8: or r3 r3 r10
Parsed instruction at 800118DC: slw r10 r4 r9
Parsed instruction at 800118E0: or r3 r3 r10
Parsed instruction at 800118E4: slw r4 r4 r5
Parsed instruction at 800118E8: blr 
End of function: fn_800118C8, 9 instructions
Parsed function: fn_800118EC at 0x800118EC
Parsed instruction at 800118EC: subfic r8 r5 0x20
Parsed instruction at 800118F0: subic r9 r5 0x20
Parsed instruction at 800118F4: srw r4 r4 r5
Parsed instruction at 800118F8: slw r10 r3 r8
Parsed instruction at 800118FC: or r4 r4 r10
Parsed instruction at 80011900: srw r10 r3 r9
Parsed instruction at 80011904: or r4 r4 r10
Parsed instruction at 80011908: srw r3 r3 r5
Parsed instruction at 8001190C: blr 
End of function: fn_800118EC, 9 instructions
Parsed function: exit at 0x80011910
Parsed instruction at 80011910: mflr r0
Parsed instruction at 80011914: stw r0 0x4(r1)
Parsed instruction at 80011918: stwu r1 -0x18(r1)
Parsed instruction at 8001191C: stw r31 0x14(r1)
Parsed instruction at 80011920: lwz r0 __aborting@sda21(r0)
Parsed instruction at 80011924: cmpwi r0 0x0
Parsed instruction at 80011928: bne .L_800119AC
Parsed instruction at 8001192C: lis r3 atexit_funcs_8001CC50@ha
Parsed instruction at 80011930: addi r31 r3 atexit_funcs_8001CC50@l
Parsed instruction at 80011934: b .L_80011958
Parsed label: L_80011938:
Parsed instruction at 80011938: lwz r3 atexit_curr_func_8001F044@sda21(r0)
Parsed instruction at 8001193C: subi r3 r3 0x1
Parsed instruction at 80011940: slwi r0 r3 2
Parsed instruction at 80011944: stw r3 atexit_curr_func_8001F044@sda21(r0)
Parsed instruction at 80011948: add r3 r31 r0
Parsed instruction at 8001194C: lwz r12 0x0(r3)
Parsed instruction at 80011950: mtlr r12
Parsed instruction at 80011954: blrl 
Parsed label: L_80011958:
Parsed instruction at 80011958: lwz r0 atexit_curr_func_8001F044@sda21(r0)
Parsed instruction at 8001195C: cmpwi r0 0x0
Parsed instruction at 80011960: bgt .L_80011938
Parsed instruction at 80011964: bl __destroy_global_chain
Parsed instruction at 80011968: lis r3 _dtors@ha
Parsed instruction at 8001196C: addi r0 r3 _dtors@l
Parsed instruction at 80011970: mr r31 r0
Parsed instruction at 80011974: b .L_80011984
Parsed label: L_80011978:
Parsed instruction at 80011978: mtlr r12
Parsed instruction at 8001197C: blrl 
Parsed instruction at 80011980: addi r31 r31 0x4
Parsed label: L_80011984:
Parsed instruction at 80011984: lwz r12 0x0(r31)
Parsed instruction at 80011988: cmplwi r12 0x0
Parsed instruction at 8001198C: bne .L_80011978
Parsed instruction at 80011990: lwz r12 __stdio_exit@sda21(r0)
Parsed instruction at 80011994: cmplwi r12 0x0
Parsed instruction at 80011998: beq .L_800119AC
Parsed instruction at 8001199C: mtlr r12
Parsed instruction at 800119A0: blrl 
Parsed instruction at 800119A4: li r0 0x0
Parsed instruction at 800119A8: stw r0 __stdio_exit@sda21(r0)
Parsed label: L_800119AC:
Parsed instruction at 800119AC: lis r3 __atexit_funcs_8001CD50@ha
Parsed instruction at 800119B0: addi r31 r3 __atexit_funcs_8001CD50@l
Parsed instruction at 800119B4: b .L_800119D8
Parsed label: L_800119B8:
Parsed instruction at 800119B8: lwz r3 __atexit_curr_func_8001F048@sda21(r0)
Parsed instruction at 800119BC: subi r3 r3 0x1
Parsed instruction at 800119C0: slwi r0 r3 2
Parsed instruction at 800119C4: stw r3 __atexit_curr_func_8001F048@sda21(r0)
Parsed instruction at 800119C8: add r3 r31 r0
Parsed instruction at 800119CC: lwz r12 0x0(r3)
Parsed instruction at 800119D0: mtlr r12
Parsed instruction at 800119D4: blrl 
Parsed label: L_800119D8:
Parsed instruction at 800119D8: lwz r0 __atexit_curr_func_8001F048@sda21(r0)
Parsed instruction at 800119DC: cmpwi r0 0x0
Parsed instruction at 800119E0: bgt .L_800119B8
Parsed instruction at 800119E4: bl __kill_critical_regions
Parsed instruction at 800119E8: lwz r12 __console_exit@sda21(r0)
Parsed instruction at 800119EC: cmplwi r12 0x0
Parsed instruction at 800119F0: beq .L_80011A04
Parsed instruction at 800119F4: mtlr r12
Parsed instruction at 800119F8: blrl 
Parsed instruction at 800119FC: li r0 0x0
Parsed instruction at 80011A00: stw r0 __console_exit@sda21(r0)
Parsed label: L_80011A04:
Parsed instruction at 80011A04: bl _ExitProcess
Parsed instruction at 80011A08: lwz r0 0x1c(r1)
Parsed instruction at 80011A0C: lwz r31 0x14(r1)
Parsed instruction at 80011A10: addi r1 r1 0x18
Parsed instruction at 80011A14: mtlr r0
Parsed instruction at 80011A18: blr 
End of function: exit, 75 instructions
Parsed function: fn_80011A1C at 0x80011A1C
Parsed instruction at 80011A1C: mflr r0
Parsed instruction at 80011A20: stw r0 0x4(r1)
Parsed instruction at 80011A24: stwu r1 -0x68(r1)
Parsed instruction at 80011A28: stfd f31 0x60(r1)
Parsed instruction at 80011A2C: fmr f31 f1
Parsed instruction at 80011A30: stw r31 0x5c(r1)
Parsed instruction at 80011A34: stw r30 0x58(r1)
Parsed instruction at 80011A38: addi r30 r4 0x0
Parsed instruction at 80011A3C: stw r29 0x54(r1)
Parsed instruction at 80011A40: mr r29 r3
Parsed instruction at 80011A44: lha r0 0x2(r3)
Parsed instruction at 80011A48: cmpwi r0 0x10
Parsed instruction at 80011A4C: mr r31 r0
Parsed instruction at 80011A50: ble .L_80011A58
Parsed instruction at 80011A54: li r31 0x10
Parsed label: L_80011A58:
Parsed instruction at 80011A58: li r3 0x0
Parsed instruction at 80011A5C: stb r3 0x0(r30)
Parsed instruction at 80011A60: li r0 0x1
Parsed instruction at 80011A64: sth r3 0x2(r30)
Parsed instruction at 80011A68: stb r0 0x4(r30)
Parsed instruction at 80011A6C: lfd f0 lbl_8001F0A0@sda21(r0)
Parsed instruction at 80011A70: fcmpu cr0 f0 f31
Parsed instruction at 80011A74: bne .L_80011A84
Parsed instruction at 80011A78: li r0 0x30
Parsed instruction at 80011A7C: stb r0 0x5(r30)
Parsed instruction at 80011A80: b .L_80011DB0
Parsed label: L_80011A84:
Parsed instruction at 80011A84: stfd f31 0x28(r1)
Parsed instruction at 80011A88: lis r0 0x7ff0
Parsed instruction at 80011A8C: lwz r4 0x28(r1)
Parsed instruction at 80011A90: rlwinm r3 r4 0 1 11
Parsed instruction at 80011A94: cmpw r3 r0
Parsed instruction at 80011A98: beq .L_80011AAC
Parsed instruction at 80011A9C: bge .L_80011AF4
Parsed instruction at 80011AA0: cmpwi r3 0x0
Parsed instruction at 80011AA4: beq .L_80011AD0
Parsed instruction at 80011AA8: b .L_80011AF4
Parsed label: L_80011AAC:
Parsed instruction at 80011AAC: clrlwi. r0 r4 12
Parsed instruction at 80011AB0: bne .L_80011AC0
Parsed instruction at 80011AB4: lwz r0 0x2c(r1)
Parsed instruction at 80011AB8: cmpwi r0 0x0
Parsed instruction at 80011ABC: beq .L_80011AC8
Parsed label: L_80011AC0:
Parsed instruction at 80011AC0: li r0 0x1
Parsed instruction at 80011AC4: b .L_80011AF8
Parsed label: L_80011AC8:
Parsed instruction at 80011AC8: li r0 0x2
Parsed instruction at 80011ACC: b .L_80011AF8
Parsed label: L_80011AD0:
Parsed instruction at 80011AD0: clrlwi. r0 r4 12
Parsed instruction at 80011AD4: bne .L_80011AE4
Parsed instruction at 80011AD8: lwz r0 0x2c(r1)
Parsed instruction at 80011ADC: cmpwi r0 0x0
Parsed instruction at 80011AE0: beq .L_80011AEC
Parsed label: L_80011AE4:
Parsed instruction at 80011AE4: li r0 0x5
Parsed instruction at 80011AE8: b .L_80011AF8
Parsed label: L_80011AEC:
Parsed instruction at 80011AEC: li r0 0x3
Parsed instruction at 80011AF0: b .L_80011AF8
Parsed label: L_80011AF4:
Parsed instruction at 80011AF4: li r0 0x4
Parsed label: L_80011AF8:
Parsed instruction at 80011AF8: cmpwi r0 0x2
Parsed instruction at 80011AFC: bgt .L_80011B90
Parsed instruction at 80011B00: stfd f31 0x20(r1)
Parsed instruction at 80011B04: lis r0 0x7ff0
Parsed instruction at 80011B08: lwz r4 0x20(r1)
Parsed instruction at 80011B0C: rlwinm r3 r4 0 1 11
Parsed instruction at 80011B10: cmpw r3 r0
Parsed instruction at 80011B14: beq .L_80011B28
Parsed instruction at 80011B18: bge .L_80011B70
Parsed instruction at 80011B1C: cmpwi r3 0x0
Parsed instruction at 80011B20: beq .L_80011B4C
Parsed instruction at 80011B24: b .L_80011B70
Parsed label: L_80011B28:
Parsed instruction at 80011B28: clrlwi. r0 r4 12
Parsed instruction at 80011B2C: bne .L_80011B3C
Parsed instruction at 80011B30: lwz r0 0x24(r1)
Parsed instruction at 80011B34: cmpwi r0 0x0
Parsed instruction at 80011B38: beq .L_80011B44
Parsed label: L_80011B3C:
Parsed instruction at 80011B3C: li r0 0x1
Parsed instruction at 80011B40: b .L_80011B74
Parsed label: L_80011B44:
Parsed instruction at 80011B44: li r0 0x2
Parsed instruction at 80011B48: b .L_80011B74
Parsed label: L_80011B4C:
Parsed instruction at 80011B4C: clrlwi. r0 r4 12
Parsed instruction at 80011B50: bne .L_80011B60
Parsed instruction at 80011B54: lwz r0 0x24(r1)
Parsed instruction at 80011B58: cmpwi r0 0x0
Parsed instruction at 80011B5C: beq .L_80011B68
Parsed label: L_80011B60:
Parsed instruction at 80011B60: li r0 0x5
Parsed instruction at 80011B64: b .L_80011B74
Parsed label: L_80011B68:
Parsed instruction at 80011B68: li r0 0x3
Parsed instruction at 80011B6C: b .L_80011B74
Parsed label: L_80011B70:
Parsed instruction at 80011B70: li r0 0x4
Parsed label: L_80011B74:
Parsed instruction at 80011B74: cmpwi r0 0x1
Parsed instruction at 80011B78: bne .L_80011B84
Parsed instruction at 80011B7C: li r0 0x4e
Parsed instruction at 80011B80: b .L_80011B88
Parsed label: L_80011B84:
Parsed instruction at 80011B84: li r0 0x49
Parsed label: L_80011B88:
Parsed instruction at 80011B88: stb r0 0x5(r30)
Parsed instruction at 80011B8C: b .L_80011DB0
Parsed label: L_80011B90:
Parsed instruction at 80011B90: li r0 0x0
Parsed instruction at 80011B94: stb r0 0x4(r30)
Parsed instruction at 80011B98: lfd f0 lbl_8001F0A0@sda21(r0)
Parsed instruction at 80011B9C: fcmpo cr0 f31 f0
Parsed instruction at 80011BA0: bge .L_80011BB0
Parsed instruction at 80011BA4: li r0 0x1
Parsed instruction at 80011BA8: fneg f31 f31
Parsed instruction at 80011BAC: stb r0 0x0(r30)
Parsed label: L_80011BB0:
Parsed instruction at 80011BB0: fmr f1 f31
Parsed instruction at 80011BB4: addi r3 r1 0x30
Parsed instruction at 80011BB8: bl fn_80014234
Parsed instruction at 80011BBC: lis r3 0x5
Parsed instruction at 80011BC0: lwz r4 0x30(r1)
Parsed instruction at 80011BC4: subi r0 r3 0x681b
Parsed instruction at 80011BC8: mullw r0 r4 r0
Parsed instruction at 80011BCC: lis r3 0x431c
Parsed instruction at 80011BD0: subi r3 r3 0x217d
Parsed instruction at 80011BD4: mulhw r0 r3 r0
Parsed instruction at 80011BD8: srawi r0 r0 18
Parsed instruction at 80011BDC: srwi r3 r0 31
Parsed instruction at 80011BE0: add. r4 r0 r3
Parsed instruction at 80011BE4: lis r3 lbl_8001A478@ha
Parsed instruction at 80011BE8: addi r0 r3 lbl_8001A478@l
Parsed instruction at 80011BEC: addi r3 r4 0x0
Parsed instruction at 80011BF0: mr r5 r0
Parsed instruction at 80011BF4: bge .L_80011C24
Parsed instruction at 80011BF8: neg r4 r4
Parsed instruction at 80011BFC: b .L_80011C18
Parsed label: L_80011C00:
Parsed instruction at 80011C00: clrlwi. r0 r4 31
Parsed instruction at 80011C04: beq .L_80011C10
Parsed instruction at 80011C08: lfd f0 0x0(r5)
Parsed instruction at 80011C0C: fmul f31 f31 f0
Parsed label: L_80011C10:
Parsed instruction at 80011C10: srawi r4 r4 1
Parsed instruction at 80011C14: addi r5 r5 0x8
Parsed label: L_80011C18:
Parsed instruction at 80011C18: cmpwi r4 0x0
Parsed instruction at 80011C1C: bne .L_80011C00
Parsed instruction at 80011C20: b .L_80011C54
Parsed label: L_80011C24:
Parsed instruction at 80011C24: ble .L_80011C54
Parsed instruction at 80011C28: lfd f1 lbl_8001F0A8@sda21(r0)
Parsed instruction at 80011C2C: b .L_80011C48
Parsed label: L_80011C30:
Parsed instruction at 80011C30: clrlwi. r0 r4 31
Parsed instruction at 80011C34: beq .L_80011C40
Parsed instruction at 80011C38: lfd f0 0x0(r5)
Parsed instruction at 80011C3C: fmul f1 f1 f0
Parsed label: L_80011C40:
Parsed instruction at 80011C40: srawi r4 r4 1
Parsed instruction at 80011C44: addi r5 r5 0x8
Parsed label: L_80011C48:
Parsed instruction at 80011C48: cmpwi r4 0x0
Parsed instruction at 80011C4C: bne .L_80011C30
Parsed instruction at 80011C50: fdiv f31 f31 f1
Parsed label: L_80011C54:
Parsed instruction at 80011C54: lfd f1 lbl_8001F0B8@sda21(r0)
Parsed instruction at 80011C58: lfd f0 lbl_8001F0A8@sda21(r0)
Parsed instruction at 80011C5C: b .L_80011C68
Parsed label: L_80011C60:
Parsed instruction at 80011C60: fmul f31 f31 f1
Parsed instruction at 80011C64: addi r3 r3 0x1
Parsed label: L_80011C68:
Parsed instruction at 80011C68: fcmpo cr0 f31 f0
Parsed instruction at 80011C6C: cror eq gt eq
Parsed instruction at 80011C70: beq .L_80011C60
Parsed instruction at 80011C74: lfd f1 lbl_8001F0C0@sda21(r0)
Parsed instruction at 80011C78: lfd f0 lbl_8001F0B8@sda21(r0)
Parsed instruction at 80011C7C: b .L_80011C88
Parsed label: L_80011C80:
Parsed instruction at 80011C80: fmul f31 f31 f1
Parsed instruction at 80011C84: subi r3 r3 0x1
Parsed label: L_80011C88:
Parsed instruction at 80011C88: fcmpo cr0 f31 f0
Parsed instruction at 80011C8C: blt .L_80011C80
Parsed instruction at 80011C90: lis r5 0x6666
Parsed instruction at 80011C94: lfd f1 lbl_8001F0B0@sda21(r0)
Parsed instruction at 80011C98: lis r6 lbl_8001A4C0@ha
Parsed instruction at 80011C9C: addi r4 r30 0x5
Parsed instruction at 80011CA0: addi r7 r5 0x6667
Parsed instruction at 80011CA4: addi r10 r6 lbl_8001A4C0@l
Parsed instruction at 80011CA8: lis r9 0x4330
Parsed instruction at 80011CAC: b .L_80011D58
Parsed label: L_80011CB0:
Parsed instruction at 80011CB0: cmpwi r31 0x8
Parsed instruction at 80011CB4: addi r12 r31 0x0
Parsed instruction at 80011CB8: ble .L_80011CC0
Parsed instruction at 80011CBC: li r12 0x8
Parsed label: L_80011CC0:
Parsed instruction at 80011CC0: lbz r6 0x4(r30)
Parsed instruction at 80011CC4: slwi r0 r12 3
Parsed instruction at 80011CC8: add r5 r10 r0
Parsed instruction at 80011CCC: add r0 r6 r12
Parsed instruction at 80011CD0: stb r0 0x4(r30)
Parsed instruction at 80011CD4: subf r31 r12 r31
Parsed instruction at 80011CD8: subf r3 r12 r3
Parsed instruction at 80011CDC: lfd f0 -0x8(r5)
Parsed instruction at 80011CE0: add r4 r4 r12
Parsed instruction at 80011CE4: addi r11 r12 0x1
Parsed instruction at 80011CE8: fmul f31 f31 f0
Parsed instruction at 80011CEC: fctiwz f0 f31
Parsed instruction at 80011CF0: stfd f0 0x40(r1)
Parsed instruction at 80011CF4: lwz r0 0x44(r1)
Parsed instruction at 80011CF8: stfd f0 0x48(r1)
Parsed instruction at 80011CFC: xoris r0 r0 0x8000
Parsed instruction at 80011D00: stw r0 0x3c(r1)
Parsed instruction at 80011D04: lwz r6 0x4c(r1)
Parsed instruction at 80011D08: stw r9 0x38(r1)
Parsed instruction at 80011D0C: lfd f0 0x38(r1)
Parsed instruction at 80011D10: fsub f0 f0 f1
Parsed instruction at 80011D14: fsub f31 f31 f0
Parsed instruction at 80011D18: b .L_80011D4C
Parsed label: L_80011D1C:
Parsed instruction at 80011D1C: mulhw r8 r7 r6
Parsed instruction at 80011D20: srawi r0 r8 2
Parsed instruction at 80011D24: srwi r5 r0 31
Parsed instruction at 80011D28: add r0 r0 r5
Parsed instruction at 80011D2C: mulli r0 r0 0xa
Parsed instruction at 80011D30: subf r6 r0 r6
Parsed instruction at 80011D34: srawi r0 r8 2
Parsed instruction at 80011D38: addi r6 r6 0x30
Parsed instruction at 80011D3C: stb r6 -0x1(r4)
Parsed instruction at 80011D40: srwi r5 r0 31
Parsed instruction at 80011D44: add r6 r0 r5
Parsed instruction at 80011D48: subi r4 r4 0x1
Parsed label: L_80011D4C:
Parsed instruction at 80011D4C: subic. r11 r11 0x1
Parsed instruction at 80011D50: bne .L_80011D1C
Parsed instruction at 80011D54: add r4 r4 r12
Parsed label: L_80011D58:
Parsed instruction at 80011D58: cmpwi r31 0x0
Parsed instruction at 80011D5C: bne .L_80011CB0
Parsed instruction at 80011D60: lha r5 0x2(r29)
Parsed instruction at 80011D64: cmpwi r5 0x24
Parsed instruction at 80011D68: ble .L_80011D70
Parsed instruction at 80011D6C: li r5 0x24
Parsed label: L_80011D70:
Parsed instruction at 80011D70: lbz r0 0x4(r30)
Parsed instruction at 80011D74: subf. r5 r0 r5
Parsed instruction at 80011D78: ble .L_80011DA8
Parsed instruction at 80011D7C: addi r6 r5 0x1
Parsed instruction at 80011D80: li r0 0x30
Parsed instruction at 80011D84: b .L_80011D90
Parsed label: L_80011D88:
Parsed instruction at 80011D88: stb r0 0x0(r4)
Parsed instruction at 80011D8C: addi r4 r4 0x1
Parsed label: L_80011D90:
Parsed instruction at 80011D90: subic. r6 r6 0x1
Parsed instruction at 80011D94: bne .L_80011D88
Parsed instruction at 80011D98: lbz r0 0x4(r30)
Parsed instruction at 80011D9C: subf r3 r5 r3
Parsed instruction at 80011DA0: add r0 r0 r5
Parsed instruction at 80011DA4: stb r0 0x4(r30)
Parsed label: L_80011DA8:
Parsed instruction at 80011DA8: extsh r0 r3
Parsed instruction at 80011DAC: sth r0 0x2(r30)
Parsed label: L_80011DB0:
Parsed instruction at 80011DB0: lwz r0 0x6c(r1)
Parsed instruction at 80011DB4: lfd f31 0x60(r1)
Parsed instruction at 80011DB8: lwz r31 0x5c(r1)
Parsed instruction at 80011DBC: mtlr r0
Parsed instruction at 80011DC0: lwz r30 0x58(r1)
Parsed instruction at 80011DC4: lwz r29 0x54(r1)
Parsed instruction at 80011DC8: addi r1 r1 0x68
Parsed instruction at 80011DCC: blr 
End of function: fn_80011A1C, 281 instructions
Parsed function: __flush_buffer at 0x80011DD0
Parsed instruction at 80011DD0: mflr r0
Parsed instruction at 80011DD4: stw r0 0x4(r1)
Parsed instruction at 80011DD8: stwu r1 -0x18(r1)
Parsed instruction at 80011DDC: stw r31 0x14(r1)
Parsed instruction at 80011DE0: mr r31 r3
Parsed instruction at 80011DE4: stw r30 0x10(r1)
Parsed instruction at 80011DE8: mr r30 r4
Parsed instruction at 80011DEC: lwz r3 0x18(r3)
Parsed instruction at 80011DF0: lwz r0 0x20(r31)
Parsed instruction at 80011DF4: subf. r0 r3 r0
Parsed instruction at 80011DF8: beq .L_80011E50
Parsed instruction at 80011DFC: stw r0 0x24(r31)
Parsed instruction at 80011E00: lbz r0 0x5(r31)
Parsed instruction at 80011E04: extrwi. r0 r0 1 28
Parsed instruction at 80011E08: lwz r12 0x3c(r31)
Parsed instruction at 80011E0C: addi r5 r31 0x24
Parsed instruction at 80011E10: lwz r3 0x0(r31)
Parsed instruction at 80011E14: mtlr r12
Parsed instruction at 80011E18: lwz r4 0x18(r31)
Parsed instruction at 80011E1C: lwz r6 0x44(r31)
Parsed instruction at 80011E20: blrl 
Parsed instruction at 80011E24: cmplwi r30 0x0
Parsed instruction at 80011E28: beq .L_80011E34
Parsed instruction at 80011E2C: lwz r0 0x24(r31)
Parsed instruction at 80011E30: stw r0 0x0(r30)
Parsed label: L_80011E34:
Parsed instruction at 80011E34: cmpwi r3 0x0
Parsed instruction at 80011E38: beq .L_80011E40
Parsed instruction at 80011E3C: b .L_80011E84
Parsed label: L_80011E40:
Parsed instruction at 80011E40: lwz r3 0x14(r31)
Parsed instruction at 80011E44: lwz r0 0x24(r31)
Parsed instruction at 80011E48: add r0 r3 r0
Parsed instruction at 80011E4C: stw r0 0x14(r31)
Parsed label: L_80011E50:
Parsed instruction at 80011E50: lwz r0 0x18(r31)
Parsed instruction at 80011E54: li r3 0x0
Parsed instruction at 80011E58: stw r0 0x20(r31)
Parsed instruction at 80011E5C: lwz r0 0x1c(r31)
Parsed instruction at 80011E60: stw r0 0x24(r31)
Parsed instruction at 80011E64: lwz r5 0x14(r31)
Parsed instruction at 80011E68: lwz r4 0x28(r31)
Parsed instruction at 80011E6C: lwz r0 0x24(r31)
Parsed instruction at 80011E70: and r4 r5 r4
Parsed instruction at 80011E74: subf r0 r4 r0
Parsed instruction at 80011E78: stw r0 0x24(r31)
Parsed instruction at 80011E7C: lwz r0 0x14(r31)
Parsed instruction at 80011E80: stw r0 0x30(r31)
Parsed label: L_80011E84:
Parsed instruction at 80011E84: lwz r0 0x1c(r1)
Parsed instruction at 80011E88: lwz r31 0x14(r1)
Parsed instruction at 80011E8C: lwz r30 0x10(r1)
Parsed instruction at 80011E90: mtlr r0
Parsed instruction at 80011E94: addi r1 r1 0x18
Parsed instruction at 80011E98: blr 
End of function: __flush_buffer, 55 instructions
Parsed function: __prep_buffer at 0x80011E9C
Parsed instruction at 80011E9C: lwz r0 0x18(r3)
Parsed instruction at 80011EA0: stw r0 0x20(r3)
Parsed instruction at 80011EA4: lwz r0 0x1c(r3)
Parsed instruction at 80011EA8: stw r0 0x24(r3)
Parsed instruction at 80011EAC: lwz r5 0x14(r3)
Parsed instruction at 80011EB0: lwz r4 0x28(r3)
Parsed instruction at 80011EB4: lwz r0 0x24(r3)
Parsed instruction at 80011EB8: and r4 r5 r4
Parsed instruction at 80011EBC: subf r0 r4 r0
Parsed instruction at 80011EC0: stw r0 0x24(r3)
Parsed instruction at 80011EC4: lwz r0 0x14(r3)
Parsed instruction at 80011EC8: stw r0 0x30(r3)
Parsed instruction at 80011ECC: blr 
End of function: __prep_buffer, 13 instructions
Parsed function: __kill_critical_regions at 0x80011ED0
Parsed instruction at 80011ED0: blr 
End of function: __kill_critical_regions, 1 instructions
Parsed function: fwrite at 0x80011ED4
Parsed instruction at 80011ED4: mflr r0
Parsed instruction at 80011ED8: stw r0 0x4(r1)
Parsed instruction at 80011EDC: stwu r1 -0x48(r1)
Parsed instruction at 80011EE0: stmw r25 0x2c(r1)
Parsed instruction at 80011EE4: addi r26 r4 0x0
Parsed instruction at 80011EE8: addi r27 r6 0x0
Parsed instruction at 80011EEC: addi r28 r3 0x0
Parsed instruction at 80011EF0: addi r25 r5 0x0
Parsed instruction at 80011EF4: addi r3 r27 0x0
Parsed instruction at 80011EF8: li r4 0x0
Parsed instruction at 80011EFC: bl fwide
Parsed instruction at 80011F00: cmpwi r3 0x0
Parsed instruction at 80011F04: bne .L_80011F14
Parsed instruction at 80011F08: addi r3 r27 0x0
Parsed instruction at 80011F0C: li r4 -0x1
Parsed instruction at 80011F10: bl fwide
Parsed label: L_80011F14:
Parsed instruction at 80011F14: mullw. r0 r26 r25
Parsed instruction at 80011F18: mr r29 r0
Parsed instruction at 80011F1C: beq .L_80011F38
Parsed instruction at 80011F20: lbz r0 0xa(r27)
Parsed instruction at 80011F24: cmplwi r0 0x0
Parsed instruction at 80011F28: bne .L_80011F38
Parsed instruction at 80011F2C: lhz r0 0x4(r27)
Parsed instruction at 80011F30: extrwi. r0 r0 3 23
Parsed instruction at 80011F34: bne .L_80011F40
Parsed label: L_80011F38:
Parsed instruction at 80011F38: li r3 0x0
Parsed instruction at 80011F3C: b .L_8001219C
Parsed label: L_80011F40:
Parsed instruction at 80011F40: cmpwi r0 0x2
Parsed instruction at 80011F44: bne .L_80011F4C
Parsed instruction at 80011F48: bl __stdio_atexit
Parsed label: L_80011F4C:
Parsed instruction at 80011F4C: lbz r0 0x5(r27)
Parsed instruction at 80011F50: li r31 0x1
Parsed instruction at 80011F54: addi r3 r31 0x0
Parsed instruction at 80011F58: extrwi. r0 r0 1 28
Parsed instruction at 80011F5C: addi r4 r31 0x0
Parsed instruction at 80011F60: beq .L_80011F78
Parsed instruction at 80011F64: lhz r0 0x4(r27)
Parsed instruction at 80011F68: extrwi r0 r0 3 23
Parsed instruction at 80011F6C: cmpwi r0 0x3
Parsed instruction at 80011F70: beq .L_80011F78
Parsed instruction at 80011F74: li r4 0x0
Parsed label: L_80011F78:
Parsed instruction at 80011F78: cmpwi r4 0x0
Parsed instruction at 80011F7C: bne .L_80011F94
Parsed instruction at 80011F80: lbz r0 0x4(r27)
Parsed instruction at 80011F84: extrwi r0 r0 2 29
Parsed instruction at 80011F88: cmplwi r0 0x2
Parsed instruction at 80011F8C: beq .L_80011F94
Parsed instruction at 80011F90: li r3 0x0
Parsed label: L_80011F94:
Parsed instruction at 80011F94: cmpwi r3 0x0
Parsed instruction at 80011F98: bne .L_80011FB0
Parsed instruction at 80011F9C: lbz r0 0x4(r27)
Parsed instruction at 80011FA0: extrwi r0 r0 2 29
Parsed instruction at 80011FA4: cmplwi r0 0x1
Parsed instruction at 80011FA8: beq .L_80011FB0
Parsed instruction at 80011FAC: li r31 0x0
Parsed label: L_80011FB0:
Parsed instruction at 80011FB0: lbz r3 0x8(r27)
Parsed instruction at 80011FB4: extrwi. r0 r3 3 24
Parsed instruction at 80011FB8: bne .L_80011FDC
Parsed instruction at 80011FBC: lbz r0 0x4(r27)
Parsed instruction at 80011FC0: rlwinm. r0 r0 29 30 30
Parsed instruction at 80011FC4: beq .L_80011FDC
Parsed instruction at 80011FC8: li r0 0x1
Parsed instruction at 80011FCC: rlwimi r3 r0 5 24 26
Parsed instruction at 80011FD0: stb r3 0x8(r27)
Parsed instruction at 80011FD4: mr r3 r27
Parsed instruction at 80011FD8: bl __prep_buffer
Parsed label: L_80011FDC:
Parsed instruction at 80011FDC: lbz r0 0x8(r27)
Parsed instruction at 80011FE0: extrwi r0 r0 3 24
Parsed instruction at 80011FE4: cmplwi r0 0x1
Parsed instruction at 80011FE8: beq .L_80012004
Parsed instruction at 80011FEC: li r0 0x1
Parsed instruction at 80011FF0: stb r0 0xa(r27)
Parsed instruction at 80011FF4: li r0 0x0
Parsed instruction at 80011FF8: li r3 0x0
Parsed instruction at 80011FFC: stw r0 0x24(r27)
Parsed instruction at 80012000: b .L_8001219C
Parsed label: L_80012004:
Parsed instruction at 80012004: cmplwi r29 0x0
Parsed instruction at 80012008: addi r30 r28 0x0
Parsed instruction at 8001200C: li r28 0x0
Parsed instruction at 80012010: beq .L_8001210C
Parsed instruction at 80012014: lwz r4 0x20(r27)
Parsed instruction at 80012018: lwz r3 0x18(r27)
Parsed instruction at 8001201C: cmplw r4 r3
Parsed instruction at 80012020: bne .L_8001202C
Parsed instruction at 80012024: cmpwi r31 0x0
Parsed instruction at 80012028: beq .L_8001210C
Parsed label: L_8001202C:
Parsed instruction at 8001202C: lwz r0 0x1c(r27)
Parsed instruction at 80012030: subf r3 r3 r4
Parsed instruction at 80012034: subf r0 r3 r0
Parsed instruction at 80012038: stw r0 0x24(r27)
Parsed label: L_8001203C:
Parsed instruction at 8001203C: lwz r0 0x24(r27)
Parsed instruction at 80012040: stw r0 0x20(r1)
Parsed instruction at 80012044: lwz r0 0x20(r1)
Parsed instruction at 80012048: cmplw r0 r29
Parsed instruction at 8001204C: ble .L_80012054
Parsed instruction at 80012050: stw r29 0x20(r1)
Parsed label: L_80012054:
Parsed instruction at 80012054: lwz r5 0x20(r1)
Parsed instruction at 80012058: cmplwi r5 0x0
Parsed instruction at 8001205C: beq .L_80012098
Parsed instruction at 80012060: lwz r3 0x20(r27)
Parsed instruction at 80012064: mr r4 r30
Parsed instruction at 80012068: bl memcpy
Parsed instruction at 8001206C: lwz r3 0x20(r1)
Parsed instruction at 80012070: lwz r0 0x20(r27)
Parsed instruction at 80012074: add r30 r30 r3
Parsed instruction at 80012078: add r0 r0 r3
Parsed instruction at 8001207C: stw r0 0x20(r27)
Parsed instruction at 80012080: add r28 r28 r3
Parsed instruction at 80012084: subf r29 r3 r29
Parsed instruction at 80012088: lwz r3 0x20(r1)
Parsed instruction at 8001208C: lwz r0 0x24(r27)
Parsed instruction at 80012090: subf r0 r3 r0
Parsed instruction at 80012094: stw r0 0x24(r27)
Parsed label: L_80012098:
Parsed instruction at 80012098: lwz r3 0x24(r27)
Parsed instruction at 8001209C: cmplwi r3 0x0
Parsed instruction at 800120A0: bne .L_800120BC
Parsed instruction at 800120A4: lhz r0 0x4(r27)
Parsed instruction at 800120A8: extrwi r0 r0 3 23
Parsed instruction at 800120AC: cmpwi r0 0x3
Parsed instruction at 800120B0: bne .L_800120BC
Parsed instruction at 800120B4: add r28 r28 r29
Parsed instruction at 800120B8: b .L_8001210C
Parsed label: L_800120BC:
Parsed instruction at 800120BC: cmplwi r3 0x0
Parsed instruction at 800120C0: beq .L_800120D0
Parsed instruction at 800120C4: lbz r0 0x4(r27)
Parsed instruction at 800120C8: extrwi. r0 r0 2 29
Parsed instruction at 800120CC: bne .L_800120FC
Parsed label: L_800120D0:
Parsed instruction at 800120D0: addi r3 r27 0x0
Parsed instruction at 800120D4: li r4 0x0
Parsed instruction at 800120D8: bl __flush_buffer
Parsed instruction at 800120DC: cmpwi r3 0x0
Parsed instruction at 800120E0: beq .L_800120FC
Parsed instruction at 800120E4: li r0 0x1
Parsed instruction at 800120E8: stb r0 0xa(r27)
Parsed instruction at 800120EC: li r0 0x0
Parsed instruction at 800120F0: li r29 0x0
Parsed instruction at 800120F4: stw r0 0x24(r27)
Parsed instruction at 800120F8: b .L_8001210C
Parsed label: L_800120FC:
Parsed instruction at 800120FC: cmplwi r29 0x0
Parsed instruction at 80012100: beq .L_8001210C
Parsed instruction at 80012104: cmpwi r31 0x0
Parsed instruction at 80012108: bne .L_8001203C
Parsed label: L_8001210C:
Parsed instruction at 8001210C: cmplwi r29 0x0
Parsed instruction at 80012110: beq .L_80012178
Parsed instruction at 80012114: cmpwi r31 0x0
Parsed instruction at 80012118: bne .L_80012178
Parsed instruction at 8001211C: lwz r31 0x18(r27)
Parsed instruction at 80012120: add r0 r30 r29
Parsed instruction at 80012124: lwz r25 0x1c(r27)
Parsed instruction at 80012128: addi r3 r27 0x0
Parsed instruction at 8001212C: addi r4 r1 0x20
Parsed instruction at 80012130: stw r30 0x18(r27)
Parsed instruction at 80012134: stw r29 0x1c(r27)
Parsed instruction at 80012138: stw r0 0x20(r27)
Parsed instruction at 8001213C: bl __flush_buffer
Parsed instruction at 80012140: cmpwi r3 0x0
Parsed instruction at 80012144: beq .L_80012158
Parsed instruction at 80012148: li r0 0x1
Parsed instruction at 8001214C: stb r0 0xa(r27)
Parsed instruction at 80012150: li r0 0x0
Parsed instruction at 80012154: stw r0 0x24(r27)
Parsed label: L_80012158:
Parsed instruction at 80012158: lwz r0 0x20(r1)
Parsed instruction at 8001215C: mr r3 r27
Parsed instruction at 80012160: stw r31 0x18(r27)
Parsed instruction at 80012164: add r28 r28 r0
Parsed instruction at 80012168: stw r25 0x1c(r27)
Parsed instruction at 8001216C: bl __prep_buffer
Parsed instruction at 80012170: li r0 0x0
Parsed instruction at 80012174: stw r0 0x24(r27)
Parsed label: L_80012178:
Parsed instruction at 80012178: lbz r0 0x4(r27)
Parsed instruction at 8001217C: extrwi r0 r0 2 29
Parsed instruction at 80012180: cmplwi r0 0x2
Parsed instruction at 80012184: beq .L_80012190
Parsed instruction at 80012188: li r0 0x0
Parsed instruction at 8001218C: stw r0 0x24(r27)
Parsed label: L_80012190:
Parsed instruction at 80012190: subi r0 r26 0x1
Parsed instruction at 80012194: add r0 r28 r0
Parsed instruction at 80012198: divwu r3 r0 r26
Parsed label: L_8001219C:
Parsed instruction at 8001219C: lmw r25 0x2c(r1)
Parsed instruction at 800121A0: lwz r0 0x4c(r1)
Parsed instruction at 800121A4: addi r1 r1 0x48
Parsed instruction at 800121A8: mtlr r0
Parsed instruction at 800121AC: blr 
End of function: fwrite, 204 instructions
Parsed function: wcstombs at 0x800121B0
Parsed instruction at 800121B0: cmplwi r5 0x0
Parsed instruction at 800121B4: mtctr r5
Parsed instruction at 800121B8: li r6 0x0
Parsed instruction at 800121BC: ble .L_800121E4
Parsed label: L_800121C0:
Parsed instruction at 800121C0: lhz r0 0x0(r4)
Parsed instruction at 800121C4: addi r4 r4 0x2
Parsed instruction at 800121C8: extsb r5 r0
Parsed instruction at 800121CC: extsb. r0 r5
Parsed instruction at 800121D0: stb r5 0x0(r3)
Parsed instruction at 800121D4: addi r3 r3 0x1
Parsed instruction at 800121D8: beq .L_800121E4
Parsed instruction at 800121DC: addi r6 r6 0x1
Parsed instruction at 800121E0: bdnz .L_800121C0
Parsed label: L_800121E4:
Parsed instruction at 800121E4: mr r3 r6
Parsed instruction at 800121E8: blr 
End of function: wcstombs, 17 instructions
Parsed function: fn_800121EC at 0x800121EC
Parsed instruction at 800121EC: subi r6 r3 0x1
Parsed instruction at 800121F0: subi r4 r4 0x1
Parsed instruction at 800121F4: addi r5 r5 0x1
Parsed instruction at 800121F8: b .L_80012220
Parsed label: L_800121FC:
Parsed instruction at 800121FC: lbzu r3 0x1(r6)
Parsed instruction at 80012200: lbzu r0 0x1(r4)
Parsed instruction at 80012204: cmplw r3 r0
Parsed instruction at 80012208: beq .L_80012220
Parsed instruction at 8001220C: bge .L_80012218
Parsed instruction at 80012210: li r3 -0x1
Parsed instruction at 80012214: blr 
Parsed label: L_80012218:
Parsed instruction at 80012218: li r3 0x1
Parsed instruction at 8001221C: blr 
Parsed label: L_80012220:
Parsed instruction at 80012220: subic. r5 r5 0x1
Parsed instruction at 80012224: bne .L_800121FC
Parsed instruction at 80012228: li r3 0x0
Parsed instruction at 8001222C: blr 
End of function: fn_800121EC, 20 instructions
Parsed function: memchr at 0x80012230
Parsed instruction at 80012230: clrlwi r4 r4 24
Parsed instruction at 80012234: subi r3 r3 0x1
Parsed instruction at 80012238: addi r5 r5 0x1
Parsed instruction at 8001223C: b .L_8001224C
Parsed label: L_80012240:
Parsed instruction at 80012240: lbzu r0 0x1(r3)
Parsed instruction at 80012244: cmplw r0 r4
Parsed instruction at 80012248: beqlr 
Parsed label: L_8001224C:
Parsed instruction at 8001224C: subic. r5 r5 0x1
Parsed instruction at 80012250: bne .L_80012240
Parsed instruction at 80012254: li r3 0x0
Parsed instruction at 80012258: blr 
End of function: memchr, 13 instructions
Parsed function: fn_8001225C at 0x8001225C
Parsed instruction at 8001225C: mflr r0
Parsed instruction at 80012260: cmplwi r5 0x20
Parsed instruction at 80012264: stw r0 0x4(r1)
Parsed instruction at 80012268: stwu r1 -0x20(r1)
Parsed instruction at 8001226C: stw r31 0x1c(r1)
Parsed instruction at 80012270: addi r31 r3 0x0
Parsed instruction at 80012274: subfc r3 r31 r4
Parsed instruction at 80012278: subfe r0 r0 r0
Parsed instruction at 8001227C: neg r3 r0
Parsed instruction at 80012280: blt .L_800122D4
Parsed instruction at 80012284: xor r0 r31 r4
Parsed instruction at 80012288: clrlwi. r0 r0 30
Parsed instruction at 8001228C: beq .L_800122B0
Parsed instruction at 80012290: cmpwi r3 0x0
Parsed instruction at 80012294: bne .L_800122A4
Parsed instruction at 80012298: mr r3 r31
Parsed instruction at 8001229C: bl fn_800123E8
Parsed instruction at 800122A0: b .L_800122CC
Parsed label: L_800122A4:
Parsed instruction at 800122A4: mr r3 r31
Parsed instruction at 800122A8: bl fn_80012338
Parsed instruction at 800122AC: b .L_800122CC
Parsed label: L_800122B0:
Parsed instruction at 800122B0: cmpwi r3 0x0
Parsed instruction at 800122B4: bne .L_800122C4
Parsed instruction at 800122B8: mr r3 r31
Parsed instruction at 800122BC: bl fn_80012558
Parsed instruction at 800122C0: b .L_800122CC
Parsed label: L_800122C4:
Parsed instruction at 800122C4: mr r3 r31
Parsed instruction at 800122C8: bl fn_800124AC
Parsed label: L_800122CC:
Parsed instruction at 800122CC: mr r3 r31
Parsed instruction at 800122D0: b .L_80012324
Parsed label: L_800122D4:
Parsed instruction at 800122D4: cmpwi r3 0x0
Parsed instruction at 800122D8: bne .L_80012300
Parsed instruction at 800122DC: subi r3 r4 0x1
Parsed instruction at 800122E0: subi r4 r31 0x1
Parsed instruction at 800122E4: addi r5 r5 0x1
Parsed instruction at 800122E8: b .L_800122F4
Parsed label: L_800122EC:
Parsed instruction at 800122EC: lbzu r0 0x1(r3)
Parsed instruction at 800122F0: stbu r0 0x1(r4)
Parsed label: L_800122F4:
Parsed instruction at 800122F4: subic. r5 r5 0x1
Parsed instruction at 800122F8: bne .L_800122EC
Parsed instruction at 800122FC: b .L_80012320
Parsed label: L_80012300:
Parsed instruction at 80012300: add r3 r4 r5
Parsed instruction at 80012304: add r4 r31 r5
Parsed instruction at 80012308: addi r5 r5 0x1
Parsed instruction at 8001230C: b .L_80012318
Parsed label: L_80012310:
Parsed instruction at 80012310: lbzu r0 -0x1(r3)
Parsed instruction at 80012314: stbu r0 -0x1(r4)
Parsed label: L_80012318:
Parsed instruction at 80012318: subic. r5 r5 0x1
Parsed instruction at 8001231C: bne .L_80012310
Parsed label: L_80012320:
Parsed instruction at 80012320: mr r3 r31
Parsed label: L_80012324:
Parsed instruction at 80012324: lwz r0 0x24(r1)
Parsed instruction at 80012328: lwz r31 0x1c(r1)
Parsed instruction at 8001232C: addi r1 r1 0x20
Parsed instruction at 80012330: mtlr r0
Parsed instruction at 80012334: blr 
End of function: fn_8001225C, 67 instructions
Parsed function: fn_80012338 at 0x80012338
Parsed instruction at 80012338: add r12 r3 r5
Parsed instruction at 8001233C: clrlwi. r0 r12 30
Parsed instruction at 80012340: add r11 r4 r5
Parsed instruction at 80012344: mr r3 r0
Parsed instruction at 80012348: beq .L_80012360
Parsed instruction at 8001234C: subf r5 r3 r5
Parsed label: L_80012350:
Parsed instruction at 80012350: lbzu r0 -0x1(r11)
Parsed instruction at 80012354: subic. r3 r3 0x1
Parsed instruction at 80012358: stbu r0 -0x1(r12)
Parsed instruction at 8001235C: bne .L_80012350
Parsed label: L_80012360:
Parsed instruction at 80012360: clrlslwi r4 r11 30 3
Parsed instruction at 80012364: clrlwi r9 r11 30
Parsed instruction at 80012368: subfic r10 r4 0x20
Parsed instruction at 8001236C: subfic r0 r9 0x4
Parsed instruction at 80012370: add r11 r11 r0
Parsed instruction at 80012374: lwzu r7 -0x4(r11)
Parsed instruction at 80012378: srwi r6 r5 3
Parsed label: L_8001237C:
Parsed instruction at 8001237C: lwz r8 -0x4(r11)
Parsed instruction at 80012380: srw r0 r7 r10
Parsed instruction at 80012384: subic. r6 r6 0x1
Parsed instruction at 80012388: slw r3 r8 r4
Parsed instruction at 8001238C: or r0 r3 r0
Parsed instruction at 80012390: stw r0 -0x4(r12)
Parsed instruction at 80012394: srw r0 r8 r10
Parsed instruction at 80012398: lwzu r7 -0x8(r11)
Parsed instruction at 8001239C: slw r3 r7 r4
Parsed instruction at 800123A0: or r0 r3 r0
Parsed instruction at 800123A4: stwu r0 -0x8(r12)
Parsed instruction at 800123A8: bne .L_8001237C
Parsed instruction at 800123AC: rlwinm. r0 r5 0 29 29
Parsed instruction at 800123B0: beq .L_800123C8
Parsed instruction at 800123B4: lwzu r3 -0x4(r11)
Parsed instruction at 800123B8: srw r0 r7 r10
Parsed instruction at 800123BC: slw r3 r3 r4
Parsed instruction at 800123C0: or r0 r3 r0
Parsed instruction at 800123C4: stwu r0 -0x4(r12)
Parsed label: L_800123C8:
Parsed instruction at 800123C8: clrlwi. r5 r5 30
Parsed instruction at 800123CC: beqlr 
Parsed instruction at 800123D0: add r11 r11 r9
Parsed label: L_800123D4:
Parsed instruction at 800123D4: lbzu r0 -0x1(r11)
Parsed instruction at 800123D8: subic. r5 r5 0x1
Parsed instruction at 800123DC: stbu r0 -0x1(r12)
Parsed instruction at 800123E0: bne .L_800123D4
Parsed instruction at 800123E4: blr 
End of function: fn_80012338, 49 instructions
Parsed function: fn_800123E8 at 0x800123E8
Parsed instruction at 800123E8: neg r0 r3
Parsed instruction at 800123EC: clrlwi. r6 r0 30
Parsed instruction at 800123F0: subi r4 r4 0x1
Parsed instruction at 800123F4: subi r3 r3 0x1
Parsed instruction at 800123F8: beq .L_80012410
Parsed instruction at 800123FC: subf r5 r6 r5
Parsed label: L_80012400:
Parsed instruction at 80012400: lbzu r0 0x1(r4)
Parsed instruction at 80012404: subic. r6 r6 0x1
Parsed instruction at 80012408: stbu r0 0x1(r3)
Parsed instruction at 8001240C: bne .L_80012400
Parsed label: L_80012410:
Parsed instruction at 80012410: addi r0 r4 0x1
Parsed instruction at 80012414: clrlwi r11 r0 30
Parsed instruction at 80012418: subf r4 r11 r4
Parsed instruction at 8001241C: subi r8 r4 0x3
Parsed instruction at 80012420: lwzu r9 0x4(r8)
Parsed instruction at 80012424: clrlslwi r4 r0 30 3
Parsed instruction at 80012428: subfic r12 r4 0x20
Parsed instruction at 8001242C: subi r6 r3 0x3
Parsed instruction at 80012430: srwi r7 r5 3
Parsed label: L_80012434:
Parsed instruction at 80012434: lwz r10 0x4(r8)
Parsed instruction at 80012438: slw r3 r9 r4
Parsed instruction at 8001243C: subic. r7 r7 0x1
Parsed instruction at 80012440: srw r0 r10 r12
Parsed instruction at 80012444: or r0 r3 r0
Parsed instruction at 80012448: stw r0 0x4(r6)
Parsed instruction at 8001244C: slw r3 r10 r4
Parsed instruction at 80012450: lwzu r9 0x8(r8)
Parsed instruction at 80012454: srw r0 r9 r12
Parsed instruction at 80012458: or r0 r3 r0
Parsed instruction at 8001245C: stwu r0 0x8(r6)
Parsed instruction at 80012460: bne .L_80012434
Parsed instruction at 80012464: rlwinm. r0 r5 0 29 29
Parsed instruction at 80012468: beq .L_80012480
Parsed instruction at 8001246C: lwzu r0 0x4(r8)
Parsed instruction at 80012470: slw r3 r9 r4
Parsed instruction at 80012474: srw r0 r0 r12
Parsed instruction at 80012478: or r0 r3 r0
Parsed instruction at 8001247C: stwu r0 0x4(r6)
Parsed label: L_80012480:
Parsed instruction at 80012480: clrlwi. r5 r5 30
Parsed instruction at 80012484: addi r4 r8 0x3
Parsed instruction at 80012488: addi r3 r6 0x3
Parsed instruction at 8001248C: beqlr 
Parsed instruction at 80012490: subfic r0 r11 0x4
Parsed instruction at 80012494: subf r4 r0 r4
Parsed label: L_80012498:
Parsed instruction at 80012498: lbzu r0 0x1(r4)
Parsed instruction at 8001249C: subic. r5 r5 0x1
Parsed instruction at 800124A0: stbu r0 0x1(r3)
Parsed instruction at 800124A4: bne .L_80012498
Parsed instruction at 800124A8: blr 
End of function: fn_800123E8, 54 instructions
Parsed function: fn_800124AC at 0x800124AC
Parsed instruction at 800124AC: add r6 r3 r5
Parsed instruction at 800124B0: clrlwi. r0 r6 30
Parsed instruction at 800124B4: add r4 r4 r5
Parsed instruction at 800124B8: mr r3 r0
Parsed instruction at 800124BC: beq .L_800124D4
Parsed instruction at 800124C0: subf r5 r3 r5
Parsed label: L_800124C4:
Parsed instruction at 800124C4: lbzu r0 -0x1(r4)
Parsed instruction at 800124C8: subic. r3 r3 0x1
Parsed instruction at 800124CC: stbu r0 -0x1(r6)
Parsed instruction at 800124D0: bne .L_800124C4
Parsed label: L_800124D4:
Parsed instruction at 800124D4: srwi. r3 r5 5
Parsed instruction at 800124D8: beq .L_80012524
Parsed label: L_800124DC:
Parsed instruction at 800124DC: lwz r0 -0x4(r4)
Parsed instruction at 800124E0: subic. r3 r3 0x1
Parsed instruction at 800124E4: stw r0 -0x4(r6)
Parsed instruction at 800124E8: lwz r0 -0x8(r4)
Parsed instruction at 800124EC: stw r0 -0x8(r6)
Parsed instruction at 800124F0: lwz r0 -0xc(r4)
Parsed instruction at 800124F4: stw r0 -0xc(r6)
Parsed instruction at 800124F8: lwz r0 -0x10(r4)
Parsed instruction at 800124FC: stw r0 -0x10(r6)
Parsed instruction at 80012500: lwz r0 -0x14(r4)
Parsed instruction at 80012504: stw r0 -0x14(r6)
Parsed instruction at 80012508: lwz r0 -0x18(r4)
Parsed instruction at 8001250C: stw r0 -0x18(r6)
Parsed instruction at 80012510: lwz r0 -0x1c(r4)
Parsed instruction at 80012514: stw r0 -0x1c(r6)
Parsed instruction at 80012518: lwzu r0 -0x20(r4)
Parsed instruction at 8001251C: stwu r0 -0x20(r6)
Parsed instruction at 80012520: bne .L_800124DC
Parsed label: L_80012524:
Parsed instruction at 80012524: extrwi. r3 r5 3 27
Parsed instruction at 80012528: beq .L_8001253C
Parsed label: L_8001252C:
Parsed instruction at 8001252C: lwzu r0 -0x4(r4)
Parsed instruction at 80012530: subic. r3 r3 0x1
Parsed instruction at 80012534: stwu r0 -0x4(r6)
Parsed instruction at 80012538: bne .L_8001252C
Parsed label: L_8001253C:
Parsed instruction at 8001253C: clrlwi. r5 r5 30
Parsed instruction at 80012540: beqlr 
Parsed label: L_80012544:
Parsed instruction at 80012544: lbzu r0 -0x1(r4)
Parsed instruction at 80012548: subic. r5 r5 0x1
Parsed instruction at 8001254C: stbu r0 -0x1(r6)
Parsed instruction at 80012550: bne .L_80012544
Parsed instruction at 80012554: blr 
End of function: fn_800124AC, 50 instructions
Parsed function: fn_80012558 at 0x80012558
Parsed instruction at 80012558: neg r0 r3
Parsed instruction at 8001255C: clrlwi. r6 r0 30
Parsed instruction at 80012560: subi r7 r4 0x1
Parsed instruction at 80012564: subi r3 r3 0x1
Parsed instruction at 80012568: beq .L_80012580
Parsed instruction at 8001256C: subf r5 r6 r5
Parsed label: L_80012570:
Parsed instruction at 80012570: lbzu r0 0x1(r7)
Parsed instruction at 80012574: subic. r6 r6 0x1
Parsed instruction at 80012578: stbu r0 0x1(r3)
Parsed instruction at 8001257C: bne .L_80012570
Parsed label: L_80012580:
Parsed instruction at 80012580: srwi. r4 r5 5
Parsed instruction at 80012584: subi r6 r7 0x3
Parsed instruction at 80012588: subi r3 r3 0x3
Parsed instruction at 8001258C: beq .L_800125D8
Parsed label: L_80012590:
Parsed instruction at 80012590: lwz r0 0x4(r6)
Parsed instruction at 80012594: subic. r4 r4 0x1
Parsed instruction at 80012598: stw r0 0x4(r3)
Parsed instruction at 8001259C: lwz r0 0x8(r6)
Parsed instruction at 800125A0: stw r0 0x8(r3)
Parsed instruction at 800125A4: lwz r0 0xc(r6)
Parsed instruction at 800125A8: stw r0 0xc(r3)
Parsed instruction at 800125AC: lwz r0 0x10(r6)
Parsed instruction at 800125B0: stw r0 0x10(r3)
Parsed instruction at 800125B4: lwz r0 0x14(r6)
Parsed instruction at 800125B8: stw r0 0x14(r3)
Parsed instruction at 800125BC: lwz r0 0x18(r6)
Parsed instruction at 800125C0: stw r0 0x18(r3)
Parsed instruction at 800125C4: lwz r0 0x1c(r6)
Parsed instruction at 800125C8: stw r0 0x1c(r3)
Parsed instruction at 800125CC: lwzu r0 0x20(r6)
Parsed instruction at 800125D0: stwu r0 0x20(r3)
Parsed instruction at 800125D4: bne .L_80012590
Parsed label: L_800125D8:
Parsed instruction at 800125D8: extrwi. r4 r5 3 27
Parsed instruction at 800125DC: beq .L_800125F0
Parsed label: L_800125E0:
Parsed instruction at 800125E0: lwzu r0 0x4(r6)
Parsed instruction at 800125E4: subic. r4 r4 0x1
Parsed instruction at 800125E8: stwu r0 0x4(r3)
Parsed instruction at 800125EC: bne .L_800125E0
Parsed label: L_800125F0:
Parsed instruction at 800125F0: clrlwi. r5 r5 30
Parsed instruction at 800125F4: addi r4 r6 0x3
Parsed instruction at 800125F8: addi r3 r3 0x3
Parsed instruction at 800125FC: beqlr 
Parsed label: L_80012600:
Parsed instruction at 80012600: lbzu r0 0x1(r4)
Parsed instruction at 80012604: subic. r5 r5 0x1
Parsed instruction at 80012608: stbu r0 0x1(r3)
Parsed instruction at 8001260C: bne .L_80012600
Parsed instruction at 80012610: blr 
End of function: fn_80012558, 54 instructions
Parsed function: __stdio_atexit at 0x80012614
Parsed instruction at 80012614: blr 
End of function: __stdio_atexit, 1 instructions
Parsed function: vprintf at 0x80012618
Parsed instruction at 80012618: mflr r0
Parsed instruction at 8001261C: lis r5 __files@ha
Parsed instruction at 80012620: stw r0 0x4(r1)
Parsed instruction at 80012624: addi r5 r5 __files@l
Parsed instruction at 80012628: stwu r1 -0x20(r1)
Parsed instruction at 8001262C: stw r31 0x1c(r1)
Parsed instruction at 80012630: addi r31 r5 0x48
Parsed instruction at 80012634: stw r30 0x18(r1)
Parsed instruction at 80012638: addi r30 r4 0x0
Parsed instruction at 8001263C: li r4 -0x1
Parsed instruction at 80012640: stw r29 0x14(r1)
Parsed instruction at 80012644: addi r29 r3 0x0
Parsed instruction at 80012648: addi r3 r31 0x0
Parsed instruction at 8001264C: bl fwide
Parsed instruction at 80012650: cmpwi r3 0x0
Parsed instruction at 80012654: blt .L_80012660
Parsed instruction at 80012658: li r3 -0x1
Parsed instruction at 8001265C: b .L_80012678
Parsed label: L_80012660:
Parsed instruction at 80012660: lis r3 __FileWrite@ha
Parsed instruction at 80012664: addi r3 r3 __FileWrite@l
Parsed instruction at 80012668: addi r4 r31 0x0
Parsed instruction at 8001266C: addi r5 r29 0x0
Parsed instruction at 80012670: addi r6 r30 0x0
Parsed instruction at 80012674: bl __pformatter
Parsed label: L_80012678:
Parsed instruction at 80012678: lwz r0 0x24(r1)
Parsed instruction at 8001267C: lwz r31 0x1c(r1)
Parsed instruction at 80012680: lwz r30 0x18(r1)
Parsed instruction at 80012684: mtlr r0
Parsed instruction at 80012688: lwz r29 0x14(r1)
Parsed instruction at 8001268C: addi r1 r1 0x20
Parsed instruction at 80012690: blr 
End of function: vprintf, 33 instructions
Parsed function: fn_80012694 at 0x80012694
Parsed instruction at 80012694: mflr r0
Parsed instruction at 80012698: stw r0 0x4(r1)
Parsed instruction at 8001269C: stwu r1 -0x80(r1)
Parsed instruction at 800126A0: stw r31 0x7c(r1)
Parsed instruction at 800126A4: stw r30 0x78(r1)
Parsed instruction at 800126A8: bne cr1 .L_800126CC
Parsed instruction at 800126AC: stfd f1 0x28(r1)
Parsed instruction at 800126B0: stfd f2 0x30(r1)
Parsed instruction at 800126B4: stfd f3 0x38(r1)
Parsed instruction at 800126B8: stfd f4 0x40(r1)
Parsed instruction at 800126BC: stfd f5 0x48(r1)
Parsed instruction at 800126C0: stfd f6 0x50(r1)
Parsed instruction at 800126C4: stfd f7 0x58(r1)
Parsed instruction at 800126C8: stfd f8 0x60(r1)
Parsed label: L_800126CC:
Parsed instruction at 800126CC: stw r3 0x8(r1)
Parsed instruction at 800126D0: addi r30 r3 0x0
Parsed instruction at 800126D4: stw r4 0xc(r1)
Parsed instruction at 800126D8: lis r4 __files@ha
Parsed instruction at 800126DC: addi r4 r4 __files@l
Parsed instruction at 800126E0: stw r5 0x10(r1)
Parsed instruction at 800126E4: addi r31 r4 0x48
Parsed instruction at 800126E8: addi r3 r31 0x0
Parsed instruction at 800126EC: stw r6 0x14(r1)
Parsed instruction at 800126F0: li r4 -0x1
Parsed instruction at 800126F4: stw r7 0x18(r1)
Parsed instruction at 800126F8: stw r8 0x1c(r1)
Parsed instruction at 800126FC: stw r9 0x20(r1)
Parsed instruction at 80012700: stw r10 0x24(r1)
Parsed instruction at 80012704: bl fwide
Parsed instruction at 80012708: cmpwi r3 0x0
Parsed instruction at 8001270C: blt .L_80012718
Parsed instruction at 80012710: li r3 -0x1
Parsed instruction at 80012714: b .L_80012748
Parsed label: L_80012718:
Parsed instruction at 80012718: lis r0 0x100
Parsed instruction at 8001271C: stw r0 0x6c(r1)
Parsed instruction at 80012720: addi r0 r1 0x88
Parsed instruction at 80012724: lis r3 __FileWrite@ha
Parsed instruction at 80012728: stw r0 0x70(r1)
Parsed instruction at 8001272C: addi r0 r1 0x8
Parsed instruction at 80012730: addi r6 r1 0x6c
Parsed instruction at 80012734: stw r0 0x74(r1)
Parsed instruction at 80012738: addi r3 r3 __FileWrite@l
Parsed instruction at 8001273C: addi r4 r31 0x0
Parsed instruction at 80012740: addi r5 r30 0x0
Parsed instruction at 80012744: bl __pformatter
Parsed label: L_80012748:
Parsed instruction at 80012748: lwz r0 0x84(r1)
Parsed instruction at 8001274C: lwz r31 0x7c(r1)
Parsed instruction at 80012750: lwz r30 0x78(r1)
Parsed instruction at 80012754: mtlr r0
Parsed instruction at 80012758: addi r1 r1 0x80
Parsed instruction at 8001275C: blr 
End of function: fn_80012694, 54 instructions
Parsed function: __FileWrite at 0x80012760
Parsed instruction at 80012760: mflr r0
Parsed instruction at 80012764: stw r0 0x4(r1)
Parsed instruction at 80012768: stwu r1 -0x20(r1)
Parsed instruction at 8001276C: stw r31 0x1c(r1)
Parsed instruction at 80012770: addi r31 r5 0x0
Parsed instruction at 80012774: stw r30 0x18(r1)
Parsed instruction at 80012778: addi r30 r3 0x0
Parsed instruction at 8001277C: addi r3 r4 0x0
Parsed instruction at 80012780: addi r6 r30 0x0
Parsed instruction at 80012784: li r4 0x1
Parsed instruction at 80012788: bl fwrite
Parsed instruction at 8001278C: cmplw r31 r3
Parsed instruction at 80012790: bne .L_8001279C
Parsed instruction at 80012794: mr r3 r30
Parsed instruction at 80012798: b .L_800127A0
Parsed label: L_8001279C:
Parsed instruction at 8001279C: li r3 0x0
Parsed label: L_800127A0:
Parsed instruction at 800127A0: lwz r0 0x24(r1)
Parsed instruction at 800127A4: lwz r31 0x1c(r1)
Parsed instruction at 800127A8: lwz r30 0x18(r1)
Parsed instruction at 800127AC: mtlr r0
Parsed instruction at 800127B0: addi r1 r1 0x20
Parsed instruction at 800127B4: blr 
End of function: __FileWrite, 24 instructions
Parsed function: __pformatter at 0x800127B8
Parsed instruction at 800127B8: mflr r0
Parsed instruction at 800127BC: lis r7 "@stringBase0_8001A600"@ha
Parsed instruction at 800127C0: stw r0 0x4(r1)
Parsed instruction at 800127C4: li r0 0x20
Parsed instruction at 800127C8: stwu r1 -0x268(r1)
Parsed instruction at 800127CC: stmw r18 0x230(r1)
Parsed instruction at 800127D0: addi r31 r3 0x0
Parsed instruction at 800127D4: addi r30 r4 0x0
Parsed instruction at 800127D8: addi r28 r6 0x0
Parsed instruction at 800127DC: addi r25 r5 0x0
Parsed instruction at 800127E0: addi r26 r1 0x21c
Parsed instruction at 800127E4: addi r23 r1 0x21b
Parsed instruction at 800127E8: addi r20 r7 "@stringBase0_8001A600"@l
Parsed instruction at 800127EC: li r27 0x0
Parsed instruction at 800127F0: stb r0 0x19(r1)
Parsed instruction at 800127F4: b .L_80012DC4
Parsed label: L_800127F8:
Parsed instruction at 800127F8: addi r3 r25 0x0
Parsed instruction at 800127FC: li r4 0x25
Parsed instruction at 80012800: bl strchr
Parsed instruction at 80012804: mr. r24 r3
Parsed instruction at 80012808: bne .L_80012844
Parsed instruction at 8001280C: mr r3 r25
Parsed instruction at 80012810: bl strlen
Parsed instruction at 80012814: mr. r5 r3
Parsed instruction at 80012818: add r27 r27 r5
Parsed instruction at 8001281C: beq .L_80012DD0
Parsed instruction at 80012820: addi r12 r31 0x0
Parsed instruction at 80012824: mtlr r12
Parsed instruction at 80012828: addi r3 r30 0x0
Parsed instruction at 8001282C: addi r4 r25 0x0
Parsed instruction at 80012830: blrl 
Parsed instruction at 80012834: cmplwi r3 0x0
Parsed instruction at 80012838: bne .L_80012DD0
Parsed instruction at 8001283C: li r3 -0x1
Parsed instruction at 80012840: b .L_80012DD4
Parsed label: L_80012844:
Parsed instruction at 80012844: subf. r5 r25 r24
Parsed instruction at 80012848: add r27 r27 r5
Parsed instruction at 8001284C: beq .L_80012874
Parsed instruction at 80012850: addi r12 r31 0x0
Parsed instruction at 80012854: mtlr r12
Parsed instruction at 80012858: addi r3 r30 0x0
Parsed instruction at 8001285C: addi r4 r25 0x0
Parsed instruction at 80012860: blrl 
Parsed instruction at 80012864: cmplwi r3 0x0
Parsed instruction at 80012868: bne .L_80012874
Parsed instruction at 8001286C: li r3 -0x1
Parsed instruction at 80012870: b .L_80012DD4
Parsed label: L_80012874:
Parsed instruction at 80012874: addi r3 r24 0x0
Parsed instruction at 80012878: addi r4 r28 0x0
Parsed instruction at 8001287C: addi r5 r1 0x21c
Parsed instruction at 80012880: bl parse_format_80013A58
Parsed instruction at 80012884: lbz r0 0x221(r1)
Parsed instruction at 80012888: addi r25 r3 0x0
Parsed instruction at 8001288C: cmpwi r0 0x69
Parsed instruction at 80012890: beq .L_80012934
Parsed instruction at 80012894: bge .L_800128EC
Parsed instruction at 80012898: cmpwi r0 0x58
Parsed instruction at 8001289C: beq .L_800129F0
Parsed instruction at 800128A0: bge .L_800128C8
Parsed instruction at 800128A4: cmpwi r0 0x45
Parsed instruction at 800128A8: beq .L_80012AAC
Parsed instruction at 800128AC: bge .L_800128BC
Parsed instruction at 800128B0: cmpwi r0 0x25
Parsed instruction at 800128B4: beq .L_80012C30
Parsed instruction at 800128B8: b .L_80012C44
Parsed label: L_800128BC:
Parsed instruction at 800128BC: cmpwi r0 0x47
Parsed instruction at 800128C0: beq .L_80012AAC
Parsed instruction at 800128C4: b .L_80012C44
Parsed label: L_800128C8:
Parsed instruction at 800128C8: cmpwi r0 0x64
Parsed instruction at 800128CC: beq .L_80012934
Parsed instruction at 800128D0: bge .L_800128E0
Parsed instruction at 800128D4: cmpwi r0 0x63
Parsed instruction at 800128D8: bge .L_80012C0C
Parsed instruction at 800128DC: b .L_80012C44
Parsed label: L_800128E0:
Parsed instruction at 800128E0: cmpwi r0 0x68
Parsed instruction at 800128E4: bge .L_80012C44
Parsed instruction at 800128E8: b .L_80012AAC
Parsed label: L_800128EC:
Parsed instruction at 800128EC: cmpwi r0 0x75
Parsed instruction at 800128F0: beq .L_800129F0
Parsed instruction at 800128F4: bge .L_8001291C
Parsed instruction at 800128F8: cmpwi r0 0x6f
Parsed instruction at 800128FC: beq .L_800129F0
Parsed instruction at 80012900: bge .L_80012910
Parsed instruction at 80012904: cmpwi r0 0x6e
Parsed instruction at 80012908: bge .L_80012BA4
Parsed instruction at 8001290C: b .L_80012C44
Parsed label: L_80012910:
Parsed instruction at 80012910: cmpwi r0 0x73
Parsed instruction at 80012914: beq .L_80012AD0
Parsed instruction at 80012918: b .L_80012C44
Parsed label: L_8001291C:
Parsed instruction at 8001291C: cmpwi r0 0xff
Parsed instruction at 80012920: beq .L_80012C44
Parsed instruction at 80012924: bge .L_80012C44
Parsed instruction at 80012928: cmpwi r0 0x78
Parsed instruction at 8001292C: beq .L_800129F0
Parsed instruction at 80012930: b .L_80012C44
Parsed label: L_80012934:
Parsed instruction at 80012934: lbz r0 0x220(r1)
Parsed instruction at 80012938: cmplwi r0 0x3
Parsed instruction at 8001293C: bne .L_80012954
Parsed instruction at 80012940: addi r3 r28 0x0
Parsed instruction at 80012944: li r4 0x1
Parsed instruction at 80012948: bl __va_arg
Parsed instruction at 8001294C: lwz r29 0x0(r3)
Parsed instruction at 80012950: b .L_80012984
Parsed label: L_80012954:
Parsed instruction at 80012954: cmplwi r0 0x4
Parsed instruction at 80012958: bne .L_80012974
Parsed instruction at 8001295C: addi r3 r28 0x0
Parsed instruction at 80012960: li r4 0x2
Parsed instruction at 80012964: bl __va_arg
Parsed instruction at 80012968: lwz r21 0x0(r3)
Parsed instruction at 8001296C: lwz r22 0x4(r3)
Parsed instruction at 80012970: b .L_80012984
Parsed label: L_80012974:
Parsed instruction at 80012974: addi r3 r28 0x0
Parsed instruction at 80012978: li r4 0x1
Parsed instruction at 8001297C: bl __va_arg
Parsed instruction at 80012980: lwz r29 0x0(r3)
Parsed label: L_80012984:
Parsed instruction at 80012984: lbz r3 0x220(r1)
Parsed instruction at 80012988: cmplwi r3 0x2
Parsed instruction at 8001298C: bne .L_80012998
Parsed instruction at 80012990: extsh r0 r29
Parsed instruction at 80012994: mr r29 r0
Parsed label: L_80012998:
Parsed instruction at 80012998: cmplwi r3 0x1
Parsed instruction at 8001299C: bne .L_800129A8
Parsed instruction at 800129A0: extsb r0 r29
Parsed instruction at 800129A4: mr r29 r0
Parsed label: L_800129A8:
Parsed instruction at 800129A8: cmplwi r3 0x4
Parsed instruction at 800129AC: bne .L_800129D0
Parsed instruction at 800129B0: addi r4 r22 0x0
Parsed instruction at 800129B4: addi r3 r21 0x0
Parsed instruction at 800129B8: addi r5 r26 0x0
Parsed instruction at 800129BC: addi r6 r1 0x21c
Parsed instruction at 800129C0: bl longlong2str_80013554
Parsed instruction at 800129C4: mr. r19 r3
Parsed instruction at 800129C8: beq .L_80012C44
Parsed instruction at 800129CC: b .L_800129E8
Parsed label: L_800129D0:
Parsed instruction at 800129D0: addi r3 r29 0x0
Parsed instruction at 800129D4: addi r4 r26 0x0
Parsed instruction at 800129D8: addi r5 r1 0x21c
Parsed instruction at 800129DC: bl long2str_80013834
Parsed instruction at 800129E0: mr. r19 r3
Parsed instruction at 800129E4: beq .L_80012C44
Parsed label: L_800129E8:
Parsed instruction at 800129E8: subf r24 r19 r23
Parsed instruction at 800129EC: b .L_80012C84
Parsed label: L_800129F0:
Parsed instruction at 800129F0: lbz r0 0x220(r1)
Parsed instruction at 800129F4: cmplwi r0 0x3
Parsed instruction at 800129F8: bne .L_80012A10
Parsed instruction at 800129FC: addi r3 r28 0x0
Parsed instruction at 80012A00: li r4 0x1
Parsed instruction at 80012A04: bl __va_arg
Parsed instruction at 80012A08: lwz r29 0x0(r3)
Parsed instruction at 80012A0C: b .L_80012A40
Parsed label: L_80012A10:
Parsed instruction at 80012A10: cmplwi r0 0x4
Parsed instruction at 80012A14: bne .L_80012A30
Parsed instruction at 80012A18: addi r3 r28 0x0
Parsed instruction at 80012A1C: li r4 0x2
Parsed instruction at 80012A20: bl __va_arg
Parsed instruction at 80012A24: lwz r21 0x0(r3)
Parsed instruction at 80012A28: lwz r22 0x4(r3)
Parsed instruction at 80012A2C: b .L_80012A40
Parsed label: L_80012A30:
Parsed instruction at 80012A30: addi r3 r28 0x0
Parsed instruction at 80012A34: li r4 0x1
Parsed instruction at 80012A38: bl __va_arg
Parsed instruction at 80012A3C: lwz r29 0x0(r3)
Parsed label: L_80012A40:
Parsed instruction at 80012A40: lbz r3 0x220(r1)
Parsed instruction at 80012A44: cmplwi r3 0x2
Parsed instruction at 80012A48: bne .L_80012A54
Parsed instruction at 80012A4C: clrlwi r0 r29 16
Parsed instruction at 80012A50: mr r29 r0
Parsed label: L_80012A54:
Parsed instruction at 80012A54: cmplwi r3 0x1
Parsed instruction at 80012A58: bne .L_80012A64
Parsed instruction at 80012A5C: clrlwi r0 r29 24
Parsed instruction at 80012A60: mr r29 r0
Parsed label: L_80012A64:
Parsed instruction at 80012A64: cmplwi r3 0x4
Parsed instruction at 80012A68: bne .L_80012A8C
Parsed instruction at 80012A6C: addi r4 r22 0x0
Parsed instruction at 80012A70: addi r3 r21 0x0
Parsed instruction at 80012A74: addi r5 r26 0x0
Parsed instruction at 80012A78: addi r6 r1 0x21c
Parsed instruction at 80012A7C: bl longlong2str_80013554
Parsed instruction at 80012A80: mr. r19 r3
Parsed instruction at 80012A84: beq .L_80012C44
Parsed instruction at 80012A88: b .L_80012AA4
Parsed label: L_80012A8C:
Parsed instruction at 80012A8C: addi r3 r29 0x0
Parsed instruction at 80012A90: addi r4 r26 0x0
Parsed instruction at 80012A94: addi r5 r1 0x21c
Parsed instruction at 80012A98: bl long2str_80013834
Parsed instruction at 80012A9C: mr. r19 r3
Parsed instruction at 80012AA0: beq .L_80012C44
Parsed label: L_80012AA4:
Parsed instruction at 80012AA4: subf r24 r19 r23
Parsed instruction at 80012AA8: b .L_80012C84
Parsed label: L_80012AAC:
Parsed instruction at 80012AAC: addi r3 r28 0x0
Parsed instruction at 80012AB0: addi r4 r26 0x0
Parsed instruction at 80012AB4: addi r5 r1 0x21c
Parsed instruction at 80012AB8: li r6 0x0
Parsed instruction at 80012ABC: bl float2str
Parsed instruction at 80012AC0: mr. r19 r3
Parsed instruction at 80012AC4: beq .L_80012C44
Parsed instruction at 80012AC8: subf r24 r19 r23
Parsed instruction at 80012ACC: b .L_80012C84
Parsed label: L_80012AD0:
Parsed instruction at 80012AD0: lbz r0 0x220(r1)
Parsed instruction at 80012AD4: cmplwi r0 0x6
Parsed instruction at 80012AD8: bne .L_80012B14
Parsed instruction at 80012ADC: addi r3 r28 0x0
Parsed instruction at 80012AE0: li r4 0x1
Parsed instruction at 80012AE4: bl __va_arg
Parsed instruction at 80012AE8: lwz r4 0x0(r3)
Parsed instruction at 80012AEC: cmplwi r4 0x0
Parsed instruction at 80012AF0: bne .L_80012AF8
Parsed instruction at 80012AF4: li r4 "@wstringBase0_8001EE38"@sda21
Parsed label: L_80012AF8:
Parsed instruction at 80012AF8: addi r3 r1 0x1c
Parsed instruction at 80012AFC: li r5 0x200
Parsed instruction at 80012B00: bl wcstombs
Parsed instruction at 80012B04: cmpwi r3 0x0
Parsed instruction at 80012B08: blt .L_80012C44
Parsed instruction at 80012B0C: addi r19 r1 0x1c
Parsed instruction at 80012B10: b .L_80012B24
Parsed label: L_80012B14:
Parsed instruction at 80012B14: addi r3 r28 0x0
Parsed instruction at 80012B18: li r4 0x1
Parsed instruction at 80012B1C: bl __va_arg
Parsed instruction at 80012B20: lwz r19 0x0(r3)
Parsed label: L_80012B24:
Parsed instruction at 80012B24: cmplwi r19 0x0
Parsed instruction at 80012B28: bne .L_80012B30
Parsed instruction at 80012B2C: mr r19 r20
Parsed label: L_80012B30:
Parsed instruction at 80012B30: lbz r0 0x21f(r1)
Parsed instruction at 80012B34: cmplwi r0 0x0
Parsed instruction at 80012B38: beq .L_80012B64
Parsed instruction at 80012B3C: lbz r0 0x21e(r1)
Parsed instruction at 80012B40: lbz r24 0x0(r19)
Parsed instruction at 80012B44: addi r19 r19 0x1
Parsed instruction at 80012B48: cmplwi r0 0x0
Parsed instruction at 80012B4C: beq .L_80012C84
Parsed instruction at 80012B50: lwz r0 0x228(r1)
Parsed instruction at 80012B54: cmpw r24 r0
Parsed instruction at 80012B58: ble .L_80012C84
Parsed instruction at 80012B5C: mr r24 r0
Parsed instruction at 80012B60: b .L_80012C84
Parsed label: L_80012B64:
Parsed instruction at 80012B64: lbz r0 0x21e(r1)
Parsed instruction at 80012B68: cmplwi r0 0x0
Parsed instruction at 80012B6C: beq .L_80012B94
Parsed instruction at 80012B70: lwz r24 0x228(r1)
Parsed instruction at 80012B74: addi r3 r19 0x0
Parsed instruction at 80012B78: li r4 0x0
Parsed instruction at 80012B7C: addi r5 r24 0x0
Parsed instruction at 80012B80: bl memchr
Parsed instruction at 80012B84: cmplwi r3 0x0
Parsed instruction at 80012B88: beq .L_80012C84
Parsed instruction at 80012B8C: subf r24 r19 r3
Parsed instruction at 80012B90: b .L_80012C84
Parsed label: L_80012B94:
Parsed instruction at 80012B94: mr r3 r19
Parsed instruction at 80012B98: bl strlen
Parsed instruction at 80012B9C: mr r24 r3
Parsed instruction at 80012BA0: b .L_80012C84
Parsed label: L_80012BA4:
Parsed instruction at 80012BA4: addi r3 r28 0x0
Parsed instruction at 80012BA8: li r4 0x1
Parsed instruction at 80012BAC: bl __va_arg
Parsed instruction at 80012BB0: lbz r0 0x220(r1)
Parsed instruction at 80012BB4: lwz r3 0x0(r3)
Parsed instruction at 80012BB8: cmpwi r0 0x2
Parsed instruction at 80012BBC: beq .L_80012BE8
Parsed instruction at 80012BC0: bge .L_80012BD0
Parsed instruction at 80012BC4: cmpwi r0 0x0
Parsed instruction at 80012BC8: beq .L_80012BE0
Parsed instruction at 80012BCC: b .L_80012DC4
Parsed label: L_80012BD0:
Parsed instruction at 80012BD0: cmpwi r0 0x4
Parsed instruction at 80012BD4: beq .L_80012BFC
Parsed instruction at 80012BD8: bge .L_80012DC4
Parsed instruction at 80012BDC: b .L_80012BF4
Parsed label: L_80012BE0:
Parsed instruction at 80012BE0: stw r27 0x0(r3)
Parsed instruction at 80012BE4: b .L_80012DC4
Parsed label: L_80012BE8:
Parsed instruction at 80012BE8: extsh r0 r27
Parsed instruction at 80012BEC: sth r0 0x0(r3)
Parsed instruction at 80012BF0: b .L_80012DC4
Parsed label: L_80012BF4:
Parsed instruction at 80012BF4: stw r27 0x0(r3)
Parsed instruction at 80012BF8: b .L_80012DC4
Parsed label: L_80012BFC:
Parsed instruction at 80012BFC: stw r27 0x4(r3)
Parsed instruction at 80012C00: srawi r0 r27 31
Parsed instruction at 80012C04: stw r0 0x0(r3)
Parsed instruction at 80012C08: b .L_80012DC4
Parsed label: L_80012C0C:
Parsed instruction at 80012C0C: addi r3 r28 0x0
Parsed instruction at 80012C10: addi r19 r1 0x1c
Parsed instruction at 80012C14: li r4 0x1
Parsed instruction at 80012C18: bl __va_arg
Parsed instruction at 80012C1C: lwz r0 0x0(r3)
Parsed instruction at 80012C20: li r24 0x1
Parsed instruction at 80012C24: extsb r0 r0
Parsed instruction at 80012C28: stb r0 0x1c(r1)
Parsed instruction at 80012C2C: b .L_80012C84
Parsed label: L_80012C30:
Parsed instruction at 80012C30: li r0 0x25
Parsed instruction at 80012C34: stb r0 0x1c(r1)
Parsed instruction at 80012C38: addi r19 r1 0x1c
Parsed instruction at 80012C3C: li r24 0x1
Parsed instruction at 80012C40: b .L_80012C84
Parsed label: L_80012C44:
Parsed instruction at 80012C44: mr r3 r24
Parsed instruction at 80012C48: bl strlen
Parsed instruction at 80012C4C: mr. r5 r3
Parsed instruction at 80012C50: add r27 r27 r5
Parsed instruction at 80012C54: beq .L_80012C7C
Parsed instruction at 80012C58: addi r12 r31 0x0
Parsed instruction at 80012C5C: mtlr r12
Parsed instruction at 80012C60: addi r3 r30 0x0
Parsed instruction at 80012C64: addi r4 r24 0x0
Parsed instruction at 80012C68: blrl 
Parsed instruction at 80012C6C: cmplwi r3 0x0
Parsed instruction at 80012C70: bne .L_80012C7C
Parsed instruction at 80012C74: li r3 -0x1
Parsed instruction at 80012C78: b .L_80012DD4
Parsed label: L_80012C7C:
Parsed instruction at 80012C7C: mr r3 r27
Parsed instruction at 80012C80: b .L_80012DD4
Parsed label: L_80012C84:
Parsed instruction at 80012C84: lbz r0 0x21c(r1)
Parsed instruction at 80012C88: addi r18 r24 0x0
Parsed instruction at 80012C8C: cmplwi r0 0x0
Parsed instruction at 80012C90: beq .L_80012D40
Parsed instruction at 80012C94: cmplwi r0 0x2
Parsed instruction at 80012C98: bne .L_80012CA4
Parsed instruction at 80012C9C: li r0 0x30
Parsed instruction at 80012CA0: b .L_80012CA8
Parsed label: L_80012CA4:
Parsed instruction at 80012CA4: li r0 0x20
Parsed label: L_80012CA8:
Parsed instruction at 80012CA8: extsb r0 r0
Parsed instruction at 80012CAC: stb r0 0x19(r1)
Parsed instruction at 80012CB0: lbz r0 0x0(r19)
Parsed instruction at 80012CB4: extsb r0 r0
Parsed instruction at 80012CB8: cmpwi r0 0x2b
Parsed instruction at 80012CBC: beq .L_80012CC8
Parsed instruction at 80012CC0: cmpwi r0 0x2d
Parsed instruction at 80012CC4: bne .L_80012D34
Parsed label: L_80012CC8:
Parsed instruction at 80012CC8: lbz r0 0x19(r1)
Parsed instruction at 80012CCC: cmpwi r0 0x30
Parsed instruction at 80012CD0: bne .L_80012D34
Parsed instruction at 80012CD4: addi r12 r31 0x0
Parsed instruction at 80012CD8: mtlr r12
Parsed instruction at 80012CDC: addi r3 r30 0x0
Parsed instruction at 80012CE0: addi r4 r19 0x0
Parsed instruction at 80012CE4: li r5 0x1
Parsed instruction at 80012CE8: blrl 
Parsed instruction at 80012CEC: cmplwi r3 0x0
Parsed instruction at 80012CF0: bne .L_80012CFC
Parsed instruction at 80012CF4: li r3 -0x1
Parsed instruction at 80012CF8: b .L_80012DD4
Parsed label: L_80012CFC:
Parsed instruction at 80012CFC: addi r19 r19 0x1
Parsed instruction at 80012D00: subi r24 r24 0x1
Parsed instruction at 80012D04: b .L_80012D34
Parsed label: L_80012D08:
Parsed instruction at 80012D08: addi r12 r31 0x0
Parsed instruction at 80012D0C: mtlr r12
Parsed instruction at 80012D10: addi r3 r30 0x0
Parsed instruction at 80012D14: addi r4 r1 0x19
Parsed instruction at 80012D18: li r5 0x1
Parsed instruction at 80012D1C: blrl 
Parsed instruction at 80012D20: cmplwi r3 0x0
Parsed instruction at 80012D24: bne .L_80012D30
Parsed instruction at 80012D28: li r3 -0x1
Parsed instruction at 80012D2C: b .L_80012DD4
Parsed label: L_80012D30:
Parsed instruction at 80012D30: addi r18 r18 0x1
Parsed label: L_80012D34:
Parsed instruction at 80012D34: lwz r0 0x224(r1)
Parsed instruction at 80012D38: cmpw r18 r0
Parsed instruction at 80012D3C: blt .L_80012D08
Parsed label: L_80012D40:
Parsed instruction at 80012D40: cmpwi r24 0x0
Parsed instruction at 80012D44: beq .L_80012D70
Parsed instruction at 80012D48: addi r12 r31 0x0
Parsed instruction at 80012D4C: mtlr r12
Parsed instruction at 80012D50: addi r3 r30 0x0
Parsed instruction at 80012D54: addi r4 r19 0x0
Parsed instruction at 80012D58: addi r5 r24 0x0
Parsed instruction at 80012D5C: blrl 
Parsed instruction at 80012D60: cmplwi r3 0x0
Parsed instruction at 80012D64: bne .L_80012D70
Parsed instruction at 80012D68: li r3 -0x1
Parsed instruction at 80012D6C: b .L_80012DD4
Parsed label: L_80012D70:
Parsed instruction at 80012D70: lbz r0 0x21c(r1)
Parsed instruction at 80012D74: cmplwi r0 0x0
Parsed instruction at 80012D78: bne .L_80012DC0
Parsed instruction at 80012D7C: li r19 0x20
Parsed instruction at 80012D80: b .L_80012DB4
Parsed label: L_80012D84:
Parsed instruction at 80012D84: mr r12 r31
Parsed instruction at 80012D88: stb r19 0x18(r1)
Parsed instruction at 80012D8C: mtlr r12
Parsed instruction at 80012D90: addi r3 r30 0x0
Parsed instruction at 80012D94: addi r4 r1 0x18
Parsed instruction at 80012D98: li r5 0x1
Parsed instruction at 80012D9C: blrl 
Parsed instruction at 80012DA0: cmplwi r3 0x0
Parsed instruction at 80012DA4: bne .L_80012DB0
Parsed instruction at 80012DA8: li r3 -0x1
Parsed instruction at 80012DAC: b .L_80012DD4
Parsed label: L_80012DB0:
Parsed instruction at 80012DB0: addi r18 r18 0x1
Parsed label: L_80012DB4:
Parsed instruction at 80012DB4: lwz r0 0x224(r1)
Parsed instruction at 80012DB8: cmpw r18 r0
Parsed instruction at 80012DBC: blt .L_80012D84
Parsed label: L_80012DC0:
Parsed instruction at 80012DC0: add r27 r27 r18
Parsed label: L_80012DC4:
Parsed instruction at 80012DC4: lbz r0 0x0(r25)
Parsed instruction at 80012DC8: extsb. r0 r0
Parsed instruction at 80012DCC: bne .L_800127F8
Parsed label: L_80012DD0:
Parsed instruction at 80012DD0: mr r3 r27
Parsed label: L_80012DD4:
Parsed instruction at 80012DD4: lmw r18 0x230(r1)
Parsed instruction at 80012DD8: lwz r0 0x26c(r1)
Parsed instruction at 80012DDC: addi r1 r1 0x268
Parsed instruction at 80012DE0: mtlr r0
Parsed instruction at 80012DE4: blr 
End of function: __pformatter, 456 instructions
Parsed function: float2str at 0x80012DE8
Parsed instruction at 80012DE8: mflr r0
Parsed instruction at 80012DEC: stw r0 0x4(r1)
Parsed instruction at 80012DF0: stwu r1 -0x60(r1)
Parsed instruction at 80012DF4: stfd f31 0x58(r1)
Parsed instruction at 80012DF8: stw r31 0x54(r1)
Parsed instruction at 80012DFC: stw r30 0x50(r1)
Parsed instruction at 80012E00: stw r29 0x4c(r1)
Parsed instruction at 80012E04: mr r29 r5
Parsed instruction at 80012E08: stw r28 0x48(r1)
Parsed instruction at 80012E0C: addi r28 r4 0x0
Parsed instruction at 80012E10: lbz r0 0x4(r5)
Parsed instruction at 80012E14: cmplwi r0 0x5
Parsed instruction at 80012E18: bne .L_80012E2C
Parsed instruction at 80012E1C: li r4 0x3
Parsed instruction at 80012E20: bl __va_arg
Parsed instruction at 80012E24: lfd f31 0x0(r3)
Parsed instruction at 80012E28: b .L_80012E38
Parsed label: L_80012E2C:
Parsed instruction at 80012E2C: li r4 0x3
Parsed instruction at 80012E30: bl __va_arg
Parsed instruction at 80012E34: lfd f31 0x0(r3)
Parsed label: L_80012E38:
Parsed instruction at 80012E38: lwz r0 0xc(r29)
Parsed instruction at 80012E3C: cmpwi r0 0x1fd
Parsed instruction at 80012E40: ble .L_80012E4C
Parsed instruction at 80012E44: li r3 0x0
Parsed instruction at 80012E48: b .L_800133FC
Parsed label: L_80012E4C:
Parsed instruction at 80012E4C: li r0 0x0
Parsed instruction at 80012E50: fmr f1 f31
Parsed instruction at 80012E54: stb r0 0x18(r1)
Parsed instruction at 80012E58: li r0 0x20
Parsed instruction at 80012E5C: addi r3 r1 0x18
Parsed instruction at 80012E60: sth r0 0x1a(r1)
Parsed instruction at 80012E64: addi r4 r1 0x1c
Parsed instruction at 80012E68: bl fn_80011A1C
Parsed instruction at 80012E6C: lbz r0 0x20(r1)
Parsed instruction at 80012E70: addi r31 r1 0x21
Parsed instruction at 80012E74: add r4 r31 r0
Parsed instruction at 80012E78: b .L_80012E94
Parsed label: L_80012E7C:
Parsed instruction at 80012E7C: lbz r3 0x20(r1)
Parsed instruction at 80012E80: subi r0 r3 0x1
Parsed instruction at 80012E84: stb r0 0x20(r1)
Parsed instruction at 80012E88: lha r3 0x1e(r1)
Parsed instruction at 80012E8C: addi r0 r3 0x1
Parsed instruction at 80012E90: sth r0 0x1e(r1)
Parsed label: L_80012E94:
Parsed instruction at 80012E94: lbz r0 0x20(r1)
Parsed instruction at 80012E98: cmplwi r0 0x1
Parsed instruction at 80012E9C: ble .L_80012EAC
Parsed instruction at 80012EA0: lbzu r0 -0x1(r4)
Parsed instruction at 80012EA4: cmpwi r0 0x30
Parsed instruction at 80012EA8: beq .L_80012E7C
Parsed label: L_80012EAC:
Parsed instruction at 80012EAC: lbz r0 0x21(r1)
Parsed instruction at 80012EB0: cmpwi r0 0x49
Parsed instruction at 80012EB4: beq .L_80012EE0
Parsed instruction at 80012EB8: bge .L_80012EC8
Parsed instruction at 80012EBC: cmpwi r0 0x30
Parsed instruction at 80012EC0: beq .L_80012ED4
Parsed instruction at 80012EC4: b .L_80012F48
Parsed label: L_80012EC8:
Parsed instruction at 80012EC8: cmpwi r0 0x4e
Parsed instruction at 80012ECC: beq .L_80012F28
Parsed instruction at 80012ED0: b .L_80012F48
Parsed label: L_80012ED4:
Parsed instruction at 80012ED4: li r0 0x0
Parsed instruction at 80012ED8: sth r0 0x1e(r1)
Parsed instruction at 80012EDC: b .L_80012F48
Parsed label: L_80012EE0:
Parsed instruction at 80012EE0: lfd f0 lbl_8001F0C8@sda21(r0)
Parsed instruction at 80012EE4: fcmpo cr0 f31 f0
Parsed instruction at 80012EE8: bge .L_80012F08
Parsed instruction at 80012EEC: lis r3 "@stringBase0_8001A600"@ha
Parsed instruction at 80012EF0: subi r28 r28 0x5
Parsed instruction at 80012EF4: addi r4 r3 "@stringBase0_8001A600"@l
Parsed instruction at 80012EF8: addi r3 r28 0x0
Parsed instruction at 80012EFC: addi r4 r4 0x1
Parsed instruction at 80012F00: bl fn_80013F60
Parsed instruction at 80012F04: b .L_80012F20
Parsed label: L_80012F08:
Parsed instruction at 80012F08: lis r3 "@stringBase0_8001A600"@ha
Parsed instruction at 80012F0C: subi r28 r28 0x4
Parsed instruction at 80012F10: addi r4 r3 "@stringBase0_8001A600"@l
Parsed instruction at 80012F14: addi r3 r28 0x0
Parsed instruction at 80012F18: addi r4 r4 0x6
Parsed instruction at 80012F1C: bl fn_80013F60
Parsed label: L_80012F20:
Parsed instruction at 80012F20: mr r3 r28
Parsed instruction at 80012F24: b .L_800133FC
Parsed label: L_80012F28:
Parsed instruction at 80012F28: lis r3 "@stringBase0_8001A600"@ha
Parsed instruction at 80012F2C: subi r28 r28 0x4
Parsed instruction at 80012F30: addi r4 r3 "@stringBase0_8001A600"@l
Parsed instruction at 80012F34: addi r3 r28 0x0
Parsed instruction at 80012F38: addi r4 r4 0xa
Parsed instruction at 80012F3C: bl fn_80013F60
Parsed instruction at 80012F40: mr r3 r28
Parsed instruction at 80012F44: b .L_800133FC
Parsed label: L_80012F48:
Parsed instruction at 80012F48: lha r4 0x1e(r1)
Parsed instruction at 80012F4C: li r0 0x0
Parsed instruction at 80012F50: lbz r3 0x20(r1)
Parsed instruction at 80012F54: subi r30 r28 0x1
Parsed instruction at 80012F58: add r3 r3 r4
Parsed instruction at 80012F5C: subi r3 r3 0x1
Parsed instruction at 80012F60: sth r3 0x1e(r1)
Parsed instruction at 80012F64: stb r0 -0x1(r28)
Parsed instruction at 80012F68: lbz r0 0x5(r29)
Parsed instruction at 80012F6C: cmpwi r0 0x65
Parsed instruction at 80012F70: beq .L_80013064
Parsed instruction at 80012F74: bge .L_80012F9C
Parsed instruction at 80012F78: cmpwi r0 0x46
Parsed instruction at 80012F7C: beq .L_800133F8
Parsed instruction at 80012F80: bge .L_80012F90
Parsed instruction at 80012F84: cmpwi r0 0x45
Parsed instruction at 80012F88: bge .L_80013064
Parsed instruction at 80012F8C: b .L_800133F8
Parsed label: L_80012F90:
Parsed instruction at 80012F90: cmpwi r0 0x48
Parsed instruction at 80012F94: bge .L_800133F8
Parsed instruction at 80012F98: b .L_80012FAC
Parsed label: L_80012F9C:
Parsed instruction at 80012F9C: cmpwi r0 0x67
Parsed instruction at 80012FA0: beq .L_80012FAC
Parsed instruction at 80012FA4: bge .L_800133F8
Parsed instruction at 80012FA8: b .L_800131D4
Parsed label: L_80012FAC:
Parsed instruction at 80012FAC: lbz r0 0x20(r1)
Parsed instruction at 80012FB0: lwz r4 0xc(r29)
Parsed instruction at 80012FB4: cmpw r0 r4
Parsed instruction at 80012FB8: ble .L_80012FC4
Parsed instruction at 80012FBC: addi r3 r1 0x1c
Parsed instruction at 80012FC0: bl fn_80013420
Parsed label: L_80012FC4:
Parsed instruction at 80012FC4: lha r4 0x1e(r1)
Parsed instruction at 80012FC8: cmpwi r4 -0x4
Parsed instruction at 80012FCC: blt .L_80012FDC
Parsed instruction at 80012FD0: lwz r3 0xc(r29)
Parsed instruction at 80012FD4: cmpw r4 r3
Parsed instruction at 80012FD8: blt .L_80013028
Parsed label: L_80012FDC:
Parsed instruction at 80012FDC: lbz r0 0x3(r29)
Parsed instruction at 80012FE0: cmplwi r0 0x0
Parsed instruction at 80012FE4: beq .L_80012FF8
Parsed instruction at 80012FE8: lwz r3 0xc(r29)
Parsed instruction at 80012FEC: subi r0 r3 0x1
Parsed instruction at 80012FF0: stw r0 0xc(r29)
Parsed instruction at 80012FF4: b .L_80013004
Parsed label: L_80012FF8:
Parsed instruction at 80012FF8: lbz r3 0x20(r1)
Parsed instruction at 80012FFC: subi r0 r3 0x1
Parsed instruction at 80013000: stw r0 0xc(r29)
Parsed label: L_80013004:
Parsed instruction at 80013004: lbz r0 0x5(r29)
Parsed instruction at 80013008: cmplwi r0 0x67
Parsed instruction at 8001300C: bne .L_8001301C
Parsed instruction at 80013010: li r0 0x65
Parsed instruction at 80013014: stb r0 0x5(r29)
Parsed instruction at 80013018: b .L_80013064
Parsed label: L_8001301C:
Parsed instruction at 8001301C: li r0 0x45
Parsed instruction at 80013020: stb r0 0x5(r29)
Parsed instruction at 80013024: b .L_80013064
Parsed label: L_80013028:
Parsed instruction at 80013028: lbz r0 0x3(r29)
Parsed instruction at 8001302C: cmplwi r0 0x0
Parsed instruction at 80013030: beq .L_80013044
Parsed instruction at 80013034: addi r0 r4 0x1
Parsed instruction at 80013038: subf r0 r0 r3
Parsed instruction at 8001303C: stw r0 0xc(r29)
Parsed instruction at 80013040: b .L_800131D4
Parsed label: L_80013044:
Parsed instruction at 80013044: lbz r0 0x20(r1)
Parsed instruction at 80013048: addi r3 r4 0x1
Parsed instruction at 8001304C: subf. r0 r3 r0
Parsed instruction at 80013050: stw r0 0xc(r29)
Parsed instruction at 80013054: bge .L_800131D4
Parsed instruction at 80013058: li r0 0x0
Parsed instruction at 8001305C: stw r0 0xc(r29)
Parsed instruction at 80013060: b .L_800131D4
Parsed label: L_80013064:
Parsed instruction at 80013064: lwz r3 0xc(r29)
Parsed instruction at 80013068: lbz r0 0x20(r1)
Parsed instruction at 8001306C: addi r4 r3 0x1
Parsed instruction at 80013070: cmpw r0 r4
Parsed instruction at 80013074: ble .L_80013080
Parsed instruction at 80013078: addi r3 r1 0x1c
Parsed instruction at 8001307C: bl fn_80013420
Parsed label: L_80013080:
Parsed instruction at 80013080: lha r0 0x1e(r1)
Parsed instruction at 80013084: li r8 0x2b
Parsed instruction at 80013088: cmpwi r0 0x0
Parsed instruction at 8001308C: mr r4 r0
Parsed instruction at 80013090: bge .L_8001309C
Parsed instruction at 80013094: neg r4 r4
Parsed instruction at 80013098: li r8 0x2d
Parsed label: L_8001309C:
Parsed instruction at 8001309C: lis r3 0x6666
Parsed instruction at 800130A0: addi r5 r3 0x6667
Parsed instruction at 800130A4: li r7 0x0
Parsed instruction at 800130A8: b .L_800130E0
Parsed label: L_800130AC:
Parsed instruction at 800130AC: mulhw r6 r5 r4
Parsed instruction at 800130B0: srawi r0 r6 2
Parsed instruction at 800130B4: srwi r3 r0 31
Parsed instruction at 800130B8: add r0 r0 r3
Parsed instruction at 800130BC: mulli r0 r0 0xa
Parsed instruction at 800130C0: subf r4 r0 r4
Parsed instruction at 800130C4: srawi r0 r6 2
Parsed instruction at 800130C8: addi r4 r4 0x30
Parsed instruction at 800130CC: stb r4 -0x1(r30)
Parsed instruction at 800130D0: srwi r3 r0 31
Parsed instruction at 800130D4: add r4 r0 r3
Parsed instruction at 800130D8: addi r7 r7 0x1
Parsed instruction at 800130DC: subi r30 r30 0x1
Parsed label: L_800130E0:
Parsed instruction at 800130E0: cmpwi r4 0x0
Parsed instruction at 800130E4: bne .L_800130AC
Parsed instruction at 800130E8: cmpwi r7 0x2
Parsed instruction at 800130EC: blt .L_800130AC
Parsed instruction at 800130F0: extsb r0 r8
Parsed instruction at 800130F4: stb r0 -0x1(r30)
Parsed instruction at 800130F8: subi r30 r30 0x2
Parsed instruction at 800130FC: subf r0 r30 r28
Parsed instruction at 80013100: lbz r3 0x5(r29)
Parsed instruction at 80013104: stb r3 0x0(r30)
Parsed instruction at 80013108: lwz r3 0xc(r29)
Parsed instruction at 8001310C: add r0 r3 r0
Parsed instruction at 80013110: cmpwi r0 0x1fd
Parsed instruction at 80013114: ble .L_80013120
Parsed instruction at 80013118: li r3 0x0
Parsed instruction at 8001311C: b .L_800133FC
Parsed label: L_80013120:
Parsed instruction at 80013120: lbz r4 0x20(r1)
Parsed instruction at 80013124: addi r0 r3 0x1
Parsed instruction at 80013128: cmpw r4 r0
Parsed instruction at 8001312C: bge .L_8001314C
Parsed instruction at 80013130: addi r0 r3 0x2
Parsed instruction at 80013134: subf r3 r4 r0
Parsed instruction at 80013138: li r0 0x30
Parsed instruction at 8001313C: b .L_80013144
Parsed label: L_80013140:
Parsed instruction at 80013140: stbu r0 -0x1(r30)
Parsed label: L_80013144:
Parsed instruction at 80013144: subic. r3 r3 0x1
Parsed instruction at 80013148: bne .L_80013140
Parsed label: L_8001314C:
Parsed instruction at 8001314C: lbz r3 0x20(r1)
Parsed instruction at 80013150: add r4 r31 r3
Parsed instruction at 80013154: b .L_80013160
Parsed label: L_80013158:
Parsed instruction at 80013158: lbzu r0 -0x1(r4)
Parsed instruction at 8001315C: stbu r0 -0x1(r30)
Parsed label: L_80013160:
Parsed instruction at 80013160: subic. r3 r3 0x1
Parsed instruction at 80013164: bne .L_80013158
Parsed instruction at 80013168: lwz r0 0xc(r29)
Parsed instruction at 8001316C: cmpwi r0 0x0
Parsed instruction at 80013170: bne .L_80013180
Parsed instruction at 80013174: lbz r0 0x3(r29)
Parsed instruction at 80013178: cmplwi r0 0x0
Parsed instruction at 8001317C: beq .L_80013188
Parsed label: L_80013180:
Parsed instruction at 80013180: li r0 0x2e
Parsed instruction at 80013184: stbu r0 -0x1(r30)
Parsed label: L_80013188:
Parsed instruction at 80013188: lbz r0 0x21(r1)
Parsed instruction at 8001318C: stbu r0 -0x1(r30)
Parsed instruction at 80013190: lbz r0 0x1c(r1)
Parsed instruction at 80013194: extsb. r0 r0
Parsed instruction at 80013198: beq .L_800131A8
Parsed instruction at 8001319C: li r0 0x2d
Parsed instruction at 800131A0: stbu r0 -0x1(r30)
Parsed instruction at 800131A4: b .L_800133F8
Parsed label: L_800131A8:
Parsed instruction at 800131A8: lbz r0 0x1(r29)
Parsed instruction at 800131AC: cmplwi r0 0x1
Parsed instruction at 800131B0: bne .L_800131C0
Parsed instruction at 800131B4: li r0 0x2b
Parsed instruction at 800131B8: stbu r0 -0x1(r30)
Parsed instruction at 800131BC: b .L_800133F8
Parsed label: L_800131C0:
Parsed instruction at 800131C0: cmplwi r0 0x2
Parsed instruction at 800131C4: bne .L_800133F8
Parsed instruction at 800131C8: li r0 0x20
Parsed instruction at 800131CC: stbu r0 -0x1(r30)
Parsed instruction at 800131D0: b .L_800133F8
Parsed label: L_800131D4:
Parsed instruction at 800131D4: lha r0 0x1e(r1)
Parsed instruction at 800131D8: lbz r4 0x20(r1)
Parsed instruction at 800131DC: subf r0 r0 r4
Parsed instruction at 800131E0: subic. r7 r0 0x1
Parsed instruction at 800131E4: bge .L_800131EC
Parsed instruction at 800131E8: li r7 0x0
Parsed label: L_800131EC:
Parsed instruction at 800131EC: lwz r0 0xc(r29)
Parsed instruction at 800131F0: cmpw r7 r0
Parsed instruction at 800131F4: ble .L_80013220
Parsed instruction at 800131F8: subf r0 r0 r7
Parsed instruction at 800131FC: addi r3 r1 0x1c
Parsed instruction at 80013200: subf r4 r0 r4
Parsed instruction at 80013204: bl fn_80013420
Parsed instruction at 80013208: lha r3 0x1e(r1)
Parsed instruction at 8001320C: lbz r0 0x20(r1)
Parsed instruction at 80013210: subf r0 r3 r0
Parsed instruction at 80013214: subic. r7 r0 0x1
Parsed instruction at 80013218: bge .L_80013220
Parsed instruction at 8001321C: li r7 0x0
Parsed label: L_80013220:
Parsed instruction at 80013220: lha r0 0x1e(r1)
Parsed instruction at 80013224: addic. r6 r0 0x1
Parsed instruction at 80013228: bge .L_80013230
Parsed instruction at 8001322C: li r6 0x0
Parsed label: L_80013230:
Parsed instruction at 80013230: add r0 r6 r7
Parsed instruction at 80013234: cmpwi r0 0x1fd
Parsed instruction at 80013238: ble .L_80013244
Parsed instruction at 8001323C: li r3 0x0
Parsed instruction at 80013240: b .L_800133FC
Parsed label: L_80013244:
Parsed instruction at 80013244: lbz r0 0x20(r1)
Parsed instruction at 80013248: li r4 0x0
Parsed instruction at 8001324C: li r3 0x30
Parsed instruction at 80013250: add r5 r31 r0
Parsed instruction at 80013254: b .L_80013260
Parsed label: L_80013258:
Parsed instruction at 80013258: stbu r3 -0x1(r30)
Parsed instruction at 8001325C: addi r4 r4 0x1
Parsed label: L_80013260:
Parsed instruction at 80013260: lwz r0 0xc(r29)
Parsed instruction at 80013264: subf r0 r7 r0
Parsed instruction at 80013268: cmpw r4 r0
Parsed instruction at 8001326C: blt .L_80013258
Parsed instruction at 80013270: li r3 0x0
Parsed instruction at 80013274: b .L_80013284
Parsed label: L_80013278:
Parsed instruction at 80013278: lbzu r0 -0x1(r5)
Parsed instruction at 8001327C: addi r3 r3 0x1
Parsed instruction at 80013280: stbu r0 -0x1(r30)
Parsed label: L_80013284:
Parsed instruction at 80013284: cmpw r3 r7
Parsed instruction at 80013288: bge .L_80013298
Parsed instruction at 8001328C: lbz r0 0x20(r1)
Parsed instruction at 80013290: cmpw r3 r0
Parsed instruction at 80013294: blt .L_80013278
Parsed label: L_80013298:
Parsed instruction at 80013298: cmpw r3 r7
Parsed instruction at 8001329C: subf r3 r3 r7
Parsed instruction at 800132A0: li r4 0x30
Parsed instruction at 800132A4: bge .L_800132EC
Parsed instruction at 800132A8: srwi. r0 r3 3
Parsed instruction at 800132AC: mtctr r0
Parsed instruction at 800132B0: beq .L_800132E0
Parsed label: L_800132B4:
Parsed instruction at 800132B4: stb r4 -0x1(r30)
Parsed instruction at 800132B8: stb r4 -0x2(r30)
Parsed instruction at 800132BC: stb r4 -0x3(r30)
Parsed instruction at 800132C0: stb r4 -0x4(r30)
Parsed instruction at 800132C4: stb r4 -0x5(r30)
Parsed instruction at 800132C8: stb r4 -0x6(r30)
Parsed instruction at 800132CC: stb r4 -0x7(r30)
Parsed instruction at 800132D0: stbu r4 -0x8(r30)
Parsed instruction at 800132D4: bdnz .L_800132B4
Parsed instruction at 800132D8: andi. r3 r3 0x7
Parsed instruction at 800132DC: beq .L_800132EC
Parsed label: L_800132E0:
Parsed instruction at 800132E0: mtctr r3
Parsed label: L_800132E4:
Parsed instruction at 800132E4: stbu r4 -0x1(r30)
Parsed instruction at 800132E8: bdnz .L_800132E4
Parsed label: L_800132EC:
Parsed instruction at 800132EC: lwz r0 0xc(r29)
Parsed instruction at 800132F0: cmpwi r0 0x0
Parsed instruction at 800132F4: bne .L_80013304
Parsed instruction at 800132F8: lbz r0 0x3(r29)
Parsed instruction at 800132FC: cmplwi r0 0x0
Parsed instruction at 80013300: beq .L_8001330C
Parsed label: L_80013304:
Parsed instruction at 80013304: li r0 0x2e
Parsed instruction at 80013308: stbu r0 -0x1(r30)
Parsed label: L_8001330C:
Parsed instruction at 8001330C: cmpwi r6 0x0
Parsed instruction at 80013310: beq .L_800133B0
Parsed instruction at 80013314: li r4 0x0
Parsed instruction at 80013318: li r3 0x30
Parsed instruction at 8001331C: b .L_80013328
Parsed label: L_80013320:
Parsed instruction at 80013320: stbu r3 -0x1(r30)
Parsed instruction at 80013324: addi r4 r4 0x1
Parsed label: L_80013328:
Parsed instruction at 80013328: lbz r0 0x20(r1)
Parsed instruction at 8001332C: subf r0 r0 r6
Parsed instruction at 80013330: cmpw r4 r0
Parsed instruction at 80013334: blt .L_80013320
Parsed instruction at 80013338: cmpw r4 r6
Parsed instruction at 8001333C: subf r3 r4 r6
Parsed instruction at 80013340: bge .L_800133B8
Parsed instruction at 80013344: srwi. r0 r3 3
Parsed instruction at 80013348: mtctr r0
Parsed instruction at 8001334C: beq .L_8001339C
Parsed label: L_80013350:
Parsed instruction at 80013350: lbz r0 -0x1(r5)
Parsed instruction at 80013354: stb r0 -0x1(r30)
Parsed instruction at 80013358: lbz r0 -0x2(r5)
Parsed instruction at 8001335C: stb r0 -0x2(r30)
Parsed instruction at 80013360: lbz r0 -0x3(r5)
Parsed instruction at 80013364: stb r0 -0x3(r30)
Parsed instruction at 80013368: lbz r0 -0x4(r5)
Parsed instruction at 8001336C: stb r0 -0x4(r30)
Parsed instruction at 80013370: lbz r0 -0x5(r5)
Parsed instruction at 80013374: stb r0 -0x5(r30)
Parsed instruction at 80013378: lbz r0 -0x6(r5)
Parsed instruction at 8001337C: stb r0 -0x6(r30)
Parsed instruction at 80013380: lbz r0 -0x7(r5)
Parsed instruction at 80013384: stb r0 -0x7(r30)
Parsed instruction at 80013388: lbzu r0 -0x8(r5)
Parsed instruction at 8001338C: stbu r0 -0x8(r30)
Parsed instruction at 80013390: bdnz .L_80013350
Parsed instruction at 80013394: andi. r3 r3 0x7
Parsed instruction at 80013398: beq .L_800133B8
Parsed label: L_8001339C:
Parsed instruction at 8001339C: mtctr r3
Parsed label: L_800133A0:
Parsed instruction at 800133A0: lbzu r0 -0x1(r5)
Parsed instruction at 800133A4: stbu r0 -0x1(r30)
Parsed instruction at 800133A8: bdnz .L_800133A0
Parsed instruction at 800133AC: b .L_800133B8
Parsed label: L_800133B0:
Parsed instruction at 800133B0: li r0 0x30
Parsed instruction at 800133B4: stbu r0 -0x1(r30)
Parsed label: L_800133B8:
Parsed instruction at 800133B8: lbz r0 0x1c(r1)
Parsed instruction at 800133BC: extsb. r0 r0
Parsed instruction at 800133C0: beq .L_800133D0
Parsed instruction at 800133C4: li r0 0x2d
Parsed instruction at 800133C8: stbu r0 -0x1(r30)
Parsed instruction at 800133CC: b .L_800133F8
Parsed label: L_800133D0:
Parsed instruction at 800133D0: lbz r0 0x1(r29)
Parsed instruction at 800133D4: cmplwi r0 0x1
Parsed instruction at 800133D8: bne .L_800133E8
Parsed instruction at 800133DC: li r0 0x2b
Parsed instruction at 800133E0: stbu r0 -0x1(r30)
Parsed instruction at 800133E4: b .L_800133F8
Parsed label: L_800133E8:
Parsed instruction at 800133E8: cmplwi r0 0x2
Parsed instruction at 800133EC: bne .L_800133F8
Parsed instruction at 800133F0: li r0 0x20
Parsed instruction at 800133F4: stbu r0 -0x1(r30)
Parsed label: L_800133F8:
Parsed instruction at 800133F8: mr r3 r30
Parsed label: L_800133FC:
Parsed instruction at 800133FC: lwz r0 0x64(r1)
Parsed instruction at 80013400: lfd f31 0x58(r1)
Parsed instruction at 80013404: lwz r31 0x54(r1)
Parsed instruction at 80013408: mtlr r0
Parsed instruction at 8001340C: lwz r30 0x50(r1)
Parsed instruction at 80013410: lwz r29 0x4c(r1)
Parsed instruction at 80013414: lwz r28 0x48(r1)
Parsed instruction at 80013418: addi r1 r1 0x60
Parsed instruction at 8001341C: blr 
End of function: float2str, 463 instructions
Parsed function: fn_80013420 at 0x80013420
Parsed instruction at 80013420: cmpwi r4 0x0
Parsed instruction at 80013424: bge .L_80013448
Parsed label: L_80013428:
Parsed instruction at 80013428: li r5 0x0
Parsed instruction at 8001342C: stb r5 0x0(r3)
Parsed instruction at 80013430: li r4 0x1
Parsed instruction at 80013434: li r0 0x30
Parsed instruction at 80013438: sth r5 0x2(r3)
Parsed instruction at 8001343C: stb r4 0x4(r3)
Parsed instruction at 80013440: stb r0 0x5(r3)
Parsed instruction at 80013444: blr 
Parsed label: L_80013448:
Parsed instruction at 80013448: lbz r0 0x4(r3)
Parsed instruction at 8001344C: cmpw r4 r0
Parsed instruction at 80013450: bgelr 
Parsed instruction at 80013454: add r5 r3 r4
Parsed instruction at 80013458: addi r8 r5 0x6
Parsed instruction at 8001345C: lbzu r5 -0x1(r8)
Parsed instruction at 80013460: subi r5 r5 0x30
Parsed instruction at 80013464: extsb r6 r5
Parsed instruction at 80013468: cmpwi r6 0x5
Parsed instruction at 8001346C: bne .L_800134B0
Parsed instruction at 80013470: add r5 r3 r0
Parsed instruction at 80013474: addi r5 r5 0x5
Parsed label: L_80013478:
Parsed instruction at 80013478: subi r5 r5 0x1
Parsed instruction at 8001347C: cmplw r5 r8
Parsed instruction at 80013480: ble .L_80013490
Parsed instruction at 80013484: lbz r0 0x0(r5)
Parsed instruction at 80013488: cmpwi r0 0x30
Parsed instruction at 8001348C: beq .L_80013478
Parsed label: L_80013490:
Parsed instruction at 80013490: cmplw r5 r8
Parsed instruction at 80013494: bne .L_800134A4
Parsed instruction at 80013498: lbz r0 -0x1(r8)
Parsed instruction at 8001349C: clrlwi r0 r0 31
Parsed instruction at 800134A0: b .L_800134A8
Parsed label: L_800134A4:
Parsed instruction at 800134A4: li r0 0x1
Parsed label: L_800134A8:
Parsed instruction at 800134A8: mr r5 r0
Parsed instruction at 800134AC: b .L_80013510
Parsed label: L_800134B0:
Parsed instruction at 800134B0: li r5 0x5
Parsed instruction at 800134B4: eqv r0 r6 r5
Parsed instruction at 800134B8: subfc r5 r6 r5
Parsed instruction at 800134BC: srwi r0 r0 31
Parsed instruction at 800134C0: addze r5 r0
Parsed instruction at 800134C4: clrlwi r5 r5 31
Parsed instruction at 800134C8: b .L_80013510
Parsed label: L_800134CC:
Parsed instruction at 800134CC: lbzu r0 -0x1(r8)
Parsed instruction at 800134D0: add r7 r0 r5
Parsed instruction at 800134D4: subi r7 r7 0x30
Parsed instruction at 800134D8: extsb r5 r7
Parsed instruction at 800134DC: eqv r0 r5 r6
Parsed instruction at 800134E0: subfc r5 r5 r6
Parsed instruction at 800134E4: srwi r0 r0 31
Parsed instruction at 800134E8: addze r5 r0
Parsed instruction at 800134EC: clrlwi. r5 r5 31
Parsed instruction at 800134F0: bne .L_800134FC
Parsed instruction at 800134F4: extsb. r0 r7
Parsed instruction at 800134F8: bne .L_80013504
Parsed label: L_800134FC:
Parsed instruction at 800134FC: subi r4 r4 0x1
Parsed instruction at 80013500: b .L_80013514
Parsed label: L_80013504:
Parsed instruction at 80013504: addi r0 r7 0x30
Parsed instruction at 80013508: stb r0 0x0(r8)
Parsed instruction at 8001350C: b .L_8001351C
Parsed label: L_80013510:
Parsed instruction at 80013510: li r6 0x9
Parsed label: L_80013514:
Parsed instruction at 80013514: cmpwi r4 0x0
Parsed instruction at 80013518: bne .L_800134CC
Parsed label: L_8001351C:
Parsed instruction at 8001351C: cmpwi r5 0x0
Parsed instruction at 80013520: beq .L_80013544
Parsed instruction at 80013524: lha r5 0x2(r3)
Parsed instruction at 80013528: li r4 0x1
Parsed instruction at 8001352C: li r0 0x31
Parsed instruction at 80013530: addi r5 r5 0x1
Parsed instruction at 80013534: sth r5 0x2(r3)
Parsed instruction at 80013538: stb r4 0x4(r3)
Parsed instruction at 8001353C: stb r0 0x5(r3)
Parsed instruction at 80013540: blr 
Parsed label: L_80013544:
Parsed instruction at 80013544: cmpwi r4 0x0
Parsed instruction at 80013548: beq .L_80013428
Parsed instruction at 8001354C: stb r4 0x4(r3)
Parsed instruction at 80013550: blr 
End of function: fn_80013420, 91 instructions
Parsed function: longlong2str_80013554 at 0x80013554
Parsed instruction at 80013554: mflr r0
Parsed instruction at 80013558: stw r0 0x4(r1)
Parsed instruction at 8001355C: li r0 0x0
Parsed instruction at 80013560: stwu r1 -0x40(r1)
Parsed instruction at 80013564: stmw r22 0x18(r1)
Parsed instruction at 80013568: addi r23 r5 0x0
Parsed instruction at 8001356C: xor r5 r4 r0
Parsed instruction at 80013570: subi r27 r23 0x1
Parsed instruction at 80013574: addi r24 r6 0x0
Parsed instruction at 80013578: addi r30 r4 0x0
Parsed instruction at 8001357C: addi r31 r3 0x0
Parsed instruction at 80013580: li r25 0x0
Parsed instruction at 80013584: li r26 0x0
Parsed instruction at 80013588: stb r0 -0x1(r23)
Parsed instruction at 8001358C: xor r0 r3 r0
Parsed instruction at 80013590: or. r0 r5 r0
Parsed instruction at 80013594: bne .L_800135C4
Parsed instruction at 80013598: lwz r0 0xc(r24)
Parsed instruction at 8001359C: cmpwi r0 0x0
Parsed instruction at 800135A0: bne .L_800135C4
Parsed instruction at 800135A4: lbz r0 0x3(r24)
Parsed instruction at 800135A8: cmplwi r0 0x0
Parsed instruction at 800135AC: beq .L_800135BC
Parsed instruction at 800135B0: lbz r0 0x5(r24)
Parsed instruction at 800135B4: cmplwi r0 0x6f
Parsed instruction at 800135B8: beq .L_800135C4
Parsed label: L_800135BC:
Parsed instruction at 800135BC: mr r3 r27
Parsed instruction at 800135C0: b .L_80013820
Parsed label: L_800135C4:
Parsed instruction at 800135C4: lbz r5 0x5(r24)
Parsed instruction at 800135C8: subi r0 r5 0x58
Parsed instruction at 800135CC: cmplwi r0 0x20
Parsed instruction at 800135D0: bgt .L_8001365C
Parsed instruction at 800135D4: lis r5 "@1009_8001B7B8"@ha
Parsed instruction at 800135D8: addi r5 r5 "@1009_8001B7B8"@l
Parsed instruction at 800135DC: slwi r0 r0 2
Parsed instruction at 800135E0: lwzx r0 r5 r0
Parsed instruction at 800135E4: mtctr r0
Parsed instruction at 800135E8: bctr 
Parsed instruction at 800135EC: li r0 0x0
Parsed instruction at 800135F0: xoris r5 r3 0x8000
Parsed instruction at 800135F4: xoris r3 r0 0x8000
Parsed instruction at 800135F8: subfc r0 r0 r4
Parsed instruction at 800135FC: subfe r3 r3 r5
Parsed instruction at 80013600: subfe r3 r5 r5
Parsed instruction at 80013604: neg. r3 r3
Parsed instruction at 80013608: li r28 0xa
Parsed instruction at 8001360C: li r29 0x0
Parsed instruction at 80013610: beq .L_8001365C
Parsed instruction at 80013614: subfic r30 r30 0x0
Parsed instruction at 80013618: subfze r31 r31
Parsed instruction at 8001361C: li r25 0x1
Parsed instruction at 80013620: b .L_8001365C
Parsed instruction at 80013624: li r0 0x0
Parsed instruction at 80013628: stb r0 0x1(r24)
Parsed instruction at 8001362C: li r28 0x8
Parsed instruction at 80013630: li r29 0x0
Parsed instruction at 80013634: b .L_8001365C
Parsed instruction at 80013638: li r0 0x0
Parsed instruction at 8001363C: stb r0 0x1(r24)
Parsed instruction at 80013640: li r28 0xa
Parsed instruction at 80013644: li r29 0x0
Parsed instruction at 80013648: b .L_8001365C
Parsed instruction at 8001364C: li r0 0x0
Parsed instruction at 80013650: stb r0 0x1(r24)
Parsed instruction at 80013654: li r28 0x10
Parsed instruction at 80013658: li r29 0x0
Parsed label: L_8001365C:
Parsed instruction at 8001365C: addi r3 r31 0x0
Parsed instruction at 80013660: addi r4 r30 0x0
Parsed instruction at 80013664: addi r5 r29 0x0
Parsed instruction at 80013668: addi r6 r28 0x0
Parsed instruction at 8001366C: bl __mod2u
Parsed instruction at 80013670: addi r22 r4 0x0
Parsed instruction at 80013674: addi r3 r31 0x0
Parsed instruction at 80013678: addi r4 r30 0x0
Parsed instruction at 8001367C: addi r5 r29 0x0
Parsed instruction at 80013680: addi r6 r28 0x0
Parsed instruction at 80013684: bl __div2u
Parsed instruction at 80013688: cmpwi r22 0xa
Parsed instruction at 8001368C: addi r30 r4 0x0
Parsed instruction at 80013690: addi r31 r3 0x0
Parsed instruction at 80013694: bge .L_800136A0
Parsed instruction at 80013698: addi r5 r22 0x30
Parsed instruction at 8001369C: b .L_800136B8
Parsed label: L_800136A0:
Parsed instruction at 800136A0: lbz r0 0x5(r24)
Parsed instruction at 800136A4: cmplwi r0 0x78
Parsed instruction at 800136A8: bne .L_800136B4
Parsed instruction at 800136AC: addi r5 r22 0x57
Parsed instruction at 800136B0: b .L_800136B8
Parsed label: L_800136B4:
Parsed instruction at 800136B4: addi r5 r22 0x37
Parsed label: L_800136B8:
Parsed instruction at 800136B8: li r4 0x0
Parsed instruction at 800136BC: xor r3 r30 r4
Parsed instruction at 800136C0: xor r0 r31 r4
Parsed instruction at 800136C4: or. r0 r3 r0
Parsed instruction at 800136C8: extsb r0 r5
Parsed instruction at 800136CC: addi r26 r26 0x1
Parsed instruction at 800136D0: stbu r0 -0x1(r27)
Parsed instruction at 800136D4: bne .L_8001365C
Parsed instruction at 800136D8: li r0 0x8
Parsed instruction at 800136DC: xor r3 r28 r0
Parsed instruction at 800136E0: xor r0 r29 r4
Parsed instruction at 800136E4: or. r0 r3 r0
Parsed instruction at 800136E8: bne .L_80013710
Parsed instruction at 800136EC: lbz r0 0x3(r24)
Parsed instruction at 800136F0: cmplwi r0 0x0
Parsed instruction at 800136F4: beq .L_80013710
Parsed instruction at 800136F8: lbz r0 0x0(r27)
Parsed instruction at 800136FC: cmpwi r0 0x30
Parsed instruction at 80013700: beq .L_80013710
Parsed instruction at 80013704: li r0 0x30
Parsed instruction at 80013708: stbu r0 -0x1(r27)
Parsed instruction at 8001370C: addi r26 r26 0x1
Parsed label: L_80013710:
Parsed instruction at 80013710: lbz r0 0x0(r24)
Parsed instruction at 80013714: cmplwi r0 0x2
Parsed instruction at 80013718: bne .L_80013774
Parsed instruction at 8001371C: lwz r0 0x8(r24)
Parsed instruction at 80013720: cmpwi r25 0x0
Parsed instruction at 80013724: stw r0 0xc(r24)
Parsed instruction at 80013728: bne .L_80013738
Parsed instruction at 8001372C: lbz r0 0x1(r24)
Parsed instruction at 80013730: cmplwi r0 0x0
Parsed instruction at 80013734: beq .L_80013744
Parsed label: L_80013738:
Parsed instruction at 80013738: lwz r3 0xc(r24)
Parsed instruction at 8001373C: subi r0 r3 0x1
Parsed instruction at 80013740: stw r0 0xc(r24)
Parsed label: L_80013744:
Parsed instruction at 80013744: li r3 0x10
Parsed instruction at 80013748: li r0 0x0
Parsed instruction at 8001374C: xor r3 r28 r3
Parsed instruction at 80013750: xor r0 r29 r0
Parsed instruction at 80013754: or. r0 r3 r0
Parsed instruction at 80013758: bne .L_80013774
Parsed instruction at 8001375C: lbz r0 0x3(r24)
Parsed instruction at 80013760: cmplwi r0 0x0
Parsed instruction at 80013764: beq .L_80013774
Parsed instruction at 80013768: lwz r3 0xc(r24)
Parsed instruction at 8001376C: subi r0 r3 0x2
Parsed instruction at 80013770: stw r0 0xc(r24)
Parsed label: L_80013774:
Parsed instruction at 80013774: lwz r3 0xc(r24)
Parsed instruction at 80013778: subf r0 r27 r23
Parsed instruction at 8001377C: add r0 r3 r0
Parsed instruction at 80013780: cmpwi r0 0x1fd
Parsed instruction at 80013784: ble .L_80013790
Parsed instruction at 80013788: li r3 0x0
Parsed instruction at 8001378C: b .L_80013820
Parsed label: L_80013790:
Parsed instruction at 80013790: li r3 0x30
Parsed instruction at 80013794: b .L_800137A0
Parsed label: L_80013798:
Parsed instruction at 80013798: stbu r3 -0x1(r27)
Parsed instruction at 8001379C: addi r26 r26 0x1
Parsed label: L_800137A0:
Parsed instruction at 800137A0: lwz r0 0xc(r24)
Parsed instruction at 800137A4: cmpw r26 r0
Parsed instruction at 800137A8: blt .L_80013798
Parsed instruction at 800137AC: li r3 0x10
Parsed instruction at 800137B0: li r0 0x0
Parsed instruction at 800137B4: xor r3 r28 r3
Parsed instruction at 800137B8: xor r0 r29 r0
Parsed instruction at 800137BC: or. r0 r3 r0
Parsed instruction at 800137C0: bne .L_800137E0
Parsed instruction at 800137C4: lbz r0 0x3(r24)
Parsed instruction at 800137C8: cmplwi r0 0x0
Parsed instruction at 800137CC: beq .L_800137E0
Parsed instruction at 800137D0: lbz r3 0x5(r24)
Parsed instruction at 800137D4: li r0 0x30
Parsed instruction at 800137D8: stb r3 -0x1(r27)
Parsed instruction at 800137DC: stbu r0 -0x2(r27)
Parsed label: L_800137E0:
Parsed instruction at 800137E0: cmpwi r25 0x0
Parsed instruction at 800137E4: beq .L_800137F4
Parsed instruction at 800137E8: li r0 0x2d
Parsed instruction at 800137EC: stbu r0 -0x1(r27)
Parsed instruction at 800137F0: b .L_8001381C
Parsed label: L_800137F4:
Parsed instruction at 800137F4: lbz r0 0x1(r24)
Parsed instruction at 800137F8: cmplwi r0 0x1
Parsed instruction at 800137FC: bne .L_8001380C
Parsed instruction at 80013800: li r0 0x2b
Parsed instruction at 80013804: stbu r0 -0x1(r27)
Parsed instruction at 80013808: b .L_8001381C
Parsed label: L_8001380C:
Parsed instruction at 8001380C: cmplwi r0 0x2
Parsed instruction at 80013810: bne .L_8001381C
Parsed instruction at 80013814: li r0 0x20
Parsed instruction at 80013818: stbu r0 -0x1(r27)
Parsed label: L_8001381C:
Parsed instruction at 8001381C: mr r3 r27
Parsed label: L_80013820:
Parsed instruction at 80013820: lmw r22 0x18(r1)
Parsed instruction at 80013824: lwz r0 0x44(r1)
Parsed instruction at 80013828: addi r1 r1 0x40
Parsed instruction at 8001382C: mtlr r0
Parsed instruction at 80013830: blr 
End of function: longlong2str_80013554, 202 instructions
Parsed function: long2str_80013834 at 0x80013834
Parsed instruction at 80013834: li r7 0x0
Parsed instruction at 80013838: stb r7 -0x1(r4)
Parsed instruction at 8001383C: cmpwi r3 0x0
Parsed instruction at 80013840: subi r6 r4 0x1
Parsed instruction at 80013844: li r8 0x0
Parsed instruction at 80013848: li r7 0x0
Parsed instruction at 8001384C: bne .L_8001387C
Parsed instruction at 80013850: lwz r9 0xc(r5)
Parsed instruction at 80013854: cmpwi r9 0x0
Parsed instruction at 80013858: bne .L_8001387C
Parsed instruction at 8001385C: lbz r9 0x3(r5)
Parsed instruction at 80013860: cmplwi r9 0x0
Parsed instruction at 80013864: beq .L_80013874
Parsed instruction at 80013868: lbz r9 0x5(r5)
Parsed instruction at 8001386C: cmplwi r9 0x6f
Parsed instruction at 80013870: beq .L_8001387C
Parsed label: L_80013874:
Parsed instruction at 80013874: mr r3 r6
Parsed instruction at 80013878: blr 
Parsed label: L_8001387C:
Parsed instruction at 8001387C: lbz r9 0x5(r5)
Parsed instruction at 80013880: subi r10 r9 0x58
Parsed instruction at 80013884: cmplwi r10 0x20
Parsed instruction at 80013888: bgt .L_800138E8
Parsed instruction at 8001388C: lis r9 jumptable_8001B83C@ha
Parsed instruction at 80013890: addi r9 r9 jumptable_8001B83C@l
Parsed instruction at 80013894: slwi r10 r10 2
Parsed instruction at 80013898: lwzx r9 r9 r10
Parsed instruction at 8001389C: mtctr r9
Parsed instruction at 800138A0: bctr 
Parsed instruction at 800138A4: cmpwi r3 0x0
Parsed instruction at 800138A8: li r0 0xa
Parsed instruction at 800138AC: bge .L_800138E8
Parsed instruction at 800138B0: neg r3 r3
Parsed instruction at 800138B4: li r8 0x1
Parsed instruction at 800138B8: b .L_800138E8
Parsed instruction at 800138BC: li r0 0x0
Parsed instruction at 800138C0: stb r0 0x1(r5)
Parsed instruction at 800138C4: li r0 0x8
Parsed instruction at 800138C8: b .L_800138E8
Parsed instruction at 800138CC: li r0 0x0
Parsed instruction at 800138D0: stb r0 0x1(r5)
Parsed instruction at 800138D4: li r0 0xa
Parsed instruction at 800138D8: b .L_800138E8
Parsed instruction at 800138DC: li r0 0x0
Parsed instruction at 800138E0: stb r0 0x1(r5)
Parsed instruction at 800138E4: li r0 0x10
Parsed label: L_800138E8:
Parsed instruction at 800138E8: divwu r9 r3 r0
Parsed instruction at 800138EC: mullw r9 r9 r0
Parsed instruction at 800138F0: subf r10 r9 r3
Parsed instruction at 800138F4: divwu r3 r3 r0
Parsed instruction at 800138F8: cmpwi r10 0xa
Parsed instruction at 800138FC: bge .L_80013908
Parsed instruction at 80013900: addi r10 r10 0x30
Parsed instruction at 80013904: b .L_80013920
Parsed label: L_80013908:
Parsed instruction at 80013908: lbz r9 0x5(r5)
Parsed instruction at 8001390C: cmplwi r9 0x78
Parsed instruction at 80013910: bne .L_8001391C
Parsed instruction at 80013914: addi r10 r10 0x57
Parsed instruction at 80013918: b .L_80013920
Parsed label: L_8001391C:
Parsed instruction at 8001391C: addi r10 r10 0x37
Parsed label: L_80013920:
Parsed instruction at 80013920: extsb r9 r10
Parsed instruction at 80013924: stb r9 -0x1(r6)
Parsed instruction at 80013928: cmplwi r3 0x0
Parsed instruction at 8001392C: subi r6 r6 0x1
Parsed instruction at 80013930: addi r7 r7 0x1
Parsed instruction at 80013934: bne .L_800138E8
Parsed instruction at 80013938: cmplwi r0 0x8
Parsed instruction at 8001393C: bne .L_80013964
Parsed instruction at 80013940: lbz r3 0x3(r5)
Parsed instruction at 80013944: cmplwi r3 0x0
Parsed instruction at 80013948: beq .L_80013964
Parsed instruction at 8001394C: lbz r3 0x0(r6)
Parsed instruction at 80013950: cmpwi r3 0x30
Parsed instruction at 80013954: beq .L_80013964
Parsed instruction at 80013958: li r3 0x30
Parsed instruction at 8001395C: stbu r3 -0x1(r6)
Parsed instruction at 80013960: addi r7 r7 0x1
Parsed label: L_80013964:
Parsed instruction at 80013964: lbz r3 0x0(r5)
Parsed instruction at 80013968: cmplwi r3 0x2
Parsed instruction at 8001396C: bne .L_800139B8
Parsed instruction at 80013970: lwz r3 0x8(r5)
Parsed instruction at 80013974: cmpwi r8 0x0
Parsed instruction at 80013978: stw r3 0xc(r5)
Parsed instruction at 8001397C: bne .L_8001398C
Parsed instruction at 80013980: lbz r3 0x1(r5)
Parsed instruction at 80013984: cmplwi r3 0x0
Parsed instruction at 80013988: beq .L_80013998
Parsed label: L_8001398C:
Parsed instruction at 8001398C: lwz r3 0xc(r5)
Parsed instruction at 80013990: subi r3 r3 0x1
Parsed instruction at 80013994: stw r3 0xc(r5)
Parsed label: L_80013998:
Parsed instruction at 80013998: cmplwi r0 0x10
Parsed instruction at 8001399C: bne .L_800139B8
Parsed instruction at 800139A0: lbz r3 0x3(r5)
Parsed instruction at 800139A4: cmplwi r3 0x0
Parsed instruction at 800139A8: beq .L_800139B8
Parsed instruction at 800139AC: lwz r3 0xc(r5)
Parsed instruction at 800139B0: subi r3 r3 0x2
Parsed instruction at 800139B4: stw r3 0xc(r5)
Parsed label: L_800139B8:
Parsed instruction at 800139B8: lwz r9 0xc(r5)
Parsed instruction at 800139BC: subf r3 r6 r4
Parsed instruction at 800139C0: add r3 r9 r3
Parsed instruction at 800139C4: cmpwi r3 0x1fd
Parsed instruction at 800139C8: ble .L_800139D4
Parsed instruction at 800139CC: li r3 0x0
Parsed instruction at 800139D0: blr 
Parsed label: L_800139D4:
Parsed instruction at 800139D4: li r4 0x30
Parsed instruction at 800139D8: b .L_800139E4
Parsed label: L_800139DC:
Parsed instruction at 800139DC: stbu r4 -0x1(r6)
Parsed instruction at 800139E0: addi r7 r7 0x1
Parsed label: L_800139E4:
Parsed instruction at 800139E4: lwz r3 0xc(r5)
Parsed instruction at 800139E8: cmpw r7 r3
Parsed instruction at 800139EC: blt .L_800139DC
Parsed instruction at 800139F0: cmplwi r0 0x10
Parsed instruction at 800139F4: bne .L_80013A14
Parsed instruction at 800139F8: lbz r0 0x3(r5)
Parsed instruction at 800139FC: cmplwi r0 0x0
Parsed instruction at 80013A00: beq .L_80013A14
Parsed instruction at 80013A04: lbz r3 0x5(r5)
Parsed instruction at 80013A08: li r0 0x30
Parsed instruction at 80013A0C: stb r3 -0x1(r6)
Parsed instruction at 80013A10: stbu r0 -0x2(r6)
Parsed label: L_80013A14:
Parsed instruction at 80013A14: cmpwi r8 0x0
Parsed instruction at 80013A18: beq .L_80013A28
Parsed instruction at 80013A1C: li r0 0x2d
Parsed instruction at 80013A20: stbu r0 -0x1(r6)
Parsed instruction at 80013A24: b .L_80013A50
Parsed label: L_80013A28:
Parsed instruction at 80013A28: lbz r0 0x1(r5)
Parsed instruction at 80013A2C: cmplwi r0 0x1
Parsed instruction at 80013A30: bne .L_80013A40
Parsed instruction at 80013A34: li r0 0x2b
Parsed instruction at 80013A38: stbu r0 -0x1(r6)
Parsed instruction at 80013A3C: b .L_80013A50
Parsed label: L_80013A40:
Parsed instruction at 80013A40: cmplwi r0 0x2
Parsed instruction at 80013A44: bne .L_80013A50
Parsed instruction at 80013A48: li r0 0x20
Parsed instruction at 80013A4C: stbu r0 -0x1(r6)
Parsed label: L_80013A50:
Parsed instruction at 80013A50: mr r3 r6
Parsed instruction at 80013A54: blr 
End of function: long2str_80013834, 154 instructions
Parsed function: parse_format_80013A58 at 0x80013A58
Parsed instruction at 80013A58: mflr r0
Parsed instruction at 80013A5C: stw r0 0x4(r1)
Parsed instruction at 80013A60: li r0 0x1
Parsed instruction at 80013A64: stwu r1 -0x38(r1)
Parsed instruction at 80013A68: stw r31 0x34(r1)
Parsed instruction at 80013A6C: addi r31 r3 0x1
Parsed instruction at 80013A70: stw r30 0x30(r1)
Parsed instruction at 80013A74: addi r30 r5 0x0
Parsed instruction at 80013A78: stw r29 0x2c(r1)
Parsed instruction at 80013A7C: addi r29 r4 0x0
Parsed instruction at 80013A80: stb r0 0x14(r1)
Parsed instruction at 80013A84: li r0 0x0
Parsed instruction at 80013A88: stb r0 0x15(r1)
Parsed instruction at 80013A8C: stb r0 0x16(r1)
Parsed instruction at 80013A90: stb r0 0x17(r1)
Parsed instruction at 80013A94: stb r0 0x18(r1)
Parsed instruction at 80013A98: stw r0 0x1c(r1)
Parsed instruction at 80013A9C: stw r0 0x20(r1)
Parsed instruction at 80013AA0: lbz r3 0x1(r3)
Parsed instruction at 80013AA4: extsb r3 r3
Parsed instruction at 80013AA8: cmpwi r3 0x25
Parsed instruction at 80013AAC: bne .L_80013ADC
Parsed instruction at 80013AB0: stb r3 0x19(r1)
Parsed instruction at 80013AB4: addi r3 r31 0x1
Parsed instruction at 80013AB8: lwz r4 0x14(r1)
Parsed instruction at 80013ABC: lwz r0 0x18(r1)
Parsed instruction at 80013AC0: stw r4 0x0(r30)
Parsed instruction at 80013AC4: stw r0 0x4(r30)
Parsed instruction at 80013AC8: lwz r4 0x1c(r1)
Parsed instruction at 80013ACC: lwz r0 0x20(r1)
Parsed instruction at 80013AD0: stw r4 0x8(r30)
Parsed instruction at 80013AD4: stw r0 0xc(r30)
Parsed instruction at 80013AD8: b .L_80013F14
Parsed label: L_80013ADC:
Parsed instruction at 80013ADC: lis r4 jumptable_8001B990@ha
Parsed instruction at 80013AE0: addi r4 r4 jumptable_8001B990@l
Parsed label: L_80013AE4:
Parsed instruction at 80013AE4: subi r0 r3 0x20
Parsed instruction at 80013AE8: cmplwi r0 0x10
Parsed instruction at 80013AEC: li r5 0x1
Parsed instruction at 80013AF0: bgt .L_80013B58
Parsed instruction at 80013AF4: slwi r0 r0 2
Parsed instruction at 80013AF8: lwzx r0 r4 r0
Parsed instruction at 80013AFC: mtctr r0
Parsed instruction at 80013B00: bctr 
Parsed instruction at 80013B04: li r0 0x0
Parsed instruction at 80013B08: stb r0 0x14(r1)
Parsed instruction at 80013B0C: b .L_80013B5C
Parsed instruction at 80013B10: li r0 0x1
Parsed instruction at 80013B14: stb r0 0x15(r1)
Parsed instruction at 80013B18: b .L_80013B5C
Parsed instruction at 80013B1C: lbz r0 0x15(r1)
Parsed instruction at 80013B20: cmplwi r0 0x1
Parsed instruction at 80013B24: beq .L_80013B5C
Parsed instruction at 80013B28: li r0 0x2
Parsed instruction at 80013B2C: stb r0 0x15(r1)
Parsed instruction at 80013B30: b .L_80013B5C
Parsed instruction at 80013B34: li r0 0x1
Parsed instruction at 80013B38: stb r0 0x17(r1)
Parsed instruction at 80013B3C: b .L_80013B5C
Parsed instruction at 80013B40: lbz r0 0x14(r1)
Parsed instruction at 80013B44: cmplwi r0 0x0
Parsed instruction at 80013B48: beq .L_80013B5C
Parsed instruction at 80013B4C: li r0 0x2
Parsed instruction at 80013B50: stb r0 0x14(r1)
Parsed instruction at 80013B54: b .L_80013B5C
Parsed label: L_80013B58:
Parsed instruction at 80013B58: li r5 0x0
Parsed label: L_80013B5C:
Parsed instruction at 80013B5C: cmpwi r5 0x0
Parsed instruction at 80013B60: beq .L_80013B70
Parsed instruction at 80013B64: lbzu r3 0x1(r31)
Parsed instruction at 80013B68: extsb r3 r3
Parsed instruction at 80013B6C: b .L_80013AE4
Parsed label: L_80013B70:
Parsed instruction at 80013B70: cmpwi r3 0x2a
Parsed instruction at 80013B74: bne .L_80013BB4
Parsed instruction at 80013B78: addi r3 r29 0x0
Parsed instruction at 80013B7C: li r4 0x1
Parsed instruction at 80013B80: bl __va_arg
Parsed instruction at 80013B84: lwz r0 0x0(r3)
Parsed instruction at 80013B88: cmpwi r0 0x0
Parsed instruction at 80013B8C: stw r0 0x1c(r1)
Parsed instruction at 80013B90: bge .L_80013BA8
Parsed instruction at 80013B94: li r0 0x0
Parsed instruction at 80013B98: stb r0 0x14(r1)
Parsed instruction at 80013B9C: lwz r0 0x1c(r1)
Parsed instruction at 80013BA0: neg r0 r0
Parsed instruction at 80013BA4: stw r0 0x1c(r1)
Parsed label: L_80013BA8:
Parsed instruction at 80013BA8: lbzu r3 0x1(r31)
Parsed instruction at 80013BAC: extsb r3 r3
Parsed instruction at 80013BB0: b .L_80013BF0
Parsed label: L_80013BB4:
Parsed instruction at 80013BB4: lis r4 lbl_8001A500@ha
Parsed instruction at 80013BB8: addi r5 r4 lbl_8001A500@l
Parsed instruction at 80013BBC: b .L_80013BDC
Parsed label: L_80013BC0:
Parsed instruction at 80013BC0: lwz r0 0x1c(r1)
Parsed instruction at 80013BC4: mulli r0 r0 0xa
Parsed instruction at 80013BC8: add r3 r3 r0
Parsed instruction at 80013BCC: subi r0 r3 0x30
Parsed instruction at 80013BD0: stw r0 0x1c(r1)
Parsed instruction at 80013BD4: lbzu r3 0x1(r31)
Parsed instruction at 80013BD8: extsb r3 r3
Parsed label: L_80013BDC:
Parsed instruction at 80013BDC: clrlwi r0 r3 24
Parsed instruction at 80013BE0: add r4 r5 r0
Parsed instruction at 80013BE4: lbz r0 0x0(r4)
Parsed instruction at 80013BE8: rlwinm. r0 r0 0 27 27
Parsed instruction at 80013BEC: bne .L_80013BC0
Parsed label: L_80013BF0:
Parsed instruction at 80013BF0: lwz r0 0x1c(r1)
Parsed instruction at 80013BF4: cmpwi r0 0x1fd
Parsed instruction at 80013BF8: ble .L_80013C2C
Parsed instruction at 80013BFC: li r0 0xff
Parsed instruction at 80013C00: stb r0 0x19(r1)
Parsed instruction at 80013C04: addi r3 r31 0x1
Parsed instruction at 80013C08: lwz r4 0x14(r1)
Parsed instruction at 80013C0C: lwz r0 0x18(r1)
Parsed instruction at 80013C10: stw r4 0x0(r30)
Parsed instruction at 80013C14: stw r0 0x4(r30)
Parsed instruction at 80013C18: lwz r4 0x1c(r1)
Parsed instruction at 80013C1C: lwz r0 0x20(r1)
Parsed instruction at 80013C20: stw r4 0x8(r30)
Parsed instruction at 80013C24: stw r0 0xc(r30)
Parsed instruction at 80013C28: b .L_80013F14
Parsed label: L_80013C2C:
Parsed instruction at 80013C2C: cmpwi r3 0x2e
Parsed instruction at 80013C30: bne .L_80013CB8
Parsed instruction at 80013C34: li r0 0x1
Parsed instruction at 80013C38: stb r0 0x16(r1)
Parsed instruction at 80013C3C: lbzu r3 0x1(r31)
Parsed instruction at 80013C40: extsb r3 r3
Parsed instruction at 80013C44: cmpwi r3 0x2a
Parsed instruction at 80013C48: bne .L_80013C7C
Parsed instruction at 80013C4C: addi r3 r29 0x0
Parsed instruction at 80013C50: li r4 0x1
Parsed instruction at 80013C54: bl __va_arg
Parsed instruction at 80013C58: lwz r0 0x0(r3)
Parsed instruction at 80013C5C: cmpwi r0 0x0
Parsed instruction at 80013C60: stw r0 0x20(r1)
Parsed instruction at 80013C64: bge .L_80013C70
Parsed instruction at 80013C68: li r0 0x0
Parsed instruction at 80013C6C: stb r0 0x16(r1)
Parsed label: L_80013C70:
Parsed instruction at 80013C70: lbzu r3 0x1(r31)
Parsed instruction at 80013C74: extsb r3 r3
Parsed instruction at 80013C78: b .L_80013CB8
Parsed label: L_80013C7C:
Parsed instruction at 80013C7C: lis r4 lbl_8001A500@ha
Parsed instruction at 80013C80: addi r5 r4 lbl_8001A500@l
Parsed instruction at 80013C84: b .L_80013CA4
Parsed label: L_80013C88:
Parsed instruction at 80013C88: lwz r0 0x20(r1)
Parsed instruction at 80013C8C: mulli r0 r0 0xa
Parsed instruction at 80013C90: add r3 r3 r0
Parsed instruction at 80013C94: subi r0 r3 0x30
Parsed instruction at 80013C98: stw r0 0x20(r1)
Parsed instruction at 80013C9C: lbzu r3 0x1(r31)
Parsed instruction at 80013CA0: extsb r3 r3
Parsed label: L_80013CA4:
Parsed instruction at 80013CA4: clrlwi r0 r3 24
Parsed instruction at 80013CA8: add r4 r5 r0
Parsed instruction at 80013CAC: lbz r0 0x0(r4)
Parsed instruction at 80013CB0: rlwinm. r0 r0 0 27 27
Parsed instruction at 80013CB4: bne .L_80013C88
Parsed label: L_80013CB8:
Parsed instruction at 80013CB8: cmpwi r3 0x68
Parsed instruction at 80013CBC: li r4 0x1
Parsed instruction at 80013CC0: beq .L_80013CE0
Parsed instruction at 80013CC4: bge .L_80013CD4
Parsed instruction at 80013CC8: cmpwi r3 0x4c
Parsed instruction at 80013CCC: beq .L_80013D2C
Parsed instruction at 80013CD0: b .L_80013D38
Parsed label: L_80013CD4:
Parsed instruction at 80013CD4: cmpwi r3 0x6c
Parsed instruction at 80013CD8: beq .L_80013D04
Parsed instruction at 80013CDC: b .L_80013D38
Parsed label: L_80013CE0:
Parsed instruction at 80013CE0: li r0 0x2
Parsed instruction at 80013CE4: stb r0 0x18(r1)
Parsed instruction at 80013CE8: lbz r0 0x1(r31)
Parsed instruction at 80013CEC: cmpwi r0 0x68
Parsed instruction at 80013CF0: bne .L_80013D3C
Parsed instruction at 80013CF4: stb r4 0x18(r1)
Parsed instruction at 80013CF8: lbzu r3 0x1(r31)
Parsed instruction at 80013CFC: extsb r3 r3
Parsed instruction at 80013D00: b .L_80013D3C
Parsed label: L_80013D04:
Parsed instruction at 80013D04: li r0 0x3
Parsed instruction at 80013D08: stb r0 0x18(r1)
Parsed instruction at 80013D0C: lbz r0 0x1(r31)
Parsed instruction at 80013D10: cmpwi r0 0x6c
Parsed instruction at 80013D14: bne .L_80013D3C
Parsed instruction at 80013D18: li r0 0x4
Parsed instruction at 80013D1C: stb r0 0x18(r1)
Parsed instruction at 80013D20: lbzu r3 0x1(r31)
Parsed instruction at 80013D24: extsb r3 r3
Parsed instruction at 80013D28: b .L_80013D3C
Parsed label: L_80013D2C:
Parsed instruction at 80013D2C: li r0 0x5
Parsed instruction at 80013D30: stb r0 0x18(r1)
Parsed instruction at 80013D34: b .L_80013D3C
Parsed label: L_80013D38:
Parsed instruction at 80013D38: li r4 0x0
Parsed label: L_80013D3C:
Parsed instruction at 80013D3C: cmpwi r4 0x0
Parsed instruction at 80013D40: beq .L_80013D4C
Parsed instruction at 80013D44: lbzu r3 0x1(r31)
Parsed instruction at 80013D48: extsb r3 r3
Parsed label: L_80013D4C:
Parsed instruction at 80013D4C: subi r0 r3 0x45
Parsed instruction at 80013D50: stb r3 0x19(r1)
Parsed instruction at 80013D54: cmplwi r0 0x33
Parsed instruction at 80013D58: bgt .L_80013EE8
Parsed instruction at 80013D5C: lis r3 jumptable_8001B8C0@ha
Parsed instruction at 80013D60: addi r3 r3 jumptable_8001B8C0@l
Parsed instruction at 80013D64: slwi r0 r0 2
Parsed instruction at 80013D68: lwzx r0 r3 r0
Parsed instruction at 80013D6C: mtctr r0
Parsed instruction at 80013D70: bctr 
Parsed instruction at 80013D74: lbz r0 0x18(r1)
Parsed instruction at 80013D78: cmplwi r0 0x5
Parsed instruction at 80013D7C: bne .L_80013D8C
Parsed instruction at 80013D80: li r0 0xff
Parsed instruction at 80013D84: stb r0 0x19(r1)
Parsed instruction at 80013D88: b .L_80013EF0
Parsed label: L_80013D8C:
Parsed instruction at 80013D8C: lbz r0 0x16(r1)
Parsed instruction at 80013D90: cmplwi r0 0x0
Parsed instruction at 80013D94: bne .L_80013DA4
Parsed instruction at 80013D98: li r0 0x1
Parsed instruction at 80013D9C: stw r0 0x20(r1)
Parsed instruction at 80013DA0: b .L_80013EF0
Parsed label: L_80013DA4:
Parsed instruction at 80013DA4: lbz r0 0x14(r1)
Parsed instruction at 80013DA8: cmplwi r0 0x2
Parsed instruction at 80013DAC: bne .L_80013EF0
Parsed instruction at 80013DB0: li r0 0x1
Parsed instruction at 80013DB4: stb r0 0x14(r1)
Parsed instruction at 80013DB8: b .L_80013EF0
Parsed instruction at 80013DBC: lbz r0 0x18(r1)
Parsed instruction at 80013DC0: cmplwi r0 0x2
Parsed instruction at 80013DC4: beq .L_80013DD0
Parsed instruction at 80013DC8: cmplwi r0 0x4
Parsed instruction at 80013DCC: bne .L_80013DDC
Parsed label: L_80013DD0:
Parsed instruction at 80013DD0: li r0 0xff
Parsed instruction at 80013DD4: stb r0 0x19(r1)
Parsed instruction at 80013DD8: b .L_80013EF0
Parsed label: L_80013DDC:
Parsed instruction at 80013DDC: lbz r0 0x16(r1)
Parsed instruction at 80013DE0: cmplwi r0 0x0
Parsed instruction at 80013DE4: bne .L_80013EF0
Parsed instruction at 80013DE8: li r0 0x6
Parsed instruction at 80013DEC: stw r0 0x20(r1)
Parsed instruction at 80013DF0: b .L_80013EF0
Parsed instruction at 80013DF4: lwz r0 0x20(r1)
Parsed instruction at 80013DF8: cmpwi r0 0x0
Parsed instruction at 80013DFC: bne .L_80013E08
Parsed instruction at 80013E00: li r0 0x1
Parsed instruction at 80013E04: stw r0 0x20(r1)
Parsed label: L_80013E08:
Parsed instruction at 80013E08: lbz r0 0x18(r1)
Parsed instruction at 80013E0C: cmplwi r0 0x2
Parsed instruction at 80013E10: beq .L_80013E24
Parsed instruction at 80013E14: cmplwi r0 0x4
Parsed instruction at 80013E18: beq .L_80013E24
Parsed instruction at 80013E1C: cmplwi r0 0x1
Parsed instruction at 80013E20: bne .L_80013E30
Parsed label: L_80013E24:
Parsed instruction at 80013E24: li r0 0xff
Parsed instruction at 80013E28: stb r0 0x19(r1)
Parsed instruction at 80013E2C: b .L_80013EF0
Parsed label: L_80013E30:
Parsed instruction at 80013E30: lbz r0 0x16(r1)
Parsed instruction at 80013E34: cmplwi r0 0x0
Parsed instruction at 80013E38: bne .L_80013EF0
Parsed instruction at 80013E3C: li r0 0x6
Parsed instruction at 80013E40: stw r0 0x20(r1)
Parsed instruction at 80013E44: b .L_80013EF0
Parsed instruction at 80013E48: li r0 0x78
Parsed instruction at 80013E4C: stb r0 0x19(r1)
Parsed instruction at 80013E50: li r0 0x1
Parsed instruction at 80013E54: li r3 0x3
Parsed instruction at 80013E58: stb r0 0x17(r1)
Parsed instruction at 80013E5C: li r0 0x8
Parsed instruction at 80013E60: stb r3 0x18(r1)
Parsed instruction at 80013E64: stw r0 0x20(r1)
Parsed instruction at 80013E68: b .L_80013EF0
Parsed instruction at 80013E6C: lbz r3 0x18(r1)
Parsed instruction at 80013E70: cmplwi r3 0x3
Parsed instruction at 80013E74: bne .L_80013E84
Parsed instruction at 80013E78: li r0 0x6
Parsed instruction at 80013E7C: stb r0 0x18(r1)
Parsed instruction at 80013E80: b .L_80013EF0
Parsed label: L_80013E84:
Parsed instruction at 80013E84: lbz r0 0x16(r1)
Parsed instruction at 80013E88: cmplwi r0 0x0
Parsed instruction at 80013E8C: bne .L_80013E98
Parsed instruction at 80013E90: cmplwi r3 0x0
Parsed instruction at 80013E94: beq .L_80013EF0
Parsed label: L_80013E98:
Parsed instruction at 80013E98: li r0 0xff
Parsed instruction at 80013E9C: stb r0 0x19(r1)
Parsed instruction at 80013EA0: b .L_80013EF0
Parsed instruction at 80013EA4: lbz r0 0x18(r1)
Parsed instruction at 80013EA8: cmplwi r0 0x3
Parsed instruction at 80013EAC: bne .L_80013EBC
Parsed instruction at 80013EB0: li r0 0x6
Parsed instruction at 80013EB4: stb r0 0x18(r1)
Parsed instruction at 80013EB8: b .L_80013EF0
Parsed label: L_80013EBC:
Parsed instruction at 80013EBC: cmplwi r0 0x0
Parsed instruction at 80013EC0: beq .L_80013EF0
Parsed instruction at 80013EC4: li r0 0xff
Parsed instruction at 80013EC8: stb r0 0x19(r1)
Parsed instruction at 80013ECC: b .L_80013EF0
Parsed instruction at 80013ED0: lbz r0 0x18(r1)
Parsed instruction at 80013ED4: cmplwi r0 0x5
Parsed instruction at 80013ED8: bne .L_80013EF0
Parsed instruction at 80013EDC: li r0 0xff
Parsed instruction at 80013EE0: stb r0 0x19(r1)
Parsed instruction at 80013EE4: b .L_80013EF0
Parsed label: L_80013EE8:
Parsed instruction at 80013EE8: li r0 0xff
Parsed instruction at 80013EEC: stb r0 0x19(r1)
Parsed label: L_80013EF0:
Parsed instruction at 80013EF0: lwz r4 0x14(r1)
Parsed instruction at 80013EF4: addi r3 r31 0x1
Parsed instruction at 80013EF8: lwz r0 0x18(r1)
Parsed instruction at 80013EFC: stw r4 0x0(r30)
Parsed instruction at 80013F00: stw r0 0x4(r30)
Parsed instruction at 80013F04: lwz r4 0x1c(r1)
Parsed instruction at 80013F08: lwz r0 0x20(r1)
Parsed instruction at 80013F0C: stw r4 0x8(r30)
Parsed instruction at 80013F10: stw r0 0xc(r30)
Parsed label: L_80013F14:
Parsed instruction at 80013F14: lwz r0 0x3c(r1)
Parsed instruction at 80013F18: lwz r31 0x34(r1)
Parsed instruction at 80013F1C: lwz r30 0x30(r1)
Parsed instruction at 80013F20: mtlr r0
Parsed instruction at 80013F24: lwz r29 0x2c(r1)
Parsed instruction at 80013F28: addi r1 r1 0x38
Parsed instruction at 80013F2C: blr 
End of function: parse_format_80013A58, 346 instructions
Parsed function: strchr at 0x80013F30
Parsed instruction at 80013F30: subi r3 r3 0x1
Parsed instruction at 80013F34: clrlwi r0 r4 24
Parsed instruction at 80013F38: b .L_80013F44
Parsed label: L_80013F3C:
Parsed instruction at 80013F3C: cmplw r4 r0
Parsed instruction at 80013F40: beqlr 
Parsed label: L_80013F44:
Parsed instruction at 80013F44: lbzu r4 0x1(r3)
Parsed instruction at 80013F48: cmplwi r4 0x0
Parsed instruction at 80013F4C: bne .L_80013F3C
Parsed instruction at 80013F50: cmplwi r0 0x0
Parsed instruction at 80013F54: beqlr 
Parsed instruction at 80013F58: li r3 0x0
Parsed instruction at 80013F5C: blr 
End of function: strchr, 14 instructions
Parsed function: fn_80013F60 at 0x80013F60
Parsed instruction at 80013F60: clrlwi r0 r3 30
Parsed instruction at 80013F64: clrlwi r5 r4 30
Parsed instruction at 80013F68: cmplw r0 r5
Parsed instruction at 80013F6C: addi r7 r3 0x0
Parsed instruction at 80013F70: bne .L_80013FF0
Parsed instruction at 80013F74: cmplwi r5 0x0
Parsed instruction at 80013F78: beq .L_80013FB8
Parsed instruction at 80013F7C: lbz r0 0x0(r4)
Parsed instruction at 80013F80: cmplwi r0 0x0
Parsed instruction at 80013F84: stb r0 0x0(r7)
Parsed instruction at 80013F88: beqlr 
Parsed instruction at 80013F8C: subfic r0 r5 0x3
Parsed instruction at 80013F90: cmplwi r0 0x0
Parsed instruction at 80013F94: mtctr r0
Parsed instruction at 80013F98: beq .L_80013FB0
Parsed label: L_80013F9C:
Parsed instruction at 80013F9C: lbzu r0 0x1(r4)
Parsed instruction at 80013FA0: cmplwi r0 0x0
Parsed instruction at 80013FA4: stbu r0 0x1(r7)
Parsed instruction at 80013FA8: beqlr 
Parsed instruction at 80013FAC: bdnz .L_80013F9C
Parsed label: L_80013FB0:
Parsed instruction at 80013FB0: addi r7 r7 0x1
Parsed instruction at 80013FB4: addi r4 r4 0x1
Parsed label: L_80013FB8:
Parsed instruction at 80013FB8: lwz r5 0x0(r4)
Parsed instruction at 80013FBC: lwz r0 lbl_8001EE44@sda21(r0)
Parsed instruction at 80013FC0: lwz r6 lbl_8001EE40@sda21(r0)
Parsed instruction at 80013FC4: addi r8 r5 0x0
Parsed instruction at 80013FC8: add r5 r5 r0
Parsed instruction at 80013FCC: and. r5 r5 r6
Parsed instruction at 80013FD0: bne .L_80013FF0
Parsed instruction at 80013FD4: subi r7 r7 0x4
Parsed label: L_80013FD8:
Parsed instruction at 80013FD8: stwu r8 0x4(r7)
Parsed instruction at 80013FDC: lwzu r8 0x4(r4)
Parsed instruction at 80013FE0: add r5 r8 r0
Parsed instruction at 80013FE4: and. r5 r5 r6
Parsed instruction at 80013FE8: beq .L_80013FD8
Parsed instruction at 80013FEC: addi r7 r7 0x4
Parsed label: L_80013FF0:
Parsed instruction at 80013FF0: lbz r0 0x0(r4)
Parsed instruction at 80013FF4: cmplwi r0 0x0
Parsed instruction at 80013FF8: stb r0 0x0(r7)
Parsed instruction at 80013FFC: beqlr 
Parsed label: L_80014000:
Parsed instruction at 80014000: lbzu r0 0x1(r4)
Parsed instruction at 80014004: cmplwi r0 0x0
Parsed instruction at 80014008: stbu r0 0x1(r7)
Parsed instruction at 8001400C: bne .L_80014000
Parsed instruction at 80014010: blr 
End of function: fn_80013F60, 51 instructions
Parsed function: strlen at 0x80014014
Parsed instruction at 80014014: li r4 -0x1
Parsed instruction at 80014018: subi r3 r3 0x1
Parsed label: L_8001401C:
Parsed instruction at 8001401C: lbzu r0 0x1(r3)
Parsed instruction at 80014020: addi r4 r4 0x1
Parsed instruction at 80014024: cmplwi r0 0x0
Parsed instruction at 80014028: bne .L_8001401C
Parsed instruction at 8001402C: mr r3 r4
Parsed instruction at 80014030: blr 
End of function: strlen, 9 instructions
Parsed function: fn_80014034 at 0x80014034
Parsed instruction at 80014034: li r3 0x0
Parsed instruction at 80014038: blr 
End of function: fn_80014034, 2 instructions
Parsed function: fn_8001403C at 0x8001403C
Parsed instruction at 8001403C: mflr r0
Parsed instruction at 80014040: li r3 0x0
Parsed instruction at 80014044: stw r0 0x4(r1)
Parsed instruction at 80014048: stwu r1 -0x28(r1)
Parsed instruction at 8001404C: stw r31 0x24(r1)
Parsed instruction at 80014050: addi r31 r5 0x0
Parsed instruction at 80014054: stw r30 0x20(r1)
Parsed instruction at 80014058: addi r30 r4 0x0
Parsed instruction at 8001405C: lwz r0 lbl_8001F058@sda21(r0)
Parsed instruction at 80014060: cmpwi r0 0x0
Parsed instruction at 80014064: bne .L_80014084
Parsed instruction at 80014068: lis r3 0x1
Parsed instruction at 8001406C: subi r3 r3 0x1f00
Parsed instruction at 80014070: bl fn_8000AF00
Parsed instruction at 80014074: cmpwi r3 0x0
Parsed instruction at 80014078: bne .L_80014084
Parsed instruction at 8001407C: li r0 0x1
Parsed instruction at 80014080: stw r0 lbl_8001F058@sda21(r0)
Parsed label: L_80014084:
Parsed instruction at 80014084: cmpwi r3 0x0
Parsed instruction at 80014088: beq .L_80014094
Parsed instruction at 8001408C: li r3 0x1
Parsed instruction at 80014090: b .L_800140BC
Parsed label: L_80014094:
Parsed instruction at 80014094: mr r3 r30
Parsed instruction at 80014098: lwz r4 0x0(r31)
Parsed instruction at 8001409C: bl fn_8000AF78
Parsed instruction at 800140A0: cmpwi r3 0x0
Parsed instruction at 800140A4: beq .L_800140B8
Parsed instruction at 800140A8: li r0 0x0
Parsed instruction at 800140AC: stw r0 0x0(r31)
Parsed instruction at 800140B0: li r3 0x1
Parsed instruction at 800140B4: b .L_800140BC
Parsed label: L_800140B8:
Parsed instruction at 800140B8: li r3 0x0
Parsed label: L_800140BC:
Parsed instruction at 800140BC: lwz r0 0x2c(r1)
Parsed instruction at 800140C0: lwz r31 0x24(r1)
Parsed instruction at 800140C4: lwz r30 0x20(r1)
Parsed instruction at 800140C8: mtlr r0
Parsed instruction at 800140CC: addi r1 r1 0x28
Parsed instruction at 800140D0: blr 
End of function: fn_8001403C, 42 instructions
Parsed function: fn_800140D4 at 0x800140D4
Parsed instruction at 800140D4: mflr r0
Parsed instruction at 800140D8: li r3 0x0
Parsed instruction at 800140DC: stw r0 0x4(r1)
Parsed instruction at 800140E0: stwu r1 -0x30(r1)
Parsed instruction at 800140E4: stw r31 0x2c(r1)
Parsed instruction at 800140E8: stw r30 0x28(r1)
Parsed instruction at 800140EC: addi r30 r5 0x0
Parsed instruction at 800140F0: stw r29 0x24(r1)
Parsed instruction at 800140F4: addi r29 r4 0x0
Parsed instruction at 800140F8: lwz r0 lbl_8001F058@sda21(r0)
Parsed instruction at 800140FC: cmpwi r0 0x0
Parsed instruction at 80014100: bne .L_80014120
Parsed instruction at 80014104: lis r3 0x1
Parsed instruction at 80014108: subi r3 r3 0x1f00
Parsed instruction at 8001410C: bl fn_8000AF00
Parsed instruction at 80014110: cmpwi r3 0x0
Parsed instruction at 80014114: bne .L_80014120
Parsed instruction at 80014118: li r0 0x1
Parsed instruction at 8001411C: stw r0 lbl_8001F058@sda21(r0)
Parsed label: L_80014120:
Parsed instruction at 80014120: cmpwi r3 0x0
Parsed instruction at 80014124: beq .L_80014130
Parsed instruction at 80014128: li r3 0x1
Parsed instruction at 8001412C: b .L_80014198
Parsed label: L_80014130:
Parsed instruction at 80014130: lwz r31 0x0(r30)
Parsed instruction at 80014134: li r0 0x0
Parsed instruction at 80014138: li r3 0x0
Parsed instruction at 8001413C: stw r0 0x0(r30)
Parsed instruction at 80014140: b .L_8001416C
Parsed label: L_80014144:
Parsed instruction at 80014144: addi r3 r29 0x0
Parsed instruction at 80014148: li r4 0x1
Parsed instruction at 8001414C: bl fn_8000AF70
Parsed instruction at 80014150: lwz r4 0x0(r30)
Parsed instruction at 80014154: addi r0 r4 0x1
Parsed instruction at 80014158: stw r0 0x0(r30)
Parsed instruction at 8001415C: lbz r0 0x0(r29)
Parsed instruction at 80014160: cmplwi r0 0xd
Parsed instruction at 80014164: beq .L_80014180
Parsed instruction at 80014168: addi r29 r29 0x1
Parsed label: L_8001416C:
Parsed instruction at 8001416C: lwz r0 0x0(r30)
Parsed instruction at 80014170: cmplw r0 r31
Parsed instruction at 80014174: bgt .L_80014180
Parsed instruction at 80014178: cmpwi r3 0x0
Parsed instruction at 8001417C: beq .L_80014144
Parsed label: L_80014180:
Parsed instruction at 80014180: cmpwi r3 0x0
Parsed instruction at 80014184: bne .L_80014190
Parsed instruction at 80014188: li r0 0x0
Parsed instruction at 8001418C: b .L_80014194
Parsed label: L_80014190:
Parsed instruction at 80014190: li r0 0x1
Parsed label: L_80014194:
Parsed instruction at 80014194: clrlwi r3 r0 24
Parsed label: L_80014198:
Parsed instruction at 80014198: lwz r0 0x34(r1)
Parsed instruction at 8001419C: lwz r31 0x2c(r1)
Parsed instruction at 800141A0: lwz r30 0x28(r1)
Parsed instruction at 800141A4: mtlr r0
Parsed instruction at 800141A8: lwz r29 0x24(r1)
Parsed instruction at 800141AC: addi r1 r1 0x30
Parsed instruction at 800141B0: blr 
End of function: fn_800140D4, 64 instructions
Parsed function: fwide at 0x800141B4
Parsed instruction at 800141B4: lhz r0 0x4(r3)
Parsed instruction at 800141B8: extrwi. r0 r0 3 23
Parsed instruction at 800141BC: bne .L_800141C8
Parsed instruction at 800141C0: li r3 0x0
Parsed instruction at 800141C4: blr 
Parsed label: L_800141C8:
Parsed instruction at 800141C8: lbz r5 0x5(r3)
Parsed instruction at 800141CC: extrwi r0 r5 2 26
Parsed instruction at 800141D0: cmpwi r0 0x1
Parsed instruction at 800141D4: beq .L_8001422C
Parsed instruction at 800141D8: bge .L_800141E8
Parsed instruction at 800141DC: cmpwi r0 0x0
Parsed instruction at 800141E0: bge .L_800141F4
Parsed instruction at 800141E4: blr 
Parsed label: L_800141E8:
Parsed instruction at 800141E8: cmpwi r0 0x3
Parsed instruction at 800141EC: bgelr 
Parsed instruction at 800141F0: b .L_80014224
Parsed label: L_800141F4:
Parsed instruction at 800141F4: cmpwi r4 0x0
Parsed instruction at 800141F8: ble .L_8001420C
Parsed instruction at 800141FC: li r0 0x2
Parsed instruction at 80014200: rlwimi r5 r0 4 26 27
Parsed instruction at 80014204: stb r5 0x5(r3)
Parsed instruction at 80014208: b .L_8001421C
Parsed label: L_8001420C:
Parsed instruction at 8001420C: bge .L_8001421C
Parsed instruction at 80014210: li r0 0x1
Parsed instruction at 80014214: rlwimi r5 r0 4 26 27
Parsed instruction at 80014218: stb r5 0x5(r3)
Parsed label: L_8001421C:
Parsed instruction at 8001421C: mr r3 r4
Parsed instruction at 80014220: blr 
Parsed label: L_80014224:
Parsed instruction at 80014224: li r3 0x1
Parsed instruction at 80014228: blr 
Parsed label: L_8001422C:
Parsed instruction at 8001422C: li r3 -0x1
Parsed instruction at 80014230: blr 
End of function: fwide, 39 instructions
Parsed function: fn_80014234 at 0x80014234
Parsed instruction at 80014234: stwu r1 -0x18(r1)
Parsed instruction at 80014238: lis r0 0x7ff0
Parsed instruction at 8001423C: li r4 0x0
Parsed instruction at 80014240: stfd f1 0x8(r1)
Parsed instruction at 80014244: lwz r5 0x8(r1)
Parsed instruction at 80014248: lwz r8 0xc(r1)
Parsed instruction at 8001424C: clrlwi r6 r5 1
Parsed instruction at 80014250: cmpw r6 r0
Parsed instruction at 80014254: stw r4 0x0(r3)
Parsed instruction at 80014258: addi r7 r5 0x0
Parsed instruction at 8001425C: addi r4 r6 0x0
Parsed instruction at 80014260: bge .L_8001426C
Parsed instruction at 80014264: or. r0 r4 r8
Parsed instruction at 80014268: bne .L_80014274
Parsed label: L_8001426C:
Parsed instruction at 8001426C: lfd f1 0x8(r1)
Parsed instruction at 80014270: b .L_800142C8
Parsed label: L_80014274:
Parsed instruction at 80014274: lis r0 0x10
Parsed instruction at 80014278: cmpw r4 r0
Parsed instruction at 8001427C: bge .L_800142A4
Parsed instruction at 80014280: lfd f1 0x8(r1)
Parsed instruction at 80014284: li r0 -0x36
Parsed instruction at 80014288: lfd f0 lbl_8001F0D0@sda21(r0)
Parsed instruction at 8001428C: fmul f0 f1 f0
Parsed instruction at 80014290: stfd f0 0x8(r1)
Parsed instruction at 80014294: lwz r4 0x8(r1)
Parsed instruction at 80014298: stw r0 0x0(r3)
Parsed instruction at 8001429C: addi r7 r4 0x0
Parsed instruction at 800142A0: clrlwi r4 r4 1
Parsed label: L_800142A4:
Parsed instruction at 800142A4: lwz r5 0x0(r3)
Parsed instruction at 800142A8: srawi r4 r4 20
Parsed instruction at 800142AC: rlwinm r0 r7 0 12 0
Parsed instruction at 800142B0: add r4 r4 r5
Parsed instruction at 800142B4: subi r4 r4 0x3fe
Parsed instruction at 800142B8: stw r4 0x0(r3)
Parsed instruction at 800142BC: oris r0 r0 0x3fe0
Parsed instruction at 800142C0: stw r0 0x8(r1)
Parsed instruction at 800142C4: lfd f1 0x8(r1)
Parsed label: L_800142C8:
Parsed instruction at 800142C8: addi r1 r1 0x18
Parsed instruction at 800142CC: blr 
End of function: fn_80014234, 43 instructions
Parsed function: TRKHandleRequestEvent at 0x800142D0
Parsed instruction at 800142D0: mflr r0
Parsed instruction at 800142D4: stw r0 0x4(r1)
Parsed instruction at 800142D8: stwu r1 -0x8(r1)
Parsed instruction at 800142DC: lwz r3 0x8(r3)
Parsed instruction at 800142E0: bl fn_8001496C
Parsed instruction at 800142E4: bl fn_80015278
Parsed instruction at 800142E8: addi r1 r1 0x8
Parsed instruction at 800142EC: lwz r0 0x4(r1)
Parsed instruction at 800142F0: mtlr r0
Parsed instruction at 800142F4: blr 
End of function: TRKHandleRequestEvent, 10 instructions
Parsed function: TRKHandleSupportEvent at 0x800142F8
Parsed instruction at 800142F8: mflr r0
Parsed instruction at 800142FC: stw r0 0x4(r1)
Parsed instruction at 80014300: stwu r1 -0x8(r1)
Parsed instruction at 80014304: bl fn_80017D50
Parsed instruction at 80014308: addi r1 r1 0x8
Parsed instruction at 8001430C: lwz r0 0x4(r1)
Parsed instruction at 80014310: mtlr r0
Parsed instruction at 80014314: blr 
End of function: TRKHandleSupportEvent, 8 instructions
Parsed function: TRKIdle at 0x80014318
Parsed instruction at 80014318: mflr r0
Parsed instruction at 8001431C: stw r0 0x4(r1)
Parsed instruction at 80014320: stwu r1 -0x8(r1)
Parsed instruction at 80014324: bl fn_80017E7C
Parsed instruction at 80014328: cmpwi r3 0x0
Parsed instruction at 8001432C: bne .L_80014334
Parsed instruction at 80014330: bl fn_80018B3C
Parsed label: L_80014334:
Parsed instruction at 80014334: addi r1 r1 0x8
Parsed instruction at 80014338: lwz r0 0x4(r1)
Parsed instruction at 8001433C: mtlr r0
Parsed instruction at 80014340: blr 
End of function: TRKIdle, 12 instructions
Parsed function: TRKNubMainLoop at 0x80014344
Parsed instruction at 80014344: mflr r0
Parsed instruction at 80014348: lis r3 gTRKInputPendingPtr@ha
Parsed instruction at 8001434C: stw r0 0x4(r1)
Parsed instruction at 80014350: stwu r1 -0x20(r1)
Parsed instruction at 80014354: stw r31 0x1c(r1)
Parsed instruction at 80014358: addi r31 r3 gTRKInputPendingPtr@l
Parsed instruction at 8001435C: stw r30 0x18(r1)
Parsed instruction at 80014360: li r30 0x0
Parsed instruction at 80014364: stw r29 0x14(r1)
Parsed instruction at 80014368: li r29 0x0
Parsed instruction at 8001436C: b .L_80014414
Parsed label: L_80014370:
Parsed instruction at 80014370: addi r3 r1 0x8
Parsed instruction at 80014374: bl TRKGetNextEvent
Parsed instruction at 80014378: cmpwi r3 0x0
Parsed instruction at 8001437C: beq .L_800143E8
Parsed instruction at 80014380: lbz r0 0x8(r1)
Parsed instruction at 80014384: li r29 0x0
Parsed instruction at 80014388: cmpwi r0 0x2
Parsed instruction at 8001438C: beq .L_800143B4
Parsed instruction at 80014390: bge .L_800143A4
Parsed instruction at 80014394: cmpwi r0 0x0
Parsed instruction at 80014398: beq .L_800143DC
Parsed instruction at 8001439C: bge .L_800143C0
Parsed instruction at 800143A0: b .L_800143DC
Parsed label: L_800143A4:
Parsed instruction at 800143A4: cmpwi r0 0x5
Parsed instruction at 800143A8: beq .L_800143D4
Parsed instruction at 800143AC: bge .L_800143DC
Parsed instruction at 800143B0: b .L_800143C8
Parsed label: L_800143B4:
Parsed instruction at 800143B4: addi r3 r1 0x8
Parsed instruction at 800143B8: bl TRKHandleRequestEvent
Parsed instruction at 800143BC: b .L_800143DC
Parsed label: L_800143C0:
Parsed instruction at 800143C0: li r30 0x1
Parsed instruction at 800143C4: b .L_800143DC
Parsed label: L_800143C8:
Parsed instruction at 800143C8: addi r3 r1 0x8
Parsed instruction at 800143CC: bl TRKTargetInterrupt
Parsed instruction at 800143D0: b .L_800143DC
Parsed label: L_800143D4:
Parsed instruction at 800143D4: addi r3 r1 0x8
Parsed instruction at 800143D8: bl TRKHandleSupportEvent
Parsed label: L_800143DC:
Parsed instruction at 800143DC: addi r3 r1 0x8
Parsed instruction at 800143E0: bl TRKDestructEvent
Parsed instruction at 800143E4: b .L_80014414
Parsed label: L_800143E8:
Parsed instruction at 800143E8: cmpwi r29 0x0
Parsed instruction at 800143EC: beq .L_80014400
Parsed instruction at 800143F0: lwz r3 0x0(r31)
Parsed instruction at 800143F4: lbz r0 0x0(r3)
Parsed instruction at 800143F8: cmplwi r0 0x0
Parsed instruction at 800143FC: beq .L_8001440C
Parsed label: L_80014400:
Parsed instruction at 80014400: li r29 0x1
Parsed instruction at 80014404: bl TRKGetInput
Parsed instruction at 80014408: b .L_80014414
Parsed label: L_8001440C:
Parsed instruction at 8001440C: bl TRKIdle
Parsed instruction at 80014410: li r29 0x0
Parsed label: L_80014414:
Parsed instruction at 80014414: cmpwi r30 0x0
Parsed instruction at 80014418: beq .L_80014370
Parsed instruction at 8001441C: lwz r31 0x1c(r1)
Parsed instruction at 80014420: lwz r30 0x18(r1)
Parsed instruction at 80014424: lwz r29 0x14(r1)
Parsed instruction at 80014428: addi r1 r1 0x20
Parsed instruction at 8001442C: lwz r0 0x4(r1)
Parsed instruction at 80014430: mtlr r0
Parsed instruction at 80014434: blr 
End of function: TRKNubMainLoop, 72 instructions
Parsed function: TRKInitializeEventQueue at 0x80014438
Parsed instruction at 80014438: mflr r0
Parsed instruction at 8001443C: lis r3 lbl_8001CE50@ha
Parsed instruction at 80014440: stw r0 0x4(r1)
Parsed instruction at 80014444: stwu r1 -0x10(r1)
Parsed instruction at 80014448: stw r31 0xc(r1)
Parsed instruction at 8001444C: addi r31 r3 lbl_8001CE50@l
Parsed instruction at 80014450: addi r3 r31 0x0
Parsed instruction at 80014454: bl fn_80016A1C
Parsed instruction at 80014458: mr r3 r31
Parsed instruction at 8001445C: bl fn_80016A24
Parsed instruction at 80014460: li r3 0x0
Parsed instruction at 80014464: stw r3 0x4(r31)
Parsed instruction at 80014468: li r0 0x100
Parsed instruction at 8001446C: stw r3 0x8(r31)
Parsed instruction at 80014470: mr r3 r31
Parsed instruction at 80014474: stw r0 0x24(r31)
Parsed instruction at 80014478: bl fn_80016A2C
Parsed instruction at 8001447C: li r3 0x0
Parsed instruction at 80014480: lwz r31 0xc(r1)
Parsed instruction at 80014484: addi r1 r1 0x10
Parsed instruction at 80014488: lwz r0 0x4(r1)
Parsed instruction at 8001448C: mtlr r0
Parsed instruction at 80014490: blr 
End of function: TRKInitializeEventQueue, 23 instructions
Parsed function: fn_80014494 at 0x80014494
Parsed instruction at 80014494: mflr r0
Parsed instruction at 80014498: li r5 0xc
Parsed instruction at 8001449C: stw r0 0x4(r1)
Parsed instruction at 800144A0: stwu r1 -0x8(r1)
Parsed instruction at 800144A4: bl fn_800034C8
Parsed instruction at 800144A8: addi r1 r1 0x8
Parsed instruction at 800144AC: lwz r0 0x4(r1)
Parsed instruction at 800144B0: mtlr r0
Parsed instruction at 800144B4: blr 
End of function: fn_80014494, 9 instructions
Parsed function: TRKGetNextEvent at 0x800144B8
Parsed instruction at 800144B8: mflr r0
Parsed instruction at 800144BC: lis r4 lbl_8001CE50@ha
Parsed instruction at 800144C0: stw r0 0x4(r1)
Parsed instruction at 800144C4: stwu r1 -0x18(r1)
Parsed instruction at 800144C8: stw r31 0x14(r1)
Parsed instruction at 800144CC: addi r31 r4 lbl_8001CE50@l
Parsed instruction at 800144D0: stw r30 0x10(r1)
Parsed instruction at 800144D4: stw r29 0xc(r1)
Parsed instruction at 800144D8: li r29 0x0
Parsed instruction at 800144DC: stw r28 0x8(r1)
Parsed instruction at 800144E0: addi r28 r3 0x0
Parsed instruction at 800144E4: addi r3 r31 0x0
Parsed instruction at 800144E8: bl fn_80016A24
Parsed instruction at 800144EC: addi r30 r31 0x4
Parsed instruction at 800144F0: lwz r0 0x4(r31)
Parsed instruction at 800144F4: cmpwi r0 0x0
Parsed instruction at 800144F8: ble .L_80014548
Parsed instruction at 800144FC: addi r29 r31 0x8
Parsed instruction at 80014500: lwz r0 0x8(r31)
Parsed instruction at 80014504: addi r3 r28 0x0
Parsed instruction at 80014508: mulli r0 r0 0xc
Parsed instruction at 8001450C: add r4 r31 r0
Parsed instruction at 80014510: addi r4 r4 0xc
Parsed instruction at 80014514: bl fn_80014494
Parsed instruction at 80014518: lwz r3 0x0(r30)
Parsed instruction at 8001451C: subi r0 r3 0x1
Parsed instruction at 80014520: stw r0 0x0(r30)
Parsed instruction at 80014524: lwz r3 0x0(r29)
Parsed instruction at 80014528: addi r0 r3 0x1
Parsed instruction at 8001452C: stw r0 0x0(r29)
Parsed instruction at 80014530: lwz r0 0x0(r29)
Parsed instruction at 80014534: cmpwi r0 0x2
Parsed instruction at 80014538: bne .L_80014544
Parsed instruction at 8001453C: li r0 0x0
Parsed instruction at 80014540: stw r0 0x0(r29)
Parsed label: L_80014544:
Parsed instruction at 80014544: li r29 0x1
Parsed label: L_80014548:
Parsed instruction at 80014548: lis r3 lbl_8001CE50@ha
Parsed instruction at 8001454C: addi r3 r3 lbl_8001CE50@l
Parsed instruction at 80014550: bl fn_80016A2C
Parsed instruction at 80014554: mr r3 r29
Parsed instruction at 80014558: lwz r31 0x14(r1)
Parsed instruction at 8001455C: lwz r30 0x10(r1)
Parsed instruction at 80014560: lwz r29 0xc(r1)
Parsed instruction at 80014564: lwz r28 0x8(r1)
Parsed instruction at 80014568: addi r1 r1 0x18
Parsed instruction at 8001456C: lwz r0 0x4(r1)
Parsed instruction at 80014570: mtlr r0
Parsed instruction at 80014574: blr 
End of function: TRKGetNextEvent, 50 instructions
Parsed function: fn_80014578 at 0x80014578
Parsed instruction at 80014578: mflr r0
Parsed instruction at 8001457C: lis r4 lbl_8001CE50@ha
Parsed instruction at 80014580: stw r0 0x4(r1)
Parsed instruction at 80014584: stwu r1 -0x18(r1)
Parsed instruction at 80014588: stw r31 0x14(r1)
Parsed instruction at 8001458C: addi r31 r3 0x0
Parsed instruction at 80014590: stw r30 0x10(r1)
Parsed instruction at 80014594: addi r30 r4 lbl_8001CE50@l
Parsed instruction at 80014598: addi r3 r30 0x0
Parsed instruction at 8001459C: stw r29 0xc(r1)
Parsed instruction at 800145A0: stw r28 0x8(r1)
Parsed instruction at 800145A4: li r28 0x0
Parsed instruction at 800145A8: bl fn_80016A24
Parsed instruction at 800145AC: addi r29 r30 0x4
Parsed instruction at 800145B0: lwz r3 0x4(r30)
Parsed instruction at 800145B4: cmpwi r3 0x2
Parsed instruction at 800145B8: bne .L_800145C4
Parsed instruction at 800145BC: li r28 0x100
Parsed instruction at 800145C0: b .L_80014628
Parsed label: L_800145C4:
Parsed instruction at 800145C4: lwz r0 0x8(r30)
Parsed instruction at 800145C8: addi r4 r31 0x0
Parsed instruction at 800145CC: add r0 r0 r3
Parsed instruction at 800145D0: srawi r3 r0 1
Parsed instruction at 800145D4: addze r3 r3
Parsed instruction at 800145D8: slwi r3 r3 1
Parsed instruction at 800145DC: subfc r3 r3 r0
Parsed instruction at 800145E0: mulli r0 r3 0xc
Parsed instruction at 800145E4: add r31 r30 r0
Parsed instruction at 800145E8: addi r3 r31 0xc
Parsed instruction at 800145EC: bl fn_80014494
Parsed instruction at 800145F0: addi r4 r30 0x24
Parsed instruction at 800145F4: lwz r0 0x24(r30)
Parsed instruction at 800145F8: stw r0 0x10(r31)
Parsed instruction at 800145FC: lwz r3 0x24(r30)
Parsed instruction at 80014600: addi r0 r3 0x1
Parsed instruction at 80014604: stw r0 0x24(r30)
Parsed instruction at 80014608: lwz r0 0x24(r30)
Parsed instruction at 8001460C: cmplwi r0 0x100
Parsed instruction at 80014610: bge .L_8001461C
Parsed instruction at 80014614: li r0 0x100
Parsed instruction at 80014618: stw r0 0x0(r4)
Parsed label: L_8001461C:
Parsed instruction at 8001461C: lwz r3 0x0(r29)
Parsed instruction at 80014620: addi r0 r3 0x1
Parsed instruction at 80014624: stw r0 0x0(r29)
Parsed label: L_80014628:
Parsed instruction at 80014628: lis r3 lbl_8001CE50@ha
Parsed instruction at 8001462C: addi r3 r3 lbl_8001CE50@l
Parsed instruction at 80014630: bl fn_80016A2C
Parsed instruction at 80014634: mr r3 r28
Parsed instruction at 80014638: lwz r31 0x14(r1)
Parsed instruction at 8001463C: lwz r30 0x10(r1)
Parsed instruction at 80014640: lwz r29 0xc(r1)
Parsed instruction at 80014644: lwz r28 0x8(r1)
Parsed instruction at 80014648: addi r1 r1 0x18
Parsed instruction at 8001464C: lwz r0 0x4(r1)
Parsed instruction at 80014650: mtlr r0
Parsed instruction at 80014654: blr 
End of function: fn_80014578, 59 instructions
Parsed function: fn_80014658 at 0x80014658
Parsed instruction at 80014658: stb r4 0x0(r3)
Parsed instruction at 8001465C: li r4 0x0
Parsed instruction at 80014660: li r0 -0x1
Parsed instruction at 80014664: stw r4 0x4(r3)
Parsed instruction at 80014668: stw r0 0x8(r3)
Parsed instruction at 8001466C: blr 
End of function: fn_80014658, 6 instructions
Parsed function: TRKDestructEvent at 0x80014670
Parsed instruction at 80014670: mflr r0
Parsed instruction at 80014674: stw r0 0x4(r1)
Parsed instruction at 80014678: stwu r1 -0x8(r1)
Parsed instruction at 8001467C: lwz r3 0x8(r3)
Parsed instruction at 80014680: bl fn_80014998
Parsed instruction at 80014684: addi r1 r1 0x8
Parsed instruction at 80014688: lwz r0 0x4(r1)
Parsed instruction at 8001468C: mtlr r0
Parsed instruction at 80014690: blr 
End of function: TRKDestructEvent, 9 instructions
Parsed function: TRKInitializeNub at 0x80014694
Parsed instruction at 80014694: mflr r0
Parsed instruction at 80014698: stw r0 0x4(r1)
Parsed instruction at 8001469C: stwu r1 -0x10(r1)
Parsed instruction at 800146A0: stw r31 0xc(r1)
Parsed instruction at 800146A4: stw r30 0x8(r1)
Parsed instruction at 800146A8: bl TRKInitializeEndian
Parsed instruction at 800146AC: mr. r30 r3
Parsed instruction at 800146B0: bne .L_800146B8
Parsed instruction at 800146B4: bl usr_put_initialize
Parsed label: L_800146B8:
Parsed instruction at 800146B8: cmpwi r30 0x0
Parsed instruction at 800146BC: bne .L_800146C8
Parsed instruction at 800146C0: bl TRKInitializeEventQueue
Parsed instruction at 800146C4: mr r30 r3
Parsed label: L_800146C8:
Parsed instruction at 800146C8: cmpwi r30 0x0
Parsed instruction at 800146CC: bne .L_800146D8
Parsed instruction at 800146D0: bl TRKInitializeMessageBuffers
Parsed instruction at 800146D4: mr r30 r3
Parsed label: L_800146D8:
Parsed instruction at 800146D8: cmpwi r30 0x0
Parsed instruction at 800146DC: bne .L_800146E8
Parsed instruction at 800146E0: bl TRKInitializeDispatcher
Parsed instruction at 800146E4: mr r30 r3
Parsed label: L_800146E8:
Parsed instruction at 800146E8: cmpwi r30 0x0
Parsed instruction at 800146EC: bne .L_8001472C
Parsed instruction at 800146F0: lis r3 gTRKInputPendingPtr@ha
Parsed instruction at 800146F4: addi r31 r3 gTRKInputPendingPtr@l
Parsed instruction at 800146F8: lis r3 0x1
Parsed instruction at 800146FC: addi r6 r31 0x0
Parsed instruction at 80014700: subi r3 r3 0x1f00
Parsed instruction at 80014704: li r4 0x1
Parsed instruction at 80014708: li r5 0x0
Parsed instruction at 8001470C: bl TRKInitializeIntDrivenUART
Parsed instruction at 80014710: mr r0 r3
Parsed instruction at 80014714: lwz r3 0x0(r31)
Parsed instruction at 80014718: mr r31 r0
Parsed instruction at 8001471C: bl TRKTargetSetInputPendingPtr
Parsed instruction at 80014720: cmpwi r31 0x0
Parsed instruction at 80014724: beq .L_8001472C
Parsed instruction at 80014728: mr r30 r31
Parsed label: L_8001472C:
Parsed instruction at 8001472C: cmpwi r30 0x0
Parsed instruction at 80014730: bne .L_8001473C
Parsed instruction at 80014734: bl TRKInitializeSerialHandler
Parsed instruction at 80014738: mr r30 r3
Parsed label: L_8001473C:
Parsed instruction at 8001473C: cmpwi r30 0x0
Parsed instruction at 80014740: bne .L_8001474C
Parsed instruction at 80014744: bl TRKInitializeTarget
Parsed instruction at 80014748: mr r30 r3
Parsed label: L_8001474C:
Parsed instruction at 8001474C: mr r3 r30
Parsed instruction at 80014750: lwz r31 0xc(r1)
Parsed instruction at 80014754: lwz r30 0x8(r1)
Parsed instruction at 80014758: addi r1 r1 0x10
Parsed instruction at 8001475C: lwz r0 0x4(r1)
Parsed instruction at 80014760: mtlr r0
Parsed instruction at 80014764: blr 
End of function: TRKInitializeNub, 60 instructions
Parsed function: TRKTerminateNub at 0x80014768
Parsed instruction at 80014768: mflr r0
Parsed instruction at 8001476C: stw r0 0x4(r1)
Parsed instruction at 80014770: stwu r1 -0x8(r1)
Parsed instruction at 80014774: bl fn_80015258
Parsed instruction at 80014778: li r3 0x0
Parsed instruction at 8001477C: addi r1 r1 0x8
Parsed instruction at 80014780: lwz r0 0x4(r1)
Parsed instruction at 80014784: mtlr r0
Parsed instruction at 80014788: blr 
End of function: TRKTerminateNub, 9 instructions
Parsed function: TRKNubWelcome at 0x8001478C
Parsed instruction at 8001478C: mflr r0
Parsed instruction at 80014790: lis r3 "@40_8001A610"@ha
Parsed instruction at 80014794: stw r0 0x4(r1)
Parsed instruction at 80014798: addi r3 r3 "@40_8001A610"@l
Parsed instruction at 8001479C: stwu r1 -0x8(r1)
Parsed instruction at 800147A0: bl TRK_board_display
Parsed instruction at 800147A4: addi r1 r1 0x8
Parsed instruction at 800147A8: lwz r0 0x4(r1)
Parsed instruction at 800147AC: mtlr r0
Parsed instruction at 800147B0: blr 
End of function: TRKNubWelcome, 10 instructions
Parsed function: TRKInitializeEndian at 0x800147B4
Parsed instruction at 800147B4: lis r3 lbl_8001CE78@ha
Parsed instruction at 800147B8: stwu r1 -0x10(r1)
Parsed instruction at 800147BC: addi r5 r3 lbl_8001CE78@l
Parsed instruction at 800147C0: li r6 0x1
Parsed instruction at 800147C4: stw r6 0x0(r5)
Parsed instruction at 800147C8: li r0 0x12
Parsed instruction at 800147CC: li r3 0x34
Parsed instruction at 800147D0: stb r0 0x8(r1)
Parsed instruction at 800147D4: li r4 0x56
Parsed instruction at 800147D8: li r0 0x78
Parsed instruction at 800147DC: stb r3 0x9(r1)
Parsed instruction at 800147E0: li r3 0x0
Parsed instruction at 800147E4: stb r4 0xa(r1)
Parsed instruction at 800147E8: stb r0 0xb(r1)
Parsed instruction at 800147EC: lwz r4 0x8(r1)
Parsed instruction at 800147F0: subis r0 r4 0x1234
Parsed instruction at 800147F4: cmplwi r0 0x5678
Parsed instruction at 800147F8: bne .L_80014804
Parsed instruction at 800147FC: stw r6 0x0(r5)
Parsed instruction at 80014800: b .L_80014820
Parsed label: L_80014804:
Parsed instruction at 80014804: subis r0 r4 0x7856
Parsed instruction at 80014808: cmplwi r0 0x3412
Parsed instruction at 8001480C: bne .L_8001481C
Parsed instruction at 80014810: li r0 0x0
Parsed instruction at 80014814: stw r0 0x0(r5)
Parsed instruction at 80014818: b .L_80014820
Parsed label: L_8001481C:
Parsed instruction at 8001481C: li r3 0x1
Parsed label: L_80014820:
Parsed instruction at 80014820: addi r1 r1 0x10
Parsed instruction at 80014824: blr 
End of function: TRKInitializeEndian, 32 instructions
Parsed function: fn_80014828 at 0x80014828
Parsed instruction at 80014828: mflr r0
Parsed instruction at 8001482C: stw r0 0x4(r1)
Parsed instruction at 80014830: stwu r1 -0x8(r1)
Parsed instruction at 80014834: lwz r4 0x8(r3)
Parsed instruction at 80014838: addi r3 r3 0x10
Parsed instruction at 8001483C: bl fn_80018A74
Parsed instruction at 80014840: addi r1 r1 0x8
Parsed instruction at 80014844: lwz r0 0x4(r1)
Parsed instruction at 80014848: mtlr r0
Parsed instruction at 8001484C: blr 
End of function: fn_80014828, 10 instructions
Parsed function: fn_80014850 at 0x80014850
Parsed instruction at 80014850: stw r4 0x4(r3)
Parsed instruction at 80014854: blr 
End of function: fn_80014850, 2 instructions
Parsed function: TRKInitializeMessageBuffers at 0x80014858
Parsed instruction at 80014858: mflr r0
Parsed instruction at 8001485C: lis r3 lbl_8001CE80@ha
Parsed instruction at 80014860: stw r0 0x4(r1)
Parsed instruction at 80014864: addi r0 r3 lbl_8001CE80@l
Parsed instruction at 80014868: stwu r1 -0x10(r1)
Parsed instruction at 8001486C: stw r31 0xc(r1)
Parsed instruction at 80014870: stw r30 0x8(r1)
Parsed instruction at 80014874: li r30 0x0
Parsed instruction at 80014878: mulli r4 r30 0x890
Parsed instruction at 8001487C: add r31 r0 r4
Parsed label: L_80014880:
Parsed instruction at 80014880: mr r3 r31
Parsed instruction at 80014884: bl fn_80016A1C
Parsed instruction at 80014888: mr r3 r31
Parsed instruction at 8001488C: bl fn_80016A24
Parsed instruction at 80014890: addi r3 r31 0x0
Parsed instruction at 80014894: li r4 0x0
Parsed instruction at 80014898: bl fn_80014850
Parsed instruction at 8001489C: mr r3 r31
Parsed instruction at 800148A0: bl fn_80016A2C
Parsed instruction at 800148A4: addi r30 r30 0x1
Parsed instruction at 800148A8: addi r31 r31 0x890
Parsed instruction at 800148AC: cmpwi r30 0x3
Parsed instruction at 800148B0: blt .L_80014880
Parsed instruction at 800148B4: lwz r31 0xc(r1)
Parsed instruction at 800148B8: li r3 0x0
Parsed instruction at 800148BC: lwz r30 0x8(r1)
Parsed instruction at 800148C0: addi r1 r1 0x10
Parsed instruction at 800148C4: lwz r0 0x4(r1)
Parsed instruction at 800148C8: mtlr r0
Parsed instruction at 800148CC: blr 
End of function: TRKInitializeMessageBuffers, 31 instructions
Parsed function: fn_800148D0 at 0x800148D0
Parsed instruction at 800148D0: mflr r0
Parsed instruction at 800148D4: stw r0 0x4(r1)
Parsed instruction at 800148D8: li r0 0x0
Parsed instruction at 800148DC: stwu r1 -0x20(r1)
Parsed instruction at 800148E0: stmw r27 0xc(r1)
Parsed instruction at 800148E4: addi r28 r4 0x0
Parsed instruction at 800148E8: addi r27 r3 0x0
Parsed instruction at 800148EC: li r31 0x300
Parsed instruction at 800148F0: li r30 0x0
Parsed instruction at 800148F4: stw r0 0x0(r4)
Parsed instruction at 800148F8: b .L_8001494C
Parsed label: L_800148FC:
Parsed instruction at 800148FC: mr r3 r30
Parsed instruction at 80014900: bl fn_8001496C
Parsed instruction at 80014904: mr r29 r3
Parsed instruction at 80014908: bl fn_80016A24
Parsed instruction at 8001490C: lwz r0 0x4(r29)
Parsed instruction at 80014910: cmpwi r0 0x0
Parsed instruction at 80014914: bne .L_80014940
Parsed instruction at 80014918: addi r3 r29 0x0
Parsed instruction at 8001491C: li r4 0x1
Parsed instruction at 80014920: bl fn_80014A00
Parsed instruction at 80014924: addi r3 r29 0x0
Parsed instruction at 80014928: li r4 0x1
Parsed instruction at 8001492C: bl fn_80014850
Parsed instruction at 80014930: stw r29 0x0(r28)
Parsed instruction at 80014934: li r31 0x0
Parsed instruction at 80014938: stw r30 0x0(r27)
Parsed instruction at 8001493C: li r30 0x3
Parsed label: L_80014940:
Parsed instruction at 80014940: mr r3 r29
Parsed instruction at 80014944: bl fn_80016A2C
Parsed instruction at 80014948: addi r30 r30 0x1
Parsed label: L_8001494C:
Parsed instruction at 8001494C: cmpwi r30 0x3
Parsed instruction at 80014950: blt .L_800148FC
Parsed instruction at 80014954: mr r3 r31
Parsed instruction at 80014958: lmw r27 0xc(r1)
Parsed instruction at 8001495C: addi r1 r1 0x20
Parsed instruction at 80014960: lwz r0 0x4(r1)
Parsed instruction at 80014964: mtlr r0
Parsed instruction at 80014968: blr 
End of function: fn_800148D0, 42 instructions
Parsed function: fn_8001496C at 0x8001496C
Parsed instruction at 8001496C: cmpwi r3 0x0
Parsed instruction at 80014970: li r0 0x0
Parsed instruction at 80014974: blt .L_80014990
Parsed instruction at 80014978: cmpwi r3 0x3
Parsed instruction at 8001497C: bge .L_80014990
Parsed instruction at 80014980: mulli r4 r3 0x890
Parsed instruction at 80014984: lis r3 lbl_8001CE80@ha
Parsed instruction at 80014988: addi r0 r3 lbl_8001CE80@l
Parsed instruction at 8001498C: add r0 r0 r4
Parsed label: L_80014990:
Parsed instruction at 80014990: mr r3 r0
Parsed instruction at 80014994: blr 
End of function: fn_8001496C, 12 instructions
Parsed function: fn_80014998 at 0x80014998
Parsed instruction at 80014998: mflr r0
Parsed instruction at 8001499C: cmpwi r3 -0x1
Parsed instruction at 800149A0: stw r0 0x4(r1)
Parsed instruction at 800149A4: stwu r1 -0x10(r1)
Parsed instruction at 800149A8: stw r31 0xc(r1)
Parsed instruction at 800149AC: beq .L_800149EC
Parsed instruction at 800149B0: cmpwi r3 0x0
Parsed instruction at 800149B4: blt .L_800149EC
Parsed instruction at 800149B8: cmpwi r3 0x3
Parsed instruction at 800149BC: bge .L_800149EC
Parsed instruction at 800149C0: mulli r4 r3 0x890
Parsed instruction at 800149C4: lis r3 lbl_8001CE80@ha
Parsed instruction at 800149C8: addi r0 r3 lbl_8001CE80@l
Parsed instruction at 800149CC: add r31 r0 r4
Parsed instruction at 800149D0: addi r3 r31 0x0
Parsed instruction at 800149D4: bl fn_80016A24
Parsed instruction at 800149D8: addi r3 r31 0x0
Parsed instruction at 800149DC: li r4 0x0
Parsed instruction at 800149E0: bl fn_80014850
Parsed instruction at 800149E4: mr r3 r31
Parsed instruction at 800149E8: bl fn_80016A2C
Parsed label: L_800149EC:
Parsed instruction at 800149EC: lwz r31 0xc(r1)
Parsed instruction at 800149F0: addi r1 r1 0x10
Parsed instruction at 800149F4: lwz r0 0x4(r1)
Parsed instruction at 800149F8: mtlr r0
Parsed instruction at 800149FC: blr 
End of function: fn_80014998, 27 instructions
Parsed function: fn_80014A00 at 0x80014A00
Parsed instruction at 80014A00: mflr r0
Parsed instruction at 80014A04: li r5 0x0
Parsed instruction at 80014A08: stw r0 0x4(r1)
Parsed instruction at 80014A0C: clrlwi. r0 r4 24
Parsed instruction at 80014A10: stwu r1 -0x8(r1)
Parsed instruction at 80014A14: stw r5 0x8(r3)
Parsed instruction at 80014A18: stw r5 0xc(r3)
Parsed instruction at 80014A1C: bne .L_80014A30
Parsed instruction at 80014A20: addi r3 r3 0x10
Parsed instruction at 80014A24: li r4 0x0
Parsed instruction at 80014A28: li r5 0x880
Parsed instruction at 80014A2C: bl fn_800034EC
Parsed label: L_80014A30:
Parsed instruction at 80014A30: addi r1 r1 0x8
Parsed instruction at 80014A34: lwz r0 0x4(r1)
Parsed instruction at 80014A38: mtlr r0
Parsed instruction at 80014A3C: blr 
End of function: fn_80014A00, 17 instructions
Parsed function: fn_80014A40 at 0x80014A40
Parsed instruction at 80014A40: cmplwi r4 0x880
Parsed instruction at 80014A44: li r5 0x0
Parsed instruction at 80014A48: ble .L_80014A54
Parsed instruction at 80014A4C: li r5 0x301
Parsed instruction at 80014A50: b .L_80014A68
Parsed label: L_80014A54:
Parsed instruction at 80014A54: stw r4 0xc(r3)
Parsed instruction at 80014A58: lwz r0 0x8(r3)
Parsed instruction at 80014A5C: cmplw r4 r0
Parsed instruction at 80014A60: ble .L_80014A68
Parsed instruction at 80014A64: stw r4 0x8(r3)
Parsed label: L_80014A68:
Parsed instruction at 80014A68: mr r3 r5
Parsed instruction at 80014A6C: blr 
End of function: fn_80014A40, 14 instructions
Parsed function: fn_80014A70 at 0x80014A70
Parsed instruction at 80014A70: mflr r0
Parsed instruction at 80014A74: stw r0 0x4(r1)
Parsed instruction at 80014A78: stwu r1 -0x18(r1)
Parsed instruction at 80014A7C: stw r31 0x14(r1)
Parsed instruction at 80014A80: li r31 0x0
Parsed instruction at 80014A84: stw r30 0x10(r1)
Parsed instruction at 80014A88: mr. r30 r5
Parsed instruction at 80014A8C: stw r29 0xc(r1)
Parsed instruction at 80014A90: addi r29 r3 0x0
Parsed instruction at 80014A94: bne .L_80014AA0
Parsed instruction at 80014A98: li r3 0x0
Parsed instruction at 80014A9C: b .L_80014AF8
Parsed label: L_80014AA0:
Parsed instruction at 80014AA0: lwz r3 0xc(r29)
Parsed instruction at 80014AA4: subfic r0 r3 0x880
Parsed instruction at 80014AA8: cmplw r0 r30
Parsed instruction at 80014AAC: bge .L_80014AB8
Parsed instruction at 80014AB0: li r31 0x301
Parsed instruction at 80014AB4: mr r30 r0
Parsed label: L_80014AB8:
Parsed instruction at 80014AB8: cmplwi r30 0x1
Parsed instruction at 80014ABC: bne .L_80014AD0
Parsed instruction at 80014AC0: lbz r0 0x0(r4)
Parsed instruction at 80014AC4: add r3 r29 r3
Parsed instruction at 80014AC8: stb r0 0x10(r3)
Parsed instruction at 80014ACC: b .L_80014AE0
Parsed label: L_80014AD0:
Parsed instruction at 80014AD0: addi r3 r3 0x10
Parsed instruction at 80014AD4: addi r5 r30 0x0
Parsed instruction at 80014AD8: add r3 r29 r3
Parsed instruction at 80014ADC: bl fn_800034C8
Parsed label: L_80014AE0:
Parsed instruction at 80014AE0: lwz r0 0xc(r29)
Parsed instruction at 80014AE4: addi r3 r31 0x0
Parsed instruction at 80014AE8: add r0 r0 r30
Parsed instruction at 80014AEC: stw r0 0xc(r29)
Parsed instruction at 80014AF0: lwz r0 0xc(r29)
Parsed instruction at 80014AF4: stw r0 0x8(r29)
Parsed label: L_80014AF8:
Parsed instruction at 80014AF8: lwz r31 0x14(r1)
Parsed instruction at 80014AFC: lwz r30 0x10(r1)
Parsed instruction at 80014B00: lwz r29 0xc(r1)
Parsed instruction at 80014B04: addi r1 r1 0x18
Parsed instruction at 80014B08: lwz r0 0x4(r1)
Parsed instruction at 80014B0C: mtlr r0
Parsed instruction at 80014B10: blr 
End of function: fn_80014A70, 46 instructions
Parsed function: fn_80014B14 at 0x80014B14
Parsed instruction at 80014B14: mflr r0
Parsed instruction at 80014B18: stw r0 0x4(r1)
Parsed instruction at 80014B1C: stwu r1 -0x18(r1)
Parsed instruction at 80014B20: stw r31 0x14(r1)
Parsed instruction at 80014B24: li r31 0x0
Parsed instruction at 80014B28: stw r30 0x10(r1)
Parsed instruction at 80014B2C: mr. r30 r5
Parsed instruction at 80014B30: stw r29 0xc(r1)
Parsed instruction at 80014B34: addi r29 r3 0x0
Parsed instruction at 80014B38: addi r3 r4 0x0
Parsed instruction at 80014B3C: bne .L_80014B48
Parsed instruction at 80014B40: li r3 0x0
Parsed instruction at 80014B44: b .L_80014B84
Parsed label: L_80014B48:
Parsed instruction at 80014B48: lwz r4 0xc(r29)
Parsed instruction at 80014B4C: lwz r0 0x8(r29)
Parsed instruction at 80014B50: subf r0 r4 r0
Parsed instruction at 80014B54: cmplw r30 r0
Parsed instruction at 80014B58: ble .L_80014B64
Parsed instruction at 80014B5C: li r31 0x302
Parsed instruction at 80014B60: mr r30 r0
Parsed label: L_80014B64:
Parsed instruction at 80014B64: addi r4 r4 0x10
Parsed instruction at 80014B68: addi r5 r30 0x0
Parsed instruction at 80014B6C: add r4 r29 r4
Parsed instruction at 80014B70: bl fn_800034C8
Parsed instruction at 80014B74: lwz r0 0xc(r29)
Parsed instruction at 80014B78: addi r3 r31 0x0
Parsed instruction at 80014B7C: add r0 r0 r30
Parsed instruction at 80014B80: stw r0 0xc(r29)
Parsed label: L_80014B84:
Parsed instruction at 80014B84: lwz r31 0x14(r1)
Parsed instruction at 80014B88: lwz r30 0x10(r1)
Parsed instruction at 80014B8C: lwz r29 0xc(r1)
Parsed instruction at 80014B90: addi r1 r1 0x18
Parsed instruction at 80014B94: lwz r0 0x4(r1)
Parsed instruction at 80014B98: mtlr r0
Parsed instruction at 80014B9C: blr 
End of function: fn_80014B14, 38 instructions
Parsed function: fn_80014BA0 at 0x80014BA0
Parsed instruction at 80014BA0: mflr r0
Parsed instruction at 80014BA4: lis r5 lbl_8001CE78@ha
Parsed instruction at 80014BA8: stw r0 0x4(r1)
Parsed instruction at 80014BAC: stwu r1 -0x10(r1)
Parsed instruction at 80014BB0: sth r4 0x8(r1)
Parsed instruction at 80014BB4: lwz r0 lbl_8001CE78@l(r5)
Parsed instruction at 80014BB8: cmpwi r0 0x0
Parsed instruction at 80014BBC: beq .L_80014BC8
Parsed instruction at 80014BC0: addi r4 r1 0x8
Parsed instruction at 80014BC4: b .L_80014BDC
Parsed label: L_80014BC8:
Parsed instruction at 80014BC8: lbz r0 0x9(r1)
Parsed instruction at 80014BCC: addi r4 r1 0xc
Parsed instruction at 80014BD0: stb r0 0xc(r1)
Parsed instruction at 80014BD4: lbz r0 0x8(r1)
Parsed instruction at 80014BD8: stb r0 0xd(r1)
Parsed label: L_80014BDC:
Parsed instruction at 80014BDC: li r5 0x2
Parsed instruction at 80014BE0: bl fn_80014A70
Parsed instruction at 80014BE4: addi r1 r1 0x10
Parsed instruction at 80014BE8: lwz r0 0x4(r1)
Parsed instruction at 80014BEC: mtlr r0
Parsed instruction at 80014BF0: blr 
End of function: fn_80014BA0, 23 instructions
Parsed function: fn_80014BF4 at 0x80014BF4
Parsed instruction at 80014BF4: mflr r0
Parsed instruction at 80014BF8: lis r5 lbl_8001CE78@ha
Parsed instruction at 80014BFC: stw r0 0x4(r1)
Parsed instruction at 80014C00: stwu r1 -0x10(r1)
Parsed instruction at 80014C04: stw r4 0x8(r1)
Parsed instruction at 80014C08: lwz r0 lbl_8001CE78@l(r5)
Parsed instruction at 80014C0C: cmpwi r0 0x0
Parsed instruction at 80014C10: beq .L_80014C1C
Parsed instruction at 80014C14: addi r4 r1 0x8
Parsed instruction at 80014C18: b .L_80014C40
Parsed label: L_80014C1C:
Parsed instruction at 80014C1C: lbz r0 0xb(r1)
Parsed instruction at 80014C20: addi r4 r1 0xc
Parsed instruction at 80014C24: stb r0 0xc(r1)
Parsed instruction at 80014C28: lbz r0 0xa(r1)
Parsed instruction at 80014C2C: stb r0 0xd(r1)
Parsed instruction at 80014C30: lbz r0 0x9(r1)
Parsed instruction at 80014C34: stb r0 0xe(r1)
Parsed instruction at 80014C38: lbz r0 0x8(r1)
Parsed instruction at 80014C3C: stb r0 0xf(r1)
Parsed label: L_80014C40:
Parsed instruction at 80014C40: li r5 0x4
Parsed instruction at 80014C44: bl fn_80014A70
Parsed instruction at 80014C48: addi r1 r1 0x10
Parsed instruction at 80014C4C: lwz r0 0x4(r1)
Parsed instruction at 80014C50: mtlr r0
Parsed instruction at 80014C54: blr 
End of function: fn_80014BF4, 27 instructions
Parsed function: fn_80014C58 at 0x80014C58
Parsed instruction at 80014C58: mflr r0
Parsed instruction at 80014C5C: lis r4 lbl_8001CE78@ha
Parsed instruction at 80014C60: stw r0 0x4(r1)
Parsed instruction at 80014C64: stwu r1 -0x18(r1)
Parsed instruction at 80014C68: stw r5 0x8(r1)
Parsed instruction at 80014C6C: stw r6 0xc(r1)
Parsed instruction at 80014C70: lwz r0 lbl_8001CE78@l(r4)
Parsed instruction at 80014C74: cmpwi r0 0x0
Parsed instruction at 80014C78: beq .L_80014C84
Parsed instruction at 80014C7C: addi r4 r1 0x8
Parsed instruction at 80014C80: b .L_80014CC8
Parsed label: L_80014C84:
Parsed instruction at 80014C84: lbz r0 0xf(r1)
Parsed instruction at 80014C88: addi r4 r1 0x10
Parsed instruction at 80014C8C: stb r0 0x10(r1)
Parsed instruction at 80014C90: lbz r0 0xe(r1)
Parsed instruction at 80014C94: stb r0 0x11(r1)
Parsed instruction at 80014C98: lbz r0 0xd(r1)
Parsed instruction at 80014C9C: stb r0 0x12(r1)
Parsed instruction at 80014CA0: lbz r0 0xc(r1)
Parsed instruction at 80014CA4: stb r0 0x13(r1)
Parsed instruction at 80014CA8: lbz r0 0xb(r1)
Parsed instruction at 80014CAC: stb r0 0x14(r1)
Parsed instruction at 80014CB0: lbz r0 0xa(r1)
Parsed instruction at 80014CB4: stb r0 0x15(r1)
Parsed instruction at 80014CB8: lbz r0 0x9(r1)
Parsed instruction at 80014CBC: stb r0 0x16(r1)
Parsed instruction at 80014CC0: lbz r0 0x8(r1)
Parsed instruction at 80014CC4: stb r0 0x17(r1)
Parsed label: L_80014CC8:
Parsed instruction at 80014CC8: li r5 0x8
Parsed instruction at 80014CCC: bl fn_80014A70
Parsed instruction at 80014CD0: addi r1 r1 0x18
Parsed instruction at 80014CD4: lwz r0 0x4(r1)
Parsed instruction at 80014CD8: mtlr r0
Parsed instruction at 80014CDC: blr 
End of function: fn_80014C58, 36 instructions
Parsed function: fn_80014CE0 at 0x80014CE0
Parsed instruction at 80014CE0: li r9 0x0
Parsed instruction at 80014CE4: li r0 0x0
Parsed instruction at 80014CE8: b .L_80014D30
Parsed label: L_80014CEC:
Parsed instruction at 80014CEC: lwz r7 0xc(r3)
Parsed instruction at 80014CF0: lbz r8 0x0(r4)
Parsed instruction at 80014CF4: cmplwi r7 0x880
Parsed instruction at 80014CF8: blt .L_80014D04
Parsed instruction at 80014CFC: li r7 0x301
Parsed instruction at 80014D00: b .L_80014D24
Parsed label: L_80014D04:
Parsed instruction at 80014D04: addi r6 r7 0x1
Parsed instruction at 80014D08: addi r0 r7 0x10
Parsed instruction at 80014D0C: stw r6 0xc(r3)
Parsed instruction at 80014D10: li r7 0x0
Parsed instruction at 80014D14: stbx r8 r3 r0
Parsed instruction at 80014D18: lwz r6 0x8(r3)
Parsed instruction at 80014D1C: addi r0 r6 0x1
Parsed instruction at 80014D20: stw r0 0x8(r3)
Parsed label: L_80014D24:
Parsed instruction at 80014D24: addi r0 r7 0x0
Parsed instruction at 80014D28: addi r9 r9 0x1
Parsed instruction at 80014D2C: addi r4 r4 0x1
Parsed label: L_80014D30:
Parsed instruction at 80014D30: cmpwi r0 0x0
Parsed instruction at 80014D34: bne .L_80014D40
Parsed instruction at 80014D38: cmpw r9 r5
Parsed instruction at 80014D3C: blt .L_80014CEC
Parsed label: L_80014D40:
Parsed instruction at 80014D40: mr r3 r0
Parsed instruction at 80014D44: blr 
End of function: fn_80014CE0, 31 instructions
Parsed function: fn_80014D48 at 0x80014D48
Parsed instruction at 80014D48: mflr r0
Parsed instruction at 80014D4C: stw r0 0x4(r1)
Parsed instruction at 80014D50: stwu r1 -0x18(r1)
Parsed instruction at 80014D54: stw r31 0x14(r1)
Parsed instruction at 80014D58: stw r30 0x10(r1)
Parsed instruction at 80014D5C: li r30 0x0
Parsed instruction at 80014D60: slwi r0 r30 2
Parsed instruction at 80014D64: stw r29 0xc(r1)
Parsed instruction at 80014D68: add r31 r4 r0
Parsed instruction at 80014D6C: addi r29 r5 0x0
Parsed instruction at 80014D70: stw r28 0x8(r1)
Parsed instruction at 80014D74: addi r28 r3 0x0
Parsed instruction at 80014D78: li r3 0x0
Parsed instruction at 80014D7C: b .L_80014D94
Parsed label: L_80014D80:
Parsed instruction at 80014D80: mr r3 r28
Parsed instruction at 80014D84: lwz r4 0x0(r31)
Parsed instruction at 80014D88: bl fn_80014BF4
Parsed instruction at 80014D8C: addi r30 r30 0x1
Parsed instruction at 80014D90: addi r31 r31 0x4
Parsed label: L_80014D94:
Parsed instruction at 80014D94: cmpwi r3 0x0
Parsed instruction at 80014D98: bne .L_80014DA4
Parsed instruction at 80014D9C: cmpw r30 r29
Parsed instruction at 80014DA0: blt .L_80014D80
Parsed label: L_80014DA4:
Parsed instruction at 80014DA4: lwz r31 0x14(r1)
Parsed instruction at 80014DA8: lwz r30 0x10(r1)
Parsed instruction at 80014DAC: lwz r29 0xc(r1)
Parsed instruction at 80014DB0: lwz r28 0x8(r1)
Parsed instruction at 80014DB4: addi r1 r1 0x18
Parsed instruction at 80014DB8: lwz r0 0x4(r1)
Parsed instruction at 80014DBC: mtlr r0
Parsed instruction at 80014DC0: blr 
End of function: fn_80014D48, 34 instructions
Parsed function: fn_80014DC4 at 0x80014DC4
Parsed instruction at 80014DC4: mflr r0
Parsed instruction at 80014DC8: li r5 0x1
Parsed instruction at 80014DCC: stw r0 0x4(r1)
Parsed instruction at 80014DD0: stwu r1 -0x8(r1)
Parsed instruction at 80014DD4: bl fn_80014B14
Parsed instruction at 80014DD8: addi r1 r1 0x8
Parsed instruction at 80014DDC: lwz r0 0x4(r1)
Parsed instruction at 80014DE0: mtlr r0
Parsed instruction at 80014DE4: blr 
End of function: fn_80014DC4, 9 instructions
Parsed function: fn_80014DE8 at 0x80014DE8
Parsed instruction at 80014DE8: mflr r0
Parsed instruction at 80014DEC: lis r5 lbl_8001CE78@ha
Parsed instruction at 80014DF0: stw r0 0x4(r1)
Parsed instruction at 80014DF4: stwu r1 -0x18(r1)
Parsed instruction at 80014DF8: stw r31 0x14(r1)
Parsed instruction at 80014DFC: stw r30 0x10(r1)
Parsed instruction at 80014E00: addi r30 r4 0x0
Parsed instruction at 80014E04: lwz r0 lbl_8001CE78@l(r5)
Parsed instruction at 80014E08: cmpwi r0 0x0
Parsed instruction at 80014E0C: beq .L_80014E18
Parsed instruction at 80014E10: mr r31 r30
Parsed instruction at 80014E14: b .L_80014E1C
Parsed label: L_80014E18:
Parsed instruction at 80014E18: addi r31 r1 0x8
Parsed label: L_80014E1C:
Parsed instruction at 80014E1C: addi r4 r31 0x0
Parsed instruction at 80014E20: li r5 0x2
Parsed instruction at 80014E24: bl fn_80014B14
Parsed instruction at 80014E28: lis r4 lbl_8001CE78@ha
Parsed instruction at 80014E2C: lwz r0 lbl_8001CE78@l(r4)
Parsed instruction at 80014E30: cmpwi r0 0x0
Parsed instruction at 80014E34: bne .L_80014E50
Parsed instruction at 80014E38: cmpwi r3 0x0
Parsed instruction at 80014E3C: bne .L_80014E50
Parsed instruction at 80014E40: lbz r0 0x1(r31)
Parsed instruction at 80014E44: stb r0 0x0(r30)
Parsed instruction at 80014E48: lbz r0 0x0(r31)
Parsed instruction at 80014E4C: stb r0 0x1(r30)
Parsed label: L_80014E50:
Parsed instruction at 80014E50: lwz r31 0x14(r1)
Parsed instruction at 80014E54: lwz r30 0x10(r1)
Parsed instruction at 80014E58: addi r1 r1 0x18
Parsed instruction at 80014E5C: lwz r0 0x4(r1)
Parsed instruction at 80014E60: mtlr r0
Parsed instruction at 80014E64: blr 
End of function: fn_80014DE8, 35 instructions
Parsed function: fn_80014E68 at 0x80014E68
Parsed instruction at 80014E68: mflr r0
Parsed instruction at 80014E6C: lis r5 lbl_8001CE78@ha
Parsed instruction at 80014E70: stw r0 0x4(r1)
Parsed instruction at 80014E74: stwu r1 -0x18(r1)
Parsed instruction at 80014E78: stw r31 0x14(r1)
Parsed instruction at 80014E7C: stw r30 0x10(r1)
Parsed instruction at 80014E80: addi r30 r4 0x0
Parsed instruction at 80014E84: lwz r0 lbl_8001CE78@l(r5)
Parsed instruction at 80014E88: cmpwi r0 0x0
Parsed instruction at 80014E8C: beq .L_80014E98
Parsed instruction at 80014E90: mr r31 r30
Parsed instruction at 80014E94: b .L_80014E9C
Parsed label: L_80014E98:
Parsed instruction at 80014E98: addi r31 r1 0x8
Parsed label: L_80014E9C:
Parsed instruction at 80014E9C: addi r4 r31 0x0
Parsed instruction at 80014EA0: li r5 0x4
Parsed instruction at 80014EA4: bl fn_80014B14
Parsed instruction at 80014EA8: lis r4 lbl_8001CE78@ha
Parsed instruction at 80014EAC: lwz r0 lbl_8001CE78@l(r4)
Parsed instruction at 80014EB0: cmpwi r0 0x0
Parsed instruction at 80014EB4: bne .L_80014EE0
Parsed instruction at 80014EB8: cmpwi r3 0x0
Parsed instruction at 80014EBC: bne .L_80014EE0
Parsed instruction at 80014EC0: lbz r0 0x3(r31)
Parsed instruction at 80014EC4: stb r0 0x0(r30)
Parsed instruction at 80014EC8: lbz r0 0x2(r31)
Parsed instruction at 80014ECC: stb r0 0x1(r30)
Parsed instruction at 80014ED0: lbz r0 0x1(r31)
Parsed instruction at 80014ED4: stb r0 0x2(r30)
Parsed instruction at 80014ED8: lbz r0 0x0(r31)
Parsed instruction at 80014EDC: stb r0 0x3(r30)
Parsed label: L_80014EE0:
Parsed instruction at 80014EE0: lwz r31 0x14(r1)
Parsed instruction at 80014EE4: lwz r30 0x10(r1)
Parsed instruction at 80014EE8: addi r1 r1 0x18
Parsed instruction at 80014EEC: lwz r0 0x4(r1)
Parsed instruction at 80014EF0: mtlr r0
Parsed instruction at 80014EF4: blr 
End of function: fn_80014E68, 39 instructions
Parsed function: fn_80014EF8 at 0x80014EF8
Parsed instruction at 80014EF8: mflr r0
Parsed instruction at 80014EFC: lis r5 lbl_8001CE78@ha
Parsed instruction at 80014F00: stw r0 0x4(r1)
Parsed instruction at 80014F04: stwu r1 -0x18(r1)
Parsed instruction at 80014F08: stw r31 0x14(r1)
Parsed instruction at 80014F0C: stw r30 0x10(r1)
Parsed instruction at 80014F10: addi r30 r4 0x0
Parsed instruction at 80014F14: lwz r0 lbl_8001CE78@l(r5)
Parsed instruction at 80014F18: cmpwi r0 0x0
Parsed instruction at 80014F1C: beq .L_80014F28
Parsed instruction at 80014F20: mr r31 r30
Parsed instruction at 80014F24: b .L_80014F2C
Parsed label: L_80014F28:
Parsed instruction at 80014F28: addi r31 r1 0x8
Parsed label: L_80014F2C:
Parsed instruction at 80014F2C: addi r4 r31 0x0
Parsed instruction at 80014F30: li r5 0x8
Parsed instruction at 80014F34: bl fn_80014B14
Parsed instruction at 80014F38: lis r4 lbl_8001CE78@ha
Parsed instruction at 80014F3C: lwz r0 lbl_8001CE78@l(r4)
Parsed instruction at 80014F40: cmpwi r0 0x0
Parsed instruction at 80014F44: bne .L_80014F90
Parsed instruction at 80014F48: cmpwi r3 0x0
Parsed instruction at 80014F4C: bne .L_80014F90
Parsed instruction at 80014F50: lbz r0 0x7(r31)
Parsed instruction at 80014F54: stb r0 0x0(r30)
Parsed instruction at 80014F58: lbz r0 0x6(r31)
Parsed instruction at 80014F5C: stb r0 0x1(r30)
Parsed instruction at 80014F60: lbz r0 0x5(r31)
Parsed instruction at 80014F64: stb r0 0x2(r30)
Parsed instruction at 80014F68: lbz r0 0x4(r31)
Parsed instruction at 80014F6C: stb r0 0x3(r30)
Parsed instruction at 80014F70: lbz r0 0x3(r31)
Parsed instruction at 80014F74: stb r0 0x4(r30)
Parsed instruction at 80014F78: lbz r0 0x2(r31)
Parsed instruction at 80014F7C: stb r0 0x5(r30)
Parsed instruction at 80014F80: lbz r0 0x1(r31)
Parsed instruction at 80014F84: stb r0 0x6(r30)
Parsed instruction at 80014F88: lbz r0 0x0(r31)
Parsed instruction at 80014F8C: stb r0 0x7(r30)
Parsed label: L_80014F90:
Parsed instruction at 80014F90: lwz r31 0x14(r1)
Parsed instruction at 80014F94: lwz r30 0x10(r1)
Parsed instruction at 80014F98: addi r1 r1 0x18
Parsed instruction at 80014F9C: lwz r0 0x4(r1)
Parsed instruction at 80014FA0: mtlr r0
Parsed instruction at 80014FA4: blr 
End of function: fn_80014EF8, 47 instructions
Parsed function: fn_80014FA8 at 0x80014FA8
Parsed instruction at 80014FA8: mflr r0
Parsed instruction at 80014FAC: stw r0 0x4(r1)
Parsed instruction at 80014FB0: stwu r1 -0x18(r1)
Parsed instruction at 80014FB4: stw r31 0x14(r1)
Parsed instruction at 80014FB8: li r31 0x0
Parsed instruction at 80014FBC: stw r30 0x10(r1)
Parsed instruction at 80014FC0: addi r30 r5 0x0
Parsed instruction at 80014FC4: stw r29 0xc(r1)
Parsed instruction at 80014FC8: addi r29 r4 0x0
Parsed instruction at 80014FCC: stw r28 0x8(r1)
Parsed instruction at 80014FD0: addi r28 r3 0x0
Parsed instruction at 80014FD4: li r3 0x0
Parsed instruction at 80014FD8: b .L_80014FEC
Parsed label: L_80014FDC:
Parsed instruction at 80014FDC: addi r3 r28 0x0
Parsed instruction at 80014FE0: add r4 r29 r31
Parsed instruction at 80014FE4: bl fn_80014DC4
Parsed instruction at 80014FE8: addi r31 r31 0x1
Parsed label: L_80014FEC:
Parsed instruction at 80014FEC: cmpwi r3 0x0
Parsed instruction at 80014FF0: bne .L_80014FFC
Parsed instruction at 80014FF4: cmpw r31 r30
Parsed instruction at 80014FF8: blt .L_80014FDC
Parsed label: L_80014FFC:
Parsed instruction at 80014FFC: lwz r31 0x14(r1)
Parsed instruction at 80015000: lwz r30 0x10(r1)
Parsed instruction at 80015004: lwz r29 0xc(r1)
Parsed instruction at 80015008: lwz r28 0x8(r1)
Parsed instruction at 8001500C: addi r1 r1 0x18
Parsed instruction at 80015010: lwz r0 0x4(r1)
Parsed instruction at 80015014: mtlr r0
Parsed instruction at 80015018: blr 
End of function: fn_80014FA8, 32 instructions
Parsed function: fn_8001501C at 0x8001501C
Parsed instruction at 8001501C: mflr r0
Parsed instruction at 80015020: stw r0 0x4(r1)
Parsed instruction at 80015024: stwu r1 -0x18(r1)
Parsed instruction at 80015028: stw r31 0x14(r1)
Parsed instruction at 8001502C: stw r30 0x10(r1)
Parsed instruction at 80015030: li r30 0x0
Parsed instruction at 80015034: slwi r0 r30 2
Parsed instruction at 80015038: stw r29 0xc(r1)
Parsed instruction at 8001503C: add r31 r4 r0
Parsed instruction at 80015040: addi r29 r5 0x0
Parsed instruction at 80015044: stw r28 0x8(r1)
Parsed instruction at 80015048: addi r28 r3 0x0
Parsed instruction at 8001504C: li r3 0x0
Parsed instruction at 80015050: b .L_80015068
Parsed label: L_80015054:
Parsed instruction at 80015054: addi r3 r28 0x0
Parsed instruction at 80015058: addi r4 r31 0x0
Parsed instruction at 8001505C: bl fn_80014E68
Parsed instruction at 80015060: addi r30 r30 0x1
Parsed instruction at 80015064: addi r31 r31 0x4
Parsed label: L_80015068:
Parsed instruction at 80015068: cmpwi r3 0x0
Parsed instruction at 8001506C: bne .L_80015078
Parsed instruction at 80015070: cmpw r30 r29
Parsed instruction at 80015074: blt .L_80015054
Parsed label: L_80015078:
Parsed instruction at 80015078: lwz r31 0x14(r1)
Parsed instruction at 8001507C: lwz r30 0x10(r1)
Parsed instruction at 80015080: lwz r29 0xc(r1)
Parsed instruction at 80015084: lwz r28 0x8(r1)
Parsed instruction at 80015088: addi r1 r1 0x18
Parsed instruction at 8001508C: lwz r0 0x4(r1)
Parsed instruction at 80015090: mtlr r0
Parsed instruction at 80015094: blr 
End of function: fn_8001501C, 34 instructions
Parsed function: fn_80015098 at 0x80015098
Parsed instruction at 80015098: mflr r0
Parsed instruction at 8001509C: stw r0 0x4(r1)
Parsed instruction at 800150A0: stwu r1 -0x18(r1)
Parsed instruction at 800150A4: stw r31 0x14(r1)
Parsed instruction at 800150A8: stw r30 0x10(r1)
Parsed instruction at 800150AC: bl fn_80018A00
Parsed instruction at 800150B0: mr. r30 r3
Parsed instruction at 800150B4: ble .L_8001513C
Parsed instruction at 800150B8: addi r3 r1 0x8
Parsed instruction at 800150BC: addi r4 r1 0xc
Parsed instruction at 800150C0: bl fn_800148D0
Parsed instruction at 800150C4: cmpwi r30 0x880
Parsed instruction at 800150C8: ble .L_80015114
Parsed instruction at 800150CC: b .L_800150F8
Parsed label: L_800150D0:
Parsed instruction at 800150D0: cmpwi r30 0x880
Parsed instruction at 800150D4: ble .L_800150E0
Parsed instruction at 800150D8: li r31 0x880
Parsed instruction at 800150DC: b .L_800150E4
Parsed label: L_800150E0:
Parsed instruction at 800150E0: mr r31 r30
Parsed label: L_800150E4:
Parsed instruction at 800150E4: lwz r3 0xc(r1)
Parsed instruction at 800150E8: addi r4 r31 0x0
Parsed instruction at 800150EC: addi r3 r3 0x10
Parsed instruction at 800150F0: bl fn_80018A30
Parsed instruction at 800150F4: subf r30 r31 r30
Parsed label: L_800150F8:
Parsed instruction at 800150F8: cmpwi r30 0x0
Parsed instruction at 800150FC: bgt .L_800150D0
Parsed instruction at 80015100: lwz r3 0xc(r1)
Parsed instruction at 80015104: li r4 0xff
Parsed instruction at 80015108: li r5 0x6
Parsed instruction at 8001510C: bl fn_800153E4
Parsed instruction at 80015110: b .L_8001513C
Parsed label: L_80015114:
Parsed instruction at 80015114: lwz r3 0xc(r1)
Parsed instruction at 80015118: addi r4 r30 0x0
Parsed instruction at 8001511C: addi r3 r3 0x10
Parsed instruction at 80015120: bl fn_80018A30
Parsed instruction at 80015124: cmpwi r3 0x0
Parsed instruction at 80015128: bne .L_8001513C
Parsed instruction at 8001512C: lwz r3 0xc(r1)
Parsed instruction at 80015130: stw r30 0x8(r3)
Parsed instruction at 80015134: lwz r3 0x8(r1)
Parsed instruction at 80015138: b .L_80015150
Parsed label: L_8001513C:
Parsed instruction at 8001513C: lwz r3 0x8(r1)
Parsed instruction at 80015140: cmpwi r3 -0x1
Parsed instruction at 80015144: beq .L_8001514C
Parsed instruction at 80015148: bl fn_80014998
Parsed label: L_8001514C:
Parsed instruction at 8001514C: li r3 -0x1
Parsed label: L_80015150:
Parsed instruction at 80015150: lwz r31 0x14(r1)
Parsed instruction at 80015154: lwz r30 0x10(r1)
Parsed instruction at 80015158: addi r1 r1 0x18
Parsed instruction at 8001515C: lwz r0 0x4(r1)
Parsed instruction at 80015160: mtlr r0
Parsed instruction at 80015164: blr 
End of function: fn_80015098, 60 instructions
Parsed function: TRKGetInput at 0x80015168
Parsed instruction at 80015168: mflr r0
Parsed instruction at 8001516C: stw r0 0x4(r1)
Parsed instruction at 80015170: stwu r1 -0x18(r1)
Parsed instruction at 80015174: stw r31 0x14(r1)
Parsed instruction at 80015178: stw r30 0x10(r1)
Parsed instruction at 8001517C: bl fn_80015098
Parsed instruction at 80015180: addi r30 r3 0x0
Parsed instruction at 80015184: cmpwi r30 -0x1
Parsed instruction at 80015188: beq .L_800151CC
Parsed instruction at 8001518C: mr r3 r30
Parsed instruction at 80015190: bl fn_8001496C
Parsed instruction at 80015194: addi r31 r3 0x0
Parsed instruction at 80015198: li r4 0x0
Parsed instruction at 8001519C: bl fn_80014A40
Parsed instruction at 800151A0: addi r3 r31 0x0
Parsed instruction at 800151A4: addi r4 r1 0x8
Parsed instruction at 800151A8: bl fn_80014DC4
Parsed instruction at 800151AC: lbz r0 0x8(r1)
Parsed instruction at 800151B0: cmplwi r0 0x80
Parsed instruction at 800151B4: bge .L_800151C4
Parsed instruction at 800151B8: mr r3 r30
Parsed instruction at 800151BC: bl fn_800151E4
Parsed instruction at 800151C0: b .L_800151CC
Parsed label: L_800151C4:
Parsed instruction at 800151C4: mr r3 r30
Parsed instruction at 800151C8: bl fn_80014998
Parsed label: L_800151CC:
Parsed instruction at 800151CC: lwz r31 0x14(r1)
Parsed instruction at 800151D0: lwz r30 0x10(r1)
Parsed instruction at 800151D4: addi r1 r1 0x18
Parsed instruction at 800151D8: lwz r0 0x4(r1)
Parsed instruction at 800151DC: mtlr r0
Parsed instruction at 800151E0: blr 
End of function: TRKGetInput, 33 instructions
Parsed function: fn_800151E4 at 0x800151E4
Parsed instruction at 800151E4: mflr r0
Parsed instruction at 800151E8: li r4 0x2
Parsed instruction at 800151EC: stw r0 0x4(r1)
Parsed instruction at 800151F0: stwu r1 -0x18(r1)
Parsed instruction at 800151F4: stw r31 0x14(r1)
Parsed instruction at 800151F8: addi r31 r3 0x0
Parsed instruction at 800151FC: addi r3 r1 0x8
Parsed instruction at 80015200: bl fn_80014658
Parsed instruction at 80015204: lis r3 lbl_8001E830@ha
Parsed instruction at 80015208: stw r31 0x10(r1)
Parsed instruction at 8001520C: addi r4 r3 lbl_8001E830@l
Parsed instruction at 80015210: addi r3 r1 0x8
Parsed instruction at 80015214: li r0 -0x1
Parsed instruction at 80015218: stw r0 0x0(r4)
Parsed instruction at 8001521C: bl fn_80014578
Parsed instruction at 80015220: lwz r31 0x14(r1)
Parsed instruction at 80015224: addi r1 r1 0x18
Parsed instruction at 80015228: lwz r0 0x4(r1)
Parsed instruction at 8001522C: mtlr r0
Parsed instruction at 80015230: blr 
End of function: fn_800151E4, 20 instructions
Parsed function: TRKInitializeSerialHandler at 0x80015234
Parsed instruction at 80015234: lis r3 lbl_8001E830@ha
Parsed instruction at 80015238: addi r4 r3 lbl_8001E830@l
Parsed instruction at 8001523C: li r0 -0x1
Parsed instruction at 80015240: stw r0 0x0(r4)
Parsed instruction at 80015244: li r0 0x0
Parsed instruction at 80015248: li r3 0x0
Parsed instruction at 8001524C: stb r0 0x8(r4)
Parsed instruction at 80015250: stw r0 0xc(r4)
Parsed instruction at 80015254: blr 
End of function: TRKInitializeSerialHandler, 9 instructions
Parsed function: fn_80015258 at 0x80015258
Parsed instruction at 80015258: li r3 0x0
Parsed instruction at 8001525C: blr 
End of function: fn_80015258, 2 instructions
Parsed function: usr_put_initialize at 0x80015260
Parsed instruction at 80015260: blr 
End of function: usr_put_initialize, 1 instructions
Parsed function: TRKInitializeDispatcher at 0x80015264
Parsed instruction at 80015264: lis r3 lbl_8001E848@ha
Parsed instruction at 80015268: li r0 0x20
Parsed instruction at 8001526C: stw r0 lbl_8001E848@l(r3)
Parsed instruction at 80015270: li r3 0x0
Parsed instruction at 80015274: blr 
End of function: TRKInitializeDispatcher, 5 instructions
Parsed function: fn_80015278 at 0x80015278
Parsed instruction at 80015278: mflr r0
Parsed instruction at 8001527C: li r4 0x0
Parsed instruction at 80015280: stw r0 0x4(r1)
Parsed instruction at 80015284: stwu r1 -0x18(r1)
Parsed instruction at 80015288: stw r31 0x14(r1)
Parsed instruction at 8001528C: li r31 0x500
Parsed instruction at 80015290: stw r30 0x10(r1)
Parsed instruction at 80015294: addi r30 r3 0x0
Parsed instruction at 80015298: bl fn_80014A40
Parsed instruction at 8001529C: addi r3 r30 0x0
Parsed instruction at 800152A0: addi r4 r1 0x8
Parsed instruction at 800152A4: bl fn_80014DC4
Parsed instruction at 800152A8: lis r3 lbl_8001E848@ha
Parsed instruction at 800152AC: lbz r4 0x8(r1)
Parsed instruction at 800152B0: lwz r0 lbl_8001E848@l(r3)
Parsed instruction at 800152B4: cmplw r4 r0
Parsed instruction at 800152B8: bge .L_800152E0
Parsed instruction at 800152BC: lis r3 lbl_8001B9D8@ha
Parsed instruction at 800152C0: slwi r4 r4 2
Parsed instruction at 800152C4: addi r0 r3 lbl_8001B9D8@l
Parsed instruction at 800152C8: add r3 r0 r4
Parsed instruction at 800152CC: lwz r12 0x0(r3)
Parsed instruction at 800152D0: addi r3 r30 0x0
Parsed instruction at 800152D4: mtlr r12
Parsed instruction at 800152D8: blrl 
Parsed instruction at 800152DC: mr r31 r3
Parsed label: L_800152E0:
Parsed instruction at 800152E0: mr r3 r31
Parsed instruction at 800152E4: lwz r31 0x14(r1)
Parsed instruction at 800152E8: lwz r30 0x10(r1)
Parsed instruction at 800152EC: addi r1 r1 0x18
Parsed instruction at 800152F0: lwz r0 0x4(r1)
Parsed instruction at 800152F4: mtlr r0
Parsed instruction at 800152F8: blr 
End of function: fn_80015278, 34 instructions
Parsed function: fn_800152FC at 0x800152FC
Parsed instruction at 800152FC: mflr r0
Parsed instruction at 80015300: stw r0 0x4(r1)
Parsed instruction at 80015304: stwu r1 -0x18(r1)
Parsed instruction at 80015308: stw r31 0x14(r1)
Parsed instruction at 8001530C: addi r31 r5 0x0
Parsed instruction at 80015310: stw r30 0x10(r1)
Parsed instruction at 80015314: addi r30 r4 0x0
Parsed instruction at 80015318: li r4 0x1
Parsed instruction at 8001531C: stw r29 0xc(r1)
Parsed instruction at 80015320: addi r29 r3 0x0
Parsed instruction at 80015324: bl fn_80014A00
Parsed instruction at 80015328: lwz r3 0xc(r29)
Parsed instruction at 8001532C: cmplwi r3 0x880
Parsed instruction at 80015330: bge .L_80015350
Parsed instruction at 80015334: addi r0 r3 0x1
Parsed instruction at 80015338: add r3 r29 r3
Parsed instruction at 8001533C: stw r0 0xc(r29)
Parsed instruction at 80015340: stb r30 0x10(r3)
Parsed instruction at 80015344: lwz r3 0x8(r29)
Parsed instruction at 80015348: addi r0 r3 0x1
Parsed instruction at 8001534C: stw r0 0x8(r29)
Parsed label: L_80015350:
Parsed instruction at 80015350: lwz r3 0xc(r29)
Parsed instruction at 80015354: cmplwi r3 0x880
Parsed instruction at 80015358: bge .L_80015378
Parsed instruction at 8001535C: addi r0 r3 0x1
Parsed instruction at 80015360: add r3 r29 r3
Parsed instruction at 80015364: stw r0 0xc(r29)
Parsed instruction at 80015368: stb r31 0x10(r3)
Parsed instruction at 8001536C: lwz r3 0x8(r29)
Parsed instruction at 80015370: addi r0 r3 0x1
Parsed instruction at 80015374: stw r0 0x8(r29)
Parsed label: L_80015378:
Parsed instruction at 80015378: lwz r31 0x14(r1)
Parsed instruction at 8001537C: lwz r30 0x10(r1)
Parsed instruction at 80015380: lwz r29 0xc(r1)
Parsed instruction at 80015384: addi r1 r1 0x18
Parsed instruction at 80015388: lwz r0 0x4(r1)
Parsed instruction at 8001538C: mtlr r0
Parsed instruction at 80015390: blr 
End of function: fn_800152FC, 40 instructions
Parsed function: fn_80015394 at 0x80015394
Parsed instruction at 80015394: mflr r0
Parsed instruction at 80015398: stw r0 0x4(r1)
Parsed instruction at 8001539C: stwu r1 -0x10(r1)
Parsed instruction at 800153A0: stw r31 0xc(r1)
Parsed instruction at 800153A4: li r31 0x3
Parsed instruction at 800153A8: stw r30 0x8(r1)
Parsed instruction at 800153AC: addi r30 r3 0x0
Parsed label: L_800153B0:
Parsed instruction at 800153B0: mr r3 r30
Parsed instruction at 800153B4: bl fn_80014828
Parsed instruction at 800153B8: cmpwi r3 0x0
Parsed instruction at 800153BC: subi r31 r31 0x1
Parsed instruction at 800153C0: beq .L_800153CC
Parsed instruction at 800153C4: cmpwi r31 0x0
Parsed instruction at 800153C8: bgt .L_800153B0
Parsed label: L_800153CC:
Parsed instruction at 800153CC: lwz r31 0xc(r1)
Parsed instruction at 800153D0: lwz r30 0x8(r1)
Parsed instruction at 800153D4: addi r1 r1 0x10
Parsed instruction at 800153D8: lwz r0 0x4(r1)
Parsed instruction at 800153DC: mtlr r0
Parsed instruction at 800153E0: blr 
End of function: fn_80015394, 22 instructions
Parsed function: fn_800153E4 at 0x800153E4
Parsed instruction at 800153E4: mflr r0
Parsed instruction at 800153E8: stw r0 0x4(r1)
Parsed instruction at 800153EC: stwu r1 -0x10(r1)
Parsed instruction at 800153F0: stw r31 0xc(r1)
Parsed instruction at 800153F4: mr r31 r3
Parsed instruction at 800153F8: bl fn_800152FC
Parsed instruction at 800153FC: mr r3 r31
Parsed instruction at 80015400: bl fn_80015394
Parsed instruction at 80015404: lwz r31 0xc(r1)
Parsed instruction at 80015408: addi r1 r1 0x10
Parsed instruction at 8001540C: lwz r0 0x4(r1)
Parsed instruction at 80015410: mtlr r0
Parsed instruction at 80015414: blr 
End of function: fn_800153E4, 13 instructions
Parsed function: fn_80015418 at 0x80015418
Parsed instruction at 80015418: mflr r0
Parsed instruction at 8001541C: li r4 0x80
Parsed instruction at 80015420: stw r0 0x4(r1)
Parsed instruction at 80015424: li r5 0x10
Parsed instruction at 80015428: stwu r1 -0x8(r1)
Parsed instruction at 8001542C: bl fn_800153E4
Parsed instruction at 80015430: addi r1 r1 0x8
Parsed instruction at 80015434: lwz r0 0x4(r1)
Parsed instruction at 80015438: mtlr r0
Parsed instruction at 8001543C: blr 
End of function: fn_80015418, 10 instructions
Parsed function: fn_80015440 at 0x80015440
Parsed instruction at 80015440: mflr r0
Parsed instruction at 80015444: li r4 0x80
Parsed instruction at 80015448: stw r0 0x4(r1)
Parsed instruction at 8001544C: li r5 0x0
Parsed instruction at 80015450: stwu r1 -0x8(r1)
Parsed instruction at 80015454: bl fn_800153E4
Parsed instruction at 80015458: addi r1 r1 0x8
Parsed instruction at 8001545C: lwz r0 0x4(r1)
Parsed instruction at 80015460: mtlr r0
Parsed instruction at 80015464: blr 
End of function: fn_80015440, 10 instructions
Parsed function: fn_80015468 at 0x80015468
Parsed instruction at 80015468: mflr r0
Parsed instruction at 8001546C: li r4 0x80
Parsed instruction at 80015470: stw r0 0x4(r1)
Parsed instruction at 80015474: li r5 0x0
Parsed instruction at 80015478: stwu r1 -0x18(r1)
Parsed instruction at 8001547C: stw r31 0x14(r1)
Parsed instruction at 80015480: bl fn_800153E4
Parsed instruction at 80015484: mr. r31 r3
Parsed instruction at 80015488: bne .L_800154A0
Parsed instruction at 8001548C: addi r3 r1 0x8
Parsed instruction at 80015490: li r4 0x1
Parsed instruction at 80015494: bl fn_80014658
Parsed instruction at 80015498: addi r3 r1 0x8
Parsed instruction at 8001549C: bl fn_80014578
Parsed label: L_800154A0:
Parsed instruction at 800154A0: mr r3 r31
Parsed instruction at 800154A4: lwz r31 0x14(r1)
Parsed instruction at 800154A8: addi r1 r1 0x18
Parsed instruction at 800154AC: lwz r0 0x4(r1)
Parsed instruction at 800154B0: mtlr r0
Parsed instruction at 800154B4: blr 
End of function: fn_80015468, 21 instructions
Parsed function: fn_800154B8 at 0x800154B8
Parsed instruction at 800154B8: mflr r0
Parsed instruction at 800154BC: li r4 0x80
Parsed instruction at 800154C0: stw r0 0x4(r1)
Parsed instruction at 800154C4: li r5 0x0
Parsed instruction at 800154C8: stwu r1 -0x8(r1)
Parsed instruction at 800154CC: bl fn_800153E4
Parsed instruction at 800154D0: bl fn_80005450
Parsed instruction at 800154D4: li r3 0x0
Parsed instruction at 800154D8: addi r1 r1 0x8
Parsed instruction at 800154DC: lwz r0 0x4(r1)
Parsed instruction at 800154E0: mtlr r0
Parsed instruction at 800154E4: blr 
End of function: fn_800154B8, 12 instructions
Parsed function: fn_800154E8 at 0x800154E8
Parsed instruction at 800154E8: mflr r0
Parsed instruction at 800154EC: stw r0 0x4(r1)
Parsed instruction at 800154F0: stwu r1 -0x10(r1)
Parsed instruction at 800154F4: stw r31 0xc(r1)
Parsed instruction at 800154F8: mr r31 r3
Parsed instruction at 800154FC: lwz r0 0x8(r3)
Parsed instruction at 80015500: cmplwi r0 0x1
Parsed instruction at 80015504: beq .L_8001551C
Parsed instruction at 80015508: addi r3 r31 0x0
Parsed instruction at 8001550C: li r4 0x80
Parsed instruction at 80015510: li r5 0x2
Parsed instruction at 80015514: bl fn_800153E4
Parsed instruction at 80015518: b .L_80015658
Parsed label: L_8001551C:
Parsed instruction at 8001551C: addi r3 r31 0x0
Parsed instruction at 80015520: li r4 0x80
Parsed instruction at 80015524: li r5 0x0
Parsed instruction at 80015528: bl fn_800152FC
Parsed instruction at 8001552C: addi r3 r1 0x8
Parsed instruction at 80015530: bl fn_80017474
Parsed instruction at 80015534: cmpwi r3 0x0
Parsed instruction at 80015538: bne .L_80015574
Parsed instruction at 8001553C: lwz r3 0xc(r31)
Parsed instruction at 80015540: lbz r5 0x8(r1)
Parsed instruction at 80015544: cmplwi r3 0x880
Parsed instruction at 80015548: blt .L_80015554
Parsed instruction at 8001554C: li r3 0x301
Parsed instruction at 80015550: b .L_80015574
Parsed label: L_80015554:
Parsed instruction at 80015554: addi r0 r3 0x1
Parsed instruction at 80015558: add r4 r31 r3
Parsed instruction at 8001555C: stw r0 0xc(r31)
Parsed instruction at 80015560: li r3 0x0
Parsed instruction at 80015564: stb r5 0x10(r4)
Parsed instruction at 80015568: lwz r4 0x8(r31)
Parsed instruction at 8001556C: addi r0 r4 0x1
Parsed instruction at 80015570: stw r0 0x8(r31)
Parsed label: L_80015574:
Parsed instruction at 80015574: cmpwi r3 0x0
Parsed instruction at 80015578: bne .L_800155B4
Parsed instruction at 8001557C: lwz r3 0xc(r31)
Parsed instruction at 80015580: lbz r5 0x9(r1)
Parsed instruction at 80015584: cmplwi r3 0x880
Parsed instruction at 80015588: blt .L_80015594
Parsed instruction at 8001558C: li r3 0x301
Parsed instruction at 80015590: b .L_800155B4
Parsed label: L_80015594:
Parsed instruction at 80015594: addi r0 r3 0x1
Parsed instruction at 80015598: add r4 r31 r3
Parsed instruction at 8001559C: stw r0 0xc(r31)
Parsed instruction at 800155A0: li r3 0x0
Parsed instruction at 800155A4: stb r5 0x10(r4)
Parsed instruction at 800155A8: lwz r4 0x8(r31)
Parsed instruction at 800155AC: addi r0 r4 0x1
Parsed instruction at 800155B0: stw r0 0x8(r31)
Parsed label: L_800155B4:
Parsed instruction at 800155B4: cmpwi r3 0x0
Parsed instruction at 800155B8: bne .L_800155F4
Parsed instruction at 800155BC: lwz r3 0xc(r31)
Parsed instruction at 800155C0: lbz r5 0xa(r1)
Parsed instruction at 800155C4: cmplwi r3 0x880
Parsed instruction at 800155C8: blt .L_800155D4
Parsed instruction at 800155CC: li r3 0x301
Parsed instruction at 800155D0: b .L_800155F4
Parsed label: L_800155D4:
Parsed instruction at 800155D4: addi r0 r3 0x1
Parsed instruction at 800155D8: add r4 r31 r3
Parsed instruction at 800155DC: stw r0 0xc(r31)
Parsed instruction at 800155E0: li r3 0x0
Parsed instruction at 800155E4: stb r5 0x10(r4)
Parsed instruction at 800155E8: lwz r4 0x8(r31)
Parsed instruction at 800155EC: addi r0 r4 0x1
Parsed instruction at 800155F0: stw r0 0x8(r31)
Parsed label: L_800155F4:
Parsed instruction at 800155F4: cmpwi r3 0x0
Parsed instruction at 800155F8: bne .L_80015634
Parsed instruction at 800155FC: lwz r3 0xc(r31)
Parsed instruction at 80015600: lbz r5 0xb(r1)
Parsed instruction at 80015604: cmplwi r3 0x880
Parsed instruction at 80015608: blt .L_80015614
Parsed instruction at 8001560C: li r3 0x301
Parsed instruction at 80015610: b .L_80015634
Parsed label: L_80015614:
Parsed instruction at 80015614: addi r0 r3 0x1
Parsed instruction at 80015618: add r4 r31 r3
Parsed instruction at 8001561C: stw r0 0xc(r31)
Parsed instruction at 80015620: li r3 0x0
Parsed instruction at 80015624: stb r5 0x10(r4)
Parsed instruction at 80015628: lwz r4 0x8(r31)
Parsed instruction at 8001562C: addi r0 r4 0x1
Parsed instruction at 80015630: stw r0 0x8(r31)
Parsed label: L_80015634:
Parsed instruction at 80015634: cmpwi r3 0x0
Parsed instruction at 80015638: beq .L_80015650
Parsed instruction at 8001563C: addi r3 r31 0x0
Parsed instruction at 80015640: li r4 0x80
Parsed instruction at 80015644: li r5 0x3
Parsed instruction at 80015648: bl fn_800153E4
Parsed instruction at 8001564C: b .L_80015658
Parsed label: L_80015650:
Parsed instruction at 80015650: mr r3 r31
Parsed instruction at 80015654: bl fn_80015394
Parsed label: L_80015658:
Parsed instruction at 80015658: lwz r31 0xc(r1)
Parsed instruction at 8001565C: addi r1 r1 0x10
Parsed instruction at 80015660: lwz r0 0x4(r1)
Parsed instruction at 80015664: mtlr r0
Parsed instruction at 80015668: blr 
End of function: fn_800154E8, 108 instructions
Parsed function: fn_8001566C at 0x8001566C
Parsed instruction at 8001566C: mflr r0
Parsed instruction at 80015670: stw r0 0x4(r1)
Parsed instruction at 80015674: stwu r1 -0x30(r1)
Parsed instruction at 80015678: stw r31 0x2c(r1)
Parsed instruction at 8001567C: mr r31 r3
Parsed instruction at 80015680: lwz r0 0x8(r3)
Parsed instruction at 80015684: cmplwi r0 0x1
Parsed instruction at 80015688: beq .L_800156A0
Parsed instruction at 8001568C: addi r3 r31 0x0
Parsed instruction at 80015690: li r4 0x80
Parsed instruction at 80015694: li r5 0x2
Parsed instruction at 80015698: bl fn_800153E4
Parsed instruction at 8001569C: b .L_80015734
Parsed label: L_800156A0:
Parsed instruction at 800156A0: addi r3 r31 0x0
Parsed instruction at 800156A4: li r4 0x80
Parsed instruction at 800156A8: li r5 0x0
Parsed instruction at 800156AC: bl fn_800152FC
Parsed instruction at 800156B0: addi r3 r1 0x8
Parsed instruction at 800156B4: bl fn_8001749C
Parsed instruction at 800156B8: cmpwi r3 0x0
Parsed instruction at 800156BC: bne .L_800156D0
Parsed instruction at 800156C0: addi r3 r31 0x0
Parsed instruction at 800156C4: addi r4 r1 0x8
Parsed instruction at 800156C8: li r5 0x20
Parsed instruction at 800156CC: bl fn_80014A70
Parsed label: L_800156D0:
Parsed instruction at 800156D0: cmpwi r3 0x0
Parsed instruction at 800156D4: bne .L_80015710
Parsed instruction at 800156D8: lwz r3 0xc(r31)
Parsed instruction at 800156DC: cmplwi r3 0x880
Parsed instruction at 800156E0: blt .L_800156EC
Parsed instruction at 800156E4: li r3 0x301
Parsed instruction at 800156E8: b .L_80015710
Parsed label: L_800156EC:
Parsed instruction at 800156EC: addi r0 r3 0x1
Parsed instruction at 800156F0: add r4 r31 r3
Parsed instruction at 800156F4: stw r0 0xc(r31)
Parsed instruction at 800156F8: li r0 0x2
Parsed instruction at 800156FC: li r3 0x0
Parsed instruction at 80015700: stb r0 0x10(r4)
Parsed instruction at 80015704: lwz r4 0x8(r31)
Parsed instruction at 80015708: addi r0 r4 0x1
Parsed instruction at 8001570C: stw r0 0x8(r31)
Parsed label: L_80015710:
Parsed instruction at 80015710: cmpwi r3 0x0
Parsed instruction at 80015714: beq .L_8001572C
Parsed instruction at 80015718: addi r3 r31 0x0
Parsed instruction at 8001571C: li r4 0x80
Parsed instruction at 80015720: li r5 0x3
Parsed instruction at 80015724: bl fn_800153E4
Parsed instruction at 80015728: b .L_80015734
Parsed label: L_8001572C:
Parsed instruction at 8001572C: mr r3 r31
Parsed instruction at 80015730: bl fn_80015394
Parsed label: L_80015734:
Parsed instruction at 80015734: lwz r31 0x2c(r1)
Parsed instruction at 80015738: addi r1 r1 0x30
Parsed instruction at 8001573C: lwz r0 0x4(r1)
Parsed instruction at 80015740: mtlr r0
Parsed instruction at 80015744: blr 
End of function: fn_8001566C, 61 instructions
Parsed function: fn_80015748 at 0x80015748
Parsed instruction at 80015748: mflr r0
Parsed instruction at 8001574C: stw r0 0x4(r1)
Parsed instruction at 80015750: stwu r1 -0x18(r1)
Parsed instruction at 80015754: stw r31 0x14(r1)
Parsed instruction at 80015758: mr r31 r3
Parsed instruction at 8001575C: lwz r0 0x8(r3)
Parsed instruction at 80015760: cmplwi r0 0x1
Parsed instruction at 80015764: beq .L_8001577C
Parsed instruction at 80015768: addi r3 r31 0x0
Parsed instruction at 8001576C: li r4 0x80
Parsed instruction at 80015770: li r5 0x2
Parsed instruction at 80015774: bl fn_800153E4
Parsed instruction at 80015778: b .L_80015978
Parsed label: L_8001577C:
Parsed instruction at 8001577C: addi r3 r31 0x0
Parsed instruction at 80015780: li r4 0x80
Parsed instruction at 80015784: li r5 0x0
Parsed instruction at 80015788: bl fn_800152FC
Parsed instruction at 8001578C: addi r3 r1 0x8
Parsed instruction at 80015790: bl fn_80017540
Parsed instruction at 80015794: cmpwi r3 0x0
Parsed instruction at 80015798: bne .L_800157D4
Parsed instruction at 8001579C: lwz r3 0xc(r31)
Parsed instruction at 800157A0: lbz r5 0x8(r1)
Parsed instruction at 800157A4: cmplwi r3 0x880
Parsed instruction at 800157A8: blt .L_800157B4
Parsed instruction at 800157AC: li r3 0x301
Parsed instruction at 800157B0: b .L_800157D4
Parsed label: L_800157B4:
Parsed instruction at 800157B4: addi r0 r3 0x1
Parsed instruction at 800157B8: add r4 r31 r3
Parsed instruction at 800157BC: stw r0 0xc(r31)
Parsed instruction at 800157C0: li r3 0x0
Parsed instruction at 800157C4: stb r5 0x10(r4)
Parsed instruction at 800157C8: lwz r4 0x8(r31)
Parsed instruction at 800157CC: addi r0 r4 0x1
Parsed instruction at 800157D0: stw r0 0x8(r31)
Parsed label: L_800157D4:
Parsed instruction at 800157D4: cmpwi r3 0x0
Parsed instruction at 800157D8: bne .L_80015814
Parsed instruction at 800157DC: lwz r3 0xc(r31)
Parsed instruction at 800157E0: lbz r5 0x9(r1)
Parsed instruction at 800157E4: cmplwi r3 0x880
Parsed instruction at 800157E8: blt .L_800157F4
Parsed instruction at 800157EC: li r3 0x301
Parsed instruction at 800157F0: b .L_80015814
Parsed label: L_800157F4:
Parsed instruction at 800157F4: addi r0 r3 0x1
Parsed instruction at 800157F8: add r4 r31 r3
Parsed instruction at 800157FC: stw r0 0xc(r31)
Parsed instruction at 80015800: li r3 0x0
Parsed instruction at 80015804: stb r5 0x10(r4)
Parsed instruction at 80015808: lwz r4 0x8(r31)
Parsed instruction at 8001580C: addi r0 r4 0x1
Parsed instruction at 80015810: stw r0 0x8(r31)
Parsed label: L_80015814:
Parsed instruction at 80015814: cmpwi r3 0x0
Parsed instruction at 80015818: bne .L_80015854
Parsed instruction at 8001581C: lwz r3 0xc(r31)
Parsed instruction at 80015820: lbz r5 0xa(r1)
Parsed instruction at 80015824: cmplwi r3 0x880
Parsed instruction at 80015828: blt .L_80015834
Parsed instruction at 8001582C: li r3 0x301
Parsed instruction at 80015830: b .L_80015854
Parsed label: L_80015834:
Parsed instruction at 80015834: addi r0 r3 0x1
Parsed instruction at 80015838: add r4 r31 r3
Parsed instruction at 8001583C: stw r0 0xc(r31)
Parsed instruction at 80015840: li r3 0x0
Parsed instruction at 80015844: stb r5 0x10(r4)
Parsed instruction at 80015848: lwz r4 0x8(r31)
Parsed instruction at 8001584C: addi r0 r4 0x1
Parsed instruction at 80015850: stw r0 0x8(r31)
Parsed label: L_80015854:
Parsed instruction at 80015854: cmpwi r3 0x0
Parsed instruction at 80015858: bne .L_80015894
Parsed instruction at 8001585C: lwz r3 0xc(r31)
Parsed instruction at 80015860: lbz r5 0xb(r1)
Parsed instruction at 80015864: cmplwi r3 0x880
Parsed instruction at 80015868: blt .L_80015874
Parsed instruction at 8001586C: li r3 0x301
Parsed instruction at 80015870: b .L_80015894
Parsed label: L_80015874:
Parsed instruction at 80015874: addi r0 r3 0x1
Parsed instruction at 80015878: add r4 r31 r3
Parsed instruction at 8001587C: stw r0 0xc(r31)
Parsed instruction at 80015880: li r3 0x0
Parsed instruction at 80015884: stb r5 0x10(r4)
Parsed instruction at 80015888: lwz r4 0x8(r31)
Parsed instruction at 8001588C: addi r0 r4 0x1
Parsed instruction at 80015890: stw r0 0x8(r31)
Parsed label: L_80015894:
Parsed instruction at 80015894: cmpwi r3 0x0
Parsed instruction at 80015898: bne .L_800158D4
Parsed instruction at 8001589C: lwz r3 0xc(r31)
Parsed instruction at 800158A0: lbz r5 0xc(r1)
Parsed instruction at 800158A4: cmplwi r3 0x880
Parsed instruction at 800158A8: blt .L_800158B4
Parsed instruction at 800158AC: li r3 0x301
Parsed instruction at 800158B0: b .L_800158D4
Parsed label: L_800158B4:
Parsed instruction at 800158B4: addi r0 r3 0x1
Parsed instruction at 800158B8: add r4 r31 r3
Parsed instruction at 800158BC: stw r0 0xc(r31)
Parsed instruction at 800158C0: li r3 0x0
Parsed instruction at 800158C4: stb r5 0x10(r4)
Parsed instruction at 800158C8: lwz r4 0x8(r31)
Parsed instruction at 800158CC: addi r0 r4 0x1
Parsed instruction at 800158D0: stw r0 0x8(r31)
Parsed label: L_800158D4:
Parsed instruction at 800158D4: cmpwi r3 0x0
Parsed instruction at 800158D8: bne .L_80015914
Parsed instruction at 800158DC: lwz r3 0xc(r31)
Parsed instruction at 800158E0: lbz r5 0xd(r1)
Parsed instruction at 800158E4: cmplwi r3 0x880
Parsed instruction at 800158E8: blt .L_800158F4
Parsed instruction at 800158EC: li r3 0x301
Parsed instruction at 800158F0: b .L_80015914
Parsed label: L_800158F4:
Parsed instruction at 800158F4: addi r0 r3 0x1
Parsed instruction at 800158F8: add r4 r31 r3
Parsed instruction at 800158FC: stw r0 0xc(r31)
Parsed instruction at 80015900: li r3 0x0
Parsed instruction at 80015904: stb r5 0x10(r4)
Parsed instruction at 80015908: lwz r4 0x8(r31)
Parsed instruction at 8001590C: addi r0 r4 0x1
Parsed instruction at 80015910: stw r0 0x8(r31)
Parsed label: L_80015914:
Parsed instruction at 80015914: cmpwi r3 0x0
Parsed instruction at 80015918: bne .L_80015954
Parsed instruction at 8001591C: lwz r3 0xc(r31)
Parsed instruction at 80015920: lbz r5 0xe(r1)
Parsed instruction at 80015924: cmplwi r3 0x880
Parsed instruction at 80015928: blt .L_80015934
Parsed instruction at 8001592C: li r3 0x301
Parsed instruction at 80015930: b .L_80015954
Parsed label: L_80015934:
Parsed instruction at 80015934: addi r0 r3 0x1
Parsed instruction at 80015938: add r4 r31 r3
Parsed instruction at 8001593C: stw r0 0xc(r31)
Parsed instruction at 80015940: li r3 0x0
Parsed instruction at 80015944: stb r5 0x10(r4)
Parsed instruction at 80015948: lwz r4 0x8(r31)
Parsed instruction at 8001594C: addi r0 r4 0x1
Parsed instruction at 80015950: stw r0 0x8(r31)
Parsed label: L_80015954:
Parsed instruction at 80015954: cmpwi r3 0x0
Parsed instruction at 80015958: beq .L_80015970
Parsed instruction at 8001595C: addi r3 r31 0x0
Parsed instruction at 80015960: li r4 0x80
Parsed instruction at 80015964: li r5 0x3
Parsed instruction at 80015968: bl fn_800153E4
Parsed instruction at 8001596C: b .L_80015978
Parsed label: L_80015970:
Parsed instruction at 80015970: mr r3 r31
Parsed instruction at 80015974: bl fn_80015394
Parsed label: L_80015978:
Parsed instruction at 80015978: lwz r31 0x14(r1)
Parsed instruction at 8001597C: addi r1 r1 0x18
Parsed instruction at 80015980: lwz r0 0x4(r1)
Parsed instruction at 80015984: mtlr r0
Parsed instruction at 80015988: blr 
End of function: fn_80015748, 162 instructions
Parsed function: fn_8001598C at 0x8001598C
Parsed instruction at 8001598C: mflr r0
Parsed instruction at 80015990: stw r0 0x4(r1)
Parsed instruction at 80015994: stwu r1 -0x820(r1)
Parsed instruction at 80015998: stw r31 0x81c(r1)
Parsed instruction at 8001599C: mr r31 r3
Parsed instruction at 800159A0: stw r30 0x818(r1)
Parsed instruction at 800159A4: lwz r0 0x8(r3)
Parsed instruction at 800159A8: cmplwi r0 0x8
Parsed instruction at 800159AC: beq .L_800159C4
Parsed instruction at 800159B0: addi r3 r31 0x0
Parsed instruction at 800159B4: li r4 0x80
Parsed instruction at 800159B8: li r5 0x2
Parsed instruction at 800159BC: bl fn_800153E4
Parsed instruction at 800159C0: b .L_80015B5C
Parsed label: L_800159C4:
Parsed instruction at 800159C4: addi r3 r31 0x0
Parsed instruction at 800159C8: li r4 0x0
Parsed instruction at 800159CC: bl fn_80014A40
Parsed instruction at 800159D0: addi r3 r31 0x0
Parsed instruction at 800159D4: addi r4 r1 0x8
Parsed instruction at 800159D8: bl fn_80014DC4
Parsed instruction at 800159DC: mr. r30 r3
Parsed instruction at 800159E0: bne .L_800159F4
Parsed instruction at 800159E4: addi r3 r31 0x0
Parsed instruction at 800159E8: addi r4 r1 0x9
Parsed instruction at 800159EC: bl fn_80014DC4
Parsed instruction at 800159F0: mr r30 r3
Parsed label: L_800159F4:
Parsed instruction at 800159F4: cmpwi r30 0x0
Parsed instruction at 800159F8: bne .L_80015A0C
Parsed instruction at 800159FC: addi r3 r31 0x0
Parsed instruction at 80015A00: addi r4 r1 0xa
Parsed instruction at 80015A04: bl fn_80014DE8
Parsed instruction at 80015A08: mr r30 r3
Parsed label: L_80015A0C:
Parsed instruction at 80015A0C: cmpwi r30 0x0
Parsed instruction at 80015A10: bne .L_80015A24
Parsed instruction at 80015A14: addi r3 r31 0x0
Parsed instruction at 80015A18: addi r4 r1 0xc
Parsed instruction at 80015A1C: bl fn_80014E68
Parsed instruction at 80015A20: mr r30 r3
Parsed label: L_80015A24:
Parsed instruction at 80015A24: lbz r0 0x9(r1)
Parsed instruction at 80015A28: rlwinm. r0 r0 0 30 30
Parsed instruction at 80015A2C: beq .L_80015A44
Parsed instruction at 80015A30: addi r3 r31 0x0
Parsed instruction at 80015A34: li r4 0x80
Parsed instruction at 80015A38: li r5 0x12
Parsed instruction at 80015A3C: bl fn_800153E4
Parsed instruction at 80015A40: b .L_80015B5C
Parsed label: L_80015A44:
Parsed instruction at 80015A44: lhz r0 0xa(r1)
Parsed instruction at 80015A48: cmplwi r0 0x800
Parsed instruction at 80015A4C: ble .L_80015A64
Parsed instruction at 80015A50: addi r3 r31 0x0
Parsed instruction at 80015A54: li r4 0x80
Parsed instruction at 80015A58: li r5 0x11
Parsed instruction at 80015A5C: bl fn_800153E4
Parsed instruction at 80015A60: b .L_80015B5C
Parsed label: L_80015A64:
Parsed instruction at 80015A64: addi r3 r31 0x0
Parsed instruction at 80015A68: li r4 0x80
Parsed instruction at 80015A6C: li r5 0x0
Parsed instruction at 80015A70: bl fn_800152FC
Parsed instruction at 80015A74: cmpwi r30 0x0
Parsed instruction at 80015A78: bne .L_80015AEC
Parsed instruction at 80015A7C: lbz r0 0x9(r1)
Parsed instruction at 80015A80: lhz r3 0xa(r1)
Parsed instruction at 80015A84: rlwinm. r0 r0 0 28 28
Parsed instruction at 80015A88: stw r3 0x10(r1)
Parsed instruction at 80015A8C: beq .L_80015A98
Parsed instruction at 80015A90: li r6 0x0
Parsed instruction at 80015A94: b .L_80015A9C
Parsed label: L_80015A98:
Parsed instruction at 80015A98: li r6 0x1
Parsed label: L_80015A9C:
Parsed instruction at 80015A9C: lwz r4 0xc(r1)
Parsed instruction at 80015AA0: addi r3 r1 0x14
Parsed instruction at 80015AA4: addi r5 r1 0x10
Parsed instruction at 80015AA8: li r7 0x1
Parsed instruction at 80015AAC: bl fn_80016D8C
Parsed instruction at 80015AB0: lwz r0 0x10(r1)
Parsed instruction at 80015AB4: mr. r30 r3
Parsed instruction at 80015AB8: sth r0 0xa(r1)
Parsed instruction at 80015ABC: bne .L_80015AD0
Parsed instruction at 80015AC0: mr r3 r31
Parsed instruction at 80015AC4: lhz r4 0xa(r1)
Parsed instruction at 80015AC8: bl fn_80014BA0
Parsed instruction at 80015ACC: mr r30 r3
Parsed label: L_80015AD0:
Parsed instruction at 80015AD0: cmpwi r30 0x0
Parsed instruction at 80015AD4: bne .L_80015AEC
Parsed instruction at 80015AD8: lwz r5 0x10(r1)
Parsed instruction at 80015ADC: addi r3 r31 0x0
Parsed instruction at 80015AE0: addi r4 r1 0x14
Parsed instruction at 80015AE4: bl fn_80014A70
Parsed instruction at 80015AE8: mr r30 r3
Parsed label: L_80015AEC:
Parsed instruction at 80015AEC: cmpwi r30 0x0
Parsed instruction at 80015AF0: beq .L_80015B54
Parsed instruction at 80015AF4: subi r0 r30 0x700
Parsed instruction at 80015AF8: cmplwi r0 0x6
Parsed instruction at 80015AFC: bgt .L_80015B40
Parsed instruction at 80015B00: lis r3 jumptable_8001BA60@ha
Parsed instruction at 80015B04: addi r3 r3 jumptable_8001BA60@l
Parsed instruction at 80015B08: slwi r0 r0 2
Parsed instruction at 80015B0C: lwzx r0 r3 r0
Parsed instruction at 80015B10: mtctr r0
Parsed instruction at 80015B14: bctr 
Parsed instruction at 80015B18: li r5 0x15
Parsed instruction at 80015B1C: b .L_80015B44
Parsed instruction at 80015B20: li r5 0x13
Parsed instruction at 80015B24: b .L_80015B44
Parsed instruction at 80015B28: li r5 0x21
Parsed instruction at 80015B2C: b .L_80015B44
Parsed instruction at 80015B30: li r5 0x22
Parsed instruction at 80015B34: b .L_80015B44
Parsed instruction at 80015B38: li r5 0x20
Parsed instruction at 80015B3C: b .L_80015B44
Parsed label: L_80015B40:
Parsed instruction at 80015B40: li r5 0x3
Parsed label: L_80015B44:
Parsed instruction at 80015B44: addi r3 r31 0x0
Parsed instruction at 80015B48: li r4 0x80
Parsed instruction at 80015B4C: bl fn_800153E4
Parsed instruction at 80015B50: b .L_80015B5C
Parsed label: L_80015B54:
Parsed instruction at 80015B54: mr r3 r31
Parsed instruction at 80015B58: bl fn_80015394
Parsed label: L_80015B5C:
Parsed instruction at 80015B5C: lwz r31 0x81c(r1)
Parsed instruction at 80015B60: lwz r30 0x818(r1)
Parsed instruction at 80015B64: addi r1 r1 0x820
Parsed instruction at 80015B68: lwz r0 0x4(r1)
Parsed instruction at 80015B6C: mtlr r0
Parsed instruction at 80015B70: blr 
End of function: fn_8001598C, 136 instructions
Parsed function: fn_80015B74 at 0x80015B74
Parsed instruction at 80015B74: mflr r0
Parsed instruction at 80015B78: stw r0 0x4(r1)
Parsed instruction at 80015B7C: stwu r1 -0x820(r1)
Parsed instruction at 80015B80: stw r31 0x81c(r1)
Parsed instruction at 80015B84: mr r31 r3
Parsed instruction at 80015B88: stw r30 0x818(r1)
Parsed instruction at 80015B8C: lwz r0 0x8(r3)
Parsed instruction at 80015B90: cmplwi r0 0x8
Parsed instruction at 80015B94: bgt .L_80015BAC
Parsed instruction at 80015B98: addi r3 r31 0x0
Parsed instruction at 80015B9C: li r4 0x80
Parsed instruction at 80015BA0: li r5 0x2
Parsed instruction at 80015BA4: bl fn_800153E4
Parsed instruction at 80015BA8: b .L_80015D58
Parsed label: L_80015BAC:
Parsed instruction at 80015BAC: addi r3 r31 0x0
Parsed instruction at 80015BB0: li r4 0x0
Parsed instruction at 80015BB4: bl fn_80014A40
Parsed instruction at 80015BB8: addi r3 r31 0x0
Parsed instruction at 80015BBC: addi r4 r1 0x8
Parsed instruction at 80015BC0: bl fn_80014DC4
Parsed instruction at 80015BC4: mr. r30 r3
Parsed instruction at 80015BC8: bne .L_80015BDC
Parsed instruction at 80015BCC: addi r3 r31 0x0
Parsed instruction at 80015BD0: addi r4 r1 0x9
Parsed instruction at 80015BD4: bl fn_80014DC4
Parsed instruction at 80015BD8: mr r30 r3
Parsed label: L_80015BDC:
Parsed instruction at 80015BDC: cmpwi r30 0x0
Parsed instruction at 80015BE0: bne .L_80015BF4
Parsed instruction at 80015BE4: addi r3 r31 0x0
Parsed instruction at 80015BE8: addi r4 r1 0xa
Parsed instruction at 80015BEC: bl fn_80014DE8
Parsed instruction at 80015BF0: mr r30 r3
Parsed label: L_80015BF4:
Parsed instruction at 80015BF4: cmpwi r30 0x0
Parsed instruction at 80015BF8: bne .L_80015C0C
Parsed instruction at 80015BFC: addi r3 r31 0x0
Parsed instruction at 80015C00: addi r4 r1 0xc
Parsed instruction at 80015C04: bl fn_80014E68
Parsed instruction at 80015C08: mr r30 r3
Parsed label: L_80015C0C:
Parsed instruction at 80015C0C: lbz r0 0x9(r1)
Parsed instruction at 80015C10: rlwinm. r0 r0 0 30 30
Parsed instruction at 80015C14: beq .L_80015C2C
Parsed instruction at 80015C18: addi r3 r31 0x0
Parsed instruction at 80015C1C: li r4 0x80
Parsed instruction at 80015C20: li r5 0x12
Parsed instruction at 80015C24: bl fn_800153E4
Parsed instruction at 80015C28: b .L_80015D58
Parsed label: L_80015C2C:
Parsed instruction at 80015C2C: lhz r4 0xa(r1)
Parsed instruction at 80015C30: lwz r3 0x8(r31)
Parsed instruction at 80015C34: addi r0 r4 0x8
Parsed instruction at 80015C38: cmplw r3 r0
Parsed instruction at 80015C3C: bne .L_80015C48
Parsed instruction at 80015C40: cmplwi r4 0x800
Parsed instruction at 80015C44: ble .L_80015C5C
Parsed label: L_80015C48:
Parsed instruction at 80015C48: addi r3 r31 0x0
Parsed instruction at 80015C4C: li r4 0x80
Parsed instruction at 80015C50: li r5 0x11
Parsed instruction at 80015C54: bl fn_800153E4
Parsed instruction at 80015C58: b .L_80015D58
Parsed label: L_80015C5C:
Parsed instruction at 80015C5C: cmpwi r30 0x0
Parsed instruction at 80015C60: bne .L_80015CB8
Parsed instruction at 80015C64: stw r4 0x10(r1)
Parsed instruction at 80015C68: addi r3 r31 0x0
Parsed instruction at 80015C6C: addi r4 r1 0x14
Parsed instruction at 80015C70: lwz r5 0x10(r1)
Parsed instruction at 80015C74: bl fn_80014B14
Parsed instruction at 80015C78: mr. r30 r3
Parsed instruction at 80015C7C: bne .L_80015CB0
Parsed instruction at 80015C80: lbz r0 0x9(r1)
Parsed instruction at 80015C84: rlwinm. r0 r0 0 28 28
Parsed instruction at 80015C88: beq .L_80015C94
Parsed instruction at 80015C8C: li r6 0x0
Parsed instruction at 80015C90: b .L_80015C98
Parsed label: L_80015C94:
Parsed instruction at 80015C94: li r6 0x1
Parsed label: L_80015C98:
Parsed instruction at 80015C98: lwz r4 0xc(r1)
Parsed instruction at 80015C9C: addi r3 r1 0x14
Parsed instruction at 80015CA0: addi r5 r1 0x10
Parsed instruction at 80015CA4: li r7 0x0
Parsed instruction at 80015CA8: bl fn_80016D8C
Parsed instruction at 80015CAC: mr r30 r3
Parsed label: L_80015CB0:
Parsed instruction at 80015CB0: lwz r0 0x10(r1)
Parsed instruction at 80015CB4: sth r0 0xa(r1)
Parsed label: L_80015CB8:
Parsed instruction at 80015CB8: cmpwi r30 0x0
Parsed instruction at 80015CBC: bne .L_80015CD0
Parsed instruction at 80015CC0: addi r3 r31 0x0
Parsed instruction at 80015CC4: li r4 0x80
Parsed instruction at 80015CC8: li r5 0x0
Parsed instruction at 80015CCC: bl fn_800152FC
Parsed label: L_80015CD0:
Parsed instruction at 80015CD0: cmpwi r30 0x0
Parsed instruction at 80015CD4: bne .L_80015CE8
Parsed instruction at 80015CD8: mr r3 r31
Parsed instruction at 80015CDC: lhz r4 0xa(r1)
Parsed instruction at 80015CE0: bl fn_80014BA0
Parsed instruction at 80015CE4: mr r30 r3
Parsed label: L_80015CE8:
Parsed instruction at 80015CE8: cmpwi r30 0x0
Parsed instruction at 80015CEC: beq .L_80015D50
Parsed instruction at 80015CF0: subi r0 r30 0x700
Parsed instruction at 80015CF4: cmplwi r0 0x6
Parsed instruction at 80015CF8: bgt .L_80015D3C
Parsed instruction at 80015CFC: lis r3 jumptable_8001BA7C@ha
Parsed instruction at 80015D00: addi r3 r3 jumptable_8001BA7C@l
Parsed instruction at 80015D04: slwi r0 r0 2
Parsed instruction at 80015D08: lwzx r0 r3 r0
Parsed instruction at 80015D0C: mtctr r0
Parsed instruction at 80015D10: bctr 
Parsed instruction at 80015D14: li r5 0x15
Parsed instruction at 80015D18: b .L_80015D40
Parsed instruction at 80015D1C: li r5 0x13
Parsed instruction at 80015D20: b .L_80015D40
Parsed instruction at 80015D24: li r5 0x21
Parsed instruction at 80015D28: b .L_80015D40
Parsed instruction at 80015D2C: li r5 0x22
Parsed instruction at 80015D30: b .L_80015D40
Parsed instruction at 80015D34: li r5 0x20
Parsed instruction at 80015D38: b .L_80015D40
Parsed label: L_80015D3C:
Parsed instruction at 80015D3C: li r5 0x3
Parsed label: L_80015D40:
Parsed instruction at 80015D40: addi r3 r31 0x0
Parsed instruction at 80015D44: li r4 0x80
Parsed instruction at 80015D48: bl fn_800153E4
Parsed instruction at 80015D4C: b .L_80015D58
Parsed label: L_80015D50:
Parsed instruction at 80015D50: mr r3 r31
Parsed instruction at 80015D54: bl fn_80015394
Parsed label: L_80015D58:
Parsed instruction at 80015D58: lwz r31 0x81c(r1)
Parsed instruction at 80015D5C: lwz r30 0x818(r1)
Parsed instruction at 80015D60: addi r1 r1 0x820
Parsed instruction at 80015D64: lwz r0 0x4(r1)
Parsed instruction at 80015D68: mtlr r0
Parsed instruction at 80015D6C: blr 
End of function: fn_80015B74, 144 instructions
Parsed function: fn_80015D70 at 0x80015D70
Parsed instruction at 80015D70: mflr r0
Parsed instruction at 80015D74: stw r0 0x4(r1)
Parsed instruction at 80015D78: stwu r1 -0x18(r1)
Parsed instruction at 80015D7C: stw r31 0x14(r1)
Parsed instruction at 80015D80: mr r31 r3
Parsed instruction at 80015D84: lwz r0 0x8(r3)
Parsed instruction at 80015D88: cmplwi r0 0x6
Parsed instruction at 80015D8C: beq .L_80015DA4
Parsed instruction at 80015D90: addi r3 r31 0x0
Parsed instruction at 80015D94: li r4 0x80
Parsed instruction at 80015D98: li r5 0x2
Parsed instruction at 80015D9C: bl fn_800153E4
Parsed instruction at 80015DA0: b .L_80015F60
Parsed label: L_80015DA4:
Parsed instruction at 80015DA4: addi r3 r31 0x0
Parsed instruction at 80015DA8: li r4 0x0
Parsed instruction at 80015DAC: bl fn_80014A40
Parsed instruction at 80015DB0: addi r3 r31 0x0
Parsed instruction at 80015DB4: addi r4 r1 0x8
Parsed instruction at 80015DB8: bl fn_80014DC4
Parsed instruction at 80015DBC: cmpwi r3 0x0
Parsed instruction at 80015DC0: bne .L_80015DD0
Parsed instruction at 80015DC4: addi r3 r31 0x0
Parsed instruction at 80015DC8: addi r4 r1 0x9
Parsed instruction at 80015DCC: bl fn_80014DC4
Parsed label: L_80015DD0:
Parsed instruction at 80015DD0: cmpwi r3 0x0
Parsed instruction at 80015DD4: bne .L_80015DE4
Parsed instruction at 80015DD8: addi r3 r31 0x0
Parsed instruction at 80015DDC: addi r4 r1 0xa
Parsed instruction at 80015DE0: bl fn_80014DE8
Parsed label: L_80015DE4:
Parsed instruction at 80015DE4: cmpwi r3 0x0
Parsed instruction at 80015DE8: bne .L_80015DF8
Parsed instruction at 80015DEC: addi r3 r31 0x0
Parsed instruction at 80015DF0: addi r4 r1 0xc
Parsed instruction at 80015DF4: bl fn_80014DE8
Parsed label: L_80015DF8:
Parsed instruction at 80015DF8: lhz r4 0xa(r1)
Parsed instruction at 80015DFC: lhz r0 0xc(r1)
Parsed instruction at 80015E00: cmplw r4 r0
Parsed instruction at 80015E04: ble .L_80015E1C
Parsed instruction at 80015E08: addi r3 r31 0x0
Parsed instruction at 80015E0C: li r4 0x80
Parsed instruction at 80015E10: li r5 0x14
Parsed instruction at 80015E14: bl fn_800153E4
Parsed instruction at 80015E18: b .L_80015F60
Parsed label: L_80015E1C:
Parsed instruction at 80015E1C: cmpwi r3 0x0
Parsed instruction at 80015E20: bne .L_80015E34
Parsed instruction at 80015E24: addi r3 r31 0x0
Parsed instruction at 80015E28: li r4 0x80
Parsed instruction at 80015E2C: li r5 0x0
Parsed instruction at 80015E30: bl fn_800152FC
Parsed label: L_80015E34:
Parsed instruction at 80015E34: lbz r0 0x9(r1)
Parsed instruction at 80015E38: clrlwi r0 r0 29
Parsed instruction at 80015E3C: cmpwi r0 0x2
Parsed instruction at 80015E40: beq .L_80015E9C
Parsed instruction at 80015E44: bge .L_80015E58
Parsed instruction at 80015E48: cmpwi r0 0x0
Parsed instruction at 80015E4C: beq .L_80015E64
Parsed instruction at 80015E50: bge .L_80015E80
Parsed instruction at 80015E54: b .L_80015ED4
Parsed label: L_80015E58:
Parsed instruction at 80015E58: cmpwi r0 0x4
Parsed instruction at 80015E5C: bge .L_80015ED4
Parsed instruction at 80015E60: b .L_80015EB8
Parsed label: L_80015E64:
Parsed instruction at 80015E64: lhz r3 0xa(r1)
Parsed instruction at 80015E68: mr r5 r31
Parsed instruction at 80015E6C: lhz r4 0xc(r1)
Parsed instruction at 80015E70: addi r6 r1 0x10
Parsed instruction at 80015E74: li r7 0x1
Parsed instruction at 80015E78: bl fn_80016F3C
Parsed instruction at 80015E7C: b .L_80015ED8
Parsed label: L_80015E80:
Parsed instruction at 80015E80: lhz r3 0xa(r1)
Parsed instruction at 80015E84: mr r5 r31
Parsed instruction at 80015E88: lhz r4 0xc(r1)
Parsed instruction at 80015E8C: addi r6 r1 0x10
Parsed instruction at 80015E90: li r7 0x1
Parsed instruction at 80015E94: bl fn_80017038
Parsed instruction at 80015E98: b .L_80015ED8
Parsed label: L_80015E9C:
Parsed instruction at 80015E9C: lhz r3 0xa(r1)
Parsed instruction at 80015EA0: mr r5 r31
Parsed instruction at 80015EA4: lhz r4 0xc(r1)
Parsed instruction at 80015EA8: addi r6 r1 0x10
Parsed instruction at 80015EAC: li r7 0x1
Parsed instruction at 80015EB0: bl fn_80017180
Parsed instruction at 80015EB4: b .L_80015ED8
Parsed label: L_80015EB8:
Parsed instruction at 80015EB8: lhz r3 0xa(r1)
Parsed instruction at 80015EBC: mr r5 r31
Parsed instruction at 80015EC0: lhz r4 0xc(r1)
Parsed instruction at 80015EC4: addi r6 r1 0x10
Parsed instruction at 80015EC8: li r7 0x1
Parsed instruction at 80015ECC: bl fn_800172F8
Parsed instruction at 80015ED0: b .L_80015ED8
Parsed label: L_80015ED4:
Parsed instruction at 80015ED4: li r3 0x703
Parsed label: L_80015ED8:
Parsed instruction at 80015ED8: cmpwi r3 0x0
Parsed instruction at 80015EDC: beq .L_80015F58
Parsed instruction at 80015EE0: cmpwi r3 0x704
Parsed instruction at 80015EE4: beq .L_80015F2C
Parsed instruction at 80015EE8: bge .L_80015F04
Parsed instruction at 80015EEC: cmpwi r3 0x702
Parsed instruction at 80015EF0: beq .L_80015F24
Parsed instruction at 80015EF4: bge .L_80015F14
Parsed instruction at 80015EF8: cmpwi r3 0x701
Parsed instruction at 80015EFC: bge .L_80015F1C
Parsed instruction at 80015F00: b .L_80015F44
Parsed label: L_80015F04:
Parsed instruction at 80015F04: cmpwi r3 0x706
Parsed instruction at 80015F08: beq .L_80015F3C
Parsed instruction at 80015F0C: bge .L_80015F44
Parsed instruction at 80015F10: b .L_80015F34
Parsed label: L_80015F14:
Parsed instruction at 80015F14: li r5 0x12
Parsed instruction at 80015F18: b .L_80015F48
Parsed label: L_80015F1C:
Parsed instruction at 80015F1C: li r5 0x14
Parsed instruction at 80015F20: b .L_80015F48
Parsed label: L_80015F24:
Parsed instruction at 80015F24: li r5 0x15
Parsed instruction at 80015F28: b .L_80015F48
Parsed label: L_80015F2C:
Parsed instruction at 80015F2C: li r5 0x21
Parsed instruction at 80015F30: b .L_80015F48
Parsed label: L_80015F34:
Parsed instruction at 80015F34: li r5 0x22
Parsed instruction at 80015F38: b .L_80015F48
Parsed label: L_80015F3C:
Parsed instruction at 80015F3C: li r5 0x20
Parsed instruction at 80015F40: b .L_80015F48
Parsed label: L_80015F44:
Parsed instruction at 80015F44: li r5 0x3
Parsed label: L_80015F48:
Parsed instruction at 80015F48: addi r3 r31 0x0
Parsed instruction at 80015F4C: li r4 0x80
Parsed instruction at 80015F50: bl fn_800153E4
Parsed instruction at 80015F54: b .L_80015F60
Parsed label: L_80015F58:
Parsed instruction at 80015F58: mr r3 r31
Parsed instruction at 80015F5C: bl fn_80015394
Parsed label: L_80015F60:
Parsed instruction at 80015F60: lwz r31 0x14(r1)
Parsed instruction at 80015F64: addi r1 r1 0x18
Parsed instruction at 80015F68: lwz r0 0x4(r1)
Parsed instruction at 80015F6C: mtlr r0
Parsed instruction at 80015F70: blr 
End of function: fn_80015D70, 153 instructions
Parsed function: fn_80015F74 at 0x80015F74
Parsed instruction at 80015F74: mflr r0
Parsed instruction at 80015F78: stw r0 0x4(r1)
Parsed instruction at 80015F7C: stwu r1 -0x20(r1)
Parsed instruction at 80015F80: stw r31 0x1c(r1)
Parsed instruction at 80015F84: stw r30 0x18(r1)
Parsed instruction at 80015F88: mr r30 r3
Parsed instruction at 80015F8C: lwz r0 0x8(r3)
Parsed instruction at 80015F90: cmplwi r0 0x6
Parsed instruction at 80015F94: bgt .L_80015FAC
Parsed instruction at 80015F98: addi r3 r30 0x0
Parsed instruction at 80015F9C: li r4 0x80
Parsed instruction at 80015FA0: li r5 0x2
Parsed instruction at 80015FA4: bl fn_800153E4
Parsed instruction at 80015FA8: b .L_80016164
Parsed label: L_80015FAC:
Parsed instruction at 80015FAC: addi r3 r30 0x0
Parsed instruction at 80015FB0: li r4 0x0
Parsed instruction at 80015FB4: bl fn_80014A40
Parsed instruction at 80015FB8: addi r3 r30 0x0
Parsed instruction at 80015FBC: addi r4 r1 0x8
Parsed instruction at 80015FC0: bl fn_80014DC4
Parsed instruction at 80015FC4: cmpwi r3 0x0
Parsed instruction at 80015FC8: bne .L_80015FD8
Parsed instruction at 80015FCC: addi r3 r30 0x0
Parsed instruction at 80015FD0: addi r4 r1 0x9
Parsed instruction at 80015FD4: bl fn_80014DC4
Parsed label: L_80015FD8:
Parsed instruction at 80015FD8: cmpwi r3 0x0
Parsed instruction at 80015FDC: bne .L_80015FEC
Parsed instruction at 80015FE0: addi r3 r30 0x0
Parsed instruction at 80015FE4: addi r4 r1 0xa
Parsed instruction at 80015FE8: bl fn_80014DE8
Parsed label: L_80015FEC:
Parsed instruction at 80015FEC: cmpwi r3 0x0
Parsed instruction at 80015FF0: bne .L_80016000
Parsed instruction at 80015FF4: addi r3 r30 0x0
Parsed instruction at 80015FF8: addi r4 r1 0xc
Parsed instruction at 80015FFC: bl fn_80014DE8
Parsed label: L_80016000:
Parsed instruction at 80016000: lhz r3 0xa(r1)
Parsed instruction at 80016004: lhz r4 0xc(r1)
Parsed instruction at 80016008: cmplw r3 r4
Parsed instruction at 8001600C: ble .L_80016024
Parsed instruction at 80016010: addi r3 r30 0x0
Parsed instruction at 80016014: li r4 0x80
Parsed instruction at 80016018: li r5 0x14
Parsed instruction at 8001601C: bl fn_800153E4
Parsed instruction at 80016020: b .L_80016164
Parsed label: L_80016024:
Parsed instruction at 80016024: lbz r0 0x9(r1)
Parsed instruction at 80016028: cmpwi r0 0x2
Parsed instruction at 8001602C: beq .L_80016080
Parsed instruction at 80016030: bge .L_80016044
Parsed instruction at 80016034: cmpwi r0 0x0
Parsed instruction at 80016038: beq .L_80016050
Parsed instruction at 8001603C: bge .L_80016068
Parsed instruction at 80016040: b .L_800160B0
Parsed label: L_80016044:
Parsed instruction at 80016044: cmpwi r0 0x4
Parsed instruction at 80016048: bge .L_800160B0
Parsed instruction at 8001604C: b .L_80016098
Parsed label: L_80016050:
Parsed instruction at 80016050: addi r6 r1 0x10
Parsed instruction at 80016054: addi r5 r30 0x0
Parsed instruction at 80016058: li r7 0x0
Parsed instruction at 8001605C: bl fn_80016F3C
Parsed instruction at 80016060: mr r31 r3
Parsed instruction at 80016064: b .L_800160B4
Parsed label: L_80016068:
Parsed instruction at 80016068: addi r6 r1 0x10
Parsed instruction at 8001606C: addi r5 r30 0x0
Parsed instruction at 80016070: li r7 0x0
Parsed instruction at 80016074: bl fn_80017038
Parsed instruction at 80016078: mr r31 r3
Parsed instruction at 8001607C: b .L_800160B4
Parsed label: L_80016080:
Parsed instruction at 80016080: addi r6 r1 0x10
Parsed instruction at 80016084: addi r5 r30 0x0
Parsed instruction at 80016088: li r7 0x0
Parsed instruction at 8001608C: bl fn_80017180
Parsed instruction at 80016090: mr r31 r3
Parsed instruction at 80016094: b .L_800160B4
Parsed label: L_80016098:
Parsed instruction at 80016098: addi r6 r1 0x10
Parsed instruction at 8001609C: addi r5 r30 0x0
Parsed instruction at 800160A0: li r7 0x0
Parsed instruction at 800160A4: bl fn_800172F8
Parsed instruction at 800160A8: mr r31 r3
Parsed instruction at 800160AC: b .L_800160B4
Parsed label: L_800160B0:
Parsed instruction at 800160B0: li r31 0x703
Parsed label: L_800160B4:
Parsed instruction at 800160B4: cmpwi r31 0x0
Parsed instruction at 800160B8: bne .L_800160CC
Parsed instruction at 800160BC: addi r3 r30 0x0
Parsed instruction at 800160C0: li r4 0x80
Parsed instruction at 800160C4: li r5 0x0
Parsed instruction at 800160C8: bl fn_800152FC
Parsed label: L_800160CC:
Parsed instruction at 800160CC: cmpwi r31 0x0
Parsed instruction at 800160D0: beq .L_8001615C
Parsed instruction at 800160D4: cmpwi r31 0x703
Parsed instruction at 800160D8: beq .L_80016110
Parsed instruction at 800160DC: bge .L_800160F8
Parsed instruction at 800160E0: cmpwi r31 0x701
Parsed instruction at 800160E4: beq .L_80016118
Parsed instruction at 800160E8: bge .L_80016128
Parsed instruction at 800160EC: cmpwi r31 0x302
Parsed instruction at 800160F0: beq .L_80016120
Parsed instruction at 800160F4: b .L_80016148
Parsed label: L_800160F8:
Parsed instruction at 800160F8: cmpwi r31 0x706
Parsed instruction at 800160FC: beq .L_80016140
Parsed instruction at 80016100: bge .L_80016148
Parsed instruction at 80016104: cmpwi r31 0x705
Parsed instruction at 80016108: bge .L_80016138
Parsed instruction at 8001610C: b .L_80016130
Parsed label: L_80016110:
Parsed instruction at 80016110: li r5 0x12
Parsed instruction at 80016114: b .L_8001614C
Parsed label: L_80016118:
Parsed instruction at 80016118: li r5 0x14
Parsed instruction at 8001611C: b .L_8001614C
Parsed label: L_80016120:
Parsed instruction at 80016120: li r5 0x2
Parsed instruction at 80016124: b .L_8001614C
Parsed label: L_80016128:
Parsed instruction at 80016128: li r5 0x15
Parsed instruction at 8001612C: b .L_8001614C
Parsed label: L_80016130:
Parsed instruction at 80016130: li r5 0x21
Parsed instruction at 80016134: b .L_8001614C
Parsed label: L_80016138:
Parsed instruction at 80016138: li r5 0x22
Parsed instruction at 8001613C: b .L_8001614C
Parsed label: L_80016140:
Parsed instruction at 80016140: li r5 0x20
Parsed instruction at 80016144: b .L_8001614C
Parsed label: L_80016148:
Parsed instruction at 80016148: li r5 0x3
Parsed label: L_8001614C:
Parsed instruction at 8001614C: addi r3 r30 0x0
Parsed instruction at 80016150: li r4 0x80
Parsed instruction at 80016154: bl fn_800153E4
Parsed instruction at 80016158: b .L_80016164
Parsed label: L_8001615C:
Parsed instruction at 8001615C: mr r3 r30
Parsed instruction at 80016160: bl fn_80015394
Parsed label: L_80016164:
Parsed instruction at 80016164: lwz r31 0x1c(r1)
Parsed instruction at 80016168: lwz r30 0x18(r1)
Parsed instruction at 8001616C: addi r1 r1 0x20
Parsed instruction at 80016170: lwz r0 0x4(r1)
Parsed instruction at 80016174: mtlr r0
Parsed instruction at 80016178: blr 
End of function: fn_80015F74, 155 instructions
Parsed function: fn_8001617C at 0x8001617C
Parsed instruction at 8001617C: mflr r0
Parsed instruction at 80016180: stw r0 0x4(r1)
Parsed instruction at 80016184: stwu r1 -0x20(r1)
Parsed instruction at 80016188: stw r31 0x1c(r1)
Parsed instruction at 8001618C: stw r30 0x18(r1)
Parsed instruction at 80016190: mr r30 r3
Parsed instruction at 80016194: lwz r0 0x8(r3)
Parsed instruction at 80016198: cmplwi r0 0xa
Parsed instruction at 8001619C: beq .L_800161B4
Parsed instruction at 800161A0: addi r3 r30 0x0
Parsed instruction at 800161A4: li r4 0x80
Parsed instruction at 800161A8: li r5 0x2
Parsed instruction at 800161AC: bl fn_800153E4
Parsed instruction at 800161B0: b .L_8001629C
Parsed label: L_800161B4:
Parsed instruction at 800161B4: addi r3 r30 0x0
Parsed instruction at 800161B8: li r4 0x0
Parsed instruction at 800161BC: bl fn_80014A40
Parsed instruction at 800161C0: addi r3 r30 0x0
Parsed instruction at 800161C4: addi r4 r1 0x8
Parsed instruction at 800161C8: bl fn_80014DC4
Parsed instruction at 800161CC: mr. r31 r3
Parsed instruction at 800161D0: bne .L_800161E4
Parsed instruction at 800161D4: addi r3 r30 0x0
Parsed instruction at 800161D8: addi r4 r1 0x9
Parsed instruction at 800161DC: bl fn_80014DC4
Parsed instruction at 800161E0: mr r31 r3
Parsed label: L_800161E4:
Parsed instruction at 800161E4: cmpwi r31 0x0
Parsed instruction at 800161E8: bne .L_800161FC
Parsed instruction at 800161EC: addi r3 r30 0x0
Parsed instruction at 800161F0: addi r4 r1 0xc
Parsed instruction at 800161F4: bl fn_80014E68
Parsed instruction at 800161F8: mr r31 r3
Parsed label: L_800161FC:
Parsed instruction at 800161FC: cmpwi r31 0x0
Parsed instruction at 80016200: bne .L_80016214
Parsed instruction at 80016204: addi r3 r30 0x0
Parsed instruction at 80016208: addi r4 r1 0x10
Parsed instruction at 8001620C: bl fn_80014E68
Parsed instruction at 80016210: mr r31 r3
Parsed label: L_80016214:
Parsed instruction at 80016214: lwz r4 0xc(r1)
Parsed instruction at 80016218: lwz r5 0x10(r1)
Parsed instruction at 8001621C: cmplw r4 r5
Parsed instruction at 80016220: ble .L_80016238
Parsed instruction at 80016224: addi r3 r30 0x0
Parsed instruction at 80016228: li r4 0x80
Parsed instruction at 8001622C: li r5 0x13
Parsed instruction at 80016230: bl fn_800153E4
Parsed instruction at 80016234: b .L_8001629C
Parsed label: L_80016238:
Parsed instruction at 80016238: cmpwi r31 0x0
Parsed instruction at 8001623C: bne .L_8001624C
Parsed instruction at 80016240: lbz r3 0x9(r1)
Parsed instruction at 80016244: bl fn_80017E40
Parsed instruction at 80016248: mr r31 r3
Parsed label: L_8001624C:
Parsed instruction at 8001624C: cmpwi r31 0x0
Parsed instruction at 80016250: bne .L_80016264
Parsed instruction at 80016254: addi r3 r30 0x0
Parsed instruction at 80016258: li r4 0x80
Parsed instruction at 8001625C: li r5 0x0
Parsed instruction at 80016260: bl fn_800152FC
Parsed label: L_80016264:
Parsed instruction at 80016264: cmpwi r31 0x0
Parsed instruction at 80016268: beq .L_80016294
Parsed instruction at 8001626C: cmpwi r31 0x703
Parsed instruction at 80016270: beq .L_80016278
Parsed instruction at 80016274: b .L_80016280
Parsed label: L_80016278:
Parsed instruction at 80016278: li r5 0x12
Parsed instruction at 8001627C: b .L_80016284
Parsed label: L_80016280:
Parsed instruction at 80016280: li r5 0x3
Parsed label: L_80016284:
Parsed instruction at 80016284: addi r3 r30 0x0
Parsed instruction at 80016288: li r4 0x80
Parsed instruction at 8001628C: bl fn_800153E4
Parsed instruction at 80016290: b .L_8001629C
Parsed label: L_80016294:
Parsed instruction at 80016294: mr r3 r30
Parsed instruction at 80016298: bl fn_80015394
Parsed label: L_8001629C:
Parsed instruction at 8001629C: lwz r31 0x1c(r1)
Parsed instruction at 800162A0: lwz r30 0x18(r1)
Parsed instruction at 800162A4: addi r1 r1 0x20
Parsed instruction at 800162A8: lwz r0 0x4(r1)
Parsed instruction at 800162AC: mtlr r0
Parsed instruction at 800162B0: blr 
End of function: fn_8001617C, 90 instructions
Parsed function: fn_800162B4 at 0x800162B4
Parsed instruction at 800162B4: mflr r0
Parsed instruction at 800162B8: stw r0 0x4(r1)
Parsed instruction at 800162BC: stwu r1 -0x10(r1)
Parsed instruction at 800162C0: stw r31 0xc(r1)
Parsed instruction at 800162C4: mr r31 r3
Parsed instruction at 800162C8: bl fn_80017E7C
Parsed instruction at 800162CC: cmpwi r3 0x0
Parsed instruction at 800162D0: bne .L_800162E8
Parsed instruction at 800162D4: addi r3 r31 0x0
Parsed instruction at 800162D8: li r4 0x80
Parsed instruction at 800162DC: li r5 0x16
Parsed instruction at 800162E0: bl fn_800153E4
Parsed instruction at 800162E4: b .L_80016304
Parsed label: L_800162E8:
Parsed instruction at 800162E8: addi r3 r31 0x0
Parsed instruction at 800162EC: li r4 0x80
Parsed instruction at 800162F0: li r5 0x0
Parsed instruction at 800162F4: bl fn_800153E4
Parsed instruction at 800162F8: cmpwi r3 0x0
Parsed instruction at 800162FC: bne .L_80016304
Parsed instruction at 80016300: bl fn_80018B3C
Parsed label: L_80016304:
Parsed instruction at 80016304: lwz r31 0xc(r1)
Parsed instruction at 80016308: addi r1 r1 0x10
Parsed instruction at 8001630C: lwz r0 0x4(r1)
Parsed instruction at 80016310: mtlr r0
Parsed instruction at 80016314: blr 
End of function: fn_800162B4, 27 instructions
Parsed function: fn_80016318 at 0x80016318
Parsed instruction at 80016318: mflr r0
Parsed instruction at 8001631C: stw r0 0x4(r1)
Parsed instruction at 80016320: stwu r1 -0x18(r1)
Parsed instruction at 80016324: stw r31 0x14(r1)
Parsed instruction at 80016328: mr r31 r3
Parsed instruction at 8001632C: lwz r0 0x8(r3)
Parsed instruction at 80016330: cmplwi r0 0x3
Parsed instruction at 80016334: bge .L_8001634C
Parsed instruction at 80016338: addi r3 r31 0x0
Parsed instruction at 8001633C: li r4 0x80
Parsed instruction at 80016340: li r5 0x2
Parsed instruction at 80016344: bl fn_800153E4
Parsed instruction at 80016348: b .L_80016508
Parsed label: L_8001634C:
Parsed instruction at 8001634C: addi r3 r31 0x0
Parsed instruction at 80016350: li r4 0x0
Parsed instruction at 80016354: bl fn_80014A40
Parsed instruction at 80016358: addi r3 r31 0x0
Parsed instruction at 8001635C: addi r4 r1 0x8
Parsed instruction at 80016360: bl fn_80014DC4
Parsed instruction at 80016364: cmpwi r3 0x0
Parsed instruction at 80016368: bne .L_80016378
Parsed instruction at 8001636C: addi r3 r31 0x0
Parsed instruction at 80016370: addi r4 r1 0x9
Parsed instruction at 80016374: bl fn_80014DC4
Parsed label: L_80016378:
Parsed instruction at 80016378: lbz r0 0x9(r1)
Parsed instruction at 8001637C: cmpwi r0 0x10
Parsed instruction at 80016380: beq .L_800163AC
Parsed instruction at 80016384: bge .L_800163A0
Parsed instruction at 80016388: cmpwi r0 0x1
Parsed instruction at 8001638C: beq .L_800163E0
Parsed instruction at 80016390: bge .L_80016458
Parsed instruction at 80016394: cmpwi r0 0x0
Parsed instruction at 80016398: bge .L_800163AC
Parsed instruction at 8001639C: b .L_80016458
Parsed label: L_800163A0:
Parsed instruction at 800163A0: cmpwi r0 0x12
Parsed instruction at 800163A4: bge .L_80016458
Parsed instruction at 800163A8: b .L_800163E0
Parsed label: L_800163AC:
Parsed instruction at 800163AC: cmpwi r3 0x0
Parsed instruction at 800163B0: bne .L_800163C0
Parsed instruction at 800163B4: addi r3 r31 0x0
Parsed instruction at 800163B8: addi r4 r1 0xa
Parsed instruction at 800163BC: bl fn_80014DC4
Parsed label: L_800163C0:
Parsed instruction at 800163C0: lbz r0 0xa(r1)
Parsed instruction at 800163C4: cmplwi r0 0x1
Parsed instruction at 800163C8: bge .L_8001646C
Parsed instruction at 800163CC: addi r3 r31 0x0
Parsed instruction at 800163D0: li r4 0x80
Parsed instruction at 800163D4: li r5 0x11
Parsed instruction at 800163D8: bl fn_800153E4
Parsed instruction at 800163DC: b .L_80016508
Parsed label: L_800163E0:
Parsed instruction at 800163E0: lwz r0 0x8(r31)
Parsed instruction at 800163E4: cmplwi r0 0xa
Parsed instruction at 800163E8: beq .L_80016400
Parsed instruction at 800163EC: addi r3 r31 0x0
Parsed instruction at 800163F0: li r4 0x80
Parsed instruction at 800163F4: li r5 0x2
Parsed instruction at 800163F8: bl fn_800153E4
Parsed instruction at 800163FC: b .L_80016508
Parsed label: L_80016400:
Parsed instruction at 80016400: cmpwi r3 0x0
Parsed instruction at 80016404: bne .L_80016414
Parsed instruction at 80016408: addi r3 r31 0x0
Parsed instruction at 8001640C: addi r4 r1 0xc
Parsed instruction at 80016410: bl fn_80014E68
Parsed label: L_80016414:
Parsed instruction at 80016414: cmpwi r3 0x0
Parsed instruction at 80016418: bne .L_80016428
Parsed instruction at 8001641C: addi r3 r31 0x0
Parsed instruction at 80016420: addi r4 r1 0x10
Parsed instruction at 80016424: bl fn_80014E68
Parsed label: L_80016428:
Parsed instruction at 80016428: bl fn_80017D40
Parsed instruction at 8001642C: lwz r0 0xc(r1)
Parsed instruction at 80016430: cmplw r3 r0
Parsed instruction at 80016434: blt .L_80016444
Parsed instruction at 80016438: lwz r0 0x10(r1)
Parsed instruction at 8001643C: cmplw r3 r0
Parsed instruction at 80016440: ble .L_8001646C
Parsed label: L_80016444:
Parsed instruction at 80016444: addi r3 r31 0x0
Parsed instruction at 80016448: li r4 0x80
Parsed instruction at 8001644C: li r5 0x11
Parsed instruction at 80016450: bl fn_800153E4
Parsed instruction at 80016454: b .L_80016508
Parsed label: L_80016458:
Parsed instruction at 80016458: addi r3 r31 0x0
Parsed instruction at 8001645C: li r4 0x80
Parsed instruction at 80016460: li r5 0x12
Parsed instruction at 80016464: bl fn_800153E4
Parsed instruction at 80016468: b .L_80016508
Parsed label: L_8001646C:
Parsed instruction at 8001646C: bl fn_80017E7C
Parsed instruction at 80016470: cmpwi r3 0x0
Parsed instruction at 80016474: bne .L_8001648C
Parsed instruction at 80016478: addi r3 r31 0x0
Parsed instruction at 8001647C: li r4 0x80
Parsed instruction at 80016480: li r5 0x16
Parsed instruction at 80016484: bl fn_800153E4
Parsed instruction at 80016488: b .L_80016508
Parsed label: L_8001648C:
Parsed instruction at 8001648C: addi r3 r31 0x0
Parsed instruction at 80016490: li r4 0x80
Parsed instruction at 80016494: li r5 0x0
Parsed instruction at 80016498: bl fn_800153E4
Parsed instruction at 8001649C: cmpwi r3 0x0
Parsed instruction at 800164A0: bne .L_80016508
Parsed instruction at 800164A4: lbz r0 0x9(r1)
Parsed instruction at 800164A8: cmpwi r0 0x10
Parsed instruction at 800164AC: beq .L_800164D8
Parsed instruction at 800164B0: bge .L_800164CC
Parsed instruction at 800164B4: cmpwi r0 0x1
Parsed instruction at 800164B8: beq .L_800164F0
Parsed instruction at 800164BC: bge .L_80016508
Parsed instruction at 800164C0: cmpwi r0 0x0
Parsed instruction at 800164C4: bge .L_800164D8
Parsed instruction at 800164C8: b .L_80016508
Parsed label: L_800164CC:
Parsed instruction at 800164CC: cmpwi r0 0x12
Parsed instruction at 800164D0: bge .L_80016508
Parsed instruction at 800164D4: b .L_800164F0
Parsed label: L_800164D8:
Parsed instruction at 800164D8: subfic r0 r0 0x10
Parsed instruction at 800164DC: lbz r3 0xa(r1)
Parsed instruction at 800164E0: cntlzw r0 r0
Parsed instruction at 800164E4: srwi r4 r0 5
Parsed instruction at 800164E8: bl fn_80017CB4
Parsed instruction at 800164EC: b .L_80016508
Parsed label: L_800164F0:
Parsed instruction at 800164F0: subfic r0 r0 0x11
Parsed instruction at 800164F4: lwz r3 0xc(r1)
Parsed instruction at 800164F8: cntlzw r0 r0
Parsed instruction at 800164FC: lwz r4 0x10(r1)
Parsed instruction at 80016500: srwi r5 r0 5
Parsed instruction at 80016504: bl fn_80017CF8
Parsed label: L_80016508:
Parsed instruction at 80016508: lwz r31 0x14(r1)
Parsed instruction at 8001650C: addi r1 r1 0x18
Parsed instruction at 80016510: lwz r0 0x4(r1)
Parsed instruction at 80016514: mtlr r0
Parsed instruction at 80016518: blr 
End of function: fn_80016318, 146 instructions
Parsed function: fn_8001651C at 0x8001651C
Parsed instruction at 8001651C: mflr r0
Parsed instruction at 80016520: stw r0 0x4(r1)
Parsed instruction at 80016524: stwu r1 -0x10(r1)
Parsed instruction at 80016528: stw r31 0xc(r1)
Parsed instruction at 8001652C: mr r31 r3
Parsed instruction at 80016530: bl fn_80017E9C
Parsed instruction at 80016534: cmpwi r3 0x704
Parsed instruction at 80016538: beq .L_80016564
Parsed instruction at 8001653C: bge .L_8001654C
Parsed instruction at 80016540: cmpwi r3 0x0
Parsed instruction at 80016544: beq .L_8001655C
Parsed instruction at 80016548: b .L_8001657C
Parsed label: L_8001654C:
Parsed instruction at 8001654C: cmpwi r3 0x706
Parsed instruction at 80016550: beq .L_80016574
Parsed instruction at 80016554: bge .L_8001657C
Parsed instruction at 80016558: b .L_8001656C
Parsed label: L_8001655C:
Parsed instruction at 8001655C: li r5 0x0
Parsed instruction at 80016560: b .L_80016580
Parsed label: L_80016564:
Parsed instruction at 80016564: li r5 0x21
Parsed instruction at 80016568: b .L_80016580
Parsed label: L_8001656C:
Parsed instruction at 8001656C: li r5 0x22
Parsed instruction at 80016570: b .L_80016580
Parsed label: L_80016574:
Parsed instruction at 80016574: li r5 0x20
Parsed instruction at 80016578: b .L_80016580
Parsed label: L_8001657C:
Parsed instruction at 8001657C: li r5 0x1
Parsed label: L_80016580:
Parsed instruction at 80016580: addi r3 r31 0x0
Parsed instruction at 80016584: li r4 0x80
Parsed instruction at 80016588: bl fn_800153E4
Parsed instruction at 8001658C: lwz r31 0xc(r1)
Parsed instruction at 80016590: addi r1 r1 0x10
Parsed instruction at 80016594: lwz r0 0x4(r1)
Parsed instruction at 80016598: mtlr r0
Parsed instruction at 8001659C: blr 
End of function: fn_8001651C, 40 instructions
Parsed function: fn_800165A0 at 0x800165A0
Parsed instruction at 800165A0: mflr r0
Parsed instruction at 800165A4: stw r0 0x4(r1)
Parsed instruction at 800165A8: stwu r1 -0x48(r1)
Parsed instruction at 800165AC: stmw r21 0x1c(r1)
Parsed instruction at 800165B0: mr. r27 r4
Parsed instruction at 800165B4: addi r25 r3 0x0
Parsed instruction at 800165B8: addi r23 r5 0x0
Parsed instruction at 800165BC: addi r26 r6 0x0
Parsed instruction at 800165C0: addi r22 r7 0x0
Parsed instruction at 800165C4: addi r30 r8 0x0
Parsed instruction at 800165C8: beq .L_800165D8
Parsed instruction at 800165CC: lwz r0 0x0(r23)
Parsed instruction at 800165D0: cmplwi r0 0x0
Parsed instruction at 800165D4: bne .L_800165E0
Parsed label: L_800165D8:
Parsed instruction at 800165D8: li r3 0x2
Parsed instruction at 800165DC: b .L_80016864
Parsed label: L_800165E0:
Parsed instruction at 800165E0: li r0 0x0
Parsed instruction at 800165E4: stb r0 0x0(r26)
Parsed instruction at 800165E8: li r24 0x0
Parsed instruction at 800165EC: li r28 0x0
Parsed instruction at 800165F0: li r21 0x0
Parsed instruction at 800165F4: b .L_80016834
Parsed label: L_800165F8:
Parsed instruction at 800165F8: subf r0 r28 r3
Parsed instruction at 800165FC: cmplwi r0 0x800
Parsed instruction at 80016600: ble .L_8001660C
Parsed instruction at 80016604: li r31 0x800
Parsed instruction at 80016608: b .L_80016610
Parsed label: L_8001660C:
Parsed instruction at 8001660C: mr r31 r0
Parsed label: L_80016610:
Parsed instruction at 80016610: addi r3 r1 0xc
Parsed instruction at 80016614: addi r4 r1 0x10
Parsed instruction at 80016618: bl fn_800148D0
Parsed instruction at 8001661C: mr. r21 r3
Parsed instruction at 80016620: bne .L_80016678
Parsed instruction at 80016624: lwz r7 0x10(r1)
Parsed instruction at 80016628: lwz r0 0xc(r7)
Parsed instruction at 8001662C: cmplwi r0 0x880
Parsed instruction at 80016630: blt .L_8001663C
Parsed instruction at 80016634: li r5 0x301
Parsed instruction at 80016638: b .L_80016674
Parsed label: L_8001663C:
Parsed instruction at 8001663C: cmpwi r30 0x0
Parsed instruction at 80016640: beq .L_8001664C
Parsed instruction at 80016644: li r6 0xd1
Parsed instruction at 80016648: b .L_80016650
Parsed label: L_8001664C:
Parsed instruction at 8001664C: li r6 0xd0
Parsed label: L_80016650:
Parsed instruction at 80016650: lwz r4 0xc(r7)
Parsed instruction at 80016654: li r5 0x0
Parsed instruction at 80016658: addi r3 r4 0x1
Parsed instruction at 8001665C: addi r0 r4 0x10
Parsed instruction at 80016660: stw r3 0xc(r7)
Parsed instruction at 80016664: stbx r6 r7 r0
Parsed instruction at 80016668: lwz r3 0x8(r7)
Parsed instruction at 8001666C: addi r0 r3 0x1
Parsed instruction at 80016670: stw r0 0x8(r7)
Parsed label: L_80016674:
Parsed instruction at 80016674: mr r21 r5
Parsed label: L_80016678:
Parsed instruction at 80016678: cmpwi r21 0x0
Parsed instruction at 8001667C: bne .L_80016690
Parsed instruction at 80016680: lwz r3 0x10(r1)
Parsed instruction at 80016684: mr r4 r25
Parsed instruction at 80016688: bl fn_80014BF4
Parsed instruction at 8001668C: mr r21 r3
Parsed label: L_80016690:
Parsed instruction at 80016690: cmpwi r21 0x0
Parsed instruction at 80016694: bne .L_800166A8
Parsed instruction at 80016698: lwz r3 0x10(r1)
Parsed instruction at 8001669C: clrlwi r4 r31 16
Parsed instruction at 800166A0: bl fn_80014BA0
Parsed instruction at 800166A4: mr r21 r3
Parsed label: L_800166A8:
Parsed instruction at 800166A8: cmpwi r30 0x0
Parsed instruction at 800166AC: bne .L_800166CC
Parsed instruction at 800166B0: cmpwi r21 0x0
Parsed instruction at 800166B4: bne .L_800166CC
Parsed instruction at 800166B8: lwz r3 0x10(r1)
Parsed instruction at 800166BC: addi r5 r31 0x0
Parsed instruction at 800166C0: add r4 r27 r28
Parsed instruction at 800166C4: bl fn_80014CE0
Parsed instruction at 800166C8: mr r21 r3
Parsed label: L_800166CC:
Parsed instruction at 800166CC: cmpwi r21 0x0
Parsed instruction at 800166D0: bne .L_80016828
Parsed instruction at 800166D4: cmpwi r22 0x0
Parsed instruction at 800166D8: beq .L_8001681C
Parsed instruction at 800166DC: li r0 0x0
Parsed instruction at 800166E0: cmpwi r30 0x0
Parsed instruction at 800166E4: sth r0 0xa(r1)
Parsed instruction at 800166E8: stb r0 0x8(r1)
Parsed instruction at 800166EC: beq .L_800166FC
Parsed instruction at 800166F0: cmplwi r25 0x0
Parsed instruction at 800166F4: bne .L_800166FC
Parsed instruction at 800166F8: li r0 0x1
Parsed label: L_800166FC:
Parsed instruction at 800166FC: cmpwi r30 0x0
Parsed instruction at 80016700: beq .L_8001670C
Parsed instruction at 80016704: li r5 0x5
Parsed instruction at 80016708: b .L_80016710
Parsed label: L_8001670C:
Parsed instruction at 8001670C: li r5 0x5
Parsed label: L_80016710:
Parsed instruction at 80016710: cntlzw r0 r0
Parsed instruction at 80016714: lwz r3 0x10(r1)
Parsed instruction at 80016718: srwi r7 r0 5
Parsed instruction at 8001671C: addi r4 r1 0x14
Parsed instruction at 80016720: li r6 0x3
Parsed instruction at 80016724: bl fn_80016878
Parsed instruction at 80016728: mr. r21 r3
Parsed instruction at 8001672C: bne .L_80016744
Parsed instruction at 80016730: lwz r3 0x14(r1)
Parsed instruction at 80016734: bl fn_8001496C
Parsed instruction at 80016738: addi r29 r3 0x0
Parsed instruction at 8001673C: li r4 0x2
Parsed instruction at 80016740: bl fn_80014A40
Parsed label: L_80016744:
Parsed instruction at 80016744: cmpwi r21 0x0
Parsed instruction at 80016748: bne .L_8001675C
Parsed instruction at 8001674C: addi r3 r29 0x0
Parsed instruction at 80016750: addi r4 r1 0x8
Parsed instruction at 80016754: bl fn_80014DC4
Parsed instruction at 80016758: mr r21 r3
Parsed label: L_8001675C:
Parsed instruction at 8001675C: cmpwi r21 0x0
Parsed instruction at 80016760: bne .L_80016774
Parsed instruction at 80016764: addi r3 r29 0x0
Parsed instruction at 80016768: addi r4 r1 0xa
Parsed instruction at 8001676C: bl fn_80014DE8
Parsed instruction at 80016770: mr r21 r3
Parsed label: L_80016774:
Parsed instruction at 80016774: cmpwi r30 0x0
Parsed instruction at 80016778: beq .L_800167D0
Parsed instruction at 8001677C: cmpwi r21 0x0
Parsed instruction at 80016780: bne .L_800167D0
Parsed instruction at 80016784: lhz r3 0xa(r1)
Parsed instruction at 80016788: lwz r4 0x8(r29)
Parsed instruction at 8001678C: addi r0 r3 0x5
Parsed instruction at 80016790: cmplw r4 r0
Parsed instruction at 80016794: beq .L_800167B4
Parsed instruction at 80016798: lbz r0 0x8(r1)
Parsed instruction at 8001679C: subi r3 r4 0x5
Parsed instruction at 800167A0: sth r3 0xa(r1)
Parsed instruction at 800167A4: cmplwi r0 0x0
Parsed instruction at 800167A8: bne .L_800167B4
Parsed instruction at 800167AC: li r0 0x1
Parsed instruction at 800167B0: stb r0 0x8(r1)
Parsed label: L_800167B4:
Parsed instruction at 800167B4: lhz r5 0xa(r1)
Parsed instruction at 800167B8: cmplw r5 r31
Parsed instruction at 800167BC: bgt .L_800167D0
Parsed instruction at 800167C0: addi r3 r29 0x0
Parsed instruction at 800167C4: add r4 r27 r28
Parsed instruction at 800167C8: bl fn_80014FA8
Parsed instruction at 800167CC: mr r21 r3
Parsed label: L_800167D0:
Parsed instruction at 800167D0: lhz r3 0xa(r1)
Parsed instruction at 800167D4: cmplw r3 r31
Parsed instruction at 800167D8: beq .L_80016808
Parsed instruction at 800167DC: cmpwi r30 0x0
Parsed instruction at 800167E0: beq .L_800167EC
Parsed instruction at 800167E4: cmplw r3 r31
Parsed instruction at 800167E8: blt .L_80016800
Parsed label: L_800167EC:
Parsed instruction at 800167EC: lbz r0 0x8(r1)
Parsed instruction at 800167F0: cmplwi r0 0x0
Parsed instruction at 800167F4: bne .L_80016800
Parsed instruction at 800167F8: li r0 0x1
Parsed instruction at 800167FC: stb r0 0x8(r1)
Parsed label: L_80016800:
Parsed instruction at 80016800: addi r31 r3 0x0
Parsed instruction at 80016804: li r24 0x1
Parsed label: L_80016808:
Parsed instruction at 80016808: lbz r0 0x8(r1)
Parsed instruction at 8001680C: stb r0 0x0(r26)
Parsed instruction at 80016810: lwz r3 0x14(r1)
Parsed instruction at 80016814: bl fn_80014998
Parsed instruction at 80016818: b .L_80016828
Parsed label: L_8001681C:
Parsed instruction at 8001681C: lwz r3 0x10(r1)
Parsed instruction at 80016820: bl fn_80014828
Parsed instruction at 80016824: mr r21 r3
Parsed label: L_80016828:
Parsed instruction at 80016828: lwz r3 0xc(r1)
Parsed instruction at 8001682C: bl fn_80014998
Parsed instruction at 80016830: add r28 r28 r31
Parsed label: L_80016834:
Parsed instruction at 80016834: cmpwi r24 0x0
Parsed instruction at 80016838: bne .L_8001685C
Parsed instruction at 8001683C: lwz r3 0x0(r23)
Parsed instruction at 80016840: cmplw r28 r3
Parsed instruction at 80016844: bge .L_8001685C
Parsed instruction at 80016848: cmpwi r21 0x0
Parsed instruction at 8001684C: bne .L_8001685C
Parsed instruction at 80016850: lbz r0 0x0(r26)
Parsed instruction at 80016854: cmplwi r0 0x0
Parsed instruction at 80016858: beq .L_800165F8
Parsed label: L_8001685C:
Parsed instruction at 8001685C: stw r28 0x0(r23)
Parsed instruction at 80016860: mr r3 r21
Parsed label: L_80016864:
Parsed instruction at 80016864: lmw r21 0x1c(r1)
Parsed instruction at 80016868: addi r1 r1 0x48
Parsed instruction at 8001686C: lwz r0 0x4(r1)
Parsed instruction at 80016870: mtlr r0
Parsed instruction at 80016874: blr 
End of function: fn_800165A0, 211 instructions
Parsed function: fn_80016878 at 0x80016878
Parsed instruction at 80016878: mflr r0
Parsed instruction at 8001687C: stw r0 0x4(r1)
Parsed instruction at 80016880: li r0 -0x1
Parsed instruction at 80016884: stwu r1 -0x38(r1)
Parsed instruction at 80016888: stmw r22 0x10(r1)
Parsed instruction at 8001688C: addi r23 r4 0x0
Parsed instruction at 80016890: lis r4 0x4c5
Parsed instruction at 80016894: addi r27 r6 0x1
Parsed instruction at 80016898: addi r22 r3 0x0
Parsed instruction at 8001689C: subi r31 r4 0x4c14
Parsed instruction at 800168A0: addi r24 r5 0x0
Parsed instruction at 800168A4: addi r25 r7 0x0
Parsed instruction at 800168A8: li r30 0x0
Parsed instruction at 800168AC: li r26 0x1
Parsed instruction at 800168B0: stw r0 0x0(r23)
Parsed instruction at 800168B4: b .L_800169D8
Parsed label: L_800168B8:
Parsed instruction at 800168B8: mr r3 r22
Parsed instruction at 800168BC: bl fn_80014828
Parsed instruction at 800168C0: mr. r30 r3
Parsed instruction at 800168C4: bne .L_800169D4
Parsed instruction at 800168C8: cmpwi r25 0x0
Parsed instruction at 800168CC: beq .L_800168D4
Parsed instruction at 800168D0: li r28 0x0
Parsed label: L_800168D4:
Parsed instruction at 800168D4: bl fn_80015098
Parsed instruction at 800168D8: stw r3 0x0(r23)
Parsed instruction at 800168DC: lwz r3 0x0(r23)
Parsed instruction at 800168E0: cmpwi r3 -0x1
Parsed instruction at 800168E4: bne .L_800168FC
Parsed instruction at 800168E8: cmpwi r25 0x0
Parsed instruction at 800168EC: beq .L_800168D4
Parsed instruction at 800168F0: addi r28 r28 0x1
Parsed instruction at 800168F4: cmplw r28 r31
Parsed instruction at 800168F8: blt .L_800168D4
Parsed label: L_800168FC:
Parsed instruction at 800168FC: cmpwi r3 -0x1
Parsed instruction at 80016900: beq .L_8001694C
Parsed instruction at 80016904: li r26 0x0
Parsed instruction at 80016908: bl fn_8001496C
Parsed instruction at 8001690C: addi r29 r3 0x0
Parsed instruction at 80016910: li r4 0x0
Parsed instruction at 80016914: bl fn_80014A40
Parsed instruction at 80016918: addi r3 r29 0x0
Parsed instruction at 8001691C: addi r4 r1 0x8
Parsed instruction at 80016920: bl fn_80014DC4
Parsed instruction at 80016924: mr. r30 r3
Parsed instruction at 80016928: bne .L_8001694C
Parsed instruction at 8001692C: lbz r0 0x8(r1)
Parsed instruction at 80016930: cmplwi r0 0x80
Parsed instruction at 80016934: bge .L_8001694C
Parsed instruction at 80016938: lwz r3 0x0(r23)
Parsed instruction at 8001693C: bl fn_800151E4
Parsed instruction at 80016940: li r0 -0x1
Parsed instruction at 80016944: stw r0 0x0(r23)
Parsed instruction at 80016948: b .L_800168D4
Parsed label: L_8001694C:
Parsed instruction at 8001694C: lwz r0 0x0(r23)
Parsed instruction at 80016950: cmpwi r0 -0x1
Parsed instruction at 80016954: beq .L_800169D4
Parsed instruction at 80016958: lwz r0 0x8(r29)
Parsed instruction at 8001695C: cmplw r0 r24
Parsed instruction at 80016960: bge .L_80016968
Parsed instruction at 80016964: li r26 0x1
Parsed label: L_80016968:
Parsed instruction at 80016968: cmpwi r30 0x0
Parsed instruction at 8001696C: bne .L_80016988
Parsed instruction at 80016970: cmpwi r26 0x0
Parsed instruction at 80016974: bne .L_80016988
Parsed instruction at 80016978: addi r3 r29 0x0
Parsed instruction at 8001697C: addi r4 r1 0x9
Parsed instruction at 80016980: bl fn_80014DC4
Parsed instruction at 80016984: mr r30 r3
Parsed label: L_80016988:
Parsed instruction at 80016988: cmpwi r30 0x0
Parsed instruction at 8001698C: bne .L_800169B4
Parsed instruction at 80016990: cmpwi r26 0x0
Parsed instruction at 80016994: bne .L_800169B4
Parsed instruction at 80016998: lbz r0 0x8(r1)
Parsed instruction at 8001699C: cmplwi r0 0x80
Parsed instruction at 800169A0: bne .L_800169B0
Parsed instruction at 800169A4: lbz r0 0x9(r1)
Parsed instruction at 800169A8: cmplwi r0 0x0
Parsed instruction at 800169AC: beq .L_800169B4
Parsed label: L_800169B0:
Parsed instruction at 800169B0: li r26 0x1
Parsed label: L_800169B4:
Parsed instruction at 800169B4: cmpwi r30 0x0
Parsed instruction at 800169B8: bne .L_800169C4
Parsed instruction at 800169BC: cmpwi r26 0x0
Parsed instruction at 800169C0: beq .L_800169D4
Parsed label: L_800169C4:
Parsed instruction at 800169C4: lwz r3 0x0(r23)
Parsed instruction at 800169C8: bl fn_80014998
Parsed instruction at 800169CC: li r0 -0x1
Parsed instruction at 800169D0: stw r0 0x0(r23)
Parsed label: L_800169D4:
Parsed instruction at 800169D4: subi r27 r27 0x1
Parsed label: L_800169D8:
Parsed instruction at 800169D8: cmpwi r27 0x0
Parsed instruction at 800169DC: beq .L_800169F4
Parsed instruction at 800169E0: lwz r0 0x0(r23)
Parsed instruction at 800169E4: cmpwi r0 -0x1
Parsed instruction at 800169E8: bne .L_800169F4
Parsed instruction at 800169EC: cmpwi r30 0x0
Parsed instruction at 800169F0: beq .L_800168B8
Parsed label: L_800169F4:
Parsed instruction at 800169F4: lwz r0 0x0(r23)
Parsed instruction at 800169F8: cmpwi r0 -0x1
Parsed instruction at 800169FC: bne .L_80016A04
Parsed instruction at 80016A00: li r30 0x800
Parsed label: L_80016A04:
Parsed instruction at 80016A04: mr r3 r30
Parsed instruction at 80016A08: lmw r22 0x10(r1)
Parsed instruction at 80016A0C: addi r1 r1 0x38
Parsed instruction at 80016A10: lwz r0 0x4(r1)
Parsed instruction at 80016A14: mtlr r0
Parsed instruction at 80016A18: blr 
End of function: fn_80016878, 118 instructions
Parsed function: fn_80016A1C at 0x80016A1C
Parsed instruction at 80016A1C: li r3 0x0
Parsed instruction at 80016A20: blr 
End of function: fn_80016A1C, 2 instructions
Parsed function: fn_80016A24 at 0x80016A24
Parsed instruction at 80016A24: li r3 0x0
Parsed instruction at 80016A28: blr 
End of function: fn_80016A24, 2 instructions
Parsed function: fn_80016A2C at 0x80016A2C
Parsed instruction at 80016A2C: li r3 0x0
Parsed instruction at 80016A30: blr 
End of function: fn_80016A2C, 2 instructions
Parsed function: fn_80016A34 at 0x80016A34
Parsed instruction at 80016A34: mflr r0
Parsed instruction at 80016A38: stw r0 0x4(r1)
Parsed instruction at 80016A3C: stwu r1 -0x20(r1)
Parsed instruction at 80016A40: stw r31 0x1c(r1)
Parsed instruction at 80016A44: addi r4 r1 0xc
Parsed instruction at 80016A48: stw r30 0x18(r1)
Parsed instruction at 80016A4C: addi r30 r3 0x0
Parsed instruction at 80016A50: addi r3 r1 0x8
Parsed instruction at 80016A54: bl fn_800148D0
Parsed instruction at 80016A58: mr. r31 r3
Parsed instruction at 80016A5C: bne .L_80016AF0
Parsed instruction at 80016A60: lwz r5 0xc(r1)
Parsed instruction at 80016A64: lwz r3 0xc(r5)
Parsed instruction at 80016A68: cmplwi r3 0x880
Parsed instruction at 80016A6C: blt .L_80016A78
Parsed instruction at 80016A70: li r4 0x301
Parsed instruction at 80016A74: b .L_80016A98
Parsed label: L_80016A78:
Parsed instruction at 80016A78: addi r0 r3 0x1
Parsed instruction at 80016A7C: add r3 r5 r3
Parsed instruction at 80016A80: stw r0 0xc(r5)
Parsed instruction at 80016A84: li r4 0x0
Parsed instruction at 80016A88: stb r30 0x10(r3)
Parsed instruction at 80016A8C: lwz r3 0x8(r5)
Parsed instruction at 80016A90: addi r0 r3 0x1
Parsed instruction at 80016A94: stw r0 0x8(r5)
Parsed label: L_80016A98:
Parsed instruction at 80016A98: cmpwi r4 0x0
Parsed instruction at 80016A9C: bne .L_80016AC0
Parsed instruction at 80016AA0: clrlwi r0 r30 24
Parsed instruction at 80016AA4: cmplwi r0 0x90
Parsed instruction at 80016AA8: bne .L_80016AB8
Parsed instruction at 80016AAC: lwz r3 0xc(r1)
Parsed instruction at 80016AB0: bl fn_80017A04
Parsed instruction at 80016AB4: b .L_80016AC0
Parsed label: L_80016AB8:
Parsed instruction at 80016AB8: lwz r3 0xc(r1)
Parsed instruction at 80016ABC: bl fn_80017A94
Parsed label: L_80016AC0:
Parsed instruction at 80016AC0: lwz r3 0xc(r1)
Parsed instruction at 80016AC4: addi r4 r1 0x10
Parsed instruction at 80016AC8: li r5 0x2
Parsed instruction at 80016ACC: li r6 0x3
Parsed instruction at 80016AD0: li r7 0x1
Parsed instruction at 80016AD4: bl fn_80016878
Parsed instruction at 80016AD8: mr. r31 r3
Parsed instruction at 80016ADC: bne .L_80016AE8
Parsed instruction at 80016AE0: lwz r3 0x10(r1)
Parsed instruction at 80016AE4: bl fn_80014998
Parsed label: L_80016AE8:
Parsed instruction at 80016AE8: lwz r3 0x8(r1)
Parsed instruction at 80016AEC: bl fn_80014998
Parsed label: L_80016AF0:
Parsed instruction at 80016AF0: mr r3 r31
Parsed instruction at 80016AF4: lwz r31 0x1c(r1)
Parsed instruction at 80016AF8: lwz r30 0x18(r1)
Parsed instruction at 80016AFC: addi r1 r1 0x20
Parsed instruction at 80016B00: lwz r0 0x4(r1)
Parsed instruction at 80016B04: mtlr r0
Parsed instruction at 80016B08: blr 
End of function: fn_80016A34, 60 instructions
Parsed function: fn_80016B0C at 0x80016B0C
Parsed instruction at 80016B0C: lis r5 0xffff
Parsed instruction at 80016B10: ori r5 r5 0xfff1
Parsed instruction at 80016B14: and r5 r5 r3
Parsed instruction at 80016B18: subf r3 r5 r3
Parsed instruction at 80016B1C: add r4 r4 r3
Parsed label: L_80016B20:
Parsed instruction at 80016B20: dcbst r0 r5
Parsed instruction at 80016B24: dcbf r0 r5
Parsed instruction at 80016B28: sync 
Parsed instruction at 80016B2C: icbi r0 r5
Parsed instruction at 80016B30: addic r5 r5 0x8
Parsed instruction at 80016B34: subic. r4 r4 0x8
Parsed instruction at 80016B38: bge .L_80016B20
Parsed instruction at 80016B3C: isync 
Parsed instruction at 80016B40: blr 
End of function: fn_80016B0C, 15 instructions
Parsed function: fn_80016B44 at 0x80016B44
Parsed instruction at 80016B44: cmplwi r5 0x20
Parsed instruction at 80016B48: subi r6 r3 0x1
Parsed instruction at 80016B4C: clrlwi r0 r4 24
Parsed instruction at 80016B50: mr r7 r0
Parsed instruction at 80016B54: blt .L_80016BEC
Parsed instruction at 80016B58: nor r0 r6 r6
Parsed instruction at 80016B5C: clrlwi. r0 r0 30
Parsed instruction at 80016B60: mr r3 r0
Parsed instruction at 80016B64: beq .L_80016B7C
Parsed instruction at 80016B68: subf r5 r3 r5
Parsed instruction at 80016B6C: clrlwi r0 r7 24
Parsed label: L_80016B70:
Parsed instruction at 80016B70: subic. r3 r3 0x1
Parsed instruction at 80016B74: stbu r0 0x1(r6)
Parsed instruction at 80016B78: bne .L_80016B70
Parsed label: L_80016B7C:
Parsed instruction at 80016B7C: cmplwi r7 0x0
Parsed instruction at 80016B80: beq .L_80016B9C
Parsed instruction at 80016B84: slwi r3 r7 24
Parsed instruction at 80016B88: slwi r0 r7 16
Parsed instruction at 80016B8C: slwi r4 r7 8
Parsed instruction at 80016B90: or r0 r3 r0
Parsed instruction at 80016B94: or r0 r4 r0
Parsed instruction at 80016B98: or r7 r7 r0
Parsed label: L_80016B9C:
Parsed instruction at 80016B9C: srwi. r0 r5 5
Parsed instruction at 80016BA0: subi r3 r6 0x3
Parsed instruction at 80016BA4: beq .L_80016BD0
Parsed label: L_80016BA8:
Parsed instruction at 80016BA8: stw r7 0x4(r3)
Parsed instruction at 80016BAC: subic. r0 r0 0x1
Parsed instruction at 80016BB0: stw r7 0x8(r3)
Parsed instruction at 80016BB4: stw r7 0xc(r3)
Parsed instruction at 80016BB8: stw r7 0x10(r3)
Parsed instruction at 80016BBC: stw r7 0x14(r3)
Parsed instruction at 80016BC0: stw r7 0x18(r3)
Parsed instruction at 80016BC4: stw r7 0x1c(r3)
Parsed instruction at 80016BC8: stwu r7 0x20(r3)
Parsed instruction at 80016BCC: bne .L_80016BA8
Parsed label: L_80016BD0:
Parsed instruction at 80016BD0: extrwi. r0 r5 3 27
Parsed instruction at 80016BD4: beq .L_80016BE4
Parsed label: L_80016BD8:
Parsed instruction at 80016BD8: subic. r0 r0 0x1
Parsed instruction at 80016BDC: stwu r7 0x4(r3)
Parsed instruction at 80016BE0: bne .L_80016BD8
Parsed label: L_80016BE4:
Parsed instruction at 80016BE4: addi r6 r3 0x3
Parsed instruction at 80016BE8: clrlwi r5 r5 30
Parsed label: L_80016BEC:
Parsed instruction at 80016BEC: cmplwi r5 0x0
Parsed instruction at 80016BF0: beqlr 
Parsed instruction at 80016BF4: clrlwi r0 r7 24
Parsed label: L_80016BF8:
Parsed instruction at 80016BF8: subic. r5 r5 0x1
Parsed instruction at 80016BFC: stbu r0 0x1(r6)
Parsed instruction at 80016C00: bne .L_80016BF8
Parsed instruction at 80016C04: blr 
End of function: fn_80016B44, 58 instructions
Parsed function: fn_80016C08 at 0x80016C08
Parsed instruction at 80016C08: mfmsr r3
Parsed instruction at 80016C0C: blr 
End of function: fn_80016C08, 2 instructions
Parsed function: fn_80016C10 at 0x80016C10
Parsed instruction at 80016C10: mtmsr r3
Parsed instruction at 80016C14: blr 
End of function: fn_80016C10, 2 instructions
Parsed function: fn_80016C18 at 0x80016C18
Parsed instruction at 80016C18: mflr r0
Parsed instruction at 80016C1C: stw r0 0x4(r1)
Parsed instruction at 80016C20: stwu r1 -0x18(r1)
Parsed instruction at 80016C24: stw r31 0x14(r1)
Parsed instruction at 80016C28: stw r30 0x10(r1)
Parsed instruction at 80016C2C: stw r29 0xc(r1)
Parsed instruction at 80016C30: mr r30 r5
Parsed instruction at 80016C34: add r31 r4 r3
Parsed instruction at 80016C38: subi r31 r31 0x1
Parsed instruction at 80016C3C: cmplw r31 r3
Parsed instruction at 80016C40: li r5 0x700
Parsed instruction at 80016C44: bge .L_80016C50
Parsed instruction at 80016C48: li r3 0x700
Parsed instruction at 80016C4C: b .L_80016D34
Parsed label: L_80016C50:
Parsed instruction at 80016C50: lis r4 lbl_8001A630@ha
Parsed instruction at 80016C54: addi r4 r4 lbl_8001A630@l
Parsed instruction at 80016C58: li r6 0x0
Parsed instruction at 80016C5C: b .L_80016C60
Parsed label: L_80016C60:
Parsed instruction at 80016C60: b .L_80016C64
Parsed label: L_80016C64:
Parsed instruction at 80016C64: lwz r0 0x4(r4)
Parsed instruction at 80016C68: cmplw r3 r0
Parsed instruction at 80016C6C: bgt .L_80016D30
Parsed instruction at 80016C70: lwz r0 0x0(r4)
Parsed instruction at 80016C74: cmplw r31 r0
Parsed instruction at 80016C78: blt .L_80016D30
Parsed instruction at 80016C7C: clrlwi r0 r30 24
Parsed instruction at 80016C80: cmplwi r0 0x0
Parsed instruction at 80016C84: bne .L_80016C9C
Parsed instruction at 80016C88: slwi r0 r6 4
Parsed instruction at 80016C8C: add r4 r4 r0
Parsed instruction at 80016C90: lwz r0 0x8(r4)
Parsed instruction at 80016C94: cmpwi r0 0x0
Parsed instruction at 80016C98: beq .L_80016CC4
Parsed label: L_80016C9C:
Parsed instruction at 80016C9C: clrlwi r0 r30 24
Parsed instruction at 80016CA0: cmplwi r0 0x1
Parsed instruction at 80016CA4: bne .L_80016CCC
Parsed instruction at 80016CA8: lis r4 lbl_8001A630@ha
Parsed instruction at 80016CAC: addi r4 r4 lbl_8001A630@l
Parsed instruction at 80016CB0: slwi r0 r6 4
Parsed instruction at 80016CB4: add r4 r4 r0
Parsed instruction at 80016CB8: lwz r0 0xc(r4)
Parsed instruction at 80016CBC: cmpwi r0 0x0
Parsed instruction at 80016CC0: bne .L_80016CCC
Parsed label: L_80016CC4:
Parsed instruction at 80016CC4: li r5 0x700
Parsed instruction at 80016CC8: b .L_80016D30
Parsed label: L_80016CCC:
Parsed instruction at 80016CCC: lis r4 lbl_8001A630@ha
Parsed instruction at 80016CD0: slwi r29 r6 4
Parsed instruction at 80016CD4: addi r0 r4 lbl_8001A630@l
Parsed instruction at 80016CD8: add r4 r0 r29
Parsed instruction at 80016CDC: lwz r0 0x0(r4)
Parsed instruction at 80016CE0: li r5 0x0
Parsed instruction at 80016CE4: cmplw r3 r0
Parsed instruction at 80016CE8: bge .L_80016CFC
Parsed instruction at 80016CEC: mr r5 r30
Parsed instruction at 80016CF0: subf r4 r3 r0
Parsed instruction at 80016CF4: bl fn_80016C18
Parsed instruction at 80016CF8: mr r5 r3
Parsed label: L_80016CFC:
Parsed instruction at 80016CFC: cmpwi r5 0x0
Parsed instruction at 80016D00: bne .L_80016D30
Parsed instruction at 80016D04: lis r3 lbl_8001A630@ha
Parsed instruction at 80016D08: addi r0 r3 lbl_8001A630@l
Parsed instruction at 80016D0C: add r3 r0 r29
Parsed instruction at 80016D10: lwz r3 0x4(r3)
Parsed instruction at 80016D14: cmplw r31 r3
Parsed instruction at 80016D18: ble .L_80016D30
Parsed instruction at 80016D1C: mr r5 r30
Parsed instruction at 80016D20: subf r4 r3 r31
Parsed instruction at 80016D24: bl fn_80016C18
Parsed instruction at 80016D28: mr r5 r3
Parsed instruction at 80016D2C: b .L_80016D30
Parsed label: L_80016D30:
Parsed instruction at 80016D30: mr r3 r5
Parsed label: L_80016D34:
Parsed instruction at 80016D34: lwz r31 0x14(r1)
Parsed instruction at 80016D38: lwz r30 0x10(r1)
Parsed instruction at 80016D3C: lwz r29 0xc(r1)
Parsed instruction at 80016D40: addi r1 r1 0x18
Parsed instruction at 80016D44: lwz r0 0x4(r1)
Parsed instruction at 80016D48: mtlr r0
Parsed instruction at 80016D4C: blr 
End of function: fn_80016C18, 87 instructions
Parsed function: fn_80016D50 at 0x80016D50
Parsed instruction at 80016D50: mfmsr r8
Parsed instruction at 80016D54: li r10 0x0
Parsed label: L_80016D58:
Parsed instruction at 80016D58: cmpw r10 r5
Parsed instruction at 80016D5C: beq .L_80016D80
Parsed instruction at 80016D60: mtmsr r7
Parsed instruction at 80016D64: sync 
Parsed instruction at 80016D68: lbzx r9 r10 r4
Parsed instruction at 80016D6C: mtmsr r6
Parsed instruction at 80016D70: sync 
Parsed instruction at 80016D74: stbx r9 r10 r3
Parsed instruction at 80016D78: addi r10 r10 0x1
Parsed instruction at 80016D7C: b .L_80016D58
Parsed label: L_80016D80:
Parsed instruction at 80016D80: mtmsr r8
Parsed instruction at 80016D84: sync 
Parsed instruction at 80016D88: blr 
End of function: fn_80016D50, 17 instructions
Parsed function: fn_80016D8C at 0x80016D8C
Parsed instruction at 80016D8C: mflr r0
Parsed instruction at 80016D90: stw r0 0x4(r1)
Parsed instruction at 80016D94: stwu r1 -0x38(r1)
Parsed instruction at 80016D98: stmw r25 0x1c(r1)
Parsed instruction at 80016D9C: mr r26 r3
Parsed instruction at 80016DA0: mr r27 r4
Parsed instruction at 80016DA4: mr r28 r5
Parsed instruction at 80016DA8: mr r29 r7
Parsed instruction at 80016DAC: lis r3 gTRKExceptionStatus_8001BAA4@ha
Parsed instruction at 80016DB0: addi r5 r3 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 80016DB4: lwz r4 0x0(r5)
Parsed instruction at 80016DB8: addi r31 r5 0xd
Parsed instruction at 80016DBC: lwz r0 0x4(r5)
Parsed instruction at 80016DC0: li r30 0x0
Parsed instruction at 80016DC4: mr r3 r27
Parsed instruction at 80016DC8: stw r4 0x8(r1)
Parsed instruction at 80016DCC: stw r0 0xc(r1)
Parsed instruction at 80016DD0: lwz r4 0x8(r5)
Parsed instruction at 80016DD4: lwz r0 0xc(r5)
Parsed instruction at 80016DD8: stw r4 0x10(r1)
Parsed instruction at 80016DDC: stw r0 0x14(r1)
Parsed instruction at 80016DE0: stb r30 0x0(r31)
Parsed instruction at 80016DE4: bl fn_80018298
Parsed instruction at 80016DE8: cmpwi r29 0x0
Parsed instruction at 80016DEC: mr r25 r3
Parsed instruction at 80016DF0: beq .L_80016DF8
Parsed instruction at 80016DF4: b .L_80016DFC
Parsed label: L_80016DF8:
Parsed instruction at 80016DF8: li r30 0x1
Parsed label: L_80016DFC:
Parsed instruction at 80016DFC: lwz r4 0x0(r28)
Parsed instruction at 80016E00: mr r3 r25
Parsed instruction at 80016E04: mr r5 r30
Parsed instruction at 80016E08: bl fn_80016C18
Parsed instruction at 80016E0C: mr r30 r3
Parsed instruction at 80016E10: cmpwi r30 0x0
Parsed instruction at 80016E14: beq .L_80016E24
Parsed instruction at 80016E18: li r0 0x0
Parsed instruction at 80016E1C: stw r0 0x0(r28)
Parsed instruction at 80016E20: b .L_80016E98
Parsed label: L_80016E24:
Parsed instruction at 80016E24: bl fn_80016C08
Parsed instruction at 80016E28: lis r4 gTRKCPUState@ha
Parsed instruction at 80016E2C: cmpwi r29 0x0
Parsed instruction at 80016E30: addi r4 r4 gTRKCPUState@l
Parsed instruction at 80016E34: lwz r0 0x1f8(r4)
Parsed instruction at 80016E38: mr r8 r3
Parsed instruction at 80016E3C: rlwinm r0 r0 0 27 27
Parsed instruction at 80016E40: or r7 r8 r0
Parsed instruction at 80016E44: beq .L_80016E60
Parsed instruction at 80016E48: lwz r5 0x0(r28)
Parsed instruction at 80016E4C: mr r3 r26
Parsed instruction at 80016E50: mr r4 r25
Parsed instruction at 80016E54: mr r6 r8
Parsed instruction at 80016E58: bl fn_80016D50
Parsed instruction at 80016E5C: b .L_80016E98
Parsed label: L_80016E60:
Parsed instruction at 80016E60: lwz r5 0x0(r28)
Parsed instruction at 80016E64: mr r3 r25
Parsed instruction at 80016E68: mr r4 r26
Parsed instruction at 80016E6C: mr r6 r7
Parsed instruction at 80016E70: mr r7 r8
Parsed instruction at 80016E74: bl fn_80016D50
Parsed instruction at 80016E78: mr r3 r25
Parsed instruction at 80016E7C: lwz r4 0x0(r28)
Parsed instruction at 80016E80: bl fn_80016B0C
Parsed instruction at 80016E84: cmplw r27 r25
Parsed instruction at 80016E88: beq .L_80016E98
Parsed instruction at 80016E8C: mr r3 r27
Parsed instruction at 80016E90: lwz r4 0x0(r28)
Parsed instruction at 80016E94: bl fn_80016B0C
Parsed label: L_80016E98:
Parsed instruction at 80016E98: lbz r0 0x0(r31)
Parsed instruction at 80016E9C: cmplwi r0 0x0
Parsed instruction at 80016EA0: beq .L_80016EB0
Parsed instruction at 80016EA4: li r0 0x0
Parsed instruction at 80016EA8: stw r0 0x0(r28)
Parsed instruction at 80016EAC: li r30 0x702
Parsed label: L_80016EB0:
Parsed instruction at 80016EB0: lis r3 gTRKExceptionStatus_8001BAA4@ha
Parsed instruction at 80016EB4: lwz r4 0x8(r1)
Parsed instruction at 80016EB8: lwz r0 0xc(r1)
Parsed instruction at 80016EBC: addi r5 r3 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 80016EC0: mr r3 r30
Parsed instruction at 80016EC4: stw r4 0x0(r5)
Parsed instruction at 80016EC8: stw r0 0x4(r5)
Parsed instruction at 80016ECC: lwz r4 0x10(r1)
Parsed instruction at 80016ED0: lwz r0 0x14(r1)
Parsed instruction at 80016ED4: stw r4 0x8(r5)
Parsed instruction at 80016ED8: stw r0 0xc(r5)
Parsed instruction at 80016EDC: lmw r25 0x1c(r1)
Parsed instruction at 80016EE0: addi r1 r1 0x38
Parsed instruction at 80016EE4: lwz r0 0x4(r1)
Parsed instruction at 80016EE8: mtlr r0
Parsed instruction at 80016EEC: blr 
End of function: fn_80016D8C, 95 instructions
Parsed function: fn_80016EF0 at 0x80016EF0
Parsed instruction at 80016EF0: mflr r0
Parsed instruction at 80016EF4: stw r0 0x4(r1)
Parsed instruction at 80016EF8: stwu r1 -0x10(r1)
Parsed instruction at 80016EFC: li r0 0x4
Parsed instruction at 80016F00: addi r5 r1 0x8
Parsed instruction at 80016F04: stw r0 0x8(r1)
Parsed instruction at 80016F08: li r6 0x0
Parsed instruction at 80016F0C: li r7 0x1
Parsed instruction at 80016F10: bl fn_80016D8C
Parsed instruction at 80016F14: cmpwi r3 0x0
Parsed instruction at 80016F18: bne .L_80016F2C
Parsed instruction at 80016F1C: lwz r0 0x8(r1)
Parsed instruction at 80016F20: cmplwi r0 0x4
Parsed instruction at 80016F24: beq .L_80016F2C
Parsed instruction at 80016F28: li r3 0x700
Parsed label: L_80016F2C:
Parsed instruction at 80016F2C: addi r1 r1 0x10
Parsed instruction at 80016F30: lwz r0 0x4(r1)
Parsed instruction at 80016F34: mtlr r0
Parsed instruction at 80016F38: blr 
End of function: fn_80016EF0, 20 instructions
Parsed function: fn_80016F3C at 0x80016F3C
Parsed instruction at 80016F3C: mflr r0
Parsed instruction at 80016F40: stw r0 0x4(r1)
Parsed instruction at 80016F44: stwu r1 -0x20(r1)
Parsed instruction at 80016F48: stw r31 0x1c(r1)
Parsed instruction at 80016F4C: stw r30 0x18(r1)
Parsed instruction at 80016F50: mr r31 r6
Parsed instruction at 80016F54: cmplwi r4 0x24
Parsed instruction at 80016F58: ble .L_80016F64
Parsed instruction at 80016F5C: li r3 0x701
Parsed instruction at 80016F60: b .L_80017020
Parsed label: L_80016F64:
Parsed instruction at 80016F64: lis r6 gTRKExceptionStatus_8001BAA4@ha
Parsed instruction at 80016F68: cmpwi r7 0x0
Parsed instruction at 80016F6C: addi r8 r6 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 80016F70: lwz r0 0x0(r8)
Parsed instruction at 80016F74: subf r4 r3 r4
Parsed instruction at 80016F78: lwz r7 0x4(r8)
Parsed instruction at 80016F7C: addi r9 r4 0x1
Parsed instruction at 80016F80: lis r4 gTRKCPUState@ha
Parsed instruction at 80016F84: stw r0 0x8(r1)
Parsed instruction at 80016F88: addi r0 r4 gTRKCPUState@l
Parsed instruction at 80016F8C: slwi r3 r3 2
Parsed instruction at 80016F90: addi r30 r8 0xd
Parsed instruction at 80016F94: stw r7 0xc(r1)
Parsed instruction at 80016F98: add r4 r0 r3
Parsed instruction at 80016F9C: lwz r7 0x8(r8)
Parsed instruction at 80016FA0: li r6 0x0
Parsed instruction at 80016FA4: lwz r3 0xc(r8)
Parsed instruction at 80016FA8: slwi r0 r9 2
Parsed instruction at 80016FAC: stw r7 0x10(r1)
Parsed instruction at 80016FB0: mr r7 r9
Parsed instruction at 80016FB4: stw r3 0x14(r1)
Parsed instruction at 80016FB8: stb r6 0x0(r30)
Parsed instruction at 80016FBC: stw r0 0x0(r31)
Parsed instruction at 80016FC0: beq .L_80016FD4
Parsed instruction at 80016FC4: mr r3 r5
Parsed instruction at 80016FC8: mr r5 r7
Parsed instruction at 80016FCC: bl fn_80014D48
Parsed instruction at 80016FD0: b .L_80016FE0
Parsed label: L_80016FD4:
Parsed instruction at 80016FD4: mr r3 r5
Parsed instruction at 80016FD8: mr r5 r7
Parsed instruction at 80016FDC: bl fn_8001501C
Parsed label: L_80016FE0:
Parsed instruction at 80016FE0: lbz r0 0x0(r30)
Parsed instruction at 80016FE4: cmplwi r0 0x0
Parsed instruction at 80016FE8: beq .L_80016FF8
Parsed instruction at 80016FEC: li r0 0x0
Parsed instruction at 80016FF0: stw r0 0x0(r31)
Parsed instruction at 80016FF4: li r3 0x702
Parsed label: L_80016FF8:
Parsed instruction at 80016FF8: lis r5 gTRKExceptionStatus_8001BAA4@ha
Parsed instruction at 80016FFC: lwz r4 0x8(r1)
Parsed instruction at 80017000: lwz r0 0xc(r1)
Parsed instruction at 80017004: addi r5 r5 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 80017008: stw r4 0x0(r5)
Parsed instruction at 8001700C: stw r0 0x4(r5)
Parsed instruction at 80017010: lwz r4 0x10(r1)
Parsed instruction at 80017014: lwz r0 0x14(r1)
Parsed instruction at 80017018: stw r4 0x8(r5)
Parsed instruction at 8001701C: stw r0 0xc(r5)
Parsed label: L_80017020:
Parsed instruction at 80017020: lwz r31 0x1c(r1)
Parsed instruction at 80017024: lwz r30 0x18(r1)
Parsed instruction at 80017028: addi r1 r1 0x20
Parsed instruction at 8001702C: lwz r0 0x4(r1)
Parsed instruction at 80017030: mtlr r0
Parsed instruction at 80017034: blr 
End of function: fn_80016F3C, 68 instructions
Parsed function: fn_80017038 at 0x80017038
Parsed instruction at 80017038: mflr r0
Parsed instruction at 8001703C: stw r0 0x4(r1)
Parsed instruction at 80017040: stwu r1 -0x40(r1)
Parsed instruction at 80017044: stmw r25 0x24(r1)
Parsed instruction at 80017048: mr r25 r3
Parsed instruction at 8001704C: mr r28 r4
Parsed instruction at 80017050: mr r29 r5
Parsed instruction at 80017054: mr r30 r6
Parsed instruction at 80017058: mr r31 r7
Parsed instruction at 8001705C: cmplwi r28 0x21
Parsed instruction at 80017060: ble .L_8001706C
Parsed instruction at 80017064: li r3 0x701
Parsed instruction at 80017068: b .L_8001716C
Parsed label: L_8001706C:
Parsed instruction at 8001706C: lis r3 gTRKExceptionStatus_8001BAA4@ha
Parsed instruction at 80017070: addi r4 r3 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 80017074: lwz r3 0x0(r4)
Parsed instruction at 80017078: addi r26 r4 0xd
Parsed instruction at 8001707C: lwz r0 0x4(r4)
Parsed instruction at 80017080: li r27 0x0
Parsed instruction at 80017084: stw r3 0x8(r1)
Parsed instruction at 80017088: stw r0 0xc(r1)
Parsed instruction at 8001708C: lwz r3 0x8(r4)
Parsed instruction at 80017090: lwz r0 0xc(r4)
Parsed instruction at 80017094: stw r3 0x10(r1)
Parsed instruction at 80017098: stw r0 0x14(r1)
Parsed instruction at 8001709C: stb r27 0x0(r26)
Parsed instruction at 800170A0: bl fn_80016C08
Parsed instruction at 800170A4: ori r3 r3 0x2000
Parsed instruction at 800170A8: bl fn_80016C10
Parsed instruction at 800170AC: stw r27 0x0(r30)
Parsed instruction at 800170B0: mr r27 r25
Parsed instruction at 800170B4: li r3 0x0
Parsed instruction at 800170B8: b .L_800170BC
Parsed label: L_800170BC:
Parsed instruction at 800170BC: b .L_800170C0
Parsed label: L_800170C0:
Parsed instruction at 800170C0: b .L_8001711C
Parsed label: L_800170C4:
Parsed instruction at 800170C4: cmpwi r31 0x0
Parsed instruction at 800170C8: beq .L_800170F0
Parsed instruction at 800170CC: mr r4 r27
Parsed instruction at 800170D0: addi r3 r1 0x18
Parsed instruction at 800170D4: mr r5 r31
Parsed instruction at 800170D8: bl fn_80017FEC
Parsed instruction at 800170DC: lwz r5 0x18(r1)
Parsed instruction at 800170E0: mr r3 r29
Parsed instruction at 800170E4: lwz r6 0x1c(r1)
Parsed instruction at 800170E8: bl fn_80014C58
Parsed instruction at 800170EC: b .L_8001710C
Parsed label: L_800170F0:
Parsed instruction at 800170F0: mr r3 r29
Parsed instruction at 800170F4: addi r4 r1 0x18
Parsed instruction at 800170F8: bl fn_80014EF8
Parsed instruction at 800170FC: mr r4 r27
Parsed instruction at 80017100: addi r3 r1 0x18
Parsed instruction at 80017104: mr r5 r31
Parsed instruction at 80017108: bl fn_80017FEC
Parsed label: L_8001710C:
Parsed instruction at 8001710C: lwz r4 0x0(r30)
Parsed instruction at 80017110: addi r27 r27 0x1
Parsed instruction at 80017114: addi r0 r4 0x8
Parsed instruction at 80017118: stw r0 0x0(r30)
Parsed label: L_8001711C:
Parsed instruction at 8001711C: cmplw r27 r28
Parsed instruction at 80017120: bgt .L_8001712C
Parsed instruction at 80017124: cmpwi r3 0x0
Parsed instruction at 80017128: beq .L_800170C4
Parsed label: L_8001712C:
Parsed instruction at 8001712C: lbz r0 0x0(r26)
Parsed instruction at 80017130: cmplwi r0 0x0
Parsed instruction at 80017134: beq .L_80017144
Parsed instruction at 80017138: li r0 0x0
Parsed instruction at 8001713C: stw r0 0x0(r30)
Parsed instruction at 80017140: li r3 0x702
Parsed label: L_80017144:
Parsed instruction at 80017144: lis r5 gTRKExceptionStatus_8001BAA4@ha
Parsed instruction at 80017148: lwz r4 0x8(r1)
Parsed instruction at 8001714C: lwz r0 0xc(r1)
Parsed instruction at 80017150: addi r5 r5 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 80017154: stw r4 0x0(r5)
Parsed instruction at 80017158: stw r0 0x4(r5)
Parsed instruction at 8001715C: lwz r4 0x10(r1)
Parsed instruction at 80017160: lwz r0 0x14(r1)
Parsed instruction at 80017164: stw r4 0x8(r5)
Parsed instruction at 80017168: stw r0 0xc(r5)
Parsed label: L_8001716C:
Parsed instruction at 8001716C: lmw r25 0x24(r1)
Parsed instruction at 80017170: addi r1 r1 0x40
Parsed instruction at 80017174: lwz r0 0x4(r1)
Parsed instruction at 80017178: mtlr r0
Parsed instruction at 8001717C: blr 
End of function: fn_80017038, 92 instructions
Parsed function: fn_80017180 at 0x80017180
Parsed instruction at 80017180: mflr r0
Parsed instruction at 80017184: stw r0 0x4(r1)
Parsed instruction at 80017188: stwu r1 -0x20(r1)
Parsed instruction at 8001718C: stw r31 0x1c(r1)
Parsed instruction at 80017190: stw r30 0x18(r1)
Parsed instruction at 80017194: mr r30 r6
Parsed instruction at 80017198: cmplwi r4 0x60
Parsed instruction at 8001719C: ble .L_800171A8
Parsed instruction at 800171A0: li r3 0x701
Parsed instruction at 800171A4: b .L_800172E0
Parsed label: L_800171A8:
Parsed instruction at 800171A8: lis r6 gTRKExceptionStatus_8001BAA4@ha
Parsed instruction at 800171AC: cmplw r3 r4
Parsed instruction at 800171B0: addi r9 r6 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 800171B4: lwz r8 0x0(r9)
Parsed instruction at 800171B8: addi r31 r9 0xd
Parsed instruction at 800171BC: lwz r6 0x4(r9)
Parsed instruction at 800171C0: li r0 0x0
Parsed instruction at 800171C4: stw r8 0x8(r1)
Parsed instruction at 800171C8: stw r6 0xc(r1)
Parsed instruction at 800171CC: lwz r8 0x8(r9)
Parsed instruction at 800171D0: lwz r6 0xc(r9)
Parsed instruction at 800171D4: stw r8 0x10(r1)
Parsed instruction at 800171D8: stw r6 0x14(r1)
Parsed instruction at 800171DC: stb r0 0x0(r31)
Parsed instruction at 800171E0: stw r0 0x0(r30)
Parsed instruction at 800171E4: bgt .L_800172A0
Parsed instruction at 800171E8: subf r4 r3 r4
Parsed instruction at 800171EC: lwz r0 0x0(r30)
Parsed instruction at 800171F0: addi r8 r4 0x1
Parsed instruction at 800171F4: cmpwi r7 0x0
Parsed instruction at 800171F8: slwi r6 r8 2
Parsed instruction at 800171FC: lis r4 gTRKCPUState@ha
Parsed instruction at 80017200: add r0 r0 r6
Parsed instruction at 80017204: stw r0 0x0(r30)
Parsed instruction at 80017208: addi r7 r4 gTRKCPUState@l
Parsed instruction at 8001720C: slwi r0 r3 2
Parsed instruction at 80017210: add r4 r7 r0
Parsed instruction at 80017214: addi r4 r4 0x1a8
Parsed instruction at 80017218: beq .L_8001722C
Parsed instruction at 8001721C: mr r3 r5
Parsed instruction at 80017220: mr r5 r8
Parsed instruction at 80017224: bl fn_80014D48
Parsed instruction at 80017228: b .L_800172A0
Parsed label: L_8001722C:
Parsed instruction at 8001722C: addi r0 r7 0x1ec
Parsed instruction at 80017230: cmplw r4 r0
Parsed instruction at 80017234: bgt .L_8001725C
Parsed instruction at 80017238: subi r3 r6 0x4
Parsed instruction at 8001723C: addi r0 r7 0x1e8
Parsed instruction at 80017240: add r3 r4 r3
Parsed instruction at 80017244: cmplw r3 r0
Parsed instruction at 80017248: blt .L_8001725C
Parsed instruction at 8001724C: lis r3 lbl_8001BA98@ha
Parsed instruction at 80017250: addi r3 r3 lbl_8001BA98@l
Parsed instruction at 80017254: li r0 0x1
Parsed instruction at 80017258: stb r0 0x0(r3)
Parsed label: L_8001725C:
Parsed instruction at 8001725C: lis r3 gTRKCPUState@ha
Parsed instruction at 80017260: addi r3 r3 gTRKCPUState@l
Parsed instruction at 80017264: addi r6 r3 0x278
Parsed instruction at 80017268: cmplw r4 r6
Parsed instruction at 8001726C: bgt .L_80017294
Parsed instruction at 80017270: slwi r3 r8 2
Parsed instruction at 80017274: subi r0 r3 0x4
Parsed instruction at 80017278: add r0 r4 r0
Parsed instruction at 8001727C: cmplw r0 r6
Parsed instruction at 80017280: blt .L_80017294
Parsed instruction at 80017284: lis r3 lbl_8001BA98@ha
Parsed instruction at 80017288: addi r3 r3 lbl_8001BA98@l
Parsed instruction at 8001728C: li r0 0x1
Parsed instruction at 80017290: stb r0 0x1(r3)
Parsed label: L_80017294:
Parsed instruction at 80017294: mr r3 r5
Parsed instruction at 80017298: mr r5 r8
Parsed instruction at 8001729C: bl fn_8001501C
Parsed label: L_800172A0:
Parsed instruction at 800172A0: lbz r0 0x0(r31)
Parsed instruction at 800172A4: cmplwi r0 0x0
Parsed instruction at 800172A8: beq .L_800172B8
Parsed instruction at 800172AC: li r0 0x0
Parsed instruction at 800172B0: stw r0 0x0(r30)
Parsed instruction at 800172B4: li r3 0x702
Parsed label: L_800172B8:
Parsed instruction at 800172B8: lis r5 gTRKExceptionStatus_8001BAA4@ha
Parsed instruction at 800172BC: lwz r4 0x8(r1)
Parsed instruction at 800172C0: lwz r0 0xc(r1)
Parsed instruction at 800172C4: addi r5 r5 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 800172C8: stw r4 0x0(r5)
Parsed instruction at 800172CC: stw r0 0x4(r5)
Parsed instruction at 800172D0: lwz r4 0x10(r1)
Parsed instruction at 800172D4: lwz r0 0x14(r1)
Parsed instruction at 800172D8: stw r4 0x8(r5)
Parsed instruction at 800172DC: stw r0 0xc(r5)
Parsed label: L_800172E0:
Parsed instruction at 800172E0: lwz r31 0x1c(r1)
Parsed instruction at 800172E4: lwz r30 0x18(r1)
Parsed instruction at 800172E8: addi r1 r1 0x20
Parsed instruction at 800172EC: lwz r0 0x4(r1)
Parsed instruction at 800172F0: mtlr r0
Parsed instruction at 800172F4: blr 
End of function: fn_80017180, 101 instructions
Parsed function: fn_800172F8 at 0x800172F8
Parsed instruction at 800172F8: mflr r0
Parsed instruction at 800172FC: stw r0 0x4(r1)
Parsed instruction at 80017300: stwu r1 -0x40(r1)
Parsed instruction at 80017304: stmw r25 0x24(r1)
Parsed instruction at 80017308: mr r25 r3
Parsed instruction at 8001730C: mr r27 r4
Parsed instruction at 80017310: mr r28 r5
Parsed instruction at 80017314: mr r29 r6
Parsed instruction at 80017318: mr r30 r7
Parsed instruction at 8001731C: cmplwi r27 0x1f
Parsed instruction at 80017320: ble .L_8001732C
Parsed instruction at 80017324: li r3 0x701
Parsed instruction at 80017328: b .L_80017460
Parsed label: L_8001732C:
Parsed instruction at 8001732C: lis r4 gTRKExceptionStatus_8001BAA4@ha
Parsed instruction at 80017330: addi r3 r1 0x8
Parsed instruction at 80017334: addi r7 r4 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 80017338: lwz r5 0x0(r7)
Parsed instruction at 8001733C: addi r31 r7 0xd
Parsed instruction at 80017340: lwz r0 0x4(r7)
Parsed instruction at 80017344: li r26 0x0
Parsed instruction at 80017348: li r4 0x398
Parsed instruction at 8001734C: stw r5 0xc(r1)
Parsed instruction at 80017350: li r5 0x1
Parsed instruction at 80017354: stw r0 0x10(r1)
Parsed instruction at 80017358: lwz r6 0x8(r7)
Parsed instruction at 8001735C: lwz r0 0xc(r7)
Parsed instruction at 80017360: stw r6 0x14(r1)
Parsed instruction at 80017364: stw r0 0x18(r1)
Parsed instruction at 80017368: stb r26 0x0(r31)
Parsed instruction at 8001736C: bl fn_80017EC4
Parsed instruction at 80017370: lwz r0 0x8(r1)
Parsed instruction at 80017374: addi r3 r1 0x8
Parsed instruction at 80017378: li r4 0x398
Parsed instruction at 8001737C: oris r0 r0 0xa000
Parsed instruction at 80017380: stw r0 0x8(r1)
Parsed instruction at 80017384: li r5 0x0
Parsed instruction at 80017388: bl fn_80017EC4
Parsed instruction at 8001738C: stw r26 0x8(r1)
Parsed instruction at 80017390: addi r3 r1 0x8
Parsed instruction at 80017394: li r4 0x390
Parsed instruction at 80017398: li r5 0x0
Parsed instruction at 8001739C: bl fn_80017EC4
Parsed instruction at 800173A0: stw r26 0x0(r29)
Parsed instruction at 800173A4: mr r26 r25
Parsed instruction at 800173A8: li r3 0x0
Parsed instruction at 800173AC: b .L_800173B0
Parsed label: L_800173B0:
Parsed instruction at 800173B0: b .L_800173B4
Parsed label: L_800173B4:
Parsed instruction at 800173B4: b .L_80017410
Parsed label: L_800173B8:
Parsed instruction at 800173B8: cmpwi r30 0x0
Parsed instruction at 800173BC: beq .L_800173E4
Parsed instruction at 800173C0: mr r4 r26
Parsed instruction at 800173C4: addi r3 r1 0x1c
Parsed instruction at 800173C8: mr r5 r30
Parsed instruction at 800173CC: bl fn_80017F74
Parsed instruction at 800173D0: lwz r5 0x1c(r1)
Parsed instruction at 800173D4: mr r3 r28
Parsed instruction at 800173D8: lwz r6 0x20(r1)
Parsed instruction at 800173DC: bl fn_80014C58
Parsed instruction at 800173E0: b .L_80017400
Parsed label: L_800173E4:
Parsed instruction at 800173E4: mr r3 r28
Parsed instruction at 800173E8: addi r4 r1 0x1c
Parsed instruction at 800173EC: bl fn_80014EF8
Parsed instruction at 800173F0: mr r4 r26
Parsed instruction at 800173F4: addi r3 r1 0x1c
Parsed instruction at 800173F8: mr r5 r30
Parsed instruction at 800173FC: bl fn_80017F74
Parsed label: L_80017400:
Parsed instruction at 80017400: lwz r4 0x0(r29)
Parsed instruction at 80017404: addi r26 r26 0x1
Parsed instruction at 80017408: addi r0 r4 0x8
Parsed instruction at 8001740C: stw r0 0x0(r29)
Parsed label: L_80017410:
Parsed instruction at 80017410: cmplw r26 r27
Parsed instruction at 80017414: bgt .L_80017420
Parsed instruction at 80017418: cmpwi r3 0x0
Parsed instruction at 8001741C: beq .L_800173B8
Parsed label: L_80017420:
Parsed instruction at 80017420: lbz r0 0x0(r31)
Parsed instruction at 80017424: cmplwi r0 0x0
Parsed instruction at 80017428: beq .L_80017438
Parsed instruction at 8001742C: li r0 0x0
Parsed instruction at 80017430: stw r0 0x0(r29)
Parsed instruction at 80017434: li r3 0x702
Parsed label: L_80017438:
Parsed instruction at 80017438: lis r5 gTRKExceptionStatus_8001BAA4@ha
Parsed instruction at 8001743C: lwz r4 0xc(r1)
Parsed instruction at 80017440: lwz r0 0x10(r1)
Parsed instruction at 80017444: addi r5 r5 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 80017448: stw r4 0x0(r5)
Parsed instruction at 8001744C: stw r0 0x4(r5)
Parsed instruction at 80017450: lwz r4 0x14(r1)
Parsed instruction at 80017454: lwz r0 0x18(r1)
Parsed instruction at 80017458: stw r4 0x8(r5)
Parsed instruction at 8001745C: stw r0 0xc(r5)
Parsed label: L_80017460:
Parsed instruction at 80017460: lmw r25 0x24(r1)
Parsed instruction at 80017464: addi r1 r1 0x40
Parsed instruction at 80017468: lwz r0 0x4(r1)
Parsed instruction at 8001746C: mtlr r0
Parsed instruction at 80017470: blr 
End of function: fn_800172F8, 105 instructions
Parsed function: fn_80017474 at 0x80017474
Parsed instruction at 80017474: li r0 0x0
Parsed instruction at 80017478: stb r0 0x0(r3)
Parsed instruction at 8001747C: li r0 0x8
Parsed instruction at 80017480: li r4 0x1
Parsed instruction at 80017484: stb r0 0x1(r3)
Parsed instruction at 80017488: li r0 0xa
Parsed instruction at 8001748C: stb r4 0x2(r3)
Parsed instruction at 80017490: stb r0 0x3(r3)
Parsed instruction at 80017494: li r3 0x0
Parsed instruction at 80017498: blr 
End of function: fn_80017474, 10 instructions
Parsed function: fn_8001749C at 0x8001749C
Parsed instruction at 8001749C: li r0 0x7a
Parsed instruction at 800174A0: stb r0 0x0(r3)
Parsed instruction at 800174A4: li r7 0x0
Parsed instruction at 800174A8: li r0 0x4f
Parsed instruction at 800174AC: stb r7 0x1(r3)
Parsed instruction at 800174B0: li r6 0x7
Parsed instruction at 800174B4: li r5 0x1
Parsed instruction at 800174B8: stb r0 0x2(r3)
Parsed instruction at 800174BC: li r4 0x3
Parsed instruction at 800174C0: li r0 0x80
Parsed instruction at 800174C4: stb r6 0x3(r3)
Parsed instruction at 800174C8: stb r7 0x4(r3)
Parsed instruction at 800174CC: stb r7 0x5(r3)
Parsed instruction at 800174D0: stb r7 0x6(r3)
Parsed instruction at 800174D4: stb r7 0x7(r3)
Parsed instruction at 800174D8: stb r7 0x8(r3)
Parsed instruction at 800174DC: stb r7 0x9(r3)
Parsed instruction at 800174E0: stb r7 0xa(r3)
Parsed instruction at 800174E4: stb r7 0xb(r3)
Parsed instruction at 800174E8: stb r7 0xc(r3)
Parsed instruction at 800174EC: stb r7 0xd(r3)
Parsed instruction at 800174F0: stb r7 0xe(r3)
Parsed instruction at 800174F4: stb r7 0xf(r3)
Parsed instruction at 800174F8: stb r5 0x10(r3)
Parsed instruction at 800174FC: stb r7 0x11(r3)
Parsed instruction at 80017500: stb r4 0x12(r3)
Parsed instruction at 80017504: stb r7 0x13(r3)
Parsed instruction at 80017508: stb r7 0x14(r3)
Parsed instruction at 8001750C: stb r7 0x15(r3)
Parsed instruction at 80017510: stb r7 0x16(r3)
Parsed instruction at 80017514: stb r7 0x17(r3)
Parsed instruction at 80017518: stb r7 0x18(r3)
Parsed instruction at 8001751C: stb r7 0x19(r3)
Parsed instruction at 80017520: stb r4 0x1a(r3)
Parsed instruction at 80017524: stb r7 0x1b(r3)
Parsed instruction at 80017528: stb r7 0x1c(r3)
Parsed instruction at 8001752C: stb r7 0x1d(r3)
Parsed instruction at 80017530: stb r7 0x1e(r3)
Parsed instruction at 80017534: stb r0 0x1f(r3)
Parsed instruction at 80017538: li r3 0x0
Parsed instruction at 8001753C: blr 
End of function: fn_8001749C, 41 instructions
Parsed function: fn_80017540 at 0x80017540
Parsed instruction at 80017540: mflr r0
Parsed instruction at 80017544: stw r0 0x4(r1)
Parsed instruction at 80017548: stwu r1 -0x10(r1)
Parsed instruction at 8001754C: stw r31 0xc(r1)
Parsed instruction at 80017550: mr r31 r3
Parsed instruction at 80017554: li r0 0x0
Parsed instruction at 80017558: stb r0 0x0(r31)
Parsed instruction at 8001755C: bl fn_80018794
Parsed instruction at 80017560: stb r3 0x1(r31)
Parsed instruction at 80017564: lis r3 lbl_8001CE78@ha
Parsed instruction at 80017568: addi r3 r3 lbl_8001CE78@l
Parsed instruction at 8001756C: lwz r3 0x0(r3)
Parsed instruction at 80017570: li r4 0x4
Parsed instruction at 80017574: li r0 0x8
Parsed instruction at 80017578: clrlwi r3 r3 24
Parsed instruction at 8001757C: stb r3 0x2(r31)
Parsed instruction at 80017580: li r3 0x0
Parsed instruction at 80017584: stb r4 0x3(r31)
Parsed instruction at 80017588: stb r0 0x4(r31)
Parsed instruction at 8001758C: stb r4 0x5(r31)
Parsed instruction at 80017590: stb r0 0x6(r31)
Parsed instruction at 80017594: lwz r31 0xc(r1)
Parsed instruction at 80017598: addi r1 r1 0x10
Parsed instruction at 8001759C: lwz r0 0x4(r1)
Parsed instruction at 800175A0: mtlr r0
Parsed instruction at 800175A4: blr 
End of function: fn_80017540, 26 instructions
Parsed function: TRKInterruptHandler at 0x800175A8
Parsed instruction at 800175A8: mtsrr0 r2
Parsed instruction at 800175AC: mtsrr1 r4
Parsed instruction at 800175B0: mfsprg r4 3
Parsed instruction at 800175B4: mfcr r2
Parsed instruction at 800175B8: mtsprg 3 r2
Parsed instruction at 800175BC: lis r2 gTRKState@h
Parsed instruction at 800175C0: ori r2 r2 gTRKState@l
Parsed instruction at 800175C4: lwz r2 0x8c(r2)
Parsed instruction at 800175C8: ori r2 r2 0x8002
Parsed instruction at 800175CC: xori r2 r2 0x8002
Parsed instruction at 800175D0: sync 
Parsed instruction at 800175D4: mtmsr r2
Parsed instruction at 800175D8: sync 
Parsed instruction at 800175DC: lis r2 TRK_saved_exceptionID_8001E850@h
Parsed instruction at 800175E0: ori r2 r2 TRK_saved_exceptionID_8001E850@l
Parsed instruction at 800175E4: sth r3 0x0(r2)
Parsed instruction at 800175E8: cmpwi r3 0x500
Parsed instruction at 800175EC: bne .L_80017670
Parsed instruction at 800175F0: lis r2 gTRKCPUState@h
Parsed instruction at 800175F4: ori r2 r2 gTRKCPUState@l
Parsed instruction at 800175F8: mflr r3
Parsed instruction at 800175FC: stw r3 0x42c(r2)
Parsed instruction at 80017600: bl TRKUARTInterruptHandler
Parsed instruction at 80017604: lis r2 gTRKCPUState@h
Parsed instruction at 80017608: ori r2 r2 gTRKCPUState@l
Parsed instruction at 8001760C: lwz r3 0x42c(r2)
Parsed instruction at 80017610: mtlr r3
Parsed instruction at 80017614: lis r2 gTRKState@h
Parsed instruction at 80017618: ori r2 r2 gTRKState@l
Parsed instruction at 8001761C: lwz r2 0xa0(r2)
Parsed instruction at 80017620: lbz r2 0x0(r2)
Parsed instruction at 80017624: cmpwi r2 0x0
Parsed instruction at 80017628: beq .L_80017654
Parsed instruction at 8001762C: lis r2 gTRKExceptionStatus_8001BAA4@h
Parsed instruction at 80017630: ori r2 r2 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 80017634: lbz r2 0xc(r2)
Parsed instruction at 80017638: cmpwi r2 0x1
Parsed instruction at 8001763C: beq .L_80017654
Parsed instruction at 80017640: lis r2 gTRKState@h
Parsed instruction at 80017644: ori r2 r2 gTRKState@l
Parsed instruction at 80017648: li r3 0x1
Parsed instruction at 8001764C: stb r3 0x9c(r2)
Parsed instruction at 80017650: b .L_80017670
Parsed label: L_80017654:
Parsed instruction at 80017654: lis r2 gTRKSaveState@h
Parsed instruction at 80017658: ori r2 r2 gTRKSaveState@l
Parsed instruction at 8001765C: lwz r3 0x88(r2)
Parsed instruction at 80017660: mtcrf 255 r3
Parsed instruction at 80017664: lwz r3 0xc(r2)
Parsed instruction at 80017668: lwz r2 0x8(r2)
Parsed instruction at 8001766C: rfi 
Parsed label: L_80017670:
Parsed instruction at 80017670: lis r2 TRK_saved_exceptionID_8001E850@h
Parsed instruction at 80017674: ori r2 r2 TRK_saved_exceptionID_8001E850@l
Parsed instruction at 80017678: lhz r3 0x0(r2)
Parsed instruction at 8001767C: lis r2 gTRKExceptionStatus_8001BAA4@h
Parsed instruction at 80017680: ori r2 r2 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 80017684: lbz r2 0xc(r2)
Parsed instruction at 80017688: cmpwi r2 0x0
Parsed instruction at 8001768C: bne TRKExceptionHandler
Parsed instruction at 80017690: lis r2 gTRKCPUState@h
Parsed instruction at 80017694: ori r2 r2 gTRKCPUState@l
Parsed instruction at 80017698: stw r0 0x0(r2)
Parsed instruction at 8001769C: stw r1 0x4(r2)
Parsed instruction at 800176A0: mfsprg r0 1
Parsed instruction at 800176A4: stw r0 0x8(r2)
Parsed instruction at 800176A8: sth r3 0x2f8(r2)
Parsed instruction at 800176AC: sth r3 0x2fa(r2)
Parsed instruction at 800176B0: mfsprg r0 2
Parsed instruction at 800176B4: stw r0 0xc(r2)
Parsed instruction at 800176B8: stmw r4 0x10(r2)
Parsed instruction at 800176BC: mfsrr0 r27
Parsed instruction at 800176C0: mflr r28
Parsed instruction at 800176C4: mfsprg r29 3
Parsed instruction at 800176C8: mfctr r30
Parsed instruction at 800176CC: mfxer r31
Parsed instruction at 800176D0: stmw r27 0x80(r2)
Parsed instruction at 800176D4: bl TRKSaveExtended1Block
Parsed instruction at 800176D8: lis r2 gTRKExceptionStatus_8001BAA4@h
Parsed instruction at 800176DC: ori r2 r2 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 800176E0: li r3 0x1
Parsed instruction at 800176E4: stb r3 0xc(r2)
Parsed instruction at 800176E8: lis r2 gTRKState@h
Parsed instruction at 800176EC: ori r2 r2 gTRKState@l
Parsed instruction at 800176F0: lwz r0 0x8c(r2)
Parsed instruction at 800176F4: sync 
Parsed instruction at 800176F8: mtmsr r0
Parsed instruction at 800176FC: sync 
Parsed instruction at 80017700: lwz r0 0x80(r2)
Parsed instruction at 80017704: mtlr r0
Parsed instruction at 80017708: lwz r0 0x84(r2)
Parsed instruction at 8001770C: mtctr r0
Parsed instruction at 80017710: lwz r0 0x88(r2)
Parsed instruction at 80017714: mtxer r0
Parsed instruction at 80017718: lwz r0 0x94(r2)
Parsed instruction at 8001771C: mtdsisr r0
Parsed instruction at 80017720: lwz r0 0x90(r2)
Parsed instruction at 80017724: mtdar r0
Parsed instruction at 80017728: lmw r3 0xc(r2)
Parsed instruction at 8001772C: lwz r0 0x0(r2)
Parsed instruction at 80017730: lwz r1 0x4(r2)
Parsed instruction at 80017734: lwz r2 0x8(r2)
Parsed instruction at 80017738: b TRKPostInterruptEvent
End of function: TRKInterruptHandler, 103 instructions
Parsed function: TRKExceptionHandler at 0x8001773C
Parsed instruction at 8001773C: lis r2 gTRKExceptionStatus_8001BAA4@h
Parsed instruction at 80017740: ori r2 r2 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 80017744: sth r3 0x8(r2)
Parsed instruction at 80017748: mfsrr0 r3
Parsed instruction at 8001774C: stw r3 0x0(r2)
Parsed instruction at 80017750: lhz r3 0x8(r2)
Parsed instruction at 80017754: cmpwi r3 0x200
Parsed instruction at 80017758: beq .L_800177A8
Parsed instruction at 8001775C: cmpwi r3 0x300
Parsed instruction at 80017760: beq .L_800177A8
Parsed instruction at 80017764: cmpwi r3 0x400
Parsed instruction at 80017768: beq .L_800177A8
Parsed instruction at 8001776C: cmpwi r3 0x600
Parsed instruction at 80017770: beq .L_800177A8
Parsed instruction at 80017774: cmpwi r3 0x700
Parsed instruction at 80017778: beq .L_800177A8
Parsed instruction at 8001777C: cmpwi r3 0x800
Parsed instruction at 80017780: beq .L_800177A8
Parsed instruction at 80017784: cmpwi r3 0x1000
Parsed instruction at 80017788: beq .L_800177A8
Parsed instruction at 8001778C: cmpwi r3 0x1100
Parsed instruction at 80017790: beq .L_800177A8
Parsed instruction at 80017794: cmpwi r3 0x1200
Parsed instruction at 80017798: beq .L_800177A8
Parsed instruction at 8001779C: cmpwi r3 0x1300
Parsed instruction at 800177A0: beq .L_800177A8
Parsed instruction at 800177A4: b .L_800177B4
Parsed label: L_800177A8:
Parsed instruction at 800177A8: mfsrr0 r3
Parsed instruction at 800177AC: addi r3 r3 0x4
Parsed instruction at 800177B0: mtsrr0 r3
Parsed label: L_800177B4:
Parsed instruction at 800177B4: lis r2 gTRKExceptionStatus_8001BAA4@h
Parsed instruction at 800177B8: ori r2 r2 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 800177BC: li r3 0x1
Parsed instruction at 800177C0: stb r3 0xd(r2)
Parsed instruction at 800177C4: mfsprg r3 3
Parsed instruction at 800177C8: mtcrf 255 r3
Parsed instruction at 800177CC: mfsprg r2 1
Parsed instruction at 800177D0: mfsprg r3 2
Parsed instruction at 800177D4: rfi 
End of function: TRKExceptionHandler, 41 instructions
Parsed function: TRKPostInterruptEvent at 0x800177D8
Parsed instruction at 800177D8: mflr r0
Parsed instruction at 800177DC: stw r0 0x4(r1)
Parsed instruction at 800177E0: stwu r1 -0x18(r1)
Parsed instruction at 800177E4: lis r3 gTRKState@ha
Parsed instruction at 800177E8: addi r3 r3 gTRKState@l
Parsed instruction at 800177EC: addi r3 r3 0x9c
Parsed instruction at 800177F0: lwz r0 0x0(r3)
Parsed instruction at 800177F4: cmpwi r0 0x0
Parsed instruction at 800177F8: beq .L_80017808
Parsed instruction at 800177FC: li r0 0x0
Parsed instruction at 80017800: stw r0 0x0(r3)
Parsed instruction at 80017804: b .L_80017878
Parsed label: L_80017808:
Parsed instruction at 80017808: lis r3 gTRKCPUState@ha
Parsed instruction at 8001780C: addi r3 r3 gTRKCPUState@l
Parsed instruction at 80017810: lwz r0 0x2f8(r3)
Parsed instruction at 80017814: clrlwi r0 r0 16
Parsed instruction at 80017818: cmpwi r0 0xd00
Parsed instruction at 8001781C: beq .L_80017830
Parsed instruction at 80017820: bge .L_80017864
Parsed instruction at 80017824: cmpwi r0 0x700
Parsed instruction at 80017828: beq .L_80017830
Parsed instruction at 8001782C: b .L_80017864
Parsed label: L_80017830:
Parsed instruction at 80017830: lis r4 gTRKCPUState@ha
Parsed instruction at 80017834: addi r3 r1 0x8
Parsed instruction at 80017838: addi r4 r4 gTRKCPUState@l
Parsed instruction at 8001783C: lwz r4 0x80(r4)
Parsed instruction at 80017840: bl fn_80016EF0
Parsed instruction at 80017844: lwz r3 0x8(r1)
Parsed instruction at 80017848: subis r0 r3 0xfe0
Parsed instruction at 8001784C: cmplwi r0 0x0
Parsed instruction at 80017850: bne .L_8001785C
Parsed instruction at 80017854: li r4 0x5
Parsed instruction at 80017858: b .L_80017868
Parsed label: L_8001785C:
Parsed instruction at 8001785C: li r4 0x3
Parsed instruction at 80017860: b .L_80017868
Parsed label: L_80017864:
Parsed instruction at 80017864: li r4 0x4
Parsed label: L_80017868:
Parsed instruction at 80017868: addi r3 r1 0xc
Parsed instruction at 8001786C: bl fn_80014658
Parsed instruction at 80017870: addi r3 r1 0xc
Parsed instruction at 80017874: bl fn_80014578
Parsed label: L_80017878:
Parsed instruction at 80017878: addi r1 r1 0x18
Parsed instruction at 8001787C: lwz r0 0x4(r1)
Parsed instruction at 80017880: mtlr r0
Parsed instruction at 80017884: blr 
End of function: TRKPostInterruptEvent, 50 instructions
Parsed function: fn_80017888 at 0x80017888
Parsed instruction at 80017888: lis r3 gTRKState@h
Parsed instruction at 8001788C: ori r3 r3 gTRKState@l
Parsed instruction at 80017890: stmw r0 0x0(r3)
Parsed instruction at 80017894: mfmsr r0
Parsed instruction at 80017898: stw r0 0x8c(r3)
Parsed instruction at 8001789C: mflr r0
Parsed instruction at 800178A0: stw r0 0x80(r3)
Parsed instruction at 800178A4: mfctr r0
Parsed instruction at 800178A8: stw r0 0x84(r3)
Parsed instruction at 800178AC: mfxer r0
Parsed instruction at 800178B0: stw r0 0x88(r3)
Parsed instruction at 800178B4: mfdsisr r0
Parsed instruction at 800178B8: stw r0 0x94(r3)
Parsed instruction at 800178BC: mfdar r0
Parsed instruction at 800178C0: stw r0 0x90(r3)
Parsed instruction at 800178C4: li r1 -0x7ffe
Parsed instruction at 800178C8: nor r1 r1 r1
Parsed instruction at 800178CC: mfmsr r3
Parsed instruction at 800178D0: and r3 r3 r1
Parsed instruction at 800178D4: mtmsr r3
Parsed instruction at 800178D8: lis r2 gTRKState@h
Parsed instruction at 800178DC: ori r2 r2 gTRKState@l
Parsed instruction at 800178E0: lwz r2 0xa0(r2)
Parsed instruction at 800178E4: lbz r2 0x0(r2)
Parsed instruction at 800178E8: cmpwi r2 0x0
Parsed instruction at 800178EC: beq .L_80017904
Parsed instruction at 800178F0: lis r2 gTRKState@h
Parsed instruction at 800178F4: ori r2 r2 gTRKState@l
Parsed instruction at 800178F8: li r3 0x1
Parsed instruction at 800178FC: stb r3 0x9c(r2)
Parsed instruction at 80017900: b .L_8001794C
Parsed label: L_80017904:
Parsed instruction at 80017904: lis r2 gTRKExceptionStatus_8001BAA4@h
Parsed instruction at 80017908: ori r2 r2 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 8001790C: li r3 0x0
Parsed instruction at 80017910: stb r3 0xc(r2)
Parsed instruction at 80017914: bl fn_800185DC
Parsed instruction at 80017918: lis r2 gTRKCPUState@h
Parsed instruction at 8001791C: ori r2 r2 gTRKCPUState@l
Parsed instruction at 80017920: lmw r27 0x80(r2)
Parsed instruction at 80017924: mtsrr0 r27
Parsed instruction at 80017928: mtlr r28
Parsed instruction at 8001792C: mtcrf 255 r29
Parsed instruction at 80017930: mtctr r30
Parsed instruction at 80017934: mtxer r31
Parsed instruction at 80017938: lmw r3 0xc(r2)
Parsed instruction at 8001793C: lwz r0 0x0(r2)
Parsed instruction at 80017940: lwz r1 0x4(r2)
Parsed instruction at 80017944: lwz r2 0x8(r2)
Parsed instruction at 80017948: rfi 
Parsed label: L_8001794C:
Parsed instruction at 8001794C: lis r2 gTRKState@h
Parsed instruction at 80017950: ori r2 r2 gTRKState@l
Parsed instruction at 80017954: lwz r0 0x8c(r2)
Parsed instruction at 80017958: sync 
Parsed instruction at 8001795C: mtmsr r0
Parsed instruction at 80017960: sync 
Parsed instruction at 80017964: lwz r0 0x80(r2)
Parsed instruction at 80017968: mtlr r0
Parsed instruction at 8001796C: lwz r0 0x84(r2)
Parsed instruction at 80017970: mtctr r0
Parsed instruction at 80017974: lwz r0 0x88(r2)
Parsed instruction at 80017978: mtxer r0
Parsed instruction at 8001797C: lwz r0 0x94(r2)
Parsed instruction at 80017980: mtdsisr r0
Parsed instruction at 80017984: lwz r0 0x90(r2)
Parsed instruction at 80017988: mtdar r0
Parsed instruction at 8001798C: lmw r3 0xc(r2)
Parsed instruction at 80017990: lwz r0 0x0(r2)
Parsed instruction at 80017994: lwz r1 0x4(r2)
Parsed instruction at 80017998: lwz r2 0x8(r2)
Parsed instruction at 8001799C: b TRKPostInterruptEvent
End of function: fn_80017888, 72 instructions
Parsed function: TRKTargetInterrupt at 0x800179A0
Parsed instruction at 800179A0: mflr r0
Parsed instruction at 800179A4: stw r0 0x4(r1)
Parsed instruction at 800179A8: stwu r1 -0x10(r1)
Parsed instruction at 800179AC: stw r31 0xc(r1)
Parsed instruction at 800179B0: lbz r0 0x0(r3)
Parsed instruction at 800179B4: li r31 0x0
Parsed instruction at 800179B8: cmpwi r0 0x5
Parsed instruction at 800179BC: bge .L_800179EC
Parsed instruction at 800179C0: cmpwi r0 0x3
Parsed instruction at 800179C4: bge .L_800179CC
Parsed instruction at 800179C8: b .L_800179EC
Parsed label: L_800179CC:
Parsed instruction at 800179CC: bl fn_80017C4C
Parsed instruction at 800179D0: cmpwi r3 0x0
Parsed instruction at 800179D4: bne .L_800179EC
Parsed instruction at 800179D8: li r3 0x1
Parsed instruction at 800179DC: bl fn_80017E8C
Parsed instruction at 800179E0: li r3 0x90
Parsed instruction at 800179E4: bl fn_80016A34
Parsed instruction at 800179E8: mr r31 r3
Parsed label: L_800179EC:
Parsed instruction at 800179EC: mr r3 r31
Parsed instruction at 800179F0: lwz r31 0xc(r1)
Parsed instruction at 800179F4: addi r1 r1 0x10
Parsed instruction at 800179F8: lwz r0 0x4(r1)
Parsed instruction at 800179FC: mtlr r0
Parsed instruction at 80017A00: blr 
End of function: TRKTargetInterrupt, 27 instructions
Parsed function: fn_80017A04 at 0x80017A04
Parsed instruction at 80017A04: mflr r0
Parsed instruction at 80017A08: stw r0 0x4(r1)
Parsed instruction at 80017A0C: stwu r1 -0x18(r1)
Parsed instruction at 80017A10: stw r31 0x14(r1)
Parsed instruction at 80017A14: stw r30 0x10(r1)
Parsed instruction at 80017A18: mr r30 r3
Parsed instruction at 80017A1C: lis r3 gTRKCPUState@ha
Parsed instruction at 80017A20: addi r3 r3 gTRKCPUState@l
Parsed instruction at 80017A24: addi r31 r3 0x80
Parsed instruction at 80017A28: lwz r4 0x0(r31)
Parsed instruction at 80017A2C: mr r3 r30
Parsed instruction at 80017A30: bl fn_80014BF4
Parsed instruction at 80017A34: cmpwi r3 0x0
Parsed instruction at 80017A38: bne .L_80017A48
Parsed instruction at 80017A3C: addi r3 r1 0x8
Parsed instruction at 80017A40: lwz r4 0x0(r31)
Parsed instruction at 80017A44: bl fn_80016EF0
Parsed label: L_80017A48:
Parsed instruction at 80017A48: cmpwi r3 0x0
Parsed instruction at 80017A4C: bne .L_80017A5C
Parsed instruction at 80017A50: mr r3 r30
Parsed instruction at 80017A54: lwz r4 0x8(r1)
Parsed instruction at 80017A58: bl fn_80014BF4
Parsed label: L_80017A5C:
Parsed instruction at 80017A5C: cmpwi r3 0x0
Parsed instruction at 80017A60: bne .L_80017A7C
Parsed instruction at 80017A64: lis r3 gTRKCPUState@ha
Parsed instruction at 80017A68: addi r3 r3 gTRKCPUState@l
Parsed instruction at 80017A6C: lwz r0 0x2f8(r3)
Parsed instruction at 80017A70: mr r3 r30
Parsed instruction at 80017A74: clrlwi r4 r0 16
Parsed instruction at 80017A78: bl fn_80014BA0
Parsed label: L_80017A7C:
Parsed instruction at 80017A7C: lwz r31 0x14(r1)
Parsed instruction at 80017A80: lwz r30 0x10(r1)
Parsed instruction at 80017A84: addi r1 r1 0x18
Parsed instruction at 80017A88: lwz r0 0x4(r1)
Parsed instruction at 80017A8C: mtlr r0
Parsed instruction at 80017A90: blr 
End of function: fn_80017A04, 39 instructions
Parsed function: fn_80017A94 at 0x80017A94
Parsed instruction at 80017A94: mflr r0
Parsed instruction at 80017A98: stw r0 0x4(r1)
Parsed instruction at 80017A9C: stwu r1 -0x18(r1)
Parsed instruction at 80017AA0: stw r31 0x14(r1)
Parsed instruction at 80017AA4: stw r30 0x10(r1)
Parsed instruction at 80017AA8: mr r30 r3
Parsed instruction at 80017AAC: lis r3 gTRKExceptionStatus_8001BAA4@ha
Parsed instruction at 80017AB0: addi r31 r3 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 80017AB4: lwz r4 0x0(r31)
Parsed instruction at 80017AB8: mr r3 r30
Parsed instruction at 80017ABC: bl fn_80014BF4
Parsed instruction at 80017AC0: cmpwi r3 0x0
Parsed instruction at 80017AC4: bne .L_80017AD4
Parsed instruction at 80017AC8: addi r3 r1 0x8
Parsed instruction at 80017ACC: lwz r4 0x0(r31)
Parsed instruction at 80017AD0: bl fn_80016EF0
Parsed label: L_80017AD4:
Parsed instruction at 80017AD4: cmpwi r3 0x0
Parsed instruction at 80017AD8: bne .L_80017AE8
Parsed instruction at 80017ADC: mr r3 r30
Parsed instruction at 80017AE0: lwz r4 0x8(r1)
Parsed instruction at 80017AE4: bl fn_80014BF4
Parsed label: L_80017AE8:
Parsed instruction at 80017AE8: cmpwi r3 0x0
Parsed instruction at 80017AEC: bne .L_80017B04
Parsed instruction at 80017AF0: lis r3 gTRKExceptionStatus_8001BAA4@ha
Parsed instruction at 80017AF4: addi r3 r3 gTRKExceptionStatus_8001BAA4@l
Parsed instruction at 80017AF8: lhz r4 0x8(r3)
Parsed instruction at 80017AFC: mr r3 r30
Parsed instruction at 80017B00: bl fn_80014BA0
Parsed label: L_80017B04:
Parsed instruction at 80017B04: lwz r31 0x14(r1)
Parsed instruction at 80017B08: lwz r30 0x10(r1)
Parsed instruction at 80017B0C: addi r1 r1 0x18
Parsed instruction at 80017B10: lwz r0 0x4(r1)
Parsed instruction at 80017B14: mtlr r0
Parsed instruction at 80017B18: blr 
End of function: fn_80017A94, 37 instructions
Parsed function: fn_80017B1C at 0x80017B1C
Parsed instruction at 80017B1C: cmpwi r3 0x0
Parsed instruction at 80017B20: beq .L_80017B3C
Parsed instruction at 80017B24: lis r3 gTRKCPUState@ha
Parsed instruction at 80017B28: addi r3 r3 gTRKCPUState@l
Parsed instruction at 80017B2C: lwz r0 0x1f8(r3)
Parsed instruction at 80017B30: ori r0 r0 0x400
Parsed instruction at 80017B34: stw r0 0x1f8(r3)
Parsed instruction at 80017B38: b .L_80017B50
Parsed label: L_80017B3C:
Parsed instruction at 80017B3C: lis r3 gTRKCPUState@ha
Parsed instruction at 80017B40: addi r3 r3 gTRKCPUState@l
Parsed instruction at 80017B44: lwz r0 0x1f8(r3)
Parsed instruction at 80017B48: rlwinm r0 r0 0 22 20
Parsed instruction at 80017B4C: stw r0 0x1f8(r3)
Parsed label: L_80017B50:
Parsed instruction at 80017B50: li r3 0x0
Parsed instruction at 80017B54: blr 
End of function: fn_80017B1C, 17 instructions
Parsed function: fn_80017B58 at 0x80017B58
Parsed instruction at 80017B58: lis r3 lbl_8001BAB4@ha
Parsed instruction at 80017B5C: addi r5 r3 lbl_8001BAB4@l
Parsed instruction at 80017B60: lwz r0 0x0(r5)
Parsed instruction at 80017B64: li r3 0x1
Parsed instruction at 80017B68: cmpwi r0 0x0
Parsed instruction at 80017B6C: beq .L_80017BD8
Parsed instruction at 80017B70: lis r4 gTRKCPUState@ha
Parsed instruction at 80017B74: addi r4 r4 gTRKCPUState@l
Parsed instruction at 80017B78: lwz r0 0x2f8(r4)
Parsed instruction at 80017B7C: clrlwi r0 r0 16
Parsed instruction at 80017B80: cmplwi r0 0xd00
Parsed instruction at 80017B84: bne .L_80017BD8
Parsed instruction at 80017B88: lbz r0 0x4(r5)
Parsed instruction at 80017B8C: cmpwi r0 0x1
Parsed instruction at 80017B90: beq .L_80017BB8
Parsed instruction at 80017B94: bge .L_80017BD8
Parsed instruction at 80017B98: cmpwi r0 0x0
Parsed instruction at 80017B9C: bge .L_80017BA4
Parsed instruction at 80017BA0: b .L_80017BD8
Parsed label: L_80017BA4:
Parsed instruction at 80017BA4: lwz r0 0x8(r5)
Parsed instruction at 80017BA8: cmplwi r0 0x0
Parsed instruction at 80017BAC: beq .L_80017BD8
Parsed instruction at 80017BB0: li r3 0x0
Parsed instruction at 80017BB4: b .L_80017BD8
Parsed label: L_80017BB8:
Parsed instruction at 80017BB8: lwz r4 0x80(r4)
Parsed instruction at 80017BBC: lwz r0 0xc(r5)
Parsed instruction at 80017BC0: cmplw r4 r0
Parsed instruction at 80017BC4: blt .L_80017BD8
Parsed instruction at 80017BC8: lwz r0 0x10(r5)
Parsed instruction at 80017BCC: cmplw r4 r0
Parsed instruction at 80017BD0: bgt .L_80017BD8
Parsed instruction at 80017BD4: li r3 0x0
Parsed label: L_80017BD8:
Parsed instruction at 80017BD8: blr 
End of function: fn_80017B58, 36 instructions
Parsed function: fn_80017BDC at 0x80017BDC
Parsed instruction at 80017BDC: mflr r0
Parsed instruction at 80017BE0: stw r0 0x4(r1)
Parsed instruction at 80017BE4: stwu r1 -0x10(r1)
Parsed instruction at 80017BE8: stw r31 0xc(r1)
Parsed instruction at 80017BEC: lis r3 lbl_8001BAB4@ha
Parsed instruction at 80017BF0: addi r31 r3 lbl_8001BAB4@l
Parsed instruction at 80017BF4: li r0 0x1
Parsed instruction at 80017BF8: stw r0 0x0(r31)
Parsed instruction at 80017BFC: li r3 0x1
Parsed instruction at 80017C00: bl fn_80017B1C
Parsed instruction at 80017C04: lbz r0 0x4(r31)
Parsed instruction at 80017C08: cmplwi r0 0x0
Parsed instruction at 80017C0C: beq .L_80017C18
Parsed instruction at 80017C10: cmplwi r0 0x10
Parsed instruction at 80017C14: bne .L_80017C2C
Parsed label: L_80017C18:
Parsed instruction at 80017C18: lis r3 lbl_8001BAB4@ha
Parsed instruction at 80017C1C: addi r4 r3 lbl_8001BAB4@l
Parsed instruction at 80017C20: lwz r3 0x8(r4)
Parsed instruction at 80017C24: subi r0 r3 0x1
Parsed instruction at 80017C28: stw r0 0x8(r4)
Parsed label: L_80017C2C:
Parsed instruction at 80017C2C: li r3 0x0
Parsed instruction at 80017C30: bl fn_80017E8C
Parsed instruction at 80017C34: li r3 0x0
Parsed instruction at 80017C38: lwz r31 0xc(r1)
Parsed instruction at 80017C3C: addi r1 r1 0x10
Parsed instruction at 80017C40: lwz r0 0x4(r1)
Parsed instruction at 80017C44: mtlr r0
Parsed instruction at 80017C48: blr 
End of function: fn_80017BDC, 30 instructions
Parsed function: fn_80017C4C at 0x80017C4C
Parsed instruction at 80017C4C: mflr r0
Parsed instruction at 80017C50: stw r0 0x4(r1)
Parsed instruction at 80017C54: stwu r1 -0x10(r1)
Parsed instruction at 80017C58: stw r31 0xc(r1)
Parsed instruction at 80017C5C: lis r3 lbl_8001BAB4@ha
Parsed instruction at 80017C60: addi r31 r3 lbl_8001BAB4@l
Parsed instruction at 80017C64: lwz r0 0x0(r31)
Parsed instruction at 80017C68: cmpwi r0 0x0
Parsed instruction at 80017C6C: beq .L_80017C94
Parsed instruction at 80017C70: li r3 0x0
Parsed instruction at 80017C74: bl fn_80017B1C
Parsed instruction at 80017C78: bl fn_80017B58
Parsed instruction at 80017C7C: cmpwi r3 0x0
Parsed instruction at 80017C80: beq .L_80017C90
Parsed instruction at 80017C84: li r0 0x0
Parsed instruction at 80017C88: stw r0 0x0(r31)
Parsed instruction at 80017C8C: b .L_80017C94
Parsed label: L_80017C90:
Parsed instruction at 80017C90: bl fn_80017BDC
Parsed label: L_80017C94:
Parsed instruction at 80017C94: lis r3 lbl_8001BAB4@ha
Parsed instruction at 80017C98: addi r3 r3 lbl_8001BAB4@l
Parsed instruction at 80017C9C: lwz r3 0x0(r3)
Parsed instruction at 80017CA0: lwz r31 0xc(r1)
Parsed instruction at 80017CA4: addi r1 r1 0x10
Parsed instruction at 80017CA8: lwz r0 0x4(r1)
Parsed instruction at 80017CAC: mtlr r0
Parsed instruction at 80017CB0: blr 
End of function: fn_80017C4C, 28 instructions
Parsed function: fn_80017CB4 at 0x80017CB4
Parsed instruction at 80017CB4: mflr r0
Parsed instruction at 80017CB8: stw r0 0x4(r1)
Parsed instruction at 80017CBC: stwu r1 -0x8(r1)
Parsed instruction at 80017CC0: cmpwi r4 0x0
Parsed instruction at 80017CC4: beq .L_80017CD0
Parsed instruction at 80017CC8: li r3 0x703
Parsed instruction at 80017CCC: b .L_80017CE8
Parsed label: L_80017CD0:
Parsed instruction at 80017CD0: lis r4 lbl_8001BAB4@ha
Parsed instruction at 80017CD4: addi r4 r4 lbl_8001BAB4@l
Parsed instruction at 80017CD8: li r0 0x0
Parsed instruction at 80017CDC: stb r0 0x4(r4)
Parsed instruction at 80017CE0: stw r3 0x8(r4)
Parsed instruction at 80017CE4: bl fn_80017BDC
Parsed label: L_80017CE8:
Parsed instruction at 80017CE8: addi r1 r1 0x8
Parsed instruction at 80017CEC: lwz r0 0x4(r1)
Parsed instruction at 80017CF0: mtlr r0
Parsed instruction at 80017CF4: blr 
End of function: fn_80017CB4, 19 instructions
Parsed function: fn_80017CF8 at 0x80017CF8
Parsed instruction at 80017CF8: mflr r0
Parsed instruction at 80017CFC: stw r0 0x4(r1)
Parsed instruction at 80017D00: stwu r1 -0x8(r1)
Parsed instruction at 80017D04: cmpwi r5 0x0
Parsed instruction at 80017D08: beq .L_80017D14
Parsed instruction at 80017D0C: li r3 0x703
Parsed instruction at 80017D10: b .L_80017D30
Parsed label: L_80017D14:
Parsed instruction at 80017D14: lis r5 lbl_8001BAB4@ha
Parsed instruction at 80017D18: addi r5 r5 lbl_8001BAB4@l
Parsed instruction at 80017D1C: li r0 0x1
Parsed instruction at 80017D20: stb r0 0x4(r5)
Parsed instruction at 80017D24: stw r3 0xc(r5)
Parsed instruction at 80017D28: stw r4 0x10(r5)
Parsed instruction at 80017D2C: bl fn_80017BDC
Parsed label: L_80017D30:
Parsed instruction at 80017D30: addi r1 r1 0x8
Parsed instruction at 80017D34: lwz r0 0x4(r1)
Parsed instruction at 80017D38: mtlr r0
Parsed instruction at 80017D3C: blr 
End of function: fn_80017CF8, 20 instructions
Parsed function: fn_80017D40 at 0x80017D40
Parsed instruction at 80017D40: lis r3 gTRKCPUState@ha
Parsed instruction at 80017D44: addi r3 r3 gTRKCPUState@l
Parsed instruction at 80017D48: lwz r3 0x80(r3)
Parsed instruction at 80017D4C: blr 
End of function: fn_80017D40, 4 instructions
Parsed function: fn_80017D50 at 0x80017D50
Parsed instruction at 80017D50: mflr r0
Parsed instruction at 80017D54: stw r0 0x4(r1)
Parsed instruction at 80017D58: stwu r1 -0x30(r1)
Parsed instruction at 80017D5C: stmw r27 0x1c(r1)
Parsed instruction at 80017D60: lis r3 gTRKCPUState@ha
Parsed instruction at 80017D64: addi r3 r3 gTRKCPUState@l
Parsed instruction at 80017D68: addi r31 r3 0xc
Parsed instruction at 80017D6C: lwz r0 0x0(r31)
Parsed instruction at 80017D70: clrlwi r27 r0 24
Parsed instruction at 80017D74: cmplwi r27 0xd1
Parsed instruction at 80017D78: beq .L_80017DA0
Parsed instruction at 80017D7C: cmplwi r27 0xd0
Parsed instruction at 80017D80: beq .L_80017DA0
Parsed instruction at 80017D84: addi r3 r1 0xc
Parsed instruction at 80017D88: li r4 0x4
Parsed instruction at 80017D8C: bl fn_80014658
Parsed instruction at 80017D90: addi r3 r1 0xc
Parsed instruction at 80017D94: bl fn_80014578
Parsed instruction at 80017D98: li r3 0x0
Parsed instruction at 80017D9C: b .L_80017E2C
Parsed label: L_80017DA0:
Parsed instruction at 80017DA0: lis r3 gTRKCPUState@ha
Parsed instruction at 80017DA4: addi r6 r1 0x8
Parsed instruction at 80017DA8: addi r4 r3 gTRKCPUState@l
Parsed instruction at 80017DAC: lwz r3 0x10(r4)
Parsed instruction at 80017DB0: subfic r0 r27 0xd1
Parsed instruction at 80017DB4: lwz r28 0x14(r4)
Parsed instruction at 80017DB8: addi r30 r4 0x18
Parsed instruction at 80017DBC: cntlzw r0 r0
Parsed instruction at 80017DC0: lwz r4 0x0(r30)
Parsed instruction at 80017DC4: clrlwi r3 r3 24
Parsed instruction at 80017DC8: mr r5 r28
Parsed instruction at 80017DCC: srwi r8 r0 5
Parsed instruction at 80017DD0: li r7 0x1
Parsed instruction at 80017DD4: bl fn_800165A0
Parsed instruction at 80017DD8: lbz r0 0x8(r1)
Parsed instruction at 80017DDC: mr r29 r3
Parsed instruction at 80017DE0: cmplwi r0 0x0
Parsed instruction at 80017DE4: bne .L_80017DF8
Parsed instruction at 80017DE8: cmpwi r29 0x0
Parsed instruction at 80017DEC: beq .L_80017DF8
Parsed instruction at 80017DF0: li r0 0x1
Parsed instruction at 80017DF4: stb r0 0x8(r1)
Parsed label: L_80017DF8:
Parsed instruction at 80017DF8: lbz r0 0x8(r1)
Parsed instruction at 80017DFC: cmplwi r27 0xd1
Parsed instruction at 80017E00: stw r0 0x0(r31)
Parsed instruction at 80017E04: bne .L_80017E14
Parsed instruction at 80017E08: lwz r3 0x0(r30)
Parsed instruction at 80017E0C: lwz r4 0x0(r28)
Parsed instruction at 80017E10: bl fn_80016B0C
Parsed label: L_80017E14:
Parsed instruction at 80017E14: lis r3 gTRKCPUState@ha
Parsed instruction at 80017E18: addi r5 r3 gTRKCPUState@l
Parsed instruction at 80017E1C: lwz r4 0x80(r5)
Parsed instruction at 80017E20: mr r3 r29
Parsed instruction at 80017E24: addi r0 r4 0x4
Parsed instruction at 80017E28: stw r0 0x80(r5)
Parsed label: L_80017E2C:
Parsed instruction at 80017E2C: lmw r27 0x1c(r1)
Parsed instruction at 80017E30: addi r1 r1 0x30
Parsed instruction at 80017E34: lwz r0 0x4(r1)
Parsed instruction at 80017E38: mtlr r0
Parsed instruction at 80017E3C: blr 
End of function: fn_80017D50, 64 instructions
Parsed function: fn_80017E40 at 0x80017E40
Parsed instruction at 80017E40: mflr r0
Parsed instruction at 80017E44: stw r0 0x4(r1)
Parsed instruction at 80017E48: stwu r1 -0x8(r1)
Parsed instruction at 80017E4C: cmplw r4 r5
Parsed instruction at 80017E50: bge .L_80017E68
Parsed instruction at 80017E54: mr r3 r4
Parsed instruction at 80017E58: subf r4 r4 r5
Parsed instruction at 80017E5C: bl fn_80016B0C
Parsed instruction at 80017E60: li r3 0x0
Parsed instruction at 80017E64: b .L_80017E6C
Parsed label: L_80017E68:
Parsed instruction at 80017E68: li r3 0x700
Parsed label: L_80017E6C:
Parsed instruction at 80017E6C: addi r1 r1 0x8
Parsed instruction at 80017E70: lwz r0 0x4(r1)
Parsed instruction at 80017E74: mtlr r0
Parsed instruction at 80017E78: blr 
End of function: fn_80017E40, 17 instructions
Parsed function: fn_80017E7C at 0x80017E7C
Parsed instruction at 80017E7C: lis r3 gTRKState@ha
Parsed instruction at 80017E80: addi r3 r3 gTRKState@l
Parsed instruction at 80017E84: lwz r3 0x98(r3)
Parsed instruction at 80017E88: blr 
End of function: fn_80017E7C, 4 instructions
Parsed function: fn_80017E8C at 0x80017E8C
Parsed instruction at 80017E8C: lis r4 gTRKState@ha
Parsed instruction at 80017E90: addi r4 r4 gTRKState@l
Parsed instruction at 80017E94: stw r3 0x98(r4)
Parsed instruction at 80017E98: blr 
End of function: fn_80017E8C, 4 instructions
Parsed function: fn_80017E9C at 0x80017E9C
Parsed instruction at 80017E9C: mflr r0
Parsed instruction at 80017EA0: stw r0 0x4(r1)
Parsed instruction at 80017EA4: stwu r1 -0x8(r1)
Parsed instruction at 80017EA8: li r3 0x1
Parsed instruction at 80017EAC: bl fn_80017E8C
Parsed instruction at 80017EB0: li r3 0x0
Parsed instruction at 80017EB4: addi r1 r1 0x8
Parsed instruction at 80017EB8: lwz r0 0x4(r1)
Parsed instruction at 80017EBC: mtlr r0
Parsed instruction at 80017EC0: blr 
End of function: fn_80017E9C, 10 instructions
Parsed function: fn_80017EC4 at 0x80017EC4
Parsed instruction at 80017EC4: mflr r0
Parsed instruction at 80017EC8: stw r0 0x4(r1)
Parsed instruction at 80017ECC: stwu r1 -0x20(r1)
Parsed instruction at 80017ED0: lis r6 lbl_8001A640@ha
Parsed instruction at 80017ED4: cmpwi r5 0x0
Parsed instruction at 80017ED8: addi r7 r6 lbl_8001A640@l
Parsed instruction at 80017EDC: lwz r6 0x0(r7)
Parsed instruction at 80017EE0: lwz r0 0x4(r7)
Parsed instruction at 80017EE4: stw r6 0x8(r1)
Parsed instruction at 80017EE8: stw r0 0xc(r1)
Parsed instruction at 80017EEC: lwz r6 0x8(r7)
Parsed instruction at 80017EF0: lwz r0 0xc(r7)
Parsed instruction at 80017EF4: stw r6 0x10(r1)
Parsed instruction at 80017EF8: stw r0 0x14(r1)
Parsed instruction at 80017EFC: lwz r0 0x10(r7)
Parsed instruction at 80017F00: stw r0 0x18(r1)
Parsed instruction at 80017F04: beq .L_80017F34
Parsed instruction at 80017F08: rlwinm r0 r4 0 20 26
Parsed instruction at 80017F0C: slwi r6 r0 6
Parsed instruction at 80017F10: clrlwi r0 r4 27
Parsed instruction at 80017F14: oris r4 r6 0x7c80
Parsed instruction at 80017F18: slwi r0 r0 16
Parsed instruction at 80017F1C: or r0 r4 r0
Parsed instruction at 80017F20: ori r0 r0 0x2a6
Parsed instruction at 80017F24: stw r0 0x8(r1)
Parsed instruction at 80017F28: lis r0 0x9083
Parsed instruction at 80017F2C: stw r0 0xc(r1)
Parsed instruction at 80017F30: b .L_80017F5C
Parsed label: L_80017F34:
Parsed instruction at 80017F34: rlwinm r0 r4 0 20 26
Parsed instruction at 80017F38: slwi r6 r0 6
Parsed instruction at 80017F3C: clrlwi r0 r4 27
Parsed instruction at 80017F40: lis r7 0x8083
Parsed instruction at 80017F44: oris r4 r6 0x7c80
Parsed instruction at 80017F48: stw r7 0x8(r1)
Parsed instruction at 80017F4C: slwi r0 r0 16
Parsed instruction at 80017F50: or r0 r4 r0
Parsed instruction at 80017F54: ori r0 r0 0x3a6
Parsed instruction at 80017F58: stw r0 0xc(r1)
Parsed label: L_80017F5C:
Parsed instruction at 80017F5C: addi r4 r1 0x8
Parsed instruction at 80017F60: bl fn_8001816C
Parsed instruction at 80017F64: addi r1 r1 0x20
Parsed instruction at 80017F68: lwz r0 0x4(r1)
Parsed instruction at 80017F6C: mtlr r0
Parsed instruction at 80017F70: blr 
End of function: fn_80017EC4, 46 instructions
Parsed function: fn_80017F74 at 0x80017F74
Parsed instruction at 80017F74: mflr r0
Parsed instruction at 80017F78: stw r0 0x4(r1)
Parsed instruction at 80017F7C: stwu r1 -0x20(r1)
Parsed instruction at 80017F80: lis r6 lbl_8001A654@ha
Parsed instruction at 80017F84: cmpwi r5 0x0
Parsed instruction at 80017F88: addi r7 r6 lbl_8001A654@l
Parsed instruction at 80017F8C: lwz r6 0x0(r7)
Parsed instruction at 80017F90: lwz r0 0x4(r7)
Parsed instruction at 80017F94: stw r6 0x8(r1)
Parsed instruction at 80017F98: stw r0 0xc(r1)
Parsed instruction at 80017F9C: lwz r6 0x8(r7)
Parsed instruction at 80017FA0: lwz r0 0xc(r7)
Parsed instruction at 80017FA4: stw r6 0x10(r1)
Parsed instruction at 80017FA8: stw r0 0x14(r1)
Parsed instruction at 80017FAC: lwz r0 0x10(r7)
Parsed instruction at 80017FB0: stw r0 0x18(r1)
Parsed instruction at 80017FB4: beq .L_80017FC8
Parsed instruction at 80017FB8: slwi r0 r4 21
Parsed instruction at 80017FBC: oris r0 r0 0xf003
Parsed instruction at 80017FC0: stw r0 0x8(r1)
Parsed instruction at 80017FC4: b .L_80017FD4
Parsed label: L_80017FC8:
Parsed instruction at 80017FC8: slwi r0 r4 21
Parsed instruction at 80017FCC: oris r0 r0 0xe003
Parsed instruction at 80017FD0: stw r0 0x8(r1)
Parsed label: L_80017FD4:
Parsed instruction at 80017FD4: addi r4 r1 0x8
Parsed instruction at 80017FD8: bl fn_8001816C
Parsed instruction at 80017FDC: addi r1 r1 0x20
Parsed instruction at 80017FE0: lwz r0 0x4(r1)
Parsed instruction at 80017FE4: mtlr r0
Parsed instruction at 80017FE8: blr 
End of function: fn_80017F74, 32 instructions
Parsed function: fn_80017FEC at 0x80017FEC
Parsed instruction at 80017FEC: mflr r0
Parsed instruction at 80017FF0: stw r0 0x4(r1)
Parsed instruction at 80017FF4: stwu r1 -0x28(r1)
Parsed instruction at 80017FF8: stw r31 0x24(r1)
Parsed instruction at 80017FFC: stw r30 0x20(r1)
Parsed instruction at 80018000: mr r30 r3
Parsed instruction at 80018004: mr r31 r5
Parsed instruction at 80018008: lis r3 lbl_8001A668@ha
Parsed instruction at 8001800C: cmplwi r4 0x20
Parsed instruction at 80018010: addi r6 r3 lbl_8001A668@l
Parsed instruction at 80018014: lwz r5 0x0(r6)
Parsed instruction at 80018018: li r3 0x0
Parsed instruction at 8001801C: lwz r0 0x4(r6)
Parsed instruction at 80018020: stw r5 0x8(r1)
Parsed instruction at 80018024: stw r0 0xc(r1)
Parsed instruction at 80018028: lwz r5 0x8(r6)
Parsed instruction at 8001802C: lwz r0 0xc(r6)
Parsed instruction at 80018030: stw r5 0x10(r1)
Parsed instruction at 80018034: stw r0 0x14(r1)
Parsed instruction at 80018038: lwz r0 0x10(r6)
Parsed instruction at 8001803C: stw r0 0x18(r1)
Parsed instruction at 80018040: bge .L_8001807C
Parsed instruction at 80018044: cmpwi r31 0x0
Parsed instruction at 80018048: beq .L_8001805C
Parsed instruction at 8001804C: slwi r0 r4 21
Parsed instruction at 80018050: oris r0 r0 0xd803
Parsed instruction at 80018054: stw r0 0x8(r1)
Parsed instruction at 80018058: b .L_80018068
Parsed label: L_8001805C:
Parsed instruction at 8001805C: slwi r0 r4 21
Parsed instruction at 80018060: oris r0 r0 0xc803
Parsed instruction at 80018064: stw r0 0x8(r1)
Parsed label: L_80018068:
Parsed instruction at 80018068: mr r3 r30
Parsed instruction at 8001806C: addi r4 r1 0x8
Parsed instruction at 80018070: mr r5 r31
Parsed instruction at 80018074: bl fn_8001816C
Parsed instruction at 80018078: b .L_80018154
Parsed label: L_8001807C:
Parsed instruction at 8001807C: bne .L_80018108
Parsed instruction at 80018080: cmpwi r31 0x0
Parsed instruction at 80018084: beq .L_800180B0
Parsed instruction at 80018088: lis r0 0xd824
Parsed instruction at 8001808C: lis r3 0xfc20
Parsed instruction at 80018090: stw r0 0x8(r1)
Parsed instruction at 80018094: addi r0 r3 0x48e
Parsed instruction at 80018098: stw r0 0xc(r1)
Parsed instruction at 8001809C: lis r3 0xd823
Parsed instruction at 800180A0: lis r0 0xc824
Parsed instruction at 800180A4: stw r3 0x10(r1)
Parsed instruction at 800180A8: stw r0 0x14(r1)
Parsed instruction at 800180AC: b .L_800180D4
Parsed label: L_800180B0:
Parsed instruction at 800180B0: lis r0 0xd824
Parsed instruction at 800180B4: stw r0 0x8(r1)
Parsed instruction at 800180B8: lis r0 0xc823
Parsed instruction at 800180BC: lis r3 0xfdfe
Parsed instruction at 800180C0: stw r0 0xc(r1)
Parsed instruction at 800180C4: addi r3 r3 0xd8e
Parsed instruction at 800180C8: lis r0 0xc824
Parsed instruction at 800180CC: stw r3 0x10(r1)
Parsed instruction at 800180D0: stw r0 0x14(r1)
Parsed label: L_800180D4:
Parsed instruction at 800180D4: mr r3 r30
Parsed instruction at 800180D8: addi r4 r1 0x8
Parsed instruction at 800180DC: mr r5 r31
Parsed instruction at 800180E0: bl fn_8001816C
Parsed instruction at 800180E4: lwz r6 0x4(r30)
Parsed instruction at 800180E8: li r0 -0x1
Parsed instruction at 800180EC: lwz r5 0x0(r30)
Parsed instruction at 800180F0: li r4 0x0
Parsed instruction at 800180F4: and r0 r6 r0
Parsed instruction at 800180F8: stw r0 0x4(r30)
Parsed instruction at 800180FC: and r0 r5 r4
Parsed instruction at 80018100: stw r0 0x0(r30)
Parsed instruction at 80018104: b .L_80018154
Parsed label: L_80018108:
Parsed instruction at 80018108: cmplwi r4 0x21
Parsed instruction at 8001810C: bne .L_80018154
Parsed instruction at 80018110: cmpwi r31 0x0
Parsed instruction at 80018114: bne .L_80018120
Parsed instruction at 80018118: lwz r0 0x4(r30)
Parsed instruction at 8001811C: stw r0 0x0(r30)
Parsed label: L_80018120:
Parsed instruction at 80018120: mr r3 r30
Parsed instruction at 80018124: mr r5 r31
Parsed instruction at 80018128: li r4 0x3fe
Parsed instruction at 8001812C: bl fn_80017EC4
Parsed instruction at 80018130: cmpwi r31 0x0
Parsed instruction at 80018134: beq .L_80018154
Parsed instruction at 80018138: lwz r5 0x0(r30)
Parsed instruction at 8001813C: li r0 -0x1
Parsed instruction at 80018140: li r4 0x0
Parsed instruction at 80018144: and r0 r5 r0
Parsed instruction at 80018148: stw r0 0x4(r30)
Parsed instruction at 8001814C: and r0 r4 r4
Parsed instruction at 80018150: stw r0 0x0(r30)
Parsed label: L_80018154:
Parsed instruction at 80018154: lwz r31 0x24(r1)
Parsed instruction at 80018158: lwz r30 0x20(r1)
Parsed instruction at 8001815C: addi r1 r1 0x28
Parsed instruction at 80018160: lwz r0 0x4(r1)
Parsed instruction at 80018164: mtlr r0
Parsed instruction at 80018168: blr 
End of function: fn_80017FEC, 104 instructions
Parsed function: fn_8001816C at 0x8001816C
Parsed instruction at 8001816C: mflr r0
Parsed instruction at 80018170: stw r0 0x4(r1)
Parsed instruction at 80018174: stwu r1 -0x10(r1)
Parsed instruction at 80018178: stw r31 0xc(r1)
Parsed instruction at 8001817C: stw r30 0x8(r1)
Parsed instruction at 80018180: mr r30 r3
Parsed instruction at 80018184: mr r31 r4
Parsed instruction at 80018188: lis r3 0x4e80
Parsed instruction at 8001818C: addi r0 r3 0x20
Parsed instruction at 80018190: stw r0 0x10(r31)
Parsed instruction at 80018194: mr r3 r31
Parsed instruction at 80018198: li r4 0x14
Parsed instruction at 8001819C: bl fn_80016B0C
Parsed instruction at 800181A0: lis r3 lbl_8001E8E8@ha
Parsed instruction at 800181A4: addi r4 r3 lbl_8001E8E8@l
Parsed instruction at 800181A8: mr r3 r30
Parsed instruction at 800181AC: mr r12 r31
Parsed instruction at 800181B0: mtlr r12
Parsed instruction at 800181B4: blrl 
Parsed instruction at 800181B8: li r3 0x0
Parsed instruction at 800181BC: lwz r31 0xc(r1)
Parsed instruction at 800181C0: lwz r30 0x8(r1)
Parsed instruction at 800181C4: addi r1 r1 0x10
Parsed instruction at 800181C8: lwz r0 0x4(r1)
Parsed instruction at 800181CC: mtlr r0
Parsed instruction at 800181D0: blr 
End of function: fn_8001816C, 26 instructions
Parsed function: TRKTargetSetInputPendingPtr at 0x800181D4
Parsed instruction at 800181D4: lis r4 gTRKState@ha
Parsed instruction at 800181D8: addi r4 r4 gTRKState@l
Parsed instruction at 800181DC: stw r3 0xa0(r4)
Parsed instruction at 800181E0: blr 
End of function: TRKTargetSetInputPendingPtr, 4 instructions
Parsed function: InitMetroTRK at 0x800181E4
Parsed instruction at 800181E4: subi r1 r1 0x4
Parsed instruction at 800181E8: stw r3 0x0(r1)
Parsed instruction at 800181EC: lis r3 gTRKCPUState@h
Parsed instruction at 800181F0: ori r3 r3 gTRKCPUState@l
Parsed instruction at 800181F4: stmw r0 0x0(r3)
Parsed instruction at 800181F8: lwz r4 0x0(r1)
Parsed instruction at 800181FC: addi r1 r1 0x4
Parsed instruction at 80018200: stw r1 0x4(r3)
Parsed instruction at 80018204: stw r4 0xc(r3)
Parsed instruction at 80018208: mflr r4
Parsed instruction at 8001820C: stw r4 0x84(r3)
Parsed instruction at 80018210: stw r4 0x80(r3)
Parsed instruction at 80018214: mfcr r4
Parsed instruction at 80018218: stw r4 0x88(r3)
Parsed instruction at 8001821C: mfmsr r4
Parsed instruction at 80018220: ori r3 r4 0x8000
Parsed instruction at 80018224: xori r3 r3 0x8000
Parsed instruction at 80018228: mtmsr r3
Parsed instruction at 8001822C: mtsrr1 r4
Parsed instruction at 80018230: bl TRKSaveExtended1Block
Parsed instruction at 80018234: lis r3 gTRKCPUState@h
Parsed instruction at 80018238: ori r3 r3 gTRKCPUState@l
Parsed instruction at 8001823C: .4byte 0xB8030000 /* illegal: lmw r0 0x0(r3) */
Parsed instruction at 80018240: li r0 0x0
Parsed instruction at 80018244: mtspr IABR r0
Parsed instruction at 80018248: mtspr DABR r0
Parsed instruction at 8001824C: lis r1 _db_stack_addr@h
Parsed instruction at 80018250: ori r1 r1 _db_stack_addr@l
Parsed instruction at 80018254: mr r3 r5
Parsed instruction at 80018258: bl InitMetroTRKCommTable
Parsed instruction at 8001825C: cmpwi r3 0x1
Parsed instruction at 80018260: bne .L_80018274
Parsed instruction at 80018264: lwz r4 0x84(r3)
Parsed instruction at 80018268: mtlr r4
Parsed instruction at 8001826C: .4byte 0xB8030000 /* illegal: lmw r0 0x0(r3) */
Parsed instruction at 80018270: blr 
Parsed label: L_80018274:
Parsed instruction at 80018274: b TRK_main
End of function: InitMetroTRK, 38 instructions
Parsed function: EnableMetroTRKInterrupts at 0x80018278
Parsed instruction at 80018278: mflr r0
Parsed instruction at 8001827C: stw r0 0x4(r1)
Parsed instruction at 80018280: stwu r1 -0x8(r1)
Parsed instruction at 80018284: bl fn_800189D0
Parsed instruction at 80018288: addi r1 r1 0x8
Parsed instruction at 8001828C: lwz r0 0x4(r1)
Parsed instruction at 80018290: mtlr r0
Parsed instruction at 80018294: blr 
End of function: EnableMetroTRKInterrupts, 8 instructions
Parsed function: fn_80018298 at 0x80018298
Parsed instruction at 80018298: lis r4 lbl_8001EDD0@ha
Parsed instruction at 8001829C: addi r4 r4 lbl_8001EDD0@l
Parsed instruction at 800182A0: lwz r4 0x0(r4)
Parsed instruction at 800182A4: cmplw r3 r4
Parsed instruction at 800182A8: blt .L_800182D4
Parsed instruction at 800182AC: addi r0 r4 0x4000
Parsed instruction at 800182B0: cmplw r3 r0
Parsed instruction at 800182B4: bge .L_800182D4
Parsed instruction at 800182B8: lis r4 gTRKCPUState@ha
Parsed instruction at 800182BC: addi r4 r4 gTRKCPUState@l
Parsed instruction at 800182C0: lwz r0 0x238(r4)
Parsed instruction at 800182C4: clrlwi r0 r0 30
Parsed instruction at 800182C8: cmplwi r0 0x0
Parsed instruction at 800182CC: beq .L_800182D4
Parsed instruction at 800182D0: b .L_800182DC
Parsed label: L_800182D4:
Parsed instruction at 800182D4: clrlwi r0 r3 2
Parsed instruction at 800182D8: oris r3 r0 0x8000
Parsed label: L_800182DC:
Parsed instruction at 800182DC: blr 
End of function: fn_80018298, 20 instructions
Parsed function: fn_800182E0 at 0x800182E0
Parsed instruction at 800182E0: mflr r0
Parsed instruction at 800182E4: stw r0 0x4(r1)
Parsed instruction at 800182E8: stwu r1 -0x10(r1)
Parsed instruction at 800182EC: stw r31 0xc(r1)
Parsed instruction at 800182F0: stw r30 0x8(r1)
Parsed instruction at 800182F4: mr r30 r3
Parsed instruction at 800182F8: mr r3 r30
Parsed instruction at 800182FC: bl fn_80018298
Parsed instruction at 80018300: lis r4 gTRKInterruptVectorTable@ha
Parsed instruction at 80018304: addi r0 r4 gTRKInterruptVectorTable@l
Parsed instruction at 80018308: mr r31 r3
Parsed instruction at 8001830C: add r4 r0 r30
Parsed instruction at 80018310: mr r3 r31
Parsed instruction at 80018314: li r5 0x100
Parsed instruction at 80018318: bl fn_800034C8
Parsed instruction at 8001831C: mr r3 r31
Parsed instruction at 80018320: li r4 0x100
Parsed instruction at 80018324: bl fn_80016B0C
Parsed instruction at 80018328: lwz r31 0xc(r1)
Parsed instruction at 8001832C: lwz r30 0x8(r1)
Parsed instruction at 80018330: addi r1 r1 0x10
Parsed instruction at 80018334: lwz r0 0x4(r1)
Parsed instruction at 80018338: mtlr r0
Parsed instruction at 8001833C: blr 
End of function: fn_800182E0, 24 instructions
Parsed function: fn_80018340 at 0x80018340
Parsed instruction at 80018340: mflr r0
Parsed instruction at 80018344: stw r0 0x4(r1)
Parsed instruction at 80018348: stwu r1 -0x18(r1)
Parsed instruction at 8001834C: stw r31 0x14(r1)
Parsed instruction at 80018350: stw r30 0x10(r1)
Parsed instruction at 80018354: stw r29 0xc(r1)
Parsed instruction at 80018358: stw r28 0x8(r1)
Parsed instruction at 8001835C: li r3 0x44
Parsed instruction at 80018360: bl fn_80018298
Parsed instruction at 80018364: li r29 0x0
Parsed instruction at 80018368: lwz r28 0x0(r3)
Parsed instruction at 8001836C: lis r3 lbl_8001BAC8@ha
Parsed instruction at 80018370: slwi r4 r29 2
Parsed instruction at 80018374: addi r0 r3 lbl_8001BAC8@l
Parsed instruction at 80018378: add r30 r0 r4
Parsed instruction at 8001837C: b .L_80018380
Parsed label: L_80018380:
Parsed instruction at 80018380: li r31 0x1
Parsed instruction at 80018384: b .L_80018388
Parsed label: L_80018388:
Parsed instruction at 80018388: b .L_8001838C
Parsed label: L_8001838C:
Parsed instruction at 8001838C: slw r0 r31 r29
Parsed instruction at 80018390: and r0 r28 r0
Parsed instruction at 80018394: cmplwi r0 0x0
Parsed instruction at 80018398: beq .L_800183A4
Parsed instruction at 8001839C: lwz r3 0x0(r30)
Parsed instruction at 800183A0: bl fn_800182E0
Parsed label: L_800183A4:
Parsed instruction at 800183A4: addi r30 r30 0x4
Parsed instruction at 800183A8: addi r29 r29 0x1
Parsed instruction at 800183AC: cmpwi r29 0xe
Parsed instruction at 800183B0: ble .L_8001838C
Parsed instruction at 800183B4: lwz r31 0x14(r1)
Parsed instruction at 800183B8: lwz r30 0x10(r1)
Parsed instruction at 800183BC: lwz r29 0xc(r1)
Parsed instruction at 800183C0: lwz r28 0x8(r1)
Parsed instruction at 800183C4: addi r1 r1 0x18
Parsed instruction at 800183C8: lwz r0 0x4(r1)
Parsed instruction at 800183CC: mtlr r0
Parsed instruction at 800183D0: blr 
End of function: fn_80018340, 41 instructions
Parsed function: TRKInitializeTarget at 0x800183D4
Parsed instruction at 800183D4: mflr r0
Parsed instruction at 800183D8: stw r0 0x4(r1)
Parsed instruction at 800183DC: stwu r1 -0x10(r1)
Parsed instruction at 800183E0: stw r31 0xc(r1)
Parsed instruction at 800183E4: lis r3 gTRKState@ha
Parsed instruction at 800183E8: addi r31 r3 gTRKState@l
Parsed instruction at 800183EC: li r0 0x1
Parsed instruction at 800183F0: stw r0 0x98(r31)
Parsed instruction at 800183F4: bl fn_80016C08
Parsed instruction at 800183F8: stw r3 0x8c(r31)
Parsed instruction at 800183FC: lis r3 lbl_8001EDD0@ha
Parsed instruction at 80018400: addi r3 r3 lbl_8001EDD0@l
Parsed instruction at 80018404: lis r0 0xe000
Parsed instruction at 80018408: stw r0 0x0(r3)
Parsed instruction at 8001840C: li r3 0x0
Parsed instruction at 80018410: lwz r31 0xc(r1)
Parsed instruction at 80018414: addi r1 r1 0x10
Parsed instruction at 80018418: lwz r0 0x4(r1)
Parsed instruction at 8001841C: mtlr r0
Parsed instruction at 80018420: blr 
End of function: TRKInitializeTarget, 20 instructions
Parsed function: TRKSaveExtended1Block at 0x80018424
Parsed instruction at 80018424: lis r2 gTRKCPUState@h
Parsed instruction at 80018428: ori r2 r2 gTRKCPUState@l
Parsed instruction at 8001842C: mfsr r16 0
Parsed instruction at 80018430: mfsr r17 1
Parsed instruction at 80018434: mfsr r18 2
Parsed instruction at 80018438: mfsr r19 3
Parsed instruction at 8001843C: mfsr r20 4
Parsed instruction at 80018440: mfsr r21 5
Parsed instruction at 80018444: mfsr r22 6
Parsed instruction at 80018448: mfsr r23 7
Parsed instruction at 8001844C: mfsr r24 8
Parsed instruction at 80018450: mfsr r25 9
Parsed instruction at 80018454: mfsr r26 10
Parsed instruction at 80018458: mfsr r27 11
Parsed instruction at 8001845C: mfsr r28 12
Parsed instruction at 80018460: mfsr r29 13
Parsed instruction at 80018464: mfsr r30 14
Parsed instruction at 80018468: mfsr r31 15
Parsed instruction at 8001846C: stmw r16 0x1a8(r2)
Parsed instruction at 80018470: mftb r10 268
Parsed instruction at 80018474: mftb r11 269
Parsed instruction at 80018478: mfspr r12 HID0
Parsed instruction at 8001847C: mfspr r13 HID1
Parsed instruction at 80018480: mfsrr1 r14
Parsed instruction at 80018484: mfspr r15 PVR
Parsed instruction at 80018488: mfibatu r16 0
Parsed instruction at 8001848C: mfibatl r17 0
Parsed instruction at 80018490: mfibatu r18 1
Parsed instruction at 80018494: mfibatl r19 1
Parsed instruction at 80018498: mfibatu r20 2
Parsed instruction at 8001849C: mfibatl r21 2
Parsed instruction at 800184A0: mfibatu r22 3
Parsed instruction at 800184A4: mfibatl r23 3
Parsed instruction at 800184A8: mfdbatu r24 0
Parsed instruction at 800184AC: mfdbatl r25 0
Parsed instruction at 800184B0: mfdbatu r26 1
Parsed instruction at 800184B4: mfdbatl r27 1
Parsed instruction at 800184B8: mfdbatu r28 2
Parsed instruction at 800184BC: mfdbatl r29 2
Parsed instruction at 800184C0: mfdbatu r30 3
Parsed instruction at 800184C4: mfdbatl r31 3
Parsed instruction at 800184C8: stmw r10 0x1e8(r2)
Parsed instruction at 800184CC: mfsdr1 r22
Parsed instruction at 800184D0: mfdar r23
Parsed instruction at 800184D4: mfdsisr r24
Parsed instruction at 800184D8: mfsprg r25 0
Parsed instruction at 800184DC: mfsprg r26 1
Parsed instruction at 800184E0: mfsprg r27 2
Parsed instruction at 800184E4: mfsprg r28 3
Parsed instruction at 800184E8: li r29 0x0
Parsed instruction at 800184EC: mfspr r30 IABR
Parsed instruction at 800184F0: mfear r31
Parsed instruction at 800184F4: stmw r22 0x25c(r2)
Parsed instruction at 800184F8: mfspr r20 GQR0
Parsed instruction at 800184FC: mfspr r21 GQR1
Parsed instruction at 80018500: mfspr r22 GQR2
Parsed instruction at 80018504: mfspr r23 GQR3
Parsed instruction at 80018508: mfspr r24 GQR4
Parsed instruction at 8001850C: mfspr r25 GQR5
Parsed instruction at 80018510: mfspr r26 GQR6
Parsed instruction at 80018514: mfspr r27 GQR7
Parsed instruction at 80018518: mfspr r28 HID2
Parsed instruction at 8001851C: mfspr r29 WPAR
Parsed instruction at 80018520: mfspr r30 DMA_U
Parsed instruction at 80018524: mfspr r31 DMA_L
Parsed instruction at 80018528: stmw r20 0x2fc(r2)
Parsed instruction at 8001852C: b .L_80018574
Parsed instruction at 80018530: mfspr r16 928
Parsed instruction at 80018534: mfspr r17 935
Parsed instruction at 80018538: mfspr r18 UMMCR0
Parsed instruction at 8001853C: mfspr r19 UPMC1
Parsed instruction at 80018540: mfspr r20 UPMC2
Parsed instruction at 80018544: mfspr r21 USIA
Parsed instruction at 80018548: mfspr r22 UMMCR1
Parsed instruction at 8001854C: mfspr r23 UPMC3
Parsed instruction at 80018550: mfspr r24 UPMC4
Parsed instruction at 80018554: mfspr r25 USDA
Parsed instruction at 80018558: mfspr r26 944
Parsed instruction at 8001855C: mfspr r27 951
Parsed instruction at 80018560: mfspr r28 SDA
Parsed instruction at 80018564: mfspr r29 1014
Parsed instruction at 80018568: mfspr r30 1015
Parsed instruction at 8001856C: mfspr r31 1023
Parsed instruction at 80018570: stmw r16 0x2b8(r2)
Parsed label: L_80018574:
Parsed instruction at 80018574: mfspr r19 DABR
Parsed instruction at 80018578: mfspr r20 PMC1
Parsed instruction at 8001857C: mfspr r21 PMC2
Parsed instruction at 80018580: mfspr r22 PMC3
Parsed instruction at 80018584: mfspr r23 PMC4
Parsed instruction at 80018588: mfspr r24 SIA
Parsed instruction at 8001858C: mfspr r25 MMCR0
Parsed instruction at 80018590: mfspr r26 MMCR1
Parsed instruction at 80018594: mfspr r27 THRM1
Parsed instruction at 80018598: mfspr r28 THRM2
Parsed instruction at 8001859C: mfspr r29 THRM3
Parsed instruction at 800185A0: mfspr r30 ICTC
Parsed instruction at 800185A4: mfspr r31 L2CR
Parsed instruction at 800185A8: stmw r19 0x284(r2)
Parsed instruction at 800185AC: b .L_800185D8
Parsed instruction at 800185B0: mfspr r25 976
Parsed instruction at 800185B4: mfspr r26 977
Parsed instruction at 800185B8: mfspr r27 978
Parsed instruction at 800185BC: mfspr r28 979
Parsed instruction at 800185C0: mfspr r29 980
Parsed instruction at 800185C4: mfspr r30 981
Parsed instruction at 800185C8: mfspr r31 982
Parsed instruction at 800185CC: stmw r25 0x240(r2)
Parsed instruction at 800185D0: mfdec r31
Parsed instruction at 800185D4: stw r31 0x278(r2)
Parsed label: L_800185D8:
Parsed instruction at 800185D8: blr 
End of function: TRKSaveExtended1Block, 112 instructions
Parsed function: fn_800185DC at 0x800185DC
Parsed instruction at 800185DC: lis r2 gTRKCPUState@h
Parsed instruction at 800185E0: ori r2 r2 gTRKCPUState@l
Parsed instruction at 800185E4: lis r5 lbl_8001BA98@h
Parsed instruction at 800185E8: ori r5 r5 lbl_8001BA98@l
Parsed instruction at 800185EC: lbz r3 0x0(r5)
Parsed instruction at 800185F0: lbz r6 0x1(r5)
Parsed instruction at 800185F4: li r0 0x0
Parsed instruction at 800185F8: stb r0 0x0(r5)
Parsed instruction at 800185FC: stb r0 0x1(r5)
Parsed instruction at 80018600: cmpwi r3 0x0
Parsed instruction at 80018604: beq .L_80018618
Parsed instruction at 80018608: lwz r24 0x1e8(r2)
Parsed instruction at 8001860C: lwz r25 0x1ec(r2)
Parsed instruction at 80018610: mttbl r24
Parsed instruction at 80018614: mttbu r25
Parsed label: L_80018618:
Parsed instruction at 80018618: lmw r20 0x2fc(r2)
Parsed instruction at 8001861C: mtspr GQR0 r20
Parsed instruction at 80018620: mtspr GQR1 r21
Parsed instruction at 80018624: mtspr GQR2 r22
Parsed instruction at 80018628: mtspr GQR3 r23
Parsed instruction at 8001862C: mtspr GQR4 r24
Parsed instruction at 80018630: mtspr GQR5 r25
Parsed instruction at 80018634: mtspr GQR6 r26
Parsed instruction at 80018638: mtspr GQR7 r27
Parsed instruction at 8001863C: mtspr HID2 r28
Parsed instruction at 80018640: mtspr DMA_U r30
Parsed instruction at 80018644: mtspr DMA_L r31
Parsed instruction at 80018648: b .L_80018664
Parsed instruction at 8001864C: lmw r26 0x2e0(r2)
Parsed instruction at 80018650: mtspr 944 r26
Parsed instruction at 80018654: mtspr 951 r27
Parsed instruction at 80018658: mtspr 1014 r29
Parsed instruction at 8001865C: mtspr 1015 r30
Parsed instruction at 80018660: mtspr 1023 r31
Parsed label: L_80018664:
Parsed instruction at 80018664: lmw r19 0x284(r2)
Parsed instruction at 80018668: mtspr DABR r19
Parsed instruction at 8001866C: mtspr PMC1 r20
Parsed instruction at 80018670: mtspr PMC2 r21
Parsed instruction at 80018674: mtspr PMC3 r22
Parsed instruction at 80018678: mtspr PMC4 r23
Parsed instruction at 8001867C: mtspr SIA r24
Parsed instruction at 80018680: mtspr MMCR0 r25
Parsed instruction at 80018684: mtspr MMCR1 r26
Parsed instruction at 80018688: mtspr THRM1 r27
Parsed instruction at 8001868C: mtspr THRM2 r28
Parsed instruction at 80018690: mtspr THRM3 r29
Parsed instruction at 80018694: mtspr ICTC r30
Parsed instruction at 80018698: mtspr L2CR r31
Parsed instruction at 8001869C: b .L_800186D0
Parsed instruction at 800186A0: cmpwi r6 0x0
Parsed instruction at 800186A4: beq .L_800186B0
Parsed instruction at 800186A8: lwz r26 0x278(r2)
Parsed instruction at 800186AC: mtdec r26
Parsed label: L_800186B0:
Parsed instruction at 800186B0: lmw r25 0x240(r2)
Parsed instruction at 800186B4: mtspr 976 r25
Parsed instruction at 800186B8: mtspr 977 r26
Parsed instruction at 800186BC: mtspr 978 r27
Parsed instruction at 800186C0: mtspr 979 r28
Parsed instruction at 800186C4: mtspr 980 r29
Parsed instruction at 800186C8: mtspr 981 r30
Parsed instruction at 800186CC: mtspr 982 r31
Parsed label: L_800186D0:
Parsed instruction at 800186D0: lmw r16 0x1a8(r2)
Parsed instruction at 800186D4: mtsr 0 r16
Parsed instruction at 800186D8: mtsr 1 r17
Parsed instruction at 800186DC: mtsr 2 r18
Parsed instruction at 800186E0: mtsr 3 r19
Parsed instruction at 800186E4: mtsr 4 r20
Parsed instruction at 800186E8: mtsr 5 r21
Parsed instruction at 800186EC: mtsr 6 r22
Parsed instruction at 800186F0: mtsr 7 r23
Parsed instruction at 800186F4: mtsr 8 r24
Parsed instruction at 800186F8: mtsr 9 r25
Parsed instruction at 800186FC: mtsr 10 r26
Parsed instruction at 80018700: mtsr 11 r27
Parsed instruction at 80018704: mtsr 12 r28
Parsed instruction at 80018708: mtsr 13 r29
Parsed instruction at 8001870C: mtsr 14 r30
Parsed instruction at 80018710: mtsr 15 r31
Parsed instruction at 80018714: lmw r12 0x1f0(r2)
Parsed instruction at 80018718: mtspr HID0 r12
Parsed instruction at 8001871C: mtspr HID1 r13
Parsed instruction at 80018720: mtsrr1 r14
Parsed instruction at 80018724: mtspr PVR r15
Parsed instruction at 80018728: mtibatu 0 r16
Parsed instruction at 8001872C: mtibatl 0 r17
Parsed instruction at 80018730: mtibatu 1 r18
Parsed instruction at 80018734: mtibatl 1 r19
Parsed instruction at 80018738: mtibatu 2 r20
Parsed instruction at 8001873C: mtibatl 2 r21
Parsed instruction at 80018740: mtibatu 3 r22
Parsed instruction at 80018744: mtibatl 3 r23
Parsed instruction at 80018748: mtdbatu 0 r24
Parsed instruction at 8001874C: mtdbatl 0 r25
Parsed instruction at 80018750: mtdbatu 1 r26
Parsed instruction at 80018754: mtdbatl 1 r27
Parsed instruction at 80018758: mtdbatu 2 r28
Parsed instruction at 8001875C: mtdbatl 2 r29
Parsed instruction at 80018760: mtdbatu 3 r30
Parsed instruction at 80018764: mtdbatl 3 r31
Parsed instruction at 80018768: lmw r22 0x25c(r2)
Parsed instruction at 8001876C: mtsdr1 r22
Parsed instruction at 80018770: mtdar r23
Parsed instruction at 80018774: mtdsisr r24
Parsed instruction at 80018778: mtsprg 0 r25
Parsed instruction at 8001877C: mtsprg 1 r26
Parsed instruction at 80018780: mtsprg 2 r27
Parsed instruction at 80018784: mtsprg 3 r28
Parsed instruction at 80018788: mtspr IABR r30
Parsed instruction at 8001878C: mtear r31
Parsed instruction at 80018790: blr 
End of function: fn_800185DC, 114 instructions
Parsed function: fn_80018794 at 0x80018794
Parsed instruction at 80018794: li r3 0x54
Parsed instruction at 80018798: blr 
End of function: fn_80018794, 2 instructions
Parsed function: TRK_main at 0x8001879C
Parsed instruction at 8001879C: mflr r0
Parsed instruction at 800187A0: stw r0 0x4(r1)
Parsed instruction at 800187A4: stwu r1 -0x8(r1)
Parsed instruction at 800187A8: bl TRKInitializeNub
Parsed instruction at 800187AC: lis r4 TRK_mainError_8001EDD8@ha
Parsed instruction at 800187B0: stwu r3 TRK_mainError_8001EDD8@l(r4)
Parsed instruction at 800187B4: lwz r0 0x0(r4)
Parsed instruction at 800187B8: cmpwi r0 0x0
Parsed instruction at 800187BC: bne .L_800187C8
Parsed instruction at 800187C0: bl TRKNubWelcome
Parsed instruction at 800187C4: bl TRKNubMainLoop
Parsed label: L_800187C8:
Parsed instruction at 800187C8: bl TRKTerminateNub
Parsed instruction at 800187CC: lis r4 TRK_mainError_8001EDD8@ha
Parsed instruction at 800187D0: stw r3 TRK_mainError_8001EDD8@l(r4)
Parsed instruction at 800187D4: addi r1 r1 0x8
Parsed instruction at 800187D8: lwz r0 0x4(r1)
Parsed instruction at 800187DC: mtlr r0
Parsed instruction at 800187E0: blr 
End of function: TRK_main, 19 instructions
Parsed function: TRKLoadContext at 0x800187E4
Parsed instruction at 800187E4: lwz r0 0x0(r3)
Parsed instruction at 800187E8: lwz r1 0x4(r3)
Parsed instruction at 800187EC: lwz r2 0x8(r3)
Parsed instruction at 800187F0: lhz r5 0x1a2(r3)
Parsed instruction at 800187F4: rlwinm. r6 r5 0 30 30
Parsed instruction at 800187F8: beq .L_8001880C
Parsed instruction at 800187FC: rlwinm r5 r5 0 31 29
Parsed instruction at 80018800: sth r5 0x1a2(r3)
Parsed instruction at 80018804: lmw r5 0x14(r3)
Parsed instruction at 80018808: b .L_80018810
Parsed label: L_8001880C:
Parsed instruction at 8001880C: lmw r13 0x34(r3)
Parsed label: L_80018810:
Parsed instruction at 80018810: mr r31 r3
Parsed instruction at 80018814: mr r3 r4
Parsed instruction at 80018818: lwz r4 0x80(r31)
Parsed instruction at 8001881C: mtcrf 255 r4
Parsed instruction at 80018820: lwz r4 0x84(r31)
Parsed instruction at 80018824: mtlr r4
Parsed instruction at 80018828: lwz r4 0x88(r31)
Parsed instruction at 8001882C: mtctr r4
Parsed instruction at 80018830: lwz r4 0x8c(r31)
Parsed instruction at 80018834: mtxer r4
Parsed instruction at 80018838: mfmsr r4
Parsed instruction at 8001883C: rlwinm r4 r4 0 17 15
Parsed instruction at 80018840: rlwinm r4 r4 0 31 29
Parsed instruction at 80018844: mtmsr r4
Parsed instruction at 80018848: mtsprg 1 r2
Parsed instruction at 8001884C: lwz r4 0xc(r31)
Parsed instruction at 80018850: mtsprg 2 r4
Parsed instruction at 80018854: lwz r4 0x10(r31)
Parsed instruction at 80018858: mtsprg 3 r4
Parsed instruction at 8001885C: lwz r2 0x198(r31)
Parsed instruction at 80018860: lwz r4 0x19c(r31)
Parsed instruction at 80018864: lwz r31 0x7c(r31)
Parsed instruction at 80018868: b TRKInterruptHandler
End of function: TRKLoadContext, 36 instructions
Parsed function: TRKEXICallBack at 0x8001886C
Parsed instruction at 8001886C: mflr r0
Parsed instruction at 80018870: stw r0 0x4(r1)
Parsed instruction at 80018874: stwu r1 -0x10(r1)
Parsed instruction at 80018878: stw r31 0xc(r1)
Parsed instruction at 8001887C: mr r31 r4
Parsed instruction at 80018880: bl OSEnableScheduler
Parsed instruction at 80018884: mr r3 r31
Parsed instruction at 80018888: li r4 0x500
Parsed instruction at 8001888C: bl TRKLoadContext
Parsed instruction at 80018890: lwz r31 0xc(r1)
Parsed instruction at 80018894: addi r1 r1 0x10
Parsed instruction at 80018898: lwz r0 0x4(r1)
Parsed instruction at 8001889C: mtlr r0
Parsed instruction at 800188A0: blr 
End of function: TRKEXICallBack, 14 instructions
Parsed function: InitMetroTRKCommTable at 0x800188A4
Parsed instruction at 800188A4: mflr r0
Parsed instruction at 800188A8: stw r0 0x4(r1)
Parsed instruction at 800188AC: stwu r1 -0x8(r1)
Parsed instruction at 800188B0: cmpwi r3 0x1
Parsed instruction at 800188B4: bne .L_8001891C
Parsed instruction at 800188B8: bl Hu_IsStub
Parsed instruction at 800188BC: lis r5 DBInitComm@ha
Parsed instruction at 800188C0: lis r4 gDBCommTable@ha
Parsed instruction at 800188C4: addi r0 r5 DBInitComm@l
Parsed instruction at 800188C8: addi r5 r4 gDBCommTable@l
Parsed instruction at 800188CC: lis r4 DBInitInterrupts@ha
Parsed instruction at 800188D0: stw r0 0x0(r5)
Parsed instruction at 800188D4: addi r0 r4 DBInitInterrupts@l
Parsed instruction at 800188D8: lis r4 DBQueryData@ha
Parsed instruction at 800188DC: stw r0 0x4(r5)
Parsed instruction at 800188E0: addi r0 r4 DBQueryData@l
Parsed instruction at 800188E4: lis r4 DBRead@ha
Parsed instruction at 800188E8: stw r0 0x8(r5)
Parsed instruction at 800188EC: addi r0 r4 DBRead@l
Parsed instruction at 800188F0: lis r4 DBWrite@ha
Parsed instruction at 800188F4: stw r0 0xc(r5)
Parsed instruction at 800188F8: addi r0 r4 DBWrite@l
Parsed instruction at 800188FC: lis r4 DBOpen@ha
Parsed instruction at 80018900: stw r0 0x10(r5)
Parsed instruction at 80018904: addi r0 r4 DBOpen@l
Parsed instruction at 80018908: lis r4 DBClose@ha
Parsed instruction at 8001890C: stw r0 0x14(r5)
Parsed instruction at 80018910: addi r0 r4 DBClose@l
Parsed instruction at 80018914: stw r0 0x18(r5)
Parsed instruction at 80018918: b .L_8001897C
Parsed label: L_8001891C:
Parsed instruction at 8001891C: bl AMC_IsStub
Parsed instruction at 80018920: lis r5 EXI2_Init@ha
Parsed instruction at 80018924: lis r4 gDBCommTable@ha
Parsed instruction at 80018928: addi r0 r5 EXI2_Init@l
Parsed instruction at 8001892C: addi r5 r4 gDBCommTable@l
Parsed instruction at 80018930: lis r4 EXI2_EnableInterrupts@ha
Parsed instruction at 80018934: stw r0 0x0(r5)
Parsed instruction at 80018938: addi r0 r4 EXI2_EnableInterrupts@l
Parsed instruction at 8001893C: lis r4 EXI2_Poll@ha
Parsed instruction at 80018940: stw r0 0x4(r5)
Parsed instruction at 80018944: addi r0 r4 EXI2_Poll@l
Parsed instruction at 80018948: lis r4 EXI2_ReadN@ha
Parsed instruction at 8001894C: stw r0 0x8(r5)
Parsed instruction at 80018950: addi r0 r4 EXI2_ReadN@l
Parsed instruction at 80018954: lis r4 EXI2_WriteN@ha
Parsed instruction at 80018958: stw r0 0xc(r5)
Parsed instruction at 8001895C: addi r0 r4 EXI2_WriteN@l
Parsed instruction at 80018960: lis r4 EXI2_Reserve@ha
Parsed instruction at 80018964: stw r0 0x10(r5)
Parsed instruction at 80018968: addi r0 r4 EXI2_Reserve@l
Parsed instruction at 8001896C: lis r4 EXI2_Unreserve@ha
Parsed instruction at 80018970: stw r0 0x14(r5)
Parsed instruction at 80018974: addi r0 r4 EXI2_Unreserve@l
Parsed instruction at 80018978: stw r0 0x18(r5)
Parsed label: L_8001897C:
Parsed instruction at 8001897C: addi r1 r1 0x8
Parsed instruction at 80018980: lwz r0 0x4(r1)
Parsed instruction at 80018984: mtlr r0
Parsed instruction at 80018988: blr 
End of function: InitMetroTRKCommTable, 60 instructions
Parsed function: TRKUARTInterruptHandler at 0x8001898C
Parsed instruction at 8001898C: blr 
End of function: TRKUARTInterruptHandler, 1 instructions
Parsed function: TRKInitializeIntDrivenUART at 0x80018990
Parsed instruction at 80018990: mflr r0
Parsed instruction at 80018994: stw r0 0x4(r1)
Parsed instruction at 80018998: stwu r1 -0x8(r1)
Parsed instruction at 8001899C: lis r3 gDBCommTable@ha
Parsed instruction at 800189A0: addi r3 r3 gDBCommTable@l
Parsed instruction at 800189A4: lis r4 TRKEXICallBack@ha
Parsed instruction at 800189A8: lwz r12 0x0(r3)
Parsed instruction at 800189AC: addi r4 r4 TRKEXICallBack@l
Parsed instruction at 800189B0: mr r3 r6
Parsed instruction at 800189B4: mtlr r12
Parsed instruction at 800189B8: blrl 
Parsed instruction at 800189BC: li r3 0x0
Parsed instruction at 800189C0: addi r1 r1 0x8
Parsed instruction at 800189C4: lwz r0 0x4(r1)
Parsed instruction at 800189C8: mtlr r0
Parsed instruction at 800189CC: blr 
End of function: TRKInitializeIntDrivenUART, 16 instructions
Parsed function: fn_800189D0 at 0x800189D0
Parsed instruction at 800189D0: mflr r0
Parsed instruction at 800189D4: stw r0 0x4(r1)
Parsed instruction at 800189D8: stwu r1 -0x8(r1)
Parsed instruction at 800189DC: lis r3 gDBCommTable@ha
Parsed instruction at 800189E0: addi r3 r3 gDBCommTable@l
Parsed instruction at 800189E4: lwz r12 0x4(r3)
Parsed instruction at 800189E8: mtlr r12
Parsed instruction at 800189EC: blrl 
Parsed instruction at 800189F0: addi r1 r1 0x8
Parsed instruction at 800189F4: lwz r0 0x4(r1)
Parsed instruction at 800189F8: mtlr r0
Parsed instruction at 800189FC: blr 
End of function: fn_800189D0, 12 instructions
Parsed function: fn_80018A00 at 0x80018A00
Parsed instruction at 80018A00: mflr r0
Parsed instruction at 80018A04: stw r0 0x4(r1)
Parsed instruction at 80018A08: stwu r1 -0x8(r1)
Parsed instruction at 80018A0C: lis r3 gDBCommTable@ha
Parsed instruction at 80018A10: addi r3 r3 gDBCommTable@l
Parsed instruction at 80018A14: lwz r12 0x8(r3)
Parsed instruction at 80018A18: mtlr r12
Parsed instruction at 80018A1C: blrl 
Parsed instruction at 80018A20: addi r1 r1 0x8
Parsed instruction at 80018A24: lwz r0 0x4(r1)
Parsed instruction at 80018A28: mtlr r0
Parsed instruction at 80018A2C: blr 
End of function: fn_80018A00, 12 instructions
Parsed function: fn_80018A30 at 0x80018A30
Parsed instruction at 80018A30: mflr r0
Parsed instruction at 80018A34: stw r0 0x4(r1)
Parsed instruction at 80018A38: stwu r1 -0x8(r1)
Parsed instruction at 80018A3C: lis r5 gDBCommTable@ha
Parsed instruction at 80018A40: addi r5 r5 gDBCommTable@l
Parsed instruction at 80018A44: lwz r12 0xc(r5)
Parsed instruction at 80018A48: mtlr r12
Parsed instruction at 80018A4C: blrl 
Parsed instruction at 80018A50: cmpwi r3 0x0
Parsed instruction at 80018A54: bne .L_80018A60
Parsed instruction at 80018A58: li r3 0x0
Parsed instruction at 80018A5C: b .L_80018A64
Parsed label: L_80018A60:
Parsed instruction at 80018A60: li r3 -0x1
Parsed label: L_80018A64:
Parsed instruction at 80018A64: addi r1 r1 0x8
Parsed instruction at 80018A68: lwz r0 0x4(r1)
Parsed instruction at 80018A6C: mtlr r0
Parsed instruction at 80018A70: blr 
End of function: fn_80018A30, 19 instructions
Parsed function: fn_80018A74 at 0x80018A74
Parsed instruction at 80018A74: mflr r0
Parsed instruction at 80018A78: stw r0 0x4(r1)
Parsed instruction at 80018A7C: stwu r1 -0x8(r1)
Parsed instruction at 80018A80: lis r5 gDBCommTable@ha
Parsed instruction at 80018A84: addi r5 r5 gDBCommTable@l
Parsed instruction at 80018A88: lwz r12 0x10(r5)
Parsed instruction at 80018A8C: mtlr r12
Parsed instruction at 80018A90: blrl 
Parsed instruction at 80018A94: cmpwi r3 0x0
Parsed instruction at 80018A98: bne .L_80018AA4
Parsed instruction at 80018A9C: li r3 0x0
Parsed instruction at 80018AA0: b .L_80018AA8
Parsed label: L_80018AA4:
Parsed instruction at 80018AA4: li r3 -0x1
Parsed label: L_80018AA8:
Parsed instruction at 80018AA8: addi r1 r1 0x8
Parsed instruction at 80018AAC: lwz r0 0x4(r1)
Parsed instruction at 80018AB0: mtlr r0
Parsed instruction at 80018AB4: blr 
End of function: fn_80018A74, 19 instructions
Parsed function: fn_80018AB8 at 0x80018AB8
Parsed instruction at 80018AB8: mflr r0
Parsed instruction at 80018ABC: stw r0 0x4(r1)
Parsed instruction at 80018AC0: stwu r1 -0x8(r1)
Parsed instruction at 80018AC4: lis r3 gDBCommTable@ha
Parsed instruction at 80018AC8: addi r3 r3 gDBCommTable@l
Parsed instruction at 80018ACC: lwz r12 0x14(r3)
Parsed instruction at 80018AD0: mtlr r12
Parsed instruction at 80018AD4: blrl 
Parsed instruction at 80018AD8: addi r1 r1 0x8
Parsed instruction at 80018ADC: lwz r0 0x4(r1)
Parsed instruction at 80018AE0: mtlr r0
Parsed instruction at 80018AE4: blr 
End of function: fn_80018AB8, 12 instructions
Parsed function: fn_80018AE8 at 0x80018AE8
Parsed instruction at 80018AE8: mflr r0
Parsed instruction at 80018AEC: stw r0 0x4(r1)
Parsed instruction at 80018AF0: stwu r1 -0x8(r1)
Parsed instruction at 80018AF4: lis r3 gDBCommTable@ha
Parsed instruction at 80018AF8: addi r3 r3 gDBCommTable@l
Parsed instruction at 80018AFC: lwz r12 0x18(r3)
Parsed instruction at 80018B00: mtlr r12
Parsed instruction at 80018B04: blrl 
Parsed instruction at 80018B08: addi r1 r1 0x8
Parsed instruction at 80018B0C: lwz r0 0x4(r1)
Parsed instruction at 80018B10: mtlr r0
Parsed instruction at 80018B14: blr 
End of function: fn_80018AE8, 12 instructions
Parsed function: TRK_board_display at 0x80018B18
Parsed instruction at 80018B18: mflr r0
Parsed instruction at 80018B1C: stw r0 0x4(r1)
Parsed instruction at 80018B20: stwu r1 -0x8(r1)
Parsed instruction at 80018B24: crclr cr1eq
Parsed instruction at 80018B28: bl OSReport
Parsed instruction at 80018B2C: addi r1 r1 0x8
Parsed instruction at 80018B30: lwz r0 0x4(r1)
Parsed instruction at 80018B34: mtlr r0
Parsed instruction at 80018B38: blr 
End of function: TRK_board_display, 9 instructions
Parsed function: fn_80018B3C at 0x80018B3C
Parsed instruction at 80018B3C: mflr r0
Parsed instruction at 80018B40: li r3 0x0
Parsed instruction at 80018B44: stw r0 0x4(r1)
Parsed instruction at 80018B48: stwu r1 -0x8(r1)
Parsed instruction at 80018B4C: bl fn_80017E8C
Parsed instruction at 80018B50: bl fn_80018AE8
Parsed instruction at 80018B54: bl fn_80017888
Parsed instruction at 80018B58: bl fn_80018AB8
Parsed instruction at 80018B5C: li r3 0x0
Parsed instruction at 80018B60: addi r1 r1 0x8
Parsed instruction at 80018B64: lwz r0 0x4(r1)
Parsed instruction at 80018B68: mtlr r0
Parsed instruction at 80018B6C: blr 
End of function: fn_80018B3C, 13 instructions
Parsed function: fn_80018B70 at 0x80018B70
Parsed instruction at 80018B70: mflr r0
Parsed instruction at 80018B74: stw r0 0x4(r1)
Parsed instruction at 80018B78: stwu r1 -0x50(r1)
Parsed instruction at 80018B7C: stmw r21 0x24(r1)
Parsed instruction at 80018B80: addi r28 r3 0x0
Parsed instruction at 80018B84: addi r29 r4 0x0
Parsed instruction at 80018B88: addi r30 r5 0x0
Parsed instruction at 80018B8C: addi r22 r6 0x0
Parsed instruction at 80018B90: li r21 0x2
Parsed instruction at 80018B94: bl OSDisableInterrupts
Parsed instruction at 80018B98: lwz r4 lbl_8001EE48@sda21(r0)
Parsed instruction at 80018B9C: addi r31 r3 0x0
Parsed instruction at 80018BA0: lwz r0 0xc(r4)
Parsed instruction at 80018BA4: addi r3 r4 0xc
Parsed instruction at 80018BA8: clrlwi. r0 r0 30
Parsed instruction at 80018BAC: bne .L_80018BBC
Parsed instruction at 80018BB0: lwz r0 0x0(r3)
Parsed instruction at 80018BB4: rlwinm. r0 r0 0 29 29
Parsed instruction at 80018BB8: bne .L_80018BCC
Parsed label: L_80018BBC:
Parsed instruction at 80018BBC: mr r3 r31
Parsed instruction at 80018BC0: bl OSRestoreInterrupts
Parsed instruction at 80018BC4: li r3 0x0
Parsed instruction at 80018BC8: b .L_80018DA0
Parsed label: L_80018BCC:
Parsed instruction at 80018BCC: stw r22 0x4(r4)
Parsed instruction at 80018BD0: lwz r3 lbl_8001EE48@sda21(r0)
Parsed instruction at 80018BD4: lwz r0 0x4(r3)
Parsed instruction at 80018BD8: cmplwi r0 0x0
Parsed instruction at 80018BDC: beq .L_80018BFC
Parsed instruction at 80018BE0: li r3 0x0
Parsed instruction at 80018BE4: li r4 0x1
Parsed instruction at 80018BE8: bl fn_80018F4C
Parsed instruction at 80018BEC: mulli r0 r21 0x3
Parsed instruction at 80018BF0: lis r3 0x20
Parsed instruction at 80018BF4: srw r3 r3 r0
Parsed instruction at 80018BF8: bl __OSUnmaskInterrupts
Parsed label: L_80018BFC:
Parsed instruction at 80018BFC: lwz r3 lbl_8001EE48@sda21(r0)
Parsed instruction at 80018C00: cmplwi r30 0x0
Parsed instruction at 80018C04: lwz r0 0xc(r3)
Parsed instruction at 80018C08: ori r0 r0 0x2
Parsed instruction at 80018C0C: stw r0 0xc(r3)
Parsed instruction at 80018C10: beq .L_80018D48
Parsed instruction at 80018C14: li r12 0x0
Parsed instruction at 80018C18: cmpw r12 r29
Parsed instruction at 80018C1C: li r11 0x0
Parsed instruction at 80018C20: bge .L_80018D40
Parsed instruction at 80018C24: cmpwi r29 0x8
Parsed instruction at 80018C28: subi r3 r29 0x8
Parsed instruction at 80018C2C: ble .L_80018D98
Parsed instruction at 80018C30: addi r0 r3 0x7
Parsed instruction at 80018C34: srwi r0 r0 3
Parsed instruction at 80018C38: cmpwi r3 0x0
Parsed instruction at 80018C3C: mtctr r0
Parsed instruction at 80018C40: addi r10 r28 0x0
Parsed instruction at 80018C44: ble .L_80018D98
Parsed label: L_80018C48:
Parsed instruction at 80018C48: subfic r3 r12 0x3
Parsed instruction at 80018C4C: lbz r9 0x0(r10)
Parsed instruction at 80018C50: addi r0 r12 0x1
Parsed instruction at 80018C54: lbz r8 0x1(r10)
Parsed instruction at 80018C58: slwi r7 r3 3
Parsed instruction at 80018C5C: lbz r6 0x2(r10)
Parsed instruction at 80018C60: subfic r5 r0 0x3
Parsed instruction at 80018C64: lbz r4 0x3(r10)
Parsed instruction at 80018C68: addi r3 r12 0x2
Parsed instruction at 80018C6C: lbz r0 0x4(r10)
Parsed instruction at 80018C70: slw r9 r9 r7
Parsed instruction at 80018C74: lbz r22 0x5(r10)
Parsed instruction at 80018C78: slwi r7 r5 3
Parsed instruction at 80018C7C: lbz r24 0x6(r10)
Parsed instruction at 80018C80: subfic r3 r3 0x3
Parsed instruction at 80018C84: lbz r26 0x7(r10)
Parsed instruction at 80018C88: slwi r5 r3 3
Parsed instruction at 80018C8C: neg r3 r12
Parsed instruction at 80018C90: addi r21 r12 0x4
Parsed instruction at 80018C94: slwi r3 r3 3
Parsed instruction at 80018C98: subfic r21 r21 0x3
Parsed instruction at 80018C9C: addi r23 r12 0x5
Parsed instruction at 80018CA0: slwi r21 r21 3
Parsed instruction at 80018CA4: subfic r23 r23 0x3
Parsed instruction at 80018CA8: addi r25 r12 0x6
Parsed instruction at 80018CAC: slwi r23 r23 3
Parsed instruction at 80018CB0: subfic r25 r25 0x3
Parsed instruction at 80018CB4: addi r27 r12 0x7
Parsed instruction at 80018CB8: slwi r25 r25 3
Parsed instruction at 80018CBC: subfic r27 r27 0x3
Parsed instruction at 80018CC0: slwi r27 r27 3
Parsed instruction at 80018CC4: or r11 r11 r9
Parsed instruction at 80018CC8: slw r7 r8 r7
Parsed instruction at 80018CCC: or r11 r11 r7
Parsed instruction at 80018CD0: slw r5 r6 r5
Parsed instruction at 80018CD4: or r11 r11 r5
Parsed instruction at 80018CD8: slw r3 r4 r3
Parsed instruction at 80018CDC: or r11 r11 r3
Parsed instruction at 80018CE0: slw r0 r0 r21
Parsed instruction at 80018CE4: or r11 r11 r0
Parsed instruction at 80018CE8: slw r0 r22 r23
Parsed instruction at 80018CEC: or r11 r11 r0
Parsed instruction at 80018CF0: slw r0 r24 r25
Parsed instruction at 80018CF4: or r11 r11 r0
Parsed instruction at 80018CF8: slw r0 r26 r27
Parsed instruction at 80018CFC: or r11 r11 r0
Parsed instruction at 80018D00: addi r10 r10 0x8
Parsed instruction at 80018D04: addi r12 r12 0x8
Parsed instruction at 80018D08: bdnz .L_80018C48
Parsed instruction at 80018D0C: b .L_80018D98
Parsed label: L_80018D10:
Parsed instruction at 80018D10: subf r0 r12 r29
Parsed instruction at 80018D14: cmpw r12 r29
Parsed instruction at 80018D18: mtctr r0
Parsed instruction at 80018D1C: bge .L_80018D40
Parsed label: L_80018D20:
Parsed instruction at 80018D20: subfic r0 r12 0x3
Parsed instruction at 80018D24: lbz r3 0x0(r4)
Parsed instruction at 80018D28: slwi r0 r0 3
Parsed instruction at 80018D2C: slw r0 r3 r0
Parsed instruction at 80018D30: or r11 r11 r0
Parsed instruction at 80018D34: addi r4 r4 0x1
Parsed instruction at 80018D38: addi r12 r12 0x1
Parsed instruction at 80018D3C: bdnz .L_80018D20
Parsed label: L_80018D40:
Parsed instruction at 80018D40: lis r3 0xcc00
Parsed instruction at 80018D44: stw r11 0x6838(r3)
Parsed label: L_80018D48:
Parsed instruction at 80018D48: lwz r3 lbl_8001EE48@sda21(r0)
Parsed instruction at 80018D4C: cmplwi r30 0x1
Parsed instruction at 80018D50: stw r28 0x14(r3)
Parsed instruction at 80018D54: beq .L_80018D60
Parsed instruction at 80018D58: mr r6 r29
Parsed instruction at 80018D5C: b .L_80018D64
Parsed label: L_80018D60:
Parsed instruction at 80018D60: li r6 0x0
Parsed label: L_80018D64:
Parsed instruction at 80018D64: lwz r5 lbl_8001EE48@sda21(r0)
Parsed instruction at 80018D68: slwi r4 r30 2
Parsed instruction at 80018D6C: subi r0 r29 0x1
Parsed instruction at 80018D70: stw r6 0x10(r5)
Parsed instruction at 80018D74: ori r4 r4 0x1
Parsed instruction at 80018D78: slwi r0 r0 4
Parsed instruction at 80018D7C: lis r3 0xcc00
Parsed instruction at 80018D80: or r0 r4 r0
Parsed instruction at 80018D84: stw r0 0x6834(r3)
Parsed instruction at 80018D88: mr r3 r31
Parsed instruction at 80018D8C: bl OSRestoreInterrupts
Parsed instruction at 80018D90: li r3 0x1
Parsed instruction at 80018D94: b .L_80018DA0
Parsed label: L_80018D98:
Parsed instruction at 80018D98: add r4 r28 r12
Parsed instruction at 80018D9C: b .L_80018D10
Parsed label: L_80018DA0:
Parsed instruction at 80018DA0: lmw r21 0x24(r1)
Parsed instruction at 80018DA4: lwz r0 0x54(r1)
Parsed instruction at 80018DA8: addi r1 r1 0x50
Parsed instruction at 80018DAC: mtlr r0
Parsed instruction at 80018DB0: blr 
End of function: fn_80018B70, 157 instructions
Parsed function: fn_80018DB4 at 0x80018DB4
Parsed instruction at 80018DB4: mflr r0
Parsed instruction at 80018DB8: stw r0 0x4(r1)
Parsed instruction at 80018DBC: stwu r1 -0x18(r1)
Parsed instruction at 80018DC0: stw r31 0x14(r1)
Parsed instruction at 80018DC4: lwz r4 lbl_8001EE48@sda21(r0)
Parsed instruction at 80018DC8: b .L_80018F24
Parsed label: L_80018DCC:
Parsed instruction at 80018DCC: lwz r0 0x34(r3)
Parsed instruction at 80018DD0: clrlwi. r0 r0 31
Parsed instruction at 80018DD4: bne .L_80018F2C
Parsed instruction at 80018DD8: bl OSDisableInterrupts
Parsed instruction at 80018DDC: lwz r6 lbl_8001EE48@sda21(r0)
Parsed instruction at 80018DE0: lwz r0 0xc(r6)
Parsed instruction at 80018DE4: addi r4 r6 0xc
Parsed instruction at 80018DE8: clrlwi. r0 r0 30
Parsed instruction at 80018DEC: beq .L_80018F1C
Parsed instruction at 80018DF0: lwz r0 0x0(r4)
Parsed instruction at 80018DF4: rlwinm. r0 r0 0 30 30
Parsed instruction at 80018DF8: beq .L_80018F0C
Parsed instruction at 80018DFC: lwz r4 0x10(r6)
Parsed instruction at 80018E00: cmpwi r4 0x0
Parsed instruction at 80018E04: beq .L_80018F0C
Parsed instruction at 80018E08: lis r5 0xcc00
Parsed instruction at 80018E0C: lwz r7 0x14(r6)
Parsed instruction at 80018E10: lwz r6 0x6838(r5)
Parsed instruction at 80018E14: li r5 0x0
Parsed instruction at 80018E18: ble .L_80018F0C
Parsed instruction at 80018E1C: cmpwi r4 0x8
Parsed instruction at 80018E20: subi r8 r4 0x8
Parsed instruction at 80018E24: ble .L_80018EE0
Parsed instruction at 80018E28: addi r0 r8 0x7
Parsed instruction at 80018E2C: srwi r0 r0 3
Parsed instruction at 80018E30: cmpwi r8 0x0
Parsed instruction at 80018E34: mtctr r0
Parsed instruction at 80018E38: ble .L_80018EE0
Parsed label: L_80018E3C:
Parsed instruction at 80018E3C: subfic r0 r5 0x3
Parsed instruction at 80018E40: slwi r8 r0 3
Parsed instruction at 80018E44: addi r0 r5 0x1
Parsed instruction at 80018E48: srw r8 r6 r8
Parsed instruction at 80018E4C: subfic r0 r0 0x3
Parsed instruction at 80018E50: stb r8 0x0(r7)
Parsed instruction at 80018E54: slwi r0 r0 3
Parsed instruction at 80018E58: addi r8 r5 0x2
Parsed instruction at 80018E5C: srw r0 r6 r0
Parsed instruction at 80018E60: subfic r8 r8 0x3
Parsed instruction at 80018E64: stb r0 0x1(r7)
Parsed instruction at 80018E68: slwi r8 r8 3
Parsed instruction at 80018E6C: srw r31 r6 r8
Parsed instruction at 80018E70: neg r8 r5
Parsed instruction at 80018E74: stb r31 0x2(r7)
Parsed instruction at 80018E78: slwi r9 r8 3
Parsed instruction at 80018E7C: addi r8 r5 0x4
Parsed instruction at 80018E80: srw r12 r6 r9
Parsed instruction at 80018E84: subfic r8 r8 0x3
Parsed instruction at 80018E88: stb r12 0x3(r7)
Parsed instruction at 80018E8C: slwi r9 r8 3
Parsed instruction at 80018E90: addi r8 r5 0x5
Parsed instruction at 80018E94: srw r11 r6 r9
Parsed instruction at 80018E98: subfic r8 r8 0x3
Parsed instruction at 80018E9C: stb r11 0x4(r7)
Parsed instruction at 80018EA0: slwi r9 r8 3
Parsed instruction at 80018EA4: srw r10 r6 r9
Parsed instruction at 80018EA8: addi r8 r5 0x6
Parsed instruction at 80018EAC: stb r10 0x5(r7)
Parsed instruction at 80018EB0: subfic r9 r8 0x3
Parsed instruction at 80018EB4: addi r8 r5 0x7
Parsed instruction at 80018EB8: slwi r9 r9 3
Parsed instruction at 80018EBC: srw r9 r6 r9
Parsed instruction at 80018EC0: subfic r8 r8 0x3
Parsed instruction at 80018EC4: stb r9 0x6(r7)
Parsed instruction at 80018EC8: slwi r8 r8 3
Parsed instruction at 80018ECC: srw r8 r6 r8
Parsed instruction at 80018ED0: stb r8 0x7(r7)
Parsed instruction at 80018ED4: addi r7 r7 0x8
Parsed instruction at 80018ED8: addi r5 r5 0x8
Parsed instruction at 80018EDC: bdnz .L_80018E3C
Parsed label: L_80018EE0:
Parsed instruction at 80018EE0: subf r0 r5 r4
Parsed instruction at 80018EE4: cmpw r5 r4
Parsed instruction at 80018EE8: mtctr r0
Parsed instruction at 80018EEC: bge .L_80018F0C
Parsed label: L_80018EF0:
Parsed instruction at 80018EF0: subfic r0 r5 0x3
Parsed instruction at 80018EF4: slwi r0 r0 3
Parsed instruction at 80018EF8: srw r0 r6 r0
Parsed instruction at 80018EFC: stb r0 0x0(r7)
Parsed instruction at 80018F00: addi r7 r7 0x1
Parsed instruction at 80018F04: addi r5 r5 0x1
Parsed instruction at 80018F08: bdnz .L_80018EF0
Parsed label: L_80018F0C:
Parsed instruction at 80018F0C: lwz r4 lbl_8001EE48@sda21(r0)
Parsed instruction at 80018F10: lwz r0 0xc(r4)
Parsed instruction at 80018F14: clrrwi r0 r0 2
Parsed instruction at 80018F18: stw r0 0xc(r4)
Parsed label: L_80018F1C:
Parsed instruction at 80018F1C: bl OSRestoreInterrupts
Parsed instruction at 80018F20: b .L_80018F38
Parsed label: L_80018F24:
Parsed instruction at 80018F24: lis r3 0xcc00
Parsed instruction at 80018F28: addi r3 r3 0x6800
Parsed label: L_80018F2C:
Parsed instruction at 80018F2C: lwz r0 0xc(r4)
Parsed instruction at 80018F30: rlwinm. r0 r0 0 29 29
Parsed instruction at 80018F34: bne .L_80018DCC
Parsed label: L_80018F38:
Parsed instruction at 80018F38: lwz r0 0x1c(r1)
Parsed instruction at 80018F3C: lwz r31 0x14(r1)
Parsed instruction at 80018F40: addi r1 r1 0x18
Parsed instruction at 80018F44: mtlr r0
Parsed instruction at 80018F48: blr 
End of function: fn_80018DB4, 111 instructions
Parsed function: fn_80018F4C at 0x80018F4C
Parsed instruction at 80018F4C: cmpwi r3 0x0
Parsed instruction at 80018F50: beq .L_80018F68
Parsed instruction at 80018F54: lis r3 0xcc00
Parsed instruction at 80018F58: lwz r0 0x3000(r3)
Parsed instruction at 80018F5C: rlwinm r0 r0 0 19 19
Parsed instruction at 80018F60: ori r0 r0 0x1000
Parsed instruction at 80018F64: stw r0 0x3000(r3)
Parsed label: L_80018F68:
Parsed instruction at 80018F68: cmpwi r4 0x0
Parsed instruction at 80018F6C: beqlr 
Parsed instruction at 80018F70: lis r3 0xcc00
Parsed instruction at 80018F74: addi r3 r3 0x6800
Parsed instruction at 80018F78: lwz r0 0x28(r3)
Parsed instruction at 80018F7C: andi. r0 r0 0x7f5
Parsed instruction at 80018F80: ori r0 r0 0x8
Parsed instruction at 80018F84: stw r0 0x28(r3)
Parsed instruction at 80018F88: blr 
End of function: fn_80018F4C, 17 instructions
Parsed function: fn_80018F8C at 0x80018F8C
Parsed instruction at 80018F8C: mflr r0
Parsed instruction at 80018F90: stw r0 0x4(r1)
Parsed instruction at 80018F94: stwu r1 -0x18(r1)
Parsed instruction at 80018F98: stw r31 0x14(r1)
Parsed instruction at 80018F9C: stw r30 0x10(r1)
Parsed instruction at 80018FA0: mr r30 r3
Parsed instruction at 80018FA4: bl OSDisableInterrupts
Parsed instruction at 80018FA8: cmplwi r30 0x0
Parsed instruction at 80018FAC: addi r31 r3 0x0
Parsed instruction at 80018FB0: beq .L_80018FC0
Parsed instruction at 80018FB4: li r3 0x40
Parsed instruction at 80018FB8: bl __OSUnmaskInterrupts
Parsed instruction at 80018FBC: b .L_80018FC8
Parsed label: L_80018FC0:
Parsed instruction at 80018FC0: li r3 0x40
Parsed instruction at 80018FC4: bl __OSMaskInterrupts
Parsed label: L_80018FC8:
Parsed instruction at 80018FC8: lwz r4 lbl_8001EE48@sda21(r0)
Parsed instruction at 80018FCC: mr r3 r31
Parsed instruction at 80018FD0: lwz r31 0x0(r4)
Parsed instruction at 80018FD4: stw r30 0x0(r4)
Parsed instruction at 80018FD8: bl OSRestoreInterrupts
Parsed instruction at 80018FDC: lwz r0 0x1c(r1)
Parsed instruction at 80018FE0: mr r3 r31
Parsed instruction at 80018FE4: lwz r31 0x14(r1)
Parsed instruction at 80018FE8: lwz r30 0x10(r1)
Parsed instruction at 80018FEC: mtlr r0
Parsed instruction at 80018FF0: addi r1 r1 0x18
Parsed instruction at 80018FF4: blr 
End of function: fn_80018F8C, 29 instructions
Parsed function: fn_80018FF8 at 0x80018FF8
Parsed instruction at 80018FF8: mflr r0
Parsed instruction at 80018FFC: stw r0 0x4(r1)
Parsed instruction at 80019000: stwu r1 -0x18(r1)
Parsed instruction at 80019004: stw r31 0x14(r1)
Parsed instruction at 80019008: mr r31 r3
Parsed instruction at 8001900C: bl OSDisableInterrupts
Parsed instruction at 80019010: lwz r4 lbl_8001EE48@sda21(r0)
Parsed instruction at 80019014: lwz r0 0xc(r4)
Parsed instruction at 80019018: addi r5 r4 0xc
Parsed instruction at 8001901C: rlwinm. r0 r0 0 29 29
Parsed instruction at 80019020: beq .L_80019030
Parsed instruction at 80019024: bl OSRestoreInterrupts
Parsed instruction at 80019028: li r3 0x0
Parsed instruction at 8001902C: b .L_80019064
Parsed label: L_80019030:
Parsed instruction at 80019030: lwz r0 0x0(r5)
Parsed instruction at 80019034: lis r4 0xcc00
Parsed instruction at 80019038: addi r4 r4 0x6800
Parsed instruction at 8001903C: ori r0 r0 0x4
Parsed instruction at 80019040: stw r0 0x0(r5)
Parsed instruction at 80019044: slwi r0 r31 4
Parsed instruction at 80019048: ori r0 r0 0x80
Parsed instruction at 8001904C: lwz r5 0x28(r4)
Parsed instruction at 80019050: andi. r5 r5 0x405
Parsed instruction at 80019054: or r5 r5 r0
Parsed instruction at 80019058: stw r5 0x28(r4)
Parsed instruction at 8001905C: bl OSRestoreInterrupts
Parsed instruction at 80019060: li r3 0x1
Parsed label: L_80019064:
Parsed instruction at 80019064: lwz r0 0x1c(r1)
Parsed instruction at 80019068: lwz r31 0x14(r1)
Parsed instruction at 8001906C: addi r1 r1 0x18
Parsed instruction at 80019070: mtlr r0
Parsed instruction at 80019074: blr 
End of function: fn_80018FF8, 34 instructions
Parsed function: fn_80019078 at 0x80019078
Parsed instruction at 80019078: mflr r0
Parsed instruction at 8001907C: stw r0 0x4(r1)
Parsed instruction at 80019080: stwu r1 -0x8(r1)
Parsed instruction at 80019084: bl OSDisableInterrupts
Parsed instruction at 80019088: lwz r4 lbl_8001EE48@sda21(r0)
Parsed instruction at 8001908C: lwz r0 0xc(r4)
Parsed instruction at 80019090: addi r5 r4 0xc
Parsed instruction at 80019094: rlwinm. r0 r0 0 29 29
Parsed instruction at 80019098: bne .L_800190A8
Parsed instruction at 8001909C: bl OSRestoreInterrupts
Parsed instruction at 800190A0: li r3 0x0
Parsed instruction at 800190A4: b .L_800190D0
Parsed label: L_800190A8:
Parsed instruction at 800190A8: lwz r0 0x0(r5)
Parsed instruction at 800190AC: lis r4 0xcc00
Parsed instruction at 800190B0: addi r4 r4 0x6800
Parsed instruction at 800190B4: rlwinm r0 r0 0 30 28
Parsed instruction at 800190B8: stw r0 0x0(r5)
Parsed instruction at 800190BC: lwz r0 0x28(r4)
Parsed instruction at 800190C0: andi. r0 r0 0x405
Parsed instruction at 800190C4: stw r0 0x28(r4)
Parsed instruction at 800190C8: bl OSRestoreInterrupts
Parsed instruction at 800190CC: li r3 0x1
Parsed label: L_800190D0:
Parsed instruction at 800190D0: lwz r0 0xc(r1)
Parsed instruction at 800190D4: addi r1 r1 0x8
Parsed instruction at 800190D8: mtlr r0
Parsed instruction at 800190DC: blr 
End of function: fn_80019078, 28 instructions
Parsed function: fn_800190E0 at 0x800190E0
Parsed instruction at 800190E0: mflr r0
Parsed instruction at 800190E4: lis r5 0xcc00
Parsed instruction at 800190E8: stw r0 0x4(r1)
Parsed instruction at 800190EC: lwz r0 0x3000(r5)
Parsed instruction at 800190F0: stwu r1 -0x8(r1)
Parsed instruction at 800190F4: rlwinm r0 r0 0 19 19
Parsed instruction at 800190F8: lwz r3 lbl_8001EE48@sda21(r0)
Parsed instruction at 800190FC: ori r0 r0 0x1000
Parsed instruction at 80019100: stw r0 0x3000(r5)
Parsed instruction at 80019104: lwz r3 0x0(r3)
Parsed instruction at 80019108: cmplwi r3 0x0
Parsed instruction at 8001910C: mr r12 r3
Parsed instruction at 80019110: beq .L_80019120
Parsed instruction at 80019114: mtlr r12
Parsed instruction at 80019118: li r3 0x2
Parsed instruction at 8001911C: blrl 
Parsed label: L_80019120:
Parsed instruction at 80019120: lwz r0 0xc(r1)
Parsed instruction at 80019124: addi r1 r1 0x8
Parsed instruction at 80019128: mtlr r0
Parsed instruction at 8001912C: blr 
End of function: fn_800190E0, 21 instructions
Parsed function: fn_80019130 at 0x80019130
Parsed instruction at 80019130: mflr r0
Parsed instruction at 80019134: lis r3 0x1
Parsed instruction at 80019138: stw r0 0x4(r1)
Parsed instruction at 8001913C: addi r3 r3 -0x8000
Parsed instruction at 80019140: stwu r1 -0x8(r1)
Parsed instruction at 80019144: bl __OSMaskInterrupts
Parsed instruction at 80019148: lis r3 fn_800190E0@ha
Parsed instruction at 8001914C: addi r4 r3 fn_800190E0@l
Parsed instruction at 80019150: li r3 0x19
Parsed instruction at 80019154: bl __OSSetInterruptHandler
Parsed instruction at 80019158: li r3 0x40
Parsed instruction at 8001915C: bl __OSUnmaskInterrupts
Parsed instruction at 80019160: lwz r0 0xc(r1)
Parsed instruction at 80019164: addi r1 r1 0x8
Parsed instruction at 80019168: mtlr r0
Parsed instruction at 8001916C: blr 
End of function: fn_80019130, 16 instructions
Parsed function: fn_80019170 at 0x80019170
Parsed instruction at 80019170: mflr r0
Parsed instruction at 80019174: lis r3 lbl_8001EDE0@ha
Parsed instruction at 80019178: stw r0 0x4(r1)
Parsed instruction at 8001917C: addi r3 r3 lbl_8001EDE0@l
Parsed instruction at 80019180: li r4 0x0
Parsed instruction at 80019184: stwu r1 -0x8(r1)
Parsed instruction at 80019188: li r5 0x18
Parsed instruction at 8001918C: bl memset
Parsed instruction at 80019190: lis r4 0xcc00
Parsed instruction at 80019194: li r0 0x0
Parsed instruction at 80019198: stw r0 0x6828(r4)
Parsed instruction at 8001919C: stw r0 0x643c(r4)
Parsed instruction at 800191A0: lwz r0 0xc(r1)
Parsed instruction at 800191A4: addi r1 r1 0x8
Parsed instruction at 800191A8: mtlr r0
Parsed instruction at 800191AC: blr 
End of function: fn_80019170, 16 instructions
Parsed function: fn_800191B0 at 0x800191B0
Parsed instruction at 800191B0: mflr r0
Parsed instruction at 800191B4: stw r0 0x4(r1)
Parsed instruction at 800191B8: li r0 0x1
Parsed instruction at 800191BC: stwu r1 -0x8(r1)
Parsed instruction at 800191C0: lwz r3 lbl_8001EE50@sda21(r0)
Parsed instruction at 800191C4: stb r0 0x0(r3)
Parsed instruction at 800191C8: lwz r12 lbl_8001F068@sda21(r0)
Parsed instruction at 800191CC: cmplwi r12 0x0
Parsed instruction at 800191D0: beq .L_800191E0
Parsed instruction at 800191D4: mtlr r12
Parsed instruction at 800191D8: li r3 0x0
Parsed instruction at 800191DC: blrl 
Parsed label: L_800191E0:
Parsed instruction at 800191E0: lwz r0 0xc(r1)
Parsed instruction at 800191E4: addi r1 r1 0x8
Parsed instruction at 800191E8: mtlr r0
Parsed instruction at 800191EC: blr 
End of function: fn_800191B0, 17 instructions
Parsed function: EXI2_Init at 0x800191F0
Parsed instruction at 800191F0: mflr r0
Parsed instruction at 800191F4: stw r0 0x4(r1)
Parsed instruction at 800191F8: stwu r1 -0x30(r1)
Parsed instruction at 800191FC: stw r31 0x2c(r1)
Parsed instruction at 80019200: mr r31 r4
Parsed instruction at 80019204: lwz r0 lbl_8001EE50@sda21(r0)
Parsed instruction at 80019208: stw r0 0x0(r3)
Parsed instruction at 8001920C: bl OSDisableInterrupts
Parsed instruction at 80019210: stw r31 lbl_8001F068@sda21(r0)
Parsed instruction at 80019214: bl OSRestoreInterrupts
Parsed instruction at 80019218: bl fn_80019170
Parsed instruction at 8001921C: lis r4 0x100
Parsed instruction at 80019220: li r3 0x0
Parsed instruction at 80019224: addi r0 r4 0x3
Parsed instruction at 80019228: stw r3 0x20(r1)
Parsed instruction at 8001922C: stw r0 0x1c(r1)
Parsed instruction at 80019230: b .L_8001923C
Parsed label: L_80019234:
Parsed instruction at 80019234: li r3 0x5
Parsed instruction at 80019238: bl fn_80018FF8
Parsed label: L_8001923C:
Parsed instruction at 8001923C: cmpwi r3 0x0
Parsed instruction at 80019240: beq .L_80019234
Parsed instruction at 80019244: lis r0 0x8000
Parsed instruction at 80019248: stw r0 0x10(r1)
Parsed instruction at 8001924C: addi r3 r1 0x10
Parsed instruction at 80019250: li r4 0x2
Parsed instruction at 80019254: li r5 0x1
Parsed instruction at 80019258: li r6 0x0
Parsed instruction at 8001925C: bl fn_80018B70
Parsed instruction at 80019260: bl fn_80018DB4
Parsed instruction at 80019264: addi r3 r1 0x1c
Parsed instruction at 80019268: li r4 0x4
Parsed instruction at 8001926C: li r5 0x1
Parsed instruction at 80019270: li r6 0x0
Parsed instruction at 80019274: bl fn_80018B70
Parsed instruction at 80019278: bl fn_80018DB4
Parsed instruction at 8001927C: addi r3 r1 0x20
Parsed instruction at 80019280: li r4 0x4
Parsed instruction at 80019284: li r5 0x1
Parsed instruction at 80019288: li r6 0x0
Parsed instruction at 8001928C: bl fn_80018B70
Parsed instruction at 80019290: bl fn_80018DB4
Parsed instruction at 80019294: bl fn_80019078
Parsed instruction at 80019298: lwz r0 0x34(r1)
Parsed instruction at 8001929C: lwz r31 0x2c(r1)
Parsed instruction at 800192A0: addi r1 r1 0x30
Parsed instruction at 800192A4: mtlr r0
Parsed instruction at 800192A8: blr 
End of function: EXI2_Init, 49 instructions
Parsed function: EXI2_EnableInterrupts at 0x800192AC
Parsed instruction at 800192AC: mflr r0
Parsed instruction at 800192B0: lis r3 fn_800191B0@ha
Parsed instruction at 800192B4: stw r0 0x4(r1)
Parsed instruction at 800192B8: addi r3 r3 fn_800191B0@l
Parsed instruction at 800192BC: stwu r1 -0x8(r1)
Parsed instruction at 800192C0: bl fn_80018F8C
Parsed instruction at 800192C4: bl fn_80019130
Parsed instruction at 800192C8: lwz r0 0xc(r1)
Parsed instruction at 800192CC: addi r1 r1 0x8
Parsed instruction at 800192D0: mtlr r0
Parsed instruction at 800192D4: blr 
End of function: EXI2_EnableInterrupts, 11 instructions
Parsed function: EXI2_Poll at 0x800192D8
Parsed instruction at 800192D8: mflr r0
Parsed instruction at 800192DC: lis r3 0xcc00
Parsed instruction at 800192E0: stw r0 0x4(r1)
Parsed instruction at 800192E4: lwz r0 0x3000(r3)
Parsed instruction at 800192E8: stwu r1 -0x20(r1)
Parsed instruction at 800192EC: rlwinm. r0 r0 0 19 19
Parsed instruction at 800192F0: bne .L_80019310
Parsed instruction at 800192F4: lwz r3 lbl_8001EE50@sda21(r0)
Parsed instruction at 800192F8: lbz r0 0x0(r3)
Parsed instruction at 800192FC: cmplwi r0 0x0
Parsed instruction at 80019300: bne .L_80019310
Parsed instruction at 80019304: li r0 0x0
Parsed instruction at 80019308: stw r0 0x18(r1)
Parsed instruction at 8001930C: b .L_800193CC
Parsed label: L_80019310:
Parsed instruction at 80019310: lwz r0 lbl_8001F064@sda21(r0)
Parsed instruction at 80019314: cmpwi r0 0x0
Parsed instruction at 80019318: bne .L_8001938C
Parsed instruction at 8001931C: li r3 0x0
Parsed instruction at 80019320: b .L_8001932C
Parsed label: L_80019324:
Parsed instruction at 80019324: li r3 0x5
Parsed instruction at 80019328: bl fn_80018FF8
Parsed label: L_8001932C:
Parsed instruction at 8001932C: cmpwi r3 0x0
Parsed instruction at 80019330: beq .L_80019324
Parsed instruction at 80019334: bne .L_8001934C
Parsed instruction at 80019338: lis r3 lbl_8001BB28@ha
Parsed instruction at 8001933C: crclr cr1eq
Parsed instruction at 80019340: addi r3 r3 lbl_8001BB28@l
Parsed instruction at 80019344: bl fn_80012694
Parsed instruction at 80019348: b .L_8001938C
Parsed label: L_8001934C:
Parsed instruction at 8001934C: li r3 0x1
Parsed instruction at 80019350: li r0 0x0
Parsed instruction at 80019354: stw r3 lbl_8001F064@sda21(r0)
Parsed instruction at 80019358: addi r3 r1 0x8
Parsed instruction at 8001935C: stw r0 0x8(r1)
Parsed instruction at 80019360: li r4 0x2
Parsed instruction at 80019364: li r5 0x1
Parsed instruction at 80019368: li r6 0x0
Parsed instruction at 8001936C: bl fn_80018B70
Parsed instruction at 80019370: bl fn_80018DB4
Parsed instruction at 80019374: addi r3 r1 0x14
Parsed instruction at 80019378: li r4 0x2
Parsed instruction at 8001937C: li r5 0x0
Parsed instruction at 80019380: li r6 0x0
Parsed instruction at 80019384: bl fn_80018B70
Parsed instruction at 80019388: bl fn_80018DB4
Parsed label: L_8001938C:
Parsed instruction at 8001938C: addi r3 r1 0x18
Parsed instruction at 80019390: li r4 0x4
Parsed instruction at 80019394: li r5 0x0
Parsed instruction at 80019398: li r6 0x0
Parsed instruction at 8001939C: bl fn_80018B70
Parsed instruction at 800193A0: bl fn_80018DB4
Parsed instruction at 800193A4: lwz r5 lbl_8001EE50@sda21(r0)
Parsed instruction at 800193A8: lbz r0 0x0(r5)
Parsed instruction at 800193AC: cmplwi r0 0x0
Parsed instruction at 800193B0: bne .L_800193CC
Parsed instruction at 800193B4: lis r4 0xcc00
Parsed instruction at 800193B8: lwz r3 0x3000(r4)
Parsed instruction at 800193BC: li r0 0x1
Parsed instruction at 800193C0: stb r0 0x0(r5)
Parsed instruction at 800193C4: rlwinm r0 r3 0 19 19
Parsed instruction at 800193C8: stw r0 0x3000(r4)
Parsed label: L_800193CC:
Parsed instruction at 800193CC: lwz r0 0x24(r1)
Parsed instruction at 800193D0: lwz r3 0x18(r1)
Parsed instruction at 800193D4: addi r1 r1 0x20
Parsed instruction at 800193D8: mtlr r0
Parsed instruction at 800193DC: blr 
End of function: EXI2_Poll, 72 instructions
Parsed function: EXI2_ReadN at 0x800193E0
Parsed instruction at 800193E0: mflr r0
Parsed instruction at 800193E4: stw r0 0x4(r1)
Parsed instruction at 800193E8: stwu r1 -0x48(r1)
Parsed instruction at 800193EC: stmw r25 0x2c(r1)
Parsed instruction at 800193F0: addi r25 r3 0x0
Parsed instruction at 800193F4: addi r26 r4 0x0
Parsed instruction at 800193F8: lwz r0 lbl_8001F064@sda21(r0)
Parsed instruction at 800193FC: cmpwi r0 0x0
Parsed instruction at 80019400: beq .L_8001940C
Parsed instruction at 80019404: li r27 0x1
Parsed instruction at 80019408: b .L_80019484
Parsed label: L_8001940C:
Parsed instruction at 8001940C: li r3 0x0
Parsed instruction at 80019410: b .L_8001941C
Parsed label: L_80019414:
Parsed instruction at 80019414: li r3 0x5
Parsed instruction at 80019418: bl fn_80018FF8
Parsed label: L_8001941C:
Parsed instruction at 8001941C: cmpwi r3 0x0
Parsed instruction at 80019420: beq .L_80019414
Parsed instruction at 80019424: mr r27 r3
Parsed instruction at 80019428: bne .L_80019444
Parsed instruction at 8001942C: lis r3 lbl_8001BB28@ha
Parsed instruction at 80019430: crclr cr1eq
Parsed instruction at 80019434: addi r3 r3 lbl_8001BB28@l
Parsed instruction at 80019438: bl fn_80012694
Parsed instruction at 8001943C: li r27 0x0
Parsed instruction at 80019440: b .L_80019484
Parsed label: L_80019444:
Parsed instruction at 80019444: li r3 0x1
Parsed instruction at 80019448: li r0 0x0
Parsed instruction at 8001944C: stw r3 lbl_8001F064@sda21(r0)
Parsed instruction at 80019450: addi r3 r1 0x14
Parsed instruction at 80019454: stw r0 0x14(r1)
Parsed instruction at 80019458: li r4 0x2
Parsed instruction at 8001945C: li r5 0x1
Parsed instruction at 80019460: li r6 0x0
Parsed instruction at 80019464: bl fn_80018B70
Parsed instruction at 80019468: bl fn_80018DB4
Parsed instruction at 8001946C: addi r3 r1 0x1c
Parsed instruction at 80019470: li r4 0x2
Parsed instruction at 80019474: li r5 0x0
Parsed instruction at 80019478: li r6 0x0
Parsed instruction at 8001947C: bl fn_80018B70
Parsed instruction at 80019480: bl fn_80018DB4
Parsed label: L_80019484:
Parsed instruction at 80019484: cmpwi r27 0x0
Parsed instruction at 80019488: bne .L_80019494
Parsed instruction at 8001948C: li r3 0x1
Parsed instruction at 80019490: b .L_80019688
Parsed label: L_80019494:
Parsed instruction at 80019494: clrlwi. r4 r26 30
Parsed instruction at 80019498: beq .L_800194A4
Parsed instruction at 8001949C: li r3 0x1
Parsed instruction at 800194A0: b .L_800194A8
Parsed label: L_800194A4:
Parsed instruction at 800194A4: li r3 0x0
Parsed label: L_800194A8:
Parsed instruction at 800194A8: srawi r28 r26 2
Parsed instruction at 800194AC: srwi r0 r26 2
Parsed instruction at 800194B0: addze r28 r28
Parsed instruction at 800194B4: add r3 r0 r3
Parsed instruction at 800194B8: clrlwi r0 r26 31
Parsed instruction at 800194BC: slwi r28 r28 2
Parsed instruction at 800194C0: add r29 r4 r0
Parsed instruction at 800194C4: subfc r28 r28 r26
Parsed instruction at 800194C8: subi r31 r3 0x1
Parsed instruction at 800194CC: li r27 0x0
Parsed instruction at 800194D0: li r30 0x0
Parsed instruction at 800194D4: b .L_80019658
Parsed label: L_800194D8:
Parsed instruction at 800194D8: cmplw r30 r31
Parsed instruction at 800194DC: bge .L_800194E8
Parsed instruction at 800194E0: li r4 0x4
Parsed instruction at 800194E4: b .L_800194FC
Parsed label: L_800194E8:
Parsed instruction at 800194E8: cmplwi r29 0x2
Parsed instruction at 800194EC: bne .L_800194F8
Parsed instruction at 800194F0: li r4 0x2
Parsed instruction at 800194F4: b .L_800194FC
Parsed label: L_800194F8:
Parsed instruction at 800194F8: li r4 0x4
Parsed label: L_800194FC:
Parsed instruction at 800194FC: addi r3 r1 0x20
Parsed instruction at 80019500: li r5 0x0
Parsed instruction at 80019504: li r6 0x0
Parsed instruction at 80019508: bl fn_80018B70
Parsed instruction at 8001950C: bl fn_80018DB4
Parsed instruction at 80019510: subf r0 r27 r26
Parsed instruction at 80019514: cmplwi r0 0x4
Parsed instruction at 80019518: blt .L_80019524
Parsed instruction at 8001951C: li r5 0x4
Parsed instruction at 80019520: b .L_80019528
Parsed label: L_80019524:
Parsed instruction at 80019524: mr r5 r28
Parsed label: L_80019528:
Parsed instruction at 80019528: cmpwi r5 0x0
Parsed instruction at 8001952C: li r4 0x0
Parsed instruction at 80019530: ble .L_80019650
Parsed instruction at 80019534: cmpwi r5 0x8
Parsed instruction at 80019538: subi r3 r5 0x8
Parsed instruction at 8001953C: ble .L_8001967C
Parsed instruction at 80019540: addi r0 r3 0x7
Parsed instruction at 80019544: srwi r0 r0 3
Parsed instruction at 80019548: cmpwi r3 0x0
Parsed instruction at 8001954C: mtctr r0
Parsed instruction at 80019550: add r3 r25 r27
Parsed instruction at 80019554: ble .L_8001967C
Parsed label: L_80019558:
Parsed instruction at 80019558: subfic r0 r4 0x3
Parsed instruction at 8001955C: lwz r6 0x20(r1)
Parsed instruction at 80019560: slwi r0 r0 3
Parsed instruction at 80019564: srw r0 r6 r0
Parsed instruction at 80019568: stb r0 0x0(r3)
Parsed instruction at 8001956C: addi r0 r4 0x1
Parsed instruction at 80019570: subfic r0 r0 0x3
Parsed instruction at 80019574: lwz r7 0x20(r1)
Parsed instruction at 80019578: slwi r6 r0 3
Parsed instruction at 8001957C: addi r0 r4 0x2
Parsed instruction at 80019580: srw r6 r7 r6
Parsed instruction at 80019584: stb r6 0x1(r3)
Parsed instruction at 80019588: subfic r0 r0 0x3
Parsed instruction at 8001958C: slwi r7 r0 3
Parsed instruction at 80019590: lwz r8 0x20(r1)
Parsed instruction at 80019594: neg r6 r4
Parsed instruction at 80019598: addi r0 r4 0x4
Parsed instruction at 8001959C: srw r7 r8 r7
Parsed instruction at 800195A0: stb r7 0x2(r3)
Parsed instruction at 800195A4: subfic r8 r0 0x3
Parsed instruction at 800195A8: addi r0 r4 0x5
Parsed instruction at 800195AC: lwz r9 0x20(r1)
Parsed instruction at 800195B0: subfic r7 r0 0x3
Parsed instruction at 800195B4: slwi r6 r6 3
Parsed instruction at 800195B8: srw r0 r9 r6
Parsed instruction at 800195BC: stb r0 0x3(r3)
Parsed instruction at 800195C0: addi r0 r4 0x6
Parsed instruction at 800195C4: subfic r6 r0 0x3
Parsed instruction at 800195C8: lwz r9 0x20(r1)
Parsed instruction at 800195CC: addi r0 r4 0x7
Parsed instruction at 800195D0: slwi r8 r8 3
Parsed instruction at 800195D4: srw r8 r9 r8
Parsed instruction at 800195D8: stb r8 0x4(r3)
Parsed instruction at 800195DC: subfic r0 r0 0x3
Parsed instruction at 800195E0: slwi r7 r7 3
Parsed instruction at 800195E4: lwz r8 0x20(r1)
Parsed instruction at 800195E8: slwi r6 r6 3
Parsed instruction at 800195EC: slwi r0 r0 3
Parsed instruction at 800195F0: srw r7 r8 r7
Parsed instruction at 800195F4: stb r7 0x5(r3)
Parsed instruction at 800195F8: addi r4 r4 0x8
Parsed instruction at 800195FC: lwz r7 0x20(r1)
Parsed instruction at 80019600: srw r6 r7 r6
Parsed instruction at 80019604: stb r6 0x6(r3)
Parsed instruction at 80019608: lwz r6 0x20(r1)
Parsed instruction at 8001960C: srw r0 r6 r0
Parsed instruction at 80019610: stb r0 0x7(r3)
Parsed instruction at 80019614: addi r3 r3 0x8
Parsed instruction at 80019618: bdnz .L_80019558
Parsed instruction at 8001961C: b .L_8001967C
Parsed label: L_80019620:
Parsed instruction at 80019620: subf r0 r4 r5
Parsed instruction at 80019624: cmpw r4 r5
Parsed instruction at 80019628: mtctr r0
Parsed instruction at 8001962C: bge .L_80019650
Parsed label: L_80019630:
Parsed instruction at 80019630: subfic r0 r4 0x3
Parsed instruction at 80019634: lwz r3 0x20(r1)
Parsed instruction at 80019638: slwi r0 r0 3
Parsed instruction at 8001963C: srw r0 r3 r0
Parsed instruction at 80019640: stb r0 0x0(r6)
Parsed instruction at 80019644: addi r6 r6 0x1
Parsed instruction at 80019648: addi r4 r4 0x1
Parsed instruction at 8001964C: bdnz .L_80019630
Parsed label: L_80019650:
Parsed instruction at 80019650: addi r30 r30 0x1
Parsed instruction at 80019654: addi r27 r27 0x4
Parsed label: L_80019658:
Parsed instruction at 80019658: cmplw r27 r26
Parsed instruction at 8001965C: blt .L_800194D8
Parsed instruction at 80019660: bl fn_80019078
Parsed instruction at 80019664: li r0 0x0
Parsed instruction at 80019668: lwz r4 lbl_8001EE50@sda21(r0)
Parsed instruction at 8001966C: stw r0 lbl_8001F064@sda21(r0)
Parsed instruction at 80019670: li r3 0x0
Parsed instruction at 80019674: stb r0 0x0(r4)
Parsed instruction at 80019678: b .L_80019688
Parsed label: L_8001967C:
Parsed instruction at 8001967C: add r6 r27 r4
Parsed instruction at 80019680: add r6 r25 r6
Parsed instruction at 80019684: b .L_80019620
Parsed label: L_80019688:
Parsed instruction at 80019688: lmw r25 0x2c(r1)
Parsed instruction at 8001968C: lwz r0 0x4c(r1)
Parsed instruction at 80019690: addi r1 r1 0x48
Parsed instruction at 80019694: mtlr r0
Parsed instruction at 80019698: blr 
End of function: EXI2_ReadN, 196 instructions
Parsed function: EXI2_WriteN at 0x8001969C
Parsed instruction at 8001969C: mflr r0
Parsed instruction at 800196A0: stw r0 0x4(r1)
Parsed instruction at 800196A4: stwu r1 -0x40(r1)
Parsed instruction at 800196A8: stw r31 0x3c(r1)
Parsed instruction at 800196AC: stw r30 0x38(r1)
Parsed instruction at 800196B0: stw r29 0x34(r1)
Parsed instruction at 800196B4: addi r29 r3 0x0
Parsed instruction at 800196B8: li r3 0x0
Parsed instruction at 800196BC: stw r28 0x30(r1)
Parsed instruction at 800196C0: stw r4 0x28(r1)
Parsed instruction at 800196C4: b .L_800196D0
Parsed label: L_800196C8:
Parsed instruction at 800196C8: li r3 0x5
Parsed instruction at 800196CC: bl fn_80018FF8
Parsed label: L_800196D0:
Parsed instruction at 800196D0: cmpwi r3 0x0
Parsed instruction at 800196D4: beq .L_800196C8
Parsed instruction at 800196D8: bne .L_800196E4
Parsed instruction at 800196DC: li r3 0x1
Parsed instruction at 800196E0: b .L_8001982C
Parsed label: L_800196E4:
Parsed instruction at 800196E4: lis r0 0x8000
Parsed instruction at 800196E8: stw r0 0x18(r1)
Parsed instruction at 800196EC: addi r3 r1 0x18
Parsed instruction at 800196F0: li r4 0x2
Parsed instruction at 800196F4: li r5 0x1
Parsed instruction at 800196F8: li r6 0x0
Parsed instruction at 800196FC: bl fn_80018B70
Parsed instruction at 80019700: bl fn_80018DB4
Parsed instruction at 80019704: addi r3 r1 0x28
Parsed instruction at 80019708: li r4 0x4
Parsed instruction at 8001970C: li r5 0x1
Parsed instruction at 80019710: li r6 0x0
Parsed instruction at 80019714: bl fn_80018B70
Parsed instruction at 80019718: bl fn_80018DB4
Parsed instruction at 8001971C: lwz r4 0x28(r1)
Parsed instruction at 80019720: clrlwi. r0 r4 30
Parsed instruction at 80019724: beq .L_80019730
Parsed instruction at 80019728: li r3 0x1
Parsed instruction at 8001972C: b .L_80019734
Parsed label: L_80019730:
Parsed instruction at 80019730: li r3 0x0
Parsed label: L_80019734:
Parsed instruction at 80019734: srwi r0 r4 2
Parsed instruction at 80019738: add r28 r0 r3
Parsed instruction at 8001973C: subi r31 r28 0x1
Parsed instruction at 80019740: li r30 0x0
Parsed instruction at 80019744: b .L_80019798
Parsed label: L_80019748:
Parsed instruction at 80019748: cmplw r30 r31
Parsed instruction at 8001974C: bge .L_80019758
Parsed instruction at 80019750: li r4 0x4
Parsed instruction at 80019754: b .L_8001977C
Parsed label: L_80019758:
Parsed instruction at 80019758: lwz r0 0x28(r1)
Parsed instruction at 8001975C: clrlwi r3 r0 30
Parsed instruction at 80019760: clrlwi r0 r0 31
Parsed instruction at 80019764: add r0 r3 r0
Parsed instruction at 80019768: cmplwi r0 0x2
Parsed instruction at 8001976C: bne .L_80019778
Parsed instruction at 80019770: li r4 0x2
Parsed instruction at 80019774: b .L_8001977C
Parsed label: L_80019778:
Parsed instruction at 80019778: li r4 0x4
Parsed label: L_8001977C:
Parsed instruction at 8001977C: addi r3 r29 0x0
Parsed instruction at 80019780: li r5 0x1
Parsed instruction at 80019784: li r6 0x0
Parsed instruction at 80019788: addi r29 r29 0x4
Parsed instruction at 8001978C: bl fn_80018B70
Parsed instruction at 80019790: bl fn_80018DB4
Parsed instruction at 80019794: addi r30 r30 0x1
Parsed label: L_80019798:
Parsed instruction at 80019798: cmplw r30 r28
Parsed instruction at 8001979C: blt .L_80019748
Parsed instruction at 800197A0: bl fn_80019078
Parsed instruction at 800197A4: li r3 0x0
Parsed instruction at 800197A8: b .L_800197B4
Parsed label: L_800197AC:
Parsed instruction at 800197AC: li r3 0x5
Parsed instruction at 800197B0: bl fn_80018FF8
Parsed label: L_800197B4:
Parsed instruction at 800197B4: cmpwi r3 0x0
Parsed instruction at 800197B8: beq .L_800197AC
Parsed instruction at 800197BC: bne .L_800197C8
Parsed instruction at 800197C0: li r3 0x1
Parsed instruction at 800197C4: b .L_8001982C
Parsed label: L_800197C8:
Parsed instruction at 800197C8: lis r0 0x1
Parsed instruction at 800197CC: stw r0 0x10(r1)
Parsed instruction at 800197D0: addi r3 r1 0x10
Parsed instruction at 800197D4: li r4 0x2
Parsed instruction at 800197D8: li r5 0x1
Parsed instruction at 800197DC: li r6 0x0
Parsed instruction at 800197E0: bl fn_80018B70
Parsed instruction at 800197E4: bl fn_80018DB4
Parsed instruction at 800197E8: addi r3 r1 0x24
Parsed instruction at 800197EC: li r4 0x2
Parsed instruction at 800197F0: li r5 0x0
Parsed instruction at 800197F4: li r6 0x0
Parsed instruction at 800197F8: bl fn_80018B70
Parsed instruction at 800197FC: bl fn_80018DB4
Parsed label: L_80019800:
Parsed instruction at 80019800: addi r3 r1 0x24
Parsed instruction at 80019804: li r4 0x2
Parsed instruction at 80019808: li r5 0x0
Parsed instruction at 8001980C: li r6 0x0
Parsed instruction at 80019810: bl fn_80018B70
Parsed instruction at 80019814: bl fn_80018DB4
Parsed instruction at 80019818: lwz r0 0x24(r1)
Parsed instruction at 8001981C: extrwi. r0 r0 1 15
Parsed instruction at 80019820: beq .L_80019800
Parsed instruction at 80019824: bl fn_80019078
Parsed instruction at 80019828: li r3 0x0
Parsed label: L_8001982C:
Parsed instruction at 8001982C: lwz r0 0x44(r1)
Parsed instruction at 80019830: lwz r31 0x3c(r1)
Parsed instruction at 80019834: lwz r30 0x38(r1)
Parsed instruction at 80019838: mtlr r0
Parsed instruction at 8001983C: lwz r29 0x34(r1)
Parsed instruction at 80019840: lwz r28 0x30(r1)
Parsed instruction at 80019844: addi r1 r1 0x40
Parsed instruction at 80019848: blr 
End of function: EXI2_WriteN, 123 instructions
Parsed function: EXI2_Reserve at 0x8001984C
Parsed instruction at 8001984C: blr 
End of function: EXI2_Reserve, 1 instructions
Parsed function: EXI2_Unreserve at 0x80019850
Parsed instruction at 80019850: blr 
End of function: EXI2_Unreserve, 1 instructions
Parsed function: AMC_IsStub at 0x80019854
Parsed instruction at 80019854: li r3 0x0
Parsed instruction at 80019858: blr 
End of function: AMC_IsStub, 2 instructions
Parsed function: fn_8001985C at 0x8001985C
Parsed instruction at 8001985C: li r0 0x0
Parsed instruction at 80019860: lis r3 0xcc00
Parsed instruction at 80019864: addi r3 r3 0x6400
Parsed instruction at 80019868: stw r0 0x3c(r3)
Parsed instruction at 8001986C: blr 
End of function: fn_8001985C, 5 instructions
Parsed function: fn_80019870 at 0x80019870
Parsed instruction at 80019870: mflr r0
Parsed instruction at 80019874: stw r0 0x4(r1)
Parsed instruction at 80019878: stwu r1 -0x8(r1)
Parsed instruction at 8001987C: lis r3 0x2
Parsed instruction at 80019880: addi r3 r3 -0x8000
Parsed instruction at 80019884: bl __OSMaskInterrupts
Parsed instruction at 80019888: bl fn_8001985C
Parsed instruction at 8001988C: li r0 0x0
Parsed instruction at 80019890: lis r3 0xcc00
Parsed instruction at 80019894: addi r3 r3 0x6800
Parsed instruction at 80019898: stw r0 0x28(r3)
Parsed instruction at 8001989C: lwz r0 0xc(r1)
Parsed instruction at 800198A0: addi r1 r1 0x8
Parsed instruction at 800198A4: mtlr r0
Parsed instruction at 800198A8: blr 
End of function: fn_80019870, 15 instructions
Parsed function: fn_800198AC at 0x800198AC
Parsed instruction at 800198AC: lis r4 0xcc00
Parsed instruction at 800198B0: addi r4 r4 0x6800
Parsed instruction at 800198B4: addi r4 r4 0x28
Parsed instruction at 800198B8: lwz r5 0x0(r4)
Parsed instruction at 800198BC: andi. r5 r5 0x405
Parsed instruction at 800198C0: slwi r0 r3 4
Parsed instruction at 800198C4: ori r0 r0 0x80
Parsed instruction at 800198C8: or r5 r5 r0
Parsed instruction at 800198CC: stw r5 0x0(r4)
Parsed instruction at 800198D0: li r3 0x1
Parsed instruction at 800198D4: blr 
End of function: fn_800198AC, 11 instructions
Parsed function: fn_800198D8 at 0x800198D8
Parsed instruction at 800198D8: lis r3 0xcc00
Parsed instruction at 800198DC: addi r3 r3 0x6800
Parsed instruction at 800198E0: addi r3 r3 0x28
Parsed instruction at 800198E4: lwz r0 0x0(r3)
Parsed instruction at 800198E8: andi. r0 r0 0x405
Parsed instruction at 800198EC: stw r0 0x0(r3)
Parsed instruction at 800198F0: li r3 0x1
Parsed instruction at 800198F4: blr 
End of function: fn_800198D8, 8 instructions
Parsed function: fn_800198F8 at 0x800198F8
Parsed instruction at 800198F8: lis r3 0xcc00
Parsed instruction at 800198FC: addi r3 r3 0x6800
Parsed instruction at 80019900: b .L_80019904
Parsed label: L_80019904:
Parsed instruction at 80019904: b .L_80019908
Parsed label: L_80019908:
Parsed instruction at 80019908: lwz r0 0x34(r3)
Parsed instruction at 8001990C: clrlwi r0 r0 31
Parsed instruction at 80019910: cmplwi r0 0x0
Parsed instruction at 80019914: bne .L_80019908
Parsed instruction at 80019918: li r3 0x1
Parsed instruction at 8001991C: blr 
End of function: fn_800198F8, 12 instructions
Parsed function: fn_80019920 at 0x80019920
Parsed instruction at 80019920: mflr r0
Parsed instruction at 80019924: stw r0 0x4(r1)
Parsed instruction at 80019928: stwu r1 -0x30(r1)
Parsed instruction at 8001992C: stw r31 0x2c(r1)
Parsed instruction at 80019930: stw r30 0x28(r1)
Parsed instruction at 80019934: stw r29 0x24(r1)
Parsed instruction at 80019938: stw r28 0x20(r1)
Parsed instruction at 8001993C: mr r29 r3
Parsed instruction at 80019940: mr r30 r4
Parsed instruction at 80019944: mr r31 r5
Parsed instruction at 80019948: cmplwi r31 0x0
Parsed instruction at 8001994C: beq .L_80019A94
Parsed instruction at 80019950: li r0 0x0
Parsed instruction at 80019954: li r4 0x0
Parsed instruction at 80019958: cmpw r4 r30
Parsed instruction at 8001995C: bge .L_80019A88
Parsed instruction at 80019960: subi r6 r30 0x8
Parsed instruction at 80019964: cmpwi r30 0x8
Parsed instruction at 80019968: ble .L_80019C1C
Parsed instruction at 8001996C: mr r3 r29
Parsed instruction at 80019970: b .L_80019974
Parsed label: L_80019974:
Parsed instruction at 80019974: addi r5 r6 0x7
Parsed instruction at 80019978: srwi r5 r5 3
Parsed instruction at 8001997C: mtctr r5
Parsed instruction at 80019980: cmpwi r6 0x0
Parsed instruction at 80019984: ble .L_80019A50
Parsed instruction at 80019988: b .L_8001998C
Parsed label: L_8001998C:
Parsed instruction at 8001998C: lbz r6 0x0(r3)
Parsed instruction at 80019990: subfic r5 r4 0x3
Parsed instruction at 80019994: slwi r5 r5 3
Parsed instruction at 80019998: slw r5 r6 r5
Parsed instruction at 8001999C: or r0 r0 r5
Parsed instruction at 800199A0: lbz r6 0x1(r3)
Parsed instruction at 800199A4: addi r5 r4 0x1
Parsed instruction at 800199A8: subfic r5 r5 0x3
Parsed instruction at 800199AC: slwi r5 r5 3
Parsed instruction at 800199B0: slw r5 r6 r5
Parsed instruction at 800199B4: or r0 r0 r5
Parsed instruction at 800199B8: lbz r6 0x2(r3)
Parsed instruction at 800199BC: addi r5 r4 0x2
Parsed instruction at 800199C0: subfic r5 r5 0x3
Parsed instruction at 800199C4: slwi r5 r5 3
Parsed instruction at 800199C8: slw r5 r6 r5
Parsed instruction at 800199CC: or r0 r0 r5
Parsed instruction at 800199D0: lbz r6 0x3(r3)
Parsed instruction at 800199D4: neg r5 r4
Parsed instruction at 800199D8: slwi r5 r5 3
Parsed instruction at 800199DC: slw r5 r6 r5
Parsed instruction at 800199E0: or r0 r0 r5
Parsed instruction at 800199E4: lbz r6 0x4(r3)
Parsed instruction at 800199E8: addi r5 r4 0x4
Parsed instruction at 800199EC: subfic r5 r5 0x3
Parsed instruction at 800199F0: slwi r5 r5 3
Parsed instruction at 800199F4: slw r5 r6 r5
Parsed instruction at 800199F8: or r0 r0 r5
Parsed instruction at 800199FC: lbz r6 0x5(r3)
Parsed instruction at 80019A00: addi r5 r4 0x5
Parsed instruction at 80019A04: subfic r5 r5 0x3
Parsed instruction at 80019A08: slwi r5 r5 3
Parsed instruction at 80019A0C: slw r5 r6 r5
Parsed instruction at 80019A10: or r0 r0 r5
Parsed instruction at 80019A14: lbz r6 0x6(r3)
Parsed instruction at 80019A18: addi r5 r4 0x6
Parsed instruction at 80019A1C: subfic r5 r5 0x3
Parsed instruction at 80019A20: slwi r5 r5 3
Parsed instruction at 80019A24: slw r5 r6 r5
Parsed instruction at 80019A28: or r0 r0 r5
Parsed instruction at 80019A2C: lbz r6 0x7(r3)
Parsed instruction at 80019A30: addi r5 r4 0x7
Parsed instruction at 80019A34: subfic r5 r5 0x3
Parsed instruction at 80019A38: slwi r5 r5 3
Parsed instruction at 80019A3C: slw r5 r6 r5
Parsed instruction at 80019A40: or r0 r0 r5
Parsed instruction at 80019A44: addi r3 r3 0x8
Parsed instruction at 80019A48: addi r4 r4 0x8
Parsed instruction at 80019A4C: bdnz .L_8001998C
Parsed label: L_80019A50:
Parsed instruction at 80019A50: b .L_80019C1C
Parsed label: L_80019A54:
Parsed instruction at 80019A54: subf r3 r4 r30
Parsed instruction at 80019A58: mtctr r3
Parsed instruction at 80019A5C: cmpw r4 r30
Parsed instruction at 80019A60: bge .L_80019A88
Parsed instruction at 80019A64: b .L_80019A68
Parsed label: L_80019A68:
Parsed instruction at 80019A68: lbz r5 0x0(r6)
Parsed instruction at 80019A6C: subfic r3 r4 0x3
Parsed instruction at 80019A70: slwi r3 r3 3
Parsed instruction at 80019A74: slw r3 r5 r3
Parsed instruction at 80019A78: or r0 r0 r3
Parsed instruction at 80019A7C: addi r6 r6 0x1
Parsed instruction at 80019A80: addi r4 r4 0x1
Parsed instruction at 80019A84: bdnz .L_80019A68
Parsed label: L_80019A88:
Parsed instruction at 80019A88: lis r3 0xcc00
Parsed instruction at 80019A8C: addi r3 r3 0x6800
Parsed instruction at 80019A90: stw r0 0x38(r3)
Parsed label: L_80019A94:
Parsed instruction at 80019A94: slwi r0 r31 2
Parsed instruction at 80019A98: ori r3 r0 0x1
Parsed instruction at 80019A9C: subi r0 r30 0x1
Parsed instruction at 80019AA0: slwi r0 r0 4
Parsed instruction at 80019AA4: or r0 r3 r0
Parsed instruction at 80019AA8: lis r3 0xcc00
Parsed instruction at 80019AAC: addi r28 r3 0x6800
Parsed instruction at 80019AB0: stw r0 0x34(r28)
Parsed instruction at 80019AB4: bl fn_800198F8
Parsed instruction at 80019AB8: cmplwi r31 0x0
Parsed instruction at 80019ABC: bne .L_80019C14
Parsed instruction at 80019AC0: mr r4 r29
Parsed instruction at 80019AC4: lwz r0 0x38(r28)
Parsed instruction at 80019AC8: li r3 0x0
Parsed instruction at 80019ACC: cmpw r3 r30
Parsed instruction at 80019AD0: bge .L_80019C14
Parsed instruction at 80019AD4: subi r6 r30 0x8
Parsed instruction at 80019AD8: cmpwi r30 0x8
Parsed instruction at 80019ADC: ble .L_80019BE0
Parsed instruction at 80019AE0: b .L_80019AE4
Parsed label: L_80019AE4:
Parsed instruction at 80019AE4: addi r5 r6 0x7
Parsed instruction at 80019AE8: srwi r5 r5 3
Parsed instruction at 80019AEC: mtctr r5
Parsed instruction at 80019AF0: cmpwi r6 0x0
Parsed instruction at 80019AF4: ble .L_80019BDC
Parsed instruction at 80019AF8: b .L_80019AFC
Parsed label: L_80019AFC:
Parsed instruction at 80019AFC: subfic r5 r3 0x3
Parsed instruction at 80019B00: slwi r5 r5 3
Parsed instruction at 80019B04: srw r5 r0 r5
Parsed instruction at 80019B08: clrlwi r5 r5 24
Parsed instruction at 80019B0C: stb r5 0x0(r4)
Parsed instruction at 80019B10: addi r4 r4 0x1
Parsed instruction at 80019B14: addi r5 r3 0x1
Parsed instruction at 80019B18: subfic r5 r5 0x3
Parsed instruction at 80019B1C: slwi r5 r5 3
Parsed instruction at 80019B20: srw r5 r0 r5
Parsed instruction at 80019B24: clrlwi r5 r5 24
Parsed instruction at 80019B28: stb r5 0x0(r4)
Parsed instruction at 80019B2C: addi r4 r4 0x1
Parsed instruction at 80019B30: addi r5 r3 0x2
Parsed instruction at 80019B34: subfic r5 r5 0x3
Parsed instruction at 80019B38: slwi r5 r5 3
Parsed instruction at 80019B3C: srw r5 r0 r5
Parsed instruction at 80019B40: clrlwi r5 r5 24
Parsed instruction at 80019B44: stb r5 0x0(r4)
Parsed instruction at 80019B48: addi r4 r4 0x1
Parsed instruction at 80019B4C: neg r5 r3
Parsed instruction at 80019B50: slwi r5 r5 3
Parsed instruction at 80019B54: srw r5 r0 r5
Parsed instruction at 80019B58: clrlwi r5 r5 24
Parsed instruction at 80019B5C: stb r5 0x0(r4)
Parsed instruction at 80019B60: addi r4 r4 0x1
Parsed instruction at 80019B64: addi r5 r3 0x4
Parsed instruction at 80019B68: subfic r5 r5 0x3
Parsed instruction at 80019B6C: slwi r5 r5 3
Parsed instruction at 80019B70: srw r5 r0 r5
Parsed instruction at 80019B74: clrlwi r5 r5 24
Parsed instruction at 80019B78: stb r5 0x0(r4)
Parsed instruction at 80019B7C: addi r4 r4 0x1
Parsed instruction at 80019B80: addi r5 r3 0x5
Parsed instruction at 80019B84: subfic r5 r5 0x3
Parsed instruction at 80019B88: slwi r5 r5 3
Parsed instruction at 80019B8C: srw r5 r0 r5
Parsed instruction at 80019B90: clrlwi r5 r5 24
Parsed instruction at 80019B94: stb r5 0x0(r4)
Parsed instruction at 80019B98: addi r4 r4 0x1
Parsed instruction at 80019B9C: addi r5 r3 0x6
Parsed instruction at 80019BA0: subfic r5 r5 0x3
Parsed instruction at 80019BA4: slwi r5 r5 3
Parsed instruction at 80019BA8: srw r5 r0 r5
Parsed instruction at 80019BAC: clrlwi r5 r5 24
Parsed instruction at 80019BB0: stb r5 0x0(r4)
Parsed instruction at 80019BB4: addi r4 r4 0x1
Parsed instruction at 80019BB8: addi r5 r3 0x7
Parsed instruction at 80019BBC: subfic r5 r5 0x3
Parsed instruction at 80019BC0: slwi r5 r5 3
Parsed instruction at 80019BC4: srw r5 r0 r5
Parsed instruction at 80019BC8: clrlwi r5 r5 24
Parsed instruction at 80019BCC: stb r5 0x0(r4)
Parsed instruction at 80019BD0: addi r4 r4 0x1
Parsed instruction at 80019BD4: addi r3 r3 0x8
Parsed instruction at 80019BD8: bdnz .L_80019AFC
Parsed label: L_80019BDC:
Parsed instruction at 80019BDC: b .L_80019BE0
Parsed label: L_80019BE0:
Parsed instruction at 80019BE0: subf r5 r3 r30
Parsed instruction at 80019BE4: mtctr r5
Parsed instruction at 80019BE8: cmpw r3 r30
Parsed instruction at 80019BEC: bge .L_80019C14
Parsed instruction at 80019BF0: b .L_80019BF4
Parsed label: L_80019BF4:
Parsed instruction at 80019BF4: subfic r5 r3 0x3
Parsed instruction at 80019BF8: slwi r5 r5 3
Parsed instruction at 80019BFC: srw r5 r0 r5
Parsed instruction at 80019C00: clrlwi r5 r5 24
Parsed instruction at 80019C04: stb r5 0x0(r4)
Parsed instruction at 80019C08: addi r4 r4 0x1
Parsed instruction at 80019C0C: addi r3 r3 0x1
Parsed instruction at 80019C10: bdnz .L_80019BF4
Parsed label: L_80019C14:
Parsed instruction at 80019C14: li r3 0x1
Parsed instruction at 80019C18: b .L_80019C24
Parsed label: L_80019C1C:
Parsed instruction at 80019C1C: add r6 r29 r4
Parsed instruction at 80019C20: b .L_80019A54
Parsed label: L_80019C24:
Parsed instruction at 80019C24: lwz r0 0x34(r1)
Parsed instruction at 80019C28: lwz r31 0x2c(r1)
Parsed instruction at 80019C2C: lwz r30 0x28(r1)
Parsed instruction at 80019C30: lwz r29 0x24(r1)
Parsed instruction at 80019C34: lwz r28 0x20(r1)
Parsed instruction at 80019C38: addi r1 r1 0x30
Parsed instruction at 80019C3C: mtlr r0
Parsed instruction at 80019C40: blr 
End of function: fn_80019920, 216 instructions
Parsed function: fn_80019C44 at 0x80019C44
Parsed instruction at 80019C44: mflr r0
Parsed instruction at 80019C48: stw r0 0x4(r1)
Parsed instruction at 80019C4C: stwu r1 -0x18(r1)
Parsed instruction at 80019C50: stw r31 0x14(r1)
Parsed instruction at 80019C54: mr r31 r3
Parsed instruction at 80019C58: li r3 0x4
Parsed instruction at 80019C5C: bl fn_800198AC
Parsed instruction at 80019C60: cmpwi r3 0x0
Parsed instruction at 80019C64: bne .L_80019C70
Parsed instruction at 80019C68: li r3 0x0
Parsed instruction at 80019C6C: b .L_80019CBC
Parsed label: L_80019C70:
Parsed instruction at 80019C70: clrlwi r0 r31 3
Parsed instruction at 80019C74: oris r0 r0 0xc000
Parsed instruction at 80019C78: stw r0 0xc(r1)
Parsed instruction at 80019C7C: addi r3 r1 0xc
Parsed instruction at 80019C80: li r4 0x4
Parsed instruction at 80019C84: li r5 0x1
Parsed instruction at 80019C88: bl fn_80019920
Parsed instruction at 80019C8C: cntlzw r0 r3
Parsed instruction at 80019C90: srwi r31 r0 5
Parsed instruction at 80019C94: bl fn_800198F8
Parsed instruction at 80019C98: cntlzw r0 r3
Parsed instruction at 80019C9C: srwi r0 r0 5
Parsed instruction at 80019CA0: or r31 r31 r0
Parsed instruction at 80019CA4: bl fn_800198D8
Parsed instruction at 80019CA8: cntlzw r0 r3
Parsed instruction at 80019CAC: srwi r0 r0 5
Parsed instruction at 80019CB0: or r31 r31 r0
Parsed instruction at 80019CB4: cntlzw r0 r31
Parsed instruction at 80019CB8: srwi r3 r0 5
Parsed label: L_80019CBC:
Parsed instruction at 80019CBC: lwz r0 0x1c(r1)
Parsed instruction at 80019CC0: lwz r31 0x14(r1)
Parsed instruction at 80019CC4: addi r1 r1 0x18
Parsed instruction at 80019CC8: mtlr r0
Parsed instruction at 80019CCC: blr 
End of function: fn_80019C44, 37 instructions
Parsed function: fn_80019CD0 at 0x80019CD0
Parsed instruction at 80019CD0: mflr r0
Parsed instruction at 80019CD4: stw r0 0x4(r1)
Parsed instruction at 80019CD8: stwu r1 -0x18(r1)
Parsed instruction at 80019CDC: stw r31 0x14(r1)
Parsed instruction at 80019CE0: stw r30 0x10(r1)
Parsed instruction at 80019CE4: mr r30 r3
Parsed instruction at 80019CE8: li r3 0x4
Parsed instruction at 80019CEC: bl fn_800198AC
Parsed instruction at 80019CF0: cmpwi r3 0x0
Parsed instruction at 80019CF4: bne .L_80019D00
Parsed instruction at 80019CF8: li r3 0x0
Parsed instruction at 80019CFC: b .L_80019D74
Parsed label: L_80019D00:
Parsed instruction at 80019D00: lis r0 0x6000
Parsed instruction at 80019D04: stw r0 0xc(r1)
Parsed instruction at 80019D08: addi r3 r1 0xc
Parsed instruction at 80019D0C: li r4 0x2
Parsed instruction at 80019D10: li r5 0x1
Parsed instruction at 80019D14: bl fn_80019920
Parsed instruction at 80019D18: cntlzw r0 r3
Parsed instruction at 80019D1C: srwi r31 r0 5
Parsed instruction at 80019D20: bl fn_800198F8
Parsed instruction at 80019D24: cntlzw r0 r3
Parsed instruction at 80019D28: srwi r0 r0 5
Parsed instruction at 80019D2C: or r31 r31 r0
Parsed instruction at 80019D30: mr r3 r30
Parsed instruction at 80019D34: li r4 0x4
Parsed instruction at 80019D38: li r5 0x0
Parsed instruction at 80019D3C: bl fn_80019920
Parsed instruction at 80019D40: cntlzw r0 r3
Parsed instruction at 80019D44: srwi r0 r0 5
Parsed instruction at 80019D48: or r31 r31 r0
Parsed instruction at 80019D4C: bl fn_800198F8
Parsed instruction at 80019D50: cntlzw r0 r3
Parsed instruction at 80019D54: srwi r0 r0 5
Parsed instruction at 80019D58: or r31 r31 r0
Parsed instruction at 80019D5C: bl fn_800198D8
Parsed instruction at 80019D60: cntlzw r0 r3
Parsed instruction at 80019D64: srwi r0 r0 5
Parsed instruction at 80019D68: or r31 r31 r0
Parsed instruction at 80019D6C: cntlzw r0 r31
Parsed instruction at 80019D70: srwi r3 r0 5
Parsed label: L_80019D74:
Parsed instruction at 80019D74: lwz r0 0x1c(r1)
Parsed instruction at 80019D78: lwz r31 0x14(r1)
Parsed instruction at 80019D7C: lwz r30 0x10(r1)
Parsed instruction at 80019D80: addi r1 r1 0x18
Parsed instruction at 80019D84: mtlr r0
Parsed instruction at 80019D88: blr 
End of function: fn_80019CD0, 49 instructions
Parsed function: fn_80019D8C at 0x80019D8C
Parsed instruction at 80019D8C: mflr r0
Parsed instruction at 80019D90: stw r0 0x4(r1)
Parsed instruction at 80019D94: stwu r1 -0x30(r1)
Parsed instruction at 80019D98: stw r31 0x2c(r1)
Parsed instruction at 80019D9C: stw r30 0x28(r1)
Parsed instruction at 80019DA0: stw r29 0x24(r1)
Parsed instruction at 80019DA4: mr r31 r3
Parsed instruction at 80019DA8: mr r29 r5
Parsed instruction at 80019DAC: mr r30 r4
Parsed instruction at 80019DB0: li r3 0x4
Parsed instruction at 80019DB4: bl fn_800198AC
Parsed instruction at 80019DB8: cmpwi r3 0x0
Parsed instruction at 80019DBC: bne .L_80019DC8
Parsed instruction at 80019DC0: li r3 0x0
Parsed instruction at 80019DC4: b .L_80019E70
Parsed label: L_80019DC8:
Parsed instruction at 80019DC8: rlwinm r0 r31 8 7 21
Parsed instruction at 80019DCC: oris r0 r0 0x2000
Parsed instruction at 80019DD0: stw r0 0x18(r1)
Parsed instruction at 80019DD4: addi r3 r1 0x18
Parsed instruction at 80019DD8: li r4 0x4
Parsed instruction at 80019DDC: li r5 0x1
Parsed instruction at 80019DE0: bl fn_80019920
Parsed instruction at 80019DE4: cntlzw r0 r3
Parsed instruction at 80019DE8: srwi r31 r0 5
Parsed instruction at 80019DEC: bl fn_800198F8
Parsed instruction at 80019DF0: cntlzw r0 r3
Parsed instruction at 80019DF4: srwi r0 r0 5
Parsed instruction at 80019DF8: or r31 r31 r0
Parsed instruction at 80019DFC: b .L_80019E00
Parsed label: L_80019E00:
Parsed instruction at 80019E00: b .L_80019E04
Parsed label: L_80019E04:
Parsed instruction at 80019E04: b .L_80019E50
Parsed label: L_80019E08:
Parsed instruction at 80019E08: addi r3 r1 0x14
Parsed instruction at 80019E0C: li r4 0x4
Parsed instruction at 80019E10: li r5 0x0
Parsed instruction at 80019E14: bl fn_80019920
Parsed instruction at 80019E18: cntlzw r0 r3
Parsed instruction at 80019E1C: srwi r0 r0 5
Parsed instruction at 80019E20: or r31 r31 r0
Parsed instruction at 80019E24: bl fn_800198F8
Parsed instruction at 80019E28: cntlzw r0 r3
Parsed instruction at 80019E2C: srwi r0 r0 5
Parsed instruction at 80019E30: or r31 r31 r0
Parsed instruction at 80019E34: lwz r0 0x14(r1)
Parsed instruction at 80019E38: stw r0 0x0(r30)
Parsed instruction at 80019E3C: addi r30 r30 0x4
Parsed instruction at 80019E40: subi r29 r29 0x4
Parsed instruction at 80019E44: cmpwi r29 0x0
Parsed instruction at 80019E48: bge .L_80019E50
Parsed instruction at 80019E4C: li r29 0x0
Parsed label: L_80019E50:
Parsed instruction at 80019E50: cmpwi r29 0x0
Parsed instruction at 80019E54: bne .L_80019E08
Parsed instruction at 80019E58: bl fn_800198D8
Parsed instruction at 80019E5C: cntlzw r0 r3
Parsed instruction at 80019E60: srwi r0 r0 5
Parsed instruction at 80019E64: or r31 r31 r0
Parsed instruction at 80019E68: cntlzw r0 r31
Parsed instruction at 80019E6C: srwi r3 r0 5
Parsed label: L_80019E70:
Parsed instruction at 80019E70: lwz r0 0x34(r1)
Parsed instruction at 80019E74: lwz r31 0x2c(r1)
Parsed instruction at 80019E78: lwz r30 0x28(r1)
Parsed instruction at 80019E7C: lwz r29 0x24(r1)
Parsed instruction at 80019E80: addi r1 r1 0x30
Parsed instruction at 80019E84: mtlr r0
Parsed instruction at 80019E88: blr 
End of function: fn_80019D8C, 70 instructions
Parsed function: fn_80019E8C at 0x80019E8C
Parsed instruction at 80019E8C: mflr r0
Parsed instruction at 80019E90: stw r0 0x4(r1)
Parsed instruction at 80019E94: stwu r1 -0x30(r1)
Parsed instruction at 80019E98: stw r31 0x2c(r1)
Parsed instruction at 80019E9C: stw r30 0x28(r1)
Parsed instruction at 80019EA0: stw r29 0x24(r1)
Parsed instruction at 80019EA4: mr r31 r3
Parsed instruction at 80019EA8: mr r29 r5
Parsed instruction at 80019EAC: mr r30 r4
Parsed instruction at 80019EB0: li r3 0x4
Parsed instruction at 80019EB4: bl fn_800198AC
Parsed instruction at 80019EB8: cmpwi r3 0x0
Parsed instruction at 80019EBC: bne .L_80019EC8
Parsed instruction at 80019EC0: li r3 0x0
Parsed instruction at 80019EC4: b .L_80019F70
Parsed label: L_80019EC8:
Parsed instruction at 80019EC8: rlwinm r0 r31 8 7 21
Parsed instruction at 80019ECC: oris r0 r0 0xa000
Parsed instruction at 80019ED0: stw r0 0x18(r1)
Parsed instruction at 80019ED4: addi r3 r1 0x18
Parsed instruction at 80019ED8: li r4 0x4
Parsed instruction at 80019EDC: li r5 0x1
Parsed instruction at 80019EE0: bl fn_80019920
Parsed instruction at 80019EE4: cntlzw r0 r3
Parsed instruction at 80019EE8: srwi r31 r0 5
Parsed instruction at 80019EEC: bl fn_800198F8
Parsed instruction at 80019EF0: cntlzw r0 r3
Parsed instruction at 80019EF4: srwi r0 r0 5
Parsed instruction at 80019EF8: or r31 r31 r0
Parsed instruction at 80019EFC: b .L_80019F00
Parsed label: L_80019F00:
Parsed instruction at 80019F00: b .L_80019F04
Parsed label: L_80019F04:
Parsed instruction at 80019F04: b .L_80019F50
Parsed label: L_80019F08:
Parsed instruction at 80019F08: lwz r0 0x0(r30)
Parsed instruction at 80019F0C: addi r30 r30 0x4
Parsed instruction at 80019F10: stw r0 0x14(r1)
Parsed instruction at 80019F14: addi r3 r1 0x14
Parsed instruction at 80019F18: li r4 0x4
Parsed instruction at 80019F1C: li r5 0x1
Parsed instruction at 80019F20: bl fn_80019920
Parsed instruction at 80019F24: cntlzw r0 r3
Parsed instruction at 80019F28: srwi r0 r0 5
Parsed instruction at 80019F2C: or r31 r31 r0
Parsed instruction at 80019F30: bl fn_800198F8
Parsed instruction at 80019F34: cntlzw r0 r3
Parsed instruction at 80019F38: srwi r0 r0 5
Parsed instruction at 80019F3C: or r31 r31 r0
Parsed instruction at 80019F40: subi r29 r29 0x4
Parsed instruction at 80019F44: cmpwi r29 0x0
Parsed instruction at 80019F48: bge .L_80019F50
Parsed instruction at 80019F4C: li r29 0x0
Parsed label: L_80019F50:
Parsed instruction at 80019F50: cmpwi r29 0x0
Parsed instruction at 80019F54: bne .L_80019F08
Parsed instruction at 80019F58: bl fn_800198D8
Parsed instruction at 80019F5C: cntlzw r0 r3
Parsed instruction at 80019F60: srwi r0 r0 5
Parsed instruction at 80019F64: or r31 r31 r0
Parsed instruction at 80019F68: cntlzw r0 r31
Parsed instruction at 80019F6C: srwi r3 r0 5
Parsed label: L_80019F70:
Parsed instruction at 80019F70: lwz r0 0x34(r1)
Parsed instruction at 80019F74: lwz r31 0x2c(r1)
Parsed instruction at 80019F78: lwz r30 0x28(r1)
Parsed instruction at 80019F7C: lwz r29 0x24(r1)
Parsed instruction at 80019F80: addi r1 r1 0x30
Parsed instruction at 80019F84: mtlr r0
Parsed instruction at 80019F88: blr 
End of function: fn_80019E8C, 70 instructions
Parsed function: fn_80019F8C at 0x80019F8C
Parsed instruction at 80019F8C: mflr r0
Parsed instruction at 80019F90: stw r0 0x4(r1)
Parsed instruction at 80019F94: stwu r1 -0x18(r1)
Parsed instruction at 80019F98: stw r31 0x14(r1)
Parsed instruction at 80019F9C: stw r30 0x10(r1)
Parsed instruction at 80019FA0: mr r30 r3
Parsed instruction at 80019FA4: li r3 0x4
Parsed instruction at 80019FA8: bl fn_800198AC
Parsed instruction at 80019FAC: cmpwi r3 0x0
Parsed instruction at 80019FB0: bne .L_80019FBC
Parsed instruction at 80019FB4: li r3 0x0
Parsed instruction at 80019FB8: b .L_8001A030
Parsed label: L_80019FBC:
Parsed instruction at 80019FBC: lis r0 0x4000
Parsed instruction at 80019FC0: stw r0 0xc(r1)
Parsed instruction at 80019FC4: addi r3 r1 0xc
Parsed instruction at 80019FC8: li r4 0x2
Parsed instruction at 80019FCC: li r5 0x1
Parsed instruction at 80019FD0: bl fn_80019920
Parsed instruction at 80019FD4: cntlzw r0 r3
Parsed instruction at 80019FD8: srwi r31 r0 5
Parsed instruction at 80019FDC: bl fn_800198F8
Parsed instruction at 80019FE0: cntlzw r0 r3
Parsed instruction at 80019FE4: srwi r0 r0 5
Parsed instruction at 80019FE8: or r31 r31 r0
Parsed instruction at 80019FEC: mr r3 r30
Parsed instruction at 80019FF0: li r4 0x4
Parsed instruction at 80019FF4: li r5 0x0
Parsed instruction at 80019FF8: bl fn_80019920
Parsed instruction at 80019FFC: cntlzw r0 r3
Parsed instruction at 8001A000: srwi r0 r0 5
Parsed instruction at 8001A004: or r31 r31 r0
Parsed instruction at 8001A008: bl fn_800198F8
Parsed instruction at 8001A00C: cntlzw r0 r3
Parsed instruction at 8001A010: srwi r0 r0 5
Parsed instruction at 8001A014: or r31 r31 r0
Parsed instruction at 8001A018: bl fn_800198D8
Parsed instruction at 8001A01C: cntlzw r0 r3
Parsed instruction at 8001A020: srwi r0 r0 5
Parsed instruction at 8001A024: or r31 r31 r0
Parsed instruction at 8001A028: cntlzw r0 r31
Parsed instruction at 8001A02C: srwi r3 r0 5
Parsed label: L_8001A030:
Parsed instruction at 8001A030: lwz r0 0x1c(r1)
Parsed instruction at 8001A034: lwz r31 0x14(r1)
Parsed instruction at 8001A038: lwz r30 0x10(r1)
Parsed instruction at 8001A03C: addi r1 r1 0x18
Parsed instruction at 8001A040: mtlr r0
Parsed instruction at 8001A044: blr 
End of function: fn_80019F8C, 49 instructions
Parsed function: fn_8001A048 at 0x8001A048
Parsed instruction at 8001A048: mflr r0
Parsed instruction at 8001A04C: stw r0 0x4(r1)
Parsed instruction at 8001A050: stwu r1 -0x8(r1)
Parsed instruction at 8001A054: li r0 0x1
Parsed instruction at 8001A058: stb r0 lbl_8001F084@sda21(r0)
Parsed instruction at 8001A05C: lwz r12 lbl_8001F070@sda21(r0)
Parsed instruction at 8001A060: cmplwi r12 0x0
Parsed instruction at 8001A064: beq .L_8001A074
Parsed instruction at 8001A068: li r3 0x0
Parsed instruction at 8001A06C: mtlr r12
Parsed instruction at 8001A070: blrl 
Parsed label: L_8001A074:
Parsed instruction at 8001A074: lwz r0 0xc(r1)
Parsed instruction at 8001A078: addi r1 r1 0x8
Parsed instruction at 8001A07C: mtlr r0
Parsed instruction at 8001A080: blr 
End of function: fn_8001A048, 16 instructions
Parsed function: fn_8001A084 at 0x8001A084
Parsed instruction at 8001A084: mflr r0
Parsed instruction at 8001A088: stw r0 0x4(r1)
Parsed instruction at 8001A08C: stwu r1 -0x8(r1)
Parsed instruction at 8001A090: li r0 0x1000
Parsed instruction at 8001A094: lis r5 0xcc00
Parsed instruction at 8001A098: stw r0 0x3000(r5)
Parsed instruction at 8001A09C: lwz r12 lbl_8001F074@sda21(r0)
Parsed instruction at 8001A0A0: cmplwi r12 0x0
Parsed instruction at 8001A0A4: beq .L_8001A0B4
Parsed instruction at 8001A0A8: extsh r3 r3
Parsed instruction at 8001A0AC: mtlr r12
Parsed instruction at 8001A0B0: blrl 
Parsed label: L_8001A0B4:
Parsed instruction at 8001A0B4: lwz r0 0xc(r1)
Parsed instruction at 8001A0B8: addi r1 r1 0x8
Parsed instruction at 8001A0BC: mtlr r0
Parsed instruction at 8001A0C0: blr 
End of function: fn_8001A084, 17 instructions
Parsed function: DBInitComm at 0x8001A0C4
Parsed instruction at 8001A0C4: mflr r0
Parsed instruction at 8001A0C8: stw r0 0x4(r1)
Parsed instruction at 8001A0CC: stwu r1 -0x20(r1)
Parsed instruction at 8001A0D0: stw r31 0x1c(r1)
Parsed instruction at 8001A0D4: stw r30 0x18(r1)
Parsed instruction at 8001A0D8: stw r29 0x14(r1)
Parsed instruction at 8001A0DC: mr r29 r3
Parsed instruction at 8001A0E0: mr r30 r4
Parsed instruction at 8001A0E4: bl OSDisableInterrupts
Parsed instruction at 8001A0E8: mr r31 r3
Parsed instruction at 8001A0EC: li r0 lbl_8001F084@sda21
Parsed instruction at 8001A0F0: stw r0 lbl_8001F080@sda21(r0)
Parsed instruction at 8001A0F4: lwz r0 lbl_8001F080@sda21(r0)
Parsed instruction at 8001A0F8: stw r0 0x0(r29)
Parsed instruction at 8001A0FC: stw r30 lbl_8001F070@sda21(r0)
Parsed instruction at 8001A100: bl fn_80019870
Parsed instruction at 8001A104: mr r3 r31
Parsed instruction at 8001A108: bl OSRestoreInterrupts
Parsed instruction at 8001A10C: lwz r0 0x24(r1)
Parsed instruction at 8001A110: lwz r31 0x1c(r1)
Parsed instruction at 8001A114: lwz r30 0x18(r1)
Parsed instruction at 8001A118: lwz r29 0x14(r1)
Parsed instruction at 8001A11C: addi r1 r1 0x20
Parsed instruction at 8001A120: mtlr r0
Parsed instruction at 8001A124: blr 
End of function: DBInitComm, 25 instructions
Parsed function: DBInitInterrupts at 0x8001A128
Parsed instruction at 8001A128: mflr r0
Parsed instruction at 8001A12C: stw r0 0x4(r1)
Parsed instruction at 8001A130: stwu r1 -0x8(r1)
Parsed instruction at 8001A134: lis r3 0x2
Parsed instruction at 8001A138: addi r3 r3 -0x8000
Parsed instruction at 8001A13C: bl __OSMaskInterrupts
Parsed instruction at 8001A140: li r3 0x40
Parsed instruction at 8001A144: bl __OSMaskInterrupts
Parsed instruction at 8001A148: lis r3 fn_8001A048@ha
Parsed instruction at 8001A14C: addi r0 r3 fn_8001A048@l
Parsed instruction at 8001A150: stw r0 lbl_8001F074@sda21(r0)
Parsed instruction at 8001A154: li r3 0x19
Parsed instruction at 8001A158: lis r4 fn_8001A084@ha
Parsed instruction at 8001A15C: addi r4 r4 fn_8001A084@l
Parsed instruction at 8001A160: bl __OSSetInterruptHandler
Parsed instruction at 8001A164: li r3 0x40
Parsed instruction at 8001A168: bl __OSUnmaskInterrupts
Parsed instruction at 8001A16C: lwz r0 0xc(r1)
Parsed instruction at 8001A170: addi r1 r1 0x8
Parsed instruction at 8001A174: mtlr r0
Parsed instruction at 8001A178: blr 
End of function: DBInitInterrupts, 21 instructions
Parsed function: fn_8001A17C at 0x8001A17C
Parsed instruction at 8001A17C: mflr r0
Parsed instruction at 8001A180: stw r0 0x4(r1)
Parsed instruction at 8001A184: stwu r1 -0x10(r1)
Parsed instruction at 8001A188: addi r3 r1 0x8
Parsed instruction at 8001A18C: bl fn_80019F8C
Parsed instruction at 8001A190: lwz r0 0x8(r1)
Parsed instruction at 8001A194: clrlwi r0 r0 31
Parsed instruction at 8001A198: cmplwi r0 0x0
Parsed instruction at 8001A19C: beq .L_8001A1DC
Parsed instruction at 8001A1A0: addi r3 r1 0x8
Parsed instruction at 8001A1A4: bl fn_80019CD0
Parsed instruction at 8001A1A8: lwz r0 0x8(r1)
Parsed instruction at 8001A1AC: clrlwi r0 r0 3
Parsed instruction at 8001A1B0: stw r0 0x8(r1)
Parsed instruction at 8001A1B4: lwz r4 0x8(r1)
Parsed instruction at 8001A1B8: rlwinm r3 r4 0 3 7
Parsed instruction at 8001A1BC: subis r0 r3 0x1f00
Parsed instruction at 8001A1C0: cmplwi r0 0x0
Parsed instruction at 8001A1C4: bne .L_8001A1DC
Parsed instruction at 8001A1C8: stw r4 lbl_8001F078@sda21(r0)
Parsed instruction at 8001A1CC: clrlwi r0 r4 17
Parsed instruction at 8001A1D0: stw r0 lbl_8001F07C@sda21(r0)
Parsed instruction at 8001A1D4: li r0 0x1
Parsed instruction at 8001A1D8: stb r0 lbl_8001F084@sda21(r0)
Parsed label: L_8001A1DC:
Parsed instruction at 8001A1DC: lwz r0 0x14(r1)
Parsed instruction at 8001A1E0: addi r1 r1 0x10
Parsed instruction at 8001A1E4: mtlr r0
Parsed instruction at 8001A1E8: blr 
End of function: fn_8001A17C, 29 instructions
Parsed function: DBQueryData at 0x8001A1EC
Parsed instruction at 8001A1EC: mflr r0
Parsed instruction at 8001A1F0: stw r0 0x4(r1)
Parsed instruction at 8001A1F4: stwu r1 -0x10(r1)
Parsed instruction at 8001A1F8: stw r31 0xc(r1)
Parsed instruction at 8001A1FC: li r0 0x0
Parsed instruction at 8001A200: stb r0 lbl_8001F084@sda21(r0)
Parsed instruction at 8001A204: lwz r0 lbl_8001F07C@sda21(r0)
Parsed instruction at 8001A208: cmpwi r0 0x0
Parsed instruction at 8001A20C: bne .L_8001A21C
Parsed instruction at 8001A210: bl OSDisableInterrupts
Parsed instruction at 8001A214: mr r31 r3
Parsed instruction at 8001A218: bl fn_8001A17C
Parsed label: L_8001A21C:
Parsed instruction at 8001A21C: mr r3 r31
Parsed instruction at 8001A220: bl OSRestoreInterrupts
Parsed instruction at 8001A224: lwz r3 lbl_8001F07C@sda21(r0)
Parsed instruction at 8001A228: lwz r0 0x14(r1)
Parsed instruction at 8001A22C: lwz r31 0xc(r1)
Parsed instruction at 8001A230: addi r1 r1 0x10
Parsed instruction at 8001A234: mtlr r0
Parsed instruction at 8001A238: blr 
End of function: DBQueryData, 21 instructions
Parsed function: DBRead at 0x8001A23C
Parsed instruction at 8001A23C: mflr r0
Parsed instruction at 8001A240: stw r0 0x4(r1)
Parsed instruction at 8001A244: stwu r1 -0x20(r1)
Parsed instruction at 8001A248: stw r31 0x1c(r1)
Parsed instruction at 8001A24C: stw r30 0x18(r1)
Parsed instruction at 8001A250: stw r29 0x14(r1)
Parsed instruction at 8001A254: mr r29 r3
Parsed instruction at 8001A258: mr r30 r4
Parsed instruction at 8001A25C: bl OSDisableInterrupts
Parsed instruction at 8001A260: mr r31 r3
Parsed instruction at 8001A264: lwz r0 lbl_8001F078@sda21(r0)
Parsed instruction at 8001A268: rlwinm r0 r0 0 15 15
Parsed instruction at 8001A26C: cmplwi r0 0x0
Parsed instruction at 8001A270: beq .L_8001A27C
Parsed instruction at 8001A274: li r3 0x1000
Parsed instruction at 8001A278: b .L_8001A280
Parsed label: L_8001A27C:
Parsed instruction at 8001A27C: li r3 0x0
Parsed label: L_8001A280:
Parsed instruction at 8001A280: addis r3 r3 0x2
Parsed instruction at 8001A284: subi r3 r3 0x2000
Parsed instruction at 8001A288: mr r4 r29
Parsed instruction at 8001A28C: addi r0 r30 0x3
Parsed instruction at 8001A290: clrrwi r5 r0 2
Parsed instruction at 8001A294: bl fn_80019D8C
Parsed instruction at 8001A298: li r0 0x0
Parsed instruction at 8001A29C: stw r0 lbl_8001F07C@sda21(r0)
Parsed instruction at 8001A2A0: stb r0 lbl_8001F084@sda21(r0)
Parsed instruction at 8001A2A4: mr r3 r31
Parsed instruction at 8001A2A8: bl OSRestoreInterrupts
Parsed instruction at 8001A2AC: li r3 0x0
Parsed instruction at 8001A2B0: lwz r0 0x24(r1)
Parsed instruction at 8001A2B4: lwz r31 0x1c(r1)
Parsed instruction at 8001A2B8: lwz r30 0x18(r1)
Parsed instruction at 8001A2BC: lwz r29 0x14(r1)
Parsed instruction at 8001A2C0: addi r1 r1 0x20
Parsed instruction at 8001A2C4: mtlr r0
Parsed instruction at 8001A2C8: blr 
End of function: DBRead, 38 instructions
Parsed function: DBWrite at 0x8001A2CC
Parsed instruction at 8001A2CC: mflr r0
Parsed instruction at 8001A2D0: stw r0 0x4(r1)
Parsed instruction at 8001A2D4: stwu r1 -0x30(r1)
Parsed instruction at 8001A2D8: addi r11 r1 0x30
Parsed instruction at 8001A2DC: bl _savegpr_27
Parsed instruction at 8001A2E0: mr r27 r3
Parsed instruction at 8001A2E4: mr r30 r4
Parsed instruction at 8001A2E8: bl OSDisableInterrupts
Parsed instruction at 8001A2EC: mr r31 r3
Parsed instruction at 8001A2F0: b .L_8001A2F4
Parsed label: L_8001A2F4:
Parsed instruction at 8001A2F4: b .L_8001A2F8
Parsed label: L_8001A2F8:
Parsed instruction at 8001A2F8: addi r3 r1 0x10
Parsed instruction at 8001A2FC: bl fn_80019F8C
Parsed instruction at 8001A300: lwz r0 0x10(r1)
Parsed instruction at 8001A304: rlwinm r0 r0 0 30 30
Parsed instruction at 8001A308: cmplwi r0 0x0
Parsed instruction at 8001A30C: bne .L_8001A2F8
Parsed instruction at 8001A310: lbz r3 lbl_8001EE58@sda21(r0)
Parsed instruction at 8001A314: addi r0 r3 0x1
Parsed instruction at 8001A318: stb r0 lbl_8001EE58@sda21(r0)
Parsed instruction at 8001A31C: lbz r0 lbl_8001EE58@sda21(r0)
Parsed instruction at 8001A320: clrlwi r0 r0 31
Parsed instruction at 8001A324: cmpwi r0 0x0
Parsed instruction at 8001A328: beq .L_8001A334
Parsed instruction at 8001A32C: li r3 0x1000
Parsed instruction at 8001A330: b .L_8001A338
Parsed label: L_8001A334:
Parsed instruction at 8001A334: li r3 0x0
Parsed label: L_8001A338:
Parsed instruction at 8001A338: addi r0 r30 0x3
Parsed instruction at 8001A33C: clrrwi r29 r0 2
Parsed instruction at 8001A340: oris r28 r3 0x1
Parsed instruction at 8001A344: ori r28 r28 0xc000
Parsed instruction at 8001A348: b .L_8001A34C
Parsed label: L_8001A34C:
Parsed instruction at 8001A34C: b .L_8001A350
Parsed label: L_8001A350:
Parsed instruction at 8001A350: mr r3 r28
Parsed instruction at 8001A354: mr r4 r27
Parsed instruction at 8001A358: mr r5 r29
Parsed instruction at 8001A35C: bl fn_80019E8C
Parsed instruction at 8001A360: cmpwi r3 0x0
Parsed instruction at 8001A364: beq .L_8001A350
Parsed instruction at 8001A368: b .L_8001A36C
Parsed label: L_8001A36C:
Parsed instruction at 8001A36C: b .L_8001A370
Parsed label: L_8001A370:
Parsed instruction at 8001A370: addi r3 r1 0x10
Parsed instruction at 8001A374: bl fn_80019F8C
Parsed instruction at 8001A378: lwz r0 0x10(r1)
Parsed instruction at 8001A37C: rlwinm r0 r0 0 30 30
Parsed instruction at 8001A380: cmplwi r0 0x0
Parsed instruction at 8001A384: bne .L_8001A370
Parsed instruction at 8001A388: lbz r0 lbl_8001EE58@sda21(r0)
Parsed instruction at 8001A38C: slwi r0 r0 16
Parsed instruction at 8001A390: oris r0 r0 0x1f00
Parsed instruction at 8001A394: or r28 r0 r30
Parsed instruction at 8001A398: b .L_8001A39C
Parsed label: L_8001A39C:
Parsed instruction at 8001A39C: b .L_8001A3A0
Parsed label: L_8001A3A0:
Parsed instruction at 8001A3A0: mr r3 r28
Parsed instruction at 8001A3A4: bl fn_80019C44
Parsed instruction at 8001A3A8: cmpwi r3 0x0
Parsed instruction at 8001A3AC: beq .L_8001A3A0
Parsed instruction at 8001A3B0: b .L_8001A3B4
Parsed label: L_8001A3B4:
Parsed instruction at 8001A3B4: b .L_8001A3B8
Parsed label: L_8001A3B8:
Parsed instruction at 8001A3B8: addi r3 r1 0x10
Parsed instruction at 8001A3BC: bl fn_80019F8C
Parsed instruction at 8001A3C0: cmpwi r3 0x0
Parsed instruction at 8001A3C4: beq .L_8001A3B8
Parsed instruction at 8001A3C8: lwz r0 0x10(r1)
Parsed instruction at 8001A3CC: rlwinm r0 r0 0 30 30
Parsed instruction at 8001A3D0: cmplwi r0 0x0
Parsed instruction at 8001A3D4: bne .L_8001A3B8
Parsed instruction at 8001A3D8: mr r3 r31
Parsed instruction at 8001A3DC: bl OSRestoreInterrupts
Parsed instruction at 8001A3E0: li r3 0x0
Parsed instruction at 8001A3E4: lwz r0 0x34(r1)
Parsed instruction at 8001A3E8: addi r11 r1 0x30
Parsed instruction at 8001A3EC: bl _restgpr_27
Parsed instruction at 8001A3F0: addi r1 r1 0x30
Parsed instruction at 8001A3F4: mtlr r0
Parsed instruction at 8001A3F8: blr 
End of function: DBWrite, 88 instructions
Parsed function: DBOpen at 0x8001A3FC
Parsed instruction at 8001A3FC: blr 
End of function: DBOpen, 1 instructions
Parsed function: DBClose at 0x8001A400
Parsed instruction at 8001A400: blr 
End of function: DBClose, 1 instructions
Parsed function: Hu_IsStub at 0x8001A404
Parsed instruction at 8001A404: li r3 0x0
Parsed instruction at 8001A408: blr 
End of function: Hu_IsStub, 2 instructions
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x28(r1)']
Translated stwu r1 -0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x28, gc_env.r[1]); // stwu r1, -0x28(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x28;']
Translated stmw r25 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[25]); // stmw r25, 0xC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[26]); // stmw r25, 0xC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[27]); // stmw r25, 0xC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[28]); // stmw r25, 0xC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[29]); // stmw r25, 0xC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[30]); // stmw r25, 0xC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[31]); // stmw r25, 0xC(r1)']
Translated bl OSInit to: OSInit();
Translated bl fn_8000FEB8 to: fn_8000FEB8();
Processing opcode: lwz, operands: ['r4', 'lbl_8001EE00@sda21(r0)']
Translated lwz r4 lbl_8001EE00@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE00); // lwz r4, lbl_8001EE00@sda21(r0)']
Processing opcode: lhz, operands: ['r3', '0x4(r4)']
Translated lhz r3 0x4(r4) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[4] + 0x4); // lhz r3, 0x4(r4)']
Processing opcode: lhz, operands: ['r0', '0x8(r4)']
Translated lhz r0 0x8(r4) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[4] + 0x8); // lhz r0, 0x8(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '0xf']
Translated addi r3 r3 0xf to: ['gc_env.r[3] += 15; // addi r3, r3, 0xf']
Translated rlwinm r3 r3 0 16 27 to: ['gc_env.r[3] = (gc_env.r[3] << 0) & 0xFFF0; // rlwinm r3, r3, 0, 16, 27']
Processing opcode: mullw, operands: ['r0', 'r3', 'r0']
Translated mullw r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] * gc_env.r[0]; // mullw r0, r3, r0']
Translated slwi r28 r0 1 to: ['gc_env.r[28] = gc_env.r[0] << 1; // slwi r28, r0, 1']
Translated bl OSGetArenaLo to: OSGetArenaLo();
Processing opcode: addi, operands: ['r0', 'r3', '0x1f']
Translated addi r0 r3 0x1f to: ['gc_env.r[0] = gc_env.r[3] + 31; // addi r0, r3, 0x1f']
Translated clrrwi r0 r0 5 to: gc_env.r[0] = gc_env.r[0] & ~((1ULL << 5) - 1); // Clear rightmost 5 bits
Processing opcode: stw, operands: ['r0', 'lbl_8001EE60@sda21(r0)']
Translated stw r0 lbl_8001EE60@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EE60, gc_env.r[0]); // stw r0, lbl_8001EE60@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r28', '0x1f']
Translated addi r3 r28 0x1f to: ['gc_env.r[3] = gc_env.r[28] + 31; // addi r3, r28, 0x1f']
Translated slwi r0 r28 1 to: ['gc_env.r[0] = gc_env.r[28] << 1; // slwi r0, r28, 1']
Processing opcode: lwz, operands: ['r5', 'lbl_8001EE60@sda21(r0)']
Translated lwz r5 lbl_8001EE60@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE60); // lwz r5, lbl_8001EE60@sda21(r0)']
Processing opcode: add, operands: ['r3', 'r5', 'r3']
Translated add r3 r5 r3 to: ['gc_env.r[3] = gc_env.r[5] + gc_env.r[3]; // add r3, r5, r3']
Translated clrrwi r4 r3 5 to: gc_env.r[4] = gc_env.r[3] & ~((1ULL << 5) - 1); // Clear rightmost 5 bits
Processing opcode: stw, operands: ['r4', 'lbl_8001EE64@sda21(r0)']
Translated stw r4 lbl_8001EE64@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EE64, gc_env.r[4]); // stw r4, lbl_8001EE64@sda21(r0)']
Processing opcode: add, operands: ['r3', 'r5', 'r0']
Translated add r3 r5 r0 to: ['gc_env.r[3] = gc_env.r[5] + gc_env.r[0]; // add r3, r5, r0']
Translated bl OSSetArenaLo to: OSSetArenaLo();
Processing opcode: lwz, operands: ['r3', 'lbl_8001EE00@sda21(r0)']
Translated lwz r3 lbl_8001EE00@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE00); // lwz r3, lbl_8001EE00@sda21(r0)']
Translated bl fn_800107F8 to: fn_800107F8();
Translated bl fn_80010F94 to: fn_80010F94();
Translated bl fn_80010330 to: fn_80010330();
Translated lis r4 0x8889 to: ['gc_env.r[4] = -30583 << 16; // lis r4, 0x8889']
Translated lis r3 lbl_8001A680@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001A680 >> 16) & 0xFFFF; // lis r3, lbl_8001A680@ha']
Processing opcode: subi, operands: ['r31', 'r4', '0x7777']
Translated subi r31 r4 0x7777 to: ['gc_env.r[31] = gc_env.r[4] - 30583; // subi r31, r4, 30583']
Processing opcode: addi, operands: ['r25', 'r3', 'lbl_8001A680@l']
Translated addi r25 r3 lbl_8001A680@l to: ['gc_env.r[25] = gc_env.r[3] + ((uint32_t)&lbl_8001A680 & 0xFFFF); // addi r25, r3, lbl_8001A680@l']
Processing opcode: li, operands: ['r26', '0x1']
Translated li r26 0x1 to: ['gc_env.r[26] = 0x1; // li r26, 0x1']
Processing opcode: li, operands: ['r30', '0x0']
Translated li r30 0x0 to: ['gc_env.r[30] = 0x0; // li r30, 0x0']
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Translated clrlwi. r0 r30 31 to: ['gc_env.r[0] = gc_env.r[30] & 0x1; // clrlwi r0, r30, 31']
Translated beq .L_800055A0 to: if (gc_env.cr[0] == 0) goto L_800055A0;
Processing opcode: lwz, operands: ['r6', 'lbl_8001EE64@sda21(r0)']
Translated lwz r6 lbl_8001EE64@sda21(r0) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE64); // lwz r6, lbl_8001EE64@sda21(r0)']
Translated b .L_800055A4 to: goto L_800055A4;
Processing opcode: lwz, operands: ['r6', 'lbl_8001EE60@sda21(r0)']
Translated lwz r6 lbl_8001EE60@sda21(r0) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE60); // lwz r6, lbl_8001EE60@sda21(r0)']
Translated mulhwu r0 r31 r30 to: ['gc_env.r[0] = (uint32_t)(((uint64_t)gc_env.r[31] * (uint64_t)gc_env.r[30]) >> 32); // mulhwu r0, r31, r30']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Processing opcode: mulli, operands: ['r0', 'r0', '0x3c']
Translated mulli r0 r0 0x3c to: ['gc_env.r[0] = gc_env.r[0] * 60; // mulli r0, r0, 60']
Processing opcode: subf, operands: ['r0', 'r0', 'r30']
Translated subf. r0 r0 r30 to: ['gc_env.r[0] = gc_env.r[30] - gc_env.r[0]; // subf r0, r0, r30']
Processing opcode: addi, operands: ['r27', 'r6', '0x0']
Translated addi r27 r6 0x0 to: ['gc_env.r[27] = gc_env.r[6] + 0; // addi r27, r6, 0x0']
Translated bne .L_800055C4 to: if (gc_env.cr[0] != 0) goto L_800055C4;
Processing opcode: addi, operands: ['r0', 'r29', '0x1']
Translated addi r0 r29 0x1 to: ['gc_env.r[0] = gc_env.r[29] + 1; // addi r0, r29, 0x1']
Translated clrlwi r29 r0 29 to: ['gc_env.r[29] = gc_env.r[0] & 0x7; // clrlwi r29, r0, 29']
Processing opcode: mulli, operands: ['r0', 'r29', '0xc']
Translated mulli r0 r29 0xc to: ['gc_env.r[0] = gc_env.r[29] * 12; // mulli r0, r29, 12']
Processing opcode: add, operands: ['r5', 'r25', 'r0']
Translated add r5 r25 r0 to: ['gc_env.r[5] = gc_env.r[25] + gc_env.r[0]; // add r5, r25, r0']
Processing opcode: lwz, operands: ['r7', '0x0(r5)']
Translated lwz r7 0x0(r5) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r7, (r5)']
Processing opcode: add, operands: ['r4', 'r6', 'r28']
Translated add r4 r6 r28 to: ['gc_env.r[4] = gc_env.r[6] + gc_env.r[28]; // add r4, r6, r28']
Processing opcode: lwz, operands: ['r0', '0x4(r5)']
Translated lwz r0 0x4(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x4); // lwz r0, 0x4(r5)']
Translated cmplw r6 r4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[6] == (uint32_t)gc_env.r[4]) ? 0 : ((uint32_t)gc_env.r[6] < (uint32_t)gc_env.r[4] ? -1 : 1); // Logical compare word
Translated slwi r3 r7 8 to: ['gc_env.r[3] = gc_env.r[7] << 8; // slwi r3, r7, 8']
Translated slwi r0 r0 16 to: ['gc_env.r[0] = gc_env.r[0] << 16; // slwi r0, r0, 16']
Processing opcode: lwz, operands: ['r5', '0x8(r5)']
Translated lwz r5 0x8(r5) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x8); // lwz r5, 0x8(r5)']
Processing opcode: add, operands: ['r0', 'r0', 'r3']
Translated add r0 r0 r3 to: ['gc_env.r[0] = gc_env.r[0] + gc_env.r[3]; // add r0, r0, r3']
Processing opcode: addi, operands: ['r3', 'r4', '0x3']
Translated addi r3 r4 0x3 to: ['gc_env.r[3] = gc_env.r[4] + 3; // addi r3, r4, 0x3']
Processing opcode: subf, operands: ['r3', 'r6', 'r3']
Translated subf r3 r6 r3 to: ['gc_env.r[3] = gc_env.r[3] - gc_env.r[6]; // subf r3, r6, r3']
Translated slwi r4 r7 24 to: ['gc_env.r[4] = gc_env.r[7] << 24; // slwi r4, r7, 24']
Processing opcode: add, operands: ['r5', 'r0', 'r5']
Translated add r5 r0 r5 to: ['gc_env.r[5] = gc_env.r[0] + gc_env.r[5]; // add r5, r0, r5']
Processing opcode: add, operands: ['r5', 'r4', 'r5']
Translated add r5 r4 r5 to: ['gc_env.r[5] = gc_env.r[4] + gc_env.r[5]; // add r5, r4, r5']
Translated srwi r3 r3 2 to: ['gc_env.r[3] = gc_env.r[3] >> 2; // srwi r3, r3, 2']
Translated bge .L_80005654 to: if (gc_env.cr[0] >= 0) goto L_80005654;
Translated srwi. r0 r3 3 to: ['gc_env.r[0] = gc_env.r[3] >> 3; // srwi r0, r3, 3', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated beq .L_80005644 to: if (gc_env.cr[0] == 0) goto L_80005644;
Processing opcode: stw, operands: ['r5', '0x0(r6)']
Translated stw r5 0x0(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6], gc_env.r[5]); // stw r5, (r6)']
Processing opcode: stw, operands: ['r5', '0x4(r6)']
Translated stw r5 0x4(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x4, gc_env.r[5]); // stw r5, 0x4(r6)']
Processing opcode: stw, operands: ['r5', '0x8(r6)']
Translated stw r5 0x8(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x8, gc_env.r[5]); // stw r5, 0x8(r6)']
Processing opcode: stw, operands: ['r5', '0xc(r6)']
Translated stw r5 0xc(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0xC, gc_env.r[5]); // stw r5, 0xC(r6)']
Processing opcode: stw, operands: ['r5', '0x10(r6)']
Translated stw r5 0x10(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x10, gc_env.r[5]); // stw r5, 0x10(r6)']
Processing opcode: stw, operands: ['r5', '0x14(r6)']
Translated stw r5 0x14(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x14, gc_env.r[5]); // stw r5, 0x14(r6)']
Processing opcode: stw, operands: ['r5', '0x18(r6)']
Translated stw r5 0x18(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x18, gc_env.r[5]); // stw r5, 0x18(r6)']
Processing opcode: stw, operands: ['r5', '0x1c(r6)']
Translated stw r5 0x1c(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x1C, gc_env.r[5]); // stw r5, 0x1C(r6)']
Processing opcode: addi, operands: ['r6', 'r6', '0x20']
Translated addi r6 r6 0x20 to: ['gc_env.r[6] += 32; // addi r6, r6, 0x20']
Translated bdnz .L_80005614 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80005614;']
Translated andi. r3 r3 0x7 to: gc_env.r[3] = gc_env.r[3] & 0x7;
Translated beq .L_80005654 to: if (gc_env.cr[0] == 0) goto L_80005654;
Translated mtctr r3 to: gc_env.ctr = gc_env.r[3]; // Move to count register
Processing opcode: stw, operands: ['r5', '0x0(r6)']
Translated stw r5 0x0(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6], gc_env.r[5]); // stw r5, (r6)']
Processing opcode: addi, operands: ['r6', 'r6', '0x4']
Translated addi r6 r6 0x4 to: ['gc_env.r[6] += 4; // addi r6, r6, 0x4']
Translated bdnz .L_80005648 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80005648;']
Processing opcode: addi, operands: ['r3', 'r27', '0x0']
Translated addi r3 r27 0x0 to: ['gc_env.r[3] = gc_env.r[27] + 0; // addi r3, r27, 0x0']
Processing opcode: addi, operands: ['r4', 'r28', '0x0']
Translated addi r4 r28 0x0 to: ['gc_env.r[4] = gc_env.r[28] + 0; // addi r4, r28, 0x0']
Translated bl fn_8000694C to: fn_8000694C();
Translated mr r3 r27 to: gc_env.r[3] = gc_env.r[27]; // Move register
Translated bl fn_800110B0 to: fn_800110B0();
Translated cmplwi r26 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[26] == 0x1) ? 0 : ((uint32_t)gc_env.r[26] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000567C to: if (gc_env.cr[0] != 0) goto L_8000567C;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl fn_8001111C to: fn_8001111C();
Processing opcode: li, operands: ['r26', '0x0']
Translated li r26 0x0 to: ['gc_env.r[26] = 0x0; // li r26, 0x0']
Translated bl fn_80010F94 to: fn_80010F94();
Translated bl fn_80010330 to: fn_80010330();
Processing opcode: addi, operands: ['r30', 'r30', '0x1']
Translated addi r30 r30 0x1 to: ['gc_env.r[30] += 1; // addi r30, r30, 0x1']
Translated b .L_80005590 to: goto L_80005590;
Translated mfmsr r3 to: gc_env.r[3] = gc_env.msr; // Move from machine state register
Translated blr  to: return;
Translated mtmsr r3 to: gc_env.msr = gc_env.r[3]; // Move to machine state register
Translated blr  to: return;
Translated mfspr r3 HID0 to: ['gc_env.r[3] = gc_env.hid0; // mfspr r3, HID0']
Translated blr  to: return;
Translated mfspr r3 L2CR to: ['gc_env.r[3] = gc_env.l2cr; // mfspr r3, L2CR']
Translated blr  to: return;
Translated mtspr L2CR r3 to: ['gc_env.l2cr = gc_env.r[3]; // mtspr L2CR, r3']
Translated blr  to: return;
Translated mtdec r3 to: ['gc_env.dec = gc_env.r[3]; // mtdec r3']
Translated blr  to: return;
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated nop  to: ['// nop']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated nop  to: ['// nop']
Translated b .L_800056C0 to: goto L_800056C0;
Translated mfspr r3 HID2 to: ['gc_env.r[3] = gc_env.hid2; // mfspr r3, HID2']
Translated blr  to: return;
Translated mtspr HID2 r3 to: ['gc_env.hid2 = gc_env.r[3]; // mtspr HID2, r3']
Translated blr  to: return;
Processing opcode: lwz, operands: ['r3', 'BootInfo_8001EE68@sda21(r0)']
Translated lwz r3 BootInfo_8001EE68@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&BootInfo_8001EE68); // lwz r3, BootInfo_8001EE68@sda21(r0)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800056F8 to: if (gc_env.cr[0] == 0) goto L_800056F8;
Processing opcode: lwz, operands: ['r3', '0x2c(r3)']
Translated lwz r3 0x2c(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x2C); // lwz r3, 0x2C(r3)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80005704 to: if (gc_env.cr[0] != 0) goto L_80005704;
Translated lis r3 0x1000 to: ['gc_env.r[3] = 4096 << 16; // lis r3, 0x1000']
Processing opcode: addi, operands: ['r3', 'r3', '0x2']
Translated addi r3 r3 0x2 to: ['gc_env.r[3] += 2; // addi r3, r3, 0x2']
Translated b .L_80005704 to: goto L_80005704;
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: stw, operands: ['r30', '0x8(r1)']
Translated stw r30 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[30]); // stw r30, 0x8(r1)']
Translated bl OSGetResetCode to: OSGetResetCode();
Processing opcode: addis, operands: ['r0', 'r3', '0x8000']
Translated addis r0 r3 0x8000 to: ['gc_env.r[0] = gc_env.r[3] + (32768 << 16); // addis r0, r3, 32768']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80005750 to: if (gc_env.cr[0] == 0) goto L_80005750;
Translated bl OSGetArenaHi to: OSGetArenaHi();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl OSGetArenaLo to: OSGetArenaLo();
Processing opcode: subf, operands: ['r31', 'r3', 'r31']
Translated subf r31 r3 r31 to: ['gc_env.r[31] = gc_env.r[31] - gc_env.r[3]; // subf r31, r3, r31']
Translated bl OSGetArenaLo to: OSGetArenaLo();
Translated mr r5 r31 to: gc_env.r[5] = gc_env.r[31]; // Move register
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl memset to: memset();
Translated b .L_800057FC to: goto L_800057FC;
Translated lis r3 0x8130 to: ['gc_env.r[3] = -32464 << 16; // lis r3, 0x8130']
Processing opcode: lwz, operands: ['r31', '-0x2010(r3)']
Translated lwz r31 -0x2010(r3) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[3] + -0x2010); // lwz r31, -0x2010(r3)']
Processing opcode: lwz, operands: ['r30', '-0x2014(r3)']
Translated lwz r30 -0x2014(r3) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[3] + -0x2014); // lwz r30, -0x2014(r3)']
Translated cmplwi r31 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == 0x0) ? 0 : ((uint32_t)gc_env.r[31] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80005788 to: if (gc_env.cr[0] != 0) goto L_80005788;
Translated bl OSGetArenaHi to: OSGetArenaHi();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl OSGetArenaLo to: OSGetArenaLo();
Processing opcode: subf, operands: ['r31', 'r3', 'r31']
Translated subf r31 r3 r31 to: ['gc_env.r[31] = gc_env.r[31] - gc_env.r[3]; // subf r31, r3, r31']
Translated bl OSGetArenaLo to: OSGetArenaLo();
Translated mr r5 r31 to: gc_env.r[5] = gc_env.r[31]; // Move register
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl memset to: memset();
Translated b .L_800057FC to: goto L_800057FC;
Translated bl OSGetArenaLo to: OSGetArenaLo();
Translated cmplw r3 r31 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[31]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[31] ? -1 : 1); // Logical compare word
Translated bge .L_800057FC to: if (gc_env.cr[0] >= 0) goto L_800057FC;
Translated bl OSGetArenaHi to: OSGetArenaHi();
Translated cmplw r3 r31 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[31]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[31] ? -1 : 1); // Logical compare word
Translated bgt .L_800057C4 to: ['if (gc_env.cr[0] & 0x4) goto L_800057C4; // bgt .L_800057C4']
Translated bl OSGetArenaHi to: OSGetArenaHi();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl OSGetArenaLo to: OSGetArenaLo();
Processing opcode: subf, operands: ['r31', 'r3', 'r31']
Translated subf r31 r3 r31 to: ['gc_env.r[31] = gc_env.r[31] - gc_env.r[3]; // subf r31, r3, r31']
Translated bl OSGetArenaLo to: OSGetArenaLo();
Translated mr r5 r31 to: gc_env.r[5] = gc_env.r[31]; // Move register
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl memset to: memset();
Translated b .L_800057FC to: goto L_800057FC;
Translated bl OSGetArenaLo to: OSGetArenaLo();
Processing opcode: subf, operands: ['r31', 'r3', 'r31']
Translated subf r31 r3 r31 to: ['gc_env.r[31] = gc_env.r[31] - gc_env.r[3]; // subf r31, r3, r31']
Translated bl OSGetArenaLo to: OSGetArenaLo();
Translated mr r5 r31 to: gc_env.r[5] = gc_env.r[31]; // Move register
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl memset to: memset();
Translated bl OSGetArenaHi to: OSGetArenaHi();
Translated cmplw r3 r30 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[30]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[30] ? -1 : 1); // Logical compare word
Translated ble .L_800057FC to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_800057FC; // ble .L_800057FC']
Translated bl OSGetArenaHi to: OSGetArenaHi();
Processing opcode: subf, operands: ['r5', 'r30', 'r3']
Translated subf r5 r30 r3 to: ['gc_env.r[5] = gc_env.r[3] - gc_env.r[30]; // subf r5, r30, r3']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl memset to: memset();
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: lwz, operands: ['r30', '0x8(r1)']
Translated lwz r30 0x8(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r30, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: stw, operands: ['r30', '0x8(r1)']
Translated stw r30 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[30]); // stw r30, 0x8(r1)']
Processing opcode: lwz, operands: ['r0', 'AreWeInitialized_8001EE74@sda21(r0)']
Translated lwz r0 AreWeInitialized_8001EE74@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&AreWeInitialized_8001EE74); // lwz r0, AreWeInitialized_8001EE74@sda21(r0)']
Translated lis r3 "@73_8001A6E0"@ha to: ['gc_env.r[3] = ((uint32_t)&_73_8001A6E0 >> 16) & 0xFFFF; // lis r3, "@73_8001A6E0"@ha']
Processing opcode: addi, operands: ['r31', 'r3', '"@73_8001A6E0"@l']
Translated addi r31 r3 "@73_8001A6E0"@l to: ['gc_env.r[31] = (uint32_t)&_73_8001A6E0; // lis + addi @73_8001A6E0 (completing pattern)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80005B4C to: if (gc_env.cr[0] != 0) goto L_80005B4C;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', 'AreWeInitialized_8001EE74@sda21(r0)']
Translated stw r0 AreWeInitialized_8001EE74@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&AreWeInitialized_8001EE74, gc_env.r[0]); // stw r0, AreWeInitialized_8001EE74@sda21(r0)']
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: stw, operands: ['r4', '__OSStartTime+0x4@sda21(r0)']
Translated stw r4 __OSStartTime+0x4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&__OSStartTime + 0x4, gc_env.r[4]); // stw r4, __OSStartTime@sda21(r0)']
Processing opcode: stw, operands: ['r3', '__OSStartTime@sda21(r0)']
Translated stw r3 __OSStartTime@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&__OSStartTime, gc_env.r[3]); // stw r3, __OSStartTime@sda21(r0)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: stw, operands: ['r0', 'BI2DebugFlag_8001EE6C@sda21(r0)']
Translated stw r0 BI2DebugFlag_8001EE6C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&BI2DebugFlag_8001EE6C, gc_env.r[0]); // stw r0, BI2DebugFlag_8001EE6C@sda21(r0)']
Processing opcode: stw, operands: ['r4', 'BootInfo_8001EE68@sda21(r0)']
Translated stw r4 BootInfo_8001EE68@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&BootInfo_8001EE68, gc_env.r[4]); // stw r4, BootInfo_8001EE68@sda21(r0)']
Processing opcode: stw, operands: ['r0', '__DVDLongFileNameFlag@sda21(r0)']
Translated stw r0 __DVDLongFileNameFlag@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&__DVDLongFileNameFlag, gc_env.r[0]); // stw r0, __DVDLongFileNameFlag@sda21(r0)']
Processing opcode: lwz, operands: ['r3', '0xf4(r4)']
Translated lwz r3 0xf4(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xF4); // lwz r3, 0xF4(r4)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800058A4 to: if (gc_env.cr[0] == 0) goto L_800058A4;
Processing opcode: addi, operands: ['r0', 'r3', '0xc']
Translated addi r0 r3 0xc to: ['gc_env.r[0] = gc_env.r[3] + 12; // addi r0, r3, 0xc']
Processing opcode: stw, operands: ['r0', 'BI2DebugFlag_8001EE6C@sda21(r0)']
Translated stw r0 BI2DebugFlag_8001EE6C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&BI2DebugFlag_8001EE6C, gc_env.r[0]); // stw r0, BI2DebugFlag_8001EE6C@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x24(r3)']
Translated lwz r0 0x24(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x24); // lwz r0, 0x24(r3)']
Processing opcode: lwz, operands: ['r3', 'BI2DebugFlag_8001EE6C@sda21(r0)']
Translated lwz r3 BI2DebugFlag_8001EE6C@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&BI2DebugFlag_8001EE6C); // lwz r3, BI2DebugFlag_8001EE6C@sda21(r0)']
Processing opcode: stw, operands: ['r0', '__PADSpec@sda21(r0)']
Translated stw r0 __PADSpec@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&__PADSpec, gc_env.r[0]); // stw r0, __PADSpec@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Translated clrlwi r0 r0 24 to: ['gc_env.r[0] = gc_env.r[0] & 0xFF; // clrlwi r0, r0, 24']
Processing opcode: stb, operands: ['r0', '0x30e8(r4)']
Translated stb r0 0x30e8(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x30E8, gc_env.r[0]); // stb r0, 0x30E8(r4)']
Processing opcode: lwz, operands: ['r0', '__PADSpec@sda21(r0)']
Translated lwz r0 __PADSpec@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&__PADSpec); // lwz r0, __PADSpec@sda21(r0)']
Translated clrlwi r0 r0 24 to: ['gc_env.r[0] = gc_env.r[0] & 0xFF; // clrlwi r0, r0, 24']
Processing opcode: stb, operands: ['r0', '0x30e9(r4)']
Translated stb r0 0x30e9(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x30E9, gc_env.r[0]); // stb r0, 0x30E9(r4)']
Translated b .L_800058C8 to: goto L_800058C8;
Processing opcode: lwz, operands: ['r0', '0x34(r4)']
Translated lwz r0 0x34(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x34); // lwz r0, 0x34(r4)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800058C8 to: if (gc_env.cr[0] == 0) goto L_800058C8;
Processing opcode: lbz, operands: ['r3', '0x30e8(r4)']
Translated lbz r3 0x30e8(r4) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 0x30e8); // lbz r3, 0x30e8(r4)']
Processing opcode: li, operands: ['r0', 'BI2DebugFlagHolder_8001EE70@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Processing opcode: stw, operands: ['r3', 'BI2DebugFlagHolder_8001EE70@sda21(r0)']
Translated stw r3 BI2DebugFlagHolder_8001EE70@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&BI2DebugFlagHolder_8001EE70, gc_env.r[3]); // stw r3, BI2DebugFlagHolder_8001EE70@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'BI2DebugFlag_8001EE6C@sda21(r0)']
Translated stw r0 BI2DebugFlag_8001EE6C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&BI2DebugFlag_8001EE6C, gc_env.r[0]); // stw r0, BI2DebugFlag_8001EE6C@sda21(r0)']
Processing opcode: lbz, operands: ['r0', '0x30e9(r4)']
Translated lbz r0 0x30e9(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 0x30e9); // lbz r0, 0x30e9(r4)']
Processing opcode: stw, operands: ['r0', '__PADSpec@sda21(r0)']
Translated stw r0 __PADSpec@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&__PADSpec, gc_env.r[0]); // stw r0, __PADSpec@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: lwz, operands: ['r3', 'BootInfo_8001EE68@sda21(r0)']
Translated lwz r3 BootInfo_8001EE68@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&BootInfo_8001EE68); // lwz r3, BootInfo_8001EE68@sda21(r0)']
Processing opcode: stw, operands: ['r0', '__DVDLongFileNameFlag@sda21(r0)']
Translated stw r0 __DVDLongFileNameFlag@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&__DVDLongFileNameFlag, gc_env.r[0]); // stw r0, __DVDLongFileNameFlag@sda21(r0)']
Processing opcode: lwz, operands: ['r3', '0x30(r3)']
Translated lwz r3 0x30(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x30); // lwz r3, 0x30(r3)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800058EC to: if (gc_env.cr[0] != 0) goto L_800058EC;
Translated lis r3 __ArenaLo@ha to: ['gc_env.r[3] = ((uint32_t)&__ArenaLo >> 16) & 0xFFFF; // lis r3, __ArenaLo@ha']
Processing opcode: addi, operands: ['r3', 'r3', '__ArenaLo@l']
Translated addi r3 r3 __ArenaLo@l to: ['gc_env.r[3] = (uint32_t)&__ArenaLo; // lis + addi __ArenaLo (completing pattern)']
Translated b .L_800058EC to: goto L_800058EC;
Translated bl OSSetArenaLo to: OSSetArenaLo();
Processing opcode: lwz, operands: ['r3', 'BootInfo_8001EE68@sda21(r0)']
Translated lwz r3 BootInfo_8001EE68@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&BootInfo_8001EE68); // lwz r3, BootInfo_8001EE68@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x30(r3)']
Translated lwz r0 0x30(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x30); // lwz r0, 0x30(r3)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000592C to: if (gc_env.cr[0] != 0) goto L_8000592C;
Processing opcode: lwz, operands: ['r3', 'BI2DebugFlag_8001EE6C@sda21(r0)']
Translated lwz r3 BI2DebugFlag_8001EE6C@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&BI2DebugFlag_8001EE6C); // lwz r3, BI2DebugFlag_8001EE6C@sda21(r0)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000592C to: if (gc_env.cr[0] == 0) goto L_8000592C;
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bge .L_8000592C to: if (gc_env.cr[0] >= 0) goto L_8000592C;
Translated lis r3 _stack_addr@ha to: ['gc_env.r[3] = ((uint32_t)&_stack_addr >> 16) & 0xFFFF; // lis r3, _stack_addr@ha']
Processing opcode: addi, operands: ['r3', 'r3', '_stack_addr@l']
Translated addi r3 r3 _stack_addr@l to: ['gc_env.r[3] = (uint32_t)&_stack_addr; // lis + addi _stack_addr (completing pattern)']
Processing opcode: addi, operands: ['r0', 'r3', '0x1f']
Translated addi r0 r3 0x1f to: ['gc_env.r[0] = gc_env.r[3] + 31; // addi r0, r3, 0x1f']
Translated clrrwi r3 r0 5 to: gc_env.r[3] = gc_env.r[0] & ~((1ULL << 5) - 1); // Clear rightmost 5 bits
Translated bl OSSetArenaLo to: OSSetArenaLo();
Processing opcode: lwz, operands: ['r3', 'BootInfo_8001EE68@sda21(r0)']
Translated lwz r3 BootInfo_8001EE68@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&BootInfo_8001EE68); // lwz r3, BootInfo_8001EE68@sda21(r0)']
Processing opcode: lwz, operands: ['r3', '0x34(r3)']
Translated lwz r3 0x34(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x34); // lwz r3, 0x34(r3)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80005948 to: if (gc_env.cr[0] != 0) goto L_80005948;
Translated lis r3 __ArenaHi@ha to: ['gc_env.r[3] = ((uint32_t)&__ArenaHi >> 16) & 0xFFFF; // lis r3, __ArenaHi@ha']
Processing opcode: addi, operands: ['r3', 'r3', '__ArenaHi@l']
Translated addi r3 r3 __ArenaHi@l to: ['gc_env.r[3] = (uint32_t)&__ArenaHi; // lis + addi __ArenaHi (completing pattern)']
Translated b .L_80005948 to: goto L_80005948;
Translated bl OSSetArenaHi to: OSSetArenaHi();
Translated bl OSExceptionInit to: OSExceptionInit();
Translated bl __OSInitSystemCall to: __OSInitSystemCall();
Translated bl OSInitAlarm to: OSInitAlarm();
Translated bl __OSModuleInit to: __OSModuleInit();
Translated bl __OSInterruptInit to: __OSInterruptInit();
Translated lis r3 __OSResetSWInterruptHandler@ha to: ['gc_env.r[3] = ((uint32_t)&__OSResetSWInterruptHandler >> 16) & 0xFFFF; // lis r3, __OSResetSWInterruptHandler@ha']
Processing opcode: addi, operands: ['r4', 'r3', '__OSResetSWInterruptHandler@l']
Translated addi r4 r3 __OSResetSWInterruptHandler@l to: ['gc_env.r[4] = (uint32_t)&__OSResetSWInterruptHandler; // lis + addi __OSResetSWInterruptHandler (completing pattern)']
Processing opcode: li, operands: ['r3', '0x16']
Translated li r3 0x16 to: ['gc_env.r[3] = 0x16; // li r3, 0x16']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Translated bl __OSContextInit to: __OSContextInit();
Translated bl __OSCacheInit to: __OSCacheInit();
Translated bl EXIInit to: EXIInit();
Translated bl SIInit to: SIInit();
Translated bl __OSInitSram to: __OSInitSram();
Translated bl __OSThreadInit to: __OSThreadInit();
Translated bl __OSInitAudioSystem to: __OSInitAudioSystem();
Translated bl PPCMfhid2 to: PPCMfhid2();
Translated rlwinm r3 r3 0 2 0 to: ['gc_env.r[3] = (gc_env.r[3] << 0) & -0x40000001; // rlwinm r3, r3, 0, 2, 0']
Translated bl PPCMthid2 to: PPCMthid2();
Processing opcode: lwz, operands: ['r3', 'BootInfo_8001EE68@sda21(r0)']
Translated lwz r3 BootInfo_8001EE68@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&BootInfo_8001EE68); // lwz r3, BootInfo_8001EE68@sda21(r0)']
Processing opcode: addi, operands: ['r4', 'r3', '0x2c']
Translated addi r4 r3 0x2c to: ['gc_env.r[4] = gc_env.r[3] + 44; // addi r4, r3, 0x2c']
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated rlwinm r0 r0 0 3 3 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x10000000; // rlwinm r0, r0, 0, 3, 3']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800059C0 to: if (gc_env.cr[0] == 0) goto L_800059C0;
Translated lis r3 0x1000 to: ['gc_env.r[3] = 4096 << 16; // lis r3, 0x1000']
Processing opcode: addi, operands: ['r0', 'r3', '0x4']
Translated addi r0 r3 0x4 to: ['gc_env.r[0] = gc_env.r[3] + 4; // addi r0, r3, 0x4']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Translated b .L_800059C8 to: goto L_800059C8;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r4', 'BootInfo_8001EE68@sda21(r0)']
Translated lwz r4 BootInfo_8001EE68@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&BootInfo_8001EE68); // lwz r4, BootInfo_8001EE68@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r3', '0x3000']
Translated addi r3 r3 0x3000 to: ['gc_env.r[3] += 12288; // addi r3, r3, 0x3000']
Processing opcode: lwz, operands: ['r0', '0x2c(r3)']
Translated lwz r0 0x2c(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x2C); // lwz r0, 0x2C(r3)']
Processing opcode: lwz, operands: ['r3', '0x2c(r4)']
Translated lwz r3 0x2c(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x2C); // lwz r3, 0x2C(r4)']
Translated clrrwi r0 r0 28 to: gc_env.r[0] = gc_env.r[0] & ~((1ULL << 28) - 1); // Clear rightmost 28 bits
Translated srwi r0 r0 28 to: ['gc_env.r[0] = gc_env.r[0] >> 28; // srwi r0, r0, 28']
Processing opcode: add, operands: ['r0', 'r3', 'r0']
Translated add r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] + gc_env.r[0]; // add r0, r3, r0']
Processing opcode: stw, operands: ['r0', '0x2c(r4)']
Translated stw r0 0x2c(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x2C, gc_env.r[0]); // stw r0, 0x2C(r4)']
Processing opcode: lwz, operands: ['r0', '__OSInIPL@sda21(r0)']
Translated lwz r0 __OSInIPL@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&__OSInIPL); // lwz r0, __OSInIPL@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800059FC to: if (gc_env.cr[0] != 0) goto L_800059FC;
Translated bl __OSInitMemoryProtection to: __OSInitMemoryProtection();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: addi, operands: ['r3', 'r31', '0x20']
Translated addi r3 r31 0x20 to: ['gc_env.r[3] = gc_env.r[31] + 32; // addi r3, r31, 0x20']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: addi, operands: ['r4', 'r31', '0x38']
Translated addi r4 r31 0x38 to: ['gc_env.r[4] = gc_env.r[31] + 56; // addi r4, r31, 0x38']
Processing opcode: addi, operands: ['r5', 'r31', '0x44']
Translated addi r5 r31 0x44 to: ['gc_env.r[5] = gc_env.r[31] + 68; // addi r5, r31, 0x44']
Translated bl OSReport to: OSReport();
Processing opcode: addi, operands: ['r3', 'r31', '0x50']
Translated addi r3 r31 0x50 to: ['gc_env.r[3] = gc_env.r[31] + 80; // addi r3, r31, 0x50']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: lwz, operands: ['r3', 'BootInfo_8001EE68@sda21(r0)']
Translated lwz r3 BootInfo_8001EE68@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&BootInfo_8001EE68); // lwz r3, BootInfo_8001EE68@sda21(r0)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80005A40 to: if (gc_env.cr[0] == 0) goto L_80005A40;
Processing opcode: lwz, operands: ['r4', '0x2c(r3)']
Translated lwz r4 0x2c(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x2C); // lwz r4, 0x2C(r3)']
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80005A4C to: if (gc_env.cr[0] != 0) goto L_80005A4C;
Translated lis r3 0x1000 to: ['gc_env.r[3] = 4096 << 16; // lis r3, 0x1000']
Processing opcode: addi, operands: ['r4', 'r3', '0x2']
Translated addi r4 r3 0x2 to: ['gc_env.r[4] = gc_env.r[3] + 2; // addi r4, r3, 0x2']
Translated b .L_80005A4C to: goto L_80005A4C;
Translated rlwinm r0 r4 0 3 3 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x10000000; // rlwinm r0, r4, 0, 3, 3']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80005A68 to: if (gc_env.cr[0] != 0) goto L_80005A68;
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: addi, operands: ['r3', 'r31', '0x60']
Translated addi r3 r31 0x60 to: ['gc_env.r[3] = gc_env.r[31] + 96; // addi r3, r31, 0x60']
Translated bl OSReport to: OSReport();
Translated b .L_80005AF0 to: goto L_80005AF0;
Translated lis r3 0x1000 to: ['gc_env.r[3] = 4096 << 16; // lis r3, 0x1000']
Processing opcode: addi, operands: ['r0', 'r3', '0x2']
Translated addi r0 r3 0x2 to: ['gc_env.r[0] = gc_env.r[3] + 2; // addi r0, r3, 0x2']
Translated cmpw r4 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[4] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[4] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r4, r0']
Translated beq .L_80005ABC to: if (gc_env.cr[0] == 0) goto L_80005ABC;
Translated bge .L_80005A8C to: if (gc_env.cr[0] >= 0) goto L_80005A8C;
Translated cmpw r4 r3 to: ['gc_env.cr[0] = (int32_t)gc_env.r[4] < (int32_t)gc_env.r[3] ? 0x8 : ((int32_t)gc_env.r[4] > (int32_t)gc_env.r[3] ? 0x4 : 0x2); // cmpw r4, r3']
Translated beq .L_80005A9C to: if (gc_env.cr[0] == 0) goto L_80005A9C;
Translated bge .L_80005AAC to: if (gc_env.cr[0] >= 0) goto L_80005AAC;
Translated b .L_80005ADC to: goto L_80005ADC;
Processing opcode: addi, operands: ['r0', 'r3', '0x4']
Translated addi r0 r3 0x4 to: ['gc_env.r[0] = gc_env.r[3] + 4; // addi r0, r3, 0x4']
Translated cmpw r4 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[4] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[4] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r4, r0']
Translated bge .L_80005ADC to: if (gc_env.cr[0] >= 0) goto L_80005ADC;
Translated b .L_80005ACC to: goto L_80005ACC;
Processing opcode: addi, operands: ['r3', 'r31', '0x6c']
Translated addi r3 r31 0x6c to: ['gc_env.r[3] = gc_env.r[31] + 108; // addi r3, r31, 0x6c']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated b .L_80005AF0 to: goto L_80005AF0;
Processing opcode: addi, operands: ['r3', 'r31', '0x7c']
Translated addi r3 r31 0x7c to: ['gc_env.r[3] = gc_env.r[31] + 124; // addi r3, r31, 0x7c']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated b .L_80005AF0 to: goto L_80005AF0;
Processing opcode: addi, operands: ['r3', 'r31', '0x8c']
Translated addi r3 r31 0x8c to: ['gc_env.r[3] = gc_env.r[31] + 140; // addi r3, r31, 0x8c']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated b .L_80005AF0 to: goto L_80005AF0;
Processing opcode: addi, operands: ['r3', 'r31', '0x9c']
Translated addi r3 r31 0x9c to: ['gc_env.r[3] = gc_env.r[31] + 156; // addi r3, r31, 0x9c']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated b .L_80005AF0 to: goto L_80005AF0;
Processing opcode: subis, operands: ['r4', 'r4', '0x1000']
Translated subis r4 r4 0x1000 to: ['gc_env.r[4] = gc_env.r[4] - (4096 << 16); // subis r4, r4, 4096']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: addi, operands: ['r3', 'r31', '0xac']
Translated addi r3 r31 0xac to: ['gc_env.r[3] = gc_env.r[31] + 172; // addi r3, r31, 0xac']
Processing opcode: subi, operands: ['r4', 'r4', '0x3']
Translated subi r4 r4 0x3 to: ['gc_env.r[4] = gc_env.r[4] - 3; // subi r4, r4, 3']
Translated bl OSReport to: OSReport();
Processing opcode: lwz, operands: ['r4', 'BootInfo_8001EE68@sda21(r0)']
Translated lwz r4 BootInfo_8001EE68@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&BootInfo_8001EE68); // lwz r4, BootInfo_8001EE68@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r31', '0xc0']
Translated addi r3 r31 0xc0 to: ['gc_env.r[3] = gc_env.r[31] + 192; // addi r3, r31, 0xc0']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: lwz, operands: ['r0', '0x28(r4)']
Translated lwz r0 0x28(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x28); // lwz r0, 0x28(r4)']
Translated srwi r4 r0 20 to: ['gc_env.r[4] = gc_env.r[0] >> 20; // srwi r4, r0, 20']
Translated bl OSReport to: OSReport();
Translated bl OSGetArenaHi to: OSGetArenaHi();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated bl OSGetArenaLo to: OSGetArenaLo();
Translated mr r4 r3 to: gc_env.r[4] = gc_env.r[3]; // Move register
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated mr r5 r30 to: gc_env.r[5] = gc_env.r[30]; // Move register
Processing opcode: addi, operands: ['r3', 'r31', '0xd0']
Translated addi r3 r31 0xd0 to: ['gc_env.r[3] = gc_env.r[31] + 208; // addi r3, r31, 0xd0']
Translated bl OSReport to: OSReport();
Processing opcode: lwz, operands: ['r3', 'BI2DebugFlag_8001EE6C@sda21(r0)']
Translated lwz r3 BI2DebugFlag_8001EE6C@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&BI2DebugFlag_8001EE6C); // lwz r3, BI2DebugFlag_8001EE6C@sda21(r0)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80005B44 to: if (gc_env.cr[0] == 0) goto L_80005B44;
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated blt .L_80005B44 to: ['if (gc_env.cr[0] & 0x8) goto L_80005B44; // blt .L_80005B44']
Translated bl EnableMetroTRKInterrupts to: EnableMetroTRKInterrupts();
Translated bl ClearArena to: ClearArena();
Translated bl OSEnableInterrupts to: OSEnableInterrupts();
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: lwz, operands: ['r30', '0x8(r1)']
Translated lwz r30 0x8(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r30, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x38(r1)']
Translated stwu r1 -0x38(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x38, gc_env.r[1]); // stwu r1, -0x38(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x38;']
Translated stmw r20 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[20]); // stmw r20, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[21]); // stmw r20, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[22]); // stmw r20, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[23]); // stmw r20, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[24]); // stmw r20, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[25]); // stmw r20, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[26]); // stmw r20, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[27]); // stmw r20, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[28]); // stmw r20, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[29]); // stmw r20, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[30]); // stmw r20, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[31]); // stmw r20, 0x8(r1)']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r0', '0x60(r3)']
Translated lwz r0 0x60(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x60); // lwz r0, 0x60(r3)']
Translated lis r4 __OSEVSetNumber@ha to: ['gc_env.r[4] = ((uint32_t)&__OSEVSetNumber >> 16) & 0xFFFF; // lis r4, __OSEVSetNumber@ha']
Processing opcode: addi, operands: ['r30', 'r4', '__OSEVSetNumber@l']
Translated addi r30 r4 __OSEVSetNumber@l to: ['gc_env.r[30] = (uint32_t)&__OSEVSetNumber; // lis + addi __OSEVSetNumber (completing pattern)']
Translated lis r5 __OSEVStart@ha to: ['gc_env.r[5] = ((uint32_t)&__OSEVStart >> 16) & 0xFFFF; // lis r5, __OSEVStart@ha']
Processing opcode: lwz, operands: ['r25', '0x0(r30)']
Translated lwz r25 0x0(r30) to: ['gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r25, (r30)']
Translated lis r4 __OSEVEnd@ha to: ['gc_env.r[4] = ((uint32_t)&__OSEVEnd >> 16) & 0xFFFF; // lis r4, __OSEVEnd@ha']
Processing opcode: addi, operands: ['r5', 'r5', '__OSEVStart@l']
Translated addi r5 r5 __OSEVStart@l to: ['gc_env.r[5] = gc_env.r[5] + ((uint32_t)&__OSEVStart & 0xFFFF); // addi r5, r5, __OSEVStart@l']
Processing opcode: addi, operands: ['r4', 'r4', '__OSEVEnd@l']
Translated addi r4 r4 __OSEVEnd@l to: ['gc_env.r[4] = gc_env.r[4] + ((uint32_t)&__OSEVEnd & 0xFFFF); // addi r4, r4, __OSEVEnd@l']
Translated lis r6 "@73_8001A6E0"@ha to: ['gc_env.r[6] = ((uint32_t)&_73_8001A6E0 >> 16) & 0xFFFF; // lis r6, "@73_8001A6E0"@ha']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated mr r24 r5 to: gc_env.r[24] = gc_env.r[5]; // Move register
Processing opcode: addi, operands: ['r29', 'r6', '"@73_8001A6E0"@l']
Translated addi r29 r6 "@73_8001A6E0"@l to: ['gc_env.r[29] = gc_env.r[6] + ((uint32_t)&_73_8001A6E0 & 0xFFFF); // addi r29, r6, "@73_8001A6E0"@l']
Processing opcode: subf, operands: ['r23', 'r5', 'r4']
Translated subf r23 r5 r4 to: ['gc_env.r[23] = gc_env.r[4] - gc_env.r[5]; // subf r23, r5, r4']
Processing opcode: addi, operands: ['r20', 'r3', '0x60']
Translated addi r20 r3 0x60 to: ['gc_env.r[20] = gc_env.r[3] + 96; // addi r20, r3, 0x60']
Translated bne .L_80005BFC to: if (gc_env.cr[0] != 0) goto L_80005BFC;
Processing opcode: addi, operands: ['r3', 'r29', '0x124']
Translated addi r3 r29 0x124 to: ['gc_env.r[3] = gc_env.r[29] + 292; // addi r3, r29, 0x124']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl DBPrintf to: DBPrintf();
Translated lis r4 __OSDBINTSTART@ha to: ['gc_env.r[4] = ((uint32_t)&__OSDBINTSTART >> 16) & 0xFFFF; // lis r4, __OSDBINTSTART@ha']
Translated lis r3 __OSDBINTEND@ha to: ['gc_env.r[3] = ((uint32_t)&__OSDBINTEND >> 16) & 0xFFFF; // lis r3, __OSDBINTEND@ha']
Processing opcode: addi, operands: ['r0', 'r3', '__OSDBINTEND@l']
Translated addi r0 r3 __OSDBINTEND@l to: ['gc_env.r[0] = (uint32_t)&__OSDBINTEND; // lis + addi __OSDBINTEND (completing pattern)']
Processing opcode: addi, operands: ['r4', 'r4', '__OSDBINTSTART@l']
Translated addi r4 r4 __OSDBINTSTART@l to: ['gc_env.r[4] = gc_env.r[4] + ((uint32_t)&__OSDBINTSTART & 0xFFFF); // addi r4, r4, __OSDBINTSTART@l']
Processing opcode: subf, operands: ['r21', 'r4', 'r0']
Translated subf r21 r4 r0 to: ['gc_env.r[21] = gc_env.r[0] - gc_env.r[4]; // subf r21, r4, r0']
Translated mr r3 r20 to: gc_env.r[3] = gc_env.r[20]; // Move register
Translated mr r5 r21 to: gc_env.r[5] = gc_env.r[21]; // Move register
Translated bl memcpy to: memcpy();
Translated mr r3 r20 to: gc_env.r[3] = gc_env.r[20]; // Move register
Translated mr r4 r21 to: gc_env.r[4] = gc_env.r[21]; // Move register
Translated bl DCFlushRangeNoSync to: DCFlushRangeNoSync();
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated mr r3 r20 to: gc_env.r[3] = gc_env.r[20]; // Move register
Translated mr r4 r21 to: gc_env.r[4] = gc_env.r[21]; // Move register
Translated bl ICInvalidateRange to: ICInvalidateRange();
Translated lis r4 __OSDBINTEND@ha to: ['gc_env.r[4] = ((uint32_t)&__OSDBINTEND >> 16) & 0xFFFF; // lis r4, __OSDBINTEND@ha']
Translated lis r3 __OSDBJUMPEND@ha to: ['gc_env.r[3] = ((uint32_t)&__OSDBJUMPEND >> 16) & 0xFFFF; // lis r3, __OSDBJUMPEND@ha']
Processing opcode: addi, operands: ['r31', 'r4', '__OSDBINTEND@l']
Translated addi r31 r4 __OSDBINTEND@l to: ['gc_env.r[31] = gc_env.r[4] + ((uint32_t)&__OSDBINTEND & 0xFFFF); // addi r31, r4, __OSDBINTEND@l']
Processing opcode: addi, operands: ['r0', 'r3', '__OSDBJUMPEND@l']
Translated addi r0 r3 __OSDBJUMPEND@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&__OSDBJUMPEND & 0xFFFF); // addi r0, r3, __OSDBJUMPEND@l']
Processing opcode: addi, operands: ['r28', 'r29', '0xe8']
Translated addi r28 r29 0xe8 to: ['gc_env.r[28] = gc_env.r[29] + 232; // addi r28, r29, 0xe8']
Processing opcode: subf, operands: ['r27', 'r31', 'r0']
Translated subf r27 r31 r0 to: ['gc_env.r[27] = gc_env.r[0] - gc_env.r[31]; // subf r27, r31, r0']
Processing opcode: li, operands: ['r26', '0x0']
Translated li r26 0x0 to: ['gc_env.r[26] = 0x0; // li r26, 0x0']
Translated b .L_80005C1C to: goto L_80005C1C;
Translated lis r3 __DBVECTOR@ha to: ['gc_env.r[3] = ((uint32_t)&__DBVECTOR >> 16) & 0xFFFF; // lis r3, __DBVECTOR@ha']
Processing opcode: addi, operands: ['r21', 'r3', '__DBVECTOR@l']
Translated addi r21 r3 __DBVECTOR@l to: ['gc_env.r[21] = (uint32_t)&__DBVECTOR; // lis + addi __DBVECTOR (completing pattern)']
Translated lis r22 0x6000 to: ['gc_env.r[22] = 24576 << 16; // lis r22, 0x6000']
Translated b .L_80005C2C to: goto L_80005C2C;
Translated b .L_80005D74 to: goto L_80005D74;
Processing opcode: lwz, operands: ['r3', 'BI2DebugFlag_8001EE6C@sda21(r0)']
Translated lwz r3 BI2DebugFlag_8001EE6C@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&BI2DebugFlag_8001EE6C); // lwz r3, BI2DebugFlag_8001EE6C@sda21(r0)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80005C6C to: if (gc_env.cr[0] == 0) goto L_80005C6C;
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated blt .L_80005C6C to: ['if (gc_env.cr[0] & 0x8) goto L_80005C6C; // blt .L_80005C6C']
Translated mr r3 r26 to: gc_env.r[3] = gc_env.r[26]; // Move register
Translated bl __DBIsExceptionMarked to: __DBIsExceptionMarked();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80005C6C to: if (gc_env.cr[0] == 0) goto L_80005C6C;
Processing opcode: addi, operands: ['r3', 'r29', '0x140']
Translated addi r3 r29 0x140 to: ['gc_env.r[3] = gc_env.r[29] + 320; // addi r3, r29, 0x140']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated clrlwi r4 r26 24 to: ['gc_env.r[4] = gc_env.r[26] & 0xFF; // clrlwi r4, r26, 24']
Translated bl DBPrintf to: DBPrintf();
Translated b .L_80005D6C to: goto L_80005D6C;
Translated clrlwi r20 r26 24 to: ['gc_env.r[20] = gc_env.r[26] & 0xFF; // clrlwi r20, r26, 24']
Translated or r0 r25 r20 to: ['gc_env.r[0] = gc_env.r[25] | gc_env.r[20]; // or r0, r25, r20']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Translated mr r3 r26 to: gc_env.r[3] = gc_env.r[26]; // Move register
Translated bl __DBIsExceptionMarked to: __DBIsExceptionMarked();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80005CAC to: if (gc_env.cr[0] == 0) goto L_80005CAC;
Translated mr r4 r20 to: gc_env.r[4] = gc_env.r[20]; // Move register
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: addi, operands: ['r3', 'r29', '0x170']
Translated addi r3 r29 0x170 to: ['gc_env.r[3] = gc_env.r[29] + 368; // addi r3, r29, 0x170']
Translated bl DBPrintf to: DBPrintf();
Translated mr r3 r21 to: gc_env.r[3] = gc_env.r[21]; // Move register
Translated mr r4 r31 to: gc_env.r[4] = gc_env.r[31]; // Move register
Translated mr r5 r27 to: gc_env.r[5] = gc_env.r[27]; // Move register
Translated bl memcpy to: memcpy();
Translated b .L_80005D38 to: goto L_80005D38;
Translated mr r4 r21 to: gc_env.r[4] = gc_env.r[21]; // Move register
Translated b .L_80005CB4 to: goto L_80005CB4;
Translated cmplwi r27 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[27] == 0x0) ? 0 : ((uint32_t)gc_env.r[27] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: addi, operands: ['r3', 'r27', '0x3']
Translated addi r3 r27 0x3 to: ['gc_env.r[3] = gc_env.r[27] + 3; // addi r3, r27, 0x3']
Translated srwi r3 r3 2 to: ['gc_env.r[3] = gc_env.r[3] >> 2; // srwi r3, r3, 2']
Translated ble .L_80005D38 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80005D38; // ble .L_80005D38']
Translated srwi r0 r3 3 to: ['gc_env.r[0] = gc_env.r[3] >> 3; // srwi r0, r3, 3']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated beq .L_80005D24 to: if (gc_env.cr[0] == 0) goto L_80005D24;
Translated b .L_80005CD8 to: goto L_80005CD8;
Processing opcode: stw, operands: ['r22', '0x0(r4)']
Translated stw r22 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[22]); // stw r22, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x4']
Translated addi r4 r4 0x4 to: ['gc_env.r[4] += 4; // addi r4, r4, 0x4']
Processing opcode: stw, operands: ['r22', '0x0(r4)']
Translated stw r22 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[22]); // stw r22, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x4']
Translated addi r4 r4 0x4 to: ['gc_env.r[4] += 4; // addi r4, r4, 0x4']
Processing opcode: stw, operands: ['r22', '0x0(r4)']
Translated stw r22 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[22]); // stw r22, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x4']
Translated addi r4 r4 0x4 to: ['gc_env.r[4] += 4; // addi r4, r4, 0x4']
Processing opcode: stw, operands: ['r22', '0x0(r4)']
Translated stw r22 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[22]); // stw r22, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x4']
Translated addi r4 r4 0x4 to: ['gc_env.r[4] += 4; // addi r4, r4, 0x4']
Processing opcode: stw, operands: ['r22', '0x0(r4)']
Translated stw r22 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[22]); // stw r22, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x4']
Translated addi r4 r4 0x4 to: ['gc_env.r[4] += 4; // addi r4, r4, 0x4']
Processing opcode: stw, operands: ['r22', '0x0(r4)']
Translated stw r22 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[22]); // stw r22, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x4']
Translated addi r4 r4 0x4 to: ['gc_env.r[4] += 4; // addi r4, r4, 0x4']
Processing opcode: stw, operands: ['r22', '0x0(r4)']
Translated stw r22 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[22]); // stw r22, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x4']
Translated addi r4 r4 0x4 to: ['gc_env.r[4] += 4; // addi r4, r4, 0x4']
Processing opcode: stw, operands: ['r22', '0x0(r4)']
Translated stw r22 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[22]); // stw r22, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x4']
Translated addi r4 r4 0x4 to: ['gc_env.r[4] += 4; // addi r4, r4, 0x4']
Translated bdnz .L_80005CD8 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80005CD8;']
Translated andi. r3 r3 0x7 to: gc_env.r[3] = gc_env.r[3] & 0x7;
Translated beq .L_80005D38 to: if (gc_env.cr[0] == 0) goto L_80005D38;
Translated mtctr r3 to: gc_env.ctr = gc_env.r[3]; // Move to count register
Translated b .L_80005D2C to: goto L_80005D2C;
Processing opcode: stw, operands: ['r22', '0x0(r4)']
Translated stw r22 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[22]); // stw r22, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x4']
Translated addi r4 r4 0x4 to: ['gc_env.r[4] += 4; // addi r4, r4, 0x4']
Translated bdnz .L_80005D2C to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80005D2C;']
Processing opcode: lwz, operands: ['r3', '0x0(r28)']
Translated lwz r3 0x0(r28) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r3, (r28)']
Translated mr r4 r24 to: gc_env.r[4] = gc_env.r[24]; // Move register
Translated mr r5 r23 to: gc_env.r[5] = gc_env.r[23]; // Move register
Processing opcode: addis, operands: ['r20', 'r3', '0x8000']
Translated addis r20 r3 0x8000 to: ['gc_env.r[20] = gc_env.r[3] + (32768 << 16); // addis r20, r3, 32768']
Translated mr r3 r20 to: gc_env.r[3] = gc_env.r[20]; // Move register
Translated bl memcpy to: memcpy();
Translated mr r3 r20 to: gc_env.r[3] = gc_env.r[20]; // Move register
Translated mr r4 r23 to: gc_env.r[4] = gc_env.r[23]; // Move register
Translated bl DCFlushRangeNoSync to: DCFlushRangeNoSync();
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated mr r3 r20 to: gc_env.r[3] = gc_env.r[20]; // Move register
Translated mr r4 r23 to: gc_env.r[4] = gc_env.r[23]; // Move register
Translated bl ICInvalidateRange to: ICInvalidateRange();
Processing opcode: addi, operands: ['r28', 'r28', '0x4']
Translated addi r28 r28 0x4 to: ['gc_env.r[28] += 4; // addi r28, r28, 0x4']
Processing opcode: addi, operands: ['r26', 'r26', '0x1']
Translated addi r26 r26 0x1 to: ['gc_env.r[26] += 1; // addi r26, r26, 0x1']
Translated clrlwi r0 r26 24 to: ['gc_env.r[0] = gc_env.r[26] & 0xFF; // clrlwi r0, r26, 24']
Translated cmplwi r0 0xf to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xf) ? 0 : ((uint32_t)gc_env.r[0] < 0xf ? -1 : 1); // Logical compare with immediate
Translated blt .L_80005C30 to: ['if (gc_env.cr[0] & 0x8) goto L_80005C30; // blt .L_80005C30']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: addi, operands: ['r0', 'r3', '0x3000']
Translated addi r0 r3 0x3000 to: ['gc_env.r[0] = gc_env.r[3] + 12288; // addi r0, r3, 0x3000']
Processing opcode: stw, operands: ['r0', 'OSExceptionTable_8001EE78@sda21(r0)']
Translated stw r0 OSExceptionTable_8001EE78@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&OSExceptionTable_8001EE78, gc_env.r[0]); // stw r0, OSExceptionTable_8001EE78@sda21(r0)']
Processing opcode: li, operands: ['r20', '0x0']
Translated li r20 0x0 to: ['gc_env.r[20] = 0x0; // li r20, 0x0']
Translated b .L_80005D94 to: goto L_80005D94;
Translated lis r3 OSDefaultExceptionHandler@ha to: ['gc_env.r[3] = ((uint32_t)&OSDefaultExceptionHandler >> 16) & 0xFFFF; // lis r3, OSDefaultExceptionHandler@ha']
Processing opcode: addi, operands: ['r23', 'r3', 'OSDefaultExceptionHandler@l']
Translated addi r23 r3 OSDefaultExceptionHandler@l to: ['gc_env.r[23] = (uint32_t)&OSDefaultExceptionHandler; // lis + addi OSDefaultExceptionHandler (completing pattern)']
Translated b .L_80005DA0 to: goto L_80005DA0;
Translated b .L_80005DB4 to: goto L_80005DB4;
Translated mr r3 r20 to: gc_env.r[3] = gc_env.r[20]; // Move register
Translated mr r4 r23 to: gc_env.r[4] = gc_env.r[23]; // Move register
Translated bl __OSSetExceptionHandler to: __OSSetExceptionHandler();
Processing opcode: addi, operands: ['r20', 'r20', '0x1']
Translated addi r20 r20 0x1 to: ['gc_env.r[20] += 1; // addi r20, r20, 0x1']
Translated clrlwi r0 r20 24 to: ['gc_env.r[0] = gc_env.r[20] & 0xFF; // clrlwi r0, r20, 24']
Translated cmplwi r0 0xf to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xf) ? 0 : ((uint32_t)gc_env.r[0] < 0xf ? -1 : 1); // Logical compare with immediate
Translated blt .L_80005DA4 to: ['if (gc_env.cr[0] & 0x8) goto L_80005DA4; // blt .L_80005DA4']
Processing opcode: stw, operands: ['r25', '0x0(r30)']
Translated stw r25 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[25]); // stw r25, (r30)']
Processing opcode: addi, operands: ['r3', 'r29', '0x1a0']
Translated addi r3 r29 0x1a0 to: ['gc_env.r[3] = gc_env.r[29] + 416; // addi r3, r29, 0x1a0']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl DBPrintf to: DBPrintf();
Translated lmw r20 0x8(r1) to: ['gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lmw r20, 0x8(r1)', 'gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lmw r20, 0x8(r1)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lmw r20, 0x8(r1)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lmw r20, 0x8(r1)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lmw r20, 0x8(r1)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r20, 0x8(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r20, 0x8(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r20, 0x8(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r20, 0x8(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r20, 0x8(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r20, 0x8(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r20, 0x8(r1)']
Processing opcode: lwz, operands: ['r0', '0x3c(r1)']
Translated lwz r0 0x3c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lwz r0, 0x3C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x38']
Translated addi r1 r1 0x38 to: ['gc_env.r[1] += 56; // addi r1, r1, 0x38']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: li, operands: ['r5', '0x40']
Translated li r5 0x40 to: ['gc_env.r[5] = 0x40; // li r5, 0x40']
Translated mflr r3 to: gc_env.r[3] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r3', '0xc(r5)']
Translated stw r3 0xc(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0xC, gc_env.r[3]); // stw r3, 0xC(r5)']
Processing opcode: lwz, operands: ['r3', '0x8(r5)']
Translated lwz r3 0x8(r5) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x8); // lwz r3, 0x8(r5)']
Translated oris r3 r3 0x8000 to: ['gc_env.r[3] = gc_env.r[3] | 0x80000000; // oris r3, r3, 0x8000']
Translated mtlr r3 to: gc_env.lr = gc_env.r[3]; // Move to link register
Processing opcode: li, operands: ['r3', '0x30']
Translated li r3 0x30 to: ['gc_env.r[3] = 0x30; // li r3, 0x30']
Translated mtmsr r3 to: gc_env.msr = gc_env.r[3]; // Move to machine state register
Translated blr  to: return;
Translated bla 0x60 to: 0x60();
Translated clrlwi r0 r3 24 to: ['gc_env.r[0] = gc_env.r[3] & 0xFF; // clrlwi r0, r3, 24']
Processing opcode: lwz, operands: ['r3', 'OSExceptionTable_8001EE78@sda21(r0)']
Translated lwz r3 OSExceptionTable_8001EE78@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&OSExceptionTable_8001EE78); // lwz r3, OSExceptionTable_8001EE78@sda21(r0)']
Translated slwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] << 2; // slwi r0, r0, 2']
Processing opcode: add, operands: ['r5', 'r3', 'r0']
Translated add r5 r3 r0 to: ['gc_env.r[5] = gc_env.r[3] + gc_env.r[0]; // add r5, r3, r0']
Processing opcode: lwz, operands: ['r3', '0x0(r5)']
Translated lwz r3 0x0(r5) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r3, (r5)']
Processing opcode: stw, operands: ['r4', '0x0(r5)']
Translated stw r4 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[4]); // stw r4, (r5)']
Translated blr  to: return;
Translated clrlwi r0 r3 24 to: ['gc_env.r[0] = gc_env.r[3] & 0xFF; // clrlwi r0, r3, 24']
Processing opcode: lwz, operands: ['r3', 'OSExceptionTable_8001EE78@sda21(r0)']
Translated lwz r3 OSExceptionTable_8001EE78@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&OSExceptionTable_8001EE78); // lwz r3, OSExceptionTable_8001EE78@sda21(r0)']
Translated slwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] << 2; // slwi r0, r0, 2']
Translated lwzx r3 r3 r0 to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + gc_env.r[0]); // lwzx r3, r3, r0']
Translated blr  to: return;
Translated mtsprg 0 r4 to: ['gc_env.sprg[0] = gc_env.r[4]; // mtsprg 0, r4']
Processing opcode: lwz, operands: ['r4', '0xc0(r0)']
Translated lwz r4 0xc0(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[0] + 0xC0); // lwz r4, 0xC0(r0)']
Processing opcode: stw, operands: ['r3', '0xc(r4)']
Translated stw r3 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[3]); // stw r3, 0xC(r4)']
Translated mfsprg r3 0 to: ['gc_env.r[3] = gc_env.sprg[0]; // mfsprg r3, 0']
Processing opcode: stw, operands: ['r3', '0x10(r4)']
Translated stw r3 0x10(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x10, gc_env.r[3]); // stw r3, 0x10(r4)']
Processing opcode: stw, operands: ['r5', '0x14(r4)']
Translated stw r5 0x14(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x14, gc_env.r[5]); // stw r5, 0x14(r4)']
Processing opcode: lhz, operands: ['r3', '0x1a2(r4)']
Translated lhz r3 0x1a2(r4) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[4] + 0x1a2); // lhz r3, 0x1a2(r4)']
Translated ori r3 r3 0x2 to: ['gc_env.r[3] |= 2; // ori r3, r3, 0x2']
Processing opcode: sth, operands: ['r3', '0x1a2(r4)']
Translated sth r3 0x1a2(r4) to: ['gc_mem_write16(gc_env.ram, gc_env.r[4] + 0x1A2, gc_env.r[3]); // sth r3, 0x1A2(r4)']
Translated mfcr r3 to: ['gc_env.r[3] = (gc_env.cr[0] << 28) | (gc_env.cr[1] << 24) | (gc_env.cr[2] << 20) | (gc_env.cr[3] << 16) | (gc_env.cr[4] << 12) | (gc_env.cr[5] << 8) | (gc_env.cr[6] << 4) | (gc_env.cr[7] << 0); // mfcr r3']
Processing opcode: stw, operands: ['r3', '0x80(r4)']
Translated stw r3 0x80(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x80, gc_env.r[3]); // stw r3, 0x80(r4)']
Translated mflr r3 to: gc_env.r[3] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r3', '0x84(r4)']
Translated stw r3 0x84(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x84, gc_env.r[3]); // stw r3, 0x84(r4)']
Translated mfctr r3 to: ['gc_env.r[3] = gc_env.ctr; // mfctr r3']
Processing opcode: stw, operands: ['r3', '0x88(r4)']
Translated stw r3 0x88(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x88, gc_env.r[3]); // stw r3, 0x88(r4)']
Translated mfxer r3 to: ['gc_env.r[3] = gc_env.xer; // mfxer r3']
Processing opcode: stw, operands: ['r3', '0x8c(r4)']
Translated stw r3 0x8c(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x8C, gc_env.r[3]); // stw r3, 0x8C(r4)']
Translated mfsrr0 r3 to: ['gc_env.r[3] = gc_env.srr0; // mfsrr0 r3']
Processing opcode: stw, operands: ['r3', '0x198(r4)']
Translated stw r3 0x198(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x198, gc_env.r[3]); // stw r3, 0x198(r4)']
Translated mfsrr1 r3 to: ['gc_env.r[3] = gc_env.srr1; // mfsrr1 r3']
Processing opcode: stw, operands: ['r3', '0x19c(r4)']
Translated stw r3 0x19c(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x19C, gc_env.r[3]); // stw r3, 0x19C(r4)']
Translated mr r5 r3 to: gc_env.r[5] = gc_env.r[3]; // Move register
Translated nop  to: ['// nop']
Translated mfmsr r3 to: gc_env.r[3] = gc_env.msr; // Move from machine state register
Translated ori r3 r3 0x30 to: ['gc_env.r[3] |= 48; // ori r3, r3, 0x30']
Translated mtsrr1 r3 to: ['gc_env.srr1 = gc_env.r[3]; // mtsrr1 r3']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r4', '0xd4(r0)']
Translated lwz r4 0xd4(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[0] + 0xD4); // lwz r4, 0xD4(r0)']
Translated rlwinm. r5 r5 0 30 30 to: ['gc_env.r[5] = (gc_env.r[5] << 0) & 0x2; // rlwinm r5, r5, 0, 30, 30', 'gc_env.cr[0] = (gc_env.r[5] == 0) ? 0x2 : ((int32_t)gc_env.r[5] < 0 ? 0x8 : 0x4);']
Translated bne .L_80005EC4 to: if (gc_env.cr[0] != 0) goto L_80005EC4;
Translated lis r5 OSDefaultExceptionHandler@ha to: ['gc_env.r[5] = ((uint32_t)&OSDefaultExceptionHandler >> 16) & 0xFFFF; // lis r5, OSDefaultExceptionHandler@ha']
Processing opcode: addi, operands: ['r5', 'r5', 'OSDefaultExceptionHandler@l']
Translated addi r5 r5 OSDefaultExceptionHandler@l to: ['gc_env.r[5] = (uint32_t)&OSDefaultExceptionHandler; // lis + addi OSDefaultExceptionHandler (completing pattern)']
Translated mtsrr0 r5 to: ['gc_env.srr0 = gc_env.r[5]; // mtsrr0 r5']
Translated rfi  to: ['// rfi: return from interrupt (not implemented)']
Translated clrlslwi r5 r3 24 2 to: ['gc_env.r[5] = (gc_env.r[3] << 2) & 0xFF; // clrlslwi r5, r3, 24, 2']
Processing opcode: lwz, operands: ['r5', '0x3000(r5)']
Translated lwz r5 0x3000(r5) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x3000); // lwz r5, 0x3000(r5)']
Translated mtsrr0 r5 to: ['gc_env.srr0 = gc_env.r[5]; // mtsrr0 r5']
Translated rfi  to: ['// rfi: return from interrupt (not implemented)']
Translated nop  to: ['// nop']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Processing opcode: stw, operands: ['r1', '0x4(r4)']
Translated stw r1 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[1]); // stw r1, 0x4(r4)']
Processing opcode: stw, operands: ['r2', '0x8(r4)']
Translated stw r2 0x8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x8, gc_env.r[2]); // stw r2, 0x8(r4)']
Translated stmw r6 0x18(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x18, gc_env.r[6]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1C, gc_env.r[7]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x20, gc_env.r[8]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x24, gc_env.r[9]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x28, gc_env.r[10]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x2C, gc_env.r[11]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x30, gc_env.r[12]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x34, gc_env.r[13]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x38, gc_env.r[14]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x3C, gc_env.r[15]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x40, gc_env.r[16]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x44, gc_env.r[17]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x48, gc_env.r[18]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4C, gc_env.r[19]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x50, gc_env.r[20]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x54, gc_env.r[21]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x58, gc_env.r[22]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x5C, gc_env.r[23]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x60, gc_env.r[24]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x64, gc_env.r[25]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x68, gc_env.r[26]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x6C, gc_env.r[27]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x70, gc_env.r[28]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x74, gc_env.r[29]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x78, gc_env.r[30]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x7C, gc_env.r[31]); // stmw r6, 0x18(r4)']
Translated mfspr r0 GQR1 to: ['gc_env.r[0] = gc_env.gqr[1]; // mfspr r0, GQR1']
Processing opcode: stw, operands: ['r0', '0x1a8(r4)']
Translated stw r0 0x1a8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1A8, gc_env.r[0]); // stw r0, 0x1A8(r4)']
Translated mfspr r0 GQR2 to: ['gc_env.r[0] = gc_env.gqr[2]; // mfspr r0, GQR2']
Processing opcode: stw, operands: ['r0', '0x1ac(r4)']
Translated stw r0 0x1ac(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1AC, gc_env.r[0]); // stw r0, 0x1AC(r4)']
Translated mfspr r0 GQR3 to: ['gc_env.r[0] = gc_env.gqr[3]; // mfspr r0, GQR3']
Processing opcode: stw, operands: ['r0', '0x1b0(r4)']
Translated stw r0 0x1b0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1B0, gc_env.r[0]); // stw r0, 0x1B0(r4)']
Translated mfspr r0 GQR4 to: ['gc_env.r[0] = gc_env.gqr[4]; // mfspr r0, GQR4']
Processing opcode: stw, operands: ['r0', '0x1b4(r4)']
Translated stw r0 0x1b4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1B4, gc_env.r[0]); // stw r0, 0x1B4(r4)']
Translated mfspr r0 GQR5 to: ['gc_env.r[0] = gc_env.gqr[5]; // mfspr r0, GQR5']
Processing opcode: stw, operands: ['r0', '0x1b8(r4)']
Translated stw r0 0x1b8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1B8, gc_env.r[0]); // stw r0, 0x1B8(r4)']
Translated mfspr r0 GQR6 to: ['gc_env.r[0] = gc_env.gqr[6]; // mfspr r0, GQR6']
Processing opcode: stw, operands: ['r0', '0x1bc(r4)']
Translated stw r0 0x1bc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1BC, gc_env.r[0]); // stw r0, 0x1BC(r4)']
Translated mfspr r0 GQR7 to: ['gc_env.r[0] = gc_env.gqr[7]; // mfspr r0, GQR7']
Processing opcode: stw, operands: ['r0', '0x1c0(r4)']
Translated stw r0 0x1c0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1C0, gc_env.r[0]); // stw r0, 0x1C0(r4)']
Translated mfdsisr r5 to: ['gc_env.r[5] = gc_env.dsisr; // mfdsisr r5']
Translated mfdar r6 to: ['gc_env.r[6] = gc_env.dar; // mfdar r6']
Translated b __OSUnhandledException to: __OSUnhandledException();
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl PPCMfhid2 to: PPCMfhid2();
Translated oris r3 r3 0xa000 to: ['gc_env.r[3] = gc_env.r[3] | 0xA0000000; // oris r3, r3, 0xA000']
Translated bl PPCMthid2 to: PPCMthid2();
Translated bl ICFlashInvalidate to: ICFlashInvalidate();
Translated sync  to: // sync: Memory barrier (no-op in this context)
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated mtspr GQR0 r3 to: ['gc_env.gqr[0] = gc_env.r[3]; // mtspr GQR0, r3']
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x6000']
Translated addi r3 r3 0x6000 to: ['gc_env.r[3] += 24576; // addi r3, r3, 0x6000']
Processing opcode: lwz, operands: ['r0', '0x24(r3)']
Translated lwz r0 0x24(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x24); // lwz r0, 0x24(r3)']
Translated clrlwi r3 r0 24 to: ['gc_env.r[3] = gc_env.r[0] & 0xFF; // clrlwi r3, r0, 24']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r3', '0x8']
Translated li r3 0x8 to: ['gc_env.r[3] = 0x8; // li r3, 0x8']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl __OSGetExceptionHandler to: __OSGetExceptionHandler();
Translated lis r4 DecrementerExceptionHandler@ha to: ['gc_env.r[4] = ((uint32_t)&DecrementerExceptionHandler >> 16) & 0xFFFF; // lis r4, DecrementerExceptionHandler@ha']
Processing opcode: addi, operands: ['r4', 'r4', 'DecrementerExceptionHandler@l']
Translated addi r4 r4 DecrementerExceptionHandler@l to: ['gc_env.r[4] = (uint32_t)&DecrementerExceptionHandler; // lis + addi DecrementerExceptionHandler (completing pattern)']
Translated cmplw r3 r4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[4]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[4] ? -1 : 1); // Logical compare word
Translated beq .L_80005FB4 to: if (gc_env.cr[0] == 0) goto L_80005FB4;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: li, operands: ['r3', 'AlarmQueue_8001EE88@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Processing opcode: stw, operands: ['r0', '0x4(r3)']
Translated stw r0 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[0]); // stw r0, 0x4(r3)']
Processing opcode: li, operands: ['r3', '0x8']
Translated li r3 0x8 to: ['gc_env.r[3] = 0x8; // li r3, 0x8']
Processing opcode: stw, operands: ['r0', 'AlarmQueue_8001EE88@sda21(r0)']
Translated stw r0 AlarmQueue_8001EE88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&AlarmQueue_8001EE88, gc_env.r[0]); // stw r0, AlarmQueue_8001EE88@sda21(r0)']
Translated bl __OSSetExceptionHandler to: __OSSetExceptionHandler();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x0(r3)']
Translated stw r0 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[0]); // stw r0, (r3)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x40(r1)']
Translated stwu r1 -0x40(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x40, gc_env.r[1]); // stwu r1, -0x40(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x40;']
Translated stmw r25 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[25]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[26]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[27]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[28]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[29]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[30]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[31]); // stmw r25, 0x24(r1)']
Processing opcode: li, operands: ['r28', '0x0']
Translated li r28 0x0 to: ['gc_env.r[28] = 0x0; // li r28, 0x0']
Translated mr r29 r3 to: gc_env.r[29] = gc_env.r[3]; // Move register
Translated xoris r4 r28 0x8000 to: ['gc_env.r[4] = gc_env.r[28] ^ 0x80000000; // xoris r4, r28, 0x8000']
Processing opcode: addi, operands: ['r25', 'r5', '0x0']
Translated addi r25 r5 0x0 to: ['gc_env.r[25] = gc_env.r[5] + 0; // addi r25, r5, 0x0']
Processing opcode: addi, operands: ['r30', 'r6', '0x0']
Translated addi r30 r6 0x0 to: ['gc_env.r[30] = gc_env.r[6] + 0; // addi r30, r6, 0x0']
Processing opcode: addi, operands: ['r31', 'r7', '0x0']
Translated addi r31 r7 0x0 to: ['gc_env.r[31] = gc_env.r[7] + 0; // addi r31, r7, 0x0']
Processing opcode: lwz, operands: ['r0', '0x18(r3)']
Translated lwz r0 0x18(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x18); // lwz r0, 0x18(r3)']
Processing opcode: lwz, operands: ['r8', '0x1c(r3)']
Translated lwz r8 0x1c(r3) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x1C); // lwz r8, 0x1C(r3)']
Translated xoris r3 r0 0x8000 to: ['gc_env.r[3] = gc_env.r[0] ^ 0x80000000; // xoris r3, r0, 0x8000']
Translated subfc r0 r8 r28 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[28] - gc_env.r[8];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r8, r28', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[28] >= gc_env.r[8] ? 0x20000000 : 0);']
Translated subfe r3 r3 r4 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[4] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r3, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r3 r4 r4 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[4] - gc_env.r[4] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r4, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= (gc_env.r[4] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r3 r3 to: ['gc_env.r[3] = -(int32_t)gc_env.r[3]; // neg r3, r3']
Translated beq .L_80006090 to: if (gc_env.cr[0] == 0) goto L_80006090;
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: lwz, operands: ['r7', '0x20(r29)']
Translated lwz r7 0x20(r29) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x20); // lwz r7, 0x20(r29)']
Translated xoris r5 r3 0x8000 to: ['gc_env.r[5] = gc_env.r[3] ^ 0x80000000; // xoris r5, r3, 0x8000']
Processing opcode: lwz, operands: ['r8', '0x24(r29)']
Translated lwz r8 0x24(r29) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x24); // lwz r8, 0x24(r29)']
Translated xoris r6 r7 0x8000 to: ['gc_env.r[6] = gc_env.r[7] ^ 0x80000000; // xoris r6, r7, 0x8000']
Translated subfc r0 r4 r8 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[8] - gc_env.r[4];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r4, r8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[8] >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfe r5 r5 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[5] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r5, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[5] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r5 r6 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[6] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r6, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[6] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r5 r5 to: ['gc_env.r[5] = -(int32_t)gc_env.r[5]; // neg r5, r5']
Processing opcode: addi, operands: ['r30', 'r8', '0x0']
Translated addi r30 r8 0x0 to: ['gc_env.r[30] = gc_env.r[8] + 0; // addi r30, r8, 0x0']
Processing opcode: addi, operands: ['r25', 'r7', '0x0']
Translated addi r25 r7 0x0 to: ['gc_env.r[25] = gc_env.r[7] + 0; // addi r25, r7, 0x0']
Translated beq .L_80006090 to: if (gc_env.cr[0] == 0) goto L_80006090;
Processing opcode: lwz, operands: ['r27', '0x18(r29)']
Translated lwz r27 0x18(r29) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x18); // lwz r27, 0x18(r29)']
Translated subfc r4 r8 r4 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[4] - gc_env.r[8];', 'gc_env.r[4] = (uint32_t)subfc_temp; // subfc r4, r8, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= gc_env.r[8] ? 0x20000000 : 0);']
Processing opcode: lwz, operands: ['r26', '0x1c(r29)']
Translated lwz r26 0x1c(r29) to: ['gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x1C); // lwz r26, 0x1C(r29)']
Translated subfe r3 r7 r3 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[3] - gc_env.r[7] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r7, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= (gc_env.r[7] + subfe_borrow) ? 0x20000000 : 0);']
Processing opcode: addi, operands: ['r5', 'r27', '0x0']
Translated addi r5 r27 0x0 to: ['gc_env.r[5] = gc_env.r[27] + 0; // addi r5, r27, 0x0']
Processing opcode: addi, operands: ['r6', 'r26', '0x0']
Translated addi r6 r26 0x0 to: ['gc_env.r[6] = gc_env.r[26] + 0; // addi r6, r26, 0x0']
Translated bl fn_800116AC to: fn_800116AC();
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: addc, operands: ['r5', 'r4', 'r0']
Translated addc r5 r4 r0 to: ['uint64_t addc_temp = (uint64_t)gc_env.r[4] + gc_env.r[0];', 'gc_env.r[5] = (uint32_t)addc_temp; // addc r5, r4, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addc_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Processing opcode: mullw, operands: ['r4', 'r27', 'r5']
Translated mullw r4 r27 r5 to: ['gc_env.r[4] = gc_env.r[27] * gc_env.r[5]; // mullw r4, r27, r5']
Translated mulhwu r0 r26 r5 to: ['gc_env.r[0] = (uint32_t)(((uint64_t)gc_env.r[26] * (uint64_t)gc_env.r[5]) >> 32); // mulhwu r0, r26, r5']
Translated adde r3 r3 r28 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[3] + gc_env.r[28] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[3] = (uint32_t)adde_temp; // adde r3, r3, r28', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Processing opcode: add, operands: ['r4', 'r4', 'r0']
Translated add r4 r4 r0 to: ['gc_env.r[4] = gc_env.r[4] + gc_env.r[0]; // add r4, r4, r0']
Processing opcode: mullw, operands: ['r0', 'r26', 'r3']
Translated mullw r0 r26 r3 to: ['gc_env.r[0] = gc_env.r[26] * gc_env.r[3]; // mullw r0, r26, r3']
Processing opcode: mullw, operands: ['r3', 'r26', 'r5']
Translated mullw r3 r26 r5 to: ['gc_env.r[3] = gc_env.r[26] * gc_env.r[5]; // mullw r3, r26, r5']
Processing opcode: add, operands: ['r0', 'r4', 'r0']
Translated add r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] + gc_env.r[0]; // add r0, r4, r0']
Processing opcode: addc, operands: ['r30', 'r30', 'r3']
Translated addc r30 r30 r3 to: ['uint64_t addc_temp = (uint64_t)gc_env.r[30] + gc_env.r[3];', 'gc_env.r[30] = (uint32_t)addc_temp; // addc r30, r30, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addc_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r25 r25 r0 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[25] + gc_env.r[0] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[25] = (uint32_t)adde_temp; // adde r25, r25, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Processing opcode: stw, operands: ['r31', '0x0(r29)']
Translated stw r31 0x0(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29], gc_env.r[31]); // stw r31, (r29)']
Translated xoris r4 r25 0x8000 to: ['gc_env.r[4] = gc_env.r[25] ^ 0x80000000; // xoris r4, r25, 0x8000']
Processing opcode: stw, operands: ['r30', '0xc(r29)']
Translated stw r30 0xc(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0xC, gc_env.r[30]); // stw r30, 0xC(r29)']
Processing opcode: stw, operands: ['r25', '0x8(r29)']
Translated stw r25 0x8(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0x8, gc_env.r[25]); // stw r25, 0x8(r29)']
Processing opcode: lwz, operands: ['r6', 'AlarmQueue_8001EE88@sda21(r0)']
Translated lwz r6 AlarmQueue_8001EE88@sda21(r0) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, (uint32_t)&AlarmQueue_8001EE88); // lwz r6, AlarmQueue_8001EE88@sda21(r0)']
Translated b .L_80006168 to: goto L_80006168;
Processing opcode: lwz, operands: ['r0', '0x8(r6)']
Translated lwz r0 0x8(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x8); // lwz r0, 0x8(r6)']
Processing opcode: lwz, operands: ['r5', '0xc(r6)']
Translated lwz r5 0xc(r6) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0xC); // lwz r5, 0xC(r6)']
Translated xoris r3 r0 0x8000 to: ['gc_env.r[3] = gc_env.r[0] ^ 0x80000000; // xoris r3, r0, 0x8000']
Translated subfc r0 r5 r30 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[30] - gc_env.r[5];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r5, r30', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[30] >= gc_env.r[5] ? 0x20000000 : 0);']
Translated subfe r3 r3 r4 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[4] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r3, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r3 r4 r4 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[4] - gc_env.r[4] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r4, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= (gc_env.r[4] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r3 r3 to: ['gc_env.r[3] = -(int32_t)gc_env.r[3]; // neg r3, r3']
Translated beq .L_80006164 to: if (gc_env.cr[0] == 0) goto L_80006164;
Processing opcode: lwz, operands: ['r0', '0x10(r6)']
Translated lwz r0 0x10(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x10); // lwz r0, 0x10(r6)']
Processing opcode: stw, operands: ['r0', '0x10(r29)']
Translated stw r0 0x10(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0x10, gc_env.r[0]); // stw r0, 0x10(r29)']
Processing opcode: stw, operands: ['r29', '0x10(r6)']
Translated stw r29 0x10(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x10, gc_env.r[29]); // stw r29, 0x10(r6)']
Processing opcode: stw, operands: ['r6', '0x14(r29)']
Translated stw r6 0x14(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0x14, gc_env.r[6]); // stw r6, 0x14(r29)']
Processing opcode: lwz, operands: ['r3', '0x10(r29)']
Translated lwz r3 0x10(r29) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x10); // lwz r3, 0x10(r29)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800060EC to: if (gc_env.cr[0] == 0) goto L_800060EC;
Processing opcode: stw, operands: ['r29', '0x14(r3)']
Translated stw r29 0x14(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x14, gc_env.r[29]); // stw r29, 0x14(r3)']
Translated b .L_8000620C to: goto L_8000620C;
Processing opcode: stw, operands: ['r29', 'AlarmQueue_8001EE88@sda21(r0)']
Translated stw r29 AlarmQueue_8001EE88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&AlarmQueue_8001EE88, gc_env.r[29]); // stw r29, AlarmQueue_8001EE88@sda21(r0)']
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: lwz, operands: ['r6', '0xc(r29)']
Translated lwz r6 0xc(r29) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r6, 0xC(r29)']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Processing opcode: lwz, operands: ['r0', '0x8(r29)']
Translated lwz r0 0x8(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x8); // lwz r0, 0x8(r29)']
Translated xoris r5 r7 0x8000 to: ['gc_env.r[5] = gc_env.r[7] ^ 0x80000000; // xoris r5, r7, 0x8000']
Translated subfc r8 r4 r6 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[6] - gc_env.r[4];', 'gc_env.r[8] = (uint32_t)subfc_temp; // subfc r8, r4, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfe r0 r3 r0 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[0] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[0] = (uint32_t)subfe_temp; // subfe r0, r3, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[0] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated xoris r6 r0 0x8000 to: ['gc_env.r[6] = gc_env.r[0] ^ 0x80000000; // xoris r6, r0, 0x8000']
Translated subfc r0 r7 r8 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[8] - gc_env.r[7];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r7, r8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[8] >= gc_env.r[7] ? 0x20000000 : 0);']
Translated subfe r5 r5 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[5] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r5, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[5] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r5 r6 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[6] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r6, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[6] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r5 r5 to: ['gc_env.r[5] = -(int32_t)gc_env.r[5]; // neg r5, r5']
Translated beq .L_80006130 to: if (gc_env.cr[0] == 0) goto L_80006130;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl PPCMtdec to: PPCMtdec();
Translated b .L_8000620C to: goto L_8000620C;
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Translated xoris r3 r7 0x8000 to: ['gc_env.r[3] = gc_env.r[7] ^ 0x80000000; // xoris r3, r7, 0x8000']
Translated subfc r0 r4 r8 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[8] - gc_env.r[4];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r4, r8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[8] >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfe r3 r3 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r3, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r3 r6 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[6] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r6, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[6] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r3 r3 to: ['gc_env.r[3] = -(int32_t)gc_env.r[3]; // neg r3, r3']
Translated beq .L_80006158 to: if (gc_env.cr[0] == 0) goto L_80006158;
Translated mr r3 r8 to: gc_env.r[3] = gc_env.r[8]; // Move register
Translated bl PPCMtdec to: PPCMtdec();
Translated b .L_8000620C to: goto L_8000620C;
Processing opcode: subi, operands: ['r3', 'r4', '0x1']
Translated subi r3 r4 0x1 to: ['gc_env.r[3] = gc_env.r[4] - 1; // subi r3, r4, 1']
Translated bl PPCMtdec to: PPCMtdec();
Translated b .L_8000620C to: goto L_8000620C;
Processing opcode: lwz, operands: ['r6', '0x14(r6)']
Translated lwz r6 0x14(r6) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x14); // lwz r6, 0x14(r6)']
Translated cmplwi r6 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[6] == 0x0) ? 0 : ((uint32_t)gc_env.r[6] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800060A8 to: if (gc_env.cr[0] != 0) goto L_800060A8;
Processing opcode: li, operands: ['r30', '0x0']
Translated li r30 0x0 to: ['gc_env.r[30] = 0x0; // li r30, 0x0']
Processing opcode: stw, operands: ['r30', '0x14(r29)']
Translated stw r30 0x14(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0x14, gc_env.r[30]); // stw r30, 0x14(r29)']
Processing opcode: li, operands: ['r3', 'AlarmQueue_8001EE88@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Processing opcode: lwz, operands: ['r4', '0x4(r3)']
Translated lwz r4 0x4(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4); // lwz r4, 0x4(r3)']
Processing opcode: stwu, operands: ['r29', '0x4(r3)']
Translated stwu r29 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[29]); // stwu r29, 0x4(r3)', 'gc_env.r[3] = gc_env.r[3] + 0x4;']
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r4', '0x10(r29)']
Translated stw r4 0x10(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0x10, gc_env.r[4]); // stw r4, 0x10(r29)']
Translated beq .L_80006198 to: if (gc_env.cr[0] == 0) goto L_80006198;
Processing opcode: stw, operands: ['r29', '0x14(r4)']
Translated stw r29 0x14(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x14, gc_env.r[29]); // stw r29, 0x14(r4)']
Translated b .L_8000620C to: goto L_8000620C;
Processing opcode: stw, operands: ['r29', '0x0(r3)']
Translated stw r29 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[29]); // stw r29, (r3)']
Processing opcode: stw, operands: ['r29', 'AlarmQueue_8001EE88@sda21(r0)']
Translated stw r29 AlarmQueue_8001EE88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&AlarmQueue_8001EE88, gc_env.r[29]); // stw r29, AlarmQueue_8001EE88@sda21(r0)']
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: lwz, operands: ['r6', '0xc(r29)']
Translated lwz r6 0xc(r29) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r6, 0xC(r29)']
Translated xoris r5 r30 0x8000 to: ['gc_env.r[5] = gc_env.r[30] ^ 0x80000000; // xoris r5, r30, 0x8000']
Processing opcode: lwz, operands: ['r0', '0x8(r29)']
Translated lwz r0 0x8(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x8); // lwz r0, 0x8(r29)']
Translated subfc r7 r4 r6 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[6] - gc_env.r[4];', 'gc_env.r[7] = (uint32_t)subfc_temp; // subfc r7, r4, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfe r0 r3 r0 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[0] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[0] = (uint32_t)subfe_temp; // subfe r0, r3, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[0] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated xoris r6 r0 0x8000 to: ['gc_env.r[6] = gc_env.r[0] ^ 0x80000000; // xoris r6, r0, 0x8000']
Translated subfc r0 r30 r7 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[7] - gc_env.r[30];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r30, r7', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[7] >= gc_env.r[30] ? 0x20000000 : 0);']
Translated subfe r5 r5 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[5] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r5, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[5] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r5 r6 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[6] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r6, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[6] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r5 r5 to: ['gc_env.r[5] = -(int32_t)gc_env.r[5]; // neg r5, r5']
Translated beq .L_800061DC to: if (gc_env.cr[0] == 0) goto L_800061DC;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl PPCMtdec to: PPCMtdec();
Translated b .L_8000620C to: goto L_8000620C;
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Translated xoris r3 r30 0x8000 to: ['gc_env.r[3] = gc_env.r[30] ^ 0x80000000; // xoris r3, r30, 0x8000']
Translated subfc r0 r4 r7 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[7] - gc_env.r[4];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r4, r7', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[7] >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfe r3 r3 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r3, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r3 r6 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[6] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r6, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[6] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r3 r3 to: ['gc_env.r[3] = -(int32_t)gc_env.r[3]; // neg r3, r3']
Translated beq .L_80006204 to: if (gc_env.cr[0] == 0) goto L_80006204;
Translated mr r3 r7 to: gc_env.r[3] = gc_env.r[7]; // Move register
Translated bl PPCMtdec to: PPCMtdec();
Translated b .L_8000620C to: goto L_8000620C;
Processing opcode: subi, operands: ['r3', 'r4', '0x1']
Translated subi r3 r4 0x1 to: ['gc_env.r[3] = gc_env.r[4] - 1; // subi r3, r4, 1']
Translated bl PPCMtdec to: PPCMtdec();
Translated lmw r25 0x24(r1) to: ['gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r25, 0x24(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r25, 0x24(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r25, 0x24(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r25, 0x24(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r25, 0x24(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x38); // lmw r25, 0x24(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lmw r25, 0x24(r1)']
Processing opcode: lwz, operands: ['r0', '0x44(r1)']
Translated lwz r0 0x44(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lwz r0, 0x44(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x40']
Translated addi r1 r1 0x40 to: ['gc_env.r[1] += 64; // addi r1, r1, 0x40']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x38(r1)']
Translated stwu r1 -0x38(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x38, gc_env.r[1]); // stwu r1, -0x38(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x38;']
Translated stmw r27 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[27]); // stmw r27, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[28]); // stmw r27, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[29]); // stmw r27, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[30]); // stmw r27, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[31]); // stmw r27, 0x24(r1)']
Processing opcode: addi, operands: ['r27', 'r3', '0x0']
Translated addi r27 r3 0x0 to: ['gc_env.r[27] = gc_env.r[3] + 0; // addi r27, r3, 0x0']
Processing opcode: addi, operands: ['r29', 'r5', '0x0']
Translated addi r29 r5 0x0 to: ['gc_env.r[29] = gc_env.r[5] + 0; // addi r29, r5, 0x0']
Processing opcode: addi, operands: ['r28', 'r6', '0x0']
Translated addi r28 r6 0x0 to: ['gc_env.r[28] = gc_env.r[6] + 0; // addi r28, r6, 0x0']
Processing opcode: addi, operands: ['r30', 'r7', '0x0']
Translated addi r30 r7 0x0 to: ['gc_env.r[30] = gc_env.r[7] + 0; // addi r30, r7, 0x0']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x1c(r27)']
Translated stw r0 0x1c(r27) to: ['gc_mem_write32(gc_env.ram, gc_env.r[27] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r27)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: stw, operands: ['r0', '0x18(r27)']
Translated stw r0 0x18(r27) to: ['gc_mem_write32(gc_env.ram, gc_env.r[27] + 0x18, gc_env.r[0]); // stw r0, 0x18(r27)']
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: addc, operands: ['r6', 'r28', 'r4']
Translated addc r6 r28 r4 to: ['uint64_t addc_temp = (uint64_t)gc_env.r[28] + gc_env.r[4];', 'gc_env.r[6] = (uint32_t)addc_temp; // addc r6, r28, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addc_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r5 r29 r3 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[29] + gc_env.r[3] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[5] = (uint32_t)adde_temp; // adde r5, r29, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Processing opcode: addi, operands: ['r3', 'r27', '0x0']
Translated addi r3 r27 0x0 to: ['gc_env.r[3] = gc_env.r[27] + 0; // addi r3, r27, 0x0']
Processing opcode: addi, operands: ['r7', 'r30', '0x0']
Translated addi r7 r30 0x0 to: ['gc_env.r[7] = gc_env.r[30] + 0; // addi r7, r30, 0x0']
Translated bl InsertAlarm to: InsertAlarm();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated lmw r27 0x24(r1) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r27, 0x24(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r27, 0x24(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r27, 0x24(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r27, 0x24(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r27, 0x24(r1)']
Processing opcode: lwz, operands: ['r0', '0x3c(r1)']
Translated lwz r0 0x3c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lwz r0, 0x3C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x38']
Translated addi r1 r1 0x38 to: ['gc_env.r[1] += 56; // addi r1, r1, 0x38']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Processing opcode: stw, operands: ['r29', '0x14(r1)']
Translated stw r29 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stw r29, 0x14(r1)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', '0x0(r30)']
Translated lwz r0 0x0(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r0, (r30)']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800062C4 to: if (gc_env.cr[0] != 0) goto L_800062C4;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated b .L_80006388 to: goto L_80006388;
Processing opcode: lwz, operands: ['r29', '0x14(r30)']
Translated lwz r29 0x14(r30) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x14); // lwz r29, 0x14(r30)']
Translated cmplwi r29 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[29] == 0x0) ? 0 : ((uint32_t)gc_env.r[29] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800062E0 to: if (gc_env.cr[0] != 0) goto L_800062E0;
Processing opcode: lwz, operands: ['r0', '0x10(r30)']
Translated lwz r0 0x10(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x10); // lwz r0, 0x10(r30)']
Processing opcode: li, operands: ['r3', 'AlarmQueue_8001EE88@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Processing opcode: stw, operands: ['r0', '0x4(r3)']
Translated stw r0 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[0]); // stw r0, 0x4(r3)']
Translated b .L_800062E8 to: goto L_800062E8;
Processing opcode: lwz, operands: ['r0', '0x10(r30)']
Translated lwz r0 0x10(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x10); // lwz r0, 0x10(r30)']
Processing opcode: stw, operands: ['r0', '0x10(r29)']
Translated stw r0 0x10(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0x10, gc_env.r[0]); // stw r0, 0x10(r29)']
Processing opcode: lwz, operands: ['r3', '0x10(r30)']
Translated lwz r3 0x10(r30) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x10); // lwz r3, 0x10(r30)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800062FC to: if (gc_env.cr[0] == 0) goto L_800062FC;
Processing opcode: stw, operands: ['r29', '0x14(r3)']
Translated stw r29 0x14(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x14, gc_env.r[29]); // stw r29, 0x14(r3)']
Translated b .L_80006378 to: goto L_80006378;
Translated cmplwi r29 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[29] == 0x0) ? 0 : ((uint32_t)gc_env.r[29] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r29', 'AlarmQueue_8001EE88@sda21(r0)']
Translated stw r29 AlarmQueue_8001EE88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&AlarmQueue_8001EE88, gc_env.r[29]); // stw r29, AlarmQueue_8001EE88@sda21(r0)']
Translated beq .L_80006378 to: if (gc_env.cr[0] == 0) goto L_80006378;
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: lwz, operands: ['r6', '0xc(r29)']
Translated lwz r6 0xc(r29) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r6, 0xC(r29)']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Processing opcode: lwz, operands: ['r0', '0x8(r29)']
Translated lwz r0 0x8(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x8); // lwz r0, 0x8(r29)']
Translated xoris r5 r7 0x8000 to: ['gc_env.r[5] = gc_env.r[7] ^ 0x80000000; // xoris r5, r7, 0x8000']
Translated subfc r8 r4 r6 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[6] - gc_env.r[4];', 'gc_env.r[8] = (uint32_t)subfc_temp; // subfc r8, r4, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfe r0 r3 r0 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[0] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[0] = (uint32_t)subfe_temp; // subfe r0, r3, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[0] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated xoris r6 r0 0x8000 to: ['gc_env.r[6] = gc_env.r[0] ^ 0x80000000; // xoris r6, r0, 0x8000']
Translated subfc r0 r7 r8 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[8] - gc_env.r[7];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r7, r8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[8] >= gc_env.r[7] ? 0x20000000 : 0);']
Translated subfe r5 r5 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[5] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r5, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[5] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r5 r6 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[6] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r6, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[6] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r5 r5 to: ['gc_env.r[5] = -(int32_t)gc_env.r[5]; // neg r5, r5']
Translated beq .L_80006348 to: if (gc_env.cr[0] == 0) goto L_80006348;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl PPCMtdec to: PPCMtdec();
Translated b .L_80006378 to: goto L_80006378;
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Translated xoris r3 r7 0x8000 to: ['gc_env.r[3] = gc_env.r[7] ^ 0x80000000; // xoris r3, r7, 0x8000']
Translated subfc r0 r4 r8 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[8] - gc_env.r[4];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r4, r8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[8] >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfe r3 r3 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r3, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r3 r6 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[6] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r6, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[6] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r3 r3 to: ['gc_env.r[3] = -(int32_t)gc_env.r[3]; // neg r3, r3']
Translated beq .L_80006370 to: if (gc_env.cr[0] == 0) goto L_80006370;
Translated mr r3 r8 to: gc_env.r[3] = gc_env.r[8]; // Move register
Translated bl PPCMtdec to: PPCMtdec();
Translated b .L_80006378 to: goto L_80006378;
Processing opcode: subi, operands: ['r3', 'r4', '0x1']
Translated subi r3 r4 0x1 to: ['gc_env.r[3] = gc_env.r[4] - 1; // subi r3, r4, 1']
Translated bl PPCMtdec to: PPCMtdec();
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: lwz, operands: ['r29', '0x14(r1)']
Translated lwz r29 0x14(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r29, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x2f0(r1)']
Translated stwu r1 -0x2f0(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x2F0, gc_env.r[1]); // stwu r1, -0x2F0(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x2F0;']
Processing opcode: stw, operands: ['r31', '0x2ec(r1)']
Translated stw r31 0x2ec(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2EC, gc_env.r[31]); // stw r31, 0x2EC(r1)']
Processing opcode: stw, operands: ['r30', '0x2e8(r1)']
Translated stw r30 0x2e8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2E8, gc_env.r[30]); // stw r30, 0x2E8(r1)']
Processing opcode: stw, operands: ['r29', '0x2e4(r1)']
Translated stw r29 0x2e4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2E4, gc_env.r[29]); // stw r29, 0x2E4(r1)']
Translated mr r29 r4 to: gc_env.r[29] = gc_env.r[4]; // Move register
Processing opcode: stw, operands: ['r28', '0x2e0(r1)']
Translated stw r28 0x2e0(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2E0, gc_env.r[28]); // stw r28, 0x2E0(r1)']
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: lwz, operands: ['r0', 'AlarmQueue_8001EE88@sda21(r0)']
Translated lwz r0 AlarmQueue_8001EE88@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&AlarmQueue_8001EE88); // lwz r0, AlarmQueue_8001EE88@sda21(r0)']
Processing opcode: addi, operands: ['r28', 'r4', '0x0']
Translated addi r28 r4 0x0 to: ['gc_env.r[28] = gc_env.r[4] + 0; // addi r28, r4, 0x0']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated mr r31 r0 to: gc_env.r[31] = gc_env.r[0]; // Move register
Translated bne .L_800063E8 to: if (gc_env.cr[0] != 0) goto L_800063E8;
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated bl OSLoadContext to: OSLoadContext();
Processing opcode: lwz, operands: ['r0', '0x8(r31)']
Translated lwz r0 0x8(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r0, 0x8(r31)']
Translated xoris r4 r30 0x8000 to: ['gc_env.r[4] = gc_env.r[30] ^ 0x80000000; // xoris r4, r30, 0x8000']
Processing opcode: lwz, operands: ['r5', '0xc(r31)']
Translated lwz r5 0xc(r31) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r5, 0xC(r31)']
Translated xoris r3 r0 0x8000 to: ['gc_env.r[3] = gc_env.r[0] ^ 0x80000000; // xoris r3, r0, 0x8000']
Translated subfc r0 r5 r28 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[28] - gc_env.r[5];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r5, r28', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[28] >= gc_env.r[5] ? 0x20000000 : 0);']
Translated subfe r3 r3 r4 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[4] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r3, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r3 r4 r4 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[4] - gc_env.r[4] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r4, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= (gc_env.r[4] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r3 r3 to: ['gc_env.r[3] = -(int32_t)gc_env.r[3]; // neg r3, r3']
Translated beq .L_80006484 to: if (gc_env.cr[0] == 0) goto L_80006484;
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: lwz, operands: ['r6', '0xc(r31)']
Translated lwz r6 0xc(r31) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r6, 0xC(r31)']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Processing opcode: lwz, operands: ['r0', '0x8(r31)']
Translated lwz r0 0x8(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r0, 0x8(r31)']
Translated xoris r5 r7 0x8000 to: ['gc_env.r[5] = gc_env.r[7] ^ 0x80000000; // xoris r5, r7, 0x8000']
Translated subfc r8 r4 r6 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[6] - gc_env.r[4];', 'gc_env.r[8] = (uint32_t)subfc_temp; // subfc r8, r4, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfe r0 r3 r0 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[0] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[0] = (uint32_t)subfe_temp; // subfe r0, r3, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[0] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated xoris r6 r0 0x8000 to: ['gc_env.r[6] = gc_env.r[0] ^ 0x80000000; // xoris r6, r0, 0x8000']
Translated subfc r0 r7 r8 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[8] - gc_env.r[7];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r7, r8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[8] >= gc_env.r[7] ? 0x20000000 : 0);']
Translated subfe r5 r5 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[5] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r5, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[5] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r5 r6 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[6] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r6, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[6] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r5 r5 to: ['gc_env.r[5] = -(int32_t)gc_env.r[5]; // neg r5, r5']
Translated beq .L_8000644C to: if (gc_env.cr[0] == 0) goto L_8000644C;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl PPCMtdec to: PPCMtdec();
Translated b .L_8000647C to: goto L_8000647C;
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Translated xoris r3 r7 0x8000 to: ['gc_env.r[3] = gc_env.r[7] ^ 0x80000000; // xoris r3, r7, 0x8000']
Translated subfc r0 r4 r8 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[8] - gc_env.r[4];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r4, r8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[8] >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfe r3 r3 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r3, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r3 r6 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[6] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r6, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[6] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r3 r3 to: ['gc_env.r[3] = -(int32_t)gc_env.r[3]; // neg r3, r3']
Translated beq .L_80006474 to: if (gc_env.cr[0] == 0) goto L_80006474;
Translated mr r3 r8 to: gc_env.r[3] = gc_env.r[8]; // Move register
Translated bl PPCMtdec to: PPCMtdec();
Translated b .L_8000647C to: goto L_8000647C;
Processing opcode: subi, operands: ['r3', 'r4', '0x1']
Translated subi r3 r4 0x1 to: ['gc_env.r[3] = gc_env.r[4] - 1; // subi r3, r4, 1']
Translated bl PPCMtdec to: PPCMtdec();
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated bl OSLoadContext to: OSLoadContext();
Processing opcode: lwz, operands: ['r3', '0x14(r31)']
Translated lwz r3 0x14(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x14); // lwz r3, 0x14(r31)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r3', 'AlarmQueue_8001EE88@sda21(r0)']
Translated stw r3 AlarmQueue_8001EE88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&AlarmQueue_8001EE88, gc_env.r[3]); // stw r3, AlarmQueue_8001EE88@sda21(r0)']
Translated bne .L_800064A4 to: if (gc_env.cr[0] != 0) goto L_800064A4;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: li, operands: ['r3', 'AlarmQueue_8001EE88@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Processing opcode: stw, operands: ['r0', '0x4(r3)']
Translated stw r0 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[0]); // stw r0, 0x4(r3)']
Translated b .L_800064AC to: goto L_800064AC;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x10(r3)']
Translated stw r0 0x10(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x10, gc_env.r[0]); // stw r0, 0x10(r3)']
Processing opcode: lwz, operands: ['r30', '0x0(r31)']
Translated lwz r30 0x0(r31) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r30, (r31)']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated xoris r4 r6 0x8000 to: ['gc_env.r[4] = gc_env.r[6] ^ 0x80000000; // xoris r4, r6, 0x8000']
Processing opcode: stw, operands: ['r6', '0x0(r31)']
Translated stw r6 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[6]); // stw r6, (r31)']
Processing opcode: lwz, operands: ['r0', '0x18(r31)']
Translated lwz r0 0x18(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x18); // lwz r0, 0x18(r31)']
Processing opcode: lwz, operands: ['r5', '0x1c(r31)']
Translated lwz r5 0x1c(r31) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x1C); // lwz r5, 0x1C(r31)']
Translated xoris r3 r0 0x8000 to: ['gc_env.r[3] = gc_env.r[0] ^ 0x80000000; // xoris r3, r0, 0x8000']
Translated subfc r0 r5 r6 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[6] - gc_env.r[5];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r5, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= gc_env.r[5] ? 0x20000000 : 0);']
Translated subfe r3 r3 r4 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[4] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r3, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r3 r4 r4 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[4] - gc_env.r[4] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r4, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= (gc_env.r[4] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r3 r3 to: ['gc_env.r[3] = -(int32_t)gc_env.r[3]; // neg r3, r3']
Translated beq .L_800064F0 to: if (gc_env.cr[0] == 0) goto L_800064F0;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r7', 'r30', '0x0']
Translated addi r7 r30 0x0 to: ['gc_env.r[7] = gc_env.r[30] + 0; // addi r7, r30, 0x0']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl InsertAlarm to: InsertAlarm();
Processing opcode: lwz, operands: ['r28', 'AlarmQueue_8001EE88@sda21(r0)']
Translated lwz r28 AlarmQueue_8001EE88@sda21(r0) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, (uint32_t)&AlarmQueue_8001EE88); // lwz r28, AlarmQueue_8001EE88@sda21(r0)']
Translated cmplwi r28 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[28] == 0x0) ? 0 : ((uint32_t)gc_env.r[28] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000656C to: if (gc_env.cr[0] == 0) goto L_8000656C;
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: lwz, operands: ['r6', '0xc(r28)']
Translated lwz r6 0xc(r28) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[28] + 0xC); // lwz r6, 0xC(r28)']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Processing opcode: lwz, operands: ['r0', '0x8(r28)']
Translated lwz r0 0x8(r28) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[28] + 0x8); // lwz r0, 0x8(r28)']
Translated xoris r5 r7 0x8000 to: ['gc_env.r[5] = gc_env.r[7] ^ 0x80000000; // xoris r5, r7, 0x8000']
Translated subfc r8 r4 r6 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[6] - gc_env.r[4];', 'gc_env.r[8] = (uint32_t)subfc_temp; // subfc r8, r4, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfe r0 r3 r0 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[0] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[0] = (uint32_t)subfe_temp; // subfe r0, r3, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[0] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated xoris r6 r0 0x8000 to: ['gc_env.r[6] = gc_env.r[0] ^ 0x80000000; // xoris r6, r0, 0x8000']
Translated subfc r0 r7 r8 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[8] - gc_env.r[7];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r7, r8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[8] >= gc_env.r[7] ? 0x20000000 : 0);']
Translated subfe r5 r5 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[5] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r5, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[5] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r5 r6 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[6] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r6, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[6] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r5 r5 to: ['gc_env.r[5] = -(int32_t)gc_env.r[5]; // neg r5, r5']
Translated beq .L_8000653C to: if (gc_env.cr[0] == 0) goto L_8000653C;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl PPCMtdec to: PPCMtdec();
Translated b .L_8000656C to: goto L_8000656C;
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Translated xoris r3 r7 0x8000 to: ['gc_env.r[3] = gc_env.r[7] ^ 0x80000000; // xoris r3, r7, 0x8000']
Translated subfc r0 r4 r8 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[8] - gc_env.r[4];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r4, r8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[8] >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfe r3 r3 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r3, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r3 r6 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[6] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r6, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[6] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r3 r3 to: ['gc_env.r[3] = -(int32_t)gc_env.r[3]; // neg r3, r3']
Translated beq .L_80006564 to: if (gc_env.cr[0] == 0) goto L_80006564;
Translated mr r3 r8 to: gc_env.r[3] = gc_env.r[8]; // Move register
Translated bl PPCMtdec to: PPCMtdec();
Translated b .L_8000656C to: goto L_8000656C;
Processing opcode: subi, operands: ['r3', 'r4', '0x1']
Translated subi r3 r4 0x1 to: ['gc_env.r[3] = gc_env.r[4] - 1; // subi r3, r4, 1']
Translated bl PPCMtdec to: PPCMtdec();
Translated bl OSDisableScheduler to: OSDisableScheduler();
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Translated bl OSClearContext to: OSClearContext();
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Processing opcode: addi, operands: ['r12', 'r30', '0x0']
Translated addi r12 r30 0x0 to: ['gc_env.r[12] = gc_env.r[30] + 0; // addi r12, r30, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r29', '0x0']
Translated addi r4 r29 0x0 to: ['gc_env.r[4] = gc_env.r[29] + 0; // addi r4, r29, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Translated bl OSClearContext to: OSClearContext();
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Translated bl OSEnableScheduler to: OSEnableScheduler();
Translated bl __OSReschedule to: __OSReschedule();
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated bl OSLoadContext to: OSLoadContext();
Processing opcode: lwz, operands: ['r0', '0x2f4(r1)']
Translated lwz r0 0x2f4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2F4); // lwz r0, 0x2F4(r1)']
Processing opcode: lwz, operands: ['r31', '0x2ec(r1)']
Translated lwz r31 0x2ec(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2EC); // lwz r31, 0x2EC(r1)']
Processing opcode: lwz, operands: ['r30', '0x2e8(r1)']
Translated lwz r30 0x2e8(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2E8); // lwz r30, 0x2E8(r1)']
Processing opcode: lwz, operands: ['r29', '0x2e4(r1)']
Translated lwz r29 0x2e4(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2E4); // lwz r29, 0x2E4(r1)']
Processing opcode: lwz, operands: ['r28', '0x2e0(r1)']
Translated lwz r28 0x2e0(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2E0); // lwz r28, 0x2E0(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x2f0']
Translated addi r1 r1 0x2f0 to: ['gc_env.r[1] += 752; // addi r1, r1, 0x2f0']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Processing opcode: stw, operands: ['r1', '0x4(r4)']
Translated stw r1 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[1]); // stw r1, 0x4(r4)']
Processing opcode: stw, operands: ['r2', '0x8(r4)']
Translated stw r2 0x8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x8, gc_env.r[2]); // stw r2, 0x8(r4)']
Translated stmw r6 0x18(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x18, gc_env.r[6]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1C, gc_env.r[7]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x20, gc_env.r[8]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x24, gc_env.r[9]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x28, gc_env.r[10]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x2C, gc_env.r[11]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x30, gc_env.r[12]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x34, gc_env.r[13]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x38, gc_env.r[14]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x3C, gc_env.r[15]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x40, gc_env.r[16]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x44, gc_env.r[17]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x48, gc_env.r[18]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4C, gc_env.r[19]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x50, gc_env.r[20]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x54, gc_env.r[21]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x58, gc_env.r[22]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x5C, gc_env.r[23]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x60, gc_env.r[24]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x64, gc_env.r[25]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x68, gc_env.r[26]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x6C, gc_env.r[27]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x70, gc_env.r[28]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x74, gc_env.r[29]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x78, gc_env.r[30]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x7C, gc_env.r[31]); // stmw r6, 0x18(r4)']
Translated mfspr r0 GQR1 to: ['gc_env.r[0] = gc_env.gqr[1]; // mfspr r0, GQR1']
Processing opcode: stw, operands: ['r0', '0x1a8(r4)']
Translated stw r0 0x1a8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1A8, gc_env.r[0]); // stw r0, 0x1A8(r4)']
Translated mfspr r0 GQR2 to: ['gc_env.r[0] = gc_env.gqr[2]; // mfspr r0, GQR2']
Processing opcode: stw, operands: ['r0', '0x1ac(r4)']
Translated stw r0 0x1ac(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1AC, gc_env.r[0]); // stw r0, 0x1AC(r4)']
Translated mfspr r0 GQR3 to: ['gc_env.r[0] = gc_env.gqr[3]; // mfspr r0, GQR3']
Processing opcode: stw, operands: ['r0', '0x1b0(r4)']
Translated stw r0 0x1b0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1B0, gc_env.r[0]); // stw r0, 0x1B0(r4)']
Translated mfspr r0 GQR4 to: ['gc_env.r[0] = gc_env.gqr[4]; // mfspr r0, GQR4']
Processing opcode: stw, operands: ['r0', '0x1b4(r4)']
Translated stw r0 0x1b4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1B4, gc_env.r[0]); // stw r0, 0x1B4(r4)']
Translated mfspr r0 GQR5 to: ['gc_env.r[0] = gc_env.gqr[5]; // mfspr r0, GQR5']
Processing opcode: stw, operands: ['r0', '0x1b8(r4)']
Translated stw r0 0x1b8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1B8, gc_env.r[0]); // stw r0, 0x1B8(r4)']
Translated mfspr r0 GQR6 to: ['gc_env.r[0] = gc_env.gqr[6]; // mfspr r0, GQR6']
Processing opcode: stw, operands: ['r0', '0x1bc(r4)']
Translated stw r0 0x1bc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1BC, gc_env.r[0]); // stw r0, 0x1BC(r4)']
Translated mfspr r0 GQR7 to: ['gc_env.r[0] = gc_env.gqr[7]; // mfspr r0, GQR7']
Processing opcode: stw, operands: ['r0', '0x1c0(r4)']
Translated stw r0 0x1c0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1C0, gc_env.r[0]); // stw r0, 0x1C0(r4)']
Translated b DecrementerExceptionCallback to: DecrementerExceptionCallback();
Processing opcode: lwz, operands: ['r3', '__OSArenaHi_8001EE90@sda21(r0)']
Translated lwz r3 __OSArenaHi_8001EE90@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&__OSArenaHi_8001EE90); // lwz r3, __OSArenaHi_8001EE90@sda21(r0)']
Translated blr  to: return;
Processing opcode: lwz, operands: ['r3', '__OSArenaLo_8001EE08@sda21(r0)']
Translated lwz r3 __OSArenaLo_8001EE08@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&__OSArenaLo_8001EE08); // lwz r3, __OSArenaLo_8001EE08@sda21(r0)']
Translated blr  to: return;
Processing opcode: stw, operands: ['r3', '__OSArenaHi_8001EE90@sda21(r0)']
Translated stw r3 __OSArenaHi_8001EE90@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&__OSArenaHi_8001EE90, gc_env.r[3]); // stw r3, __OSArenaHi_8001EE90@sda21(r0)']
Translated blr  to: return;
Processing opcode: stw, operands: ['r3', '__OSArenaLo_8001EE08@sda21(r0)']
Translated stw r3 __OSArenaLo_8001EE08@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&__OSArenaLo_8001EE08, gc_env.r[3]); // stw r3, __OSArenaLo_8001EE08@sda21(r0)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Translated stmw r25 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[25]); // stmw r25, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[26]); // stmw r25, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[27]); // stmw r25, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[28]); // stmw r25, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[29]); // stmw r25, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[30]); // stmw r25, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stmw r25, 0x14(r1)']
Translated bl OSGetArenaHi to: OSGetArenaHi();
Translated lis r4 0x8100 to: ['gc_env.r[4] = -32512 << 16; // lis r4, 0x8100']
Processing opcode: li, operands: ['r5', '0x80']
Translated li r5 0x80 to: ['gc_env.r[5] = 0x80; // li r5, 0x80']
Processing opcode: subi, operands: ['r3', 'r3', '0x80']
Translated subi r3 r3 0x80 to: ['gc_env.r[3] = gc_env.r[3] - 128; // subi r3, r3, 128']
Translated bl memcpy to: memcpy();
Translated lis r3 DSPInitCode_8001A8A0@ha to: ['gc_env.r[3] = ((uint32_t)&DSPInitCode_8001A8A0 >> 16) & 0xFFFF; // lis r3, DSPInitCode_8001A8A0@ha']
Processing opcode: addi, operands: ['r4', 'r3', 'DSPInitCode_8001A8A0@l']
Translated addi r4 r3 DSPInitCode_8001A8A0@l to: ['gc_env.r[4] = (uint32_t)&DSPInitCode_8001A8A0; // lis + addi DSPInitCode_8001A8A0 (completing pattern)']
Translated lis r3 0x8100 to: ['gc_env.r[3] = -32512 << 16; // lis r3, 0x8100']
Processing opcode: li, operands: ['r5', '0x80']
Translated li r5 0x80 to: ['gc_env.r[5] = 0x80; // li r5, 0x80']
Translated bl memcpy to: memcpy();
Translated lis r3 0x8100 to: ['gc_env.r[3] = -32512 << 16; // lis r3, 0x8100']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Translated bl DCFlushRange to: DCFlushRange();
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x5000']
Translated addi r3 r3 0x5000 to: ['gc_env.r[3] += 20480; // addi r3, r3, 0x5000']
Processing opcode: li, operands: ['r0', '0x43']
Translated li r0 0x43 to: ['gc_env.r[0] = 0x43; // li r0, 0x43']
Processing opcode: sth, operands: ['r0', '0x12(r3)']
Translated sth r0 0x12(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x12, gc_env.r[0]); // sth r0, 0x12(r3)']
Processing opcode: addi, operands: ['r31', 'r3', '0xa']
Translated addi r31 r3 0xa to: ['gc_env.r[31] = gc_env.r[3] + 10; // addi r31, r3, 0xa']
Processing opcode: li, operands: ['r0', '0x8ac']
Translated li r0 0x8ac to: ['gc_env.r[0] = 0x8ac; // li r0, 0x8ac']
Processing opcode: sth, operands: ['r0', '0xa(r3)']
Translated sth r0 0xa(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0xA, gc_env.r[0]); // sth r0, 0xA(r3)']
Processing opcode: lhz, operands: ['r0', '0xa(r3)']
Translated lhz r0 0xa(r3) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0xa); // lhz r0, 0xa(r3)']
Translated ori r0 r0 0x1 to: ['gc_env.r[0] |= 1; // ori r0, r0, 0x1']
Processing opcode: sth, operands: ['r0', '0xa(r3)']
Translated sth r0 0xa(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0xA, gc_env.r[0]); // sth r0, 0xA(r3)']
Processing opcode: lhz, operands: ['r0', '0x0(r31)']
Translated lhz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r0, 0x0(r31)']
Translated clrlwi. r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Translated bne .L_800066AC to: if (gc_env.cr[0] != 0) goto L_800066AC;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: sth, operands: ['r0', '0x5000(r4)']
Translated sth r0 0x5000(r4) to: ['gc_mem_write16(gc_env.ram, gc_env.r[4] + 0x5000, gc_env.r[0]); // sth r0, 0x5000(r4)']
Processing opcode: addi, operands: ['r30', 'r4', '0x5000']
Translated addi r30 r4 0x5000 to: ['gc_env.r[30] = gc_env.r[4] + 20480; // addi r30, r4, 0x5000']
Processing opcode: lhzu, operands: ['r3', '0x4(r30)']
Translated lhzu r3 0x4(r30) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x4); // lhzu r3, 0x4(r30)', 'gc_env.r[30] = gc_env.r[30] + 0x4;']
Processing opcode: addi, operands: ['r29', 'r4', '0x5000']
Translated addi r29 r4 0x5000 to: ['gc_env.r[29] = gc_env.r[4] + 20480; // addi r29, r4, 0x5000']
Processing opcode: lhzu, operands: ['r0', '0x6(r29)']
Translated lhzu r0 0x6(r29) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[29] + 0x6); // lhzu r0, 0x6(r29)', 'gc_env.r[29] = gc_env.r[29] + 0x6;']
Translated rlwimi r0 r3 16 0 15 to: ['uint32_t rotated = gc_env.r[3] << 16; // rlwimi r0, r3, 16, 0, 15', 'gc_env.r[0] = (gc_env.r[0] & ~0xFFFF0000) | (rotated & 0xFFFF0000);']
Translated clrrwi. r0 r0 31 to: gc_env.r[0] = gc_env.r[0] & ~((1ULL << 31) - 1); // Clear rightmost 31 bits
Translated bne .L_800066C4 to: if (gc_env.cr[0] != 0) goto L_800066C4;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Translated lis r0 0x100 to: ['gc_env.r[0] = 256 << 16; // lis r0, 0x100']
Processing opcode: addi, operands: ['r27', 'r3', '0x5000']
Translated addi r27 r3 0x5000 to: ['gc_env.r[27] = gc_env.r[3] + 20480; // addi r27, r3, 0x5000']
Processing opcode: stwu, operands: ['r0', '0x20(r27)']
Translated stwu r0 0x20(r27) to: ['gc_mem_write32(gc_env.ram, gc_env.r[27] + 0x20, gc_env.r[0]); // stwu r0, 0x20(r27)', 'gc_env.r[27] = gc_env.r[27] + 0x20;']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: addi, operands: ['r26', 'r3', '0x5000']
Translated addi r26 r3 0x5000 to: ['gc_env.r[26] = gc_env.r[3] + 20480; // addi r26, r3, 0x5000']
Processing opcode: stwu, operands: ['r0', '0x24(r26)']
Translated stwu r0 0x24(r26) to: ['gc_mem_write32(gc_env.ram, gc_env.r[26] + 0x24, gc_env.r[0]); // stwu r0, 0x24(r26)', 'gc_env.r[26] = gc_env.r[26] + 0x24;']
Processing opcode: li, operands: ['r0', '0x20']
Translated li r0 0x20 to: ['gc_env.r[0] = 0x20; // li r0, 0x20']
Processing opcode: addi, operands: ['r25', 'r3', '0x5000']
Translated addi r25 r3 0x5000 to: ['gc_env.r[25] = gc_env.r[3] + 20480; // addi r25, r3, 0x5000']
Processing opcode: stwu, operands: ['r0', '0x28(r25)']
Translated stwu r0 0x28(r25) to: ['gc_mem_write32(gc_env.ram, gc_env.r[25] + 0x28, gc_env.r[0]); // stwu r0, 0x28(r25)', 'gc_env.r[25] = gc_env.r[25] + 0x28;']
Processing opcode: lhz, operands: ['r3', '0x0(r31)']
Translated lhz r3 0x0(r31) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r3, 0x0(r31)']
Translated b .L_80006714 to: goto L_80006714;
Processing opcode: lhz, operands: ['r3', '0x0(r31)']
Translated lhz r3 0x0(r31) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r3, 0x0(r31)']
Translated rlwinm. r0 r3 0 26 26 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x20; // rlwinm r0, r3, 0, 26, 26', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_80006710 to: if (gc_env.cr[0] == 0) goto L_80006710;
Processing opcode: sth, operands: ['r3', '0x0(r31)']
Translated sth r3 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[3]); // sth r3, (r31)']
Translated bl OSGetTick to: OSGetTick();
Translated mr r28 r3 to: gc_env.r[28] = gc_env.r[3]; // Move register
Translated bl OSGetTick to: OSGetTick();
Processing opcode: subf, operands: ['r0', 'r28', 'r3']
Translated subf r0 r28 r3 to: ['gc_env.r[0] = gc_env.r[3] - gc_env.r[28]; // subf r0, r28, r3']
Translated cmpwi r0 0x892 to: gc_env.cr[0] = (gc_env.r[0] == 0x892) ? 0 : (gc_env.r[0] < 0x892 ? -1 : 1); // Compare with immediate
Translated blt .L_80006728 to: ['if (gc_env.cr[0] & 0x8) goto L_80006728; // blt .L_80006728']
Translated lis r0 0x100 to: ['gc_env.r[0] = 256 << 16; // lis r0, 0x100']
Processing opcode: stw, operands: ['r0', '0x0(r27)']
Translated stw r0 0x0(r27) to: ['gc_mem_write32(gc_env.ram, gc_env.r[27], gc_env.r[0]); // stw r0, (r27)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r0', '0x20']
Translated li r0 0x20 to: ['gc_env.r[0] = 0x20; // li r0, 0x20']
Processing opcode: stw, operands: ['r3', '0x0(r26)']
Translated stw r3 0x0(r26) to: ['gc_mem_write32(gc_env.ram, gc_env.r[26], gc_env.r[3]); // stw r3, (r26)']
Processing opcode: stw, operands: ['r0', '0x0(r25)']
Translated stw r0 0x0(r25) to: ['gc_mem_write32(gc_env.ram, gc_env.r[25], gc_env.r[0]); // stw r0, (r25)']
Processing opcode: lhz, operands: ['r3', '0x0(r31)']
Translated lhz r3 0x0(r31) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r3, 0x0(r31)']
Translated b .L_8000675C to: goto L_8000675C;
Processing opcode: lhz, operands: ['r3', '0x0(r31)']
Translated lhz r3 0x0(r31) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r3, 0x0(r31)']
Translated rlwinm. r0 r3 0 26 26 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x20; // rlwinm r0, r3, 0, 26, 26', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_80006758 to: if (gc_env.cr[0] == 0) goto L_80006758;
Processing opcode: sth, operands: ['r3', '0x0(r31)']
Translated sth r3 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[3]); // sth r3, (r31)']
Processing opcode: lhz, operands: ['r0', '0x0(r31)']
Translated lhz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r0, 0x0(r31)']
Translated rlwinm r0 r0 0 21 19 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & -0x801; // rlwinm r0, r0, 0, 21, 19']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: lhz, operands: ['r0', '0x0(r31)']
Translated lhz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r0, 0x0(r31)']
Translated rlwinm. r0 r0 0 21 21 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x400; // rlwinm r0, r0, 0, 21, 21', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_80006774 to: if (gc_env.cr[0] != 0) goto L_80006774;
Processing opcode: lhz, operands: ['r0', '0x0(r31)']
Translated lhz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r0, 0x0(r31)']
Translated rlwinm r0 r0 0 30 28 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & -0x5; // rlwinm r0, r0, 0, 30, 28']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: lhz, operands: ['r0', '0x0(r30)']
Translated lhz r0 0x0(r30) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x0); // lhz r0, 0x0(r30)']
Translated b .L_80006798 to: goto L_80006798;
Processing opcode: lhz, operands: ['r0', '0x0(r30)']
Translated lhz r0 0x0(r30) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x0); // lhz r0, 0x0(r30)']
Translated clrlwi r5 r0 16 to: ['gc_env.r[5] = gc_env.r[0] & 0xFFFF; // clrlwi r5, r0, 16']
Translated rlwinm. r0 r0 0 16 16 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x8000; // rlwinm r0, r0, 0, 16, 16', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_80006794 to: if (gc_env.cr[0] == 0) goto L_80006794;
Processing opcode: lhz, operands: ['r0', '0x0(r31)']
Translated lhz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r0, 0x0(r31)']
Processing opcode: lhz, operands: ['r4', '0x0(r29)']
Translated lhz r4 0x0(r29) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[29] + 0x0); // lhz r4, 0x0(r29)']
Translated ori r0 r0 0x4 to: ['gc_env.r[0] |= 4; // ori r0, r0, 0x4']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: li, operands: ['r0', '0x8ac']
Translated li r0 0x8ac to: ['gc_env.r[0] = 0x8ac; // li r0, 0x8ac']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: lhz, operands: ['r0', '0x0(r31)']
Translated lhz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r0, 0x0(r31)']
Translated ori r0 r0 0x1 to: ['gc_env.r[0] |= 1; // ori r0, r0, 0x1']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: lhz, operands: ['r0', '0x0(r31)']
Translated lhz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r0, 0x0(r31)']
Translated clrlwi. r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Translated bne .L_800067C8 to: if (gc_env.cr[0] != 0) goto L_800067C8;
Translated bl OSGetArenaHi to: OSGetArenaHi();
Processing opcode: subi, operands: ['r4', 'r3', '0x80']
Translated subi r4 r3 0x80 to: ['gc_env.r[4] = gc_env.r[3] - 128; // subi r4, r3, 128']
Translated lis r3 0x8100 to: ['gc_env.r[3] = -32512 << 16; // lis r3, 0x8100']
Processing opcode: li, operands: ['r5', '0x80']
Translated li r5 0x80 to: ['gc_env.r[5] = 0x80; // li r5, 0x80']
Translated bl memcpy to: memcpy();
Translated lmw r25 0x14(r1) to: ['gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lmw r25, 0x14(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lmw r25, 0x14(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r25, 0x14(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r25, 0x14(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r25, 0x14(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r25, 0x14(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r25, 0x14(r1)']
Processing opcode: lwz, operands: ['r0', '0x34(r1)']
Translated lwz r0 0x34(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r0, 0x34(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x804']
Translated li r0 0x804 to: ['gc_env.r[0] = 0x804; // li r0, 0x804']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: addi, operands: ['r31', 'r3', '0x5000']
Translated addi r31 r3 0x5000 to: ['gc_env.r[31] = gc_env.r[3] + 20480; // addi r31, r3, 0x5000']
Processing opcode: addi, operands: ['r3', 'r3', '0x5000']
Translated addi r3 r3 0x5000 to: ['gc_env.r[3] += 20480; // addi r3, r3, 0x5000']
Processing opcode: stw, operands: ['r30', '0x8(r1)']
Translated stw r30 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[30]); // stw r30, 0x8(r1)']
Processing opcode: sth, operands: ['r0', '0xa(r31)']
Translated sth r0 0xa(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0xA, gc_env.r[0]); // sth r0, 0xA(r31)']
Processing opcode: lhz, operands: ['r0', '0x36(r3)']
Translated lhz r0 0x36(r3) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x36); // lhz r0, 0x36(r3)']
Translated rlwinm r0 r0 0 17 15 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & -0x8001; // rlwinm r0, r0, 0, 17, 15']
Processing opcode: sth, operands: ['r0', '0x36(r3)']
Translated sth r0 0x36(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x36, gc_env.r[0]); // sth r0, 0x36(r3)']
Processing opcode: lhzu, operands: ['r0', '0xa(r31)']
Translated lhzu r0 0xa(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0xa); // lhzu r0, 0xa(r31)', 'gc_env.r[31] = gc_env.r[31] + 0xa;']
Translated b .L_8000683C to: goto L_8000683C;
Processing opcode: lhz, operands: ['r0', '0x0(r31)']
Translated lhz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r0, 0x0(r31)']
Translated rlwinm. r0 r0 0 21 21 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x400; // rlwinm r0, r0, 0, 21, 21', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_80006838 to: if (gc_env.cr[0] != 0) goto L_80006838;
Processing opcode: lhz, operands: ['r0', '0x0(r31)']
Translated lhz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r0, 0x0(r31)']
Translated b .L_80006850 to: goto L_80006850;
Processing opcode: lhz, operands: ['r0', '0x0(r31)']
Translated lhz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r0, 0x0(r31)']
Translated rlwinm. r0 r0 0 22 22 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x200; // rlwinm r0, r0, 0, 22, 22', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_8000684C to: if (gc_env.cr[0] != 0) goto L_8000684C;
Processing opcode: li, operands: ['r0', '0x8ac']
Translated li r0 0x8ac to: ['gc_env.r[0] = 0x8ac; // li r0, 0x8ac']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: sth, operands: ['r0', '0x5000(r3)']
Translated sth r0 0x5000(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x5000, gc_env.r[0]); // sth r0, 0x5000(r3)']
Processing opcode: addi, operands: ['r4', 'r3', '0x5000']
Translated addi r4 r3 0x5000 to: ['gc_env.r[4] = gc_env.r[3] + 20480; // addi r4, r3, 0x5000']
Processing opcode: lhz, operands: ['r3', '0x4(r4)']
Translated lhz r3 0x4(r4) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[4] + 0x4); // lhz r3, 0x4(r4)']
Processing opcode: lhz, operands: ['r0', '0x6(r4)']
Translated lhz r0 0x6(r4) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[4] + 0x6); // lhz r0, 0x6(r4)']
Translated rlwimi r0 r3 16 0 15 to: ['uint32_t rotated = gc_env.r[3] << 16; // rlwimi r0, r3, 16, 0, 15', 'gc_env.r[0] = (gc_env.r[0] & ~0xFFFF0000) | (rotated & 0xFFFF0000);']
Translated clrrwi. r0 r0 31 to: gc_env.r[0] = gc_env.r[0] & ~((1ULL << 31) - 1); // Clear rightmost 31 bits
Translated bne .L_80006870 to: if (gc_env.cr[0] != 0) goto L_80006870;
Translated bl OSGetTick to: OSGetTick();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated bl OSGetTick to: OSGetTick();
Processing opcode: subf, operands: ['r0', 'r30', 'r3']
Translated subf r0 r30 r3 to: ['gc_env.r[0] = gc_env.r[3] - gc_env.r[30]; // subf r0, r30, r3']
Translated cmpwi r0 0x2c to: gc_env.cr[0] = (gc_env.r[0] == 0x2c) ? 0 : (gc_env.r[0] < 0x2c ? -1 : 1); // Compare with immediate
Translated blt .L_8000688C to: ['if (gc_env.cr[0] & 0x8) goto L_8000688C; // blt .L_8000688C']
Processing opcode: lhz, operands: ['r0', '0x0(r31)']
Translated lhz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r0, 0x0(r31)']
Translated ori r0 r0 0x1 to: ['gc_env.r[0] |= 1; // ori r0, r0, 0x1']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: lhz, operands: ['r0', '0x0(r31)']
Translated lhz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r0, 0x0(r31)']
Translated b .L_800068B4 to: goto L_800068B4;
Processing opcode: lhz, operands: ['r0', '0x0(r31)']
Translated lhz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r0, 0x0(r31)']
Translated clrlwi. r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Translated bne .L_800068B0 to: if (gc_env.cr[0] != 0) goto L_800068B0;
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: lwz, operands: ['r30', '0x8(r1)']
Translated lwz r30 0x8(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r30, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated mfspr r3 HID0 to: ['gc_env.r[3] = gc_env.hid0; // mfspr r3, HID0']
Translated ori r3 r3 0x4000 to: ['gc_env.r[3] |= 16384; // ori r3, r3, 0x4000']
Translated mtspr HID0 r3 to: ['gc_env.hid0 = gc_env.r[3]; // mtspr HID0, r3']
Translated blr  to: return;
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated blelr  to: ['if (gc_env.cr[0] & (0x8 | 0x2)) return; // blelr']
Translated clrlwi. r5 r3 27 to: ['gc_env.r[5] = gc_env.r[3] & 0x1F; // clrlwi r5, r3, 27']
Translated beq .L_800068FC to: if (gc_env.cr[0] == 0) goto L_800068FC;
Processing opcode: addi, operands: ['r4', 'r4', '0x20']
Translated addi r4 r4 0x20 to: ['gc_env.r[4] += 32; // addi r4, r4, 0x20']
Processing opcode: addi, operands: ['r4', 'r4', '0x1f']
Translated addi r4 r4 0x1f to: ['gc_env.r[4] += 31; // addi r4, r4, 0x1f']
Translated srwi r4 r4 5 to: ['gc_env.r[4] = gc_env.r[4] >> 5; // srwi r4, r4, 5']
Translated mtctr r4 to: gc_env.ctr = gc_env.r[4]; // Move to count register
Translated dcbi r0 r3 to: // dcbi: Data cache block invalidate (no-op in this context)
Processing opcode: addi, operands: ['r3', 'r3', '0x20']
Translated addi r3 r3 0x20 to: ['gc_env.r[3] += 32; // addi r3, r3, 0x20']
Translated bdnz .L_80006908 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80006908;']
Translated blr  to: return;
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated blelr  to: ['if (gc_env.cr[0] & (0x8 | 0x2)) return; // blelr']
Translated clrlwi. r5 r3 27 to: ['gc_env.r[5] = gc_env.r[3] & 0x1F; // clrlwi r5, r3, 27']
Translated beq .L_8000692C to: if (gc_env.cr[0] == 0) goto L_8000692C;
Processing opcode: addi, operands: ['r4', 'r4', '0x20']
Translated addi r4 r4 0x20 to: ['gc_env.r[4] += 32; // addi r4, r4, 0x20']
Processing opcode: addi, operands: ['r4', 'r4', '0x1f']
Translated addi r4 r4 0x1f to: ['gc_env.r[4] += 31; // addi r4, r4, 0x1f']
Translated srwi r4 r4 5 to: ['gc_env.r[4] = gc_env.r[4] >> 5; // srwi r4, r4, 5']
Translated mtctr r4 to: gc_env.ctr = gc_env.r[4]; // Move to count register
Translated dcbf r0 r3 to: // dcbf: Data cache block flush (no-op in this context)
Processing opcode: addi, operands: ['r3', 'r3', '0x20']
Translated addi r3 r3 0x20 to: ['gc_env.r[3] += 32; // addi r3, r3, 0x20']
Translated bdnz .L_80006938 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80006938;']
Translated sc  to: ['// sc: system call (not implemented)']
Translated blr  to: return;
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated blelr  to: ['if (gc_env.cr[0] & (0x8 | 0x2)) return; // blelr']
Translated clrlwi. r5 r3 27 to: ['gc_env.r[5] = gc_env.r[3] & 0x1F; // clrlwi r5, r3, 27']
Translated beq .L_80006960 to: if (gc_env.cr[0] == 0) goto L_80006960;
Processing opcode: addi, operands: ['r4', 'r4', '0x20']
Translated addi r4 r4 0x20 to: ['gc_env.r[4] += 32; // addi r4, r4, 0x20']
Processing opcode: addi, operands: ['r4', 'r4', '0x1f']
Translated addi r4 r4 0x1f to: ['gc_env.r[4] += 31; // addi r4, r4, 0x1f']
Translated srwi r4 r4 5 to: ['gc_env.r[4] = gc_env.r[4] >> 5; // srwi r4, r4, 5']
Translated mtctr r4 to: gc_env.ctr = gc_env.r[4]; // Move to count register
Translated dcbst r0 r3 to: // dcbst: Data cache block store (no-op in this context)
Processing opcode: addi, operands: ['r3', 'r3', '0x20']
Translated addi r3 r3 0x20 to: ['gc_env.r[3] += 32; // addi r3, r3, 0x20']
Translated bdnz .L_8000696C to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8000696C;']
Translated sc  to: ['// sc: system call (not implemented)']
Translated blr  to: return;
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated blelr  to: ['if (gc_env.cr[0] & (0x8 | 0x2)) return; // blelr']
Translated clrlwi. r5 r3 27 to: ['gc_env.r[5] = gc_env.r[3] & 0x1F; // clrlwi r5, r3, 27']
Translated beq .L_80006994 to: if (gc_env.cr[0] == 0) goto L_80006994;
Processing opcode: addi, operands: ['r4', 'r4', '0x20']
Translated addi r4 r4 0x20 to: ['gc_env.r[4] += 32; // addi r4, r4, 0x20']
Processing opcode: addi, operands: ['r4', 'r4', '0x1f']
Translated addi r4 r4 0x1f to: ['gc_env.r[4] += 31; // addi r4, r4, 0x1f']
Translated srwi r4 r4 5 to: ['gc_env.r[4] = gc_env.r[4] >> 5; // srwi r4, r4, 5']
Translated mtctr r4 to: gc_env.ctr = gc_env.r[4]; // Move to count register
Translated dcbf r0 r3 to: // dcbf: Data cache block flush (no-op in this context)
Processing opcode: addi, operands: ['r3', 'r3', '0x20']
Translated addi r3 r3 0x20 to: ['gc_env.r[3] += 32; // addi r3, r3, 0x20']
Translated bdnz .L_800069A0 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_800069A0;']
Translated blr  to: return;
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated blelr  to: ['if (gc_env.cr[0] & (0x8 | 0x2)) return; // blelr']
Translated clrlwi. r5 r3 27 to: ['gc_env.r[5] = gc_env.r[3] & 0x1F; // clrlwi r5, r3, 27']
Translated beq .L_800069C4 to: if (gc_env.cr[0] == 0) goto L_800069C4;
Processing opcode: addi, operands: ['r4', 'r4', '0x20']
Translated addi r4 r4 0x20 to: ['gc_env.r[4] += 32; // addi r4, r4, 0x20']
Processing opcode: addi, operands: ['r4', 'r4', '0x1f']
Translated addi r4 r4 0x1f to: ['gc_env.r[4] += 31; // addi r4, r4, 0x1f']
Translated srwi r4 r4 5 to: ['gc_env.r[4] = gc_env.r[4] >> 5; // srwi r4, r4, 5']
Translated mtctr r4 to: gc_env.ctr = gc_env.r[4]; // Move to count register
Translated icbi r0 r3 to: // icbi: Instruction cache block invalidate (no-op in this context)
Processing opcode: addi, operands: ['r3', 'r3', '0x20']
Translated addi r3 r3 0x20 to: ['gc_env.r[3] += 32; // addi r3, r3, 0x20']
Translated bdnz .L_800069D0 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_800069D0;']
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated blr  to: return;
Translated mfspr r3 HID0 to: ['gc_env.r[3] = gc_env.hid0; // mfspr r3, HID0']
Translated ori r3 r3 0x800 to: ['gc_env.r[3] |= 2048; // ori r3, r3, 0x800']
Translated mtspr HID0 r3 to: ['gc_env.hid0 = gc_env.r[3]; // mtspr HID0, r3']
Translated blr  to: return;
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated mfspr r3 HID0 to: ['gc_env.r[3] = gc_env.hid0; // mfspr r3, HID0']
Translated ori r3 r3 0x8000 to: ['gc_env.r[3] |= 32768; // ori r3, r3, 0x8000']
Translated mtspr HID0 r3 to: ['gc_env.hid0 = gc_env.r[3]; // mtspr HID0, r3']
Translated blr  to: return;
Translated lis r3 0xe000 to: ['gc_env.r[3] = -8192 << 16; // lis r3, 0xe000']
Processing opcode: li, operands: ['r4', '0x200']
Translated li r4 0x200 to: ['gc_env.r[4] = 0x200; // li r4, 0x200']
Translated mtctr r4 to: gc_env.ctr = gc_env.r[4]; // Move to count register
Translated dcbi r0 r3 to: // dcbi: Data cache block invalidate (no-op in this context)
Processing opcode: addi, operands: ['r3', 'r3', '0x20']
Translated addi r3 r3 0x20 to: ['gc_env.r[3] += 32; // addi r3, r3, 0x20']
Translated bdnz .L_80006A18 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80006A18;']
Translated mfspr r4 HID2 to: ['gc_env.r[4] = gc_env.hid2; // mfspr r4, HID2']
Translated rlwinm r4 r4 0 4 2 to: ['gc_env.r[4] = (gc_env.r[4] << 0) & -0x10000001; // rlwinm r4, r4, 0, 4, 2']
Translated mtspr HID2 r4 to: ['gc_env.hid2 = gc_env.r[4]; // mtspr HID2, r4']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated bl PPCMfl2cr to: PPCMfl2cr();
Translated clrlwi r3 r3 1 to: ['gc_env.r[3] = gc_env.r[3] & 0x7FFFFFFF; // clrlwi r3, r3, 1']
Translated bl PPCMtl2cr to: PPCMtl2cr();
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated bl PPCMfl2cr to: PPCMfl2cr();
Translated oris r3 r3 0x20 to: ['gc_env.r[3] = gc_env.r[3] | 0x200000; // oris r3, r3, 0x20']
Translated bl PPCMtl2cr to: PPCMtl2cr();
Translated b .L_80006A68 to: goto L_80006A68;
Translated b .L_80006A6C to: goto L_80006A6C;
Translated bl PPCMfl2cr to: PPCMfl2cr();
Translated clrlwi r0 r3 31 to: ['gc_env.r[0] = gc_env.r[3] & 0x1; // clrlwi r0, r3, 31']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80006A6C to: if (gc_env.cr[0] != 0) goto L_80006A6C;
Translated bl PPCMfl2cr to: PPCMfl2cr();
Translated rlwinm r3 r3 0 11 9 to: ['gc_env.r[3] = (gc_env.r[3] << 0) & -0x200001; // rlwinm r3, r3, 0, 11, 9']
Translated bl PPCMtl2cr to: PPCMtl2cr();
Translated b .L_80006A8C to: goto L_80006A8C;
Translated lis r3 "@69_8001A920"@ha to: ['gc_env.r[3] = ((uint32_t)&_69_8001A920 >> 16) & 0xFFFF; // lis r3, "@69_8001A920"@ha']
Processing opcode: addi, operands: ['r31', 'r3', '"@69_8001A920"@l']
Translated addi r31 r3 "@69_8001A920"@l to: ['gc_env.r[31] = (uint32_t)&_69_8001A920; // lis + addi @69_8001A920 (completing pattern)']
Translated b .L_80006A98 to: goto L_80006A98;
Translated b .L_80006AA8 to: goto L_80006AA8;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl DBPrintf to: DBPrintf();
Translated bl PPCMfl2cr to: PPCMfl2cr();
Translated clrlwi r0 r3 31 to: ['gc_env.r[0] = gc_env.r[3] & 0x1; // clrlwi r0, r3, 31']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80006A9C to: if (gc_env.cr[0] != 0) goto L_80006A9C;
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x80(r1)']
Translated stwu r1 -0x80(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x80, gc_env.r[1]); // stwu r1, -0x80(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x80;']
Processing opcode: stw, operands: ['r31', '0x7c(r1)']
Translated stw r31 0x7c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x7C, gc_env.r[31]); // stw r31, 0x7C(r1)']
Processing opcode: stw, operands: ['r30', '0x78(r1)']
Translated stw r30 0x78(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x78, gc_env.r[30]); // stw r30, 0x78(r1)']
Processing opcode: stw, operands: ['r29', '0x74(r1)']
Translated stw r29 0x74(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x74, gc_env.r[29]); // stw r29, 0x74(r1)']
Translated bne cr1 .L_80006B08 to: if (gc_env.cr[1] != 0) goto L_80006B08;
Translated stfd f1 0x28(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[1], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x28, temp); // stfd f1, 0x28(r1)']
Translated stfd f2 0x30(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[2], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x30, temp); // stfd f2, 0x30(r1)']
Translated stfd f3 0x38(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[3], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x38, temp); // stfd f3, 0x38(r1)']
Translated stfd f4 0x40(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[4], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x40, temp); // stfd f4, 0x40(r1)']
Translated stfd f5 0x48(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[5], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x48, temp); // stfd f5, 0x48(r1)']
Translated stfd f6 0x50(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[6], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x50, temp); // stfd f6, 0x50(r1)']
Translated stfd f7 0x58(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[7], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x58, temp); // stfd f7, 0x58(r1)']
Translated stfd f8 0x60(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[8], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x60, temp); // stfd f8, 0x60(r1)']
Processing opcode: stw, operands: ['r3', '0x8(r1)']
Translated stw r3 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[3]); // stw r3, 0x8(r1)']
Processing opcode: stw, operands: ['r4', '0xc(r1)']
Translated stw r4 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[4]); // stw r4, 0xC(r1)']
Processing opcode: stw, operands: ['r5', '0x10(r1)']
Translated stw r5 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[5]); // stw r5, 0x10(r1)']
Processing opcode: stw, operands: ['r6', '0x14(r1)']
Translated stw r6 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[6]); // stw r6, 0x14(r1)']
Processing opcode: stw, operands: ['r7', '0x18(r1)']
Translated stw r7 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[7]); // stw r7, 0x18(r1)']
Processing opcode: stw, operands: ['r8', '0x1c(r1)']
Translated stw r8 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[8]); // stw r8, 0x1C(r1)']
Processing opcode: stw, operands: ['r9', '0x20(r1)']
Translated stw r9 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[9]); // stw r9, 0x20(r1)']
Processing opcode: stw, operands: ['r10', '0x24(r1)']
Translated stw r10 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[10]); // stw r10, 0x24(r1)']
Translated mr r29 r4 to: gc_env.r[29] = gc_env.r[4]; // Move register
Translated lis r3 "@69_8001A920"@ha to: ['gc_env.r[3] = ((uint32_t)&_69_8001A920 >> 16) & 0xFFFF; // lis r3, "@69_8001A920"@ha']
Processing opcode: addi, operands: ['r31', 'r3', '"@69_8001A920"@l']
Translated addi r31 r3 "@69_8001A920"@l to: ['gc_env.r[31] = (uint32_t)&_69_8001A920; // lis + addi @69_8001A920 (completing pattern)']
Translated bl PPCMfhid2 to: PPCMfhid2();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: addi, operands: ['r3', 'r31', '0x2c']
Translated addi r3 r31 0x2c to: ['gc_env.r[3] = gc_env.r[31] + 44; // addi r3, r31, 0x2c']
Translated bl OSReport to: OSReport();
Processing opcode: lwz, operands: ['r5', '0x19c(r29)']
Translated lwz r5 0x19c(r29) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x19C); // lwz r5, 0x19C(r29)']
Translated mr r4 r30 to: gc_env.r[4] = gc_env.r[30]; // Move register
Processing opcode: addi, operands: ['r3', 'r31', '0x44']
Translated addi r3 r31 0x44 to: ['gc_env.r[3] = gc_env.r[31] + 68; // addi r3, r31, 0x44']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated rlwinm r0 r30 0 8 11 to: ['gc_env.r[0] = (gc_env.r[30] << 0) & 0xF00000; // rlwinm r0, r30, 0, 8, 11']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80006B78 to: if (gc_env.cr[0] == 0) goto L_80006B78;
Processing opcode: lwz, operands: ['r0', '0x19c(r29)']
Translated lwz r0 0x19c(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x19C); // lwz r0, 0x19C(r29)']
Translated rlwinm r0 r0 0 10 10 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x200000; // rlwinm r0, r0, 0, 10, 10']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80006B90 to: if (gc_env.cr[0] != 0) goto L_80006B90;
Processing opcode: addi, operands: ['r3', 'r31', '0x60']
Translated addi r3 r31 0x60 to: ['gc_env.r[3] = gc_env.r[31] + 96; // addi r3, r31, 0x60']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated bl OSDumpContext to: OSDumpContext();
Translated bl PPCHalt to: PPCHalt();
Processing opcode: addi, operands: ['r3', 'r31', '0x90']
Translated addi r3 r31 0x90 to: ['gc_env.r[3] = gc_env.r[31] + 144; // addi r3, r31, 0x90']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: addi, operands: ['r3', 'r31', '0xcc']
Translated addi r3 r31 0xcc to: ['gc_env.r[3] = gc_env.r[31] + 204; // addi r3, r31, 0xcc']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated rlwinm r0 r30 0 8 8 to: ['gc_env.r[0] = (gc_env.r[30] << 0) & 0x800000; // rlwinm r0, r30, 0, 8, 8']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80006BC0 to: if (gc_env.cr[0] == 0) goto L_80006BC0;
Processing opcode: addi, operands: ['r3', 'r31', '0x104']
Translated addi r3 r31 0x104 to: ['gc_env.r[3] = gc_env.r[31] + 260; // addi r3, r31, 0x104']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated rlwinm r0 r30 0 9 9 to: ['gc_env.r[0] = (gc_env.r[30] << 0) & 0x400000; // rlwinm r0, r30, 0, 9, 9']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80006BD8 to: if (gc_env.cr[0] == 0) goto L_80006BD8;
Processing opcode: addi, operands: ['r3', 'r31', '0x144']
Translated addi r3 r31 0x144 to: ['gc_env.r[3] = gc_env.r[31] + 324; // addi r3, r31, 0x144']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated rlwinm r0 r30 0 10 10 to: ['gc_env.r[0] = (gc_env.r[30] << 0) & 0x200000; // rlwinm r0, r30, 0, 10, 10']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80006BF0 to: if (gc_env.cr[0] == 0) goto L_80006BF0;
Processing opcode: addi, operands: ['r3', 'r31', '0x170']
Translated addi r3 r31 0x170 to: ['gc_env.r[3] = gc_env.r[31] + 368; // addi r3, r31, 0x170']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated rlwinm r0 r30 0 11 11 to: ['gc_env.r[0] = (gc_env.r[30] << 0) & 0x100000; // rlwinm r0, r30, 0, 11, 11']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80006C08 to: if (gc_env.cr[0] == 0) goto L_80006C08;
Processing opcode: addi, operands: ['r3', 'r31', '0x190']
Translated addi r3 r31 0x190 to: ['gc_env.r[3] = gc_env.r[31] + 400; // addi r3, r31, 0x190']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl PPCMthid2 to: PPCMthid2();
Processing opcode: lwz, operands: ['r0', '0x84(r1)']
Translated lwz r0 0x84(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x84); // lwz r0, 0x84(r1)']
Processing opcode: lwz, operands: ['r31', '0x7c(r1)']
Translated lwz r31 0x7c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x7C); // lwz r31, 0x7C(r1)']
Processing opcode: lwz, operands: ['r30', '0x78(r1)']
Translated lwz r30 0x78(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x78); // lwz r30, 0x78(r1)']
Processing opcode: lwz, operands: ['r29', '0x74(r1)']
Translated lwz r29 0x74(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x74); // lwz r29, 0x74(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x80']
Translated addi r1 r1 0x80 to: ['gc_env.r[1] += 128; // addi r1, r1, 0x80']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: stw, operands: ['r30', '0x8(r1)']
Translated stw r30 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[30]); // stw r30, 0x8(r1)']
Translated lis r3 "@69_8001A920"@ha to: ['gc_env.r[3] = ((uint32_t)&_69_8001A920 >> 16) & 0xFFFF; // lis r3, "@69_8001A920"@ha']
Processing opcode: addi, operands: ['r31', 'r3', '"@69_8001A920"@l']
Translated addi r31 r3 "@69_8001A920"@l to: ['gc_env.r[31] = (uint32_t)&_69_8001A920; // lis + addi @69_8001A920 (completing pattern)']
Translated bl PPCMfhid0 to: PPCMfhid0();
Translated rlwinm r0 r3 0 16 16 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x8000; // rlwinm r0, r3, 0, 16, 16']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80006C68 to: if (gc_env.cr[0] != 0) goto L_80006C68;
Translated bl ICEnable to: ICEnable();
Processing opcode: addi, operands: ['r3', 'r31', '0x1ac']
Translated addi r3 r31 0x1ac to: ['gc_env.r[3] = gc_env.r[31] + 428; // addi r3, r31, 0x1ac']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl DBPrintf to: DBPrintf();
Translated bl PPCMfhid0 to: PPCMfhid0();
Translated rlwinm r0 r3 0 17 17 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x4000; // rlwinm r0, r3, 0, 17, 17']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80006C88 to: if (gc_env.cr[0] != 0) goto L_80006C88;
Translated bl DCEnable to: DCEnable();
Processing opcode: addi, operands: ['r3', 'r31', '0x1c8']
Translated addi r3 r31 0x1c8 to: ['gc_env.r[3] = gc_env.r[31] + 456; // addi r3, r31, 0x1c8']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl DBPrintf to: DBPrintf();
Translated bl PPCMfl2cr to: PPCMfl2cr();
Translated clrrwi r0 r3 31 to: gc_env.r[0] = gc_env.r[3] & ~((1ULL << 31) - 1); // Clear rightmost 31 bits
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80006CEC to: if (gc_env.cr[0] != 0) goto L_80006CEC;
Translated bl PPCMfmsr to: PPCMfmsr();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated sync  to: // sync: Memory barrier (no-op in this context)
Processing opcode: li, operands: ['r3', '0x30']
Translated li r3 0x30 to: ['gc_env.r[3] = 0x30; // li r3, 0x30']
Translated bl PPCMtmsr to: PPCMtmsr();
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated bl PPCMfl2cr to: PPCMfl2cr();
Translated clrlwi r3 r3 1 to: ['gc_env.r[3] = gc_env.r[3] & 0x7FFFFFFF; // clrlwi r3, r3, 1']
Translated bl PPCMtl2cr to: PPCMtl2cr();
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated bl L2GlobalInvalidate to: L2GlobalInvalidate();
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl PPCMtmsr to: PPCMtmsr();
Translated bl PPCMfl2cr to: PPCMfl2cr();
Translated oris r0 r3 0x8000 to: ['gc_env.r[0] = gc_env.r[3] | 0x80000000; // oris r0, r3, 0x8000']
Translated rlwinm r3 r0 0 11 9 to: ['gc_env.r[3] = (gc_env.r[0] << 0) & -0x200001; // rlwinm r3, r0, 0, 11, 9']
Translated bl PPCMtl2cr to: PPCMtl2cr();
Processing opcode: addi, operands: ['r3', 'r31', '0x1e4']
Translated addi r3 r31 0x1e4 to: ['gc_env.r[3] = gc_env.r[31] + 484; // addi r3, r31, 0x1e4']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl DBPrintf to: DBPrintf();
Translated lis r3 DMAErrorHandler@ha to: ['gc_env.r[3] = ((uint32_t)&DMAErrorHandler >> 16) & 0xFFFF; // lis r3, DMAErrorHandler@ha']
Processing opcode: addi, operands: ['r4', 'r3', 'DMAErrorHandler@l']
Translated addi r4 r3 DMAErrorHandler@l to: ['gc_env.r[4] = (uint32_t)&DMAErrorHandler; // lis + addi DMAErrorHandler (completing pattern)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated bl OSSetErrorHandler to: OSSetErrorHandler();
Processing opcode: addi, operands: ['r3', 'r31', '0x1fc']
Translated addi r3 r31 0x1fc to: ['gc_env.r[3] = gc_env.r[31] + 508; // addi r3, r31, 0x1fc']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl DBPrintf to: DBPrintf();
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: lwz, operands: ['r30', '0x8(r1)']
Translated lwz r30 0x8(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r30, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: lhz, operands: ['r5', '0x1a2(r4)']
Translated lhz r5 0x1a2(r4) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[4] + 0x1a2); // lhz r5, 0x1a2(r4)']
Translated clrlwi. r5 r5 31 to: ['gc_env.r[5] = gc_env.r[5] & 0x1; // clrlwi r5, r5, 31']
Translated beq .L_80006E40 to: if (gc_env.cr[0] == 0) goto L_80006E40;
Error in handler for lfd: name 'format_hex' is not defined
Translated mtfsf 255 f0 to: ['gc_env.fpscr = (uint32_t)gc_env.f[0]; // mtfsf 255, f0']
Translated mfspr r5 HID2 to: ['gc_env.r[5] = gc_env.hid2; // mfspr r5, HID2']
Translated extrwi. r5 r5 1 2 to: ['gc_env.r[5] = (gc_env.r[5] >> 29) & 0x1; // extrwi r5, r5, 1, 2', 'gc_env.cr[0] = (gc_env.r[5] == 0) ? 0x2 : ((int32_t)gc_env.r[5] < 0 ? 0x8 : 0x4);']
Translated beq .L_80006DC0 to: if (gc_env.cr[0] == 0) goto L_80006DC0;
Translated psq_l f0 0x1c8(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x1C8); // psq_l f0, 0x1C8(r4)', 'gc_env.f[0] = *(float*)&temp;']
Translated psq_l f1 0x1d0(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x1D0); // psq_l f1, 0x1D0(r4)', 'gc_env.f[1] = *(float*)&temp;']
Translated psq_l f2 0x1d8(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x1D8); // psq_l f2, 0x1D8(r4)', 'gc_env.f[2] = *(float*)&temp;']
Translated psq_l f3 0x1e0(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x1E0); // psq_l f3, 0x1E0(r4)', 'gc_env.f[3] = *(float*)&temp;']
Translated psq_l f4 0x1e8(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x1E8); // psq_l f4, 0x1E8(r4)', 'gc_env.f[4] = *(float*)&temp;']
Translated psq_l f5 0x1f0(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x1F0); // psq_l f5, 0x1F0(r4)', 'gc_env.f[5] = *(float*)&temp;']
Translated psq_l f6 0x1f8(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x1F8); // psq_l f6, 0x1F8(r4)', 'gc_env.f[6] = *(float*)&temp;']
Translated psq_l f7 0x200(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x200); // psq_l f7, 0x200(r4)', 'gc_env.f[7] = *(float*)&temp;']
Translated psq_l f8 0x208(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x208); // psq_l f8, 0x208(r4)', 'gc_env.f[8] = *(float*)&temp;']
Translated psq_l f9 0x210(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x210); // psq_l f9, 0x210(r4)', 'gc_env.f[9] = *(float*)&temp;']
Translated psq_l f10 0x218(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x218); // psq_l f10, 0x218(r4)', 'gc_env.f[10] = *(float*)&temp;']
Translated psq_l f11 0x220(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x220); // psq_l f11, 0x220(r4)', 'gc_env.f[11] = *(float*)&temp;']
Translated psq_l f12 0x228(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x228); // psq_l f12, 0x228(r4)', 'gc_env.f[12] = *(float*)&temp;']
Translated psq_l f13 0x230(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x230); // psq_l f13, 0x230(r4)', 'gc_env.f[13] = *(float*)&temp;']
Translated psq_l f14 0x238(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x238); // psq_l f14, 0x238(r4)', 'gc_env.f[14] = *(float*)&temp;']
Translated psq_l f15 0x240(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x240); // psq_l f15, 0x240(r4)', 'gc_env.f[15] = *(float*)&temp;']
Translated psq_l f16 0x248(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x248); // psq_l f16, 0x248(r4)', 'gc_env.f[16] = *(float*)&temp;']
Translated psq_l f17 0x250(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x250); // psq_l f17, 0x250(r4)', 'gc_env.f[17] = *(float*)&temp;']
Translated psq_l f18 0x258(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x258); // psq_l f18, 0x258(r4)', 'gc_env.f[18] = *(float*)&temp;']
Translated psq_l f19 0x260(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x260); // psq_l f19, 0x260(r4)', 'gc_env.f[19] = *(float*)&temp;']
Translated psq_l f20 0x268(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x268); // psq_l f20, 0x268(r4)', 'gc_env.f[20] = *(float*)&temp;']
Translated psq_l f21 0x270(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x270); // psq_l f21, 0x270(r4)', 'gc_env.f[21] = *(float*)&temp;']
Translated psq_l f22 0x278(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x278); // psq_l f22, 0x278(r4)', 'gc_env.f[22] = *(float*)&temp;']
Translated psq_l f23 0x280(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x280); // psq_l f23, 0x280(r4)', 'gc_env.f[23] = *(float*)&temp;']
Translated psq_l f24 0x288(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x288); // psq_l f24, 0x288(r4)', 'gc_env.f[24] = *(float*)&temp;']
Translated psq_l f25 0x290(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x290); // psq_l f25, 0x290(r4)', 'gc_env.f[25] = *(float*)&temp;']
Translated psq_l f26 0x298(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x298); // psq_l f26, 0x298(r4)', 'gc_env.f[26] = *(float*)&temp;']
Translated psq_l f27 0x2a0(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x2A0); // psq_l f27, 0x2A0(r4)', 'gc_env.f[27] = *(float*)&temp;']
Translated psq_l f28 0x2a8(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x2A8); // psq_l f28, 0x2A8(r4)', 'gc_env.f[28] = *(float*)&temp;']
Translated psq_l f29 0x2b0(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x2B0); // psq_l f29, 0x2B0(r4)', 'gc_env.f[29] = *(float*)&temp;']
Translated psq_l f30 0x2b8(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x2B8); // psq_l f30, 0x2B8(r4)', 'gc_env.f[30] = *(float*)&temp;']
Translated psq_l f31 0x2c0(r4) 0 qr0 to: ['uint32_t temp = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x2C0); // psq_l f31, 0x2C0(r4)', 'gc_env.f[31] = *(float*)&temp;']
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Translated blr  to: return;
Processing opcode: lhz, operands: ['r3', '0x1a2(r5)']
Translated lhz r3 0x1a2(r5) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[5] + 0x1a2); // lhz r3, 0x1a2(r5)']
Translated ori r3 r3 0x1 to: ['gc_env.r[3] |= 1; // ori r3, r3, 0x1']
Processing opcode: sth, operands: ['r3', '0x1a2(r5)']
Translated sth r3 0x1a2(r5) to: ['gc_mem_write16(gc_env.ram, gc_env.r[5] + 0x1A2, gc_env.r[3]); // sth r3, 0x1A2(r5)']
Translated stfd f0 0x90(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[0], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x90, temp); // stfd f0, 0x90(r5)']
Translated stfd f1 0x98(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[1], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x98, temp); // stfd f1, 0x98(r5)']
Translated stfd f2 0xa0(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[2], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0xA0, temp); // stfd f2, 0xA0(r5)']
Translated stfd f3 0xa8(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[3], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0xA8, temp); // stfd f3, 0xA8(r5)']
Translated stfd f4 0xb0(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[4], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0xB0, temp); // stfd f4, 0xB0(r5)']
Translated stfd f5 0xb8(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[5], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0xB8, temp); // stfd f5, 0xB8(r5)']
Translated stfd f6 0xc0(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[6], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0xC0, temp); // stfd f6, 0xC0(r5)']
Translated stfd f7 0xc8(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[7], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0xC8, temp); // stfd f7, 0xC8(r5)']
Translated stfd f8 0xd0(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[8], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0xD0, temp); // stfd f8, 0xD0(r5)']
Translated stfd f9 0xd8(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[9], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0xD8, temp); // stfd f9, 0xD8(r5)']
Translated stfd f10 0xe0(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[10], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0xE0, temp); // stfd f10, 0xE0(r5)']
Translated stfd f11 0xe8(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[11], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0xE8, temp); // stfd f11, 0xE8(r5)']
Translated stfd f12 0xf0(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[12], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0xF0, temp); // stfd f12, 0xF0(r5)']
Translated stfd f13 0xf8(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[13], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0xF8, temp); // stfd f13, 0xF8(r5)']
Translated stfd f14 0x100(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[14], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x100, temp); // stfd f14, 0x100(r5)']
Translated stfd f15 0x108(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[15], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x108, temp); // stfd f15, 0x108(r5)']
Translated stfd f16 0x110(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[16], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x110, temp); // stfd f16, 0x110(r5)']
Translated stfd f17 0x118(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[17], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x118, temp); // stfd f17, 0x118(r5)']
Translated stfd f18 0x120(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[18], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x120, temp); // stfd f18, 0x120(r5)']
Translated stfd f19 0x128(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[19], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x128, temp); // stfd f19, 0x128(r5)']
Translated stfd f20 0x130(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[20], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x130, temp); // stfd f20, 0x130(r5)']
Translated stfd f21 0x138(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[21], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x138, temp); // stfd f21, 0x138(r5)']
Translated stfd f22 0x140(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[22], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x140, temp); // stfd f22, 0x140(r5)']
Translated stfd f23 0x148(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[23], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x148, temp); // stfd f23, 0x148(r5)']
Translated stfd f24 0x150(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[24], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x150, temp); // stfd f24, 0x150(r5)']
Translated stfd f25 0x158(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[25], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x158, temp); // stfd f25, 0x158(r5)']
Translated stfd f26 0x160(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[26], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x160, temp); // stfd f26, 0x160(r5)']
Translated stfd f27 0x168(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[27], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x168, temp); // stfd f27, 0x168(r5)']
Translated stfd f28 0x170(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[28], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x170, temp); // stfd f28, 0x170(r5)']
Translated stfd f29 0x178(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[29], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x178, temp); // stfd f29, 0x178(r5)']
Translated stfd f30 0x180(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[30], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x180, temp); // stfd f30, 0x180(r5)']
Translated stfd f31 0x188(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[31], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x188, temp); // stfd f31, 0x188(r5)']
Translated mffs f0 to: ['gc_env.f[0] = (double)gc_env.fpscr; // mffs f0']
Translated stfd f0 0x190(r5) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[0], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[5] + 0x190, temp); // stfd f0, 0x190(r5)']
Error in handler for lfd: name 'format_hex' is not defined
Translated mfspr r3 HID2 to: ['gc_env.r[3] = gc_env.hid2; // mfspr r3, HID2']
Translated extrwi. r3 r3 1 2 to: ['gc_env.r[3] = (gc_env.r[3] >> 29) & 0x1; // extrwi r3, r3, 1, 2', 'gc_env.cr[0] = (gc_env.r[3] == 0) ? 0x2 : ((int32_t)gc_env.r[3] < 0 ? 0x8 : 0x4);']
Translated beq .L_80006F68 to: if (gc_env.cr[0] == 0) goto L_80006F68;
Translated psq_st f0 0x1c8(r5) 0 qr0 to: ['float temp = (float)gc_env.f[0]; // psq_st f0, 0x1C8(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x1C8, *(uint32_t*)&temp);']
Translated psq_st f1 0x1d0(r5) 0 qr0 to: ['float temp = (float)gc_env.f[1]; // psq_st f1, 0x1D0(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x1D0, *(uint32_t*)&temp);']
Translated psq_st f2 0x1d8(r5) 0 qr0 to: ['float temp = (float)gc_env.f[2]; // psq_st f2, 0x1D8(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x1D8, *(uint32_t*)&temp);']
Translated psq_st f3 0x1e0(r5) 0 qr0 to: ['float temp = (float)gc_env.f[3]; // psq_st f3, 0x1E0(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x1E0, *(uint32_t*)&temp);']
Translated psq_st f4 0x1e8(r5) 0 qr0 to: ['float temp = (float)gc_env.f[4]; // psq_st f4, 0x1E8(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x1E8, *(uint32_t*)&temp);']
Translated psq_st f5 0x1f0(r5) 0 qr0 to: ['float temp = (float)gc_env.f[5]; // psq_st f5, 0x1F0(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x1F0, *(uint32_t*)&temp);']
Translated psq_st f6 0x1f8(r5) 0 qr0 to: ['float temp = (float)gc_env.f[6]; // psq_st f6, 0x1F8(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x1F8, *(uint32_t*)&temp);']
Translated psq_st f7 0x200(r5) 0 qr0 to: ['float temp = (float)gc_env.f[7]; // psq_st f7, 0x200(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x200, *(uint32_t*)&temp);']
Translated psq_st f8 0x208(r5) 0 qr0 to: ['float temp = (float)gc_env.f[8]; // psq_st f8, 0x208(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x208, *(uint32_t*)&temp);']
Translated psq_st f9 0x210(r5) 0 qr0 to: ['float temp = (float)gc_env.f[9]; // psq_st f9, 0x210(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x210, *(uint32_t*)&temp);']
Translated psq_st f10 0x218(r5) 0 qr0 to: ['float temp = (float)gc_env.f[10]; // psq_st f10, 0x218(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x218, *(uint32_t*)&temp);']
Translated psq_st f11 0x220(r5) 0 qr0 to: ['float temp = (float)gc_env.f[11]; // psq_st f11, 0x220(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x220, *(uint32_t*)&temp);']
Translated psq_st f12 0x228(r5) 0 qr0 to: ['float temp = (float)gc_env.f[12]; // psq_st f12, 0x228(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x228, *(uint32_t*)&temp);']
Translated psq_st f13 0x230(r5) 0 qr0 to: ['float temp = (float)gc_env.f[13]; // psq_st f13, 0x230(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x230, *(uint32_t*)&temp);']
Translated psq_st f14 0x238(r5) 0 qr0 to: ['float temp = (float)gc_env.f[14]; // psq_st f14, 0x238(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x238, *(uint32_t*)&temp);']
Translated psq_st f15 0x240(r5) 0 qr0 to: ['float temp = (float)gc_env.f[15]; // psq_st f15, 0x240(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x240, *(uint32_t*)&temp);']
Translated psq_st f16 0x248(r5) 0 qr0 to: ['float temp = (float)gc_env.f[16]; // psq_st f16, 0x248(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x248, *(uint32_t*)&temp);']
Translated psq_st f17 0x250(r5) 0 qr0 to: ['float temp = (float)gc_env.f[17]; // psq_st f17, 0x250(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x250, *(uint32_t*)&temp);']
Translated psq_st f18 0x258(r5) 0 qr0 to: ['float temp = (float)gc_env.f[18]; // psq_st f18, 0x258(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x258, *(uint32_t*)&temp);']
Translated psq_st f19 0x260(r5) 0 qr0 to: ['float temp = (float)gc_env.f[19]; // psq_st f19, 0x260(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x260, *(uint32_t*)&temp);']
Translated psq_st f20 0x268(r5) 0 qr0 to: ['float temp = (float)gc_env.f[20]; // psq_st f20, 0x268(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x268, *(uint32_t*)&temp);']
Translated psq_st f21 0x270(r5) 0 qr0 to: ['float temp = (float)gc_env.f[21]; // psq_st f21, 0x270(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x270, *(uint32_t*)&temp);']
Translated psq_st f22 0x278(r5) 0 qr0 to: ['float temp = (float)gc_env.f[22]; // psq_st f22, 0x278(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x278, *(uint32_t*)&temp);']
Translated psq_st f23 0x280(r5) 0 qr0 to: ['float temp = (float)gc_env.f[23]; // psq_st f23, 0x280(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x280, *(uint32_t*)&temp);']
Translated psq_st f24 0x288(r5) 0 qr0 to: ['float temp = (float)gc_env.f[24]; // psq_st f24, 0x288(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x288, *(uint32_t*)&temp);']
Translated psq_st f25 0x290(r5) 0 qr0 to: ['float temp = (float)gc_env.f[25]; // psq_st f25, 0x290(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x290, *(uint32_t*)&temp);']
Translated psq_st f26 0x298(r5) 0 qr0 to: ['float temp = (float)gc_env.f[26]; // psq_st f26, 0x298(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x298, *(uint32_t*)&temp);']
Translated psq_st f27 0x2a0(r5) 0 qr0 to: ['float temp = (float)gc_env.f[27]; // psq_st f27, 0x2A0(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x2A0, *(uint32_t*)&temp);']
Translated psq_st f28 0x2a8(r5) 0 qr0 to: ['float temp = (float)gc_env.f[28]; // psq_st f28, 0x2A8(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x2A8, *(uint32_t*)&temp);']
Translated psq_st f29 0x2b0(r5) 0 qr0 to: ['float temp = (float)gc_env.f[29]; // psq_st f29, 0x2B0(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x2B0, *(uint32_t*)&temp);']
Translated psq_st f30 0x2b8(r5) 0 qr0 to: ['float temp = (float)gc_env.f[30]; // psq_st f30, 0x2B8(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x2B8, *(uint32_t*)&temp);']
Translated psq_st f31 0x2c0(r5) 0 qr0 to: ['float temp = (float)gc_env.f[31]; // psq_st f31, 0x2C0(r5)', 'gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x2C0, *(uint32_t*)&temp);']
Translated blr  to: return;
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: stw, operands: ['r3', '0xd4(r4)']
Translated stw r3 0xd4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xD4, gc_env.r[3]); // stw r3, 0xD4(r4)']
Translated clrlwi r5 r3 2 to: ['gc_env.r[5] = gc_env.r[3] & 0x3FFFFFFF; // clrlwi r5, r3, 2']
Processing opcode: stw, operands: ['r5', '0xc0(r4)']
Translated stw r5 0xc0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC0, gc_env.r[5]); // stw r5, 0xC0(r4)']
Processing opcode: lwz, operands: ['r5', '0xd8(r4)']
Translated lwz r5 0xd8(r4) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xD8); // lwz r5, 0xD8(r4)']
Translated cmpw r5 r3 to: ['gc_env.cr[0] = (int32_t)gc_env.r[5] < (int32_t)gc_env.r[3] ? 0x8 : ((int32_t)gc_env.r[5] > (int32_t)gc_env.r[3] ? 0x4 : 0x2); // cmpw r5, r3']
Translated bne .L_80006FA4 to: if (gc_env.cr[0] != 0) goto L_80006FA4;
Processing opcode: lwz, operands: ['r6', '0x19c(r3)']
Translated lwz r6 0x19c(r3) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x19C); // lwz r6, 0x19C(r3)']
Translated ori r6 r6 0x2000 to: ['gc_env.r[6] |= 8192; // ori r6, r6, 0x2000']
Processing opcode: stw, operands: ['r6', '0x19c(r3)']
Translated stw r6 0x19c(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x19C, gc_env.r[6]); // stw r6, 0x19C(r3)']
Translated mfmsr r6 to: gc_env.r[6] = gc_env.msr; // Move from machine state register
Translated ori r6 r6 0x2 to: ['gc_env.r[6] |= 2; // ori r6, r6, 0x2']
Translated mtmsr r6 to: gc_env.msr = gc_env.r[6]; // Move to machine state register
Translated blr  to: return;
Processing opcode: lwz, operands: ['r6', '0x19c(r3)']
Translated lwz r6 0x19c(r3) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x19C); // lwz r6, 0x19C(r3)']
Translated rlwinm r6 r6 0 19 17 to: ['gc_env.r[6] = (gc_env.r[6] << 0) & -0x2001; // rlwinm r6, r6, 0, 19, 17']
Processing opcode: stw, operands: ['r6', '0x19c(r3)']
Translated stw r6 0x19c(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x19C, gc_env.r[6]); // stw r6, 0x19C(r3)']
Translated mfmsr r6 to: gc_env.r[6] = gc_env.msr; // Move from machine state register
Translated rlwinm r6 r6 0 19 17 to: ['gc_env.r[6] = (gc_env.r[6] << 0) & -0x2001; // rlwinm r6, r6, 0, 19, 17']
Translated ori r6 r6 0x2 to: ['gc_env.r[6] |= 2; // ori r6, r6, 0x2']
Translated mtmsr r6 to: gc_env.msr = gc_env.r[6]; // Move to machine state register
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated blr  to: return;
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r3', '0xd4(r3)']
Translated lwz r3 0xd4(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xD4); // lwz r3, 0xD4(r3)']
Translated blr  to: return;
Translated stmw r13 0x34(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x34, gc_env.r[13]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x38, gc_env.r[14]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x3C, gc_env.r[15]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x40, gc_env.r[16]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x44, gc_env.r[17]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x48, gc_env.r[18]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4C, gc_env.r[19]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x50, gc_env.r[20]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x54, gc_env.r[21]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x58, gc_env.r[22]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x5C, gc_env.r[23]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x60, gc_env.r[24]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x64, gc_env.r[25]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x68, gc_env.r[26]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x6C, gc_env.r[27]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x70, gc_env.r[28]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x74, gc_env.r[29]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x78, gc_env.r[30]); // stmw r13, 0x34(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x7C, gc_env.r[31]); // stmw r13, 0x34(r3)']
Translated mfspr r0 GQR1 to: ['gc_env.r[0] = gc_env.gqr[1]; // mfspr r0, GQR1']
Processing opcode: stw, operands: ['r0', '0x1a8(r3)']
Translated stw r0 0x1a8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x1A8, gc_env.r[0]); // stw r0, 0x1A8(r3)']
Translated mfspr r0 GQR2 to: ['gc_env.r[0] = gc_env.gqr[2]; // mfspr r0, GQR2']
Processing opcode: stw, operands: ['r0', '0x1ac(r3)']
Translated stw r0 0x1ac(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x1AC, gc_env.r[0]); // stw r0, 0x1AC(r3)']
Translated mfspr r0 GQR3 to: ['gc_env.r[0] = gc_env.gqr[3]; // mfspr r0, GQR3']
Processing opcode: stw, operands: ['r0', '0x1b0(r3)']
Translated stw r0 0x1b0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x1B0, gc_env.r[0]); // stw r0, 0x1B0(r3)']
Translated mfspr r0 GQR4 to: ['gc_env.r[0] = gc_env.gqr[4]; // mfspr r0, GQR4']
Processing opcode: stw, operands: ['r0', '0x1b4(r3)']
Translated stw r0 0x1b4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x1B4, gc_env.r[0]); // stw r0, 0x1B4(r3)']
Translated mfspr r0 GQR5 to: ['gc_env.r[0] = gc_env.gqr[5]; // mfspr r0, GQR5']
Processing opcode: stw, operands: ['r0', '0x1b8(r3)']
Translated stw r0 0x1b8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x1B8, gc_env.r[0]); // stw r0, 0x1B8(r3)']
Translated mfspr r0 GQR6 to: ['gc_env.r[0] = gc_env.gqr[6]; // mfspr r0, GQR6']
Processing opcode: stw, operands: ['r0', '0x1bc(r3)']
Translated stw r0 0x1bc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x1BC, gc_env.r[0]); // stw r0, 0x1BC(r3)']
Translated mfspr r0 GQR7 to: ['gc_env.r[0] = gc_env.gqr[7]; // mfspr r0, GQR7']
Processing opcode: stw, operands: ['r0', '0x1c0(r3)']
Translated stw r0 0x1c0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x1C0, gc_env.r[0]); // stw r0, 0x1C0(r3)']
Translated mfcr r0 to: ['gc_env.r[0] = (gc_env.cr[0] << 28) | (gc_env.cr[1] << 24) | (gc_env.cr[2] << 20) | (gc_env.cr[3] << 16) | (gc_env.cr[4] << 12) | (gc_env.cr[5] << 8) | (gc_env.cr[6] << 4) | (gc_env.cr[7] << 0); // mfcr r0']
Processing opcode: stw, operands: ['r0', '0x80(r3)']
Translated stw r0 0x80(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x80, gc_env.r[0]); // stw r0, 0x80(r3)']
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x84(r3)']
Translated stw r0 0x84(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x84, gc_env.r[0]); // stw r0, 0x84(r3)']
Processing opcode: stw, operands: ['r0', '0x198(r3)']
Translated stw r0 0x198(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x198, gc_env.r[0]); // stw r0, 0x198(r3)']
Translated mfmsr r0 to: gc_env.r[0] = gc_env.msr; // Move from machine state register
Processing opcode: stw, operands: ['r0', '0x19c(r3)']
Translated stw r0 0x19c(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x19C, gc_env.r[0]); // stw r0, 0x19C(r3)']
Translated mfctr r0 to: ['gc_env.r[0] = gc_env.ctr; // mfctr r0']
Processing opcode: stw, operands: ['r0', '0x88(r3)']
Translated stw r0 0x88(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x88, gc_env.r[0]); // stw r0, 0x88(r3)']
Translated mfxer r0 to: ['gc_env.r[0] = gc_env.xer; // mfxer r0']
Processing opcode: stw, operands: ['r0', '0x8c(r3)']
Translated stw r0 0x8c(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8C, gc_env.r[0]); // stw r0, 0x8C(r3)']
Processing opcode: stw, operands: ['r1', '0x4(r3)']
Translated stw r1 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[1]); // stw r1, 0x4(r3)']
Processing opcode: stw, operands: ['r2', '0x8(r3)']
Translated stw r2 0x8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[2]); // stw r2, 0x8(r3)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', '0xc(r3)']
Translated stw r0 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[0]); // stw r0, 0xC(r3)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Translated lis r4 OSDisableInterrupts@ha to: ['gc_env.r[4] = ((uint32_t)&OSDisableInterrupts >> 16) & 0xFFFF; // lis r4, OSDisableInterrupts@ha']
Processing opcode: lwz, operands: ['r6', '0x198(r3)']
Translated lwz r6 0x198(r3) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x198); // lwz r6, 0x198(r3)']
Processing opcode: addi, operands: ['r5', 'r4', 'OSDisableInterrupts@l']
Translated addi r5 r4 OSDisableInterrupts@l to: ['gc_env.r[5] = gc_env.r[4] + ((uint32_t)&OSDisableInterrupts & 0xFFFF); // addi r5, r4, OSDisableInterrupts@l']
Translated cmplw r6 r5 to: gc_env.cr[0] = ((uint32_t)gc_env.r[6] == (uint32_t)gc_env.r[5]) ? 0 : ((uint32_t)gc_env.r[6] < (uint32_t)gc_env.r[5] ? -1 : 1); // Logical compare word
Translated blt .L_8000707C to: ['if (gc_env.cr[0] & 0x8) goto L_8000707C; // blt .L_8000707C']
Translated lis r4 OSDisableInterrupts+0x10@ha to: ['gc_env.r[4] = ((uint32_t)&OSDisableInterrupts >> 16) & 0xFFFF; // lis r4, OSDisableInterrupts+0x10@ha']
Processing opcode: addi, operands: ['r0', 'r4', 'OSDisableInterrupts+0x10@l']
Translated addi r0 r4 OSDisableInterrupts+0x10@l to: ['gc_env.r[0] = (uint32_t)&OSDisableInterrupts + 16; // lis + addi OSDisableInterrupts (completing pattern)']
Translated cmplw r6 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[6] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[6] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bgt .L_8000707C to: ['if (gc_env.cr[0] & 0x4) goto L_8000707C; // bgt .L_8000707C']
Processing opcode: stw, operands: ['r5', '0x198(r3)']
Translated stw r5 0x198(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x198, gc_env.r[5]); // stw r5, 0x198(r3)']
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Processing opcode: lwz, operands: ['r1', '0x4(r3)']
Translated lwz r1 0x4(r3) to: ['gc_env.r[1] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4); // lwz r1, 0x4(r3)']
Processing opcode: lwz, operands: ['r2', '0x8(r3)']
Translated lwz r2 0x8(r3) to: ['gc_env.r[2] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r2, 0x8(r3)']
Processing opcode: lhz, operands: ['r4', '0x1a2(r3)']
Translated lhz r4 0x1a2(r3) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x1a2); // lhz r4, 0x1a2(r3)']
Translated rlwinm. r5 r4 0 30 30 to: ['gc_env.r[5] = (gc_env.r[4] << 0) & 0x2; // rlwinm r5, r4, 0, 30, 30', 'gc_env.cr[0] = (gc_env.r[5] == 0) ? 0x2 : ((int32_t)gc_env.r[5] < 0 ? 0x8 : 0x4);']
Translated beq .L_800070A4 to: if (gc_env.cr[0] == 0) goto L_800070A4;
Translated rlwinm r4 r4 0 31 29 to: ['gc_env.r[4] = (gc_env.r[4] << 0) & -0x3; // rlwinm r4, r4, 0, 31, 29']
Processing opcode: sth, operands: ['r4', '0x1a2(r3)']
Translated sth r4 0x1a2(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x1A2, gc_env.r[4]); // sth r4, 0x1A2(r3)']
Translated lmw r5 0x14(r3) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x14); // lmw r5, 0x14(r3)', 'gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x18); // lmw r5, 0x14(r3)', 'gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x1C); // lmw r5, 0x14(r3)', 'gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x20); // lmw r5, 0x14(r3)', 'gc_env.r[9] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x24); // lmw r5, 0x14(r3)', 'gc_env.r[10] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x28); // lmw r5, 0x14(r3)', 'gc_env.r[11] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x2C); // lmw r5, 0x14(r3)', 'gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x30); // lmw r5, 0x14(r3)', 'gc_env.r[13] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x34); // lmw r5, 0x14(r3)', 'gc_env.r[14] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x38); // lmw r5, 0x14(r3)', 'gc_env.r[15] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x3C); // lmw r5, 0x14(r3)', 'gc_env.r[16] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x40); // lmw r5, 0x14(r3)', 'gc_env.r[17] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x44); // lmw r5, 0x14(r3)', 'gc_env.r[18] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x48); // lmw r5, 0x14(r3)', 'gc_env.r[19] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4C); // lmw r5, 0x14(r3)', 'gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x50); // lmw r5, 0x14(r3)', 'gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x54); // lmw r5, 0x14(r3)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x58); // lmw r5, 0x14(r3)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x5C); // lmw r5, 0x14(r3)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x60); // lmw r5, 0x14(r3)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x64); // lmw r5, 0x14(r3)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x68); // lmw r5, 0x14(r3)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6C); // lmw r5, 0x14(r3)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x70); // lmw r5, 0x14(r3)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x74); // lmw r5, 0x14(r3)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x78); // lmw r5, 0x14(r3)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x7C); // lmw r5, 0x14(r3)']
Translated b .L_800070A8 to: goto L_800070A8;
Translated lmw r13 0x34(r3) to: ['gc_env.r[13] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x34); // lmw r13, 0x34(r3)', 'gc_env.r[14] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x38); // lmw r13, 0x34(r3)', 'gc_env.r[15] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x3C); // lmw r13, 0x34(r3)', 'gc_env.r[16] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x40); // lmw r13, 0x34(r3)', 'gc_env.r[17] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x44); // lmw r13, 0x34(r3)', 'gc_env.r[18] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x48); // lmw r13, 0x34(r3)', 'gc_env.r[19] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4C); // lmw r13, 0x34(r3)', 'gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x50); // lmw r13, 0x34(r3)', 'gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x54); // lmw r13, 0x34(r3)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x58); // lmw r13, 0x34(r3)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x5C); // lmw r13, 0x34(r3)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x60); // lmw r13, 0x34(r3)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x64); // lmw r13, 0x34(r3)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x68); // lmw r13, 0x34(r3)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6C); // lmw r13, 0x34(r3)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x70); // lmw r13, 0x34(r3)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x74); // lmw r13, 0x34(r3)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x78); // lmw r13, 0x34(r3)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x7C); // lmw r13, 0x34(r3)']
Processing opcode: lwz, operands: ['r4', '0x1a8(r3)']
Translated lwz r4 0x1a8(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x1A8); // lwz r4, 0x1A8(r3)']
Translated mtspr GQR1 r4 to: ['gc_env.gqr[1] = gc_env.r[4]; // mtspr GQR1, r4']
Processing opcode: lwz, operands: ['r4', '0x1ac(r3)']
Translated lwz r4 0x1ac(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x1AC); // lwz r4, 0x1AC(r3)']
Translated mtspr GQR2 r4 to: ['gc_env.gqr[2] = gc_env.r[4]; // mtspr GQR2, r4']
Processing opcode: lwz, operands: ['r4', '0x1b0(r3)']
Translated lwz r4 0x1b0(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x1B0); // lwz r4, 0x1B0(r3)']
Translated mtspr GQR3 r4 to: ['gc_env.gqr[3] = gc_env.r[4]; // mtspr GQR3, r4']
Processing opcode: lwz, operands: ['r4', '0x1b4(r3)']
Translated lwz r4 0x1b4(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x1B4); // lwz r4, 0x1B4(r3)']
Translated mtspr GQR4 r4 to: ['gc_env.gqr[4] = gc_env.r[4]; // mtspr GQR4, r4']
Processing opcode: lwz, operands: ['r4', '0x1b8(r3)']
Translated lwz r4 0x1b8(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x1B8); // lwz r4, 0x1B8(r3)']
Translated mtspr GQR5 r4 to: ['gc_env.gqr[5] = gc_env.r[4]; // mtspr GQR5, r4']
Processing opcode: lwz, operands: ['r4', '0x1bc(r3)']
Translated lwz r4 0x1bc(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x1BC); // lwz r4, 0x1BC(r3)']
Translated mtspr GQR6 r4 to: ['gc_env.gqr[6] = gc_env.r[4]; // mtspr GQR6, r4']
Processing opcode: lwz, operands: ['r4', '0x1c0(r3)']
Translated lwz r4 0x1c0(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x1C0); // lwz r4, 0x1C0(r3)']
Translated mtspr GQR7 r4 to: ['gc_env.gqr[7] = gc_env.r[4]; // mtspr GQR7, r4']
Processing opcode: lwz, operands: ['r4', '0x80(r3)']
Translated lwz r4 0x80(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x80); // lwz r4, 0x80(r3)']
Translated mtcrf 255 r4 to: ['gc_env.cr[0] = (gc_env.r[4] >> 28) & 0xF;', 'gc_env.cr[1] = (gc_env.r[4] >> 24) & 0xF;', 'gc_env.cr[2] = (gc_env.r[4] >> 20) & 0xF;', 'gc_env.cr[3] = (gc_env.r[4] >> 16) & 0xF;', 'gc_env.cr[4] = (gc_env.r[4] >> 12) & 0xF;', 'gc_env.cr[5] = (gc_env.r[4] >> 8) & 0xF;', 'gc_env.cr[6] = (gc_env.r[4] >> 4) & 0xF;', 'gc_env.cr[7] = (gc_env.r[4] >> 0) & 0xF;', '// mtcrf 255, r4']
Processing opcode: lwz, operands: ['r4', '0x84(r3)']
Translated lwz r4 0x84(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x84); // lwz r4, 0x84(r3)']
Translated mtlr r4 to: gc_env.lr = gc_env.r[4]; // Move to link register
Processing opcode: lwz, operands: ['r4', '0x88(r3)']
Translated lwz r4 0x88(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x88); // lwz r4, 0x88(r3)']
Translated mtctr r4 to: gc_env.ctr = gc_env.r[4]; // Move to count register
Processing opcode: lwz, operands: ['r4', '0x8c(r3)']
Translated lwz r4 0x8c(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8C); // lwz r4, 0x8C(r3)']
Translated mtxer r4 to: ['gc_env.xer = gc_env.r[4]; // mtxer r4']
Translated mfmsr r4 to: gc_env.r[4] = gc_env.msr; // Move from machine state register
Translated rlwinm r4 r4 0 17 15 to: ['gc_env.r[4] = (gc_env.r[4] << 0) & -0x8001; // rlwinm r4, r4, 0, 17, 15']
Translated rlwinm r4 r4 0 31 29 to: ['gc_env.r[4] = (gc_env.r[4] << 0) & -0x3; // rlwinm r4, r4, 0, 31, 29']
Translated mtmsr r4 to: gc_env.msr = gc_env.r[4]; // Move to machine state register
Processing opcode: lwz, operands: ['r4', '0x198(r3)']
Translated lwz r4 0x198(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x198); // lwz r4, 0x198(r3)']
Translated mtsrr0 r4 to: ['gc_env.srr0 = gc_env.r[4]; // mtsrr0 r4']
Processing opcode: lwz, operands: ['r4', '0x19c(r3)']
Translated lwz r4 0x19c(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x19C); // lwz r4, 0x19C(r3)']
Translated mtsrr1 r4 to: ['gc_env.srr1 = gc_env.r[4]; // mtsrr1 r4']
Processing opcode: lwz, operands: ['r4', '0x10(r3)']
Translated lwz r4 0x10(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x10); // lwz r4, 0x10(r3)']
Processing opcode: lwz, operands: ['r3', '0xc(r3)']
Translated lwz r3 0xc(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xC); // lwz r3, 0xC(r3)']
Translated rfi  to: ['// rfi: return from interrupt (not implemented)']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: sth, operands: ['r5', '0x1a0(r3)']
Translated sth r5 0x1a0(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x1A0, gc_env.r[5]); // sth r5, 0x1A0(r3)']
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: sth, operands: ['r5', '0x1a2(r3)']
Translated sth r5 0x1a2(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x1A2, gc_env.r[5]); // sth r5, 0x1A2(r3)']
Processing opcode: lwz, operands: ['r0', '0xd8(r4)']
Translated lwz r0 0xd8(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xD8); // lwz r0, 0xD8(r4)']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_8000714C to: if (gc_env.cr[0] != 0) goto L_8000714C;
Processing opcode: stw, operands: ['r5', '0xd8(r4)']
Translated stw r5 0xd8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xD8, gc_env.r[5]); // stw r5, 0xD8(r4)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x2f8(r1)']
Translated stwu r1 -0x2f8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x2F8, gc_env.r[1]); // stwu r1, -0x2F8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x2F8;']
Translated stmw r25 0x2dc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2DC, gc_env.r[25]); // stmw r25, 0x2DC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2E0, gc_env.r[26]); // stmw r25, 0x2DC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2E4, gc_env.r[27]); // stmw r25, 0x2DC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2E8, gc_env.r[28]); // stmw r25, 0x2DC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2EC, gc_env.r[29]); // stmw r25, 0x2DC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2F0, gc_env.r[30]); // stmw r25, 0x2DC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2F4, gc_env.r[31]); // stmw r25, 0x2DC(r1)']
Translated mr r28 r3 to: gc_env.r[28] = gc_env.r[3]; // Move register
Translated lis r3 lbl_8001AB50@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001AB50 >> 16) & 0xFFFF; // lis r3, lbl_8001AB50@ha']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: addi, operands: ['r31', 'r3', 'lbl_8001AB50@l']
Translated addi r31 r3 lbl_8001AB50@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&lbl_8001AB50 & 0xFFFF); // addi r31, r3, lbl_8001AB50@l']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated mr r4 r28 to: gc_env.r[4] = gc_env.r[28]; // Move register
Translated bl OSReport to: OSReport();
Processing opcode: li, operands: ['r25', '0x0']
Translated li r25 0x0 to: ['gc_env.r[25] = 0x0; // li r25, 0x0']
Translated slwi r0 r25 2 to: ['gc_env.r[0] = gc_env.r[25] << 2; // slwi r0, r25, 2']
Processing opcode: add, operands: ['r27', 'r28', 'r0']
Translated add r27 r28 r0 to: ['gc_env.r[27] = gc_env.r[28] + gc_env.r[0]; // add r27, r28, r0']
Translated b .L_8000718C to: goto L_8000718C;
Translated b .L_80007190 to: goto L_80007190;
Translated b .L_80007194 to: goto L_80007194;
Processing opcode: lwz, operands: ['r8', '0x40(r27)']
Translated lwz r8 0x40(r27) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[27] + 0x40); // lwz r8, 0x40(r27)']
Translated mr r4 r25 to: gc_env.r[4] = gc_env.r[25]; // Move register
Processing opcode: lwz, operands: ['r5', '0x0(r27)']
Translated lwz r5 0x0(r27) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[27]); // lwz r5, (r27)']
Processing opcode: addi, operands: ['r3', 'r31', '0x44']
Translated addi r3 r31 0x44 to: ['gc_env.r[3] = gc_env.r[31] + 68; // addi r3, r31, 0x44']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated mr r6 r5 to: gc_env.r[6] = gc_env.r[5]; // Move register
Translated mr r9 r8 to: gc_env.r[9] = gc_env.r[8]; // Move register
Processing opcode: addi, operands: ['r7', 'r25', '0x10']
Translated addi r7 r25 0x10 to: ['gc_env.r[7] = gc_env.r[25] + 16; // addi r7, r25, 0x10']
Translated bl OSReport to: OSReport();
Processing opcode: addi, operands: ['r27', 'r27', '0x4']
Translated addi r27 r27 0x4 to: ['gc_env.r[27] += 4; // addi r27, r27, 0x4']
Processing opcode: addi, operands: ['r25', 'r25', '0x1']
Translated addi r25 r25 0x1 to: ['gc_env.r[25] += 1; // addi r25, r25, 0x1']
Translated cmplwi r25 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[25] == 0x10) ? 0 : ((uint32_t)gc_env.r[25] < 0x10 ? -1 : 1); // Logical compare with immediate
Translated blt .L_80007194 to: ['if (gc_env.cr[0] & 0x8) goto L_80007194; // blt .L_80007194']
Processing opcode: lwz, operands: ['r4', '0x84(r28)']
Translated lwz r4 0x84(r28) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[28] + 0x84); // lwz r4, 0x84(r28)']
Processing opcode: addi, operands: ['r3', 'r31', '0x74']
Translated addi r3 r31 0x74 to: ['gc_env.r[3] = gc_env.r[31] + 116; // addi r3, r31, 0x74']
Processing opcode: lwz, operands: ['r5', '0x80(r28)']
Translated lwz r5 0x80(r28) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[28] + 0x80); // lwz r5, 0x80(r28)']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: lwz, operands: ['r4', '0x198(r28)']
Translated lwz r4 0x198(r28) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[28] + 0x198); // lwz r4, 0x198(r28)']
Processing opcode: addi, operands: ['r3', 'r31', '0xa4']
Translated addi r3 r31 0xa4 to: ['gc_env.r[3] = gc_env.r[31] + 164; // addi r3, r31, 0xa4']
Processing opcode: lwz, operands: ['r5', '0x19c(r28)']
Translated lwz r5 0x19c(r28) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[28] + 0x19C); // lwz r5, 0x19C(r28)']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: addi, operands: ['r3', 'r31', '0xd4']
Translated addi r3 r31 0xd4 to: ['gc_env.r[3] = gc_env.r[31] + 212; // addi r3, r31, 0xd4']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: li, operands: ['r25', '0x0']
Translated li r25 0x0 to: ['gc_env.r[25] = 0x0; // li r25, 0x0']
Translated slwi r0 r25 2 to: ['gc_env.r[0] = gc_env.r[25] << 2; // slwi r0, r25, 2']
Processing opcode: add, operands: ['r27', 'r28', 'r0']
Translated add r27 r28 r0 to: ['gc_env.r[27] = gc_env.r[28] + gc_env.r[0]; // add r27, r28, r0']
Translated b .L_8000720C to: goto L_8000720C;
Translated b .L_80007210 to: goto L_80007210;
Translated b .L_80007214 to: goto L_80007214;
Processing opcode: lwz, operands: ['r5', '0x1a4(r27)']
Translated lwz r5 0x1a4(r27) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[27] + 0x1A4); // lwz r5, 0x1A4(r27)']
Translated mr r4 r25 to: gc_env.r[4] = gc_env.r[25]; // Move register
Processing opcode: lwz, operands: ['r7', '0x1b4(r27)']
Translated lwz r7 0x1b4(r27) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[27] + 0x1B4); // lwz r7, 0x1B4(r27)']
Processing opcode: addi, operands: ['r3', 'r31', '0xe8']
Translated addi r3 r31 0xe8 to: ['gc_env.r[3] = gc_env.r[31] + 232; // addi r3, r31, 0xe8']
Processing opcode: addi, operands: ['r6', 'r25', '0x4']
Translated addi r6 r25 0x4 to: ['gc_env.r[6] = gc_env.r[25] + 4; // addi r6, r25, 0x4']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: addi, operands: ['r27', 'r27', '0x4']
Translated addi r27 r27 0x4 to: ['gc_env.r[27] += 4; // addi r27, r27, 0x4']
Processing opcode: addi, operands: ['r25', 'r25', '0x1']
Translated addi r25 r25 0x1 to: ['gc_env.r[25] += 1; // addi r25, r25, 0x1']
Translated cmplwi r25 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[25] == 0x4) ? 0 : ((uint32_t)gc_env.r[25] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated blt .L_80007214 to: ['if (gc_env.cr[0] & 0x8) goto L_80007214; // blt .L_80007214']
Processing opcode: lhz, operands: ['r0', '0x1a2(r28)']
Translated lhz r0 0x1a2(r28) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[28] + 0x1a2); // lhz r0, 0x1a2(r28)']
Translated clrlwi r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007388 to: if (gc_env.cr[0] == 0) goto L_80007388;
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated lis r6 0x8000 to: ['gc_env.r[6] = -32768 << 16; // lis r6, 0x8000']
Processing opcode: lwz, operands: ['r0', '0xd4(r6)']
Translated lwz r0 0xd4(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0xD4); // lwz r0, 0xD4(r6)']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x10']
Translated addi r4 r1 0x10 to: ['gc_env.r[4] = gc_env.r[1] + 16; // addi r4, r1, 0x10']
Processing opcode: sth, operands: ['r5', '0x1b0(r1)']
Translated sth r5 0x1b0(r1) to: ['gc_mem_write16(gc_env.ram, gc_env.r[1] + 0x1B0, gc_env.r[5]); // sth r5, 0x1B0(r1)']
Translated mr r30 r0 to: gc_env.r[30] = gc_env.r[0]; // Move register
Translated mr r29 r3 to: gc_env.r[29] = gc_env.r[3]; // Move register
Processing opcode: sth, operands: ['r5', '0x1b2(r1)']
Translated sth r5 0x1b2(r1) to: ['gc_mem_write16(gc_env.ram, gc_env.r[1] + 0x1B2, gc_env.r[5]); // sth r5, 0x1B2(r1)']
Processing opcode: lwz, operands: ['r0', '0xd8(r6)']
Translated lwz r0 0xd8(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0xD8); // lwz r0, 0xD8(r6)']
Translated cmplw r4 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_80007284 to: if (gc_env.cr[0] != 0) goto L_80007284;
Processing opcode: stw, operands: ['r5', '0xd8(r6)']
Translated stw r5 0xd8(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0xD8, gc_env.r[5]); // stw r5, 0xD8(r6)']
Processing opcode: addi, operands: ['r3', 'r1', '0x10']
Translated addi r3 r1 0x10 to: ['gc_env.r[3] = gc_env.r[1] + 16; // addi r3, r1, 0x10']
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Processing opcode: addi, operands: ['r3', 'r31', '0x10c']
Translated addi r3 r31 0x10c to: ['gc_env.r[3] = gc_env.r[31] + 268; // addi r3, r31, 0x10c']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: li, operands: ['r25', '0x0']
Translated li r25 0x0 to: ['gc_env.r[25] = 0x0; // li r25, 0x0']
Translated slwi r0 r25 3 to: ['gc_env.r[0] = gc_env.r[25] << 3; // slwi r0, r25, 3']
Processing opcode: add, operands: ['r26', 'r28', 'r0']
Translated add r26 r28 r0 to: ['gc_env.r[26] = gc_env.r[28] + gc_env.r[0]; // add r26, r28, r0']
Translated b .L_800072A8 to: goto L_800072A8;
Translated b .L_800072AC to: goto L_800072AC;
Translated b .L_800072B0 to: goto L_800072B0;
Error in handler for lfd: name 'format_hex' is not defined
Translated bl fn_800114CC to: fn_800114CC();
Translated mr r27 r3 to: gc_env.r[27] = gc_env.r[3]; // Move register
Error in handler for lfd: name 'format_hex' is not defined
Translated bl fn_800114CC to: fn_800114CC();
Translated mr r5 r3 to: gc_env.r[5] = gc_env.r[3]; // Move register
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated mr r4 r25 to: gc_env.r[4] = gc_env.r[25]; // Move register
Translated mr r7 r27 to: gc_env.r[7] = gc_env.r[27]; // Move register
Processing opcode: addi, operands: ['r3', 'r31', '0x120']
Translated addi r3 r31 0x120 to: ['gc_env.r[3] = gc_env.r[31] + 288; // addi r3, r31, 0x120']
Processing opcode: addi, operands: ['r6', 'r25', '0x1']
Translated addi r6 r25 0x1 to: ['gc_env.r[6] = gc_env.r[25] + 1; // addi r6, r25, 0x1']
Translated bl OSReport to: OSReport();
Processing opcode: addi, operands: ['r26', 'r26', '0x10']
Translated addi r26 r26 0x10 to: ['gc_env.r[26] += 16; // addi r26, r26, 0x10']
Processing opcode: addi, operands: ['r25', 'r25', '0x2']
Translated addi r25 r25 0x2 to: ['gc_env.r[25] += 2; // addi r25, r25, 0x2']
Translated cmplwi r25 0x20 to: gc_env.cr[0] = ((uint32_t)gc_env.r[25] == 0x20) ? 0 : ((uint32_t)gc_env.r[25] < 0x20 ? -1 : 1); // Logical compare with immediate
Translated blt .L_800072B0 to: ['if (gc_env.cr[0] & 0x8) goto L_800072B0; // blt .L_800072B0']
Processing opcode: addi, operands: ['r3', 'r31', '0x13c']
Translated addi r3 r31 0x13c to: ['gc_env.r[3] = gc_env.r[31] + 316; // addi r3, r31, 0x13c']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: li, operands: ['r25', '0x0']
Translated li r25 0x0 to: ['gc_env.r[25] = 0x0; // li r25, 0x0']
Translated slwi r0 r25 3 to: ['gc_env.r[0] = gc_env.r[25] << 3; // slwi r0, r25, 3']
Processing opcode: add, operands: ['r26', 'r28', 'r0']
Translated add r26 r28 r0 to: ['gc_env.r[26] = gc_env.r[28] + gc_env.r[0]; // add r26, r28, r0']
Translated b .L_8000730C to: goto L_8000730C;
Translated b .L_80007310 to: goto L_80007310;
Translated b .L_80007314 to: goto L_80007314;
Error in handler for lfd: name 'format_hex' is not defined
Translated bl fn_800114CC to: fn_800114CC();
Translated mr r27 r3 to: gc_env.r[27] = gc_env.r[3]; // Move register
Error in handler for lfd: name 'format_hex' is not defined
Translated bl fn_800114CC to: fn_800114CC();
Translated mr r5 r3 to: gc_env.r[5] = gc_env.r[3]; // Move register
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated mr r4 r25 to: gc_env.r[4] = gc_env.r[25]; // Move register
Translated mr r7 r27 to: gc_env.r[7] = gc_env.r[27]; // Move register
Processing opcode: addi, operands: ['r3', 'r31', '0x150']
Translated addi r3 r31 0x150 to: ['gc_env.r[3] = gc_env.r[31] + 336; // addi r3, r31, 0x150']
Processing opcode: addi, operands: ['r6', 'r25', '0x1']
Translated addi r6 r25 0x1 to: ['gc_env.r[6] = gc_env.r[25] + 1; // addi r6, r25, 0x1']
Translated bl OSReport to: OSReport();
Processing opcode: addi, operands: ['r26', 'r26', '0x10']
Translated addi r26 r26 0x10 to: ['gc_env.r[26] += 16; // addi r26, r26, 0x10']
Processing opcode: addi, operands: ['r25', 'r25', '0x2']
Translated addi r25 r25 0x2 to: ['gc_env.r[25] += 2; // addi r25, r25, 0x2']
Translated cmplwi r25 0x20 to: gc_env.cr[0] = ((uint32_t)gc_env.r[25] == 0x20) ? 0 : ((uint32_t)gc_env.r[25] < 0x20 ? -1 : 1); // Logical compare with immediate
Translated blt .L_80007314 to: ['if (gc_env.cr[0] & 0x8) goto L_80007314; // blt .L_80007314']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: sth, operands: ['r5', '0x1b0(r1)']
Translated sth r5 0x1b0(r1) to: ['gc_mem_write16(gc_env.ram, gc_env.r[1] + 0x1B0, gc_env.r[5]); // sth r5, 0x1B0(r1)']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: addi, operands: ['r4', 'r1', '0x10']
Translated addi r4 r1 0x10 to: ['gc_env.r[4] = gc_env.r[1] + 16; // addi r4, r1, 0x10']
Processing opcode: sth, operands: ['r5', '0x1b2(r1)']
Translated sth r5 0x1b2(r1) to: ['gc_mem_write16(gc_env.ram, gc_env.r[1] + 0x1B2, gc_env.r[5]); // sth r5, 0x1B2(r1)']
Processing opcode: lwz, operands: ['r0', '0xd8(r3)']
Translated lwz r0 0xd8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xD8); // lwz r0, 0xD8(r3)']
Translated cmplw r4 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_80007378 to: if (gc_env.cr[0] != 0) goto L_80007378;
Processing opcode: stw, operands: ['r5', '0xd8(r3)']
Translated stw r5 0xd8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xD8, gc_env.r[5]); // stw r5, 0xD8(r3)']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: addi, operands: ['r3', 'r31', '0x170']
Translated addi r3 r31 0x170 to: ['gc_env.r[3] = gc_env.r[31] + 368; // addi r3, r31, 0x170']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: lwz, operands: ['r25', '0x4(r28)']
Translated lwz r25 0x4(r28) to: ['gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[28] + 0x4); // lwz r25, 0x4(r28)']
Processing opcode: li, operands: ['r26', '0x0']
Translated li r26 0x0 to: ['gc_env.r[26] = 0x0; // li r26, 0x0']
Translated b .L_800073A0 to: goto L_800073A0;
Translated b .L_800073A4 to: goto L_800073A4;
Translated b .L_800073C4 to: goto L_800073C4;
Processing opcode: lwz, operands: ['r5', '0x0(r25)']
Translated lwz r5 0x0(r25) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[25]); // lwz r5, (r25)']
Translated mr r4 r25 to: gc_env.r[4] = gc_env.r[25]; // Move register
Processing opcode: lwz, operands: ['r6', '0x4(r25)']
Translated lwz r6 0x4(r25) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[25] + 0x4); // lwz r6, 0x4(r25)']
Processing opcode: addi, operands: ['r3', 'r31', '0x198']
Translated addi r3 r31 0x198 to: ['gc_env.r[3] = gc_env.r[31] + 408; // addi r3, r31, 0x198']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: lwz, operands: ['r25', '0x0(r25)']
Translated lwz r25 0x0(r25) to: ['gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[25]); // lwz r25, (r25)']
Translated cmplwi r25 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[25] == 0x0) ? 0 : ((uint32_t)gc_env.r[25] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800073E4 to: if (gc_env.cr[0] == 0) goto L_800073E4;
Processing opcode: addis, operands: ['r0', 'r25', '0x1']
Translated addis r0 r25 0x1 to: ['gc_env.r[0] = gc_env.r[25] + (1 << 16); // addis r0, r25, 1']
Translated cmplwi r0 0xffff to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xffff) ? 0 : ((uint32_t)gc_env.r[0] < 0xffff ? -1 : 1); // Logical compare with immediate
Translated beq .L_800073E4 to: if (gc_env.cr[0] == 0) goto L_800073E4;
Translated cmplwi r26 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[26] == 0x10) ? 0 : ((uint32_t)gc_env.r[26] < 0x10 ? -1 : 1); // Logical compare with immediate
Processing opcode: addi, operands: ['r26', 'r26', '0x1']
Translated addi r26 r26 0x1 to: ['gc_env.r[26] += 1; // addi r26, r26, 0x1']
Translated blt .L_800073A8 to: ['if (gc_env.cr[0] & 0x8) goto L_800073A8; // blt .L_800073A8']
Translated lmw r25 0x2dc(r1) to: ['gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2DC); // lmw r25, 0x2DC(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2E0); // lmw r25, 0x2DC(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2E4); // lmw r25, 0x2DC(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2E8); // lmw r25, 0x2DC(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2EC); // lmw r25, 0x2DC(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2F0); // lmw r25, 0x2DC(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2F4); // lmw r25, 0x2DC(r1)']
Processing opcode: lwz, operands: ['r0', '0x2fc(r1)']
Translated lwz r0 0x2fc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2FC); // lwz r0, 0x2FC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x2f8']
Translated addi r1 r1 0x2f8 to: ['gc_env.r[1] += 760; // addi r1, r1, 0x2f8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mfmsr r5 to: gc_env.r[5] = gc_env.msr; // Move from machine state register
Translated ori r5 r5 0x2000 to: ['gc_env.r[5] |= 8192; // ori r5, r5, 0x2000']
Translated mtmsr r5 to: gc_env.msr = gc_env.r[5]; // Move to machine state register
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Processing opcode: lwz, operands: ['r5', '0x19c(r4)']
Translated lwz r5 0x19c(r4) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x19C); // lwz r5, 0x19C(r4)']
Translated ori r5 r5 0x2000 to: ['gc_env.r[5] |= 8192; // ori r5, r5, 0x2000']
Translated mtsrr1 r5 to: ['gc_env.srr1 = gc_env.r[5]; // mtsrr1 r5']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r5', '0xd8(r3)']
Translated lwz r5 0xd8(r3) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xD8); // lwz r5, 0xD8(r3)']
Processing opcode: stw, operands: ['r4', '0xd8(r3)']
Translated stw r4 0xd8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xD8, gc_env.r[4]); // stw r4, 0xD8(r3)']
Translated cmpw r5 r4 to: ['gc_env.cr[0] = (int32_t)gc_env.r[5] < (int32_t)gc_env.r[4] ? 0x8 : ((int32_t)gc_env.r[5] > (int32_t)gc_env.r[4] ? 0x4 : 0x2); // cmpw r5, r4']
Translated beq .L_80007438 to: if (gc_env.cr[0] == 0) goto L_80007438;
Translated cmpwi r5 0x0 to: gc_env.cr[0] = (gc_env.r[5] == 0x0) ? 0 : (gc_env.r[5] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80007434 to: if (gc_env.cr[0] == 0) goto L_80007434;
Translated bl __OSSaveFPUContext to: __OSSaveFPUContext();
Translated bl __OSLoadFPUContext to: __OSLoadFPUContext();
Processing opcode: lwz, operands: ['r3', '0x80(r4)']
Translated lwz r3 0x80(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x80); // lwz r3, 0x80(r4)']
Translated mtcrf 255 r3 to: ['gc_env.cr[0] = (gc_env.r[3] >> 28) & 0xF;', 'gc_env.cr[1] = (gc_env.r[3] >> 24) & 0xF;', 'gc_env.cr[2] = (gc_env.r[3] >> 20) & 0xF;', 'gc_env.cr[3] = (gc_env.r[3] >> 16) & 0xF;', 'gc_env.cr[4] = (gc_env.r[3] >> 12) & 0xF;', 'gc_env.cr[5] = (gc_env.r[3] >> 8) & 0xF;', 'gc_env.cr[6] = (gc_env.r[3] >> 4) & 0xF;', 'gc_env.cr[7] = (gc_env.r[3] >> 0) & 0xF;', '// mtcrf 255, r3']
Processing opcode: lwz, operands: ['r3', '0x84(r4)']
Translated lwz r3 0x84(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x84); // lwz r3, 0x84(r4)']
Translated mtlr r3 to: gc_env.lr = gc_env.r[3]; // Move to link register
Processing opcode: lwz, operands: ['r3', '0x198(r4)']
Translated lwz r3 0x198(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x198); // lwz r3, 0x198(r4)']
Translated mtsrr0 r3 to: ['gc_env.srr0 = gc_env.r[3]; // mtsrr0 r3']
Processing opcode: lwz, operands: ['r3', '0x88(r4)']
Translated lwz r3 0x88(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x88); // lwz r3, 0x88(r4)']
Translated mtctr r3 to: gc_env.ctr = gc_env.r[3]; // Move to count register
Processing opcode: lwz, operands: ['r3', '0x8c(r4)']
Translated lwz r3 0x8c(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x8C); // lwz r3, 0x8C(r4)']
Translated mtxer r3 to: ['gc_env.xer = gc_env.r[3]; // mtxer r3']
Processing opcode: lhz, operands: ['r3', '0x1a2(r4)']
Translated lhz r3 0x1a2(r4) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[4] + 0x1a2); // lhz r3, 0x1a2(r4)']
Translated rlwinm r3 r3 0 31 29 to: ['gc_env.r[3] = (gc_env.r[3] << 0) & -0x3; // rlwinm r3, r3, 0, 31, 29']
Processing opcode: sth, operands: ['r3', '0x1a2(r4)']
Translated sth r3 0x1a2(r4) to: ['gc_mem_write16(gc_env.ram, gc_env.r[4] + 0x1A2, gc_env.r[3]); // sth r3, 0x1A2(r4)']
Processing opcode: lwz, operands: ['r5', '0x14(r4)']
Translated lwz r5 0x14(r4) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x14); // lwz r5, 0x14(r4)']
Processing opcode: lwz, operands: ['r3', '0xc(r4)']
Translated lwz r3 0xc(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xC); // lwz r3, 0xC(r4)']
Processing opcode: lwz, operands: ['r4', '0x10(r4)']
Translated lwz r4 0x10(r4) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x10); // lwz r4, 0x10(r4)']
Translated rfi  to: ['// rfi: return from interrupt (not implemented)']
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated lis r3 OSSwitchFPUContext@ha to: ['gc_env.r[3] = ((uint32_t)&OSSwitchFPUContext >> 16) & 0xFFFF; // lis r3, OSSwitchFPUContext@ha']
Processing opcode: addi, operands: ['r4', 'r3', 'OSSwitchFPUContext@l']
Translated addi r4 r3 OSSwitchFPUContext@l to: ['gc_env.r[4] = (uint32_t)&OSSwitchFPUContext; // lis + addi OSSwitchFPUContext (completing pattern)']
Processing opcode: li, operands: ['r3', '0x7']
Translated li r3 0x7 to: ['gc_env.r[3] = 0x7; // li r3, 0x7']
Translated bl __OSSetExceptionHandler to: __OSSetExceptionHandler();
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Translated lis r3 "@74_8001AD04"@ha to: ['gc_env.r[3] = ((uint32_t)&_74_8001AD04 >> 16) & 0xFFFF; // lis r3, "@74_8001AD04"@ha']
Processing opcode: stw, operands: ['r0', '0xd8(r4)']
Translated stw r0 0xd8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xD8, gc_env.r[0]); // stw r0, 0xD8(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '"@74_8001AD04"@l']
Translated addi r3 r3 "@74_8001AD04"@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&_74_8001AD04 & 0xFFFF); // addi r3, r3, "@74_8001AD04"@l']
Translated bl DBPrintf to: DBPrintf();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x78(r1)']
Translated stwu r1 -0x78(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x78, gc_env.r[1]); // stwu r1, -0x78(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x78;']
Translated bne cr1 .L_800074F4 to: if (gc_env.cr[1] != 0) goto L_800074F4;
Translated stfd f1 0x28(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[1], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x28, temp); // stfd f1, 0x28(r1)']
Translated stfd f2 0x30(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[2], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x30, temp); // stfd f2, 0x30(r1)']
Translated stfd f3 0x38(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[3], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x38, temp); // stfd f3, 0x38(r1)']
Translated stfd f4 0x40(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[4], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x40, temp); // stfd f4, 0x40(r1)']
Translated stfd f5 0x48(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[5], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x48, temp); // stfd f5, 0x48(r1)']
Translated stfd f6 0x50(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[6], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x50, temp); // stfd f6, 0x50(r1)']
Translated stfd f7 0x58(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[7], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x58, temp); // stfd f7, 0x58(r1)']
Translated stfd f8 0x60(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[8], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x60, temp); // stfd f8, 0x60(r1)']
Processing opcode: stw, operands: ['r3', '0x8(r1)']
Translated stw r3 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[3]); // stw r3, 0x8(r1)']
Translated lis r0 0x100 to: ['gc_env.r[0] = 256 << 16; // lis r0, 0x100']
Processing opcode: stw, operands: ['r4', '0xc(r1)']
Translated stw r4 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[4]); // stw r4, 0xC(r1)']
Processing opcode: addi, operands: ['r4', 'r1', '0x6c']
Translated addi r4 r1 0x6c to: ['gc_env.r[4] = gc_env.r[1] + 108; // addi r4, r1, 0x6c']
Processing opcode: stw, operands: ['r5', '0x10(r1)']
Translated stw r5 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[5]); // stw r5, 0x10(r1)']
Processing opcode: stw, operands: ['r6', '0x14(r1)']
Translated stw r6 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[6]); // stw r6, 0x14(r1)']
Processing opcode: stw, operands: ['r7', '0x18(r1)']
Translated stw r7 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[7]); // stw r7, 0x18(r1)']
Processing opcode: stw, operands: ['r8', '0x1c(r1)']
Translated stw r8 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[8]); // stw r8, 0x1C(r1)']
Processing opcode: stw, operands: ['r9', '0x20(r1)']
Translated stw r9 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[9]); // stw r9, 0x20(r1)']
Processing opcode: stw, operands: ['r10', '0x24(r1)']
Translated stw r10 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[10]); // stw r10, 0x24(r1)']
Processing opcode: stw, operands: ['r0', '0x6c(r1)']
Translated stw r0 0x6c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x6C, gc_env.r[0]); // stw r0, 0x6C(r1)']
Processing opcode: addi, operands: ['r0', 'r1', '0x80']
Translated addi r0 r1 0x80 to: ['gc_env.r[0] = gc_env.r[1] + 128; // addi r0, r1, 0x80']
Processing opcode: stw, operands: ['r0', '0x70(r1)']
Translated stw r0 0x70(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x70, gc_env.r[0]); // stw r0, 0x70(r1)']
Processing opcode: addi, operands: ['r0', 'r1', '0x8']
Translated addi r0 r1 0x8 to: ['gc_env.r[0] = gc_env.r[1] + 8; // addi r0, r1, 0x8']
Processing opcode: stw, operands: ['r0', '0x74(r1)']
Translated stw r0 0x74(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x74, gc_env.r[0]); // stw r0, 0x74(r1)']
Translated bl vprintf to: vprintf((const char *)gc_env.r[3], (void *)gc_env.r[4]);
Processing opcode: lwz, operands: ['r0', '0x7c(r1)']
Translated lwz r0 0x7c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x7C); // lwz r0, 0x7C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x78']
Translated addi r1 r1 0x78 to: ['gc_env.r[1] += 120; // addi r1, r1, 0x78']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r5 __OSErrorTable@ha to: ['gc_env.r[5] = ((uint32_t)&__OSErrorTable >> 16) & 0xFFFF; // lis r5, __OSErrorTable@ha']
Translated clrlslwi r3 r3 16 2 to: ['gc_env.r[3] = (gc_env.r[3] << 2) & 0xFFFF; // clrlslwi r3, r3, 16, 2']
Processing opcode: addi, operands: ['r0', 'r5', '__OSErrorTable@l']
Translated addi r0 r5 __OSErrorTable@l to: ['gc_env.r[0] = gc_env.r[5] + ((uint32_t)&__OSErrorTable & 0xFFFF); // addi r0, r5, __OSErrorTable@l']
Processing opcode: add, operands: ['r5', 'r0', 'r3']
Translated add r5 r0 r3 to: ['gc_env.r[5] = gc_env.r[0] + gc_env.r[3]; // add r5, r0, r3']
Processing opcode: lwz, operands: ['r3', '0x0(r5)']
Translated lwz r3 0x0(r5) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r3, (r5)']
Processing opcode: stw, operands: ['r4', '0x0(r5)']
Translated stw r4 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[4]); // stw r4, (r5)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x38(r1)']
Translated stwu r1 -0x38(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x38, gc_env.r[1]); // stwu r1, -0x38(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x38;']
Translated stmw r25 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[25]); // stmw r25, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[26]); // stmw r25, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[27]); // stmw r25, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[28]); // stmw r25, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[29]); // stmw r25, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[30]); // stmw r25, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[31]); // stmw r25, 0x1C(r1)']
Translated mr r31 r4 to: gc_env.r[31] = gc_env.r[4]; // Move register
Processing opcode: addi, operands: ['r25', 'r3', '0x0']
Translated addi r25 r3 0x0 to: ['gc_env.r[25] = gc_env.r[3] + 0; // addi r25, r3, 0x0']
Processing opcode: addi, operands: ['r26', 'r5', '0x0']
Translated addi r26 r5 0x0 to: ['gc_env.r[26] = gc_env.r[5] + 0; // addi r26, r5, 0x0']
Processing opcode: addi, operands: ['r27', 'r6', '0x0']
Translated addi r27 r6 0x0 to: ['gc_env.r[27] = gc_env.r[6] + 0; // addi r27, r6, 0x0']
Processing opcode: lwz, operands: ['r0', '0x19c(r4)']
Translated lwz r0 0x19c(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x19C); // lwz r0, 0x19C(r4)']
Translated lis r4 "@10_8001AD28"@ha to: ['gc_env.r[4] = ((uint32_t)&_10_8001AD28 >> 16) & 0xFFFF; // lis r4, "@10_8001AD28"@ha']
Processing opcode: addi, operands: ['r29', 'r4', '"@10_8001AD28"@l']
Translated addi r29 r4 "@10_8001AD28"@l to: ['gc_env.r[29] = (uint32_t)&_10_8001AD28; // lis + addi @10_8001AD28 (completing pattern)']
Translated rlwinm. r0 r0 0 30 30 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x2; // rlwinm r0, r0, 0, 30, 30', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_800075A8 to: if (gc_env.cr[0] != 0) goto L_800075A8;
Processing opcode: addi, operands: ['r3', 'r29', '0x5c']
Translated addi r3 r29 0x5c to: ['gc_env.r[3] = gc_env.r[29] + 92; // addi r3, r29, 0x5c']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated clrlwi r4 r25 24 to: ['gc_env.r[4] = gc_env.r[25] & 0xFF; // clrlwi r4, r25, 24']
Translated bl OSReport to: OSReport();
Translated b .L_80007620 to: goto L_80007620;
Translated clrlwi r30 r25 24 to: ['gc_env.r[30] = gc_env.r[25] & 0xFF; // clrlwi r30, r25, 24']
Translated lis r3 __OSErrorTable@ha to: ['gc_env.r[3] = ((uint32_t)&__OSErrorTable >> 16) & 0xFFFF; // lis r3, __OSErrorTable@ha']
Translated clrlslwi r4 r25 24 2 to: ['gc_env.r[4] = (gc_env.r[25] << 2) & 0xFF; // clrlslwi r4, r25, 24, 2']
Processing opcode: addi, operands: ['r0', 'r3', '__OSErrorTable@l']
Translated addi r0 r3 __OSErrorTable@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&__OSErrorTable & 0xFFFF); // addi r0, r3, __OSErrorTable@l']
Processing opcode: add, operands: ['r28', 'r0', 'r4']
Translated add r28 r0 r4 to: ['gc_env.r[28] = gc_env.r[0] + gc_env.r[4]; // add r28, r0, r4']
Processing opcode: lwz, operands: ['r0', '0x0(r28)']
Translated lwz r0 0x0(r28) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r0, (r28)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800075FC to: if (gc_env.cr[0] == 0) goto L_800075FC;
Translated bl OSDisableScheduler to: OSDisableScheduler();
Processing opcode: lwz, operands: ['r12', '0x0(r28)']
Translated lwz r12 0x0(r28) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r12, (r28)']
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r5', 'r26', '0x0']
Translated addi r5 r26 0x0 to: ['gc_env.r[5] = gc_env.r[26] + 0; // addi r5, r26, 0x0']
Processing opcode: addi, operands: ['r6', 'r27', '0x0']
Translated addi r6 r27 0x0 to: ['gc_env.r[6] = gc_env.r[27] + 0; // addi r6, r27, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl OSEnableScheduler to: OSEnableScheduler();
Translated bl __OSReschedule to: __OSReschedule();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSLoadContext to: OSLoadContext();
Translated clrlwi r0 r25 24 to: ['gc_env.r[0] = gc_env.r[25] & 0xFF; // clrlwi r0, r25, 24']
Translated cmplwi r0 0x8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x8) ? 0 : ((uint32_t)gc_env.r[0] < 0x8 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80007610 to: if (gc_env.cr[0] != 0) goto L_80007610;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSLoadContext to: OSLoadContext();
Processing opcode: addi, operands: ['r3', 'r29', '0x7c']
Translated addi r3 r29 0x7c to: ['gc_env.r[3] = gc_env.r[29] + 124; // addi r3, r29, 0x7c']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated clrlwi r4 r25 24 to: ['gc_env.r[4] = gc_env.r[25] & 0xFF; // clrlwi r4, r25, 24']
Translated bl OSReport to: OSReport();
Processing opcode: li, operands: ['r3', '"@32_8001EE10"@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSDumpContext to: OSDumpContext();
Processing opcode: addi, operands: ['r4', 'r26', '0x0']
Translated addi r4 r26 0x0 to: ['gc_env.r[4] = gc_env.r[26] + 0; // addi r4, r26, 0x0']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: addi, operands: ['r5', 'r27', '0x0']
Translated addi r5 r27 0x0 to: ['gc_env.r[5] = gc_env.r[27] + 0; // addi r5, r27, 0x0']
Processing opcode: addi, operands: ['r3', 'r29', '0x94']
Translated addi r3 r29 0x94 to: ['gc_env.r[3] = gc_env.r[29] + 148; // addi r3, r29, 0x94']
Translated bl OSReport to: OSReport();
Translated bl OSGetTime to: OSGetTime();
Processing opcode: addi, operands: ['r5', 'r3', '0x0']
Translated addi r5 r3 0x0 to: ['gc_env.r[5] = gc_env.r[3] + 0; // addi r5, r3, 0x0']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: addi, operands: ['r6', 'r4', '0x0']
Translated addi r6 r4 0x0 to: ['gc_env.r[6] = gc_env.r[4] + 0; // addi r6, r4, 0x0']
Processing opcode: addi, operands: ['r3', 'r29', '0xc8']
Translated addi r3 r29 0xc8 to: ['gc_env.r[3] = gc_env.r[29] + 200; // addi r3, r29, 0xc8']
Translated bl OSReport to: OSReport();
Translated clrlwi r0 r25 24 to: ['gc_env.r[0] = gc_env.r[25] & 0xFF; // clrlwi r0, r25, 24']
Translated cmplwi r0 0xf to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xf) ? 0 : ((uint32_t)gc_env.r[0] < 0xf ? -1 : 1); // Logical compare with immediate
Translated bgt .L_8000772C to: ['if (gc_env.cr[0] & 0x4) goto L_8000772C; // bgt .L_8000772C']
Translated lis r3 "@43_8001B004"@ha to: ['gc_env.r[3] = ((uint32_t)&_43_8001B004 >> 16) & 0xFFFF; // lis r3, "@43_8001B004"@ha']
Processing opcode: addi, operands: ['r3', 'r3', '"@43_8001B004"@l']
Translated addi r3 r3 "@43_8001B004"@l to: ['gc_env.r[3] = (uint32_t)&_43_8001B004; // lis + addi @43_8001B004 (completing pattern)']
Translated slwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] << 2; // slwi r0, r0, 2']
Translated lwzx r0 r3 r0 to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + gc_env.r[0]); // lwzx r0, r3, r0']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bctr  to: ['return gc_env.ctr; // bctr']
Processing opcode: lwz, operands: ['r4', '0x198(r31)']
Translated lwz r4 0x198(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x198); // lwz r4, 0x198(r31)']
Processing opcode: addi, operands: ['r5', 'r27', '0x0']
Translated addi r5 r27 0x0 to: ['gc_env.r[5] = gc_env.r[27] + 0; // addi r5, r27, 0x0']
Processing opcode: addi, operands: ['r3', 'r29', '0xd8']
Translated addi r3 r29 0xd8 to: ['gc_env.r[3] = gc_env.r[29] + 216; // addi r3, r29, 0xd8']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated b .L_8000772C to: goto L_8000772C;
Processing opcode: lwz, operands: ['r4', '0x198(r31)']
Translated lwz r4 0x198(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x198); // lwz r4, 0x198(r31)']
Processing opcode: addi, operands: ['r3', 'r29', '0x138']
Translated addi r3 r29 0x138 to: ['gc_env.r[3] = gc_env.r[29] + 312; // addi r3, r29, 0x138']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated b .L_8000772C to: goto L_8000772C;
Processing opcode: lwz, operands: ['r4', '0x198(r31)']
Translated lwz r4 0x198(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x198); // lwz r4, 0x198(r31)']
Processing opcode: addi, operands: ['r5', 'r27', '0x0']
Translated addi r5 r27 0x0 to: ['gc_env.r[5] = gc_env.r[27] + 0; // addi r5, r27, 0x0']
Processing opcode: addi, operands: ['r3', 'r29', '0x184']
Translated addi r3 r29 0x184 to: ['gc_env.r[3] = gc_env.r[29] + 388; // addi r3, r29, 0x184']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated b .L_8000772C to: goto L_8000772C;
Processing opcode: lwz, operands: ['r4', '0x198(r31)']
Translated lwz r4 0x198(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x198); // lwz r4, 0x198(r31)']
Processing opcode: addi, operands: ['r5', 'r27', '0x0']
Translated addi r5 r27 0x0 to: ['gc_env.r[5] = gc_env.r[27] + 0; // addi r5, r27, 0x0']
Processing opcode: addi, operands: ['r3', 'r29', '0x1e8']
Translated addi r3 r29 0x1e8 to: ['gc_env.r[3] = gc_env.r[29] + 488; // addi r3, r29, 0x1e8']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated b .L_8000772C to: goto L_8000772C;
Processing opcode: li, operands: ['r3', '"@32_8001EE10"@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated lis r30 0xcc00 to: ['gc_env.r[30] = -13312 << 16; // lis r30, 0xcc00']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: addi, operands: ['r31', 'r30', '0x5000']
Translated addi r31 r30 0x5000 to: ['gc_env.r[31] = gc_env.r[30] + 20480; // addi r31, r30, 0x5000']
Processing opcode: lhz, operands: ['r4', '0x5030(r30)']
Translated lhz r4 0x5030(r30) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x5030); // lhz r4, 0x5030(r30)']
Processing opcode: addi, operands: ['r3', 'r29', '0x248']
Translated addi r3 r29 0x248 to: ['gc_env.r[3] = gc_env.r[29] + 584; // addi r3, r29, 0x248']
Processing opcode: lhz, operands: ['r5', '0x5032(r30)']
Translated lhz r5 0x5032(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x5032); // lhz r5, 0x5032(r30)']
Translated bl OSReport to: OSReport();
Processing opcode: lhz, operands: ['r4', '0x20(r31)']
Translated lhz r4 0x20(r31) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x20); // lhz r4, 0x20(r31)']
Processing opcode: addi, operands: ['r3', 'r29', '0x268']
Translated addi r3 r29 0x268 to: ['gc_env.r[3] = gc_env.r[29] + 616; // addi r3, r29, 0x268']
Processing opcode: lhz, operands: ['r5', '0x22(r31)']
Translated lhz r5 0x22(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x22); // lhz r5, 0x22(r31)']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: lwz, operands: ['r4', '0x6014(r30)']
Translated lwz r4 0x6014(r30) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x6014); // lwz r4, 0x6014(r30)']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: addi, operands: ['r3', 'r29', '0x288']
Translated addi r3 r29 0x288 to: ['gc_env.r[3] = gc_env.r[29] + 648; // addi r3, r29, 0x288']
Translated bl OSReport to: OSReport();
Translated lha r4 __OSLastInterrupt@sda21(r0) to: ['// Error processing lha r4 __OSLastInterrupt@sda21(r0): Invalid immediate: __OSLastInterrupt@sda21']
Processing opcode: addi, operands: ['r3', 'r29', '0x2a4']
Translated addi r3 r29 0x2a4 to: ['gc_env.r[3] = gc_env.r[29] + 676; // addi r3, r29, 0x2a4']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: lwz, operands: ['r5', '__OSLastInterruptSrr0@sda21(r0)']
Translated lwz r5 __OSLastInterruptSrr0@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&__OSLastInterruptSrr0); // lwz r5, __OSLastInterruptSrr0@sda21(r0)']
Processing opcode: lwz, operands: ['r7', '__OSLastInterruptTime@sda21(r0)']
Translated lwz r7 __OSLastInterruptTime@sda21(r0) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, (uint32_t)&__OSLastInterruptTime); // lwz r7, __OSLastInterruptTime@sda21(r0)']
Processing opcode: lwz, operands: ['r8', '__OSLastInterruptTime+0x4@sda21(r0)']
Translated lwz r8 __OSLastInterruptTime+0x4@sda21(r0) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, (uint32_t)&__OSLastInterruptTime + 0x4); // lwz r8, __OSLastInterruptTime@sda21(r0)']
Translated bl OSReport to: OSReport();
Translated bl PPCHalt to: PPCHalt();
Translated lmw r25 0x1c(r1) to: ['gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r25, 0x1C(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r25, 0x1C(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r25, 0x1C(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r25, 0x1C(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r25, 0x1C(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r25, 0x1C(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r25, 0x1C(r1)']
Processing opcode: lwz, operands: ['r0', '0x3c(r1)']
Translated lwz r0 0x3c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lwz r0, 0x3C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x38']
Translated addi r1 r1 0x38 to: ['gc_env.r[1] += 56; // addi r1, r1, 0x38']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mfmsr r3 to: gc_env.r[3] = gc_env.msr; // Move from machine state register
Translated rlwinm r4 r3 0 17 15 to: ['gc_env.r[4] = (gc_env.r[3] << 0) & -0x8001; // rlwinm r4, r3, 0, 17, 15']
Translated mtmsr r4 to: gc_env.msr = gc_env.r[4]; // Move to machine state register
Translated extrwi r3 r3 1 16 to: ['gc_env.r[3] = (gc_env.r[3] >> 15) & 0x1; // extrwi r3, r3, 1, 16']
Translated blr  to: return;
Translated mfmsr r3 to: gc_env.r[3] = gc_env.msr; // Move from machine state register
Translated ori r4 r3 0x8000 to: ['gc_env.r[4] = gc_env.r[3] | 32768; // ori r4, r3, 0x8000']
Translated mtmsr r4 to: gc_env.msr = gc_env.r[4]; // Move to machine state register
Translated extrwi r3 r3 1 16 to: ['gc_env.r[3] = (gc_env.r[3] >> 15) & 0x1; // extrwi r3, r3, 1, 16']
Translated blr  to: return;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated mfmsr r4 to: gc_env.r[4] = gc_env.msr; // Move from machine state register
Translated beq .L_8000779C to: if (gc_env.cr[0] == 0) goto L_8000779C;
Translated ori r5 r4 0x8000 to: ['gc_env.r[5] = gc_env.r[4] | 32768; // ori r5, r4, 0x8000']
Translated b .L_800077A0 to: goto L_800077A0;
Translated rlwinm r5 r4 0 17 15 to: ['gc_env.r[5] = (gc_env.r[4] << 0) & -0x8001; // rlwinm r5, r4, 0, 17, 15']
Translated mtmsr r5 to: gc_env.msr = gc_env.r[5]; // Move to machine state register
Translated extrwi r4 r4 1 16 to: ['gc_env.r[4] = (gc_env.r[4] >> 15) & 0x1; // extrwi r4, r4, 1, 16']
Translated blr  to: return;
Translated extsh r0 r3 to: ['gc_env.r[0] = (int32_t)(int16_t)(gc_env.r[3] & 0xFFFF); // extsh r0, r3']
Processing opcode: lwz, operands: ['r3', 'InterruptHandlerTable_8001EE98@sda21(r0)']
Translated lwz r3 InterruptHandlerTable_8001EE98@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&InterruptHandlerTable_8001EE98); // lwz r3, InterruptHandlerTable_8001EE98@sda21(r0)']
Translated slwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] << 2; // slwi r0, r0, 2']
Processing opcode: add, operands: ['r5', 'r3', 'r0']
Translated add r5 r3 r0 to: ['gc_env.r[5] = gc_env.r[3] + gc_env.r[0]; // add r5, r3, r0']
Processing opcode: lwz, operands: ['r3', '0x0(r5)']
Translated lwz r3 0x0(r5) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r3, (r5)']
Processing opcode: stw, operands: ['r4', '0x0(r5)']
Translated stw r4 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[4]); // stw r4, (r5)']
Translated blr  to: return;
Translated extsh r0 r3 to: ['gc_env.r[0] = (int32_t)(int16_t)(gc_env.r[3] & 0xFFFF); // extsh r0, r3']
Processing opcode: lwz, operands: ['r3', 'InterruptHandlerTable_8001EE98@sda21(r0)']
Translated lwz r3 InterruptHandlerTable_8001EE98@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&InterruptHandlerTable_8001EE98); // lwz r3, InterruptHandlerTable_8001EE98@sda21(r0)']
Translated slwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] << 2; // slwi r0, r0, 2']
Translated lwzx r3 r3 r0 to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + gc_env.r[0]); // lwzx r3, r3, r0']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated lis r31 0x8000 to: ['gc_env.r[31] = -32768 << 16; // lis r31, 0x8000']
Processing opcode: addi, operands: ['r0', 'r31', '0x3040']
Translated addi r0 r31 0x3040 to: ['gc_env.r[0] = gc_env.r[31] + 12352; // addi r0, r31, 0x3040']
Processing opcode: stw, operands: ['r0', 'InterruptHandlerTable_8001EE98@sda21(r0)']
Translated stw r0 InterruptHandlerTable_8001EE98@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&InterruptHandlerTable_8001EE98, gc_env.r[0]); // stw r0, InterruptHandlerTable_8001EE98@sda21(r0)']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r5', '0x80']
Translated li r5 0x80 to: ['gc_env.r[5] = 0x80; // li r5, 0x80']
Processing opcode: lwz, operands: ['r3', 'InterruptHandlerTable_8001EE98@sda21(r0)']
Translated lwz r3 InterruptHandlerTable_8001EE98@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&InterruptHandlerTable_8001EE98); // lwz r3, InterruptHandlerTable_8001EE98@sda21(r0)']
Translated bl memset to: memset();
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0xc4(r31)']
Translated stw r0 0xc4(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC4, gc_env.r[0]); // stw r0, 0xC4(r31)']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r4', 'r3', '0x3000']
Translated addi r4 r3 0x3000 to: ['gc_env.r[4] = gc_env.r[3] + 12288; // addi r4, r3, 0x3000']
Processing opcode: stw, operands: ['r0', '0xc8(r31)']
Translated stw r0 0xc8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC8, gc_env.r[0]); // stw r0, 0xC8(r31)']
Processing opcode: li, operands: ['r0', '0xf0']
Translated li r0 0xf0 to: ['gc_env.r[0] = 0xf0; // li r0, 0xf0']
Processing opcode: li, operands: ['r3', '-0x20']
Translated li r3 -0x20 to: ['gc_env.r[3] = -0x20; // li r3, -0x20']
Processing opcode: stw, operands: ['r0', '0x4(r4)']
Translated stw r0 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[0]); // stw r0, 0x4(r4)']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Translated lis r3 ExternalInterruptHandler@ha to: ['gc_env.r[3] = ((uint32_t)&ExternalInterruptHandler >> 16) & 0xFFFF; // lis r3, ExternalInterruptHandler@ha']
Processing opcode: addi, operands: ['r4', 'r3', 'ExternalInterruptHandler@l']
Translated addi r4 r3 ExternalInterruptHandler@l to: ['gc_env.r[4] = (uint32_t)&ExternalInterruptHandler; // lis + addi ExternalInterruptHandler (completing pattern)']
Processing opcode: li, operands: ['r3', '0x4']
Translated li r3 0x4 to: ['gc_env.r[3] = 0x4; // li r3, 0x4']
Translated bl __OSSetExceptionHandler to: __OSSetExceptionHandler();
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated cmpwi r0 0xc to: gc_env.cr[0] = (gc_env.r[0] == 0xc) ? 0 : (gc_env.r[0] < 0xc ? -1 : 1); // Compare with immediate
Translated bge .L_8000787C to: if (gc_env.cr[0] >= 0) goto L_8000787C;
Translated cmpwi r0 0x8 to: gc_env.cr[0] = (gc_env.r[0] == 0x8) ? 0 : (gc_env.r[0] < 0x8 ? -1 : 1); // Compare with immediate
Translated beq .L_8000795C to: if (gc_env.cr[0] == 0) goto L_8000795C;
Translated bge .L_8000798C to: if (gc_env.cr[0] >= 0) goto L_8000798C;
Translated cmpwi r0 0x5 to: gc_env.cr[0] = (gc_env.r[0] == 0x5) ? 0 : (gc_env.r[0] < 0x5 ? -1 : 1); // Compare with immediate
Translated bge .L_80007908 to: if (gc_env.cr[0] >= 0) goto L_80007908;
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bge .L_8000789C to: if (gc_env.cr[0] >= 0) goto L_8000789C;
Translated b .L_80007B24 to: goto L_80007B24;
Translated cmpwi r0 0x11 to: gc_env.cr[0] = (gc_env.r[0] == 0x11) ? 0 : (gc_env.r[0] < 0x11 ? -1 : 1); // Compare with immediate
Translated bge .L_80007890 to: if (gc_env.cr[0] >= 0) goto L_80007890;
Translated cmpwi r0 0xf to: gc_env.cr[0] = (gc_env.r[0] == 0xf) ? 0 : (gc_env.r[0] < 0xf ? -1 : 1); // Compare with immediate
Translated bge .L_80007A30 to: if (gc_env.cr[0] >= 0) goto L_80007A30;
Translated b .L_800079DC to: goto L_800079DC;
Translated cmpwi r0 0x1b to: gc_env.cr[0] = (gc_env.r[0] == 0x1b) ? 0 : (gc_env.r[0] < 0x1b ? -1 : 1); // Compare with immediate
Translated bge .L_80007B24 to: if (gc_env.cr[0] >= 0) goto L_80007B24;
Translated b .L_80007A70 to: goto L_80007A70;
Translated clrrwi r0 r4 31 to: gc_env.r[0] = gc_env.r[4] & ~((1ULL << 31) - 1); // Clear rightmost 31 bits
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bne .L_800078B0 to: if (gc_env.cr[0] != 0) goto L_800078B0;
Translated ori r5 r5 0x1 to: ['gc_env.r[5] |= 1; // ori r5, r5, 0x1']
Translated rlwinm r0 r4 0 1 1 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x40000000; // rlwinm r0, r4, 0, 1, 1']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800078C0 to: if (gc_env.cr[0] != 0) goto L_800078C0;
Translated ori r5 r5 0x2 to: ['gc_env.r[5] |= 2; // ori r5, r5, 0x2']
Translated rlwinm r0 r4 0 2 2 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x20000000; // rlwinm r0, r4, 0, 2, 2']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800078D0 to: if (gc_env.cr[0] != 0) goto L_800078D0;
Translated ori r5 r5 0x4 to: ['gc_env.r[5] |= 4; // ori r5, r5, 0x4']
Translated rlwinm r0 r4 0 3 3 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x10000000; // rlwinm r0, r4, 0, 3, 3']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800078E0 to: if (gc_env.cr[0] != 0) goto L_800078E0;
Translated ori r5 r5 0x8 to: ['gc_env.r[5] |= 8; // ori r5, r5, 0x8']
Translated rlwinm r0 r4 0 4 4 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x8000000; // rlwinm r0, r4, 0, 4, 4']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800078F0 to: if (gc_env.cr[0] != 0) goto L_800078F0;
Translated ori r5 r5 0x10 to: ['gc_env.r[5] |= 16; // ori r5, r5, 0x10']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Translated clrlwi r0 r5 16 to: ['gc_env.r[0] = gc_env.r[5] & 0xFFFF; // clrlwi r0, r5, 16']
Processing opcode: addi, operands: ['r4', 'r4', '0x4000']
Translated addi r4 r4 0x4000 to: ['gc_env.r[4] += 16384; // addi r4, r4, 0x4000']
Processing opcode: sth, operands: ['r0', '0x1c(r4)']
Translated sth r0 0x1c(r4) to: ['gc_mem_write16(gc_env.ram, gc_env.r[4] + 0x1C, gc_env.r[0]); // sth r0, 0x1C(r4)']
Translated clrlwi r3 r3 5 to: ['gc_env.r[3] = gc_env.r[3] & 0x7FFFFFF; // clrlwi r3, r3, 5']
Translated b .L_80007B24 to: goto L_80007B24;
Translated lis r5 0xcc00 to: ['gc_env.r[5] = -13312 << 16; // lis r5, 0xcc00']
Processing opcode: addi, operands: ['r5', 'r5', '0x5000']
Translated addi r5 r5 0x5000 to: ['gc_env.r[5] += 20480; // addi r5, r5, 0x5000']
Processing opcode: addi, operands: ['r5', 'r5', '0xa']
Translated addi r5 r5 0xa to: ['gc_env.r[5] += 10; // addi r5, r5, 0xa']
Translated rlwinm r0 r4 0 5 5 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x4000000; // rlwinm r0, r4, 0, 5, 5']
Processing opcode: lhz, operands: ['r6', '0x0(r5)']
Translated lhz r6 0x0(r5) to: ['gc_env.r[6] = gc_mem_read16(gc_env.ram, gc_env.r[5] + 0x0); // lhz r6, 0x0(r5)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated rlwinm r6 r6 0 29 22 to: ['gc_env.r[6] = (gc_env.r[6] << 0) & -0x1F9; // rlwinm r6, r6, 0, 29, 22']
Translated bne .L_8000792C to: if (gc_env.cr[0] != 0) goto L_8000792C;
Translated ori r6 r6 0x10 to: ['gc_env.r[6] |= 16; // ori r6, r6, 0x10']
Translated rlwinm r0 r4 0 6 6 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x2000000; // rlwinm r0, r4, 0, 6, 6']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000793C to: if (gc_env.cr[0] != 0) goto L_8000793C;
Translated ori r6 r6 0x40 to: ['gc_env.r[6] |= 64; // ori r6, r6, 0x40']
Translated rlwinm r0 r4 0 7 7 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x1000000; // rlwinm r0, r4, 0, 7, 7']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000794C to: if (gc_env.cr[0] != 0) goto L_8000794C;
Translated ori r6 r6 0x100 to: ['gc_env.r[6] |= 256; // ori r6, r6, 0x100']
Translated clrlwi r0 r6 16 to: ['gc_env.r[0] = gc_env.r[6] & 0xFFFF; // clrlwi r0, r6, 16']
Processing opcode: sth, operands: ['r0', '0x0(r5)']
Translated sth r0 0x0(r5) to: ['gc_mem_write16(gc_env.ram, gc_env.r[5], gc_env.r[0]); // sth r0, (r5)']
Translated rlwinm r3 r3 0 8 4 to: ['gc_env.r[3] = (gc_env.r[3] << 0) & -0x7000001; // rlwinm r3, r3, 0, 8, 4']
Translated b .L_80007B24 to: goto L_80007B24;
Translated rlwinm r0 r4 0 8 8 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x800000; // rlwinm r0, r4, 0, 8, 8']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: lwz, operands: ['r5', '0x6c00(r4)']
Translated lwz r5 0x6c00(r4) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x6C00); // lwz r5, 0x6C00(r4)']
Processing opcode: li, operands: ['r0', '-0x2d']
Translated li r0 -0x2d to: ['gc_env.r[0] = -0x2d; // li r0, -0x2d']
Translated and r5 r5 r0 to: gc_env.r[5] = gc_env.r[5] & gc_env.r[0];
Translated bne .L_8000797C to: if (gc_env.cr[0] != 0) goto L_8000797C;
Translated ori r5 r5 0x4 to: ['gc_env.r[5] |= 4; // ori r5, r5, 0x4']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: stw, operands: ['r5', '0x6c00(r4)']
Translated stw r5 0x6c00(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x6C00, gc_env.r[5]); // stw r5, 0x6C00(r4)']
Translated rlwinm r3 r3 0 9 7 to: ['gc_env.r[3] = (gc_env.r[3] << 0) & -0x800001; // rlwinm r3, r3, 0, 9, 7']
Translated b .L_80007B24 to: goto L_80007B24;
Translated rlwinm r0 r4 0 9 9 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x400000; // rlwinm r0, r4, 0, 9, 9']
Translated lis r5 0xcc00 to: ['gc_env.r[5] = -13312 << 16; // lis r5, 0xcc00']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: lwz, operands: ['r5', '0x6800(r5)']
Translated lwz r5 0x6800(r5) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x6800); // lwz r5, 0x6800(r5)']
Processing opcode: li, operands: ['r0', '-0x2c10']
Translated li r0 -0x2c10 to: ['gc_env.r[0] = -0x2c10; // li r0, -0x2c10']
Translated and r5 r5 r0 to: gc_env.r[5] = gc_env.r[5] & gc_env.r[0];
Translated bne .L_800079AC to: if (gc_env.cr[0] != 0) goto L_800079AC;
Translated ori r5 r5 0x1 to: ['gc_env.r[5] |= 1; // ori r5, r5, 0x1']
Translated rlwinm r0 r4 0 10 10 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x200000; // rlwinm r0, r4, 0, 10, 10']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800079BC to: if (gc_env.cr[0] != 0) goto L_800079BC;
Translated ori r5 r5 0x4 to: ['gc_env.r[5] |= 4; // ori r5, r5, 0x4']
Translated rlwinm r0 r4 0 11 11 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x100000; // rlwinm r0, r4, 0, 11, 11']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800079CC to: if (gc_env.cr[0] != 0) goto L_800079CC;
Translated ori r5 r5 0x400 to: ['gc_env.r[5] |= 1024; // ori r5, r5, 0x400']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: stw, operands: ['r5', '0x6800(r4)']
Translated stw r5 0x6800(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x6800, gc_env.r[5]); // stw r5, 0x6800(r4)']
Translated rlwinm r3 r3 0 12 8 to: ['gc_env.r[3] = (gc_env.r[3] << 0) & -0x700001; // rlwinm r3, r3, 0, 12, 8']
Translated b .L_80007B24 to: goto L_80007B24;
Translated lis r5 0xcc00 to: ['gc_env.r[5] = -13312 << 16; // lis r5, 0xcc00']
Processing opcode: addi, operands: ['r6', 'r5', '0x6800']
Translated addi r6 r5 0x6800 to: ['gc_env.r[6] = gc_env.r[5] + 26624; // addi r6, r5, 0x6800']
Processing opcode: addi, operands: ['r6', 'r6', '0x14']
Translated addi r6 r6 0x14 to: ['gc_env.r[6] += 20; // addi r6, r6, 0x14']
Translated rlwinm r0 r4 0 12 12 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x80000; // rlwinm r0, r4, 0, 12, 12']
Processing opcode: lwz, operands: ['r7', '0x0(r6)']
Translated lwz r7 0x0(r6) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r7, (r6)']
Processing opcode: li, operands: ['r5', '-0xc10']
Translated li r5 -0xc10 to: ['gc_env.r[5] = -0xc10; // li r5, -0xc10']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated and r7 r7 r5 to: gc_env.r[7] = gc_env.r[7] & gc_env.r[5];
Translated bne .L_80007A04 to: if (gc_env.cr[0] != 0) goto L_80007A04;
Translated ori r7 r7 0x1 to: ['gc_env.r[7] |= 1; // ori r7, r7, 0x1']
Translated rlwinm r0 r4 0 13 13 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x40000; // rlwinm r0, r4, 0, 13, 13']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80007A14 to: if (gc_env.cr[0] != 0) goto L_80007A14;
Translated ori r7 r7 0x4 to: ['gc_env.r[7] |= 4; // ori r7, r7, 0x4']
Translated rlwinm r0 r4 0 14 14 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x20000; // rlwinm r0, r4, 0, 14, 14']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80007A24 to: if (gc_env.cr[0] != 0) goto L_80007A24;
Translated ori r7 r7 0x400 to: ['gc_env.r[7] |= 1024; // ori r7, r7, 0x400']
Processing opcode: stw, operands: ['r7', '0x0(r6)']
Translated stw r7 0x0(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6], gc_env.r[7]); // stw r7, (r6)']
Translated rlwinm r3 r3 0 15 11 to: ['gc_env.r[3] = (gc_env.r[3] << 0) & -0xE0001; // rlwinm r3, r3, 0, 15, 11']
Translated b .L_80007B24 to: goto L_80007B24;
Translated lis r5 0xcc00 to: ['gc_env.r[5] = -13312 << 16; // lis r5, 0xcc00']
Processing opcode: addi, operands: ['r5', 'r5', '0x6800']
Translated addi r5 r5 0x6800 to: ['gc_env.r[5] += 26624; // addi r5, r5, 0x6800']
Processing opcode: addi, operands: ['r5', 'r5', '0x28']
Translated addi r5 r5 0x28 to: ['gc_env.r[5] += 40; // addi r5, r5, 0x28']
Translated rlwinm r0 r4 0 15 15 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x10000; // rlwinm r0, r4, 0, 15, 15']
Processing opcode: lwz, operands: ['r6', '0x0(r5)']
Translated lwz r6 0x0(r5) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r6, (r5)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated clrrwi r6 r6 4 to: gc_env.r[6] = gc_env.r[6] & ~((1ULL << 4) - 1); // Clear rightmost 4 bits
Translated bne .L_80007A54 to: if (gc_env.cr[0] != 0) goto L_80007A54;
Translated ori r6 r6 0x1 to: ['gc_env.r[6] |= 1; // ori r6, r6, 0x1']
Translated rlwinm r0 r4 0 16 16 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x8000; // rlwinm r0, r4, 0, 16, 16']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80007A64 to: if (gc_env.cr[0] != 0) goto L_80007A64;
Translated ori r6 r6 0x4 to: ['gc_env.r[6] |= 4; // ori r6, r6, 0x4']
Processing opcode: stw, operands: ['r6', '0x0(r5)']
Translated stw r6 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[6]); // stw r6, (r5)']
Translated rlwinm r3 r3 0 17 14 to: ['gc_env.r[3] = (gc_env.r[3] << 0) & -0x18001; // rlwinm r3, r3, 0, 17, 14']
Translated b .L_80007B24 to: goto L_80007B24;
Translated rlwinm r0 r4 0 17 17 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x4000; // rlwinm r0, r4, 0, 17, 17']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: li, operands: ['r5', '0xf0']
Translated li r5 0xf0 to: ['gc_env.r[5] = 0xf0; // li r5, 0xf0']
Translated bne .L_80007A84 to: if (gc_env.cr[0] != 0) goto L_80007A84;
Translated ori r5 r5 0x800 to: ['gc_env.r[5] |= 2048; // ori r5, r5, 0x800']
Translated rlwinm r0 r4 0 20 20 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x800; // rlwinm r0, r4, 0, 20, 20']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80007A94 to: if (gc_env.cr[0] != 0) goto L_80007A94;
Translated ori r5 r5 0x8 to: ['gc_env.r[5] |= 8; // ori r5, r5, 0x8']
Translated rlwinm r0 r4 0 21 21 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x400; // rlwinm r0, r4, 0, 21, 21']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80007AA4 to: if (gc_env.cr[0] != 0) goto L_80007AA4;
Translated ori r5 r5 0x4 to: ['gc_env.r[5] |= 4; // ori r5, r5, 0x4']
Translated rlwinm r0 r4 0 22 22 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x200; // rlwinm r0, r4, 0, 22, 22']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80007AB4 to: if (gc_env.cr[0] != 0) goto L_80007AB4;
Translated ori r5 r5 0x2 to: ['gc_env.r[5] |= 2; // ori r5, r5, 0x2']
Translated rlwinm r0 r4 0 23 23 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x100; // rlwinm r0, r4, 0, 23, 23']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80007AC4 to: if (gc_env.cr[0] != 0) goto L_80007AC4;
Translated ori r5 r5 0x1 to: ['gc_env.r[5] |= 1; // ori r5, r5, 0x1']
Translated rlwinm r0 r4 0 24 24 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x80; // rlwinm r0, r4, 0, 24, 24']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80007AD4 to: if (gc_env.cr[0] != 0) goto L_80007AD4;
Translated ori r5 r5 0x100 to: ['gc_env.r[5] |= 256; // ori r5, r5, 0x100']
Translated rlwinm r0 r4 0 25 25 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x40; // rlwinm r0, r4, 0, 25, 25']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80007AE4 to: if (gc_env.cr[0] != 0) goto L_80007AE4;
Translated ori r5 r5 0x1000 to: ['gc_env.r[5] |= 4096; // ori r5, r5, 0x1000']
Translated rlwinm r0 r4 0 18 18 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x2000; // rlwinm r0, r4, 0, 18, 18']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80007AF4 to: if (gc_env.cr[0] != 0) goto L_80007AF4;
Translated ori r5 r5 0x200 to: ['gc_env.r[5] |= 512; // ori r5, r5, 0x200']
Translated rlwinm r0 r4 0 19 19 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x1000; // rlwinm r0, r4, 0, 19, 19']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80007B04 to: if (gc_env.cr[0] != 0) goto L_80007B04;
Translated ori r5 r5 0x400 to: ['gc_env.r[5] |= 1024; // ori r5, r5, 0x400']
Translated rlwinm r0 r4 0 26 26 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x20; // rlwinm r0, r4, 0, 26, 26']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80007B14 to: if (gc_env.cr[0] != 0) goto L_80007B14;
Translated ori r5 r5 0x2000 to: ['gc_env.r[5] |= 8192; // ori r5, r5, 0x2000']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: addi, operands: ['r4', 'r4', '0x3000']
Translated addi r4 r4 0x3000 to: ['gc_env.r[4] += 12288; // addi r4, r4, 0x3000']
Processing opcode: stw, operands: ['r5', '0x4(r4)']
Translated stw r5 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[5]); // stw r5, 0x4(r4)']
Translated rlwinm r3 r3 0 27 16 to: ['gc_env.r[3] = (gc_env.r[3] << 0) & -0x7FE1; // rlwinm r3, r3, 0, 27, 16']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: stw, operands: ['r29', '0x14(r1)']
Translated stw r29 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stw r29, 0x14(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: lwz, operands: ['r29', '0xc4(r4)']
Translated lwz r29 0xc4(r4) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xC4); // lwz r29, 0xC4(r4)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Processing opcode: lwz, operands: ['r5', '0xc8(r4)']
Translated lwz r5 0xc8(r4) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xC8); // lwz r5, 0xC8(r4)']
Translated or r0 r29 r5 to: ['gc_env.r[0] = gc_env.r[29] | gc_env.r[5]; // or r0, r29, r5']
Translated andc r3 r31 r0 to: ['gc_env.r[3] = gc_env.r[31] & ~gc_env.r[0]; // andc r3, r31, r0']
Translated or r31 r31 r29 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[29]; // or r31, r31, r29']
Processing opcode: stw, operands: ['r31', '0xc4(r4)']
Translated stw r31 0xc4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC4, gc_env.r[31]); // stw r31, 0xC4(r4)']
Translated or r31 r31 r5 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[5]; // or r31, r31, r5']
Translated b .L_80007B70 to: goto L_80007B70;
Translated b .L_80007B74 to: goto L_80007B74;
Translated b .L_80007B80 to: goto L_80007B80;
Translated mr r4 r31 to: gc_env.r[4] = gc_env.r[31]; // Move register
Translated bl fn_80007850 to: fn_80007850();
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80007B78 to: if (gc_env.cr[0] != 0) goto L_80007B78;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: lwz, operands: ['r29', '0x14(r1)']
Translated lwz r29 0x14(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r29, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: stw, operands: ['r29', '0x14(r1)']
Translated stw r29 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stw r29, 0x14(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: lwz, operands: ['r29', '0xc4(r4)']
Translated lwz r29 0xc4(r4) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xC4); // lwz r29, 0xC4(r4)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Processing opcode: lwz, operands: ['r5', '0xc8(r4)']
Translated lwz r5 0xc8(r4) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xC8); // lwz r5, 0xC8(r4)']
Translated or r0 r29 r5 to: ['gc_env.r[0] = gc_env.r[29] | gc_env.r[5]; // or r0, r29, r5']
Translated and r3 r31 r0 to: gc_env.r[3] = gc_env.r[31] & gc_env.r[0];
Translated andc r31 r29 r31 to: ['gc_env.r[31] = gc_env.r[29] & ~gc_env.r[31]; // andc r31, r29, r31']
Processing opcode: stw, operands: ['r31', '0xc4(r4)']
Translated stw r31 0xc4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC4, gc_env.r[31]); // stw r31, 0xC4(r4)']
Translated or r31 r31 r5 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[5]; // or r31, r31, r5']
Translated b .L_80007BF8 to: goto L_80007BF8;
Translated b .L_80007BFC to: goto L_80007BFC;
Translated b .L_80007C08 to: goto L_80007C08;
Translated mr r4 r31 to: gc_env.r[4] = gc_env.r[31]; // Move register
Translated bl fn_80007850 to: fn_80007850();
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80007C00 to: if (gc_env.cr[0] != 0) goto L_80007C00;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: lwz, operands: ['r29', '0x14(r1)']
Translated lwz r29 0x14(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r29, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x28(r1)']
Translated stwu r1 -0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x28, gc_env.r[1]); // stwu r1, -0x28(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x28;']
Processing opcode: stw, operands: ['r31', '0x24(r1)']
Translated stw r31 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[31]); // stw r31, 0x24(r1)']
Processing opcode: stw, operands: ['r30', '0x20(r1)']
Translated stw r30 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[30]); // stw r30, 0x20(r1)']
Processing opcode: stw, operands: ['r29', '0x1c(r1)']
Translated stw r29 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[29]); // stw r29, 0x1C(r1)']
Translated mr r30 r4 to: gc_env.r[30] = gc_env.r[4]; // Move register
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r31', '0x3000(r3)']
Translated lwz r31 0x3000(r3) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x3000); // lwz r31, 0x3000(r3)']
Translated rlwinm r31 r31 0 16 14 to: ['gc_env.r[31] = (gc_env.r[31] << 0) & -0x10001; // rlwinm r31, r31, 0, 16, 14']
Translated cmplwi r31 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == 0x0) ? 0 : ((uint32_t)gc_env.r[31] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007C7C to: if (gc_env.cr[0] == 0) goto L_80007C7C;
Processing opcode: addi, operands: ['r3', 'r3', '0x3000']
Translated addi r3 r3 0x3000 to: ['gc_env.r[3] += 12288; // addi r3, r3, 0x3000']
Processing opcode: lwz, operands: ['r0', '0x4(r3)']
Translated lwz r0 0x4(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4); // lwz r0, 0x4(r3)']
Translated and r0 r31 r0 to: gc_env.r[0] = gc_env.r[31] & gc_env.r[0];
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80007C84 to: if (gc_env.cr[0] != 0) goto L_80007C84;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSLoadContext to: OSLoadContext();
Translated rlwinm r0 r31 0 24 24 to: ['gc_env.r[0] = (gc_env.r[31] << 0) & 0x80; // rlwinm r0, r31, 0, 24, 24']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated beq .L_80007CF0 to: if (gc_env.cr[0] == 0) goto L_80007CF0;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x4000']
Translated addi r3 r3 0x4000 to: ['gc_env.r[3] += 16384; // addi r3, r3, 0x4000']
Processing opcode: lhz, operands: ['r4', '0x1e(r3)']
Translated lhz r4 0x1e(r3) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x1e); // lhz r4, 0x1e(r3)']
Translated clrlwi r3 r4 31 to: ['gc_env.r[3] = gc_env.r[4] & 0x1; // clrlwi r3, r4, 31']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007CB0 to: if (gc_env.cr[0] == 0) goto L_80007CB0;
Translated oris r0 r0 0x8000 to: ['gc_env.r[0] = gc_env.r[0] | 0x80000000; // oris r0, r0, 0x8000']
Translated rlwinm r3 r4 0 30 30 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x2; // rlwinm r3, r4, 0, 30, 30']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007CC0 to: if (gc_env.cr[0] == 0) goto L_80007CC0;
Translated oris r0 r0 0x4000 to: ['gc_env.r[0] = gc_env.r[0] | 0x40000000; // oris r0, r0, 0x4000']
Translated rlwinm r3 r4 0 29 29 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x4; // rlwinm r3, r4, 0, 29, 29']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007CD0 to: if (gc_env.cr[0] == 0) goto L_80007CD0;
Translated oris r0 r0 0x2000 to: ['gc_env.r[0] = gc_env.r[0] | 0x20000000; // oris r0, r0, 0x2000']
Translated rlwinm r3 r4 0 28 28 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x8; // rlwinm r3, r4, 0, 28, 28']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007CE0 to: if (gc_env.cr[0] == 0) goto L_80007CE0;
Translated oris r0 r0 0x1000 to: ['gc_env.r[0] = gc_env.r[0] | 0x10000000; // oris r0, r0, 0x1000']
Translated rlwinm r3 r4 0 27 27 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x10; // rlwinm r3, r4, 0, 27, 27']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007CF0 to: if (gc_env.cr[0] == 0) goto L_80007CF0;
Translated oris r0 r0 0x800 to: ['gc_env.r[0] = gc_env.r[0] | 0x8000000; // oris r0, r0, 0x800']
Translated rlwinm r3 r31 0 25 25 to: ['gc_env.r[3] = (gc_env.r[31] << 0) & 0x40; // rlwinm r3, r31, 0, 25, 25']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007D38 to: if (gc_env.cr[0] == 0) goto L_80007D38;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x5000']
Translated addi r3 r3 0x5000 to: ['gc_env.r[3] += 20480; // addi r3, r3, 0x5000']
Processing opcode: lhz, operands: ['r4', '0xa(r3)']
Translated lhz r4 0xa(r3) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0xa); // lhz r4, 0xa(r3)']
Translated rlwinm r3 r4 0 28 28 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x8; // rlwinm r3, r4, 0, 28, 28']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007D18 to: if (gc_env.cr[0] == 0) goto L_80007D18;
Translated oris r0 r0 0x400 to: ['gc_env.r[0] = gc_env.r[0] | 0x4000000; // oris r0, r0, 0x400']
Translated rlwinm r3 r4 0 26 26 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x20; // rlwinm r3, r4, 0, 26, 26']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007D28 to: if (gc_env.cr[0] == 0) goto L_80007D28;
Translated oris r0 r0 0x200 to: ['gc_env.r[0] = gc_env.r[0] | 0x2000000; // oris r0, r0, 0x200']
Translated rlwinm r3 r4 0 24 24 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x80; // rlwinm r3, r4, 0, 24, 24']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007D38 to: if (gc_env.cr[0] == 0) goto L_80007D38;
Translated oris r0 r0 0x100 to: ['gc_env.r[0] = gc_env.r[0] | 0x1000000; // oris r0, r0, 0x100']
Translated rlwinm r3 r31 0 26 26 to: ['gc_env.r[3] = (gc_env.r[31] << 0) & 0x20; // rlwinm r3, r31, 0, 26, 26']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007D5C to: if (gc_env.cr[0] == 0) goto L_80007D5C;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r3', '0x6c00(r3)']
Translated lwz r3 0x6c00(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6C00); // lwz r3, 0x6C00(r3)']
Translated rlwinm r3 r3 0 28 28 to: ['gc_env.r[3] = (gc_env.r[3] << 0) & 0x8; // rlwinm r3, r3, 0, 28, 28']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007D5C to: if (gc_env.cr[0] == 0) goto L_80007D5C;
Translated oris r0 r0 0x80 to: ['gc_env.r[0] = gc_env.r[0] | 0x800000; // oris r0, r0, 0x80']
Translated rlwinm r3 r31 0 27 27 to: ['gc_env.r[3] = (gc_env.r[31] << 0) & 0x10; // rlwinm r3, r31, 0, 27, 27']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007E08 to: if (gc_env.cr[0] == 0) goto L_80007E08;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r4', '0x6800(r3)']
Translated lwz r4 0x6800(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6800); // lwz r4, 0x6800(r3)']
Translated rlwinm r3 r4 0 30 30 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x2; // rlwinm r3, r4, 0, 30, 30']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007D80 to: if (gc_env.cr[0] == 0) goto L_80007D80;
Translated oris r0 r0 0x40 to: ['gc_env.r[0] = gc_env.r[0] | 0x400000; // oris r0, r0, 0x40']
Translated rlwinm r3 r4 0 28 28 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x8; // rlwinm r3, r4, 0, 28, 28']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007D90 to: if (gc_env.cr[0] == 0) goto L_80007D90;
Translated oris r0 r0 0x20 to: ['gc_env.r[0] = gc_env.r[0] | 0x200000; // oris r0, r0, 0x20']
Translated rlwinm r3 r4 0 20 20 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x800; // rlwinm r3, r4, 0, 20, 20']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007DA0 to: if (gc_env.cr[0] == 0) goto L_80007DA0;
Translated oris r0 r0 0x10 to: ['gc_env.r[0] = gc_env.r[0] | 0x100000; // oris r0, r0, 0x10']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x6800']
Translated addi r3 r3 0x6800 to: ['gc_env.r[3] += 26624; // addi r3, r3, 0x6800']
Processing opcode: lwz, operands: ['r4', '0x14(r3)']
Translated lwz r4 0x14(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x14); // lwz r4, 0x14(r3)']
Translated rlwinm r3 r4 0 30 30 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x2; // rlwinm r3, r4, 0, 30, 30']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007DBC to: if (gc_env.cr[0] == 0) goto L_80007DBC;
Translated oris r0 r0 0x8 to: ['gc_env.r[0] = gc_env.r[0] | 0x80000; // oris r0, r0, 0x8']
Translated rlwinm r3 r4 0 28 28 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x8; // rlwinm r3, r4, 0, 28, 28']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007DCC to: if (gc_env.cr[0] == 0) goto L_80007DCC;
Translated oris r0 r0 0x4 to: ['gc_env.r[0] = gc_env.r[0] | 0x40000; // oris r0, r0, 0x4']
Translated rlwinm r3 r4 0 20 20 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x800; // rlwinm r3, r4, 0, 20, 20']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007DDC to: if (gc_env.cr[0] == 0) goto L_80007DDC;
Translated oris r0 r0 0x2 to: ['gc_env.r[0] = gc_env.r[0] | 0x20000; // oris r0, r0, 0x2']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x6800']
Translated addi r3 r3 0x6800 to: ['gc_env.r[3] += 26624; // addi r3, r3, 0x6800']
Processing opcode: lwz, operands: ['r4', '0x28(r3)']
Translated lwz r4 0x28(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x28); // lwz r4, 0x28(r3)']
Translated rlwinm r3 r4 0 30 30 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x2; // rlwinm r3, r4, 0, 30, 30']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007DF8 to: if (gc_env.cr[0] == 0) goto L_80007DF8;
Translated oris r0 r0 0x1 to: ['gc_env.r[0] = gc_env.r[0] | 0x10000; // oris r0, r0, 0x1']
Translated rlwinm r3 r4 0 28 28 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x8; // rlwinm r3, r4, 0, 28, 28']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007E08 to: if (gc_env.cr[0] == 0) goto L_80007E08;
Translated ori r0 r0 0x8000 to: ['gc_env.r[0] |= 32768; // ori r0, r0, 0x8000']
Translated rlwinm r3 r31 0 18 18 to: ['gc_env.r[3] = (gc_env.r[31] << 0) & 0x2000; // rlwinm r3, r31, 0, 18, 18']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007E18 to: if (gc_env.cr[0] == 0) goto L_80007E18;
Translated ori r0 r0 0x20 to: ['gc_env.r[0] |= 32; // ori r0, r0, 0x20']
Translated rlwinm r3 r31 0 19 19 to: ['gc_env.r[3] = (gc_env.r[31] << 0) & 0x1000; // rlwinm r3, r31, 0, 19, 19']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007E28 to: if (gc_env.cr[0] == 0) goto L_80007E28;
Translated ori r0 r0 0x40 to: ['gc_env.r[0] |= 64; // ori r0, r0, 0x40']
Translated rlwinm r3 r31 0 21 21 to: ['gc_env.r[3] = (gc_env.r[31] << 0) & 0x400; // rlwinm r3, r31, 0, 21, 21']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007E38 to: if (gc_env.cr[0] == 0) goto L_80007E38;
Translated ori r0 r0 0x1000 to: ['gc_env.r[0] |= 4096; // ori r0, r0, 0x1000']
Translated rlwinm r3 r31 0 22 22 to: ['gc_env.r[3] = (gc_env.r[31] << 0) & 0x200; // rlwinm r3, r31, 0, 22, 22']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007E48 to: if (gc_env.cr[0] == 0) goto L_80007E48;
Translated ori r0 r0 0x2000 to: ['gc_env.r[0] |= 8192; // ori r0, r0, 0x2000']
Translated rlwinm r3 r31 0 23 23 to: ['gc_env.r[3] = (gc_env.r[31] << 0) & 0x100; // rlwinm r3, r31, 0, 23, 23']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007E58 to: if (gc_env.cr[0] == 0) goto L_80007E58;
Translated ori r0 r0 0x80 to: ['gc_env.r[0] |= 128; // ori r0, r0, 0x80']
Translated rlwinm r3 r31 0 28 28 to: ['gc_env.r[3] = (gc_env.r[31] << 0) & 0x8; // rlwinm r3, r31, 0, 28, 28']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007E68 to: if (gc_env.cr[0] == 0) goto L_80007E68;
Translated ori r0 r0 0x800 to: ['gc_env.r[0] |= 2048; // ori r0, r0, 0x800']
Translated rlwinm r3 r31 0 29 29 to: ['gc_env.r[3] = (gc_env.r[31] << 0) & 0x4; // rlwinm r3, r31, 0, 29, 29']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007E78 to: if (gc_env.cr[0] == 0) goto L_80007E78;
Translated ori r0 r0 0x400 to: ['gc_env.r[0] |= 1024; // ori r0, r0, 0x400']
Translated rlwinm r3 r31 0 30 30 to: ['gc_env.r[3] = (gc_env.r[31] << 0) & 0x2; // rlwinm r3, r31, 0, 30, 30']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007E88 to: if (gc_env.cr[0] == 0) goto L_80007E88;
Translated ori r0 r0 0x200 to: ['gc_env.r[0] |= 512; // ori r0, r0, 0x200']
Translated rlwinm r3 r31 0 20 20 to: ['gc_env.r[3] = (gc_env.r[31] << 0) & 0x800; // rlwinm r3, r31, 0, 20, 20']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007E98 to: if (gc_env.cr[0] == 0) goto L_80007E98;
Translated ori r0 r0 0x4000 to: ['gc_env.r[0] |= 16384; // ori r0, r0, 0x4000']
Translated clrlwi r3 r31 31 to: ['gc_env.r[3] = gc_env.r[31] & 0x1; // clrlwi r3, r31, 31']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007EA8 to: if (gc_env.cr[0] == 0) goto L_80007EA8;
Translated ori r0 r0 0x100 to: ['gc_env.r[0] |= 256; // ori r0, r0, 0x100']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r4', '0xc4(r3)']
Translated lwz r4 0xc4(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xC4); // lwz r4, 0xC4(r3)']
Processing opcode: lwz, operands: ['r3', '0xc8(r3)']
Translated lwz r3 0xc8(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xC8); // lwz r3, 0xC8(r3)']
Translated or r3 r4 r3 to: ['gc_env.r[3] = gc_env.r[4] | gc_env.r[3]; // or r3, r4, r3']
Translated andc r4 r0 r3 to: ['gc_env.r[4] = gc_env.r[0] & ~gc_env.r[3]; // andc r4, r0, r3']
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007F58 to: if (gc_env.cr[0] == 0) goto L_80007F58;
Translated lis r3 lbl_8001B048@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001B048 >> 16) & 0xFFFF; // lis r3, lbl_8001B048@ha']
Processing opcode: addi, operands: ['r0', 'r3', 'lbl_8001B048@l']
Translated addi r0 r3 lbl_8001B048@l to: ['gc_env.r[0] = (uint32_t)&lbl_8001B048; // lis + addi lbl_8001B048 (completing pattern)']
Translated mr r3 r0 to: gc_env.r[3] = gc_env.r[0]; // Move register
Translated b .L_80007ED4 to: goto L_80007ED4;
Translated b .L_80007ED8 to: goto L_80007ED8;
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Translated and r0 r4 r0 to: gc_env.r[0] = gc_env.r[4] & gc_env.r[0];
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007EF4 to: if (gc_env.cr[0] == 0) goto L_80007EF4;
Translated cntlzw r0 r0 to: ['uint32_t val = gc_env.r[0]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r0']
Translated extsh r29 r0 to: ['gc_env.r[29] = (int32_t)(int16_t)(gc_env.r[0] & 0xFFFF); // extsh r29, r0']
Translated b .L_80007EFC to: goto L_80007EFC;
Processing opcode: addi, operands: ['r3', 'r3', '0x4']
Translated addi r3 r3 0x4 to: ['gc_env.r[3] += 4; // addi r3, r3, 0x4']
Translated b .L_80007ED8 to: goto L_80007ED8;
Processing opcode: lwz, operands: ['r3', 'InterruptHandlerTable_8001EE98@sda21(r0)']
Translated lwz r3 InterruptHandlerTable_8001EE98@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&InterruptHandlerTable_8001EE98); // lwz r3, InterruptHandlerTable_8001EE98@sda21(r0)']
Translated slwi r0 r29 2 to: ['gc_env.r[0] = gc_env.r[29] << 2; // slwi r0, r29, 2']
Translated lwzx r31 r3 r0 to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[3] + gc_env.r[0]); // lwzx r31, r3, r0']
Translated cmplwi r31 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == 0x0) ? 0 : ((uint32_t)gc_env.r[31] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80007F58 to: if (gc_env.cr[0] == 0) goto L_80007F58;
Translated cmpwi r29 0x4 to: gc_env.cr[0] = (gc_env.r[29] == 0x4) ? 0 : (gc_env.r[29] < 0x4 ? -1 : 1); // Compare with immediate
Translated ble .L_80007F30 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80007F30; // ble .L_80007F30']
Processing opcode: sth, operands: ['r29', '__OSLastInterrupt@sda21(r0)']
Translated sth r29 __OSLastInterrupt@sda21(r0) to: ['gc_mem_write16(gc_env.ram, (uint32_t)&__OSLastInterrupt, gc_env.r[29]); // sth r29, __OSLastInterrupt@sda21(r0)']
Translated bl OSGetTime to: OSGetTime();
Processing opcode: stw, operands: ['r4', '__OSLastInterruptTime+0x4@sda21(r0)']
Translated stw r4 __OSLastInterruptTime+0x4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&__OSLastInterruptTime + 0x4, gc_env.r[4]); // stw r4, __OSLastInterruptTime@sda21(r0)']
Processing opcode: stw, operands: ['r3', '__OSLastInterruptTime@sda21(r0)']
Translated stw r3 __OSLastInterruptTime@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&__OSLastInterruptTime, gc_env.r[3]); // stw r3, __OSLastInterruptTime@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x198(r30)']
Translated lwz r0 0x198(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x198); // lwz r0, 0x198(r30)']
Processing opcode: stw, operands: ['r0', '__OSLastInterruptSrr0@sda21(r0)']
Translated stw r0 __OSLastInterruptSrr0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&__OSLastInterruptSrr0, gc_env.r[0]); // stw r0, __OSLastInterruptSrr0@sda21(r0)']
Translated bl OSDisableScheduler to: OSDisableScheduler();
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated mr r4 r30 to: gc_env.r[4] = gc_env.r[30]; // Move register
Translated mr r12 r31 to: gc_env.r[12] = gc_env.r[31]; // Move register
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl OSEnableScheduler to: OSEnableScheduler();
Translated bl __OSReschedule to: __OSReschedule();
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSLoadContext to: OSLoadContext();
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSLoadContext to: OSLoadContext();
Processing opcode: lwz, operands: ['r0', '0x2c(r1)']
Translated lwz r0 0x2c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r0, 0x2C(r1)']
Processing opcode: lwz, operands: ['r31', '0x24(r1)']
Translated lwz r31 0x24(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r31, 0x24(r1)']
Processing opcode: lwz, operands: ['r30', '0x20(r1)']
Translated lwz r30 0x20(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r30, 0x20(r1)']
Processing opcode: lwz, operands: ['r29', '0x1c(r1)']
Translated lwz r29 0x1c(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r29, 0x1C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x28']
Translated addi r1 r1 0x28 to: ['gc_env.r[1] += 40; // addi r1, r1, 0x28']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Processing opcode: stw, operands: ['r1', '0x4(r4)']
Translated stw r1 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[1]); // stw r1, 0x4(r4)']
Processing opcode: stw, operands: ['r2', '0x8(r4)']
Translated stw r2 0x8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x8, gc_env.r[2]); // stw r2, 0x8(r4)']
Translated stmw r6 0x18(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x18, gc_env.r[6]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1C, gc_env.r[7]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x20, gc_env.r[8]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x24, gc_env.r[9]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x28, gc_env.r[10]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x2C, gc_env.r[11]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x30, gc_env.r[12]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x34, gc_env.r[13]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x38, gc_env.r[14]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x3C, gc_env.r[15]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x40, gc_env.r[16]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x44, gc_env.r[17]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x48, gc_env.r[18]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4C, gc_env.r[19]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x50, gc_env.r[20]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x54, gc_env.r[21]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x58, gc_env.r[22]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x5C, gc_env.r[23]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x60, gc_env.r[24]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x64, gc_env.r[25]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x68, gc_env.r[26]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x6C, gc_env.r[27]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x70, gc_env.r[28]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x74, gc_env.r[29]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x78, gc_env.r[30]); // stmw r6, 0x18(r4)', 'gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x7C, gc_env.r[31]); // stmw r6, 0x18(r4)']
Translated mfspr r0 GQR1 to: ['gc_env.r[0] = gc_env.gqr[1]; // mfspr r0, GQR1']
Processing opcode: stw, operands: ['r0', '0x1a8(r4)']
Translated stw r0 0x1a8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1A8, gc_env.r[0]); // stw r0, 0x1A8(r4)']
Translated mfspr r0 GQR2 to: ['gc_env.r[0] = gc_env.gqr[2]; // mfspr r0, GQR2']
Processing opcode: stw, operands: ['r0', '0x1ac(r4)']
Translated stw r0 0x1ac(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1AC, gc_env.r[0]); // stw r0, 0x1AC(r4)']
Translated mfspr r0 GQR3 to: ['gc_env.r[0] = gc_env.gqr[3]; // mfspr r0, GQR3']
Processing opcode: stw, operands: ['r0', '0x1b0(r4)']
Translated stw r0 0x1b0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1B0, gc_env.r[0]); // stw r0, 0x1B0(r4)']
Translated mfspr r0 GQR4 to: ['gc_env.r[0] = gc_env.gqr[4]; // mfspr r0, GQR4']
Processing opcode: stw, operands: ['r0', '0x1b4(r4)']
Translated stw r0 0x1b4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1B4, gc_env.r[0]); // stw r0, 0x1B4(r4)']
Translated mfspr r0 GQR5 to: ['gc_env.r[0] = gc_env.gqr[5]; // mfspr r0, GQR5']
Processing opcode: stw, operands: ['r0', '0x1b8(r4)']
Translated stw r0 0x1b8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1B8, gc_env.r[0]); // stw r0, 0x1B8(r4)']
Translated mfspr r0 GQR6 to: ['gc_env.r[0] = gc_env.gqr[6]; // mfspr r0, GQR6']
Processing opcode: stw, operands: ['r0', '0x1bc(r4)']
Translated stw r0 0x1bc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1BC, gc_env.r[0]); // stw r0, 0x1BC(r4)']
Translated mfspr r0 GQR7 to: ['gc_env.r[0] = gc_env.gqr[7]; // mfspr r0, GQR7']
Processing opcode: stw, operands: ['r0', '0x1c0(r4)']
Translated stw r0 0x1c0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1C0, gc_env.r[0]); // stw r0, 0x1C0(r4)']
Translated b fn_80007C38 to: fn_80007C38();
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x30cc(r4)']
Translated stw r0 0x30cc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x30CC, gc_env.r[0]); // stw r0, 0x30CC(r4)']
Processing opcode: stw, operands: ['r0', '0x30c8(r4)']
Translated stw r0 0x30c8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x30C8, gc_env.r[0]); // stw r0, 0x30C8(r4)']
Processing opcode: stw, operands: ['r0', '0x30d0(r4)']
Translated stw r0 0x30d0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x30D0, gc_env.r[0]); // stw r0, 0x30D0(r4)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated beq .L_80008008 to: if (gc_env.cr[0] == 0) goto L_80008008;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: li, operands: ['r0', '0xff']
Translated li r0 0xff to: ['gc_env.r[0] = 0xff; // li r0, 0xff']
Processing opcode: sth, operands: ['r0', '0x4010(r3)']
Translated sth r0 0x4010(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x4010, gc_env.r[0]); // sth r0, 0x4010(r3)']
Translated lis r3 0xf000 to: ['gc_env.r[3] = -4096 << 16; // lis r3, 0xf000']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r8', 'r3', '0x4000']
Translated addi r8 r3 0x4000 to: ['gc_env.r[8] = gc_env.r[3] + 16384; // addi r8, r3, 0x4000']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: lhz, operands: ['r7', '0x4024(r3)']
Translated lhz r7 0x4024(r3) to: ['gc_env.r[7] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x4024); // lhz r7, 0x4024(r3)']
Translated lis r3 __OSErrorTable@ha to: ['gc_env.r[3] = ((uint32_t)&__OSErrorTable >> 16) & 0xFFFF; // lis r3, __OSErrorTable@ha']
Processing opcode: lhz, operands: ['r6', '0x22(r8)']
Translated lhz r6 0x22(r8) to: ['gc_env.r[6] = gc_mem_read16(gc_env.ram, gc_env.r[8] + 0x22); // lhz r6, 0x22(r8)']
Processing opcode: addi, operands: ['r3', 'r3', '__OSErrorTable@l']
Translated addi r3 r3 __OSErrorTable@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&__OSErrorTable & 0xFFFF); // addi r3, r3, __OSErrorTable@l']
Processing opcode: lhz, operands: ['r5', '0x1e(r8)']
Translated lhz r5 0x1e(r8) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[8] + 0x1e); // lhz r5, 0x1e(r8)']
Translated rlwimi r6 r7 16 6 15 to: ['uint32_t rotated = gc_env.r[7] << 16; // rlwimi r6, r7, 16, 6, 15', 'gc_env.r[6] = (gc_env.r[6] & ~0x3FF0000) | (rotated & 0x3FF0000);']
Processing opcode: sth, operands: ['r0', '0x20(r8)']
Translated sth r0 0x20(r8) to: ['gc_mem_write16(gc_env.ram, gc_env.r[8] + 0x20, gc_env.r[0]); // sth r0, 0x20(r8)']
Processing opcode: lwz, operands: ['r12', '0x3c(r3)']
Translated lwz r12 0x3c(r3) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x3C); // lwz r12, 0x3C(r3)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80008070 to: if (gc_env.cr[0] == 0) goto L_80008070;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: li, operands: ['r3', '0xf']
Translated li r3 0xf to: ['gc_env.r[3] = 0xf; // li r3, 0xf']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated b .L_80008078 to: goto L_80008078;
Processing opcode: li, operands: ['r3', '0xf']
Translated li r3 0xf to: ['gc_env.r[3] = 0xf; // li r3, 0xf']
Translated bl __OSUnhandledException to: __OSUnhandledException();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated lis r4 0x0 to: ['gc_env.r[4] = 0 << 16; // lis r4, 0x0']
Processing opcode: addi, operands: ['r4', 'r4', '0x2']
Translated addi r4 r4 0x2 to: ['gc_env.r[4] += 2; // addi r4, r4, 0x2']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: addi, operands: ['r3', 'r3', '0x1ff']
Translated addi r3 r3 0x1ff to: ['gc_env.r[3] += 511; // addi r3, r3, 0x1ff']
Translated lis r6 0x100 to: ['gc_env.r[6] = 256 << 16; // lis r6, 0x100']
Processing opcode: addi, operands: ['r6', 'r6', '0x2']
Translated addi r6 r6 0x2 to: ['gc_env.r[6] += 2; // addi r6, r6, 0x2']
Translated lis r5 0x8100 to: ['gc_env.r[5] = -32512 << 16; // lis r5, 0x8100']
Processing opcode: addi, operands: ['r5', 'r5', '0xff']
Translated addi r5 r5 0xff to: ['gc_env.r[5] += 255; // addi r5, r5, 0xff']
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated mtdbatu 0 r7 to: ['gc_env.dbatu[0] = gc_env.r[7]; // mtdbatu 0, r7']
Translated mtdbatl 0 r4 to: ['// mtdbatl 0 r4 (not implemented)']
Translated mtdbatu 0 r3 to: ['gc_env.dbatu[0] = gc_env.r[3]; // mtdbatu 0, r3']
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated mtibatu 0 r7 to: ['gc_env.ibatu[0] = gc_env.r[7]; // mtibatu 0, r7']
Translated mtibatl 0 r4 to: ['// mtibatl 0 r4 (not implemented)']
Translated mtibatu 0 r3 to: ['gc_env.ibatu[0] = gc_env.r[3]; // mtibatu 0, r3']
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated mtdbatu 2 r7 to: ['gc_env.dbatu[2] = gc_env.r[7]; // mtdbatu 2, r7']
Translated mtdbatl 2 r6 to: ['// mtdbatl 2 r6 (not implemented)']
Translated mtdbatu 2 r5 to: ['gc_env.dbatu[2] = gc_env.r[5]; // mtdbatu 2, r5']
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated mtibatu 2 r7 to: ['gc_env.ibatu[2] = gc_env.r[7]; // mtibatu 2, r7']
Translated mtibatl 2 r6 to: ['// mtibatl 2 r6 (not implemented)']
Translated mtibatu 2 r5 to: ['gc_env.ibatu[2] = gc_env.r[5]; // mtibatu 2, r5']
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated mfmsr r3 to: gc_env.r[3] = gc_env.msr; // Move from machine state register
Translated ori r3 r3 0x30 to: ['gc_env.r[3] |= 48; // ori r3, r3, 0x30']
Translated mtsrr1 r3 to: ['gc_env.srr1 = gc_env.r[3]; // mtsrr1 r3']
Translated mflr r3 to: gc_env.r[3] = gc_env.lr; // Move from link register
Translated mtsrr0 r3 to: ['gc_env.srr0 = gc_env.r[3]; // mtsrr0 r3']
Translated rfi  to: ['// rfi: return from interrupt (not implemented)']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated lis r4 0x0 to: ['gc_env.r[4] = 0 << 16; // lis r4, 0x0']
Processing opcode: addi, operands: ['r4', 'r4', '0x2']
Translated addi r4 r4 0x2 to: ['gc_env.r[4] += 2; // addi r4, r4, 0x2']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: addi, operands: ['r3', 'r3', '0x3ff']
Translated addi r3 r3 0x3ff to: ['gc_env.r[3] += 1023; // addi r3, r3, 0x3ff']
Translated lis r6 0x200 to: ['gc_env.r[6] = 512 << 16; // lis r6, 0x200']
Processing opcode: addi, operands: ['r6', 'r6', '0x2']
Translated addi r6 r6 0x2 to: ['gc_env.r[6] += 2; // addi r6, r6, 0x2']
Translated lis r5 0x8200 to: ['gc_env.r[5] = -32256 << 16; // lis r5, 0x8200']
Processing opcode: addi, operands: ['r5', 'r5', '0x1ff']
Translated addi r5 r5 0x1ff to: ['gc_env.r[5] += 511; // addi r5, r5, 0x1ff']
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated mtdbatu 0 r7 to: ['gc_env.dbatu[0] = gc_env.r[7]; // mtdbatu 0, r7']
Translated mtdbatl 0 r4 to: ['// mtdbatl 0 r4 (not implemented)']
Translated mtdbatu 0 r3 to: ['gc_env.dbatu[0] = gc_env.r[3]; // mtdbatu 0, r3']
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated mtibatu 0 r7 to: ['gc_env.ibatu[0] = gc_env.r[7]; // mtibatu 0, r7']
Translated mtibatl 0 r4 to: ['// mtibatl 0 r4 (not implemented)']
Translated mtibatu 0 r3 to: ['gc_env.ibatu[0] = gc_env.r[3]; // mtibatu 0, r3']
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated mtdbatu 2 r7 to: ['gc_env.dbatu[2] = gc_env.r[7]; // mtdbatu 2, r7']
Translated mtdbatl 2 r6 to: ['// mtdbatl 2 r6 (not implemented)']
Translated mtdbatu 2 r5 to: ['gc_env.dbatu[2] = gc_env.r[5]; // mtdbatu 2, r5']
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated mtibatu 2 r7 to: ['gc_env.ibatu[2] = gc_env.r[7]; // mtibatu 2, r7']
Translated mtibatl 2 r6 to: ['// mtibatl 2 r6 (not implemented)']
Translated mtibatu 2 r5 to: ['gc_env.ibatu[2] = gc_env.r[5]; // mtibatu 2, r5']
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated mfmsr r3 to: gc_env.r[3] = gc_env.msr; // Move from machine state register
Translated ori r3 r3 0x30 to: ['gc_env.r[3] |= 48; // ori r3, r3, 0x30']
Translated mtsrr1 r3 to: ['gc_env.srr1 = gc_env.r[3]; // mtsrr1 r3']
Translated mflr r3 to: gc_env.r[3] = gc_env.lr; // Move from link register
Translated mtsrr0 r3 to: ['gc_env.srr0 = gc_env.r[3]; // mtsrr0 r3']
Translated rfi  to: ['// rfi: return from interrupt (not implemented)']
Translated clrlwi r3 r3 2 to: ['gc_env.r[3] = gc_env.r[3] & 0x3FFFFFFF; // clrlwi r3, r3, 2']
Translated mtsrr0 r3 to: ['gc_env.srr0 = gc_env.r[3]; // mtsrr0 r3']
Translated mfmsr r3 to: gc_env.r[3] = gc_env.msr; // Move from machine state register
Translated rlwinm r3 r3 0 28 25 to: ['gc_env.r[3] = (gc_env.r[3] << 0) & -0x31; // rlwinm r3, r3, 0, 28, 25']
Translated mtsrr1 r3 to: ['gc_env.srr1 = gc_env.r[3]; // mtsrr1 r3']
Translated rfi  to: ['// rfi: return from interrupt (not implemented)']
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x48(r1)']
Translated stwu r1 -0x48(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x48, gc_env.r[1]); // stwu r1, -0x48(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x48;']
Processing opcode: stw, operands: ['r31', '0x44(r1)']
Translated stw r31 0x44(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x44, gc_env.r[31]); // stw r31, 0x44(r1)']
Processing opcode: stw, operands: ['r30', '0x40(r1)']
Translated stw r30 0x40(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x40, gc_env.r[30]); // stw r30, 0x40(r1)']
Processing opcode: stw, operands: ['r29', '0x3c(r1)']
Translated stw r29 0x3c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[29]); // stw r29, 0x3C(r1)']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r29', '0xf0(r3)']
Translated lwz r29 0xf0(r3) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xF0); // lwz r29, 0xF0(r3)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated lis r0 0x180 to: ['gc_env.r[0] = 384 << 16; // lis r0, 0x180']
Translated cmplw r29 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[29] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[29] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bgt .L_800081E4 to: ['if (gc_env.cr[0] & 0x4) goto L_800081E4; // bgt .L_800081E4']
Translated lis r3 Config24MB@ha to: ['gc_env.r[3] = ((uint32_t)&Config24MB >> 16) & 0xFFFF; // lis r3, Config24MB@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'Config24MB@l']
Translated addi r3 r3 Config24MB@l to: ['gc_env.r[3] = (uint32_t)&Config24MB; // lis + addi Config24MB (completing pattern)']
Translated bl RealMode to: RealMode();
Translated b .L_800081FC to: goto L_800081FC;
Translated lis r0 0x300 to: ['gc_env.r[0] = 768 << 16; // lis r0, 0x300']
Translated cmplw r29 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[29] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[29] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bgt .L_800081FC to: ['if (gc_env.cr[0] & 0x4) goto L_800081FC; // bgt .L_800081FC']
Translated lis r3 Config48MB@ha to: ['gc_env.r[3] = ((uint32_t)&Config48MB >> 16) & 0xFFFF; // lis r3, Config48MB@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'Config48MB@l']
Translated addi r3 r3 Config48MB@l to: ['gc_env.r[3] = (uint32_t)&Config48MB; // lis + addi Config48MB (completing pattern)']
Translated bl RealMode to: RealMode();
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r29', 'r3', '0x4000']
Translated addi r29 r3 0x4000 to: ['gc_env.r[29] = gc_env.r[3] + 16384; // addi r29, r3, 0x4000']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: sth, operands: ['r0', '0x20(r29)']
Translated sth r0 0x20(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x20, gc_env.r[0]); // sth r0, 0x20(r29)']
Processing opcode: li, operands: ['r0', '0xff']
Translated li r0 0xff to: ['gc_env.r[0] = 0xff; // li r0, 0xff']
Translated lis r3 0xf000 to: ['gc_env.r[3] = -4096 << 16; // lis r3, 0xf000']
Processing opcode: sth, operands: ['r0', '0x10(r29)']
Translated sth r0 0x10(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x10, gc_env.r[0]); // sth r0, 0x10(r29)']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Translated lis r3 MEMIntrruptHandler@ha to: ['gc_env.r[3] = ((uint32_t)&MEMIntrruptHandler >> 16) & 0xFFFF; // lis r3, MEMIntrruptHandler@ha']
Processing opcode: addi, operands: ['r30', 'r3', 'MEMIntrruptHandler@l']
Translated addi r30 r3 MEMIntrruptHandler@l to: ['gc_env.r[30] = (uint32_t)&MEMIntrruptHandler; // lis + addi MEMIntrruptHandler (completing pattern)']
Translated mr r4 r30 to: gc_env.r[4] = gc_env.r[30]; // Move register
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Translated mr r4 r30 to: gc_env.r[4] = gc_env.r[30]; // Move register
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Translated mr r4 r30 to: gc_env.r[4] = gc_env.r[30]; // Move register
Processing opcode: li, operands: ['r3', '0x2']
Translated li r3 0x2 to: ['gc_env.r[3] = 0x2; // li r3, 0x2']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Translated mr r4 r30 to: gc_env.r[4] = gc_env.r[30]; // Move register
Processing opcode: li, operands: ['r3', '0x3']
Translated li r3 0x3 to: ['gc_env.r[3] = 0x3; // li r3, 0x3']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Translated mr r4 r30 to: gc_env.r[4] = gc_env.r[30]; // Move register
Processing opcode: li, operands: ['r3', '0x4']
Translated li r3 0x4 to: ['gc_env.r[3] = 0x4; // li r3, 0x4']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Translated lis r3 ResetFunctionInfo_8001B078@ha to: ['gc_env.r[3] = ((uint32_t)&ResetFunctionInfo_8001B078 >> 16) & 0xFFFF; // lis r3, ResetFunctionInfo_8001B078@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'ResetFunctionInfo_8001B078@l']
Translated addi r3 r3 ResetFunctionInfo_8001B078@l to: ['gc_env.r[3] = (uint32_t)&ResetFunctionInfo_8001B078; // lis + addi ResetFunctionInfo_8001B078 (completing pattern)']
Translated bl OSRegisterResetFunction to: OSRegisterResetFunction();
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r4', '0xf0(r3)']
Translated lwz r4 0xf0(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xF0); // lwz r4, 0xF0(r3)']
Processing opcode: lwz, operands: ['r0', '0x28(r3)']
Translated lwz r0 0x28(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x28); // lwz r0, 0x28(r3)']
Translated cmplw r4 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bge .L_80008294 to: if (gc_env.cr[0] >= 0) goto L_80008294;
Processing opcode: subis, operands: ['r0', 'r4', '0x180']
Translated subis r0 r4 0x180 to: ['gc_env.r[0] = gc_env.r[4] - (384 << 16); // subis r0, r4, 384']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80008294 to: if (gc_env.cr[0] != 0) goto L_80008294;
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Processing opcode: sth, operands: ['r0', '0x28(r29)']
Translated sth r0 0x28(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x28, gc_env.r[0]); // sth r0, 0x28(r29)']
Translated lis r3 0x800 to: ['gc_env.r[3] = 2048 << 16; // lis r3, 0x800']
Translated bl __OSUnmaskInterrupts to: __OSUnmaskInterrupts();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lwz, operands: ['r0', '0x4c(r1)']
Translated lwz r0 0x4c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4C); // lwz r0, 0x4C(r1)']
Processing opcode: lwz, operands: ['r31', '0x44(r1)']
Translated lwz r31 0x44(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lwz r31, 0x44(r1)']
Processing opcode: lwz, operands: ['r30', '0x40(r1)']
Translated lwz r30 0x40(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x40); // lwz r30, 0x40(r1)']
Processing opcode: lwz, operands: ['r29', '0x3c(r1)']
Translated lwz r29 0x3c(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lwz r29, 0x3C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x48']
Translated addi r1 r1 0x48 to: ['gc_env.r[1] += 72; // addi r1, r1, 0x48']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Translated b .L_8000830C to: goto L_8000830C;
Processing opcode: lwz, operands: ['r5', '0x10(r4)']
Translated lwz r5 0x10(r4) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x10); // lwz r5, 0x10(r4)']
Processing opcode: addi, operands: ['r3', 'r4', '0x0']
Translated addi r3 r4 0x0 to: ['gc_env.r[3] = gc_env.r[4] + 0; // addi r3, r4, 0x0']
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800082F8 to: if (gc_env.cr[0] != 0) goto L_800082F8;
Processing opcode: stw, operands: ['r31', '0x2f8(r30)']
Translated stw r31 0x2f8(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x2F8, gc_env.r[31]); // stw r31, 0x2F8(r30)']
Translated b .L_800082FC to: goto L_800082FC;
Processing opcode: stw, operands: ['r31', '0x14(r5)']
Translated stw r31 0x14(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x14, gc_env.r[31]); // stw r31, 0x14(r5)']
Processing opcode: stw, operands: ['r5', '0x2f4(r30)']
Translated stw r5 0x2f4(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x2F4, gc_env.r[5]); // stw r5, 0x2F4(r30)']
Processing opcode: stw, operands: ['r31', '0xc(r4)']
Translated stw r31 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[31]); // stw r31, 0xC(r4)']
Processing opcode: stw, operands: ['r31', '0x8(r4)']
Translated stw r31 0x8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x8, gc_env.r[31]); // stw r31, 0x8(r4)']
Translated bl fn_80009B7C to: fn_80009B7C();
Processing opcode: lwz, operands: ['r4', '0x2f4(r30)']
Translated lwz r4 0x2f4(r30) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x2F4); // lwz r4, 0x2F4(r30)']
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800082E0 to: if (gc_env.cr[0] != 0) goto L_800082E0;
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated bl ICFlashInvalidate to: ICFlashInvalidate();
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated mtlr r31 to: gc_env.lr = gc_env.r[31]; // Move to link register
Translated blr  to: return;
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EEB8@sda21(r0)']
Translated stw r0 lbl_8001EEB8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EEB8, gc_env.r[0]); // stw r0, lbl_8001EEB8@sda21(r0)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x348(r1)']
Translated stwu r1 -0x348(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x348, gc_env.r[1]); // stwu r1, -0x348(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x348;']
Processing opcode: stw, operands: ['r31', '0x344(r1)']
Translated stw r31 0x344(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x344, gc_env.r[31]); // stw r31, 0x344(r1)']
Processing opcode: stw, operands: ['r30', '0x340(r1)']
Translated stw r30 0x340(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x340, gc_env.r[30]); // stw r30, 0x340(r1)']
Processing opcode: stw, operands: ['r29', '0x33c(r1)']
Translated stw r29 0x33c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x33C, gc_env.r[29]); // stw r29, 0x33C(r1)']
Translated mr r29 r3 to: gc_env.r[29] = gc_env.r[3]; // Move register
Translated lis r3 lbl_8001BBA0@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001BBA0 >> 16) & 0xFFFF; // lis r3, lbl_8001BBA0@ha']
Processing opcode: addi, operands: ['r30', 'r3', 'lbl_8001BBA0@l']
Translated addi r30 r3 lbl_8001BBA0@l to: ['gc_env.r[30] = (uint32_t)&lbl_8001BBA0; // lis + addi lbl_8001BBA0 (completing pattern)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r5', 'lbl_8001EEB0@sda21(r0)']
Translated lwz r5 lbl_8001EEB0@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEB0); // lwz r5, lbl_8001EEB0@sda21(r0)']
Translated lis r31 0x8180 to: ['gc_env.r[31] = -32384 << 16; // lis r31, 0x8180']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EEB4@sda21(r0)']
Translated lwz r0 lbl_8001EEB4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEB4); // lwz r0, lbl_8001EEB4@sda21(r0)']
Translated lis r4 0x8130 to: ['gc_env.r[4] = -32464 << 16; // lis r4, 0x8130']
Processing opcode: li, operands: ['r7', '0x1']
Translated li r7 0x1 to: ['gc_env.r[7] = 0x1; // li r7, 0x1']
Processing opcode: stw, operands: ['r29', '-0x4(r31)']
Translated stw r29 -0x4(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + -0x4, gc_env.r[29]); // stw r29, -0x4(r31)']
Translated lis r6 0x8000 to: ['gc_env.r[6] = -32768 << 16; // lis r6, 0x8000']
Processing opcode: stw, operands: ['r3', '-0x8(r31)']
Translated stw r3 -0x8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + -0x8, gc_env.r[3]); // stw r3, -0x8(r31)']
Processing opcode: addi, operands: ['r3', 'r1', '0x70']
Translated addi r3 r1 0x70 to: ['gc_env.r[3] = gc_env.r[1] + 112; // addi r3, r1, 0x70']
Processing opcode: stb, operands: ['r7', '0x30e2(r6)']
Translated stb r7 0x30e2(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + 0x30E2, gc_env.r[7]); // stb r7, 0x30E2(r6)']
Processing opcode: stw, operands: ['r5', '-0x2010(r4)']
Translated stw r5 -0x2010(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + -0x2010, gc_env.r[5]); // stw r5, -0x2010(r4)']
Processing opcode: stw, operands: ['r0', '-0x2014(r4)']
Translated stw r0 -0x2014(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + -0x2014, gc_env.r[0]); // stw r0, -0x2014(r4)']
Translated bl OSClearContext to: OSClearContext();
Processing opcode: addi, operands: ['r3', 'r1', '0x70']
Translated addi r3 r1 0x70 to: ['gc_env.r[3] = gc_env.r[1] + 112; // addi r3, r1, 0x70']
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Translated bl fn_8000D27C to: fn_8000D27C();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated bl fn_8000EFB0 to: fn_8000EFB0();
Translated lis r3 fn_80008370@ha to: ['gc_env.r[3] = ((uint32_t)&fn_80008370 >> 16) & 0xFFFF; // lis r3, fn_80008370@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_80008370@l']
Translated addi r3 r3 fn_80008370@l to: ['gc_env.r[3] = (uint32_t)&fn_80008370; // lis + addi fn_80008370 (completing pattern)']
Translated bl fn_8000F31C to: fn_8000F31C();
Translated bl fn_8000F238 to: fn_8000F238();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80008410 to: if (gc_env.cr[0] != 0) goto L_80008410;
Processing opcode: lwz, operands: ['r3', '-0x4(r31)']
Translated lwz r3 -0x4(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + -0x4); // lwz r3, -0x4(r31)']
Translated bl fn_8000863C to: fn_8000863C();
Processing opcode: li, operands: ['r3', '-0x20']
Translated li r3 -0x20 to: ['gc_env.r[3] = -0x20; // li r3, -0x20']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Processing opcode: li, operands: ['r3', '0x400']
Translated li r3 0x400 to: ['gc_env.r[3] = 0x400; // li r3, 0x400']
Translated bl __OSUnmaskInterrupts to: __OSUnmaskInterrupts();
Translated bl OSEnableInterrupts to: OSEnableInterrupts();
Translated b .L_80008428 to: goto L_80008428;
Translated b .L_8000842C to: goto L_8000842C;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EEB8@sda21(r0)']
Translated lwz r0 lbl_8001EEB8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEB8); // lwz r0, lbl_8001EEB8@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000842C to: if (gc_env.cr[0] == 0) goto L_8000842C;
Translated mr r4 r30 to: gc_env.r[4] = gc_env.r[30]; // Move register
Processing opcode: addi, operands: ['r3', 'r1', '0x40']
Translated addi r3 r1 0x40 to: ['gc_env.r[3] = gc_env.r[1] + 64; // addi r3, r1, 0x40']
Processing opcode: li, operands: ['r5', '0x20']
Translated li r5 0x20 to: ['gc_env.r[5] = 0x20; // li r5, 0x20']
Processing opcode: li, operands: ['r6', '0x2440']
Translated li r6 0x2440 to: ['gc_env.r[6] = 0x2440; // li r6, 0x2440']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bl fn_8000ED1C to: fn_8000ED1C();
Translated lis r31 0x8180 to: ['gc_env.r[31] = -32384 << 16; // lis r31, 0x8180']
Translated b .L_80008458 to: goto L_80008458;
Translated b .L_8000845C to: goto L_8000845C;
Processing opcode: lwz, operands: ['r0', '0x4c(r1)']
Translated lwz r0 0x4c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4C); // lwz r0, 0x4C(r1)']
Translated cmpwi r0 0x1 to: gc_env.cr[0] = (gc_env.r[0] == 0x1) ? 0 : (gc_env.r[0] < 0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_8000845C to: if (gc_env.cr[0] == 0) goto L_8000845C;
Translated bge .L_8000847C to: if (gc_env.cr[0] >= 0) goto L_8000847C;
Translated cmpwi r0 -0x1 to: gc_env.cr[0] = (gc_env.r[0] == -0x1) ? 0 : (gc_env.r[0] < -0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_80008488 to: if (gc_env.cr[0] == 0) goto L_80008488;
Translated bge .L_80008494 to: if (gc_env.cr[0] >= 0) goto L_80008494;
Translated b .L_8000845C to: goto L_8000845C;
Translated cmpwi r0 0xc to: gc_env.cr[0] = (gc_env.r[0] == 0xc) ? 0 : (gc_env.r[0] < 0xc ? -1 : 1); // Compare with immediate
Translated bge .L_8000845C to: if (gc_env.cr[0] >= 0) goto L_8000845C;
Translated b .L_80008488 to: goto L_80008488;
Processing opcode: lwz, operands: ['r3', '-0x4(r31)']
Translated lwz r3 -0x4(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + -0x4); // lwz r3, -0x4(r31)']
Translated bl fn_8000863C to: fn_8000863C();
Translated b .L_8000845C to: goto L_8000845C;
Processing opcode: lwz, operands: ['r3', '0x18(r30)']
Translated lwz r3 0x18(r30) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x18); // lwz r3, 0x18(r30)']
Processing opcode: lwz, operands: ['r4', '0x14(r30)']
Translated lwz r4 0x14(r30) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x14); // lwz r4, 0x14(r30)']
Processing opcode: addi, operands: ['r0', 'r3', '0x1f']
Translated addi r0 r3 0x1f to: ['gc_env.r[0] = gc_env.r[3] + 31; // addi r0, r3, 0x1f']
Processing opcode: addi, operands: ['r4', 'r4', '0x20']
Translated addi r4 r4 0x20 to: ['gc_env.r[4] += 32; // addi r4, r4, 0x20']
Translated clrrwi r30 r0 5 to: gc_env.r[30] = gc_env.r[0] & ~((1ULL << 5) - 1); // Clear rightmost 5 bits
Translated b .L_800084AC to: goto L_800084AC;
Translated b .L_800084B0 to: goto L_800084B0;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EEB8@sda21(r0)']
Translated lwz r0 lbl_8001EEB8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEB8); // lwz r0, lbl_8001EEB8@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800084B0 to: if (gc_env.cr[0] == 0) goto L_800084B0;
Translated mr r5 r30 to: gc_env.r[5] = gc_env.r[30]; // Move register
Processing opcode: addi, operands: ['r3', 'r1', '0x10']
Translated addi r3 r1 0x10 to: ['gc_env.r[3] = gc_env.r[1] + 16; // addi r3, r1, 0x10']
Processing opcode: addi, operands: ['r6', 'r4', '0x2440']
Translated addi r6 r4 0x2440 to: ['gc_env.r[6] = gc_env.r[4] + 9280; // addi r6, r4, 0x2440']
Translated lis r4 0x8130 to: ['gc_env.r[4] = -32464 << 16; // lis r4, 0x8130']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bl fn_8000ED1C to: fn_8000ED1C();
Translated lis r31 0x8180 to: ['gc_env.r[31] = -32384 << 16; // lis r31, 0x8180']
Translated b .L_800084DC to: goto L_800084DC;
Translated b .L_800084E0 to: goto L_800084E0;
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Translated cmpwi r0 0x1 to: gc_env.cr[0] = (gc_env.r[0] == 0x1) ? 0 : (gc_env.r[0] < 0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_800084E0 to: if (gc_env.cr[0] == 0) goto L_800084E0;
Translated bge .L_80008500 to: if (gc_env.cr[0] >= 0) goto L_80008500;
Translated cmpwi r0 -0x1 to: gc_env.cr[0] = (gc_env.r[0] == -0x1) ? 0 : (gc_env.r[0] < -0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_8000850C to: if (gc_env.cr[0] == 0) goto L_8000850C;
Translated bge .L_80008518 to: if (gc_env.cr[0] >= 0) goto L_80008518;
Translated b .L_800084E0 to: goto L_800084E0;
Translated cmpwi r0 0xc to: gc_env.cr[0] = (gc_env.r[0] == 0xc) ? 0 : (gc_env.r[0] < 0xc ? -1 : 1); // Compare with immediate
Translated bge .L_800084E0 to: if (gc_env.cr[0] >= 0) goto L_800084E0;
Translated b .L_8000850C to: goto L_8000850C;
Processing opcode: lwz, operands: ['r3', '-0x4(r31)']
Translated lwz r3 -0x4(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + -0x4); // lwz r3, -0x4(r31)']
Translated bl fn_8000863C to: fn_8000863C();
Translated b .L_800084E0 to: goto L_800084E0;
Translated lis r3 0x8130 to: ['gc_env.r[3] = -32464 << 16; // lis r3, 0x8130']
Translated mr r4 r30 to: gc_env.r[4] = gc_env.r[30]; // Move register
Translated bl ICInvalidateRange to: ICInvalidateRange();
Translated lis r3 0x8130 to: ['gc_env.r[3] = -32464 << 16; // lis r3, 0x8130']
Translated bl fn_80008330 to: fn_80008330();
Processing opcode: lwz, operands: ['r0', '0x34c(r1)']
Translated lwz r0 0x34c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34C); // lwz r0, 0x34C(r1)']
Processing opcode: lwz, operands: ['r31', '0x344(r1)']
Translated lwz r31 0x344(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x344); // lwz r31, 0x344(r1)']
Processing opcode: lwz, operands: ['r30', '0x340(r1)']
Translated lwz r30 0x340(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x340); // lwz r30, 0x340(r1)']
Processing opcode: lwz, operands: ['r29', '0x33c(r1)']
Translated lwz r29 0x33c(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x33C); // lwz r29, 0x33C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x348']
Translated addi r1 r1 0x348 to: ['gc_env.r[1] += 840; // addi r1, r1, 0x348']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: lwz, operands: ['r5', 'ResetFunctionQueue_8001EEC0@sda21(r0)']
Translated lwz r5 ResetFunctionQueue_8001EEC0@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&ResetFunctionQueue_8001EEC0); // lwz r5, ResetFunctionQueue_8001EEC0@sda21(r0)']
Translated b .L_80008554 to: goto L_80008554;
Processing opcode: lwz, operands: ['r5', '0x8(r5)']
Translated lwz r5 0x8(r5) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x8); // lwz r5, 0x8(r5)']
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000856C to: if (gc_env.cr[0] == 0) goto L_8000856C;
Processing opcode: lwz, operands: ['r4', '0x4(r5)']
Translated lwz r4 0x4(r5) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x4); // lwz r4, 0x4(r5)']
Processing opcode: lwz, operands: ['r0', '0x4(r3)']
Translated lwz r0 0x4(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4); // lwz r0, 0x4(r3)']
Translated cmplw r4 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated ble .L_80008550 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80008550; // ble .L_80008550']
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800085A4 to: if (gc_env.cr[0] != 0) goto L_800085A4;
Processing opcode: li, operands: ['r5', 'ResetFunctionQueue_8001EEC0@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Processing opcode: lwzu, operands: ['r4', '0x4(r5)']
Translated lwzu r4 0x4(r5) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x4); // lwzu r4, 0x4(r5)', 'gc_env.r[5] = gc_env.r[5] + 0x4;']
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000858C to: if (gc_env.cr[0] != 0) goto L_8000858C;
Processing opcode: stw, operands: ['r3', 'ResetFunctionQueue_8001EEC0@sda21(r0)']
Translated stw r3 ResetFunctionQueue_8001EEC0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&ResetFunctionQueue_8001EEC0, gc_env.r[3]); // stw r3, ResetFunctionQueue_8001EEC0@sda21(r0)']
Translated b .L_80008590 to: goto L_80008590;
Processing opcode: stw, operands: ['r3', '0x8(r4)']
Translated stw r3 0x8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x8, gc_env.r[3]); // stw r3, 0x8(r4)']
Processing opcode: stw, operands: ['r4', '0xc(r3)']
Translated stw r4 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[4]); // stw r4, 0xC(r3)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x8(r3)']
Translated stw r0 0x8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[0]); // stw r0, 0x8(r3)']
Processing opcode: stw, operands: ['r3', '0x0(r5)']
Translated stw r3 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[3]); // stw r3, (r5)']
Translated blr  to: return;
Processing opcode: stw, operands: ['r5', '0x8(r3)']
Translated stw r5 0x8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[5]); // stw r5, 0x8(r3)']
Processing opcode: lwz, operands: ['r4', '0xc(r5)']
Translated lwz r4 0xc(r5) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xC); // lwz r4, 0xC(r5)']
Processing opcode: stw, operands: ['r3', '0xc(r5)']
Translated stw r3 0xc(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0xC, gc_env.r[3]); // stw r3, 0xC(r5)']
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r4', '0xc(r3)']
Translated stw r4 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[4]); // stw r4, 0xC(r3)']
Translated bne .L_800085C4 to: if (gc_env.cr[0] != 0) goto L_800085C4;
Processing opcode: stw, operands: ['r3', 'ResetFunctionQueue_8001EEC0@sda21(r0)']
Translated stw r3 ResetFunctionQueue_8001EEC0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&ResetFunctionQueue_8001EEC0, gc_env.r[3]); // stw r3, ResetFunctionQueue_8001EEC0@sda21(r0)']
Translated blr  to: return;
Processing opcode: stw, operands: ['r3', '0x8(r4)']
Translated stw r3 0x8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x8, gc_env.r[3]); // stw r3, 0x8(r4)']
Translated blr  to: return;
Translated b .L_800085EC to: goto L_800085EC;
Translated mfspr r8 HID0 to: ['gc_env.r[8] = gc_env.hid0; // mfspr r8, HID0']
Translated ori r8 r8 0x8 to: ['gc_env.r[8] |= 8; // ori r8, r8, 0x8']
Translated mtspr HID0 r8 to: ['gc_env.hid0 = gc_env.r[8]; // mtspr HID0, r8']
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated nop  to: ['// nop']
Translated b .L_800085F0 to: goto L_800085F0;
Translated b .L_8000860C to: goto L_8000860C;
Translated mftb r5 268 to: ['gc_env.r[5] = (uint32_t)(gc_env.tb & 0xFFFFFFFF); // mftb r5, 268']
Translated mftb r6 268 to: ['gc_env.r[6] = (uint32_t)(gc_env.tb & 0xFFFFFFFF); // mftb r6, 268']
Processing opcode: subf, operands: ['r7', 'r5', 'r6']
Translated subf r7 r5 r6 to: ['gc_env.r[7] = gc_env.r[6] - gc_env.r[5]; // subf r7, r5, r6']
Translated cmplwi r7 0x1124 to: gc_env.cr[0] = ((uint32_t)gc_env.r[7] == 0x1124) ? 0 : ((uint32_t)gc_env.r[7] < 0x1124 ? -1 : 1); // Logical compare with immediate
Translated blt .L_800085F4 to: ['if (gc_env.cr[0] & 0x8) goto L_800085F4; // blt .L_800085F4']
Translated nop  to: ['// nop']
Translated b .L_80008610 to: goto L_80008610;
Translated b .L_8000862C to: goto L_8000862C;
Translated lis r8 0xcc00 to: ['gc_env.r[8] = -13312 << 16; // lis r8, 0xcc00']
Translated ori r8 r8 0x3000 to: ['gc_env.r[8] |= 12288; // ori r8, r8, 0x3000']
Processing opcode: li, operands: ['r4', '0x3']
Translated li r4 0x3 to: ['gc_env.r[4] = 0x3; // li r4, 0x3']
Processing opcode: stw, operands: ['r4', '0x24(r8)']
Translated stw r4 0x24(r8) to: ['gc_mem_write32(gc_env.ram, gc_env.r[8] + 0x24, gc_env.r[4]); // stw r4, 0x24(r8)']
Processing opcode: stw, operands: ['r3', '0x24(r8)']
Translated stw r3 0x24(r8) to: ['gc_mem_write32(gc_env.ram, gc_env.r[8] + 0x24, gc_env.r[3]); // stw r3, 0x24(r8)']
Translated nop  to: ['// nop']
Translated b .L_80008630 to: goto L_80008630;
Translated b .L_80008638 to: goto L_80008638;
Translated nop  to: ['// nop']
Translated b .L_80008630 to: goto L_80008630;
Translated b .L_800085D0 to: goto L_800085D0;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x2000']
Translated addi r3 r3 0x2000 to: ['gc_env.r[3] += 8192; // addi r3, r3, 0x2000']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: sth, operands: ['r0', '0x2(r3)']
Translated sth r0 0x2(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x2, gc_env.r[0]); // sth r0, 0x2(r3)']
Translated bl ICFlashInvalidate to: ICFlashInvalidate();
Translated slwi r3 r31 3 to: ['gc_env.r[3] = gc_env.r[31] << 3; // slwi r3, r31, 3']
Translated bl Reset to: Reset();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x40(r1)']
Translated stwu r1 -0x40(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x40, gc_env.r[1]); // stwu r1, -0x40(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x40;']
Translated stmw r26 0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[26]); // stmw r26, 0x28(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[27]); // stmw r26, 0x28(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[28]); // stmw r26, 0x28(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[29]); // stmw r26, 0x28(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[30]); // stmw r26, 0x28(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[31]); // stmw r26, 0x28(r1)']
Translated mr r26 r3 to: gc_env.r[26] = gc_env.r[3]; // Move register
Translated mr r29 r4 to: gc_env.r[29] = gc_env.r[4]; // Move register
Translated mr r30 r5 to: gc_env.r[30] = gc_env.r[5]; // Move register
Translated bl OSDisableScheduler to: OSDisableScheduler();
Translated bl __OSStopAudioSystem to: __OSStopAudioSystem();
Translated cmpwi r26 0x2 to: gc_env.cr[0] = (gc_env.r[26] == 0x2) ? 0 : (gc_env.r[26] < 0x2 ? -1 : 1); // Compare with immediate
Translated bne .L_800086BC to: if (gc_env.cr[0] != 0) goto L_800086BC;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated bl __PADDisableRecalibration to: __PADDisableRecalibration();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated b .L_800086C0 to: goto L_800086C0;
Translated b .L_800086C4 to: goto L_800086C4;
Processing opcode: lwz, operands: ['r27', 'ResetFunctionQueue_8001EEC0@sda21(r0)']
Translated lwz r27 ResetFunctionQueue_8001EEC0@sda21(r0) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, (uint32_t)&ResetFunctionQueue_8001EEC0); // lwz r27, ResetFunctionQueue_8001EEC0@sda21(r0)']
Processing opcode: li, operands: ['r28', '0x0']
Translated li r28 0x0 to: ['gc_env.r[28] = 0x0; // li r28, 0x0']
Translated b .L_800086D0 to: goto L_800086D0;
Translated b .L_800086D4 to: goto L_800086D4;
Translated b .L_800086F8 to: goto L_800086F8;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r12', '0x0(r27)']
Translated lwz r12 0x0(r27) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[27]); // lwz r12, (r27)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Processing opcode: lwz, operands: ['r27', '0x8(r27)']
Translated lwz r27 0x8(r27) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[27] + 0x8); // lwz r27, 0x8(r27)']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r28 r28 r0 to: ['gc_env.r[28] = gc_env.r[28] | gc_env.r[0]; // or r28, r28, r0']
Translated cmplwi r27 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[27] == 0x0) ? 0 : ((uint32_t)gc_env.r[27] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800086D8 to: if (gc_env.cr[0] != 0) goto L_800086D8;
Translated bl __OSSyncSram to: __OSSyncSram();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r28 r28 r0 to: ['gc_env.r[28] = gc_env.r[28] | gc_env.r[0]; // or r28, r28, r0']
Translated cmpwi r28 0x0 to: gc_env.cr[0] = (gc_env.r[28] == 0x0) ? 0 : (gc_env.r[28] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80008720 to: if (gc_env.cr[0] == 0) goto L_80008720;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated b .L_80008724 to: goto L_80008724;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800086C4 to: if (gc_env.cr[0] == 0) goto L_800086C4;
Translated cmpwi r26 0x1 to: gc_env.cr[0] = (gc_env.r[26] == 0x1) ? 0 : (gc_env.r[26] < 0x1 ? -1 : 1); // Compare with immediate
Translated bne .L_80008768 to: if (gc_env.cr[0] != 0) goto L_80008768;
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80008768 to: if (gc_env.cr[0] == 0) goto L_80008768;
Translated bl __OSLockSram to: __OSLockSram();
Processing opcode: lbz, operands: ['r0', '0x13(r3)']
Translated lbz r0 0x13(r3) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x13); // lbz r0, 0x13(r3)']
Translated ori r0 r0 0x40 to: ['gc_env.r[0] |= 64; // ori r0, r0, 0x40']
Processing opcode: stb, operands: ['r0', '0x13(r3)']
Translated stb r0 0x13(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x13, gc_env.r[0]); // stb r0, 0x13(r3)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated bl __OSUnlockSram to: __OSUnlockSram();
Translated b .L_80008758 to: goto L_80008758;
Translated b .L_8000875C to: goto L_8000875C;
Translated bl __OSSyncSram to: __OSSyncSram();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000875C to: if (gc_env.cr[0] == 0) goto L_8000875C;
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r28', 'ResetFunctionQueue_8001EEC0@sda21(r0)']
Translated lwz r28 ResetFunctionQueue_8001EEC0@sda21(r0) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, (uint32_t)&ResetFunctionQueue_8001EEC0); // lwz r28, ResetFunctionQueue_8001EEC0@sda21(r0)']
Processing opcode: li, operands: ['r27', '0x0']
Translated li r27 0x0 to: ['gc_env.r[27] = 0x0; // li r27, 0x0']
Translated b .L_80008778 to: goto L_80008778;
Translated b .L_8000877C to: goto L_8000877C;
Translated b .L_800087A0 to: goto L_800087A0;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r12', '0x0(r28)']
Translated lwz r12 0x0(r28) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r12, (r28)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Processing opcode: lwz, operands: ['r28', '0x8(r28)']
Translated lwz r28 0x8(r28) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[28] + 0x8); // lwz r28, 0x8(r28)']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r27 r27 r0 to: ['gc_env.r[27] = gc_env.r[27] | gc_env.r[0]; // or r27, r27, r0']
Translated cmplwi r28 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[28] == 0x0) ? 0 : ((uint32_t)gc_env.r[28] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80008780 to: if (gc_env.cr[0] != 0) goto L_80008780;
Translated bl __OSSyncSram to: __OSSyncSram();
Translated bl LCDisable to: LCDisable();
Translated cmpwi r26 0x1 to: gc_env.cr[0] = (gc_env.r[26] == 0x1) ? 0 : (gc_env.r[26] < 0x1 ? -1 : 1); // Compare with immediate
Translated bne .L_800087DC to: if (gc_env.cr[0] != 0) goto L_800087DC;
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x2000']
Translated addi r3 r3 0x2000 to: ['gc_env.r[3] += 8192; // addi r3, r3, 0x2000']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: sth, operands: ['r0', '0x2(r3)']
Translated sth r0 0x2(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x2, gc_env.r[0]); // sth r0, 0x2(r3)']
Translated bl ICFlashInvalidate to: ICFlashInvalidate();
Translated slwi r3 r29 3 to: ['gc_env.r[3] = gc_env.r[29] << 3; // slwi r3, r29, 3']
Translated bl Reset to: Reset();
Translated b .L_80008838 to: goto L_80008838;
Translated cmpwi r26 0x0 to: gc_env.cr[0] = (gc_env.r[26] == 0x0) ? 0 : (gc_env.r[26] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80008838 to: if (gc_env.cr[0] != 0) goto L_80008838;
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r3', '0xdc(r3)']
Translated lwz r3 0xdc(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xDC); // lwz r3, 0xDC(r3)']
Translated b .L_800087F0 to: goto L_800087F0;
Translated b .L_800087F4 to: goto L_800087F4;
Translated b .L_80008820 to: goto L_80008820;
Processing opcode: lhz, operands: ['r0', '0x2c8(r3)']
Translated lhz r0 0x2c8(r3) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x2c8); // lhz r0, 0x2c8(r3)']
Processing opcode: lwz, operands: ['r27', '0x2fc(r3)']
Translated lwz r27 0x2fc(r3) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x2FC); // lwz r27, 0x2FC(r3)']
Translated cmpwi r0 0x4 to: gc_env.cr[0] = (gc_env.r[0] == 0x4) ? 0 : (gc_env.r[0] < 0x4 ? -1 : 1); // Compare with immediate
Translated beq .L_80008818 to: if (gc_env.cr[0] == 0) goto L_80008818;
Translated bge .L_8000881C to: if (gc_env.cr[0] >= 0) goto L_8000881C;
Translated cmpwi r0 0x1 to: gc_env.cr[0] = (gc_env.r[0] == 0x1) ? 0 : (gc_env.r[0] < 0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_80008818 to: if (gc_env.cr[0] == 0) goto L_80008818;
Translated b .L_8000881C to: goto L_8000881C;
Translated bl OSCancelThread to: OSCancelThread();
Translated mr r3 r27 to: gc_env.r[3] = gc_env.r[27]; // Move register
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800087F8 to: if (gc_env.cr[0] != 0) goto L_800087F8;
Translated bl OSEnableScheduler to: OSEnableScheduler();
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated mr r4 r30 to: gc_env.r[4] = gc_env.r[30]; // Move register
Translated bl __OSReboot to: __OSReboot();
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r3', '0xdc(r3)']
Translated lwz r3 0xdc(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xDC); // lwz r3, 0xDC(r3)']
Translated b .L_80008844 to: goto L_80008844;
Translated b .L_80008848 to: goto L_80008848;
Translated b .L_80008874 to: goto L_80008874;
Processing opcode: lhz, operands: ['r0', '0x2c8(r3)']
Translated lhz r0 0x2c8(r3) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x2c8); // lhz r0, 0x2c8(r3)']
Processing opcode: lwz, operands: ['r27', '0x2fc(r3)']
Translated lwz r27 0x2fc(r3) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x2FC); // lwz r27, 0x2FC(r3)']
Translated cmpwi r0 0x4 to: gc_env.cr[0] = (gc_env.r[0] == 0x4) ? 0 : (gc_env.r[0] < 0x4 ? -1 : 1); // Compare with immediate
Translated beq .L_8000886C to: if (gc_env.cr[0] == 0) goto L_8000886C;
Translated bge .L_80008870 to: if (gc_env.cr[0] >= 0) goto L_80008870;
Translated cmpwi r0 0x1 to: gc_env.cr[0] = (gc_env.r[0] == 0x1) ? 0 : (gc_env.r[0] < 0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_8000886C to: if (gc_env.cr[0] == 0) goto L_8000886C;
Translated b .L_80008870 to: goto L_80008870;
Translated bl OSCancelThread to: OSCancelThread();
Translated mr r3 r27 to: gc_env.r[3] = gc_env.r[27]; // Move register
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000884C to: if (gc_env.cr[0] != 0) goto L_8000884C;
Translated lis r29 0x8000 to: ['gc_env.r[29] = -32768 << 16; // lis r29, 0x8000']
Processing opcode: addi, operands: ['r3', 'r29', '0x40']
Translated addi r3 r29 0x40 to: ['gc_env.r[3] = gc_env.r[29] + 64; // addi r3, r29, 0x40']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r5', '0x8c']
Translated li r5 0x8c to: ['gc_env.r[5] = 0x8c; // li r5, 0x8c']
Translated bl memset to: memset();
Processing opcode: addi, operands: ['r3', 'r29', '0xd4']
Translated addi r3 r29 0xd4 to: ['gc_env.r[3] = gc_env.r[29] + 212; // addi r3, r29, 0xd4']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r5', '0x14']
Translated li r5 0x14 to: ['gc_env.r[5] = 0x14; // li r5, 0x14']
Translated bl memset to: memset();
Processing opcode: addi, operands: ['r3', 'r29', '0xf4']
Translated addi r3 r29 0xf4 to: ['gc_env.r[3] = gc_env.r[29] + 244; // addi r3, r29, 0xf4']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r5', '0x4']
Translated li r5 0x4 to: ['gc_env.r[5] = 0x4; // li r5, 0x4']
Translated bl memset to: memset();
Processing opcode: addi, operands: ['r3', 'r29', '0x3000']
Translated addi r3 r29 0x3000 to: ['gc_env.r[3] = gc_env.r[29] + 12288; // addi r3, r29, 0x3000']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r5', '0xc0']
Translated li r5 0xc0 to: ['gc_env.r[5] = 0xc0; // li r5, 0xc0']
Translated bl memset to: memset();
Processing opcode: addi, operands: ['r3', 'r29', '0x30c8']
Translated addi r3 r29 0x30c8 to: ['gc_env.r[3] = gc_env.r[29] + 12488; // addi r3, r29, 0x30c8']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r5', '0xc']
Translated li r5 0xc to: ['gc_env.r[5] = 0xc; // li r5, 0xc']
Translated bl memset to: memset();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl __PADDisableRecalibration to: __PADDisableRecalibration();
Translated lmw r26 0x28(r1) to: ['gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r26, 0x28(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r26, 0x28(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r26, 0x28(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r26, 0x28(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x38); // lmw r26, 0x28(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lmw r26, 0x28(r1)']
Processing opcode: lwz, operands: ['r0', '0x44(r1)']
Translated lwz r0 0x44(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lwz r0, 0x44(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x40']
Translated addi r1 r1 0x40 to: ['gc_env.r[1] += 64; // addi r1, r1, 0x40']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lbz, operands: ['r0', '0x30e2(r3)']
Translated lbz r0 0x30e2(r3) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x30e2); // lbz r0, 0x30e2(r3)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80008904 to: if (gc_env.cr[0] == 0) goto L_80008904;
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Translated b .L_80008918 to: goto L_80008918;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x3000']
Translated addi r3 r3 0x3000 to: ['gc_env.r[3] += 12288; // addi r3, r3, 0x3000']
Processing opcode: lwz, operands: ['r0', '0x24(r3)']
Translated lwz r0 0x24(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x24); // lwz r0, 0x24(r3)']
Translated clrrwi r0 r0 3 to: gc_env.r[0] = gc_env.r[0] & ~((1ULL << 3) - 1); // Clear rightmost 3 bits
Translated srwi r3 r0 3 to: ['gc_env.r[3] = gc_env.r[0] >> 3; // srwi r3, r0, 3']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x28(r1)']
Translated stwu r1 -0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x28, gc_env.r[1]); // stwu r1, -0x28(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x28;']
Processing opcode: stw, operands: ['r31', '0x24(r1)']
Translated stw r31 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[31]); // stw r31, 0x24(r1)']
Processing opcode: stw, operands: ['r30', '0x20(r1)']
Translated stw r30 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[30]); // stw r30, 0x20(r1)']
Processing opcode: stw, operands: ['r29', '0x1c(r1)']
Translated stw r29 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[29]); // stw r29, 0x1C(r1)']
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Translated lis r5 0x8000 to: ['gc_env.r[5] = -32768 << 16; // lis r5, 0x8000']
Processing opcode: stw, operands: ['r4', 'lbl_8001EEDC@sda21(r0)']
Translated stw r4 lbl_8001EEDC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EEDC, gc_env.r[4]); // stw r4, lbl_8001EEDC@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0xf8(r5)']
Translated lwz r0 0xf8(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xF8); // lwz r0, 0xF8(r5)']
Translated lis r4 0x431c to: ['gc_env.r[4] = 17180 << 16; // lis r4, 0x431c']
Processing opcode: subi, operands: ['r4', 'r4', '0x217d']
Translated subi r4 r4 0x217d to: ['gc_env.r[4] = gc_env.r[4] - 8573; // subi r4, r4, 8573']
Processing opcode: stw, operands: ['r3', 'lbl_8001EED8@sda21(r0)']
Translated stw r3 lbl_8001EED8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EED8, gc_env.r[3]); // stw r3, lbl_8001EED8@sda21(r0)']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Translated mulhwu r0 r4 r0 to: ['gc_env.r[0] = (uint32_t)(((uint64_t)gc_env.r[4] * (uint64_t)gc_env.r[0]) >> 32); // mulhwu r0, r4, r0']
Translated srwi r0 r0 15 to: ['gc_env.r[0] = gc_env.r[0] >> 15; // srwi r0, r0, 15']
Processing opcode: mulli, operands: ['r0', 'r0', '0x64']
Translated mulli r0 r0 0x64 to: ['gc_env.r[0] = gc_env.r[0] * 100; // mulli r0, r0, 100']
Translated srwi r29 r0 3 to: ['gc_env.r[29] = gc_env.r[0] >> 3; // srwi r29, r0, 3']
Processing opcode: li, operands: ['r30', '0x0']
Translated li r30 0x0 to: ['gc_env.r[30] = 0x0; // li r30, 0x0']
Translated lis r31 0xcc00 to: ['gc_env.r[31] = -13312 << 16; // lis r31, 0xcc00']
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: lwz, operands: ['r6', 'lbl_8001EEDC@sda21(r0)']
Translated lwz r6 lbl_8001EEDC@sda21(r0) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEDC); // lwz r6, lbl_8001EEDC@sda21(r0)']
Translated xoris r5 r30 0x8000 to: ['gc_env.r[5] = gc_env.r[30] ^ 0x80000000; // xoris r5, r30, 0x8000']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EED8@sda21(r0)']
Translated lwz r0 lbl_8001EED8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EED8); // lwz r0, lbl_8001EED8@sda21(r0)']
Translated subfc r4 r6 r4 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[4] - gc_env.r[6];', 'gc_env.r[4] = (uint32_t)subfc_temp; // subfc r4, r6, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= gc_env.r[6] ? 0x20000000 : 0);']
Translated subfe r0 r0 r3 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[3] - gc_env.r[0] - subfe_borrow;', 'gc_env.r[0] = (uint32_t)subfe_temp; // subfe r0, r0, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= (gc_env.r[0] + subfe_borrow) ? 0x20000000 : 0);']
Translated xoris r3 r0 0x8000 to: ['gc_env.r[3] = gc_env.r[0] ^ 0x80000000; // xoris r3, r0, 0x8000']
Translated subfc r0 r29 r4 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[4] - gc_env.r[29];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r29, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= gc_env.r[29] ? 0x20000000 : 0);']
Translated subfe r5 r5 r3 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[3] - gc_env.r[5] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r5, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= (gc_env.r[5] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r5 r3 r3 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[3] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r3, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r5 r5 to: ['gc_env.r[5] = -(int32_t)gc_env.r[5]; // neg r5, r5']
Translated beq .L_800089A8 to: if (gc_env.cr[0] == 0) goto L_800089A8;
Processing opcode: lwz, operands: ['r0', '0x3000(r31)']
Translated lwz r0 0x3000(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x3000); // lwz r0, 0x3000(r31)']
Translated rlwinm. r0 r0 0 15 15 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x10000; // rlwinm r0, r0, 0, 15, 15', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000896C to: if (gc_env.cr[0] == 0) goto L_8000896C;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r0', '0x3000(r3)']
Translated lwz r0 0x3000(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x3000); // lwz r0, 0x3000(r3)']
Translated rlwinm. r0 r0 0 15 15 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x10000; // rlwinm r0, r0, 0, 15, 15', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_800089E8 to: if (gc_env.cr[0] != 0) goto L_800089E8;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EECC@sda21(r0)']
Translated stw r0 lbl_8001EECC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EECC, gc_env.r[0]); // stw r0, lbl_8001EECC@sda21(r0)']
Processing opcode: li, operands: ['r3', '0x200']
Translated li r3 0x200 to: ['gc_env.r[3] = 0x200; // li r3, 0x200']
Processing opcode: stw, operands: ['r0', 'lbl_8001EED0@sda21(r0)']
Translated stw r0 lbl_8001EED0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EED0, gc_env.r[0]); // stw r0, lbl_8001EED0@sda21(r0)']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Processing opcode: lwz, operands: ['r12', 'lbl_8001EEC8@sda21(r0)']
Translated lwz r12 lbl_8001EEC8@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEC8); // lwz r12, lbl_8001EEC8@sda21(r0)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800089E8 to: if (gc_env.cr[0] == 0) goto L_800089E8;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: stw, operands: ['r0', 'lbl_8001EEC8@sda21(r0)']
Translated stw r0 lbl_8001EEC8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EEC8, gc_env.r[0]); // stw r0, lbl_8001EEC8@sda21(r0)']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: stw, operands: ['r0', '0x3000(r3)']
Translated stw r0 0x3000(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x3000, gc_env.r[0]); // stw r0, 0x3000(r3)']
Processing opcode: lwz, operands: ['r0', '0x2c(r1)']
Translated lwz r0 0x2c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r0, 0x2C(r1)']
Processing opcode: lwz, operands: ['r31', '0x24(r1)']
Translated lwz r31 0x24(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r31, 0x24(r1)']
Processing opcode: lwz, operands: ['r30', '0x20(r1)']
Translated lwz r30 0x20(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r30, 0x20(r1)']
Processing opcode: lwz, operands: ['r29', '0x1c(r1)']
Translated lwz r29 0x1c(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r29, 0x1C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x28']
Translated addi r1 r1 0x28 to: ['gc_env.r[1] += 40; // addi r1, r1, 0x28']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 Scb_8001BBC0@ha to: ['gc_env.r[3] = ((uint32_t)&Scb_8001BBC0 >> 16) & 0xFFFF; // lis r3, Scb_8001BBC0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: addi, operands: ['r31', 'r3', 'Scb_8001BBC0@l']
Translated addi r31 r3 Scb_8001BBC0@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&Scb_8001BBC0 & 0xFFFF); // addi r31, r3, Scb_8001BBC0@l']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: addi, operands: ['r30', 'r31', '0x40']
Translated addi r30 r31 0x40 to: ['gc_env.r[30] = gc_env.r[31] + 64; // addi r30, r31, 0x40']
Processing opcode: lwz, operands: ['r4', '0x40(r31)']
Translated lwz r4 0x40(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x40); // lwz r4, 0x40(r31)']
Processing opcode: add, operands: ['r3', 'r31', 'r4']
Translated add r3 r31 r4 to: ['gc_env.r[3] = gc_env.r[31] + gc_env.r[4]; // add r3, r31, r4']
Translated subfic r5 r4 0x40 to: ['gc_env.r[5] = 64 - gc_env.r[4]; // subfic r5, r4, 64', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (64 >= gc_env.r[4] ? 0x20000000 : 0);']
Translated bl fn_80008A70 to: fn_80008A70();
Processing opcode: stw, operands: ['r3', '0x4c(r31)']
Translated stw r3 0x4c(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x4C, gc_env.r[3]); // stw r3, 0x4C(r31)']
Processing opcode: lwz, operands: ['r0', '0x4c(r31)']
Translated lwz r0 0x4c(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x4C); // lwz r0, 0x4C(r31)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80008A58 to: if (gc_env.cr[0] == 0) goto L_80008A58;
Processing opcode: li, operands: ['r0', '0x40']
Translated li r0 0x40 to: ['gc_env.r[0] = 0x40; // li r0, 0x40']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r6 fn_80008A10@ha to: ['gc_env.r[6] = ((uint32_t)&fn_80008A10 >> 16) & 0xFFFF; // lis r6, fn_80008A10@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r0', 'r6', 'fn_80008A10@l']
Translated addi r0 r6 fn_80008A10@l to: ['gc_env.r[0] = gc_env.r[6] + ((uint32_t)&fn_80008A10 & 0xFFFF); // addi r0, r6, fn_80008A10@l']
Processing opcode: stwu, operands: ['r1', '-0x28(r1)']
Translated stwu r1 -0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x28, gc_env.r[1]); // stwu r1, -0x28(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x28;']
Processing opcode: stw, operands: ['r31', '0x24(r1)']
Translated stw r31 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[31]); // stw r31, 0x24(r1)']
Processing opcode: addi, operands: ['r31', 'r4', '0x0']
Translated addi r31 r4 0x0 to: ['gc_env.r[31] = gc_env.r[4] + 0; // addi r31, r4, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Processing opcode: stw, operands: ['r30', '0x20(r1)']
Translated stw r30 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[30]); // stw r30, 0x20(r1)']
Processing opcode: addi, operands: ['r30', 'r5', '0x0']
Translated addi r30 r5 0x0 to: ['gc_env.r[30] = gc_env.r[5] + 0; // addi r30, r5, 0x0']
Translated mr r5 r0 to: gc_env.r[5] = gc_env.r[0]; // Move register
Processing opcode: stw, operands: ['r29', '0x1c(r1)']
Translated stw r29 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[29]); // stw r29, 0x1C(r1)']
Processing opcode: addi, operands: ['r29', 'r3', '0x0']
Translated addi r29 r3 0x0 to: ['gc_env.r[29] = gc_env.r[3] + 0; // addi r29, r3, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl EXILock to: EXILock();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80008ABC to: if (gc_env.cr[0] != 0) goto L_80008ABC;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80008B6C to: goto L_80008B6C;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Processing opcode: li, operands: ['r5', '0x3']
Translated li r5 0x3 to: ['gc_env.r[5] = 0x3; // li r5, 0x3']
Translated bl EXISelect to: EXISelect();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80008AE4 to: if (gc_env.cr[0] != 0) goto L_80008AE4;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl EXIUnlock to: EXIUnlock();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80008B6C to: goto L_80008B6C;
Translated slwi r31 r31 6 to: ['gc_env.r[31] = gc_env.r[31] << 6; // slwi r31, r31, 6']
Processing opcode: addi, operands: ['r0', 'r31', '0x100']
Translated addi r0 r31 0x100 to: ['gc_env.r[0] = gc_env.r[31] + 256; // addi r0, r31, 0x100']
Translated oris r0 r0 0xa000 to: ['gc_env.r[0] = gc_env.r[0] | 0xA0000000; // oris r0, r0, 0xA000']
Processing opcode: stw, operands: ['r0', '0x14(r1)']
Translated stw r0 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stw r0, 0x14(r1)']
Processing opcode: addi, operands: ['r4', 'r1', '0x14']
Translated addi r4 r1 0x14 to: ['gc_env.r[4] = gc_env.r[1] + 20; // addi r4, r1, 0x14']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r5', '0x4']
Translated li r5 0x4 to: ['gc_env.r[5] = 0x4; // li r5, 0x4']
Processing opcode: li, operands: ['r6', '0x1']
Translated li r6 0x1 to: ['gc_env.r[6] = 0x1; // li r6, 0x1']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bl EXIImm to: EXIImm();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r31 r0 5 to: ['gc_env.r[31] = gc_env.r[0] >> 5; // srwi r31, r0, 5']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl EXISync to: EXISync();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Processing opcode: addi, operands: ['r4', 'r29', '0x0']
Translated addi r4 r29 0x0 to: ['gc_env.r[4] = gc_env.r[29] + 0; // addi r4, r29, 0x0']
Processing opcode: addi, operands: ['r5', 'r30', '0x0']
Translated addi r5 r30 0x0 to: ['gc_env.r[5] = gc_env.r[30] + 0; // addi r5, r30, 0x0']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r6', '0x1']
Translated li r6 0x1 to: ['gc_env.r[6] = 0x1; // li r6, 0x1']
Translated bl fn_8000A0E8 to: fn_8000A0E8();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl EXIDeselect to: EXIDeselect();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl EXIUnlock to: EXIUnlock();
Translated cntlzw r0 r31 to: ['uint32_t val = gc_env.r[31]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r31']
Translated srwi r3 r0 5 to: ['gc_env.r[3] = gc_env.r[0] >> 5; // srwi r3, r0, 5']
Processing opcode: lwz, operands: ['r0', '0x2c(r1)']
Translated lwz r0 0x2c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r0, 0x2C(r1)']
Processing opcode: lwz, operands: ['r31', '0x24(r1)']
Translated lwz r31 0x24(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r31, 0x24(r1)']
Processing opcode: lwz, operands: ['r30', '0x20(r1)']
Translated lwz r30 0x20(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r30, 0x20(r1)']
Processing opcode: lwz, operands: ['r29', '0x1c(r1)']
Translated lwz r29 0x1c(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r29, 0x1C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x28']
Translated addi r1 r1 0x28 to: ['gc_env.r[1] += 40; // addi r1, r1, 0x28']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 Scb_8001BBC0@ha to: ['gc_env.r[3] = ((uint32_t)&Scb_8001BBC0 >> 16) & 0xFFFF; // lis r3, Scb_8001BBC0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r4', '0x40']
Translated li r4 0x40 to: ['gc_env.r[4] = 0x40; // li r4, 0x40']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: addi, operands: ['r30', 'r3', 'Scb_8001BBC0@l']
Translated addi r30 r3 Scb_8001BBC0@l to: ['gc_env.r[30] = gc_env.r[3] + ((uint32_t)&Scb_8001BBC0 & 0xFFFF); // addi r30, r3, Scb_8001BBC0@l']
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: stw, operands: ['r31', '0x44(r30)']
Translated stw r31 0x44(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x44, gc_env.r[31]); // stw r31, 0x44(r30)']
Processing opcode: stw, operands: ['r31', '0x48(r30)']
Translated stw r31 0x48(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x48, gc_env.r[31]); // stw r31, 0x48(r30)']
Translated bl DCInvalidateRange to: DCInvalidateRange();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl EXILock to: EXILock();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80008BD8 to: if (gc_env.cr[0] != 0) goto L_80008BD8;
Translated b .L_80008C98 to: goto L_80008C98;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Processing opcode: li, operands: ['r5', '0x3']
Translated li r5 0x3 to: ['gc_env.r[5] = 0x3; // li r5, 0x3']
Translated bl EXISelect to: EXISelect();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80008BFC to: if (gc_env.cr[0] != 0) goto L_80008BFC;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl EXIUnlock to: EXIUnlock();
Translated b .L_80008C98 to: goto L_80008C98;
Translated lis r3 0x2000 to: ['gc_env.r[3] = 8192 << 16; // lis r3, 0x2000']
Processing opcode: addi, operands: ['r0', 'r3', '0x100']
Translated addi r0 r3 0x100 to: ['gc_env.r[0] = gc_env.r[3] + 256; // addi r0, r3, 0x100']
Processing opcode: stw, operands: ['r0', '0x8(r1)']
Translated stw r0 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stw r0, 0x8(r1)']
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r5', '0x4']
Translated li r5 0x4 to: ['gc_env.r[5] = 0x4; // li r5, 0x4']
Processing opcode: li, operands: ['r6', '0x1']
Translated li r6 0x1 to: ['gc_env.r[6] = 0x1; // li r6, 0x1']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bl EXIImm to: EXIImm();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r31 r0 5 to: ['gc_env.r[31] = gc_env.r[0] >> 5; // srwi r31, r0, 5']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl EXISync to: EXISync();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r5', '0x40']
Translated li r5 0x40 to: ['gc_env.r[5] = 0x40; // li r5, 0x40']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bl EXIDma to: EXIDma();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl EXISync to: EXISync();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl EXIDeselect to: EXIDeselect();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl EXIUnlock to: EXIUnlock();
Translated cntlzw r0 r31 to: ['uint32_t val = gc_env.r[31]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r31']
Translated srwi r31 r0 5 to: ['gc_env.r[31] = gc_env.r[0] >> 5; // srwi r31, r0, 5']
Processing opcode: stw, operands: ['r31', '0x4c(r30)']
Translated stw r31 0x4c(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x4C, gc_env.r[31]); // stw r31, 0x4C(r30)']
Processing opcode: li, operands: ['r0', '0x40']
Translated li r0 0x40 to: ['gc_env.r[0] = 0x40; // li r0, 0x40']
Processing opcode: stw, operands: ['r0', '0x40(r30)']
Translated stw r0 0x40(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x40, gc_env.r[0]); // stw r0, 0x40(r30)']
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 Scb_8001BBC0@ha to: ['gc_env.r[3] = ((uint32_t)&Scb_8001BBC0 >> 16) & 0xFFFF; // lis r3, Scb_8001BBC0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: addi, operands: ['r31', 'r3', 'Scb_8001BBC0@l']
Translated addi r31 r3 Scb_8001BBC0@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&Scb_8001BBC0 & 0xFFFF); // addi r31, r3, Scb_8001BBC0@l']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', '0x48(r31)']
Translated lwz r0 0x48(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x48); // lwz r0, 0x48(r31)']
Processing opcode: addi, operands: ['r4', 'r31', '0x48']
Translated addi r4 r31 0x48 to: ['gc_env.r[4] = gc_env.r[31] + 72; // addi r4, r31, 0x48']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80008CF4 to: if (gc_env.cr[0] == 0) goto L_80008CF4;
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Translated b .L_80008D00 to: goto L_80008D00;
Processing opcode: stw, operands: ['r3', '0x44(r31)']
Translated stw r3 0x44(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x44, gc_env.r[3]); // stw r3, 0x44(r31)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 Scb_8001BBC0@ha to: ['gc_env.r[3] = ((uint32_t)&Scb_8001BBC0 >> 16) & 0xFFFF; // lis r3, Scb_8001BBC0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: addi, operands: ['r31', 'r3', 'Scb_8001BBC0@l']
Translated addi r31 r3 Scb_8001BBC0@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&Scb_8001BBC0 & 0xFFFF); // addi r31, r3, Scb_8001BBC0@l']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', '0x48(r31)']
Translated lwz r0 0x48(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x48); // lwz r0, 0x48(r31)']
Processing opcode: addi, operands: ['r4', 'r31', '0x48']
Translated addi r4 r31 0x48 to: ['gc_env.r[4] = gc_env.r[31] + 72; // addi r4, r31, 0x48']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80008D50 to: if (gc_env.cr[0] == 0) goto L_80008D50;
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80008D60 to: goto L_80008D60;
Processing opcode: stw, operands: ['r3', '0x44(r31)']
Translated stw r3 0x44(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x44, gc_env.r[3]); // stw r3, 0x44(r31)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: addi, operands: ['r3', 'r31', '0x14']
Translated addi r3 r31 0x14 to: ['gc_env.r[3] = gc_env.r[31] + 20; // addi r3, r31, 0x14']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Translated lis r3 Scb_8001BBC0@ha to: ['gc_env.r[3] = ((uint32_t)&Scb_8001BBC0 >> 16) & 0xFFFF; // lis r3, Scb_8001BBC0@ha']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Translated stmw r27 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[27]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[28]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[29]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[30]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stmw r27, 0x1C(r1)']
Processing opcode: addi, operands: ['r31', 'r3', 'Scb_8001BBC0@l']
Translated addi r31 r3 Scb_8001BBC0@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&Scb_8001BBC0 & 0xFFFF); // addi r31, r3, Scb_8001BBC0@l']
Translated beq .L_80009054 to: if (gc_env.cr[0] == 0) goto L_80009054;
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80008F48 to: if (gc_env.cr[0] != 0) goto L_80008F48;
Processing opcode: lbz, operands: ['r3', '0x13(r31)']
Translated lbz r3 0x13(r31) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x13); // lbz r3, 0x13(r31)']
Translated clrlwi r0 r3 30 to: ['gc_env.r[0] = gc_env.r[3] & 0x3; // clrlwi r0, r3, 30']
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated ble .L_80008DB4 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80008DB4; // ble .L_80008DB4']
Translated clrrwi r0 r3 2 to: gc_env.r[0] = gc_env.r[3] & ~((1ULL << 2) - 1); // Clear rightmost 2 bits
Processing opcode: stb, operands: ['r0', '0x13(r31)']
Translated stb r0 0x13(r31) to: ['gc_mem_write8(gc_env.ram, gc_env.r[31] + 0x13, gc_env.r[0]); // stb r0, 0x13(r31)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: sth, operands: ['r0', '0x2(r31)']
Translated sth r0 0x2(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x2, gc_env.r[0]); // sth r0, 0x2(r31)']
Processing opcode: addi, operands: ['r5', 'r31', '0x14']
Translated addi r5 r31 0x14 to: ['gc_env.r[5] = gc_env.r[31] + 20; // addi r5, r31, 0x14']
Processing opcode: addi, operands: ['r6', 'r31', '0xc']
Translated addi r6 r31 0xc to: ['gc_env.r[6] = gc_env.r[31] + 12; // addi r6, r31, 0xc']
Processing opcode: addi, operands: ['r3', 'r5', '0x1']
Translated addi r3 r5 0x1 to: ['gc_env.r[3] = gc_env.r[5] + 1; // addi r3, r5, 0x1']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: subf, operands: ['r3', 'r6', 'r3']
Translated subf r3 r6 r3 to: ['gc_env.r[3] = gc_env.r[3] - gc_env.r[6]; // subf r3, r6, r3']
Translated cmplw r6 r5 to: gc_env.cr[0] = ((uint32_t)gc_env.r[6] == (uint32_t)gc_env.r[5]) ? 0 : ((uint32_t)gc_env.r[6] < (uint32_t)gc_env.r[5] ? -1 : 1); // Logical compare word
Translated srwi r3 r3 1 to: ['gc_env.r[3] = gc_env.r[3] >> 1; // srwi r3, r3, 1']
Translated bge .L_80008F48 to: if (gc_env.cr[0] >= 0) goto L_80008F48;
Translated srwi. r0 r3 3 to: ['gc_env.r[0] = gc_env.r[3] >> 3; // srwi r0, r3, 3', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated beq .L_80008F18 to: if (gc_env.cr[0] == 0) goto L_80008F18;
Processing opcode: lhz, operands: ['r5', '0x0(r31)']
Translated lhz r5 0x0(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r5, 0x0(r31)']
Processing opcode: lhz, operands: ['r0', '0x0(r6)']
Translated lhz r0 0x0(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x0); // lhz r0, 0x0(r6)']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: lhz, operands: ['r0', '0x0(r6)']
Translated lhz r0 0x0(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x0); // lhz r0, 0x0(r6)']
Processing opcode: lhz, operands: ['r5', '0x2(r31)']
Translated lhz r5 0x2(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x2); // lhz r5, 0x2(r31)']
Translated nor r0 r0 r0 to: ['gc_env.r[0] = ~gc_env.r[0]; // nor r0, r0, r0']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x2(r31)']
Translated sth r0 0x2(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x2, gc_env.r[0]); // sth r0, 0x2(r31)']
Processing opcode: lhz, operands: ['r5', '0x0(r31)']
Translated lhz r5 0x0(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r5, 0x0(r31)']
Processing opcode: lhz, operands: ['r0', '0x2(r6)']
Translated lhz r0 0x2(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x2); // lhz r0, 0x2(r6)']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: lhz, operands: ['r0', '0x2(r6)']
Translated lhz r0 0x2(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x2); // lhz r0, 0x2(r6)']
Processing opcode: lhz, operands: ['r5', '0x2(r31)']
Translated lhz r5 0x2(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x2); // lhz r5, 0x2(r31)']
Translated nor r0 r0 r0 to: ['gc_env.r[0] = ~gc_env.r[0]; // nor r0, r0, r0']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x2(r31)']
Translated sth r0 0x2(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x2, gc_env.r[0]); // sth r0, 0x2(r31)']
Processing opcode: lhz, operands: ['r5', '0x0(r31)']
Translated lhz r5 0x0(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r5, 0x0(r31)']
Processing opcode: lhz, operands: ['r0', '0x4(r6)']
Translated lhz r0 0x4(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x4); // lhz r0, 0x4(r6)']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: lhz, operands: ['r0', '0x4(r6)']
Translated lhz r0 0x4(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x4); // lhz r0, 0x4(r6)']
Processing opcode: lhz, operands: ['r5', '0x2(r31)']
Translated lhz r5 0x2(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x2); // lhz r5, 0x2(r31)']
Translated nor r0 r0 r0 to: ['gc_env.r[0] = ~gc_env.r[0]; // nor r0, r0, r0']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x2(r31)']
Translated sth r0 0x2(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x2, gc_env.r[0]); // sth r0, 0x2(r31)']
Processing opcode: lhz, operands: ['r5', '0x0(r31)']
Translated lhz r5 0x0(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r5, 0x0(r31)']
Processing opcode: lhz, operands: ['r0', '0x6(r6)']
Translated lhz r0 0x6(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x6); // lhz r0, 0x6(r6)']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: lhz, operands: ['r0', '0x6(r6)']
Translated lhz r0 0x6(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x6); // lhz r0, 0x6(r6)']
Processing opcode: lhz, operands: ['r5', '0x2(r31)']
Translated lhz r5 0x2(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x2); // lhz r5, 0x2(r31)']
Translated nor r0 r0 r0 to: ['gc_env.r[0] = ~gc_env.r[0]; // nor r0, r0, r0']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x2(r31)']
Translated sth r0 0x2(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x2, gc_env.r[0]); // sth r0, 0x2(r31)']
Processing opcode: lhz, operands: ['r5', '0x0(r31)']
Translated lhz r5 0x0(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r5, 0x0(r31)']
Processing opcode: lhz, operands: ['r0', '0x8(r6)']
Translated lhz r0 0x8(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x8); // lhz r0, 0x8(r6)']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: lhz, operands: ['r0', '0x8(r6)']
Translated lhz r0 0x8(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x8); // lhz r0, 0x8(r6)']
Processing opcode: lhz, operands: ['r5', '0x2(r31)']
Translated lhz r5 0x2(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x2); // lhz r5, 0x2(r31)']
Translated nor r0 r0 r0 to: ['gc_env.r[0] = ~gc_env.r[0]; // nor r0, r0, r0']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x2(r31)']
Translated sth r0 0x2(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x2, gc_env.r[0]); // sth r0, 0x2(r31)']
Processing opcode: lhz, operands: ['r5', '0x0(r31)']
Translated lhz r5 0x0(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r5, 0x0(r31)']
Processing opcode: lhz, operands: ['r0', '0xa(r6)']
Translated lhz r0 0xa(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0xa); // lhz r0, 0xa(r6)']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: lhz, operands: ['r0', '0xa(r6)']
Translated lhz r0 0xa(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0xa); // lhz r0, 0xa(r6)']
Processing opcode: lhz, operands: ['r5', '0x2(r31)']
Translated lhz r5 0x2(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x2); // lhz r5, 0x2(r31)']
Translated nor r0 r0 r0 to: ['gc_env.r[0] = ~gc_env.r[0]; // nor r0, r0, r0']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x2(r31)']
Translated sth r0 0x2(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x2, gc_env.r[0]); // sth r0, 0x2(r31)']
Processing opcode: lhz, operands: ['r5', '0x0(r31)']
Translated lhz r5 0x0(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r5, 0x0(r31)']
Processing opcode: lhz, operands: ['r0', '0xc(r6)']
Translated lhz r0 0xc(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0xc); // lhz r0, 0xc(r6)']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: lhz, operands: ['r0', '0xc(r6)']
Translated lhz r0 0xc(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0xc); // lhz r0, 0xc(r6)']
Processing opcode: lhz, operands: ['r5', '0x2(r31)']
Translated lhz r5 0x2(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x2); // lhz r5, 0x2(r31)']
Translated nor r0 r0 r0 to: ['gc_env.r[0] = ~gc_env.r[0]; // nor r0, r0, r0']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x2(r31)']
Translated sth r0 0x2(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x2, gc_env.r[0]); // sth r0, 0x2(r31)']
Processing opcode: lhz, operands: ['r5', '0x0(r31)']
Translated lhz r5 0x0(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r5, 0x0(r31)']
Processing opcode: lhz, operands: ['r0', '0xe(r6)']
Translated lhz r0 0xe(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0xe); // lhz r0, 0xe(r6)']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: lhz, operands: ['r0', '0xe(r6)']
Translated lhz r0 0xe(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0xe); // lhz r0, 0xe(r6)']
Processing opcode: addi, operands: ['r6', 'r6', '0x10']
Translated addi r6 r6 0x10 to: ['gc_env.r[6] += 16; // addi r6, r6, 0x10']
Processing opcode: lhz, operands: ['r5', '0x2(r31)']
Translated lhz r5 0x2(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x2); // lhz r5, 0x2(r31)']
Translated nor r0 r0 r0 to: ['gc_env.r[0] = ~gc_env.r[0]; // nor r0, r0, r0']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x2(r31)']
Translated sth r0 0x2(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x2, gc_env.r[0]); // sth r0, 0x2(r31)']
Translated bdnz .L_80008DE8 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80008DE8;']
Translated andi. r3 r3 0x7 to: gc_env.r[3] = gc_env.r[3] & 0x7;
Translated beq .L_80008F48 to: if (gc_env.cr[0] == 0) goto L_80008F48;
Translated mtctr r3 to: gc_env.ctr = gc_env.r[3]; // Move to count register
Processing opcode: lhz, operands: ['r5', '0x0(r31)']
Translated lhz r5 0x0(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x0); // lhz r5, 0x0(r31)']
Processing opcode: lhz, operands: ['r0', '0x0(r6)']
Translated lhz r0 0x0(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x0); // lhz r0, 0x0(r6)']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x0(r31)']
Translated sth r0 0x0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31], gc_env.r[0]); // sth r0, (r31)']
Processing opcode: lhz, operands: ['r0', '0x0(r6)']
Translated lhz r0 0x0(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x0); // lhz r0, 0x0(r6)']
Processing opcode: addi, operands: ['r6', 'r6', '0x2']
Translated addi r6 r6 0x2 to: ['gc_env.r[6] += 2; // addi r6, r6, 0x2']
Processing opcode: lhz, operands: ['r5', '0x2(r31)']
Translated lhz r5 0x2(r31) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x2); // lhz r5, 0x2(r31)']
Translated nor r0 r0 r0 to: ['gc_env.r[0] = ~gc_env.r[0]; // nor r0, r0, r0']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x2(r31)']
Translated sth r0 0x2(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x2, gc_env.r[0]); // sth r0, 0x2(r31)']
Translated bdnz .L_80008F1C to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80008F1C;']
Processing opcode: addi, operands: ['r30', 'r31', '0x40']
Translated addi r30 r31 0x40 to: ['gc_env.r[30] = gc_env.r[31] + 64; // addi r30, r31, 0x40']
Processing opcode: lwz, operands: ['r0', '0x40(r31)']
Translated lwz r0 0x40(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x40); // lwz r0, 0x40(r31)']
Translated cmplw r4 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bge .L_80008F5C to: if (gc_env.cr[0] >= 0) goto L_80008F5C;
Processing opcode: stw, operands: ['r4', '0x0(r30)']
Translated stw r4 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[4]); // stw r4, (r30)']
Processing opcode: lwz, operands: ['r29', '0x0(r30)']
Translated lwz r29 0x0(r30) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r29, (r30)']
Translated lis r3 fn_80008A10@ha to: ['gc_env.r[3] = ((uint32_t)&fn_80008A10 >> 16) & 0xFFFF; // lis r3, fn_80008A10@ha']
Processing opcode: addi, operands: ['r5', 'r3', 'fn_80008A10@l']
Translated addi r5 r3 fn_80008A10@l to: ['gc_env.r[5] = (uint32_t)&fn_80008A10; // lis + addi fn_80008A10 (completing pattern)']
Translated subfic r27 r29 0x40 to: ['gc_env.r[27] = 64 - gc_env.r[29]; // subfic r27, r29, 64', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (64 >= gc_env.r[29] ? 0x20000000 : 0);']
Processing opcode: add, operands: ['r28', 'r31', 'r29']
Translated add r28 r31 r29 to: ['gc_env.r[28] = gc_env.r[31] + gc_env.r[29]; // add r28, r31, r29']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl EXILock to: EXILock();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80008F8C to: if (gc_env.cr[0] != 0) goto L_80008F8C;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated b .L_8000903C to: goto L_8000903C;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Processing opcode: li, operands: ['r5', '0x3']
Translated li r5 0x3 to: ['gc_env.r[5] = 0x3; // li r5, 0x3']
Translated bl EXISelect to: EXISelect();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80008FB4 to: if (gc_env.cr[0] != 0) goto L_80008FB4;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl EXIUnlock to: EXIUnlock();
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated b .L_8000903C to: goto L_8000903C;
Translated slwi r3 r29 6 to: ['gc_env.r[3] = gc_env.r[29] << 6; // slwi r3, r29, 6']
Processing opcode: addi, operands: ['r0', 'r3', '0x100']
Translated addi r0 r3 0x100 to: ['gc_env.r[0] = gc_env.r[3] + 256; // addi r0, r3, 0x100']
Translated oris r0 r0 0xa000 to: ['gc_env.r[0] = gc_env.r[0] | 0xA0000000; // oris r0, r0, 0xA000']
Processing opcode: stw, operands: ['r0', '0x10(r1)']
Translated stw r0 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[0]); // stw r0, 0x10(r1)']
Processing opcode: addi, operands: ['r4', 'r1', '0x10']
Translated addi r4 r1 0x10 to: ['gc_env.r[4] = gc_env.r[1] + 16; // addi r4, r1, 0x10']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r5', '0x4']
Translated li r5 0x4 to: ['gc_env.r[5] = 0x4; // li r5, 0x4']
Processing opcode: li, operands: ['r6', '0x1']
Translated li r6 0x1 to: ['gc_env.r[6] = 0x1; // li r6, 0x1']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bl EXIImm to: EXIImm();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r29 r0 5 to: ['gc_env.r[29] = gc_env.r[0] >> 5; // srwi r29, r0, 5']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl EXISync to: EXISync();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Processing opcode: addi, operands: ['r4', 'r28', '0x0']
Translated addi r4 r28 0x0 to: ['gc_env.r[4] = gc_env.r[28] + 0; // addi r4, r28, 0x0']
Processing opcode: addi, operands: ['r5', 'r27', '0x0']
Translated addi r5 r27 0x0 to: ['gc_env.r[5] = gc_env.r[27] + 0; // addi r5, r27, 0x0']
Translated or r29 r29 r0 to: ['gc_env.r[29] = gc_env.r[29] | gc_env.r[0]; // or r29, r29, r0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r6', '0x1']
Translated li r6 0x1 to: ['gc_env.r[6] = 0x1; // li r6, 0x1']
Translated bl fn_8000A0E8 to: fn_8000A0E8();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r29 r29 r0 to: ['gc_env.r[29] = gc_env.r[29] | gc_env.r[0]; // or r29, r29, r0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl EXIDeselect to: EXIDeselect();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r29 r29 r0 to: ['gc_env.r[29] = gc_env.r[29] | gc_env.r[0]; // or r29, r29, r0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl EXIUnlock to: EXIUnlock();
Translated cntlzw r0 r29 to: ['uint32_t val = gc_env.r[29]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r29']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Processing opcode: stw, operands: ['r0', '0x4c(r31)']
Translated stw r0 0x4c(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x4C, gc_env.r[0]); // stw r0, 0x4C(r31)']
Processing opcode: lwz, operands: ['r0', '0x4c(r31)']
Translated lwz r0 0x4c(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x4C); // lwz r0, 0x4C(r31)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80009054 to: if (gc_env.cr[0] == 0) goto L_80009054;
Processing opcode: li, operands: ['r0', '0x40']
Translated li r0 0x40 to: ['gc_env.r[0] = 0x40; // li r0, 0x40']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x48(r31)']
Translated stw r0 0x48(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x48, gc_env.r[0]); // stw r0, 0x48(r31)']
Processing opcode: lwz, operands: ['r3', '0x44(r31)']
Translated lwz r3 0x44(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x44); // lwz r3, 0x44(r31)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lwz, operands: ['r3', '0x4c(r31)']
Translated lwz r3 0x4c(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x4C); // lwz r3, 0x4C(r31)']
Translated lmw r27 0x1c(r1) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r27, 0x1C(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r27, 0x1C(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r27, 0x1C(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r27, 0x1C(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r27, 0x1C(r1)']
Processing opcode: lwz, operands: ['r0', '0x34(r1)']
Translated lwz r0 0x34(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r0, 0x34(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_80008D74 to: fn_80008D74();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r4', '0x14']
Translated li r4 0x14 to: ['gc_env.r[4] = 0x14; // li r4, 0x14']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_80008D74 to: fn_80008D74();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r3 Scb_8001BBC0@ha to: ['gc_env.r[3] = ((uint32_t)&Scb_8001BBC0 >> 16) & 0xFFFF; // lis r3, Scb_8001BBC0@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'Scb_8001BBC0@l']
Translated addi r3 r3 Scb_8001BBC0@l to: ['gc_env.r[3] = (uint32_t)&Scb_8001BBC0; // lis + addi Scb_8001BBC0 (completing pattern)']
Processing opcode: lwz, operands: ['r3', '0x4c(r3)']
Translated lwz r3 0x4c(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4C); // lwz r3, 0x4C(r3)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r4 Scb_8001BBC0@ha to: ['gc_env.r[4] = ((uint32_t)&Scb_8001BBC0 >> 16) & 0xFFFF; // lis r4, Scb_8001BBC0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: addi, operands: ['r31', 'r4', 'Scb_8001BBC0@l']
Translated addi r31 r4 Scb_8001BBC0@l to: ['gc_env.r[31] = gc_env.r[4] + ((uint32_t)&Scb_8001BBC0 & 0xFFFF); // addi r31, r4, Scb_8001BBC0@l']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', '0x48(r31)']
Translated lwz r0 0x48(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x48); // lwz r0, 0x48(r31)']
Processing opcode: addi, operands: ['r4', 'r31', '0x48']
Translated addi r4 r31 0x48 to: ['gc_env.r[4] = gc_env.r[31] + 72; // addi r4, r31, 0x48']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80009114 to: if (gc_env.cr[0] == 0) goto L_80009114;
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80009124 to: goto L_80009124;
Processing opcode: stw, operands: ['r3', '0x44(r31)']
Translated stw r3 0x44(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x44, gc_env.r[3]); // stw r3, 0x44(r31)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: addi, operands: ['r3', 'r31', '0x14']
Translated addi r3 r31 0x14 to: ['gc_env.r[3] = gc_env.r[31] + 20; // addi r3, r31, 0x14']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Translated slwi r0 r30 1 to: ['gc_env.r[0] = gc_env.r[30] << 1; // slwi r0, r30, 1']
Processing opcode: add, operands: ['r3', 'r3', 'r0']
Translated add r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] + gc_env.r[0]; // add r3, r3, r0']
Processing opcode: lhz, operands: ['r31', '0x1c(r3)']
Translated lhz r31 0x1c(r3) to: ['gc_env.r[31] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x1c); // lhz r31, 0x1c(r3)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r4', '0x14']
Translated li r4 0x14 to: ['gc_env.r[4] = 0x14; // li r4, 0x14']
Translated bl fn_80008D74 to: fn_80008D74();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r5 Scb_8001BBC0@ha to: ['gc_env.r[5] = ((uint32_t)&Scb_8001BBC0 >> 16) & 0xFFFF; // lis r5, Scb_8001BBC0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x28(r1)']
Translated stwu r1 -0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x28, gc_env.r[1]); // stwu r1, -0x28(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x28;']
Processing opcode: stw, operands: ['r31', '0x24(r1)']
Translated stw r31 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[31]); // stw r31, 0x24(r1)']
Processing opcode: addi, operands: ['r31', 'r5', 'Scb_8001BBC0@l']
Translated addi r31 r5 Scb_8001BBC0@l to: ['gc_env.r[31] = gc_env.r[5] + ((uint32_t)&Scb_8001BBC0 & 0xFFFF); // addi r31, r5, Scb_8001BBC0@l']
Processing opcode: stw, operands: ['r30', '0x20(r1)']
Translated stw r30 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[30]); // stw r30, 0x20(r1)']
Processing opcode: addi, operands: ['r30', 'r4', '0x0']
Translated addi r30 r4 0x0 to: ['gc_env.r[30] = gc_env.r[4] + 0; // addi r30, r4, 0x0']
Processing opcode: stw, operands: ['r29', '0x1c(r1)']
Translated stw r29 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[29]); // stw r29, 0x1C(r1)']
Processing opcode: addi, operands: ['r29', 'r3', '0x0']
Translated addi r29 r3 0x0 to: ['gc_env.r[29] = gc_env.r[3] + 0; // addi r29, r3, 0x0']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', '0x48(r31)']
Translated lwz r0 0x48(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x48); // lwz r0, 0x48(r31)']
Processing opcode: addi, operands: ['r4', 'r31', '0x48']
Translated addi r4 r31 0x48 to: ['gc_env.r[4] = gc_env.r[31] + 72; // addi r4, r31, 0x48']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800091A0 to: if (gc_env.cr[0] == 0) goto L_800091A0;
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_800091B0 to: goto L_800091B0;
Processing opcode: stw, operands: ['r3', '0x44(r31)']
Translated stw r3 0x44(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x44, gc_env.r[3]); // stw r3, 0x44(r31)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: addi, operands: ['r3', 'r31', '0x14']
Translated addi r3 r31 0x14 to: ['gc_env.r[3] = gc_env.r[31] + 20; // addi r3, r31, 0x14']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Translated slwi r0 r29 1 to: ['gc_env.r[0] = gc_env.r[29] << 1; // slwi r0, r29, 1']
Processing opcode: add, operands: ['r4', 'r3', 'r0']
Translated add r4 r3 r0 to: ['gc_env.r[4] = gc_env.r[3] + gc_env.r[0]; // add r4, r3, r0']
Processing opcode: lhzu, operands: ['r3', '0x1c(r4)']
Translated lhzu r3 0x1c(r4) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[4] + 0x1c); // lhzu r3, 0x1c(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x1c;']
Translated clrlwi r0 r30 16 to: ['gc_env.r[0] = gc_env.r[30] & 0xFFFF; // clrlwi r0, r30, 16']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated beq .L_800091DC to: if (gc_env.cr[0] == 0) goto L_800091DC;
Processing opcode: sth, operands: ['r30', '0x0(r4)']
Translated sth r30 0x0(r4) to: ['gc_mem_write16(gc_env.ram, gc_env.r[4], gc_env.r[30]); // sth r30, (r4)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: li, operands: ['r4', '0x14']
Translated li r4 0x14 to: ['gc_env.r[4] = 0x14; // li r4, 0x14']
Translated bl fn_80008D74 to: fn_80008D74();
Translated b .L_800091E8 to: goto L_800091E8;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r4', '0x14']
Translated li r4 0x14 to: ['gc_env.r[4] = 0x14; // li r4, 0x14']
Translated bl fn_80008D74 to: fn_80008D74();
Processing opcode: lwz, operands: ['r0', '0x2c(r1)']
Translated lwz r0 0x2c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r0, 0x2C(r1)']
Processing opcode: lwz, operands: ['r31', '0x24(r1)']
Translated lwz r31 0x24(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r31, 0x24(r1)']
Processing opcode: lwz, operands: ['r30', '0x20(r1)']
Translated lwz r30 0x20(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r30, 0x20(r1)']
Processing opcode: lwz, operands: ['r29', '0x1c(r1)']
Translated lwz r29 0x1c(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r29, 0x1C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x28']
Translated addi r1 r1 0x28 to: ['gc_env.r[1] += 40; // addi r1, r1, 0x28']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mfspr r9 HID0 to: ['gc_env.r[9] = gc_env.hid0; // mfspr r9, HID0']
Translated ori r10 r9 0x8 to: ['gc_env.r[10] = gc_env.r[9] | 8; // ori r10, r9, 0x8']
Translated mtspr HID0 r10 to: ['gc_env.hid0 = gc_env.r[10]; // mtspr HID0, r10']
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated mtspr HID0 r9 to: ['gc_env.hid0 = gc_env.r[9]; // mtspr HID0, r9']
Translated rfi  to: ['// rfi: return from interrupt (not implemented)']
Translated nop  to: ['// nop']
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated lis r5 0x8000 to: ['gc_env.r[5] = -32768 << 16; // lis r5, 0x8000']
Translated lis r4 __OSSystemCallVectorStart@ha to: ['gc_env.r[4] = ((uint32_t)&__OSSystemCallVectorStart >> 16) & 0xFFFF; // lis r4, __OSSystemCallVectorStart@ha']
Translated lis r3 __OSSystemCallVectorEnd@ha to: ['gc_env.r[3] = ((uint32_t)&__OSSystemCallVectorEnd >> 16) & 0xFFFF; // lis r3, __OSSystemCallVectorEnd@ha']
Processing opcode: addi, operands: ['r31', 'r5', '0xc00']
Translated addi r31 r5 0xc00 to: ['gc_env.r[31] = gc_env.r[5] + 3072; // addi r31, r5, 0xc00']
Processing opcode: addi, operands: ['r0', 'r3', '__OSSystemCallVectorEnd@l']
Translated addi r0 r3 __OSSystemCallVectorEnd@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&__OSSystemCallVectorEnd & 0xFFFF); // addi r0, r3, __OSSystemCallVectorEnd@l']
Processing opcode: addi, operands: ['r4', 'r4', '__OSSystemCallVectorStart@l']
Translated addi r4 r4 __OSSystemCallVectorStart@l to: ['gc_env.r[4] = gc_env.r[4] + ((uint32_t)&__OSSystemCallVectorStart & 0xFFFF); // addi r4, r4, __OSSystemCallVectorStart@l']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: subf, operands: ['r5', 'r4', 'r0']
Translated subf r5 r4 r0 to: ['gc_env.r[5] = gc_env.r[0] - gc_env.r[4]; // subf r5, r4, r0']
Translated bl memcpy to: memcpy();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: li, operands: ['r4', '0x100']
Translated li r4 0x100 to: ['gc_env.r[4] = 0x100; // li r4, 0x100']
Translated bl DCFlushRangeNoSync to: DCFlushRangeNoSync();
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: li, operands: ['r4', '0x100']
Translated li r4 0x100 to: ['gc_env.r[4] = 0x100; // li r4, 0x100']
Translated bl ICInvalidateRange to: ICInvalidateRange();
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 RunQueue_8001BC18@ha to: ['gc_env.r[3] = ((uint32_t)&RunQueue_8001BC18 >> 16) & 0xFFFF; // lis r3, RunQueue_8001BC18@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Processing opcode: li, operands: ['r4', '0x10']
Translated li r4 0x10 to: ['gc_env.r[4] = 0x10; // li r4, 0x10']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Translated stmw r26 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[26]); // stmw r26, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[27]); // stmw r26, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[28]); // stmw r26, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stmw r26, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stmw r26, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stmw r26, 0x8(r1)']
Processing opcode: addi, operands: ['r28', 'r3', 'RunQueue_8001BC18@l']
Translated addi r28 r3 RunQueue_8001BC18@l to: ['gc_env.r[28] = gc_env.r[3] + ((uint32_t)&RunQueue_8001BC18 & 0xFFFF); // addi r28, r3, RunQueue_8001BC18@l']
Processing opcode: addi, operands: ['r31', 'r28', '0x410']
Translated addi r31 r28 0x410 to: ['gc_env.r[31] = gc_env.r[28] + 1040; // addi r31, r28, 0x410']
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Processing opcode: addi, operands: ['r3', 'r31', '0x2e8']
Translated addi r3 r31 0x2e8 to: ['gc_env.r[3] = gc_env.r[31] + 744; // addi r3, r31, 0x2e8']
Processing opcode: sth, operands: ['r0', '0x6d8(r28)']
Translated sth r0 0x6d8(r28) to: ['gc_mem_write16(gc_env.ram, gc_env.r[28] + 0x6D8, gc_env.r[0]); // sth r0, 0x6D8(r28)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: sth, operands: ['r0', '0x6da(r28)']
Translated sth r0 0x6da(r28) to: ['gc_mem_write16(gc_env.ram, gc_env.r[28] + 0x6DA, gc_env.r[0]); // sth r0, 0x6DA(r28)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r4', '0x6e4(r28)']
Translated stw r4 0x6e4(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28] + 0x6E4, gc_env.r[4]); // stw r4, 0x6E4(r28)']
Processing opcode: stw, operands: ['r4', '0x6e0(r28)']
Translated stw r4 0x6e0(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28] + 0x6E0, gc_env.r[4]); // stw r4, 0x6E0(r28)']
Processing opcode: stw, operands: ['r29', '0x6dc(r28)']
Translated stw r29 0x6dc(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28] + 0x6DC, gc_env.r[29]); // stw r29, 0x6DC(r28)']
Processing opcode: stw, operands: ['r0', '0x6e8(r28)']
Translated stw r0 0x6e8(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28] + 0x6E8, gc_env.r[0]); // stw r0, 0x6E8(r28)']
Processing opcode: stw, operands: ['r29', '0x700(r28)']
Translated stw r29 0x700(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28] + 0x700, gc_env.r[29]); // stw r29, 0x700(r28)']
Translated bl OSInitThreadQueue to: OSInitThreadQueue();
Processing opcode: stw, operands: ['r29', '0x708(r28)']
Translated stw r29 0x708(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28] + 0x708, gc_env.r[29]); // stw r29, 0x708(r28)']
Translated lis r30 0x8000 to: ['gc_env.r[30] = -32768 << 16; // lis r30, 0x8000']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: stw, operands: ['r29', '0x704(r28)']
Translated stw r29 0x704(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28] + 0x704, gc_env.r[29]); // stw r29, 0x704(r28)']
Processing opcode: stw, operands: ['r31', '0xd8(r30)']
Translated stw r31 0xd8(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0xD8, gc_env.r[31]); // stw r31, 0xD8(r30)']
Translated bl OSClearContext to: OSClearContext();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Translated lis r3 _stack_addr@ha to: ['gc_env.r[3] = ((uint32_t)&_stack_addr >> 16) & 0xFFFF; // lis r3, _stack_addr@ha']
Processing opcode: addi, operands: ['r0', 'r3', '_stack_addr@l']
Translated addi r0 r3 _stack_addr@l to: ['gc_env.r[0] = (uint32_t)&_stack_addr; // lis + addi _stack_addr (completing pattern)']
Translated lis r3 _stack_end@ha to: ['gc_env.r[3] = ((uint32_t)&_stack_end >> 16) & 0xFFFF; // lis r3, _stack_end@ha']
Processing opcode: stw, operands: ['r0', '0x714(r28)']
Translated stw r0 0x714(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28] + 0x714, gc_env.r[0]); // stw r0, 0x714(r28)']
Processing opcode: addi, operands: ['r0', 'r3', '_stack_end@l']
Translated addi r0 r3 _stack_end@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&_stack_end & 0xFFFF); // addi r0, r3, _stack_end@l']
Processing opcode: addi, operands: ['r3', 'r28', '0x718']
Translated addi r3 r28 0x718 to: ['gc_env.r[3] = gc_env.r[28] + 1816; // addi r3, r28, 0x718']
Processing opcode: stw, operands: ['r0', '0x718(r28)']
Translated stw r0 0x718(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28] + 0x718, gc_env.r[0]); // stw r0, 0x718(r28)']
Translated lis r4 0xdeae to: ['gc_env.r[4] = -8530 << 16; // lis r4, 0xdeae']
Processing opcode: li, operands: ['r26', '0x0']
Translated li r26 0x0 to: ['gc_env.r[26] = 0x0; // li r26, 0x0']
Processing opcode: lwz, operands: ['r3', '0x0(r3)']
Translated lwz r3 0x0(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r3, (r3)']
Processing opcode: subi, operands: ['r4', 'r4', '0x4542']
Translated subi r4 r4 0x4542 to: ['gc_env.r[4] = gc_env.r[4] - 17730; // subi r4, r4, 17730']
Translated slwi r0 r26 3 to: ['gc_env.r[0] = gc_env.r[26] << 3; // slwi r0, r26, 3']
Processing opcode: stw, operands: ['r4', '0x0(r3)']
Translated stw r4 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[4]); // stw r4, (r3)']
Processing opcode: add, operands: ['r27', 'r28', 'r0']
Translated add r27 r28 r0 to: ['gc_env.r[27] = gc_env.r[28] + gc_env.r[0]; // add r27, r28, r0']
Processing opcode: stw, operands: ['r29', 'RunQueueBits_8001EEE0@sda21(r0)']
Translated stw r29 RunQueueBits_8001EEE0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&RunQueueBits_8001EEE0, gc_env.r[29]); // stw r29, RunQueueBits_8001EEE0@sda21(r0)']
Processing opcode: stw, operands: ['r31', '0xe4(r30)']
Translated stw r31 0xe4(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0xE4, gc_env.r[31]); // stw r31, 0xE4(r30)']
Processing opcode: stw, operands: ['r29', 'RunQueueHint_8001EEE4@sda21(r0)']
Translated stw r29 RunQueueHint_8001EEE4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&RunQueueHint_8001EEE4, gc_env.r[29]); // stw r29, RunQueueHint_8001EEE4@sda21(r0)']
Translated mr r3 r27 to: gc_env.r[3] = gc_env.r[27]; // Move register
Translated bl OSInitThreadQueue to: OSInitThreadQueue();
Processing opcode: addi, operands: ['r26', 'r26', '0x1']
Translated addi r26 r26 0x1 to: ['gc_env.r[26] += 1; // addi r26, r26, 0x1']
Translated cmpwi r26 0x1f to: gc_env.cr[0] = (gc_env.r[26] == 0x1f) ? 0 : (gc_env.r[26] < 0x1f ? -1 : 1); // Compare with immediate
Processing opcode: addi, operands: ['r27', 'r27', '0x8']
Translated addi r27 r27 0x8 to: ['gc_env.r[27] += 8; // addi r27, r27, 0x8']
Translated ble .L_80009340 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80009340; // ble .L_80009340']
Translated lis r30 0x8000 to: ['gc_env.r[30] = -32768 << 16; // lis r30, 0x8000']
Processing opcode: addi, operands: ['r3', 'r30', '0xdc']
Translated addi r3 r30 0xdc to: ['gc_env.r[3] = gc_env.r[30] + 220; // addi r3, r30, 0xdc']
Translated bl OSInitThreadQueue to: OSInitThreadQueue();
Processing opcode: addi, operands: ['r4', 'r30', '0xdc']
Translated addi r4 r30 0xdc to: ['gc_env.r[4] = gc_env.r[30] + 220; // addi r4, r30, 0xdc']
Processing opcode: lwzu, operands: ['r3', '0x4(r4)']
Translated lwzu r3 0x4(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwzu r3, 0x4(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x4;']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000937C to: if (gc_env.cr[0] != 0) goto L_8000937C;
Processing opcode: stw, operands: ['r31', '0xdc(r30)']
Translated stw r31 0xdc(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0xDC, gc_env.r[31]); // stw r31, 0xDC(r30)']
Translated b .L_80009380 to: goto L_80009380;
Processing opcode: stw, operands: ['r31', '0x2fc(r3)']
Translated stw r31 0x2fc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x2FC, gc_env.r[31]); // stw r31, 0x2FC(r3)']
Processing opcode: stw, operands: ['r3', '0x300(r31)']
Translated stw r3 0x300(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x300, gc_env.r[3]); // stw r3, 0x300(r31)']
Processing opcode: li, operands: ['r30', '0x0']
Translated li r30 0x0 to: ['gc_env.r[30] = 0x0; // li r30, 0x0']
Processing opcode: addi, operands: ['r3', 'r28', '0x720']
Translated addi r3 r28 0x720 to: ['gc_env.r[3] = gc_env.r[28] + 1824; // addi r3, r28, 0x720']
Processing opcode: stw, operands: ['r30', '0x2fc(r31)']
Translated stw r30 0x2fc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x2FC, gc_env.r[30]); // stw r30, 0x2FC(r31)']
Processing opcode: stw, operands: ['r31', '0x0(r4)']
Translated stw r31 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[31]); // stw r31, (r4)']
Translated bl OSClearContext to: OSClearContext();
Processing opcode: stw, operands: ['r30', 'Reschedule_8001EEE8@sda21(r0)']
Translated stw r30 Reschedule_8001EEE8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&Reschedule_8001EEE8, gc_env.r[30]); // stw r30, Reschedule_8001EEE8@sda21(r0)']
Translated lmw r26 0x8(r1) to: ['gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lmw r26, 0x8(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lmw r26, 0x8(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lmw r26, 0x8(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lmw r26, 0x8(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lmw r26, 0x8(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r26, 0x8(r1)']
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x4(r3)']
Translated stw r0 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[0]); // stw r0, 0x4(r3)']
Processing opcode: stw, operands: ['r0', '0x0(r3)']
Translated stw r0 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[0]); // stw r0, (r3)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r4', 'Reschedule_8001EEE8@sda21(r0)']
Translated lwz r4 Reschedule_8001EEE8@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&Reschedule_8001EEE8); // lwz r4, Reschedule_8001EEE8@sda21(r0)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Processing opcode: stw, operands: ['r0', 'Reschedule_8001EEE8@sda21(r0)']
Translated stw r0 Reschedule_8001EEE8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&Reschedule_8001EEE8, gc_env.r[0]); // stw r0, Reschedule_8001EEE8@sda21(r0)']
Translated mr r31 r4 to: gc_env.r[31] = gc_env.r[4]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r4', 'Reschedule_8001EEE8@sda21(r0)']
Translated lwz r4 Reschedule_8001EEE8@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&Reschedule_8001EEE8); // lwz r4, Reschedule_8001EEE8@sda21(r0)']
Processing opcode: subi, operands: ['r0', 'r4', '0x1']
Translated subi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] - 1; // subi r0, r4, 1']
Processing opcode: stw, operands: ['r0', 'Reschedule_8001EEE8@sda21(r0)']
Translated stw r0 Reschedule_8001EEE8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&Reschedule_8001EEE8, gc_env.r[0]); // stw r0, Reschedule_8001EEE8@sda21(r0)']
Translated mr r31 r4 to: gc_env.r[31] = gc_env.r[4]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: lwz, operands: ['r4', '0x2e0(r3)']
Translated lwz r4 0x2e0(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x2E0); // lwz r4, 0x2E0(r3)']
Processing opcode: lwz, operands: ['r5', '0x2dc(r3)']
Translated lwz r5 0x2dc(r3) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x2DC); // lwz r5, 0x2DC(r3)']
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: lwz, operands: ['r6', '0x2e4(r3)']
Translated lwz r6 0x2e4(r3) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x2E4); // lwz r6, 0x2E4(r3)']
Translated bne .L_8000945C to: if (gc_env.cr[0] != 0) goto L_8000945C;
Processing opcode: stw, operands: ['r6', '0x4(r5)']
Translated stw r6 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[6]); // stw r6, 0x4(r5)']
Translated b .L_80009460 to: goto L_80009460;
Processing opcode: stw, operands: ['r6', '0x2e4(r4)']
Translated stw r6 0x2e4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x2E4, gc_env.r[6]); // stw r6, 0x2E4(r4)']
Translated cmplwi r6 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[6] == 0x0) ? 0 : ((uint32_t)gc_env.r[6] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009470 to: if (gc_env.cr[0] != 0) goto L_80009470;
Processing opcode: stw, operands: ['r4', '0x0(r5)']
Translated stw r4 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[4]); // stw r4, (r5)']
Translated b .L_80009474 to: goto L_80009474;
Processing opcode: stw, operands: ['r4', '0x2e0(r6)']
Translated stw r4 0x2e0(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x2E0, gc_env.r[4]); // stw r4, 0x2E0(r6)']
Processing opcode: lwz, operands: ['r0', '0x0(r5)']
Translated lwz r0 0x0(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r0, (r5)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000949C to: if (gc_env.cr[0] != 0) goto L_8000949C;
Processing opcode: lwz, operands: ['r0', '0x2d0(r3)']
Translated lwz r0 0x2d0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x2D0); // lwz r0, 0x2D0(r3)']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Processing opcode: lwz, operands: ['r5', 'RunQueueBits_8001EEE0@sda21(r0)']
Translated lwz r5 RunQueueBits_8001EEE0@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&RunQueueBits_8001EEE0); // lwz r5, RunQueueBits_8001EEE0@sda21(r0)']
Translated subfic r0 r0 0x1f to: ['gc_env.r[0] = 31 - gc_env.r[0]; // subfic r0, r0, 31', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (31 >= gc_env.r[0] ? 0x20000000 : 0);']
Translated slw r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] << (gc_env.r[0] & 31); // slw r0, r4, r0']
Translated andc r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] & ~gc_env.r[0]; // andc r0, r5, r0']
Processing opcode: stw, operands: ['r0', 'RunQueueBits_8001EEE0@sda21(r0)']
Translated stw r0 RunQueueBits_8001EEE0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&RunQueueBits_8001EEE0, gc_env.r[0]); // stw r0, RunQueueBits_8001EEE0@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x2dc(r3)']
Translated stw r0 0x2dc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x2DC, gc_env.r[0]); // stw r0, 0x2DC(r3)']
Translated blr  to: return;
Processing opcode: lwz, operands: ['r4', '0x2d4(r3)']
Translated lwz r4 0x2d4(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x2D4); // lwz r4, 0x2D4(r3)']
Processing opcode: lwz, operands: ['r5', '0x2f4(r3)']
Translated lwz r5 0x2f4(r3) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x2F4); // lwz r5, 0x2F4(r3)']
Translated b .L_800094D4 to: goto L_800094D4;
Processing opcode: lwz, operands: ['r3', '0x0(r5)']
Translated lwz r3 0x0(r5) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r3, (r5)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800094D0 to: if (gc_env.cr[0] == 0) goto L_800094D0;
Processing opcode: lwz, operands: ['r0', '0x2d0(r3)']
Translated lwz r0 0x2d0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x2D0); // lwz r0, 0x2D0(r3)']
Translated cmpw r0 r4 to: ['gc_env.cr[0] = (int32_t)gc_env.r[0] < (int32_t)gc_env.r[4] ? 0x8 : ((int32_t)gc_env.r[0] > (int32_t)gc_env.r[4] ? 0x4 : 0x2); // cmpw r0, r4']
Translated bge .L_800094D0 to: if (gc_env.cr[0] >= 0) goto L_800094D0;
Translated mr r4 r0 to: gc_env.r[4] = gc_env.r[0]; // Move register
Processing opcode: lwz, operands: ['r5', '0x10(r5)']
Translated lwz r5 0x10(r5) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x10); // lwz r5, 0x10(r5)']
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800094B4 to: if (gc_env.cr[0] != 0) goto L_800094B4;
Translated mr r3 r4 to: gc_env.r[3] = gc_env.r[4]; // Move register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: addi, operands: ['r30', 'r4', '0x0']
Translated addi r30 r4 0x0 to: ['gc_env.r[30] = gc_env.r[4] + 0; // addi r30, r4, 0x0']
Processing opcode: lhz, operands: ['r0', '0x2c8(r3)']
Translated lhz r0 0x2c8(r3) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x2c8); // lhz r0, 0x2c8(r3)']
Translated cmpwi r0 0x3 to: gc_env.cr[0] = (gc_env.r[0] == 0x3) ? 0 : (gc_env.r[0] < 0x3 ? -1 : 1); // Compare with immediate
Translated beq .L_80009688 to: if (gc_env.cr[0] == 0) goto L_80009688;
Translated bge .L_80009520 to: if (gc_env.cr[0] >= 0) goto L_80009520;
Translated cmpwi r0 0x1 to: gc_env.cr[0] = (gc_env.r[0] == 0x1) ? 0 : (gc_env.r[0] < 0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_8000952C to: if (gc_env.cr[0] == 0) goto L_8000952C;
Translated bge .L_8000967C to: if (gc_env.cr[0] >= 0) goto L_8000967C;
Translated b .L_80009688 to: goto L_80009688;
Translated cmpwi r0 0x5 to: gc_env.cr[0] = (gc_env.r[0] == 0x5) ? 0 : (gc_env.r[0] < 0x5 ? -1 : 1); // Compare with immediate
Translated bge .L_80009688 to: if (gc_env.cr[0] >= 0) goto L_80009688;
Translated b .L_800095A4 to: goto L_800095A4;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_80009440 to: fn_80009440();
Processing opcode: stw, operands: ['r30', '0x2d0(r31)']
Translated stw r30 0x2d0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x2D0, gc_env.r[30]); // stw r30, 0x2D0(r31)']
Translated lis r3 RunQueue_8001BC18@ha to: ['gc_env.r[3] = ((uint32_t)&RunQueue_8001BC18 >> 16) & 0xFFFF; // lis r3, RunQueue_8001BC18@ha']
Processing opcode: addi, operands: ['r0', 'r3', 'RunQueue_8001BC18@l']
Translated addi r0 r3 RunQueue_8001BC18@l to: ['gc_env.r[0] = (uint32_t)&RunQueue_8001BC18; // lis + addi RunQueue_8001BC18 (completing pattern)']
Processing opcode: lwz, operands: ['r3', '0x2d0(r31)']
Translated lwz r3 0x2d0(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x2D0); // lwz r3, 0x2D0(r31)']
Translated slwi r3 r3 3 to: ['gc_env.r[3] = gc_env.r[3] << 3; // slwi r3, r3, 3']
Processing opcode: add, operands: ['r0', 'r0', 'r3']
Translated add r0 r0 r3 to: ['gc_env.r[0] = gc_env.r[0] + gc_env.r[3]; // add r0, r0, r3']
Processing opcode: stw, operands: ['r0', '0x2dc(r31)']
Translated stw r0 0x2dc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x2DC, gc_env.r[0]); // stw r0, 0x2DC(r31)']
Processing opcode: lwz, operands: ['r4', '0x2dc(r31)']
Translated lwz r4 0x2dc(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x2DC); // lwz r4, 0x2DC(r31)']
Processing opcode: lwz, operands: ['r3', '0x4(r4)']
Translated lwz r3 0x4(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwz r3, 0x4(r4)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009568 to: if (gc_env.cr[0] != 0) goto L_80009568;
Processing opcode: stw, operands: ['r31', '0x0(r4)']
Translated stw r31 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[31]); // stw r31, (r4)']
Translated b .L_8000956C to: goto L_8000956C;
Processing opcode: stw, operands: ['r31', '0x2e0(r3)']
Translated stw r31 0x2e0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x2E0, gc_env.r[31]); // stw r31, 0x2E0(r3)']
Processing opcode: stw, operands: ['r3', '0x2e4(r31)']
Translated stw r3 0x2e4(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x2E4, gc_env.r[3]); // stw r3, 0x2E4(r31)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: stw, operands: ['r0', '0x2e0(r31)']
Translated stw r0 0x2e0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x2E0, gc_env.r[0]); // stw r0, 0x2E0(r31)']
Processing opcode: lwz, operands: ['r4', '0x2dc(r31)']
Translated lwz r4 0x2dc(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x2DC); // lwz r4, 0x2DC(r31)']
Processing opcode: stw, operands: ['r31', '0x4(r4)']
Translated stw r31 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[31]); // stw r31, 0x4(r4)']
Processing opcode: lwz, operands: ['r0', '0x2d0(r31)']
Translated lwz r0 0x2d0(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x2D0); // lwz r0, 0x2D0(r31)']
Processing opcode: lwz, operands: ['r4', 'RunQueueBits_8001EEE0@sda21(r0)']
Translated lwz r4 RunQueueBits_8001EEE0@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&RunQueueBits_8001EEE0); // lwz r4, RunQueueBits_8001EEE0@sda21(r0)']
Translated subfic r0 r0 0x1f to: ['gc_env.r[0] = 31 - gc_env.r[0]; // subfic r0, r0, 31', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (31 >= gc_env.r[0] ? 0x20000000 : 0);']
Translated slw r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] << (gc_env.r[0] & 31); // slw r0, r3, r0']
Translated or r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] | gc_env.r[0]; // or r0, r4, r0']
Processing opcode: stw, operands: ['r0', 'RunQueueBits_8001EEE0@sda21(r0)']
Translated stw r0 RunQueueBits_8001EEE0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&RunQueueBits_8001EEE0, gc_env.r[0]); // stw r0, RunQueueBits_8001EEE0@sda21(r0)']
Processing opcode: stw, operands: ['r3', 'RunQueueHint_8001EEE4@sda21(r0)']
Translated stw r3 RunQueueHint_8001EEE4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&RunQueueHint_8001EEE4, gc_env.r[3]); // stw r3, RunQueueHint_8001EEE4@sda21(r0)']
Translated b .L_80009688 to: goto L_80009688;
Processing opcode: lwz, operands: ['r4', '0x2e0(r31)']
Translated lwz r4 0x2e0(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x2E0); // lwz r4, 0x2E0(r31)']
Processing opcode: lwz, operands: ['r5', '0x2e4(r31)']
Translated lwz r5 0x2e4(r31) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x2E4); // lwz r5, 0x2E4(r31)']
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800095C0 to: if (gc_env.cr[0] != 0) goto L_800095C0;
Processing opcode: lwz, operands: ['r3', '0x2dc(r31)']
Translated lwz r3 0x2dc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x2DC); // lwz r3, 0x2DC(r31)']
Processing opcode: stw, operands: ['r5', '0x4(r3)']
Translated stw r5 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[5]); // stw r5, 0x4(r3)']
Translated b .L_800095C4 to: goto L_800095C4;
Processing opcode: stw, operands: ['r5', '0x2e4(r4)']
Translated stw r5 0x2e4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x2E4, gc_env.r[5]); // stw r5, 0x2E4(r4)']
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800095D8 to: if (gc_env.cr[0] != 0) goto L_800095D8;
Processing opcode: lwz, operands: ['r3', '0x2dc(r31)']
Translated lwz r3 0x2dc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x2DC); // lwz r3, 0x2DC(r31)']
Processing opcode: stw, operands: ['r4', '0x0(r3)']
Translated stw r4 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[4]); // stw r4, (r3)']
Translated b .L_800095DC to: goto L_800095DC;
Processing opcode: stw, operands: ['r4', '0x2e0(r5)']
Translated stw r4 0x2e0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x2E0, gc_env.r[4]); // stw r4, 0x2E0(r5)']
Processing opcode: stw, operands: ['r30', '0x2d0(r31)']
Translated stw r30 0x2d0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x2D0, gc_env.r[30]); // stw r30, 0x2D0(r31)']
Processing opcode: lwz, operands: ['r4', '0x2dc(r31)']
Translated lwz r4 0x2dc(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x2DC); // lwz r4, 0x2DC(r31)']
Processing opcode: lwz, operands: ['r5', '0x0(r4)']
Translated lwz r5 0x0(r4) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r5, (r4)']
Translated b .L_800095F0 to: goto L_800095F0;
Processing opcode: lwz, operands: ['r5', '0x2e0(r5)']
Translated lwz r5 0x2e0(r5) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x2E0); // lwz r5, 0x2E0(r5)']
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80009608 to: if (gc_env.cr[0] == 0) goto L_80009608;
Processing opcode: lwz, operands: ['r3', '0x2d0(r5)']
Translated lwz r3 0x2d0(r5) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x2D0); // lwz r3, 0x2D0(r5)']
Processing opcode: lwz, operands: ['r0', '0x2d0(r31)']
Translated lwz r0 0x2d0(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x2D0); // lwz r0, 0x2D0(r31)']
Translated cmpw r3 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[3] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[3] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r3, r0']
Translated ble .L_800095EC to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_800095EC; // ble .L_800095EC']
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009640 to: if (gc_env.cr[0] != 0) goto L_80009640;
Processing opcode: lwz, operands: ['r3', '0x4(r4)']
Translated lwz r3 0x4(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwz r3, 0x4(r4)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009624 to: if (gc_env.cr[0] != 0) goto L_80009624;
Processing opcode: stw, operands: ['r31', '0x0(r4)']
Translated stw r31 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[31]); // stw r31, (r4)']
Translated b .L_80009628 to: goto L_80009628;
Processing opcode: stw, operands: ['r31', '0x2e0(r3)']
Translated stw r31 0x2e0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x2E0, gc_env.r[31]); // stw r31, 0x2E0(r3)']
Processing opcode: stw, operands: ['r3', '0x2e4(r31)']
Translated stw r3 0x2e4(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x2E4, gc_env.r[3]); // stw r3, 0x2E4(r31)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x2e0(r31)']
Translated stw r0 0x2e0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x2E0, gc_env.r[0]); // stw r0, 0x2E0(r31)']
Processing opcode: lwz, operands: ['r3', '0x2dc(r31)']
Translated lwz r3 0x2dc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x2DC); // lwz r3, 0x2DC(r31)']
Processing opcode: stw, operands: ['r31', '0x4(r3)']
Translated stw r31 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[31]); // stw r31, 0x4(r3)']
Translated b .L_80009668 to: goto L_80009668;
Processing opcode: stw, operands: ['r5', '0x2e0(r31)']
Translated stw r5 0x2e0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x2E0, gc_env.r[5]); // stw r5, 0x2E0(r31)']
Processing opcode: lwz, operands: ['r3', '0x2e4(r5)']
Translated lwz r3 0x2e4(r5) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x2E4); // lwz r3, 0x2E4(r5)']
Processing opcode: stw, operands: ['r31', '0x2e4(r5)']
Translated stw r31 0x2e4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x2E4, gc_env.r[31]); // stw r31, 0x2E4(r5)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r3', '0x2e4(r31)']
Translated stw r3 0x2e4(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x2E4, gc_env.r[3]); // stw r3, 0x2E4(r31)']
Translated bne .L_80009664 to: if (gc_env.cr[0] != 0) goto L_80009664;
Processing opcode: lwz, operands: ['r3', '0x2dc(r31)']
Translated lwz r3 0x2dc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x2DC); // lwz r3, 0x2DC(r31)']
Processing opcode: stw, operands: ['r31', '0x0(r3)']
Translated stw r31 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[31]); // stw r31, (r3)']
Translated b .L_80009668 to: goto L_80009668;
Processing opcode: stw, operands: ['r31', '0x2e0(r3)']
Translated stw r31 0x2e0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x2E0, gc_env.r[31]); // stw r31, 0x2E0(r3)']
Processing opcode: lwz, operands: ['r3', '0x2f0(r31)']
Translated lwz r3 0x2f0(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x2F0); // lwz r3, 0x2F0(r31)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80009688 to: if (gc_env.cr[0] == 0) goto L_80009688;
Processing opcode: lwz, operands: ['r3', '0x8(r3)']
Translated lwz r3 0x8(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r3, 0x8(r3)']
Translated b .L_8000968C to: goto L_8000968C;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', 'RunQueueHint_8001EEE4@sda21(r0)']
Translated stw r0 RunQueueHint_8001EEE4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&RunQueueHint_8001EEE4, gc_env.r[0]); // stw r0, RunQueueHint_8001EEE4@sda21(r0)']
Processing opcode: stw, operands: ['r30', '0x2d0(r31)']
Translated stw r30 0x2d0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x2D0, gc_env.r[30]); // stw r30, 0x2D0(r31)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r4 RunQueue_8001BC18@ha to: ['gc_env.r[4] = ((uint32_t)&RunQueue_8001BC18 >> 16) & 0xFFFF; // lis r4, RunQueue_8001BC18@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: addi, operands: ['r31', 'r4', 'RunQueue_8001BC18@l']
Translated addi r31 r4 RunQueue_8001BC18@l to: ['gc_env.r[31] = gc_env.r[4] + ((uint32_t)&RunQueue_8001BC18 & 0xFFFF); // addi r31, r4, RunQueue_8001BC18@l']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Processing opcode: lwz, operands: ['r0', 'Reschedule_8001EEE8@sda21(r0)']
Translated lwz r0 Reschedule_8001EEE8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&Reschedule_8001EEE8); // lwz r0, Reschedule_8001EEE8@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated ble .L_800096D8 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_800096D8; // ble .L_800096D8']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000988C to: goto L_8000988C;
Translated bl fn_80006FC8 to: fn_80006FC8();
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: lwz, operands: ['r6', '0xe4(r4)']
Translated lwz r6 0xe4(r4) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xE4); // lwz r6, 0xE4(r4)']
Translated cmplw r3 r6 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[6]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[6] ? -1 : 1); // Logical compare word
Processing opcode: addi, operands: ['r3', 'r6', '0x0']
Translated addi r3 r6 0x0 to: ['gc_env.r[3] = gc_env.r[6] + 0; // addi r3, r6, 0x0']
Translated beq .L_800096F8 to: if (gc_env.cr[0] == 0) goto L_800096F8;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000988C to: goto L_8000988C;
Translated cmplwi r6 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[6] == 0x0) ? 0 : ((uint32_t)gc_env.r[6] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800097B8 to: if (gc_env.cr[0] == 0) goto L_800097B8;
Processing opcode: lhz, operands: ['r0', '0x2c8(r6)']
Translated lhz r0 0x2c8(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x2c8); // lhz r0, 0x2c8(r6)']
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009798 to: if (gc_env.cr[0] != 0) goto L_80009798;
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80009730 to: if (gc_env.cr[0] != 0) goto L_80009730;
Processing opcode: lwz, operands: ['r4', 'RunQueueBits_8001EEE0@sda21(r0)']
Translated lwz r4 RunQueueBits_8001EEE0@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&RunQueueBits_8001EEE0); // lwz r4, RunQueueBits_8001EEE0@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x2d0(r6)']
Translated lwz r0 0x2d0(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x2D0); // lwz r0, 0x2D0(r6)']
Translated cntlzw r4 r4 to: ['uint32_t val = gc_env.r[4]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[4] = count; // cntlzw r4, r4']
Translated cmpw r0 r4 to: ['gc_env.cr[0] = (int32_t)gc_env.r[0] < (int32_t)gc_env.r[4] ? 0x8 : ((int32_t)gc_env.r[0] > (int32_t)gc_env.r[4] ? 0x4 : 0x2); // cmpw r0, r4']
Translated bgt .L_80009730 to: ['if (gc_env.cr[0] & 0x4) goto L_80009730; // bgt .L_80009730']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000988C to: goto L_8000988C;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: sth, operands: ['r0', '0x2c8(r6)']
Translated sth r0 0x2c8(r6) to: ['gc_mem_write16(gc_env.ram, gc_env.r[6] + 0x2C8, gc_env.r[0]); // sth r0, 0x2C8(r6)']
Processing opcode: lwz, operands: ['r0', '0x2d0(r6)']
Translated lwz r0 0x2d0(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x2D0); // lwz r0, 0x2D0(r6)']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Processing opcode: add, operands: ['r0', 'r31', 'r0']
Translated add r0 r31 r0 to: ['gc_env.r[0] = gc_env.r[31] + gc_env.r[0]; // add r0, r31, r0']
Processing opcode: stw, operands: ['r0', '0x2dc(r6)']
Translated stw r0 0x2dc(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x2DC, gc_env.r[0]); // stw r0, 0x2DC(r6)']
Processing opcode: lwz, operands: ['r5', '0x2dc(r6)']
Translated lwz r5 0x2dc(r6) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x2DC); // lwz r5, 0x2DC(r6)']
Processing opcode: lwz, operands: ['r4', '0x4(r5)']
Translated lwz r4 0x4(r5) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x4); // lwz r4, 0x4(r5)']
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009760 to: if (gc_env.cr[0] != 0) goto L_80009760;
Processing opcode: stw, operands: ['r6', '0x0(r5)']
Translated stw r6 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[6]); // stw r6, (r5)']
Translated b .L_80009764 to: goto L_80009764;
Processing opcode: stw, operands: ['r6', '0x2e0(r4)']
Translated stw r6 0x2e0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x2E0, gc_env.r[6]); // stw r6, 0x2E0(r4)']
Processing opcode: stw, operands: ['r4', '0x2e4(r6)']
Translated stw r4 0x2e4(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x2E4, gc_env.r[4]); // stw r4, 0x2E4(r6)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Processing opcode: stw, operands: ['r0', '0x2e0(r6)']
Translated stw r0 0x2e0(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x2E0, gc_env.r[0]); // stw r0, 0x2E0(r6)']
Processing opcode: lwz, operands: ['r5', '0x2dc(r6)']
Translated lwz r5 0x2dc(r6) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x2DC); // lwz r5, 0x2DC(r6)']
Processing opcode: stw, operands: ['r6', '0x4(r5)']
Translated stw r6 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[6]); // stw r6, 0x4(r5)']
Processing opcode: lwz, operands: ['r0', '0x2d0(r6)']
Translated lwz r0 0x2d0(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x2D0); // lwz r0, 0x2D0(r6)']
Processing opcode: lwz, operands: ['r5', 'RunQueueBits_8001EEE0@sda21(r0)']
Translated lwz r5 RunQueueBits_8001EEE0@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&RunQueueBits_8001EEE0); // lwz r5, RunQueueBits_8001EEE0@sda21(r0)']
Translated subfic r0 r0 0x1f to: ['gc_env.r[0] = 31 - gc_env.r[0]; // subfic r0, r0, 31', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (31 >= gc_env.r[0] ? 0x20000000 : 0);']
Translated slw r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] << (gc_env.r[0] & 31); // slw r0, r4, r0']
Translated or r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] | gc_env.r[0]; // or r0, r5, r0']
Processing opcode: stw, operands: ['r0', 'RunQueueBits_8001EEE0@sda21(r0)']
Translated stw r0 RunQueueBits_8001EEE0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&RunQueueBits_8001EEE0, gc_env.r[0]); // stw r0, RunQueueBits_8001EEE0@sda21(r0)']
Processing opcode: stw, operands: ['r4', 'RunQueueHint_8001EEE4@sda21(r0)']
Translated stw r4 RunQueueHint_8001EEE4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&RunQueueHint_8001EEE4, gc_env.r[4]); // stw r4, RunQueueHint_8001EEE4@sda21(r0)']
Processing opcode: lhz, operands: ['r0', '0x1a2(r6)']
Translated lhz r0 0x1a2(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x1a2); // lhz r0, 0x1a2(r6)']
Translated rlwinm. r0 r0 0 30 30 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x2; // rlwinm r0, r0, 0, 30, 30', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_800097B8 to: if (gc_env.cr[0] != 0) goto L_800097B8;
Translated bl fn_80006FD4 to: fn_80006FD4();
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800097B8 to: if (gc_env.cr[0] == 0) goto L_800097B8;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000988C to: goto L_8000988C;
Processing opcode: lwz, operands: ['r0', 'RunQueueBits_8001EEE0@sda21(r0)']
Translated lwz r0 RunQueueBits_8001EEE0@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&RunQueueBits_8001EEE0); // lwz r0, RunQueueBits_8001EEE0@sda21(r0)']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r4', '0xe4(r3)']
Translated stw r4 0xe4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xE4, gc_env.r[4]); // stw r4, 0xE4(r3)']
Translated bne .L_80009800 to: if (gc_env.cr[0] != 0) goto L_80009800;
Processing opcode: addi, operands: ['r3', 'r31', '0x720']
Translated addi r3 r31 0x720 to: ['gc_env.r[3] = gc_env.r[31] + 1824; // addi r3, r31, 0x720']
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Translated bl OSEnableInterrupts to: OSEnableInterrupts();
Processing opcode: lwz, operands: ['r0', 'RunQueueBits_8001EEE0@sda21(r0)']
Translated lwz r0 RunQueueBits_8001EEE0@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&RunQueueBits_8001EEE0); // lwz r0, RunQueueBits_8001EEE0@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800097DC to: if (gc_env.cr[0] == 0) goto L_800097DC;
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', 'RunQueueBits_8001EEE0@sda21(r0)']
Translated lwz r0 RunQueueBits_8001EEE0@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&RunQueueBits_8001EEE0); // lwz r0, RunQueueBits_8001EEE0@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800097D8 to: if (gc_env.cr[0] == 0) goto L_800097D8;
Processing opcode: addi, operands: ['r3', 'r31', '0x720']
Translated addi r3 r31 0x720 to: ['gc_env.r[3] = gc_env.r[31] + 1824; // addi r3, r31, 0x720']
Translated bl OSClearContext to: OSClearContext();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stw, operands: ['r3', 'RunQueueHint_8001EEE4@sda21(r0)']
Translated stw r3 RunQueueHint_8001EEE4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&RunQueueHint_8001EEE4, gc_env.r[3]); // stw r3, RunQueueHint_8001EEE4@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'RunQueueBits_8001EEE0@sda21(r0)']
Translated lwz r0 RunQueueBits_8001EEE0@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&RunQueueBits_8001EEE0); // lwz r0, RunQueueBits_8001EEE0@sda21(r0)']
Translated cntlzw r7 r0 to: ['uint32_t val = gc_env.r[0]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[7] = count; // cntlzw r7, r0']
Translated slwi r0 r7 3 to: ['gc_env.r[0] = gc_env.r[7] << 3; // slwi r0, r7, 3']
Processing opcode: add, operands: ['r4', 'r31', 'r0']
Translated add r4 r31 r0 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[0]; // add r4, r31, r0']
Processing opcode: lwz, operands: ['r5', '0x0(r4)']
Translated lwz r5 0x0(r4) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r5, (r4)']
Processing opcode: lwz, operands: ['r6', '0x2e0(r5)']
Translated lwz r6 0x2e0(r5) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x2E0); // lwz r6, 0x2E0(r5)']
Processing opcode: addi, operands: ['r31', 'r5', '0x0']
Translated addi r31 r5 0x0 to: ['gc_env.r[31] = gc_env.r[5] + 0; // addi r31, r5, 0x0']
Translated cmplwi r6 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[6] == 0x0) ? 0 : ((uint32_t)gc_env.r[6] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009834 to: if (gc_env.cr[0] != 0) goto L_80009834;
Processing opcode: stw, operands: ['r3', '0x4(r4)']
Translated stw r3 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[3]); // stw r3, 0x4(r4)']
Translated b .L_80009838 to: goto L_80009838;
Processing opcode: stw, operands: ['r3', '0x2e4(r6)']
Translated stw r3 0x2e4(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x2E4, gc_env.r[3]); // stw r3, 0x2E4(r6)']
Processing opcode: stw, operands: ['r6', '0x0(r4)']
Translated stw r6 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[6]); // stw r6, (r4)']
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009860 to: if (gc_env.cr[0] != 0) goto L_80009860;
Translated subfic r0 r7 0x1f to: ['gc_env.r[0] = 31 - gc_env.r[7]; // subfic r0, r7, 31', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (31 >= gc_env.r[7] ? 0x20000000 : 0);']
Processing opcode: lwz, operands: ['r4', 'RunQueueBits_8001EEE0@sda21(r0)']
Translated lwz r4 RunQueueBits_8001EEE0@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&RunQueueBits_8001EEE0); // lwz r4, RunQueueBits_8001EEE0@sda21(r0)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated slw r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] << (gc_env.r[0] & 31); // slw r0, r3, r0']
Translated andc r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] & ~gc_env.r[0]; // andc r0, r4, r0']
Processing opcode: stw, operands: ['r0', 'RunQueueBits_8001EEE0@sda21(r0)']
Translated stw r0 RunQueueBits_8001EEE0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&RunQueueBits_8001EEE0, gc_env.r[0]); // stw r0, RunQueueBits_8001EEE0@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x2dc(r31)']
Translated stw r0 0x2dc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x2DC, gc_env.r[0]); // stw r0, 0x2DC(r31)']
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: sth, operands: ['r0', '0x2c8(r31)']
Translated sth r0 0x2c8(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x2C8, gc_env.r[0]); // sth r0, 0x2C8(r31)']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: stw, operands: ['r31', '0xe4(r4)']
Translated stw r31 0xe4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xE4, gc_env.r[31]); // stw r31, 0xE4(r4)']
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSLoadContext to: OSLoadContext();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: lwz, operands: ['r0', 'RunQueueHint_8001EEE4@sda21(r0)']
Translated lwz r0 RunQueueHint_8001EEE4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&RunQueueHint_8001EEE4); // lwz r0, RunQueueHint_8001EEE4@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800098C4 to: if (gc_env.cr[0] == 0) goto L_800098C4;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl SelectThread to: SelectThread();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Processing opcode: stw, operands: ['r29', '0x14(r1)']
Translated stw r29 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stw r29, 0x14(r1)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lhz, operands: ['r0', '0x2c8(r30)']
Translated lhz r0 0x2c8(r30) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x2c8); // lhz r0, 0x2c8(r30)']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Translated cmpwi r0 0x3 to: gc_env.cr[0] = (gc_env.r[0] == 0x3) ? 0 : (gc_env.r[0] < 0x3 ? -1 : 1); // Compare with immediate
Translated beq .L_800099DC to: if (gc_env.cr[0] == 0) goto L_800099DC;
Translated bge .L_80009918 to: if (gc_env.cr[0] >= 0) goto L_80009918;
Translated cmpwi r0 0x1 to: gc_env.cr[0] = (gc_env.r[0] == 0x1) ? 0 : (gc_env.r[0] < 0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_80009924 to: if (gc_env.cr[0] == 0) goto L_80009924;
Translated bge .L_8000993C to: if (gc_env.cr[0] >= 0) goto L_8000993C;
Translated b .L_800099DC to: goto L_800099DC;
Translated cmpwi r0 0x5 to: gc_env.cr[0] = (gc_env.r[0] == 0x5) ? 0 : (gc_env.r[0] < 0x5 ? -1 : 1); // Compare with immediate
Translated bge .L_800099DC to: if (gc_env.cr[0] >= 0) goto L_800099DC;
Translated b .L_80009948 to: goto L_80009948;
Processing opcode: lwz, operands: ['r0', '0x2cc(r30)']
Translated lwz r0 0x2cc(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x2CC); // lwz r0, 0x2CC(r30)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bgt .L_800099E8 to: ['if (gc_env.cr[0] & 0x4) goto L_800099E8; // bgt .L_800099E8']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl fn_80009440 to: fn_80009440();
Translated b .L_800099E8 to: goto L_800099E8;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', 'RunQueueHint_8001EEE4@sda21(r0)']
Translated stw r0 RunQueueHint_8001EEE4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&RunQueueHint_8001EEE4, gc_env.r[0]); // stw r0, RunQueueHint_8001EEE4@sda21(r0)']
Translated b .L_800099E8 to: goto L_800099E8;
Processing opcode: lwz, operands: ['r4', '0x2e0(r30)']
Translated lwz r4 0x2e0(r30) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x2E0); // lwz r4, 0x2E0(r30)']
Processing opcode: lwz, operands: ['r5', '0x2e4(r30)']
Translated lwz r5 0x2e4(r30) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x2E4); // lwz r5, 0x2E4(r30)']
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009964 to: if (gc_env.cr[0] != 0) goto L_80009964;
Processing opcode: lwz, operands: ['r3', '0x2dc(r30)']
Translated lwz r3 0x2dc(r30) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x2DC); // lwz r3, 0x2DC(r30)']
Processing opcode: stw, operands: ['r5', '0x4(r3)']
Translated stw r5 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[5]); // stw r5, 0x4(r3)']
Translated b .L_80009968 to: goto L_80009968;
Processing opcode: stw, operands: ['r5', '0x2e4(r4)']
Translated stw r5 0x2e4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x2E4, gc_env.r[5]); // stw r5, 0x2E4(r4)']
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000997C to: if (gc_env.cr[0] != 0) goto L_8000997C;
Processing opcode: lwz, operands: ['r3', '0x2dc(r30)']
Translated lwz r3 0x2dc(r30) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x2DC); // lwz r3, 0x2DC(r30)']
Processing opcode: stw, operands: ['r4', '0x0(r3)']
Translated stw r4 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[4]); // stw r4, (r3)']
Translated b .L_80009980 to: goto L_80009980;
Processing opcode: stw, operands: ['r4', '0x2e0(r5)']
Translated stw r4 0x2e0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x2E0, gc_env.r[4]); // stw r4, 0x2E0(r5)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x2dc(r30)']
Translated stw r0 0x2dc(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x2DC, gc_env.r[0]); // stw r0, 0x2DC(r30)']
Processing opcode: lwz, operands: ['r0', '0x2cc(r30)']
Translated lwz r0 0x2cc(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x2CC); // lwz r0, 0x2CC(r30)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bgt .L_800099E8 to: ['if (gc_env.cr[0] & 0x4) goto L_800099E8; // bgt .L_800099E8']
Processing opcode: lwz, operands: ['r3', '0x2f0(r30)']
Translated lwz r3 0x2f0(r30) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x2F0); // lwz r3, 0x2F0(r30)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800099E8 to: if (gc_env.cr[0] == 0) goto L_800099E8;
Processing opcode: lwz, operands: ['r29', '0x8(r3)']
Translated lwz r29 0x8(r3) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r29, 0x8(r3)']
Processing opcode: lwz, operands: ['r0', '0x2cc(r29)']
Translated lwz r0 0x2cc(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x2CC); // lwz r0, 0x2CC(r29)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bgt .L_800099E8 to: ['if (gc_env.cr[0] & 0x4) goto L_800099E8; // bgt .L_800099E8']
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated bl fn_800094A8 to: fn_800094A8();
Processing opcode: lwz, operands: ['r0', '0x2d0(r29)']
Translated lwz r0 0x2d0(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x2D0); // lwz r0, 0x2D0(r29)']
Processing opcode: addi, operands: ['r4', 'r3', '0x0']
Translated addi r4 r3 0x0 to: ['gc_env.r[4] = gc_env.r[3] + 0; // addi r4, r3, 0x0']
Translated cmpw r0 r4 to: ['gc_env.cr[0] = (int32_t)gc_env.r[0] < (int32_t)gc_env.r[4] ? 0x8 : ((int32_t)gc_env.r[0] > (int32_t)gc_env.r[4] ? 0x4 : 0x2); // cmpw r0, r4']
Translated beq .L_800099E8 to: if (gc_env.cr[0] == 0) goto L_800099E8;
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated bl fn_800094E4 to: fn_800094E4();
Translated mr. r29 r3 to: gc_env.r[29] = gc_env.r[3]; // Move register
Translated bne .L_800099A4 to: if (gc_env.cr[0] != 0) goto L_800099A4;
Translated b .L_800099E8 to: goto L_800099E8;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated b .L_80009A74 to: goto L_80009A74;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSClearContext to: OSClearContext();
Processing opcode: lhz, operands: ['r0', '0x2ca(r30)']
Translated lhz r0 0x2ca(r30) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x2ca); // lhz r0, 0x2ca(r30)']
Translated clrlwi. r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Translated beq .L_80009A40 to: if (gc_env.cr[0] == 0) goto L_80009A40;
Processing opcode: lwz, operands: ['r4', '0x2fc(r30)']
Translated lwz r4 0x2fc(r30) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x2FC); // lwz r4, 0x2FC(r30)']
Processing opcode: lwz, operands: ['r5', '0x300(r30)']
Translated lwz r5 0x300(r30) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x300); // lwz r5, 0x300(r30)']
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009A18 to: if (gc_env.cr[0] != 0) goto L_80009A18;
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: stw, operands: ['r5', '0xe0(r3)']
Translated stw r5 0xe0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xE0, gc_env.r[5]); // stw r5, 0xE0(r3)']
Translated b .L_80009A1C to: goto L_80009A1C;
Processing opcode: stw, operands: ['r5', '0x300(r4)']
Translated stw r5 0x300(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x300, gc_env.r[5]); // stw r5, 0x300(r4)']
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009A30 to: if (gc_env.cr[0] != 0) goto L_80009A30;
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: stw, operands: ['r4', '0xdc(r3)']
Translated stw r4 0xdc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xDC, gc_env.r[4]); // stw r4, 0xDC(r3)']
Translated b .L_80009A34 to: goto L_80009A34;
Processing opcode: stw, operands: ['r4', '0x2fc(r5)']
Translated stw r4 0x2fc(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x2FC, gc_env.r[4]); // stw r4, 0x2FC(r5)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: sth, operands: ['r0', '0x2c8(r30)']
Translated sth r0 0x2c8(r30) to: ['gc_mem_write16(gc_env.ram, gc_env.r[30] + 0x2C8, gc_env.r[0]); // sth r0, 0x2C8(r30)']
Translated b .L_80009A48 to: goto L_80009A48;
Processing opcode: li, operands: ['r0', '0x8']
Translated li r0 0x8 to: ['gc_env.r[0] = 0x8; // li r0, 0x8']
Processing opcode: sth, operands: ['r0', '0x2c8(r30)']
Translated sth r0 0x2c8(r30) to: ['gc_mem_write16(gc_env.ram, gc_env.r[30] + 0x2C8, gc_env.r[0]); // sth r0, 0x2C8(r30)']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl fn_800082C0 to: fn_800082C0();
Processing opcode: addi, operands: ['r3', 'r30', '0x2e8']
Translated addi r3 r30 0x2e8 to: ['gc_env.r[3] = gc_env.r[30] + 744; // addi r3, r30, 0x2e8']
Translated bl fn_80009B7C to: fn_80009B7C();
Processing opcode: lwz, operands: ['r0', 'RunQueueHint_8001EEE4@sda21(r0)']
Translated lwz r0 RunQueueHint_8001EEE4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&RunQueueHint_8001EEE4); // lwz r0, RunQueueHint_8001EEE4@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80009A6C to: if (gc_env.cr[0] == 0) goto L_80009A6C;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl SelectThread to: SelectThread();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: lwz, operands: ['r29', '0x14(r1)']
Translated lwz r29 0x14(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r29, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: lwz, operands: ['r4', '0xe4(r4)']
Translated lwz r4 0xe4(r4) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xE4); // lwz r4, 0xE4(r4)']
Processing opcode: li, operands: ['r0', '0x4']
Translated li r0 0x4 to: ['gc_env.r[0] = 0x4; // li r0, 0x4']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: sth, operands: ['r0', '0x2c8(r4)']
Translated sth r0 0x2c8(r4) to: ['gc_mem_write16(gc_env.ram, gc_env.r[4] + 0x2C8, gc_env.r[0]); // sth r0, 0x2C8(r4)']
Processing opcode: stw, operands: ['r30', '0x2dc(r4)']
Translated stw r30 0x2dc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x2DC, gc_env.r[30]); // stw r30, 0x2DC(r4)']
Processing opcode: lwz, operands: ['r5', '0x0(r30)']
Translated lwz r5 0x0(r30) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r5, (r30)']
Translated b .L_80009AD0 to: goto L_80009AD0;
Processing opcode: lwz, operands: ['r5', '0x2e0(r5)']
Translated lwz r5 0x2e0(r5) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x2E0); // lwz r5, 0x2E0(r5)']
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80009AE8 to: if (gc_env.cr[0] == 0) goto L_80009AE8;
Processing opcode: lwz, operands: ['r3', '0x2d0(r5)']
Translated lwz r3 0x2d0(r5) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x2D0); // lwz r3, 0x2D0(r5)']
Processing opcode: lwz, operands: ['r0', '0x2d0(r4)']
Translated lwz r0 0x2d0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x2D0); // lwz r0, 0x2D0(r4)']
Translated cmpw r3 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[3] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[3] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r3, r0']
Translated ble .L_80009ACC to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80009ACC; // ble .L_80009ACC']
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009B1C to: if (gc_env.cr[0] != 0) goto L_80009B1C;
Processing opcode: lwz, operands: ['r3', '0x4(r30)']
Translated lwz r3 0x4(r30) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x4); // lwz r3, 0x4(r30)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009B04 to: if (gc_env.cr[0] != 0) goto L_80009B04;
Processing opcode: stw, operands: ['r4', '0x0(r30)']
Translated stw r4 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[4]); // stw r4, (r30)']
Translated b .L_80009B08 to: goto L_80009B08;
Processing opcode: stw, operands: ['r4', '0x2e0(r3)']
Translated stw r4 0x2e0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x2E0, gc_env.r[4]); // stw r4, 0x2E0(r3)']
Processing opcode: stw, operands: ['r3', '0x2e4(r4)']
Translated stw r3 0x2e4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x2E4, gc_env.r[3]); // stw r3, 0x2E4(r4)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x2e0(r4)']
Translated stw r0 0x2e0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x2E0, gc_env.r[0]); // stw r0, 0x2E0(r4)']
Processing opcode: stw, operands: ['r4', '0x4(r30)']
Translated stw r4 0x4(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x4, gc_env.r[4]); // stw r4, 0x4(r30)']
Translated b .L_80009B40 to: goto L_80009B40;
Processing opcode: stw, operands: ['r5', '0x2e0(r4)']
Translated stw r5 0x2e0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x2E0, gc_env.r[5]); // stw r5, 0x2E0(r4)']
Processing opcode: lwz, operands: ['r3', '0x2e4(r5)']
Translated lwz r3 0x2e4(r5) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x2E4); // lwz r3, 0x2E4(r5)']
Processing opcode: stw, operands: ['r4', '0x2e4(r5)']
Translated stw r4 0x2e4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x2E4, gc_env.r[4]); // stw r4, 0x2E4(r5)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r3', '0x2e4(r4)']
Translated stw r3 0x2e4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x2E4, gc_env.r[3]); // stw r3, 0x2E4(r4)']
Translated bne .L_80009B3C to: if (gc_env.cr[0] != 0) goto L_80009B3C;
Processing opcode: stw, operands: ['r4', '0x0(r30)']
Translated stw r4 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[4]); // stw r4, (r30)']
Translated b .L_80009B40 to: goto L_80009B40;
Processing opcode: stw, operands: ['r4', '0x2e0(r3)']
Translated stw r4 0x2e0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x2E0, gc_env.r[4]); // stw r4, 0x2E0(r3)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', 'RunQueueHint_8001EEE4@sda21(r0)']
Translated stw r0 RunQueueHint_8001EEE4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&RunQueueHint_8001EEE4, gc_env.r[0]); // stw r0, RunQueueHint_8001EEE4@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'RunQueueHint_8001EEE4@sda21(r0)']
Translated lwz r0 RunQueueHint_8001EEE4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&RunQueueHint_8001EEE4); // lwz r0, RunQueueHint_8001EEE4@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80009B5C to: if (gc_env.cr[0] == 0) goto L_80009B5C;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl SelectThread to: SelectThread();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated lis r4 RunQueue_8001BC18@ha to: ['gc_env.r[4] = ((uint32_t)&RunQueue_8001BC18 >> 16) & 0xFFFF; // lis r4, RunQueue_8001BC18@ha']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Processing opcode: addi, operands: ['r5', 'r4', 'RunQueue_8001BC18@l']
Translated addi r5 r4 RunQueue_8001BC18@l to: ['gc_env.r[5] = gc_env.r[4] + ((uint32_t)&RunQueue_8001BC18 & 0xFFFF); // addi r5, r4, RunQueue_8001BC18@l']
Translated b .L_80009C40 to: goto L_80009C40;
Processing opcode: lwz, operands: ['r3', '0x2e0(r6)']
Translated lwz r3 0x2e0(r6) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x2E0); // lwz r3, 0x2E0(r6)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009BC0 to: if (gc_env.cr[0] != 0) goto L_80009BC0;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x4(r30)']
Translated stw r0 0x4(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x4, gc_env.r[0]); // stw r0, 0x4(r30)']
Translated b .L_80009BC8 to: goto L_80009BC8;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x2e4(r3)']
Translated stw r0 0x2e4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x2E4, gc_env.r[0]); // stw r0, 0x2E4(r3)']
Processing opcode: stw, operands: ['r3', '0x0(r30)']
Translated stw r3 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[3]); // stw r3, (r30)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: sth, operands: ['r0', '0x2c8(r6)']
Translated sth r0 0x2c8(r6) to: ['gc_mem_write16(gc_env.ram, gc_env.r[6] + 0x2C8, gc_env.r[0]); // sth r0, 0x2C8(r6)']
Processing opcode: lwz, operands: ['r0', '0x2cc(r6)']
Translated lwz r0 0x2cc(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x2CC); // lwz r0, 0x2CC(r6)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bgt .L_80009C40 to: ['if (gc_env.cr[0] & 0x4) goto L_80009C40; // bgt .L_80009C40']
Processing opcode: lwz, operands: ['r0', '0x2d0(r6)']
Translated lwz r0 0x2d0(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x2D0); // lwz r0, 0x2D0(r6)']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: stw, operands: ['r0', '0x2dc(r6)']
Translated stw r0 0x2dc(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x2DC, gc_env.r[0]); // stw r0, 0x2DC(r6)']
Processing opcode: lwz, operands: ['r4', '0x2dc(r6)']
Translated lwz r4 0x2dc(r6) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x2DC); // lwz r4, 0x2DC(r6)']
Processing opcode: lwz, operands: ['r3', '0x4(r4)']
Translated lwz r3 0x4(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwz r3, 0x4(r4)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009C08 to: if (gc_env.cr[0] != 0) goto L_80009C08;
Processing opcode: stw, operands: ['r6', '0x0(r4)']
Translated stw r6 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[6]); // stw r6, (r4)']
Translated b .L_80009C0C to: goto L_80009C0C;
Processing opcode: stw, operands: ['r6', '0x2e0(r3)']
Translated stw r6 0x2e0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x2E0, gc_env.r[6]); // stw r6, 0x2E0(r3)']
Processing opcode: stw, operands: ['r3', '0x2e4(r6)']
Translated stw r3 0x2e4(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x2E4, gc_env.r[3]); // stw r3, 0x2E4(r6)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: stw, operands: ['r0', '0x2e0(r6)']
Translated stw r0 0x2e0(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x2E0, gc_env.r[0]); // stw r0, 0x2E0(r6)']
Processing opcode: lwz, operands: ['r4', '0x2dc(r6)']
Translated lwz r4 0x2dc(r6) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x2DC); // lwz r4, 0x2DC(r6)']
Processing opcode: stw, operands: ['r6', '0x4(r4)']
Translated stw r6 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[6]); // stw r6, 0x4(r4)']
Processing opcode: lwz, operands: ['r0', '0x2d0(r6)']
Translated lwz r0 0x2d0(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x2D0); // lwz r0, 0x2D0(r6)']
Processing opcode: lwz, operands: ['r4', 'RunQueueBits_8001EEE0@sda21(r0)']
Translated lwz r4 RunQueueBits_8001EEE0@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&RunQueueBits_8001EEE0); // lwz r4, RunQueueBits_8001EEE0@sda21(r0)']
Translated subfic r0 r0 0x1f to: ['gc_env.r[0] = 31 - gc_env.r[0]; // subfic r0, r0, 31', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (31 >= gc_env.r[0] ? 0x20000000 : 0);']
Translated slw r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] << (gc_env.r[0] & 31); // slw r0, r3, r0']
Translated or r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] | gc_env.r[0]; // or r0, r4, r0']
Processing opcode: stw, operands: ['r0', 'RunQueueBits_8001EEE0@sda21(r0)']
Translated stw r0 RunQueueBits_8001EEE0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&RunQueueBits_8001EEE0, gc_env.r[0]); // stw r0, RunQueueBits_8001EEE0@sda21(r0)']
Processing opcode: stw, operands: ['r3', 'RunQueueHint_8001EEE4@sda21(r0)']
Translated stw r3 RunQueueHint_8001EEE4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&RunQueueHint_8001EEE4, gc_env.r[3]); // stw r3, RunQueueHint_8001EEE4@sda21(r0)']
Processing opcode: lwz, operands: ['r6', '0x0(r30)']
Translated lwz r6 0x0(r30) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r6, (r30)']
Translated cmplwi r6 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[6] == 0x0) ? 0 : ((uint32_t)gc_env.r[6] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009BA8 to: if (gc_env.cr[0] != 0) goto L_80009BA8;
Processing opcode: lwz, operands: ['r0', 'RunQueueHint_8001EEE4@sda21(r0)']
Translated lwz r0 RunQueueHint_8001EEE4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&RunQueueHint_8001EEE4); // lwz r0, RunQueueHint_8001EEE4@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80009C60 to: if (gc_env.cr[0] == 0) goto L_80009C60;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl SelectThread to: SelectThread();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mftb r3 269 to: ['gc_env.r[3] = (uint32_t)(gc_env.tb >> 32); // mftb r3, 269']
Translated mftb r4 268 to: ['gc_env.r[4] = (uint32_t)(gc_env.tb & 0xFFFFFFFF); // mftb r4, 268']
Translated mftb r5 269 to: ['gc_env.r[5] = (uint32_t)(gc_env.tb >> 32); // mftb r5, 269']
Translated cmpw r3 r5 to: ['gc_env.cr[0] = (int32_t)gc_env.r[3] < (int32_t)gc_env.r[5] ? 0x8 : ((int32_t)gc_env.r[3] > (int32_t)gc_env.r[5] ? 0x4 : 0x2); // cmpw r3, r5']
Translated bne OSGetTime to: if (gc_env.cr[0] != 0) OSGetTime();
Translated blr  to: return;
Translated mftb r3 268 to: ['gc_env.r[3] = (uint32_t)(gc_env.tb & 0xFFFFFFFF); // mftb r3, 268']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: stw, operands: ['r29', '0x14(r1)']
Translated stw r29 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stw r29, 0x14(r1)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl OSGetTime to: OSGetTime();
Translated lis r6 0x8000 to: ['gc_env.r[6] = -32768 << 16; // lis r6, 0x8000']
Processing opcode: lwz, operands: ['r5', '0x30dc(r6)']
Translated lwz r5 0x30dc(r6) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x30DC); // lwz r5, 0x30DC(r6)']
Processing opcode: lwz, operands: ['r0', '0x30d8(r6)']
Translated lwz r0 0x30d8(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x30D8); // lwz r0, 0x30D8(r6)']
Processing opcode: addc, operands: ['r29', 'r5', 'r4']
Translated addc r29 r5 r4 to: ['uint64_t addc_temp = (uint64_t)gc_env.r[5] + gc_env.r[4];', 'gc_env.r[29] = (uint32_t)addc_temp; // addc r29, r5, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addc_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r30 r0 r3 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[0] + gc_env.r[3] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[30] = (uint32_t)adde_temp; // adde r30, r0, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r4 r29 to: gc_env.r[4] = gc_env.r[29]; // Move register
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: lwz, operands: ['r29', '0x14(r1)']
Translated lwz r29 0x14(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r29, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl __init_cpp to: __init_cpp();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated lis r3 _ctors@ha to: ['gc_env.r[3] = ((uint32_t)&_ctors >> 16) & 0xFFFF; // lis r3, _ctors@ha']
Processing opcode: addi, operands: ['r0', 'r3', '_ctors@l']
Translated addi r0 r3 _ctors@l to: ['gc_env.r[0] = (uint32_t)&_ctors; // lis + addi _ctors (completing pattern)']
Translated mr r31 r0 to: gc_env.r[31] = gc_env.r[0]; // Move register
Translated b .L_80009D44 to: goto L_80009D44;
Translated b .L_80009D48 to: goto L_80009D48;
Translated b .L_80009D58 to: goto L_80009D58;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: addi, operands: ['r31', 'r31', '0x4']
Translated addi r31 r31 0x4 to: ['gc_env.r[31] += 4; // addi r31, r31, 0x4']
Processing opcode: lwz, operands: ['r12', '0x0(r31)']
Translated lwz r12 0x0(r31) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r12, (r31)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009D4C to: if (gc_env.cr[0] != 0) goto L_80009D4C;
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl PPCHalt to: PPCHalt();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r5 Ecb_8001C600@ha to: ['gc_env.r[5] = ((uint32_t)&Ecb_8001C600 >> 16) & 0xFFFF; // lis r5, Ecb_8001C600@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Translated cmpwi r3 0x1 to: gc_env.cr[0] = (gc_env.r[3] == 0x1) ? 0 : (gc_env.r[3] < 0x1 ? -1 : 1); // Compare with immediate
Processing opcode: addi, operands: ['r5', 'r5', 'Ecb_8001C600@l']
Translated addi r5 r5 Ecb_8001C600@l to: ['gc_env.r[5] = gc_env.r[5] + ((uint32_t)&Ecb_8001C600 & 0xFFFF); // addi r5, r5, Ecb_8001C600@l']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: addi, operands: ['r31', 'r4', '0x0']
Translated addi r31 r4 0x0 to: ['gc_env.r[31] = gc_env.r[4] + 0; // addi r31, r4, 0x0']
Processing opcode: addi, operands: ['r4', 'r5', '0x80']
Translated addi r4 r5 0x80 to: ['gc_env.r[4] = gc_env.r[5] + 128; // addi r4, r5, 0x80']
Translated beq .L_80009E18 to: if (gc_env.cr[0] == 0) goto L_80009E18;
Translated bge .L_80009DD0 to: if (gc_env.cr[0] >= 0) goto L_80009DD0;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bge .L_80009DDC to: if (gc_env.cr[0] >= 0) goto L_80009DDC;
Translated b .L_80009E78 to: goto L_80009E78;
Translated cmpwi r3 0x3 to: gc_env.cr[0] = (gc_env.r[3] == 0x3) ? 0 : (gc_env.r[3] < 0x3 ? -1 : 1); // Compare with immediate
Translated bge .L_80009E78 to: if (gc_env.cr[0] >= 0) goto L_80009E78;
Translated b .L_80009E48 to: goto L_80009E48;
Processing opcode: lwz, operands: ['r0', '0x0(r31)']
Translated lwz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r0, (r31)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80009DF4 to: if (gc_env.cr[0] != 0) goto L_80009DF4;
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80009E00 to: if (gc_env.cr[0] == 0) goto L_80009E00;
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Translated rlwinm. r0 r0 0 27 27 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x10; // rlwinm r0, r0, 0, 27, 27', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_80009E0C to: if (gc_env.cr[0] == 0) goto L_80009E0C;
Translated lis r3 0x41 to: ['gc_env.r[3] = 65 << 16; // lis r3, 0x41']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Translated b .L_80009E78 to: goto L_80009E78;
Translated lis r3 0x41 to: ['gc_env.r[3] = 65 << 16; // lis r3, 0x41']
Translated bl __OSUnmaskInterrupts to: __OSUnmaskInterrupts();
Translated b .L_80009E78 to: goto L_80009E78;
Processing opcode: lwz, operands: ['r0', '0x0(r31)']
Translated lwz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r0, (r31)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80009E30 to: if (gc_env.cr[0] == 0) goto L_80009E30;
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Translated rlwinm. r0 r0 0 27 27 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x10; // rlwinm r0, r0, 0, 27, 27', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_80009E3C to: if (gc_env.cr[0] == 0) goto L_80009E3C;
Translated lis r3 0x8 to: ['gc_env.r[3] = 8 << 16; // lis r3, 0x8']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Translated b .L_80009E78 to: goto L_80009E78;
Translated lis r3 0x8 to: ['gc_env.r[3] = 8 << 16; // lis r3, 0x8']
Translated bl __OSUnmaskInterrupts to: __OSUnmaskInterrupts();
Translated b .L_80009E78 to: goto L_80009E78;
Processing opcode: li, operands: ['r3', '0x19']
Translated li r3 0x19 to: ['gc_env.r[3] = 0x19; // li r3, 0x19']
Translated bl fn_800077C8 to: fn_800077C8();
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80009E64 to: if (gc_env.cr[0] == 0) goto L_80009E64;
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Translated rlwinm. r0 r0 0 27 27 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x10; // rlwinm r0, r0, 0, 27, 27', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_80009E70 to: if (gc_env.cr[0] == 0) goto L_80009E70;
Processing opcode: li, operands: ['r3', '0x40']
Translated li r3 0x40 to: ['gc_env.r[3] = 0x40; // li r3, 0x40']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Translated b .L_80009E78 to: goto L_80009E78;
Processing opcode: li, operands: ['r3', '0x40']
Translated li r3 0x40 to: ['gc_env.r[3] = 0x40; // li r3, 0x40']
Translated bl __OSUnmaskInterrupts to: __OSUnmaskInterrupts();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x58(r1)']
Translated stwu r1 -0x58(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x58, gc_env.r[1]); // stwu r1, -0x58(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x58;']
Translated stmw r19 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[19]); // stmw r19, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[20]); // stmw r19, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[21]); // stmw r19, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[22]); // stmw r19, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[23]); // stmw r19, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[24]); // stmw r19, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[25]); // stmw r19, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x40, gc_env.r[26]); // stmw r19, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x44, gc_env.r[27]); // stmw r19, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x48, gc_env.r[28]); // stmw r19, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4C, gc_env.r[29]); // stmw r19, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x50, gc_env.r[30]); // stmw r19, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x54, gc_env.r[31]); // stmw r19, 0x24(r1)']
Processing opcode: addi, operands: ['r28', 'r3', '0x0']
Translated addi r28 r3 0x0 to: ['gc_env.r[28] = gc_env.r[3] + 0; // addi r28, r3, 0x0']
Translated lis r3 Ecb_8001C600@ha to: ['gc_env.r[3] = ((uint32_t)&Ecb_8001C600 >> 16) & 0xFFFF; // lis r3, Ecb_8001C600@ha']
Translated slwi r8 r28 6 to: ['gc_env.r[8] = gc_env.r[28] << 6; // slwi r8, r28, 6']
Processing opcode: addi, operands: ['r0', 'r3', 'Ecb_8001C600@l']
Translated addi r0 r3 Ecb_8001C600@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&Ecb_8001C600 & 0xFFFF); // addi r0, r3, Ecb_8001C600@l']
Processing opcode: addi, operands: ['r29', 'r4', '0x0']
Translated addi r29 r4 0x0 to: ['gc_env.r[29] = gc_env.r[4] + 0; // addi r29, r4, 0x0']
Processing opcode: addi, operands: ['r30', 'r5', '0x0']
Translated addi r30 r5 0x0 to: ['gc_env.r[30] = gc_env.r[5] + 0; // addi r30, r5, 0x0']
Processing opcode: addi, operands: ['r31', 'r6', '0x0']
Translated addi r31 r6 0x0 to: ['gc_env.r[31] = gc_env.r[6] + 0; // addi r31, r6, 0x0']
Processing opcode: addi, operands: ['r19', 'r7', '0x0']
Translated addi r19 r7 0x0 to: ['gc_env.r[19] = gc_env.r[7] + 0; // addi r19, r7, 0x0']
Processing opcode: add, operands: ['r27', 'r0', 'r8']
Translated add r27 r0 r8 to: ['gc_env.r[27] = gc_env.r[0] + gc_env.r[8]; // add r27, r0, r8']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', '0xc(r27)']
Translated lwz r0 0xc(r27) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[27] + 0xC); // lwz r0, 0xC(r27)']
Processing opcode: addi, operands: ['r26', 'r3', '0x0']
Translated addi r26 r3 0x0 to: ['gc_env.r[26] = gc_env.r[3] + 0; // addi r26, r3, 0x0']
Translated clrlwi. r0 r0 30 to: ['gc_env.r[0] = gc_env.r[0] & 0x3; // clrlwi r0, r0, 30']
Translated bne .L_80009EE0 to: if (gc_env.cr[0] != 0) goto L_80009EE0;
Processing opcode: lwz, operands: ['r0', '0xc(r27)']
Translated lwz r0 0xc(r27) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[27] + 0xC); // lwz r0, 0xC(r27)']
Translated rlwinm. r0 r0 0 29 29 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x4; // rlwinm r0, r0, 0, 29, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_80009EF0 to: if (gc_env.cr[0] != 0) goto L_80009EF0;
Translated mr r3 r26 to: gc_env.r[3] = gc_env.r[26]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000A0D4 to: goto L_8000A0D4;
Processing opcode: stw, operands: ['r19', '0x4(r27)']
Translated stw r19 0x4(r27) to: ['gc_mem_write32(gc_env.ram, gc_env.r[27] + 0x4, gc_env.r[19]); // stw r19, 0x4(r27)']
Processing opcode: lwz, operands: ['r0', '0x4(r27)']
Translated lwz r0 0x4(r27) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[27] + 0x4); // lwz r0, 0x4(r27)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80009F24 to: if (gc_env.cr[0] == 0) goto L_80009F24;
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl fn_8000A47C to: fn_8000A47C();
Processing opcode: mulli, operands: ['r0', 'r28', '0x3']
Translated mulli r0 r28 0x3 to: ['gc_env.r[0] = gc_env.r[28] * 3; // mulli r0, r28, 3']
Translated lis r3 0x20 to: ['gc_env.r[3] = 32 << 16; // lis r3, 0x20']
Translated srw r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] >> (gc_env.r[0] & 31); // srw r3, r3, r0']
Translated bl __OSUnmaskInterrupts to: __OSUnmaskInterrupts();
Processing opcode: lwz, operands: ['r0', '0xc(r27)']
Translated lwz r0 0xc(r27) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[27] + 0xC); // lwz r0, 0xC(r27)']
Translated cmplwi r31 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == 0x0) ? 0 : ((uint32_t)gc_env.r[31] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated ori r0 r0 0x2 to: ['gc_env.r[0] |= 2; // ori r0, r0, 0x2']
Processing opcode: stw, operands: ['r0', '0xc(r27)']
Translated stw r0 0xc(r27) to: ['gc_mem_write32(gc_env.ram, gc_env.r[27] + 0xC, gc_env.r[0]); // stw r0, 0xC(r27)']
Translated beq .L_8000A078 to: if (gc_env.cr[0] == 0) goto L_8000A078;
Processing opcode: li, operands: ['r24', '0x0']
Translated li r24 0x0 to: ['gc_env.r[24] = 0x0; // li r24, 0x0']
Translated cmpw r24 r30 to: ['gc_env.cr[0] = (int32_t)gc_env.r[24] < (int32_t)gc_env.r[30] ? 0x8 : ((int32_t)gc_env.r[24] > (int32_t)gc_env.r[30] ? 0x4 : 0x2); // cmpw r24, r30']
Processing opcode: li, operands: ['r25', '0x0']
Translated li r25 0x0 to: ['gc_env.r[25] = 0x0; // li r25, 0x0']
Translated bge .L_8000A064 to: if (gc_env.cr[0] >= 0) goto L_8000A064;
Translated cmpwi r30 0x8 to: gc_env.cr[0] = (gc_env.r[30] == 0x8) ? 0 : (gc_env.r[30] < 0x8 ? -1 : 1); // Compare with immediate
Processing opcode: subi, operands: ['r3', 'r30', '0x8']
Translated subi r3 r30 0x8 to: ['gc_env.r[3] = gc_env.r[30] - 8; // subi r3, r30, 8']
Translated ble .L_8000A0CC to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000A0CC; // ble .L_8000A0CC']
Processing opcode: addi, operands: ['r0', 'r3', '0x7']
Translated addi r0 r3 0x7 to: ['gc_env.r[0] = gc_env.r[3] + 7; // addi r0, r3, 0x7']
Translated srwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] >> 3; // srwi r0, r0, 3']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Processing opcode: addi, operands: ['r12', 'r29', '0x0']
Translated addi r12 r29 0x0 to: ['gc_env.r[12] = gc_env.r[29] + 0; // addi r12, r29, 0x0']
Translated ble .L_8000A0CC to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000A0CC; // ble .L_8000A0CC']
Translated subfic r3 r24 0x3 to: ['gc_env.r[3] = 3 - gc_env.r[24]; // subfic r3, r24, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[24] ? 0x20000000 : 0);']
Processing opcode: lbz, operands: ['r9', '0x0(r12)']
Translated lbz r9 0x0(r12) to: ['gc_env.r[9] = gc_mem_read8(gc_env.ram, gc_env.r[12] + 0x0); // lbz r9, 0x0(r12)']
Processing opcode: addi, operands: ['r0', 'r24', '0x1']
Translated addi r0 r24 0x1 to: ['gc_env.r[0] = gc_env.r[24] + 1; // addi r0, r24, 0x1']
Processing opcode: lbz, operands: ['r10', '0x1(r12)']
Translated lbz r10 0x1(r12) to: ['gc_env.r[10] = gc_mem_read8(gc_env.ram, gc_env.r[12] + 0x1); // lbz r10, 0x1(r12)']
Translated slwi r7 r3 3 to: ['gc_env.r[7] = gc_env.r[3] << 3; // slwi r7, r3, 3']
Processing opcode: lbz, operands: ['r8', '0x2(r12)']
Translated lbz r8 0x2(r12) to: ['gc_env.r[8] = gc_mem_read8(gc_env.ram, gc_env.r[12] + 0x2); // lbz r8, 0x2(r12)']
Translated subfic r5 r0 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[0]; // subfic r5, r0, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[0] ? 0x20000000 : 0);']
Processing opcode: lbz, operands: ['r6', '0x3(r12)']
Translated lbz r6 0x3(r12) to: ['gc_env.r[6] = gc_mem_read8(gc_env.ram, gc_env.r[12] + 0x3); // lbz r6, 0x3(r12)']
Processing opcode: addi, operands: ['r3', 'r24', '0x2']
Translated addi r3 r24 0x2 to: ['gc_env.r[3] = gc_env.r[24] + 2; // addi r3, r24, 0x2']
Processing opcode: lbz, operands: ['r4', '0x4(r12)']
Translated lbz r4 0x4(r12) to: ['gc_env.r[4] = gc_mem_read8(gc_env.ram, gc_env.r[12] + 0x4); // lbz r4, 0x4(r12)']
Translated slw r11 r9 r7 to: ['gc_env.r[11] = gc_env.r[9] << (gc_env.r[7] & 31); // slw r11, r9, r7']
Processing opcode: lbz, operands: ['r0', '0x5(r12)']
Translated lbz r0 0x5(r12) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[12] + 0x5); // lbz r0, 0x5(r12)']
Translated slwi r9 r5 3 to: ['gc_env.r[9] = gc_env.r[5] << 3; // slwi r9, r5, 3']
Processing opcode: lbz, operands: ['r20', '0x6(r12)']
Translated lbz r20 0x6(r12) to: ['gc_env.r[20] = gc_mem_read8(gc_env.ram, gc_env.r[12] + 0x6); // lbz r20, 0x6(r12)']
Translated subfic r3 r3 0x3 to: ['gc_env.r[3] = 3 - gc_env.r[3]; // subfic r3, r3, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[3] ? 0x20000000 : 0);']
Processing opcode: lbz, operands: ['r22', '0x7(r12)']
Translated lbz r22 0x7(r12) to: ['gc_env.r[22] = gc_mem_read8(gc_env.ram, gc_env.r[12] + 0x7); // lbz r22, 0x7(r12)']
Translated slwi r7 r3 3 to: ['gc_env.r[7] = gc_env.r[3] << 3; // slwi r7, r3, 3']
Translated neg r5 r24 to: ['gc_env.r[5] = -(int32_t)gc_env.r[24]; // neg r5, r24']
Processing opcode: addi, operands: ['r3', 'r24', '0x4']
Translated addi r3 r24 0x4 to: ['gc_env.r[3] = gc_env.r[24] + 4; // addi r3, r24, 0x4']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated subfic r3 r3 0x3 to: ['gc_env.r[3] = 3 - gc_env.r[3]; // subfic r3, r3, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[3] ? 0x20000000 : 0);']
Processing opcode: addi, operands: ['r19', 'r24', '0x5']
Translated addi r19 r24 0x5 to: ['gc_env.r[19] = gc_env.r[24] + 5; // addi r19, r24, 0x5']
Translated slwi r3 r3 3 to: ['gc_env.r[3] = gc_env.r[3] << 3; // slwi r3, r3, 3']
Translated subfic r19 r19 0x3 to: ['gc_env.r[19] = 3 - gc_env.r[19]; // subfic r19, r19, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[19] ? 0x20000000 : 0);']
Processing opcode: addi, operands: ['r21', 'r24', '0x6']
Translated addi r21 r24 0x6 to: ['gc_env.r[21] = gc_env.r[24] + 6; // addi r21, r24, 0x6']
Translated slwi r19 r19 3 to: ['gc_env.r[19] = gc_env.r[19] << 3; // slwi r19, r19, 3']
Translated subfic r21 r21 0x3 to: ['gc_env.r[21] = 3 - gc_env.r[21]; // subfic r21, r21, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[21] ? 0x20000000 : 0);']
Processing opcode: addi, operands: ['r23', 'r24', '0x7']
Translated addi r23 r24 0x7 to: ['gc_env.r[23] = gc_env.r[24] + 7; // addi r23, r24, 0x7']
Translated slwi r21 r21 3 to: ['gc_env.r[21] = gc_env.r[21] << 3; // slwi r21, r21, 3']
Translated subfic r23 r23 0x3 to: ['gc_env.r[23] = 3 - gc_env.r[23]; // subfic r23, r23, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[23] ? 0x20000000 : 0);']
Translated slwi r23 r23 3 to: ['gc_env.r[23] = gc_env.r[23] << 3; // slwi r23, r23, 3']
Translated or r25 r25 r11 to: ['gc_env.r[25] = gc_env.r[25] | gc_env.r[11]; // or r25, r25, r11']
Translated slw r9 r10 r9 to: ['gc_env.r[9] = gc_env.r[10] << (gc_env.r[9] & 31); // slw r9, r10, r9']
Translated or r25 r25 r9 to: ['gc_env.r[25] = gc_env.r[25] | gc_env.r[9]; // or r25, r25, r9']
Translated slw r7 r8 r7 to: ['gc_env.r[7] = gc_env.r[8] << (gc_env.r[7] & 31); // slw r7, r8, r7']
Translated or r25 r25 r7 to: ['gc_env.r[25] = gc_env.r[25] | gc_env.r[7]; // or r25, r25, r7']
Translated slw r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[6] << (gc_env.r[5] & 31); // slw r5, r6, r5']
Translated or r25 r25 r5 to: ['gc_env.r[25] = gc_env.r[25] | gc_env.r[5]; // or r25, r25, r5']
Translated slw r3 r4 r3 to: ['gc_env.r[3] = gc_env.r[4] << (gc_env.r[3] & 31); // slw r3, r4, r3']
Translated or r25 r25 r3 to: ['gc_env.r[25] = gc_env.r[25] | gc_env.r[3]; // or r25, r25, r3']
Translated slw r0 r0 r19 to: ['gc_env.r[0] = gc_env.r[0] << (gc_env.r[19] & 31); // slw r0, r0, r19']
Translated or r25 r25 r0 to: ['gc_env.r[25] = gc_env.r[25] | gc_env.r[0]; // or r25, r25, r0']
Translated slw r0 r20 r21 to: ['gc_env.r[0] = gc_env.r[20] << (gc_env.r[21] & 31); // slw r0, r20, r21']
Translated or r25 r25 r0 to: ['gc_env.r[25] = gc_env.r[25] | gc_env.r[0]; // or r25, r25, r0']
Translated slw r0 r22 r23 to: ['gc_env.r[0] = gc_env.r[22] << (gc_env.r[23] & 31); // slw r0, r22, r23']
Translated or r25 r25 r0 to: ['gc_env.r[25] = gc_env.r[25] | gc_env.r[0]; // or r25, r25, r0']
Processing opcode: addi, operands: ['r12', 'r12', '0x8']
Translated addi r12 r12 0x8 to: ['gc_env.r[12] += 8; // addi r12, r12, 0x8']
Processing opcode: addi, operands: ['r24', 'r24', '0x8']
Translated addi r24 r24 0x8 to: ['gc_env.r[24] += 8; // addi r24, r24, 0x8']
Translated bdnz .L_80009F6C to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80009F6C;']
Translated b .L_8000A0CC to: goto L_8000A0CC;
Processing opcode: subf, operands: ['r0', 'r24', 'r30']
Translated subf r0 r24 r30 to: ['gc_env.r[0] = gc_env.r[30] - gc_env.r[24]; // subf r0, r24, r30']
Translated cmpw r24 r30 to: ['gc_env.cr[0] = (int32_t)gc_env.r[24] < (int32_t)gc_env.r[30] ? 0x8 : ((int32_t)gc_env.r[24] > (int32_t)gc_env.r[30] ? 0x4 : 0x2); // cmpw r24, r30']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bge .L_8000A064 to: if (gc_env.cr[0] >= 0) goto L_8000A064;
Translated subfic r0 r24 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[24]; // subfic r0, r24, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[24] ? 0x20000000 : 0);']
Processing opcode: lbz, operands: ['r3', '0x0(r4)']
Translated lbz r3 0x0(r4) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 0x0); // lbz r3, 0x0(r4)']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Translated slw r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] << (gc_env.r[0] & 31); // slw r0, r3, r0']
Translated or r25 r25 r0 to: ['gc_env.r[25] = gc_env.r[25] | gc_env.r[0]; // or r25, r25, r0']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Processing opcode: addi, operands: ['r24', 'r24', '0x1']
Translated addi r24 r24 0x1 to: ['gc_env.r[24] += 1; // addi r24, r24, 0x1']
Translated bdnz .L_8000A044 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8000A044;']
Processing opcode: mulli, operands: ['r0', 'r28', '0x14']
Translated mulli r0 r28 0x14 to: ['gc_env.r[0] = gc_env.r[28] * 20; // mulli r0, r28, 20']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x6800']
Translated addi r3 r3 0x6800 to: ['gc_env.r[3] += 26624; // addi r3, r3, 0x6800']
Processing opcode: add, operands: ['r3', 'r3', 'r0']
Translated add r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] + gc_env.r[0]; // add r3, r3, r0']
Processing opcode: stw, operands: ['r25', '0x10(r3)']
Translated stw r25 0x10(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x10, gc_env.r[25]); // stw r25, 0x10(r3)']
Translated cmplwi r31 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == 0x1) ? 0 : ((uint32_t)gc_env.r[31] < 0x1 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r29', '0x14(r27)']
Translated stw r29 0x14(r27) to: ['gc_mem_write32(gc_env.ram, gc_env.r[27] + 0x14, gc_env.r[29]); // stw r29, 0x14(r27)']
Translated beq .L_8000A08C to: if (gc_env.cr[0] == 0) goto L_8000A08C;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated b .L_8000A090 to: goto L_8000A090;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: mulli, operands: ['r0', 'r28', '0x14']
Translated mulli r0 r28 0x14 to: ['gc_env.r[0] = gc_env.r[28] * 20; // mulli r0, r28, 20']
Processing opcode: stw, operands: ['r3', '0x10(r27)']
Translated stw r3 0x10(r27) to: ['gc_mem_write32(gc_env.ram, gc_env.r[27] + 0x10, gc_env.r[3]); // stw r3, 0x10(r27)']
Translated slwi r5 r31 2 to: ['gc_env.r[5] = gc_env.r[31] << 2; // slwi r5, r31, 2']
Processing opcode: subi, operands: ['r4', 'r30', '0x1']
Translated subi r4 r30 0x1 to: ['gc_env.r[4] = gc_env.r[30] - 1; // subi r4, r30, 1']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x6800']
Translated addi r3 r3 0x6800 to: ['gc_env.r[3] += 26624; // addi r3, r3, 0x6800']
Translated ori r5 r5 0x1 to: ['gc_env.r[5] |= 1; // ori r5, r5, 0x1']
Translated slwi r4 r4 4 to: ['gc_env.r[4] = gc_env.r[4] << 4; // slwi r4, r4, 4']
Translated or r4 r5 r4 to: ['gc_env.r[4] = gc_env.r[5] | gc_env.r[4]; // or r4, r5, r4']
Processing opcode: add, operands: ['r3', 'r3', 'r0']
Translated add r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] + gc_env.r[0]; // add r3, r3, r0']
Processing opcode: stw, operands: ['r4', '0xc(r3)']
Translated stw r4 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[4]); // stw r4, 0xC(r3)']
Translated mr r3 r26 to: gc_env.r[3] = gc_env.r[26]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated b .L_8000A0D4 to: goto L_8000A0D4;
Processing opcode: add, operands: ['r4', 'r29', 'r24']
Translated add r4 r29 r24 to: ['gc_env.r[4] = gc_env.r[29] + gc_env.r[24]; // add r4, r29, r24']
Translated b .L_8000A034 to: goto L_8000A034;
Translated lmw r19 0x24(r1) to: ['gc_env.r[19] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r19, 0x24(r1)', 'gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r19, 0x24(r1)', 'gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r19, 0x24(r1)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r19, 0x24(r1)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r19, 0x24(r1)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x38); // lmw r19, 0x24(r1)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lmw r19, 0x24(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x40); // lmw r19, 0x24(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lmw r19, 0x24(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x48); // lmw r19, 0x24(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4C); // lmw r19, 0x24(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x50); // lmw r19, 0x24(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x54); // lmw r19, 0x24(r1)']
Processing opcode: lwz, operands: ['r0', '0x5c(r1)']
Translated lwz r0 0x5c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x5C); // lwz r0, 0x5C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x58']
Translated addi r1 r1 0x58 to: ['gc_env.r[1] += 88; // addi r1, r1, 0x58']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Translated stmw r27 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[27]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[28]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[29]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[30]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stmw r27, 0x1C(r1)']
Processing opcode: addi, operands: ['r27', 'r3', '0x0']
Translated addi r27 r3 0x0 to: ['gc_env.r[27] = gc_env.r[3] + 0; // addi r27, r3, 0x0']
Processing opcode: addi, operands: ['r28', 'r4', '0x0']
Translated addi r28 r4 0x0 to: ['gc_env.r[28] = gc_env.r[4] + 0; // addi r28, r4, 0x0']
Processing opcode: addi, operands: ['r29', 'r5', '0x0']
Translated addi r29 r5 0x0 to: ['gc_env.r[29] = gc_env.r[5] + 0; // addi r29, r5, 0x0']
Processing opcode: addi, operands: ['r30', 'r6', '0x0']
Translated addi r30 r6 0x0 to: ['gc_env.r[30] = gc_env.r[6] + 0; // addi r30, r6, 0x0']
Translated b .L_8000A168 to: goto L_8000A168;
Translated cmpwi r29 0x4 to: gc_env.cr[0] = (gc_env.r[29] == 0x4) ? 0 : (gc_env.r[29] < 0x4 ? -1 : 1); // Compare with immediate
Translated bge .L_8000A11C to: if (gc_env.cr[0] >= 0) goto L_8000A11C;
Translated mr r31 r29 to: gc_env.r[31] = gc_env.r[29]; // Move register
Translated b .L_8000A120 to: goto L_8000A120;
Processing opcode: li, operands: ['r31', '0x4']
Translated li r31 0x4 to: ['gc_env.r[31] = 0x4; // li r31, 0x4']
Processing opcode: addi, operands: ['r5', 'r31', '0x0']
Translated addi r5 r31 0x0 to: ['gc_env.r[5] = gc_env.r[31] + 0; // addi r5, r31, 0x0']
Processing opcode: addi, operands: ['r3', 'r27', '0x0']
Translated addi r3 r27 0x0 to: ['gc_env.r[3] = gc_env.r[27] + 0; // addi r3, r27, 0x0']
Processing opcode: addi, operands: ['r4', 'r28', '0x0']
Translated addi r4 r28 0x0 to: ['gc_env.r[4] = gc_env.r[28] + 0; // addi r4, r28, 0x0']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bl EXIImm to: EXIImm();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000A148 to: if (gc_env.cr[0] != 0) goto L_8000A148;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000A174 to: goto L_8000A174;
Translated mr r3 r27 to: gc_env.r[3] = gc_env.r[27]; // Move register
Translated bl EXISync to: EXISync();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000A160 to: if (gc_env.cr[0] != 0) goto L_8000A160;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000A174 to: goto L_8000A174;
Processing opcode: add, operands: ['r28', 'r28', 'r31']
Translated add r28 r28 r31 to: ['gc_env.r[28] = gc_env.r[28] + gc_env.r[31]; // add r28, r28, r31']
Processing opcode: subf, operands: ['r29', 'r31', 'r29']
Translated subf r29 r31 r29 to: ['gc_env.r[29] = gc_env.r[29] - gc_env.r[31]; // subf r29, r31, r29']
Translated cmpwi r29 0x0 to: gc_env.cr[0] = (gc_env.r[29] == 0x0) ? 0 : (gc_env.r[29] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000A10C to: if (gc_env.cr[0] != 0) goto L_8000A10C;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated lmw r27 0x1c(r1) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r27, 0x1C(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r27, 0x1C(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r27, 0x1C(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r27, 0x1C(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r27, 0x1C(r1)']
Processing opcode: lwz, operands: ['r0', '0x34(r1)']
Translated lwz r0 0x34(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r0, 0x34(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x40(r1)']
Translated stwu r1 -0x40(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x40, gc_env.r[1]); // stwu r1, -0x40(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x40;']
Translated stmw r25 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[25]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[26]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[27]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[28]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[29]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[30]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[31]); // stmw r25, 0x24(r1)']
Processing opcode: addi, operands: ['r27', 'r3', '0x0']
Translated addi r27 r3 0x0 to: ['gc_env.r[27] = gc_env.r[3] + 0; // addi r27, r3, 0x0']
Translated lis r3 Ecb_8001C600@ha to: ['gc_env.r[3] = ((uint32_t)&Ecb_8001C600 >> 16) & 0xFFFF; // lis r3, Ecb_8001C600@ha']
Translated slwi r8 r27 6 to: ['gc_env.r[8] = gc_env.r[27] << 6; // slwi r8, r27, 6']
Processing opcode: addi, operands: ['r0', 'r3', 'Ecb_8001C600@l']
Translated addi r0 r3 Ecb_8001C600@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&Ecb_8001C600 & 0xFFFF); // addi r0, r3, Ecb_8001C600@l']
Processing opcode: addi, operands: ['r28', 'r4', '0x0']
Translated addi r28 r4 0x0 to: ['gc_env.r[28] = gc_env.r[4] + 0; // addi r28, r4, 0x0']
Processing opcode: addi, operands: ['r29', 'r5', '0x0']
Translated addi r29 r5 0x0 to: ['gc_env.r[29] = gc_env.r[5] + 0; // addi r29, r5, 0x0']
Processing opcode: addi, operands: ['r30', 'r6', '0x0']
Translated addi r30 r6 0x0 to: ['gc_env.r[30] = gc_env.r[6] + 0; // addi r30, r6, 0x0']
Processing opcode: addi, operands: ['r25', 'r7', '0x0']
Translated addi r25 r7 0x0 to: ['gc_env.r[25] = gc_env.r[7] + 0; // addi r25, r7, 0x0']
Processing opcode: add, operands: ['r26', 'r0', 'r8']
Translated add r26 r0 r8 to: ['gc_env.r[26] = gc_env.r[0] + gc_env.r[8]; // add r26, r0, r8']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', '0xc(r26)']
Translated lwz r0 0xc(r26) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[26] + 0xC); // lwz r0, 0xC(r26)']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Translated clrlwi. r0 r0 30 to: ['gc_env.r[0] = gc_env.r[0] & 0x3; // clrlwi r0, r0, 30']
Translated bne .L_8000A1DC to: if (gc_env.cr[0] != 0) goto L_8000A1DC;
Processing opcode: lwz, operands: ['r0', '0xc(r26)']
Translated lwz r0 0xc(r26) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[26] + 0xC); // lwz r0, 0xC(r26)']
Translated rlwinm. r0 r0 0 29 29 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x4; // rlwinm r0, r0, 0, 29, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_8000A1EC to: if (gc_env.cr[0] != 0) goto L_8000A1EC;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000A260 to: goto L_8000A260;
Processing opcode: stw, operands: ['r25', '0x4(r26)']
Translated stw r25 0x4(r26) to: ['gc_mem_write32(gc_env.ram, gc_env.r[26] + 0x4, gc_env.r[25]); // stw r25, 0x4(r26)']
Processing opcode: lwz, operands: ['r0', '0x4(r26)']
Translated lwz r0 0x4(r26) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[26] + 0x4); // lwz r0, 0x4(r26)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000A220 to: if (gc_env.cr[0] == 0) goto L_8000A220;
Processing opcode: addi, operands: ['r3', 'r27', '0x0']
Translated addi r3 r27 0x0 to: ['gc_env.r[3] = gc_env.r[27] + 0; // addi r3, r27, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl fn_8000A47C to: fn_8000A47C();
Processing opcode: mulli, operands: ['r0', 'r27', '0x3']
Translated mulli r0 r27 0x3 to: ['gc_env.r[0] = gc_env.r[27] * 3; // mulli r0, r27, 3']
Translated lis r3 0x20 to: ['gc_env.r[3] = 32 << 16; // lis r3, 0x20']
Translated srw r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] >> (gc_env.r[0] & 31); // srw r3, r3, r0']
Translated bl __OSUnmaskInterrupts to: __OSUnmaskInterrupts();
Processing opcode: lwz, operands: ['r0', '0xc(r26)']
Translated lwz r0 0xc(r26) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[26] + 0xC); // lwz r0, 0xC(r26)']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: mulli, operands: ['r5', 'r27', '0x14']
Translated mulli r5 r27 0x14 to: ['gc_env.r[5] = gc_env.r[27] * 20; // mulli r5, r27, 20']
Translated ori r4 r0 0x1 to: ['gc_env.r[4] = gc_env.r[0] | 1; // ori r4, r0, 0x1']
Processing opcode: addi, operands: ['r0', 'r3', '0x6800']
Translated addi r0 r3 0x6800 to: ['gc_env.r[0] = gc_env.r[3] + 26624; // addi r0, r3, 0x6800']
Processing opcode: stw, operands: ['r4', '0xc(r26)']
Translated stw r4 0xc(r26) to: ['gc_mem_write32(gc_env.ram, gc_env.r[26] + 0xC, gc_env.r[4]); // stw r4, 0xC(r26)']
Translated rlwinm r3 r28 0 6 26 to: ['gc_env.r[3] = (gc_env.r[28] << 0) & 0x3FFFFE0; // rlwinm r3, r28, 0, 6, 26']
Processing opcode: add, operands: ['r4', 'r0', 'r5']
Translated add r4 r0 r5 to: ['gc_env.r[4] = gc_env.r[0] + gc_env.r[5]; // add r4, r0, r5']
Processing opcode: stw, operands: ['r3', '0x4(r4)']
Translated stw r3 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[3]); // stw r3, 0x4(r4)']
Translated slwi r0 r30 2 to: ['gc_env.r[0] = gc_env.r[30] << 2; // slwi r0, r30, 2']
Translated ori r0 r0 0x3 to: ['gc_env.r[0] |= 3; // ori r0, r0, 0x3']
Processing opcode: stw, operands: ['r29', '0x8(r4)']
Translated stw r29 0x8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x8, gc_env.r[29]); // stw r29, 0x8(r4)']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated lmw r25 0x24(r1) to: ['gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r25, 0x24(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r25, 0x24(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r25, 0x24(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r25, 0x24(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r25, 0x24(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x38); // lmw r25, 0x24(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lmw r25, 0x24(r1)']
Processing opcode: lwz, operands: ['r0', '0x44(r1)']
Translated lwz r0 0x44(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lwz r0, 0x44(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x40']
Translated addi r1 r1 0x40 to: ['gc_env.r[1] += 64; // addi r1, r1, 0x40']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r5 Ecb_8001C600@ha to: ['gc_env.r[5] = ((uint32_t)&Ecb_8001C600 >> 16) & 0xFFFF; // lis r5, Ecb_8001C600@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: addi, operands: ['r0', 'r5', 'Ecb_8001C600@l']
Translated addi r0 r5 Ecb_8001C600@l to: ['gc_env.r[0] = gc_env.r[5] + ((uint32_t)&Ecb_8001C600 & 0xFFFF); // addi r0, r5, Ecb_8001C600@l']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Translated stmw r27 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[27]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[28]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[29]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[30]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stmw r27, 0x1C(r1)']
Processing opcode: mulli, operands: ['r30', 'r3', '0x14']
Translated mulli r30 r3 0x14 to: ['gc_env.r[30] = gc_env.r[3] * 20; // mulli r30, r3, 20']
Processing opcode: addi, operands: ['r29', 'r4', '0x6800']
Translated addi r29 r4 0x6800 to: ['gc_env.r[29] = gc_env.r[4] + 26624; // addi r29, r4, 0x6800']
Translated slwi r3 r3 6 to: ['gc_env.r[3] = gc_env.r[3] << 6; // slwi r3, r3, 6']
Processing opcode: add, operands: ['r31', 'r0', 'r3']
Translated add r31 r0 r3 to: ['gc_env.r[31] = gc_env.r[0] + gc_env.r[3]; // add r31, r0, r3']
Processing opcode: add, operands: ['r29', 'r29', 'r30']
Translated add r29 r29 r30 to: ['gc_env.r[29] = gc_env.r[29] + gc_env.r[30]; // add r29, r29, r30']
Processing opcode: li, operands: ['r28', '0x0']
Translated li r28 0x0 to: ['gc_env.r[28] = 0x0; // li r28, 0x0']
Translated b .L_8000A458 to: goto L_8000A458;
Processing opcode: lwz, operands: ['r0', '0xc(r29)']
Translated lwz r0 0xc(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r0, 0xC(r29)']
Translated clrlwi. r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Translated bne .L_8000A458 to: if (gc_env.cr[0] != 0) goto L_8000A458;
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Processing opcode: addi, operands: ['r27', 'r3', '0x0']
Translated addi r27 r3 0x0 to: ['gc_env.r[27] = gc_env.r[3] + 0; // addi r27, r3, 0x0']
Translated rlwinm. r0 r0 0 29 29 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x4; // rlwinm r0, r0, 0, 29, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000A44C to: if (gc_env.cr[0] == 0) goto L_8000A44C;
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Translated clrlwi. r0 r0 30 to: ['gc_env.r[0] = gc_env.r[0] & 0x3; // clrlwi r0, r0, 30']
Translated beq .L_8000A408 to: if (gc_env.cr[0] == 0) goto L_8000A408;
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Translated rlwinm. r0 r0 0 30 30 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x2; // rlwinm r0, r0, 0, 30, 30', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000A3FC to: if (gc_env.cr[0] == 0) goto L_8000A3FC;
Processing opcode: lwz, operands: ['r4', '0x10(r31)']
Translated lwz r4 0x10(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x10); // lwz r4, 0x10(r31)']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000A3FC to: if (gc_env.cr[0] == 0) goto L_8000A3FC;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r7', '0x14(r31)']
Translated lwz r7 0x14(r31) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x14); // lwz r7, 0x14(r31)']
Processing opcode: addi, operands: ['r0', 'r3', '0x6800']
Translated addi r0 r3 0x6800 to: ['gc_env.r[0] = gc_env.r[3] + 26624; // addi r0, r3, 0x6800']
Processing opcode: add, operands: ['r3', 'r0', 'r30']
Translated add r3 r0 r30 to: ['gc_env.r[3] = gc_env.r[0] + gc_env.r[30]; // add r3, r0, r30']
Processing opcode: lwz, operands: ['r6', '0x10(r3)']
Translated lwz r6 0x10(r3) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x10); // lwz r6, 0x10(r3)']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated ble .L_8000A3FC to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000A3FC; // ble .L_8000A3FC']
Translated cmpwi r4 0x8 to: gc_env.cr[0] = (gc_env.r[4] == 0x8) ? 0 : (gc_env.r[4] < 0x8 ? -1 : 1); // Compare with immediate
Processing opcode: subi, operands: ['r3', 'r4', '0x8']
Translated subi r3 r4 0x8 to: ['gc_env.r[3] = gc_env.r[4] - 8; // subi r3, r4, 8']
Translated ble .L_8000A3D0 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000A3D0; // ble .L_8000A3D0']
Processing opcode: addi, operands: ['r0', 'r3', '0x7']
Translated addi r0 r3 0x7 to: ['gc_env.r[0] = gc_env.r[3] + 7; // addi r0, r3, 0x7']
Translated srwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] >> 3; // srwi r0, r0, 3']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated ble .L_8000A3D0 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000A3D0; // ble .L_8000A3D0']
Translated subfic r0 r5 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[5]; // subfic r0, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r3 r0 3 to: ['gc_env.r[3] = gc_env.r[0] << 3; // slwi r3, r0, 3']
Processing opcode: addi, operands: ['r0', 'r5', '0x1']
Translated addi r0 r5 0x1 to: ['gc_env.r[0] = gc_env.r[5] + 1; // addi r0, r5, 0x1']
Translated srw r8 r6 r3 to: ['gc_env.r[8] = gc_env.r[6] >> (gc_env.r[3] & 31); // srw r8, r6, r3']
Translated subfic r0 r0 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[0]; // subfic r0, r0, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[0] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r8', '0x0(r7)']
Translated stb r8 0x0(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7], gc_env.r[8]); // stb r8, (r7)']
Translated slwi r3 r0 3 to: ['gc_env.r[3] = gc_env.r[0] << 3; // slwi r3, r0, 3']
Processing opcode: addi, operands: ['r0', 'r5', '0x2']
Translated addi r0 r5 0x2 to: ['gc_env.r[0] = gc_env.r[5] + 2; // addi r0, r5, 0x2']
Translated srw r3 r6 r3 to: ['gc_env.r[3] = gc_env.r[6] >> (gc_env.r[3] & 31); // srw r3, r6, r3']
Translated subfic r0 r0 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[0]; // subfic r0, r0, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[0] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r3', '0x1(r7)']
Translated stb r3 0x1(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x1, gc_env.r[3]); // stb r3, 0x1(r7)']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Translated srw r0 r6 r0 to: ['gc_env.r[0] = gc_env.r[6] >> (gc_env.r[0] & 31); // srw r0, r6, r0']
Translated neg r8 r5 to: ['gc_env.r[8] = -(int32_t)gc_env.r[5]; // neg r8, r5']
Processing opcode: stb, operands: ['r0', '0x2(r7)']
Translated stb r0 0x2(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x2, gc_env.r[0]); // stb r0, 0x2(r7)']
Translated slwi r9 r8 3 to: ['gc_env.r[9] = gc_env.r[8] << 3; // slwi r9, r8, 3']
Processing opcode: addi, operands: ['r8', 'r5', '0x4']
Translated addi r8 r5 0x4 to: ['gc_env.r[8] = gc_env.r[5] + 4; // addi r8, r5, 0x4']
Translated srw r12 r6 r9 to: ['gc_env.r[12] = gc_env.r[6] >> (gc_env.r[9] & 31); // srw r12, r6, r9']
Translated subfic r8 r8 0x3 to: ['gc_env.r[8] = 3 - gc_env.r[8]; // subfic r8, r8, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[8] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r12', '0x3(r7)']
Translated stb r12 0x3(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x3, gc_env.r[12]); // stb r12, 0x3(r7)']
Translated slwi r9 r8 3 to: ['gc_env.r[9] = gc_env.r[8] << 3; // slwi r9, r8, 3']
Processing opcode: addi, operands: ['r8', 'r5', '0x5']
Translated addi r8 r5 0x5 to: ['gc_env.r[8] = gc_env.r[5] + 5; // addi r8, r5, 0x5']
Translated srw r11 r6 r9 to: ['gc_env.r[11] = gc_env.r[6] >> (gc_env.r[9] & 31); // srw r11, r6, r9']
Translated subfic r8 r8 0x3 to: ['gc_env.r[8] = 3 - gc_env.r[8]; // subfic r8, r8, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[8] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r11', '0x4(r7)']
Translated stb r11 0x4(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x4, gc_env.r[11]); // stb r11, 0x4(r7)']
Translated slwi r9 r8 3 to: ['gc_env.r[9] = gc_env.r[8] << 3; // slwi r9, r8, 3']
Translated srw r10 r6 r9 to: ['gc_env.r[10] = gc_env.r[6] >> (gc_env.r[9] & 31); // srw r10, r6, r9']
Processing opcode: addi, operands: ['r8', 'r5', '0x6']
Translated addi r8 r5 0x6 to: ['gc_env.r[8] = gc_env.r[5] + 6; // addi r8, r5, 0x6']
Processing opcode: stb, operands: ['r10', '0x5(r7)']
Translated stb r10 0x5(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x5, gc_env.r[10]); // stb r10, 0x5(r7)']
Translated subfic r9 r8 0x3 to: ['gc_env.r[9] = 3 - gc_env.r[8]; // subfic r9, r8, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[8] ? 0x20000000 : 0);']
Processing opcode: addi, operands: ['r8', 'r5', '0x7']
Translated addi r8 r5 0x7 to: ['gc_env.r[8] = gc_env.r[5] + 7; // addi r8, r5, 0x7']
Translated slwi r9 r9 3 to: ['gc_env.r[9] = gc_env.r[9] << 3; // slwi r9, r9, 3']
Translated srw r9 r6 r9 to: ['gc_env.r[9] = gc_env.r[6] >> (gc_env.r[9] & 31); // srw r9, r6, r9']
Translated subfic r8 r8 0x3 to: ['gc_env.r[8] = 3 - gc_env.r[8]; // subfic r8, r8, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[8] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r9', '0x6(r7)']
Translated stb r9 0x6(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x6, gc_env.r[9]); // stb r9, 0x6(r7)']
Translated slwi r8 r8 3 to: ['gc_env.r[8] = gc_env.r[8] << 3; // slwi r8, r8, 3']
Translated srw r8 r6 r8 to: ['gc_env.r[8] = gc_env.r[6] >> (gc_env.r[8] & 31); // srw r8, r6, r8']
Processing opcode: stb, operands: ['r8', '0x7(r7)']
Translated stb r8 0x7(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x7, gc_env.r[8]); // stb r8, 0x7(r7)']
Processing opcode: addi, operands: ['r7', 'r7', '0x8']
Translated addi r7 r7 0x8 to: ['gc_env.r[7] += 8; // addi r7, r7, 0x8']
Processing opcode: addi, operands: ['r5', 'r5', '0x8']
Translated addi r5 r5 0x8 to: ['gc_env.r[5] += 8; // addi r5, r5, 0x8']
Translated bdnz .L_8000A32C to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8000A32C;']
Processing opcode: subf, operands: ['r0', 'r5', 'r4']
Translated subf r0 r5 r4 to: ['gc_env.r[0] = gc_env.r[4] - gc_env.r[5]; // subf r0, r5, r4']
Translated cmpw r5 r4 to: ['gc_env.cr[0] = (int32_t)gc_env.r[5] < (int32_t)gc_env.r[4] ? 0x8 : ((int32_t)gc_env.r[5] > (int32_t)gc_env.r[4] ? 0x4 : 0x2); // cmpw r5, r4']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bge .L_8000A3FC to: if (gc_env.cr[0] >= 0) goto L_8000A3FC;
Translated subfic r0 r5 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[5]; // subfic r0, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Translated srw r0 r6 r0 to: ['gc_env.r[0] = gc_env.r[6] >> (gc_env.r[0] & 31); // srw r0, r6, r0']
Processing opcode: stb, operands: ['r0', '0x0(r7)']
Translated stb r0 0x0(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7], gc_env.r[0]); // stb r0, (r7)']
Processing opcode: addi, operands: ['r7', 'r7', '0x1']
Translated addi r7 r7 0x1 to: ['gc_env.r[7] += 1; // addi r7, r7, 0x1']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated bdnz .L_8000A3E0 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8000A3E0;']
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Translated clrrwi r0 r0 2 to: gc_env.r[0] = gc_env.r[0] & ~((1ULL << 2) - 1); // Clear rightmost 2 bits
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Translated bl fn_80005F64 to: fn_80005F64();
Translated cmplwi r3 0xff to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0xff) ? 0 : ((uint32_t)gc_env.r[3] < 0xff ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000A448 to: if (gc_env.cr[0] != 0) goto L_8000A448;
Processing opcode: lwz, operands: ['r0', '0x10(r31)']
Translated lwz r0 0x10(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x10); // lwz r0, 0x10(r31)']
Translated cmpwi r0 0x4 to: gc_env.cr[0] = (gc_env.r[0] == 0x4) ? 0 : (gc_env.r[0] < 0x4 ? -1 : 1); // Compare with immediate
Translated bne .L_8000A448 to: if (gc_env.cr[0] != 0) goto L_8000A448;
Processing opcode: lwz, operands: ['r0', '0x0(r29)']
Translated lwz r0 0x0(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29]); // lwz r0, (r29)']
Translated rlwinm. r0 r0 0 25 27 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x70; // rlwinm r0, r0, 0, 25, 27', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_8000A448 to: if (gc_env.cr[0] != 0) goto L_8000A448;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r0', 'r3', '0x6800']
Translated addi r0 r3 0x6800 to: ['gc_env.r[0] = gc_env.r[3] + 26624; // addi r0, r3, 0x6800']
Processing opcode: add, operands: ['r3', 'r0', 'r30']
Translated add r3 r0 r30 to: ['gc_env.r[3] = gc_env.r[0] + gc_env.r[30]; // add r3, r0, r30']
Processing opcode: lwz, operands: ['r3', '0x10(r3)']
Translated lwz r3 0x10(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x10); // lwz r3, 0x10(r3)']
Processing opcode: subis, operands: ['r0', 'r3', '0x101']
Translated subis r0 r3 0x101 to: ['gc_env.r[0] = gc_env.r[3] - (257 << 16); // subis r0, r3, 257']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000A44C to: if (gc_env.cr[0] == 0) goto L_8000A44C;
Processing opcode: li, operands: ['r28', '0x1']
Translated li r28 0x1 to: ['gc_env.r[28] = 0x1; // li r28, 0x1']
Translated mr r3 r27 to: gc_env.r[3] = gc_env.r[27]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated b .L_8000A464 to: goto L_8000A464;
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Translated rlwinm. r0 r0 0 29 29 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x4; // rlwinm r0, r0, 0, 29, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_8000A2AC to: if (gc_env.cr[0] != 0) goto L_8000A2AC;
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Translated lmw r27 0x1c(r1) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r27, 0x1C(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r27, 0x1C(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r27, 0x1C(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r27, 0x1C(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r27, 0x1C(r1)']
Processing opcode: lwz, operands: ['r0', '0x34(r1)']
Translated lwz r0 0x34(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r0, 0x34(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: mulli, operands: ['r0', 'r3', '0x14']
Translated mulli r0 r3 0x14 to: ['gc_env.r[0] = gc_env.r[3] * 20; // mulli r0, r3, 20']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r7', 'r3', '0x6800']
Translated addi r7 r3 0x6800 to: ['gc_env.r[7] = gc_env.r[3] + 26624; // addi r7, r3, 0x6800']
Processing opcode: add, operands: ['r7', 'r7', 'r0']
Translated add r7 r7 r0 to: ['gc_env.r[7] = gc_env.r[7] + gc_env.r[0]; // add r7, r7, r0']
Processing opcode: lwz, operands: ['r0', '0x0(r7)']
Translated lwz r0 0x0(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7]); // lwz r0, (r7)']
Translated mr r3 r0 to: gc_env.r[3] = gc_env.r[0]; // Move register
Translated andi. r0 r0 0x7f5 to: gc_env.r[0] = gc_env.r[0] & 0x7f5;
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000A4A4 to: if (gc_env.cr[0] == 0) goto L_8000A4A4;
Translated ori r0 r0 0x2 to: ['gc_env.r[0] |= 2; // ori r0, r0, 0x2']
Translated cmpwi r5 0x0 to: gc_env.cr[0] = (gc_env.r[5] == 0x0) ? 0 : (gc_env.r[5] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000A4B0 to: if (gc_env.cr[0] == 0) goto L_8000A4B0;
Translated ori r0 r0 0x8 to: ['gc_env.r[0] |= 8; // ori r0, r0, 0x8']
Translated cmpwi r6 0x0 to: gc_env.cr[0] = (gc_env.r[6] == 0x0) ? 0 : (gc_env.r[6] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000A4BC to: if (gc_env.cr[0] == 0) goto L_8000A4BC;
Translated ori r0 r0 0x800 to: ['gc_env.r[0] |= 2048; // ori r0, r0, 0x800']
Processing opcode: stw, operands: ['r0', '0x0(r7)']
Translated stw r0 0x0(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7], gc_env.r[0]); // stw r0, (r7)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x28(r1)']
Translated stwu r1 -0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x28, gc_env.r[1]); // stwu r1, -0x28(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x28;']
Translated stmw r27 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[27]); // stmw r27, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[28]); // stmw r27, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[29]); // stmw r27, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[30]); // stmw r27, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[31]); // stmw r27, 0x14(r1)']
Processing opcode: addi, operands: ['r28', 'r3', '0x0']
Translated addi r28 r3 0x0 to: ['gc_env.r[28] = gc_env.r[3] + 0; // addi r28, r3, 0x0']
Translated lis r3 Ecb_8001C600@ha to: ['gc_env.r[3] = ((uint32_t)&Ecb_8001C600 >> 16) & 0xFFFF; // lis r3, Ecb_8001C600@ha']
Translated cmpwi r28 0x2 to: gc_env.cr[0] = (gc_env.r[28] == 0x2) ? 0 : (gc_env.r[28] < 0x2 ? -1 : 1); // Compare with immediate
Translated slwi r4 r28 6 to: ['gc_env.r[4] = gc_env.r[28] << 6; // slwi r4, r28, 6']
Processing opcode: addi, operands: ['r0', 'r3', 'Ecb_8001C600@l']
Translated addi r0 r3 Ecb_8001C600@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&Ecb_8001C600 & 0xFFFF); // addi r0, r3, Ecb_8001C600@l']
Processing opcode: add, operands: ['r31', 'r0', 'r4']
Translated add r31 r0 r4 to: ['gc_env.r[31] = gc_env.r[0] + gc_env.r[4]; // add r31, r0, r4']
Translated bne .L_8000A4F8 to: if (gc_env.cr[0] != 0) goto L_8000A4F8;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated b .L_8000A624 to: goto L_8000A624;
Processing opcode: li, operands: ['r29', '0x1']
Translated li r29 0x1 to: ['gc_env.r[29] = 0x1; // li r29, 0x1']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: mulli, operands: ['r5', 'r28', '0x14']
Translated mulli r5 r28 0x14 to: ['gc_env.r[5] = gc_env.r[28] * 20; // mulli r5, r28, 20']
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: addi, operands: ['r6', 'r4', '0x6800']
Translated addi r6 r4 0x6800 to: ['gc_env.r[6] = gc_env.r[4] + 26624; // addi r6, r4, 0x6800']
Processing opcode: add, operands: ['r6', 'r6', 'r5']
Translated add r6 r6 r5 to: ['gc_env.r[6] = gc_env.r[6] + gc_env.r[5]; // add r6, r6, r5']
Translated rlwinm. r0 r0 0 28 28 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x8; // rlwinm r0, r0, 0, 28, 28', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Processing opcode: lwz, operands: ['r7', '0x0(r6)']
Translated lwz r7 0x0(r6) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r7, (r6)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated bne .L_8000A5EC to: if (gc_env.cr[0] != 0) goto L_8000A5EC;
Translated rlwinm. r0 r7 0 20 20 to: ['gc_env.r[0] = (gc_env.r[7] << 0) & 0x800; // rlwinm r0, r7, 0, 20, 20', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000A554 to: if (gc_env.cr[0] == 0) goto L_8000A554;
Processing opcode: lwz, operands: ['r5', '0x0(r6)']
Translated lwz r5 0x0(r6) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r5, (r6)']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated andi. r5 r5 0x7f5 to: gc_env.r[5] = gc_env.r[5] & 0x7f5;
Translated slwi r0 r28 2 to: ['gc_env.r[0] = gc_env.r[28] << 2; // slwi r0, r28, 2']
Processing opcode: addi, operands: ['r3', 'r3', '0x30c0']
Translated addi r3 r3 0x30c0 to: ['gc_env.r[3] += 12480; // addi r3, r3, 0x30c0']
Translated ori r5 r5 0x800 to: ['gc_env.r[5] |= 2048; // ori r5, r5, 0x800']
Processing opcode: stw, operands: ['r5', '0x0(r6)']
Translated stw r5 0x0(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6], gc_env.r[5]); // stw r5, (r6)']
Processing opcode: stw, operands: ['r4', '0x20(r31)']
Translated stw r4 0x20(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x20, gc_env.r[4]); // stw r4, 0x20(r31)']
Translated stwx r4 r3 r0 to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + gc_env.r[0], gc_env.r[4]); // stwx r4, r3, r0']
Translated rlwinm. r0 r7 0 19 19 to: ['gc_env.r[0] = (gc_env.r[7] << 0) & 0x1000; // rlwinm r0, r7, 0, 19, 19', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000A5CC to: if (gc_env.cr[0] == 0) goto L_8000A5CC;
Translated lis r31 0x8000 to: ['gc_env.r[31] = -32768 << 16; // lis r31, 0x8000']
Processing opcode: lwz, operands: ['r0', '0xf8(r31)']
Translated lwz r0 0xf8(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xF8); // lwz r0, 0xF8(r31)']
Translated lis r3 0x1062 to: ['gc_env.r[3] = 4194 << 16; // lis r3, 0x1062']
Processing opcode: addi, operands: ['r3', 'r3', '0x4dd3']
Translated addi r3 r3 0x4dd3 to: ['gc_env.r[3] += 19923; // addi r3, r3, 0x4dd3']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Translated mulhwu r0 r3 r0 to: ['gc_env.r[0] = (uint32_t)(((uint64_t)gc_env.r[3] * (uint64_t)gc_env.r[0]) >> 32); // mulhwu r0, r3, r0']
Translated srwi r27 r0 6 to: ['gc_env.r[27] = gc_env.r[0] >> 6; // srwi r27, r0, 6']
Translated bl OSGetTime to: OSGetTime();
Processing opcode: addi, operands: ['r6', 'r27', '0x0']
Translated addi r6 r27 0x0 to: ['gc_env.r[6] = gc_env.r[27] + 0; // addi r6, r27, 0x0']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_800116AC to: fn_800116AC();
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: li, operands: ['r6', '0x64']
Translated li r6 0x64 to: ['gc_env.r[6] = 0x64; // li r6, 0x64']
Translated bl fn_800116AC to: fn_800116AC();
Translated slwi r0 r28 2 to: ['gc_env.r[0] = gc_env.r[28] << 2; // slwi r0, r28, 2']
Processing opcode: addi, operands: ['r3', 'r31', '0x30c0']
Translated addi r3 r31 0x30c0 to: ['gc_env.r[3] = gc_env.r[31] + 12480; // addi r3, r31, 0x30c0']
Processing opcode: add, operands: ['r3', 'r3', 'r0']
Translated add r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] + gc_env.r[0]; // add r3, r3, r0']
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000A5B4 to: if (gc_env.cr[0] != 0) goto L_8000A5B4;
Processing opcode: stw, operands: ['r4', '0x0(r3)']
Translated stw r4 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[4]); // stw r4, (r3)']
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Processing opcode: subf, operands: ['r0', 'r0', 'r4']
Translated subf r0 r0 r4 to: ['gc_env.r[0] = gc_env.r[4] - gc_env.r[0]; // subf r0, r0, r4']
Translated cmpwi r0 0x3 to: gc_env.cr[0] = (gc_env.r[0] == 0x3) ? 0 : (gc_env.r[0] < 0x3 ? -1 : 1); // Compare with immediate
Translated bge .L_8000A618 to: if (gc_env.cr[0] >= 0) goto L_8000A618;
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Translated b .L_8000A618 to: goto L_8000A618;
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: stw, operands: ['r4', '0x20(r31)']
Translated stw r4 0x20(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x20, gc_env.r[4]); // stw r4, 0x20(r31)']
Translated slwi r0 r28 2 to: ['gc_env.r[0] = gc_env.r[28] << 2; // slwi r0, r28, 2']
Processing opcode: addi, operands: ['r3', 'r3', '0x30c0']
Translated addi r3 r3 0x30c0 to: ['gc_env.r[3] += 12480; // addi r3, r3, 0x30c0']
Translated stwx r4 r3 r0 to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + gc_env.r[0], gc_env.r[4]); // stwx r4, r3, r0']
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Translated b .L_8000A618 to: goto L_8000A618;
Translated rlwinm. r0 r7 0 19 19 to: ['gc_env.r[0] = (gc_env.r[7] << 0) & 0x1000; // rlwinm r0, r7, 0, 19, 19', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000A5FC to: if (gc_env.cr[0] == 0) goto L_8000A5FC;
Translated rlwinm. r0 r7 0 20 20 to: ['gc_env.r[0] = (gc_env.r[7] << 0) & 0x800; // rlwinm r0, r7, 0, 20, 20', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000A618 to: if (gc_env.cr[0] == 0) goto L_8000A618;
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: stw, operands: ['r4', '0x20(r31)']
Translated stw r4 0x20(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x20, gc_env.r[4]); // stw r4, 0x20(r31)']
Translated slwi r0 r28 2 to: ['gc_env.r[0] = gc_env.r[28] << 2; // slwi r0, r28, 2']
Processing opcode: addi, operands: ['r3', 'r3', '0x30c0']
Translated addi r3 r3 0x30c0 to: ['gc_env.r[3] += 12480; // addi r3, r3, 0x30c0']
Translated stwx r4 r3 r0 to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + gc_env.r[0], gc_env.r[4]); // stwx r4, r3, r0']
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated lmw r27 0x14(r1) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lmw r27, 0x14(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lmw r27, 0x14(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r27, 0x14(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r27, 0x14(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r27, 0x14(r1)']
Processing opcode: lwz, operands: ['r0', '0x2c(r1)']
Translated lwz r0 0x2c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r0, 0x2C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x28']
Translated addi r1 r1 0x28 to: ['gc_env.r[1] += 40; // addi r1, r1, 0x28']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Translated stmw r27 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[27]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[28]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[29]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[30]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stmw r27, 0x1C(r1)']
Processing opcode: addi, operands: ['r27', 'r3', '0x0']
Translated addi r27 r3 0x0 to: ['gc_env.r[27] = gc_env.r[3] + 0; // addi r27, r3, 0x0']
Translated lis r3 Ecb_8001C600@ha to: ['gc_env.r[3] = ((uint32_t)&Ecb_8001C600 >> 16) & 0xFFFF; // lis r3, Ecb_8001C600@ha']
Translated slwi r6 r27 6 to: ['gc_env.r[6] = gc_env.r[27] << 6; // slwi r6, r27, 6']
Processing opcode: addi, operands: ['r0', 'r3', 'Ecb_8001C600@l']
Translated addi r0 r3 Ecb_8001C600@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&Ecb_8001C600 & 0xFFFF); // addi r0, r3, Ecb_8001C600@l']
Processing opcode: addi, operands: ['r28', 'r4', '0x0']
Translated addi r28 r4 0x0 to: ['gc_env.r[28] = gc_env.r[4] + 0; // addi r28, r4, 0x0']
Processing opcode: addi, operands: ['r29', 'r5', '0x0']
Translated addi r29 r5 0x0 to: ['gc_env.r[29] = gc_env.r[5] + 0; // addi r29, r5, 0x0']
Processing opcode: add, operands: ['r31', 'r0', 'r6']
Translated add r31 r0 r6 to: ['gc_env.r[31] = gc_env.r[0] + gc_env.r[6]; // add r31, r0, r6']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Translated rlwinm. r0 r0 0 29 29 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x4; // rlwinm r0, r0, 0, 29, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_8000A6BC to: if (gc_env.cr[0] != 0) goto L_8000A6BC;
Translated cmpwi r27 0x2 to: gc_env.cr[0] = (gc_env.r[27] == 0x2) ? 0 : (gc_env.r[27] < 0x2 ? -1 : 1); // Compare with immediate
Translated beq .L_8000A6CC to: if (gc_env.cr[0] == 0) goto L_8000A6CC;
Translated cmplwi r28 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[28] == 0x0) ? 0 : ((uint32_t)gc_env.r[28] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000A6A4 to: if (gc_env.cr[0] != 0) goto L_8000A6A4;
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Translated rlwinm. r0 r0 0 28 28 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x8; // rlwinm r0, r0, 0, 28, 28', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_8000A6A4 to: if (gc_env.cr[0] != 0) goto L_8000A6A4;
Translated mr r3 r27 to: gc_env.r[3] = gc_env.r[27]; // Move register
Translated bl __EXIProbe to: __EXIProbe();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000A6BC to: if (gc_env.cr[0] == 0) goto L_8000A6BC;
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Translated rlwinm. r0 r0 0 27 27 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x10; // rlwinm r0, r0, 0, 27, 27', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000A6BC to: if (gc_env.cr[0] == 0) goto L_8000A6BC;
Processing opcode: lwz, operands: ['r0', '0x18(r31)']
Translated lwz r0 0x18(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x18); // lwz r0, 0x18(r31)']
Translated cmplw r0 r28 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[28]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[28] ? -1 : 1); // Logical compare word
Translated beq .L_8000A6CC to: if (gc_env.cr[0] == 0) goto L_8000A6CC;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000A750 to: goto L_8000A750;
Processing opcode: lwz, operands: ['r4', '0xc(r31)']
Translated lwz r4 0xc(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r4, 0xC(r31)']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: mulli, operands: ['r0', 'r27', '0x14']
Translated mulli r0 r27 0x14 to: ['gc_env.r[0] = gc_env.r[27] * 20; // mulli r0, r27, 20']
Translated ori r4 r4 0x4 to: ['gc_env.r[4] |= 4; // ori r4, r4, 0x4']
Processing opcode: addi, operands: ['r5', 'r3', '0x6800']
Translated addi r5 r3 0x6800 to: ['gc_env.r[5] = gc_env.r[3] + 26624; // addi r5, r3, 0x6800']
Processing opcode: stw, operands: ['r4', '0xc(r31)']
Translated stw r4 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[4]); // stw r4, 0xC(r31)']
Processing opcode: add, operands: ['r5', 'r5', 'r0']
Translated add r5 r5 r0 to: ['gc_env.r[5] = gc_env.r[5] + gc_env.r[0]; // add r5, r5, r0']
Processing opcode: lwz, operands: ['r4', '0x0(r5)']
Translated lwz r4 0x0(r5) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r4, (r5)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated slw r0 r0 r28 to: ['gc_env.r[0] = gc_env.r[0] << (gc_env.r[28] & 31); // slw r0, r0, r28']
Translated slwi r3 r0 7 to: ['gc_env.r[3] = gc_env.r[0] << 7; // slwi r3, r0, 7']
Translated slwi r0 r29 4 to: ['gc_env.r[0] = gc_env.r[29] << 4; // slwi r0, r29, 4']
Translated andi. r4 r4 0x405 to: gc_env.r[4] = gc_env.r[4] & 0x405;
Translated or r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Translated or r4 r4 r0 to: ['gc_env.r[4] = gc_env.r[4] | gc_env.r[0]; // or r4, r4, r0']
Processing opcode: stw, operands: ['r4', '0x0(r5)']
Translated stw r4 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[4]); // stw r4, (r5)']
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Translated rlwinm. r0 r0 0 28 28 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x8; // rlwinm r0, r0, 0, 28, 28', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000A744 to: if (gc_env.cr[0] == 0) goto L_8000A744;
Translated cmpwi r27 0x1 to: gc_env.cr[0] = (gc_env.r[27] == 0x1) ? 0 : (gc_env.r[27] < 0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_8000A73C to: if (gc_env.cr[0] == 0) goto L_8000A73C;
Translated bge .L_8000A744 to: if (gc_env.cr[0] >= 0) goto L_8000A744;
Translated cmpwi r27 0x0 to: gc_env.cr[0] = (gc_env.r[27] == 0x0) ? 0 : (gc_env.r[27] < 0x0 ? -1 : 1); // Compare with immediate
Translated bge .L_8000A730 to: if (gc_env.cr[0] >= 0) goto L_8000A730;
Translated b .L_8000A744 to: goto L_8000A744;
Translated lis r3 0x10 to: ['gc_env.r[3] = 16 << 16; // lis r3, 0x10']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Translated b .L_8000A744 to: goto L_8000A744;
Translated lis r3 0x2 to: ['gc_env.r[3] = 2 << 16; // lis r3, 0x2']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated lmw r27 0x1c(r1) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r27, 0x1C(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r27, 0x1C(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r27, 0x1C(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r27, 0x1C(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r27, 0x1C(r1)']
Processing opcode: lwz, operands: ['r0', '0x34(r1)']
Translated lwz r0 0x34(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r0, 0x34(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Translated lis r3 Ecb_8001C600@ha to: ['gc_env.r[3] = ((uint32_t)&Ecb_8001C600 >> 16) & 0xFFFF; // lis r3, Ecb_8001C600@ha']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Translated slwi r4 r31 6 to: ['gc_env.r[4] = gc_env.r[31] << 6; // slwi r4, r31, 6']
Processing opcode: addi, operands: ['r0', 'r3', 'Ecb_8001C600@l']
Translated addi r0 r3 Ecb_8001C600@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&Ecb_8001C600 & 0xFFFF); // addi r0, r3, Ecb_8001C600@l']
Processing opcode: stw, operands: ['r29', '0x14(r1)']
Translated stw r29 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stw r29, 0x14(r1)']
Processing opcode: add, operands: ['r30', 'r0', 'r4']
Translated add r30 r0 r4 to: ['gc_env.r[30] = gc_env.r[0] + gc_env.r[4]; // add r30, r0, r4']
Processing opcode: stw, operands: ['r28', '0x10(r1)']
Translated stw r28 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[28]); // stw r28, 0x10(r1)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', '0xc(r30)']
Translated lwz r0 0xc(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0xC); // lwz r0, 0xC(r30)']
Processing opcode: addi, operands: ['r28', 'r3', '0x0']
Translated addi r28 r3 0x0 to: ['gc_env.r[28] = gc_env.r[3] + 0; // addi r28, r3, 0x0']
Translated rlwinm. r0 r0 0 29 29 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x4; // rlwinm r0, r0, 0, 29, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_8000A7B8 to: if (gc_env.cr[0] != 0) goto L_8000A7B8;
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000A854 to: goto L_8000A854;
Processing opcode: lwz, operands: ['r4', '0xc(r30)']
Translated lwz r4 0xc(r30) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0xC); // lwz r4, 0xC(r30)']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: mulli, operands: ['r0', 'r31', '0x14']
Translated mulli r0 r31 0x14 to: ['gc_env.r[0] = gc_env.r[31] * 20; // mulli r0, r31, 20']
Translated rlwinm r4 r4 0 30 28 to: ['gc_env.r[4] = (gc_env.r[4] << 0) & -0x5; // rlwinm r4, r4, 0, 30, 28']
Processing opcode: addi, operands: ['r3', 'r3', '0x6800']
Translated addi r3 r3 0x6800 to: ['gc_env.r[3] += 26624; // addi r3, r3, 0x6800']
Processing opcode: stw, operands: ['r4', '0xc(r30)']
Translated stw r4 0xc(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0xC, gc_env.r[4]); // stw r4, 0xC(r30)']
Processing opcode: add, operands: ['r3', 'r3', 'r0']
Translated add r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] + gc_env.r[0]; // add r3, r3, r0']
Processing opcode: lwz, operands: ['r29', '0x0(r3)']
Translated lwz r29 0x0(r3) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r29, (r3)']
Translated andi. r0 r29 0x405 to: gc_env.r[0] = gc_env.r[29] & 0x405;
Processing opcode: stw, operands: ['r0', '0x0(r3)']
Translated stw r0 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[0]); // stw r0, (r3)']
Processing opcode: lwz, operands: ['r0', '0xc(r30)']
Translated lwz r0 0xc(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0xC); // lwz r0, 0xC(r30)']
Translated rlwinm. r0 r0 0 28 28 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x8; // rlwinm r0, r0, 0, 28, 28', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000A818 to: if (gc_env.cr[0] == 0) goto L_8000A818;
Translated cmpwi r31 0x1 to: gc_env.cr[0] = (gc_env.r[31] == 0x1) ? 0 : (gc_env.r[31] < 0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_8000A810 to: if (gc_env.cr[0] == 0) goto L_8000A810;
Translated bge .L_8000A818 to: if (gc_env.cr[0] >= 0) goto L_8000A818;
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated bge .L_8000A804 to: if (gc_env.cr[0] >= 0) goto L_8000A804;
Translated b .L_8000A818 to: goto L_8000A818;
Translated lis r3 0x10 to: ['gc_env.r[3] = 16 << 16; // lis r3, 0x10']
Translated bl __OSUnmaskInterrupts to: __OSUnmaskInterrupts();
Translated b .L_8000A818 to: goto L_8000A818;
Translated lis r3 0x2 to: ['gc_env.r[3] = 2 << 16; // lis r3, 0x2']
Translated bl __OSUnmaskInterrupts to: __OSUnmaskInterrupts();
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated cmpwi r31 0x2 to: gc_env.cr[0] = (gc_env.r[31] == 0x2) ? 0 : (gc_env.r[31] < 0x2 ? -1 : 1); // Compare with immediate
Translated beq .L_8000A850 to: if (gc_env.cr[0] == 0) goto L_8000A850;
Translated rlwinm. r0 r29 0 24 24 to: ['gc_env.r[0] = (gc_env.r[29] << 0) & 0x80; // rlwinm r0, r29, 0, 24, 24', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000A850 to: if (gc_env.cr[0] == 0) goto L_8000A850;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl __EXIProbe to: __EXIProbe();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000A848 to: if (gc_env.cr[0] == 0) goto L_8000A848;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated b .L_8000A854 to: goto L_8000A854;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000A854 to: goto L_8000A854;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: lwz, operands: ['r29', '0x14(r1)']
Translated lwz r29 0x14(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r29, 0x14(r1)']
Processing opcode: lwz, operands: ['r28', '0x10(r1)']
Translated lwz r28 0x10(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r28, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated extsh r5 r3 to: ['gc_env.r[5] = (int32_t)(int16_t)(gc_env.r[3] & 0xFFFF); // extsh r5, r3']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Translated lis r3 0x5555 to: ['gc_env.r[3] = 21845 << 16; // lis r3, 0x5555']
Processing opcode: subi, operands: ['r0', 'r5', '0x9']
Translated subi r0 r5 0x9 to: ['gc_env.r[0] = gc_env.r[5] - 9; // subi r0, r5, 9']
Processing opcode: addi, operands: ['r3', 'r3', '0x5556']
Translated addi r3 r3 0x5556 to: ['gc_env.r[3] += 21846; // addi r3, r3, 0x5556']
Processing opcode: stwu, operands: ['r1', '-0x2f8(r1)']
Translated stwu r1 -0x2f8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x2F8, gc_env.r[1]); // stwu r1, -0x2F8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x2F8;']
Translated mulhw r3 r3 r0 to: ['gc_env.r[3] = (int32_t)(((int64_t)(int32_t)gc_env.r[3] * (int64_t)(int32_t)gc_env.r[0]) >> 32); // mulhw r3, r3, r0']
Processing opcode: stw, operands: ['r31', '0x2f4(r1)']
Translated stw r31 0x2f4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2F4, gc_env.r[31]); // stw r31, 0x2F4(r1)']
Processing opcode: stw, operands: ['r30', '0x2f0(r1)']
Translated stw r30 0x2f0(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2F0, gc_env.r[30]); // stw r30, 0x2F0(r1)']
Translated srwi r0 r3 31 to: ['gc_env.r[0] = gc_env.r[3] >> 31; // srwi r0, r3, 31']
Processing opcode: stw, operands: ['r29', '0x2ec(r1)']
Translated stw r29 0x2ec(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2EC, gc_env.r[29]); // stw r29, 0x2EC(r1)']
Processing opcode: add, operands: ['r31', 'r3', 'r0']
Translated add r31 r3 r0 to: ['gc_env.r[31] = gc_env.r[3] + gc_env.r[0]; // add r31, r3, r0']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r7', 'r3', '0x6800']
Translated addi r7 r3 0x6800 to: ['gc_env.r[7] = gc_env.r[3] + 26624; // addi r7, r3, 0x6800']
Processing opcode: mulli, operands: ['r0', 'r31', '0x14']
Translated mulli r0 r31 0x14 to: ['gc_env.r[0] = gc_env.r[31] * 20; // mulli r0, r31, 20']
Processing opcode: add, operands: ['r7', 'r7', 'r0']
Translated add r7 r7 r0 to: ['gc_env.r[7] = gc_env.r[7] + gc_env.r[0]; // add r7, r7, r0']
Processing opcode: lwz, operands: ['r6', '0x0(r7)']
Translated lwz r6 0x0(r7) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[7]); // lwz r6, (r7)']
Translated lis r3 Ecb_8001C600@ha to: ['gc_env.r[3] = ((uint32_t)&Ecb_8001C600 >> 16) & 0xFFFF; // lis r3, Ecb_8001C600@ha']
Translated slwi r5 r31 6 to: ['gc_env.r[5] = gc_env.r[31] << 6; // slwi r5, r31, 6']
Translated andi. r6 r6 0x7f5 to: gc_env.r[6] = gc_env.r[6] & 0x7f5;
Processing opcode: addi, operands: ['r0', 'r3', 'Ecb_8001C600@l']
Translated addi r0 r3 Ecb_8001C600@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&Ecb_8001C600 & 0xFFFF); // addi r0, r3, Ecb_8001C600@l']
Processing opcode: add, operands: ['r3', 'r0', 'r5']
Translated add r3 r0 r5 to: ['gc_env.r[3] = gc_env.r[0] + gc_env.r[5]; // add r3, r0, r5']
Translated ori r6 r6 0x2 to: ['gc_env.r[6] |= 2; // ori r6, r6, 0x2']
Processing opcode: stw, operands: ['r6', '0x0(r7)']
Translated stw r6 0x0(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7], gc_env.r[6]); // stw r6, (r7)']
Translated mr r29 r4 to: gc_env.r[29] = gc_env.r[4]; // Move register
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated mr r30 r0 to: gc_env.r[30] = gc_env.r[0]; // Move register
Translated beq .L_8000A920 to: if (gc_env.cr[0] == 0) goto L_8000A920;
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Translated bl OSClearContext to: OSClearContext();
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Processing opcode: addi, operands: ['r12', 'r30', '0x0']
Translated addi r12 r30 0x0 to: ['gc_env.r[12] = gc_env.r[30] + 0; // addi r12, r30, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r29', '0x0']
Translated addi r4 r29 0x0 to: ['gc_env.r[4] = gc_env.r[29] + 0; // addi r4, r29, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Translated bl OSClearContext to: OSClearContext();
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Processing opcode: lwz, operands: ['r0', '0x2fc(r1)']
Translated lwz r0 0x2fc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2FC); // lwz r0, 0x2FC(r1)']
Processing opcode: lwz, operands: ['r31', '0x2f4(r1)']
Translated lwz r31 0x2f4(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2F4); // lwz r31, 0x2F4(r1)']
Processing opcode: lwz, operands: ['r30', '0x2f0(r1)']
Translated lwz r30 0x2f0(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2F0); // lwz r30, 0x2F0(r1)']
Processing opcode: lwz, operands: ['r29', '0x2ec(r1)']
Translated lwz r29 0x2ec(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2EC); // lwz r29, 0x2EC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x2f8']
Translated addi r1 r1 0x2f8 to: ['gc_env.r[1] += 760; // addi r1, r1, 0x2f8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated extsh r6 r3 to: ['gc_env.r[6] = (int32_t)(int16_t)(gc_env.r[3] & 0xFFFF); // extsh r6, r3']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Translated lis r3 0x5555 to: ['gc_env.r[3] = 21845 << 16; // lis r3, 0x5555']
Processing opcode: subi, operands: ['r0', 'r6', '0xa']
Translated subi r0 r6 0xa to: ['gc_env.r[0] = gc_env.r[6] - 10; // subi r0, r6, 10']
Processing opcode: stwu, operands: ['r1', '-0x2f8(r1)']
Translated stwu r1 -0x2f8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x2F8, gc_env.r[1]); // stwu r1, -0x2F8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x2F8;']
Processing opcode: addi, operands: ['r3', 'r3', '0x5556']
Translated addi r3 r3 0x5556 to: ['gc_env.r[3] += 21846; // addi r3, r3, 0x5556']
Translated mulhw r3 r3 r0 to: ['gc_env.r[3] = (int32_t)(((int64_t)(int32_t)gc_env.r[3] * (int64_t)(int32_t)gc_env.r[0]) >> 32); // mulhw r3, r3, r0']
Processing opcode: stw, operands: ['r31', '0x2f4(r1)']
Translated stw r31 0x2f4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2F4, gc_env.r[31]); // stw r31, 0x2F4(r1)']
Processing opcode: stw, operands: ['r30', '0x2f0(r1)']
Translated stw r30 0x2f0(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2F0, gc_env.r[30]); // stw r30, 0x2F0(r1)']
Processing opcode: stw, operands: ['r29', '0x2ec(r1)']
Translated stw r29 0x2ec(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2EC, gc_env.r[29]); // stw r29, 0x2EC(r1)']
Translated srwi r0 r3 31 to: ['gc_env.r[0] = gc_env.r[3] >> 31; // srwi r0, r3, 31']
Processing opcode: add, operands: ['r30', 'r3', 'r0']
Translated add r30 r3 r0 to: ['gc_env.r[30] = gc_env.r[3] + gc_env.r[0]; // add r30, r3, r0']
Translated lis r3 Ecb_8001C600@ha to: ['gc_env.r[3] = ((uint32_t)&Ecb_8001C600 >> 16) & 0xFFFF; // lis r3, Ecb_8001C600@ha']
Processing opcode: stw, operands: ['r28', '0x2e8(r1)']
Translated stw r28 0x2e8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2E8, gc_env.r[28]); // stw r28, 0x2E8(r1)']
Translated lis r0 0x8000 to: ['gc_env.r[0] = -32768 << 16; // lis r0, 0x8000']
Translated slwi r5 r30 6 to: ['gc_env.r[5] = gc_env.r[30] << 6; // slwi r5, r30, 6']
Processing opcode: addi, operands: ['r3', 'r3', 'Ecb_8001C600@l']
Translated addi r3 r3 Ecb_8001C600@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&Ecb_8001C600 & 0xFFFF); // addi r3, r3, Ecb_8001C600@l']
Processing opcode: add, operands: ['r31', 'r3', 'r5']
Translated add r31 r3 r5 to: ['gc_env.r[31] = gc_env.r[3] + gc_env.r[5]; // add r31, r3, r5']
Processing opcode: addi, operands: ['r28', 'r4', '0x0']
Translated addi r28 r4 0x0 to: ['gc_env.r[28] = gc_env.r[4] + 0; // addi r28, r4, 0x0']
Translated srw r3 r0 r6 to: ['gc_env.r[3] = gc_env.r[0] >> (gc_env.r[6] & 31); // srw r3, r0, r6']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Processing opcode: mulli, operands: ['r6', 'r30', '0x14']
Translated mulli r6 r30 0x14 to: ['gc_env.r[6] = gc_env.r[30] * 20; // mulli r6, r30, 20']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r4', 'r3', '0x6800']
Translated addi r4 r3 0x6800 to: ['gc_env.r[4] = gc_env.r[3] + 26624; // addi r4, r3, 0x6800']
Processing opcode: add, operands: ['r4', 'r4', 'r6']
Translated add r4 r4 r6 to: ['gc_env.r[4] = gc_env.r[4] + gc_env.r[6]; // add r4, r4, r6']
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated andi. r0 r0 0x7f5 to: gc_env.r[0] = gc_env.r[0] & 0x7f5;
Translated ori r0 r0 0x8 to: ['gc_env.r[0] |= 8; // ori r0, r0, 0x8']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Processing opcode: lwz, operands: ['r0', '0x4(r31)']
Translated lwz r0 0x4(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x4); // lwz r0, 0x4(r31)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated mr r29 r0 to: gc_env.r[29] = gc_env.r[0]; // Move register
Translated beq .L_8000AB34 to: if (gc_env.cr[0] == 0) goto L_8000AB34;
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: stw, operands: ['r5', '0x4(r31)']
Translated stw r5 0x4(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x4, gc_env.r[5]); // stw r5, 0x4(r31)']
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Translated clrlwi. r0 r0 30 to: ['gc_env.r[0] = gc_env.r[0] & 0x3; // clrlwi r0, r0, 30']
Translated beq .L_8000AB00 to: if (gc_env.cr[0] == 0) goto L_8000AB00;
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Translated rlwinm. r0 r0 0 30 30 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x2; // rlwinm r0, r0, 0, 30, 30', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000AAF4 to: if (gc_env.cr[0] == 0) goto L_8000AAF4;
Processing opcode: lwz, operands: ['r4', '0x10(r31)']
Translated lwz r4 0x10(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x10); // lwz r4, 0x10(r31)']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000AAF4 to: if (gc_env.cr[0] == 0) goto L_8000AAF4;
Processing opcode: addi, operands: ['r0', 'r3', '0x6800']
Translated addi r0 r3 0x6800 to: ['gc_env.r[0] = gc_env.r[3] + 26624; // addi r0, r3, 0x6800']
Processing opcode: lwz, operands: ['r7', '0x14(r31)']
Translated lwz r7 0x14(r31) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x14); // lwz r7, 0x14(r31)']
Processing opcode: add, operands: ['r3', 'r0', 'r6']
Translated add r3 r0 r6 to: ['gc_env.r[3] = gc_env.r[0] + gc_env.r[6]; // add r3, r0, r6']
Processing opcode: lwz, operands: ['r6', '0x10(r3)']
Translated lwz r6 0x10(r3) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x10); // lwz r6, 0x10(r3)']
Translated ble .L_8000AAF4 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000AAF4; // ble .L_8000AAF4']
Translated cmpwi r4 0x8 to: gc_env.cr[0] = (gc_env.r[4] == 0x8) ? 0 : (gc_env.r[4] < 0x8 ? -1 : 1); // Compare with immediate
Processing opcode: subi, operands: ['r3', 'r4', '0x8']
Translated subi r3 r4 0x8 to: ['gc_env.r[3] = gc_env.r[4] - 8; // subi r3, r4, 8']
Translated ble .L_8000AAC8 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000AAC8; // ble .L_8000AAC8']
Processing opcode: addi, operands: ['r0', 'r3', '0x7']
Translated addi r0 r3 0x7 to: ['gc_env.r[0] = gc_env.r[3] + 7; // addi r0, r3, 0x7']
Translated srwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] >> 3; // srwi r0, r0, 3']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated ble .L_8000AAC8 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000AAC8; // ble .L_8000AAC8']
Translated subfic r0 r5 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[5]; // subfic r0, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r3 r0 3 to: ['gc_env.r[3] = gc_env.r[0] << 3; // slwi r3, r0, 3']
Processing opcode: addi, operands: ['r0', 'r5', '0x1']
Translated addi r0 r5 0x1 to: ['gc_env.r[0] = gc_env.r[5] + 1; // addi r0, r5, 0x1']
Translated srw r8 r6 r3 to: ['gc_env.r[8] = gc_env.r[6] >> (gc_env.r[3] & 31); // srw r8, r6, r3']
Translated subfic r0 r0 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[0]; // subfic r0, r0, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[0] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r8', '0x0(r7)']
Translated stb r8 0x0(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7], gc_env.r[8]); // stb r8, (r7)']
Translated slwi r3 r0 3 to: ['gc_env.r[3] = gc_env.r[0] << 3; // slwi r3, r0, 3']
Processing opcode: addi, operands: ['r0', 'r5', '0x2']
Translated addi r0 r5 0x2 to: ['gc_env.r[0] = gc_env.r[5] + 2; // addi r0, r5, 0x2']
Translated srw r3 r6 r3 to: ['gc_env.r[3] = gc_env.r[6] >> (gc_env.r[3] & 31); // srw r3, r6, r3']
Translated subfic r0 r0 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[0]; // subfic r0, r0, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[0] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r3', '0x1(r7)']
Translated stb r3 0x1(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x1, gc_env.r[3]); // stb r3, 0x1(r7)']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Translated srw r0 r6 r0 to: ['gc_env.r[0] = gc_env.r[6] >> (gc_env.r[0] & 31); // srw r0, r6, r0']
Translated neg r8 r5 to: ['gc_env.r[8] = -(int32_t)gc_env.r[5]; // neg r8, r5']
Processing opcode: stb, operands: ['r0', '0x2(r7)']
Translated stb r0 0x2(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x2, gc_env.r[0]); // stb r0, 0x2(r7)']
Translated slwi r9 r8 3 to: ['gc_env.r[9] = gc_env.r[8] << 3; // slwi r9, r8, 3']
Processing opcode: addi, operands: ['r8', 'r5', '0x4']
Translated addi r8 r5 0x4 to: ['gc_env.r[8] = gc_env.r[5] + 4; // addi r8, r5, 0x4']
Translated srw r12 r6 r9 to: ['gc_env.r[12] = gc_env.r[6] >> (gc_env.r[9] & 31); // srw r12, r6, r9']
Translated subfic r8 r8 0x3 to: ['gc_env.r[8] = 3 - gc_env.r[8]; // subfic r8, r8, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[8] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r12', '0x3(r7)']
Translated stb r12 0x3(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x3, gc_env.r[12]); // stb r12, 0x3(r7)']
Translated slwi r9 r8 3 to: ['gc_env.r[9] = gc_env.r[8] << 3; // slwi r9, r8, 3']
Processing opcode: addi, operands: ['r8', 'r5', '0x5']
Translated addi r8 r5 0x5 to: ['gc_env.r[8] = gc_env.r[5] + 5; // addi r8, r5, 0x5']
Translated srw r11 r6 r9 to: ['gc_env.r[11] = gc_env.r[6] >> (gc_env.r[9] & 31); // srw r11, r6, r9']
Translated subfic r8 r8 0x3 to: ['gc_env.r[8] = 3 - gc_env.r[8]; // subfic r8, r8, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[8] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r11', '0x4(r7)']
Translated stb r11 0x4(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x4, gc_env.r[11]); // stb r11, 0x4(r7)']
Translated slwi r9 r8 3 to: ['gc_env.r[9] = gc_env.r[8] << 3; // slwi r9, r8, 3']
Translated srw r10 r6 r9 to: ['gc_env.r[10] = gc_env.r[6] >> (gc_env.r[9] & 31); // srw r10, r6, r9']
Processing opcode: addi, operands: ['r8', 'r5', '0x6']
Translated addi r8 r5 0x6 to: ['gc_env.r[8] = gc_env.r[5] + 6; // addi r8, r5, 0x6']
Processing opcode: stb, operands: ['r10', '0x5(r7)']
Translated stb r10 0x5(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x5, gc_env.r[10]); // stb r10, 0x5(r7)']
Translated subfic r9 r8 0x3 to: ['gc_env.r[9] = 3 - gc_env.r[8]; // subfic r9, r8, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[8] ? 0x20000000 : 0);']
Processing opcode: addi, operands: ['r8', 'r5', '0x7']
Translated addi r8 r5 0x7 to: ['gc_env.r[8] = gc_env.r[5] + 7; // addi r8, r5, 0x7']
Translated slwi r9 r9 3 to: ['gc_env.r[9] = gc_env.r[9] << 3; // slwi r9, r9, 3']
Translated srw r9 r6 r9 to: ['gc_env.r[9] = gc_env.r[6] >> (gc_env.r[9] & 31); // srw r9, r6, r9']
Translated subfic r8 r8 0x3 to: ['gc_env.r[8] = 3 - gc_env.r[8]; // subfic r8, r8, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[8] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r9', '0x6(r7)']
Translated stb r9 0x6(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x6, gc_env.r[9]); // stb r9, 0x6(r7)']
Translated slwi r8 r8 3 to: ['gc_env.r[8] = gc_env.r[8] << 3; // slwi r8, r8, 3']
Translated srw r8 r6 r8 to: ['gc_env.r[8] = gc_env.r[6] >> (gc_env.r[8] & 31); // srw r8, r6, r8']
Processing opcode: stb, operands: ['r8', '0x7(r7)']
Translated stb r8 0x7(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x7, gc_env.r[8]); // stb r8, 0x7(r7)']
Processing opcode: addi, operands: ['r7', 'r7', '0x8']
Translated addi r7 r7 0x8 to: ['gc_env.r[7] += 8; // addi r7, r7, 0x8']
Processing opcode: addi, operands: ['r5', 'r5', '0x8']
Translated addi r5 r5 0x8 to: ['gc_env.r[5] += 8; // addi r5, r5, 0x8']
Translated bdnz .L_8000AA24 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8000AA24;']
Processing opcode: subf, operands: ['r0', 'r5', 'r4']
Translated subf r0 r5 r4 to: ['gc_env.r[0] = gc_env.r[4] - gc_env.r[5]; // subf r0, r5, r4']
Translated cmpw r5 r4 to: ['gc_env.cr[0] = (int32_t)gc_env.r[5] < (int32_t)gc_env.r[4] ? 0x8 : ((int32_t)gc_env.r[5] > (int32_t)gc_env.r[4] ? 0x4 : 0x2); // cmpw r5, r4']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bge .L_8000AAF4 to: if (gc_env.cr[0] >= 0) goto L_8000AAF4;
Translated subfic r0 r5 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[5]; // subfic r0, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Translated srw r0 r6 r0 to: ['gc_env.r[0] = gc_env.r[6] >> (gc_env.r[0] & 31); // srw r0, r6, r0']
Processing opcode: stb, operands: ['r0', '0x0(r7)']
Translated stb r0 0x0(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7], gc_env.r[0]); // stb r0, (r7)']
Processing opcode: addi, operands: ['r7', 'r7', '0x1']
Translated addi r7 r7 0x1 to: ['gc_env.r[7] += 1; // addi r7, r7, 0x1']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated bdnz .L_8000AAD8 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8000AAD8;']
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Translated clrrwi r0 r0 2 to: gc_env.r[0] = gc_env.r[0] & ~((1ULL << 2) - 1); // Clear rightmost 2 bits
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: addi, operands: ['r3', 'r1', '0x20']
Translated addi r3 r1 0x20 to: ['gc_env.r[3] = gc_env.r[1] + 32; // addi r3, r1, 0x20']
Translated bl OSClearContext to: OSClearContext();
Processing opcode: addi, operands: ['r3', 'r1', '0x20']
Translated addi r3 r1 0x20 to: ['gc_env.r[3] = gc_env.r[1] + 32; // addi r3, r1, 0x20']
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Processing opcode: addi, operands: ['r12', 'r29', '0x0']
Translated addi r12 r29 0x0 to: ['gc_env.r[12] = gc_env.r[29] + 0; // addi r12, r29, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r28', '0x0']
Translated addi r4 r28 0x0 to: ['gc_env.r[4] = gc_env.r[28] + 0; // addi r4, r28, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: addi, operands: ['r3', 'r1', '0x20']
Translated addi r3 r1 0x20 to: ['gc_env.r[3] = gc_env.r[1] + 32; // addi r3, r1, 0x20']
Translated bl OSClearContext to: OSClearContext();
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Processing opcode: lwz, operands: ['r0', '0x2fc(r1)']
Translated lwz r0 0x2fc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2FC); // lwz r0, 0x2FC(r1)']
Processing opcode: lwz, operands: ['r31', '0x2f4(r1)']
Translated lwz r31 0x2f4(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2F4); // lwz r31, 0x2F4(r1)']
Processing opcode: lwz, operands: ['r30', '0x2f0(r1)']
Translated lwz r30 0x2f0(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2F0); // lwz r30, 0x2F0(r1)']
Processing opcode: lwz, operands: ['r29', '0x2ec(r1)']
Translated lwz r29 0x2ec(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2EC); // lwz r29, 0x2EC(r1)']
Processing opcode: lwz, operands: ['r28', '0x2e8(r1)']
Translated lwz r28 0x2e8(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2E8); // lwz r28, 0x2E8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x2f8']
Translated addi r1 r1 0x2f8 to: ['gc_env.r[1] += 760; // addi r1, r1, 0x2f8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated extsh r5 r3 to: ['gc_env.r[5] = (int32_t)(int16_t)(gc_env.r[3] & 0xFFFF); // extsh r5, r3']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Translated lis r3 0x5555 to: ['gc_env.r[3] = 21845 << 16; // lis r3, 0x5555']
Processing opcode: subi, operands: ['r0', 'r5', '0xb']
Translated subi r0 r5 0xb to: ['gc_env.r[0] = gc_env.r[5] - 11; // subi r0, r5, 11']
Processing opcode: addi, operands: ['r3', 'r3', '0x5556']
Translated addi r3 r3 0x5556 to: ['gc_env.r[3] += 21846; // addi r3, r3, 0x5556']
Processing opcode: stwu, operands: ['r1', '-0x2f0(r1)']
Translated stwu r1 -0x2f0(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x2F0, gc_env.r[1]); // stwu r1, -0x2F0(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x2F0;']
Translated mulhw r3 r3 r0 to: ['gc_env.r[3] = (int32_t)(((int64_t)(int32_t)gc_env.r[3] * (int64_t)(int32_t)gc_env.r[0]) >> 32); // mulhw r3, r3, r0']
Translated stmw r27 0x2dc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2DC, gc_env.r[27]); // stmw r27, 0x2DC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2E0, gc_env.r[28]); // stmw r27, 0x2DC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2E4, gc_env.r[29]); // stmw r27, 0x2DC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2E8, gc_env.r[30]); // stmw r27, 0x2DC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2EC, gc_env.r[31]); // stmw r27, 0x2DC(r1)']
Translated srwi r0 r3 31 to: ['gc_env.r[0] = gc_env.r[3] >> 31; // srwi r0, r3, 31']
Processing opcode: add, operands: ['r30', 'r3', 'r0']
Translated add r30 r3 r0 to: ['gc_env.r[30] = gc_env.r[3] + gc_env.r[0]; // add r30, r3, r0']
Processing opcode: mulli, operands: ['r0', 'r30', '0x3']
Translated mulli r0 r30 0x3 to: ['gc_env.r[0] = gc_env.r[30] * 3; // mulli r0, r30, 3']
Translated lis r3 0x70 to: ['gc_env.r[3] = 112 << 16; // lis r3, 0x70']
Processing opcode: addi, operands: ['r27', 'r4', '0x0']
Translated addi r27 r4 0x0 to: ['gc_env.r[27] = gc_env.r[4] + 0; // addi r27, r4, 0x0']
Translated srw r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] >> (gc_env.r[0] & 31); // srw r3, r3, r0']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Processing opcode: mulli, operands: ['r0', 'r30', '0x14']
Translated mulli r0 r30 0x14 to: ['gc_env.r[0] = gc_env.r[30] * 20; // mulli r0, r30, 20']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Translated lis r3 Ecb_8001C600@ha to: ['gc_env.r[3] = ((uint32_t)&Ecb_8001C600 >> 16) & 0xFFFF; // lis r3, Ecb_8001C600@ha']
Processing opcode: addi, operands: ['r4', 'r4', '0x6800']
Translated addi r4 r4 0x6800 to: ['gc_env.r[4] += 26624; // addi r4, r4, 0x6800']
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Translated stwx r31 r4 r0 to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + gc_env.r[0], gc_env.r[31]); // stwx r31, r4, r0']
Translated slwi r4 r30 6 to: ['gc_env.r[4] = gc_env.r[30] << 6; // slwi r4, r30, 6']
Processing opcode: addi, operands: ['r0', 'r3', 'Ecb_8001C600@l']
Translated addi r0 r3 Ecb_8001C600@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&Ecb_8001C600 & 0xFFFF); // addi r0, r3, Ecb_8001C600@l']
Processing opcode: add, operands: ['r29', 'r0', 'r4']
Translated add r29 r0 r4 to: ['gc_env.r[29] = gc_env.r[0] + gc_env.r[4]; // add r29, r0, r4']
Processing opcode: lwz, operands: ['r28', '0x8(r29)']
Translated lwz r28 0x8(r29) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x8); // lwz r28, 0x8(r29)']
Processing opcode: lwz, operands: ['r0', '0xc(r29)']
Translated lwz r0 0xc(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r0, 0xC(r29)']
Translated cmplwi r28 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[28] == 0x0) ? 0 : ((uint32_t)gc_env.r[28] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated rlwinm r0 r0 0 29 27 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & -0x9; // rlwinm r0, r0, 0, 29, 27']
Processing opcode: stw, operands: ['r0', '0xc(r29)']
Translated stw r0 0xc(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0xC, gc_env.r[0]); // stw r0, 0xC(r29)']
Translated beq .L_8000AC08 to: if (gc_env.cr[0] == 0) goto L_8000AC08;
Processing opcode: addi, operands: ['r3', 'r1', '0x10']
Translated addi r3 r1 0x10 to: ['gc_env.r[3] = gc_env.r[1] + 16; // addi r3, r1, 0x10']
Translated bl OSClearContext to: OSClearContext();
Processing opcode: addi, operands: ['r3', 'r1', '0x10']
Translated addi r3 r1 0x10 to: ['gc_env.r[3] = gc_env.r[1] + 16; // addi r3, r1, 0x10']
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Translated mr r12 r28 to: gc_env.r[12] = gc_env.r[28]; // Move register
Processing opcode: stw, operands: ['r31', '0x8(r29)']
Translated stw r31 0x8(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0x8, gc_env.r[31]); // stw r31, 0x8(r29)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r27', '0x0']
Translated addi r4 r27 0x0 to: ['gc_env.r[4] = gc_env.r[27] + 0; // addi r4, r27, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: addi, operands: ['r3', 'r1', '0x10']
Translated addi r3 r1 0x10 to: ['gc_env.r[3] = gc_env.r[1] + 16; // addi r3, r1, 0x10']
Translated bl OSClearContext to: OSClearContext();
Translated mr r3 r27 to: gc_env.r[3] = gc_env.r[27]; // Move register
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Translated lmw r27 0x2dc(r1) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2DC); // lmw r27, 0x2DC(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2E0); // lmw r27, 0x2DC(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2E4); // lmw r27, 0x2DC(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2E8); // lmw r27, 0x2DC(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2EC); // lmw r27, 0x2DC(r1)']
Processing opcode: lwz, operands: ['r0', '0x2f4(r1)']
Translated lwz r0 0x2f4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2F4); // lwz r0, 0x2F4(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x2f0']
Translated addi r1 r1 0x2f0 to: ['gc_env.r[1] += 752; // addi r1, r1, 0x2f0']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 0x80 to: ['gc_env.r[3] = 128 << 16; // lis r3, 0x80']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r3', 'r3', '-0x8000']
Translated addi r3 r3 -0x8000 to: ['gc_env.r[3] -= 32768; // addi r3, r3, -0x8000']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: stw, operands: ['r29', '0xc(r1)']
Translated stw r29 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[29]); // stw r29, 0xC(r1)']
Processing opcode: stw, operands: ['r28', '0x8(r1)']
Translated stw r28 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[28]); // stw r28, 0x8(r1)']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Translated lis r5 0xcc00 to: ['gc_env.r[5] = -13312 << 16; // lis r5, 0xcc00']
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Processing opcode: stw, operands: ['r31', '0x6800(r5)']
Translated stw r31 0x6800(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x6800, gc_env.r[31]); // stw r31, 0x6800(r5)']
Processing opcode: li, operands: ['r0', '0x2000']
Translated li r0 0x2000 to: ['gc_env.r[0] = 0x2000; // li r0, 0x2000']
Translated lis r3 EXIIntrruptHandler@ha to: ['gc_env.r[3] = ((uint32_t)&EXIIntrruptHandler >> 16) & 0xFFFF; // lis r3, EXIIntrruptHandler@ha']
Processing opcode: stw, operands: ['r31', '0x6814(r5)']
Translated stw r31 0x6814(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x6814, gc_env.r[31]); // stw r31, 0x6814(r5)']
Processing opcode: addi, operands: ['r28', 'r3', 'EXIIntrruptHandler@l']
Translated addi r28 r3 EXIIntrruptHandler@l to: ['gc_env.r[28] = gc_env.r[3] + ((uint32_t)&EXIIntrruptHandler & 0xFFFF); // addi r28, r3, EXIIntrruptHandler@l']
Processing opcode: addi, operands: ['r4', 'r28', '0x0']
Translated addi r4 r28 0x0 to: ['gc_env.r[4] = gc_env.r[28] + 0; // addi r4, r28, 0x0']
Processing opcode: stw, operands: ['r31', '0x6828(r5)']
Translated stw r31 0x6828(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x6828, gc_env.r[31]); // stw r31, 0x6828(r5)']
Processing opcode: li, operands: ['r3', '0x9']
Translated li r3 0x9 to: ['gc_env.r[3] = 0x9; // li r3, 0x9']
Processing opcode: stw, operands: ['r0', '0x6800(r5)']
Translated stw r0 0x6800(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x6800, gc_env.r[0]); // stw r0, 0x6800(r5)']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Translated lis r3 TCIntrruptHandler@ha to: ['gc_env.r[3] = ((uint32_t)&TCIntrruptHandler >> 16) & 0xFFFF; // lis r3, TCIntrruptHandler@ha']
Processing opcode: addi, operands: ['r29', 'r3', 'TCIntrruptHandler@l']
Translated addi r29 r3 TCIntrruptHandler@l to: ['gc_env.r[29] = (uint32_t)&TCIntrruptHandler; // lis + addi TCIntrruptHandler (completing pattern)']
Processing opcode: addi, operands: ['r4', 'r29', '0x0']
Translated addi r4 r29 0x0 to: ['gc_env.r[4] = gc_env.r[29] + 0; // addi r4, r29, 0x0']
Processing opcode: li, operands: ['r3', '0xa']
Translated li r3 0xa to: ['gc_env.r[3] = 0xa; // li r3, 0xa']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Translated lis r3 EXTIntrruptHandler@ha to: ['gc_env.r[3] = ((uint32_t)&EXTIntrruptHandler >> 16) & 0xFFFF; // lis r3, EXTIntrruptHandler@ha']
Processing opcode: addi, operands: ['r30', 'r3', 'EXTIntrruptHandler@l']
Translated addi r30 r3 EXTIntrruptHandler@l to: ['gc_env.r[30] = (uint32_t)&EXTIntrruptHandler; // lis + addi EXTIntrruptHandler (completing pattern)']
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: li, operands: ['r3', '0xb']
Translated li r3 0xb to: ['gc_env.r[3] = 0xb; // li r3, 0xb']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Processing opcode: addi, operands: ['r4', 'r28', '0x0']
Translated addi r4 r28 0x0 to: ['gc_env.r[4] = gc_env.r[28] + 0; // addi r4, r28, 0x0']
Processing opcode: li, operands: ['r3', '0xc']
Translated li r3 0xc to: ['gc_env.r[3] = 0xc; // li r3, 0xc']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Processing opcode: addi, operands: ['r4', 'r29', '0x0']
Translated addi r4 r29 0x0 to: ['gc_env.r[4] = gc_env.r[29] + 0; // addi r4, r29, 0x0']
Processing opcode: li, operands: ['r3', '0xd']
Translated li r3 0xd to: ['gc_env.r[3] = 0xd; // li r3, 0xd']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: li, operands: ['r3', '0xe']
Translated li r3 0xe to: ['gc_env.r[3] = 0xe; // li r3, 0xe']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Processing opcode: addi, operands: ['r4', 'r28', '0x0']
Translated addi r4 r28 0x0 to: ['gc_env.r[4] = gc_env.r[28] + 0; // addi r4, r28, 0x0']
Processing opcode: li, operands: ['r3', '0xf']
Translated li r3 0xf to: ['gc_env.r[3] = 0xf; // li r3, 0xf']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Processing opcode: addi, operands: ['r4', 'r29', '0x0']
Translated addi r4 r29 0x0 to: ['gc_env.r[4] = gc_env.r[29] + 0; // addi r4, r29, 0x0']
Processing opcode: li, operands: ['r3', '0x10']
Translated li r3 0x10 to: ['gc_env.r[3] = 0x10; // li r3, 0x10']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Translated bl OSGetConsoleType to: OSGetConsoleType();
Translated rlwinm. r0 r3 0 3 3 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x10000000; // rlwinm r0, r3, 0, 3, 3', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000AD10 to: if (gc_env.cr[0] == 0) goto L_8000AD10;
Translated lis r5 0x8000 to: ['gc_env.r[5] = -32768 << 16; // lis r5, 0x8000']
Processing opcode: stw, operands: ['r31', '0x30c4(r5)']
Translated stw r31 0x30c4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x30C4, gc_env.r[31]); // stw r31, 0x30C4(r5)']
Translated lis r3 Ecb_8001C600@ha to: ['gc_env.r[3] = ((uint32_t)&Ecb_8001C600 >> 16) & 0xFFFF; // lis r3, Ecb_8001C600@ha']
Processing opcode: addi, operands: ['r4', 'r3', 'Ecb_8001C600@l']
Translated addi r4 r3 Ecb_8001C600@l to: ['gc_env.r[4] = (uint32_t)&Ecb_8001C600; // lis + addi Ecb_8001C600 (completing pattern)']
Processing opcode: stw, operands: ['r31', '0x30c0(r5)']
Translated stw r31 0x30c0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x30C0, gc_env.r[31]); // stw r31, 0x30C0(r5)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stw, operands: ['r31', '0x60(r4)']
Translated stw r31 0x60(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x60, gc_env.r[31]); // stw r31, 0x60(r4)']
Processing opcode: stw, operands: ['r31', '0x20(r4)']
Translated stw r31 0x20(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x20, gc_env.r[31]); // stw r31, 0x20(r4)']
Translated bl __EXIProbe to: __EXIProbe();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated bl __EXIProbe to: __EXIProbe();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: lwz, operands: ['r29', '0xc(r1)']
Translated lwz r29 0xc(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r29, 0xC(r1)']
Processing opcode: lwz, operands: ['r28', '0x8(r1)']
Translated lwz r28 0x8(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r28, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Translated stmw r27 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[27]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[28]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[29]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[30]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stmw r27, 0x1C(r1)']
Processing opcode: addi, operands: ['r27', 'r3', '0x0']
Translated addi r27 r3 0x0 to: ['gc_env.r[27] = gc_env.r[3] + 0; // addi r27, r3, 0x0']
Translated lis r3 Ecb_8001C600@ha to: ['gc_env.r[3] = ((uint32_t)&Ecb_8001C600 >> 16) & 0xFFFF; // lis r3, Ecb_8001C600@ha']
Translated slwi r6 r27 6 to: ['gc_env.r[6] = gc_env.r[27] << 6; // slwi r6, r27, 6']
Processing opcode: addi, operands: ['r0', 'r3', 'Ecb_8001C600@l']
Translated addi r0 r3 Ecb_8001C600@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&Ecb_8001C600 & 0xFFFF); // addi r0, r3, Ecb_8001C600@l']
Processing opcode: add, operands: ['r31', 'r0', 'r6']
Translated add r31 r0 r6 to: ['gc_env.r[31] = gc_env.r[0] + gc_env.r[6]; // add r31, r0, r6']
Processing opcode: addi, operands: ['r28', 'r4', '0x0']
Translated addi r28 r4 0x0 to: ['gc_env.r[28] = gc_env.r[4] + 0; // addi r28, r4, 0x0']
Processing opcode: addi, operands: ['r29', 'r5', '0x0']
Translated addi r29 r5 0x0 to: ['gc_env.r[29] = gc_env.r[5] + 0; // addi r29, r5, 0x0']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Translated rlwinm. r0 r0 0 27 27 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x10; // rlwinm r0, r0, 0, 27, 27', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000ADE8 to: if (gc_env.cr[0] == 0) goto L_8000ADE8;
Translated cmplwi r29 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[29] == 0x0) ? 0 : ((uint32_t)gc_env.r[29] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000ADD8 to: if (gc_env.cr[0] == 0) goto L_8000ADD8;
Processing opcode: lwz, operands: ['r4', '0x24(r31)']
Translated lwz r4 0x24(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x24); // lwz r4, 0x24(r31)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated mtctr r4 to: gc_env.ctr = gc_env.r[4]; // Move to count register
Translated ble .L_8000ADB0 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000ADB0; // ble .L_8000ADB0']
Processing opcode: lwz, operands: ['r0', '0x28(r3)']
Translated lwz r0 0x28(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x28); // lwz r0, 0x28(r3)']
Translated cmplw r0 r28 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[28]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[28] ? -1 : 1); // Logical compare word
Translated bne .L_8000ADA8 to: if (gc_env.cr[0] != 0) goto L_8000ADA8;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000AE10 to: goto L_8000AE10;
Processing opcode: addi, operands: ['r3', 'r3', '0x8']
Translated addi r3 r3 0x8 to: ['gc_env.r[3] += 8; // addi r3, r3, 0x8']
Translated bdnz .L_8000AD8C to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8000AD8C;']
Translated slwi r0 r4 3 to: ['gc_env.r[0] = gc_env.r[4] << 3; // slwi r0, r4, 3']
Processing opcode: add, operands: ['r3', 'r31', 'r0']
Translated add r3 r31 r0 to: ['gc_env.r[3] = gc_env.r[31] + gc_env.r[0]; // add r3, r31, r0']
Processing opcode: stw, operands: ['r29', '0x2c(r3)']
Translated stw r29 0x2c(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x2C, gc_env.r[29]); // stw r29, 0x2C(r3)']
Processing opcode: lwz, operands: ['r0', '0x24(r31)']
Translated lwz r0 0x24(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x24); // lwz r0, 0x24(r31)']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Processing opcode: add, operands: ['r3', 'r31', 'r0']
Translated add r3 r31 r0 to: ['gc_env.r[3] = gc_env.r[31] + gc_env.r[0]; // add r3, r31, r0']
Processing opcode: stw, operands: ['r28', '0x28(r3)']
Translated stw r28 0x28(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x28, gc_env.r[28]); // stw r28, 0x28(r3)']
Processing opcode: lwz, operands: ['r3', '0x24(r31)']
Translated lwz r3 0x24(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x24); // lwz r3, 0x24(r31)']
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: stw, operands: ['r0', '0x24(r31)']
Translated stw r0 0x24(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x24, gc_env.r[0]); // stw r0, 0x24(r31)']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000AE10 to: goto L_8000AE10;
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Processing opcode: addi, operands: ['r3', 'r27', '0x0']
Translated addi r3 r27 0x0 to: ['gc_env.r[3] = gc_env.r[27] + 0; // addi r3, r27, 0x0']
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Translated ori r0 r0 0x10 to: ['gc_env.r[0] |= 16; // ori r0, r0, 0x10']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: stw, operands: ['r28', '0x18(r31)']
Translated stw r28 0x18(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x18, gc_env.r[28]); // stw r28, 0x18(r31)']
Translated bl fn_80009D98 to: fn_80009D98();
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated lmw r27 0x1c(r1) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r27, 0x1C(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r27, 0x1C(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r27, 0x1C(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r27, 0x1C(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r27, 0x1C(r1)']
Processing opcode: lwz, operands: ['r0', '0x34(r1)']
Translated lwz r0 0x34(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r0, 0x34(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: stw, operands: ['r29', '0x14(r1)']
Translated stw r29 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stw r29, 0x14(r1)']
Processing opcode: stw, operands: ['r28', '0x10(r1)']
Translated stw r28 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[28]); // stw r28, 0x10(r1)']
Processing opcode: addi, operands: ['r28', 'r3', '0x0']
Translated addi r28 r3 0x0 to: ['gc_env.r[28] = gc_env.r[3] + 0; // addi r28, r3, 0x0']
Translated lis r3 Ecb_8001C600@ha to: ['gc_env.r[3] = ((uint32_t)&Ecb_8001C600 >> 16) & 0xFFFF; // lis r3, Ecb_8001C600@ha']
Translated slwi r4 r28 6 to: ['gc_env.r[4] = gc_env.r[28] << 6; // slwi r4, r28, 6']
Processing opcode: addi, operands: ['r0', 'r3', 'Ecb_8001C600@l']
Translated addi r0 r3 Ecb_8001C600@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&Ecb_8001C600 & 0xFFFF); // addi r0, r3, Ecb_8001C600@l']
Processing opcode: add, operands: ['r31', 'r0', 'r4']
Translated add r31 r0 r4 to: ['gc_env.r[31] = gc_env.r[0] + gc_env.r[4]; // add r31, r0, r4']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Translated rlwinm. r0 r0 0 27 27 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x10; // rlwinm r0, r0, 0, 27, 27', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_8000AE78 to: if (gc_env.cr[0] != 0) goto L_8000AE78;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000AEE0 to: goto L_8000AEE0;
Processing opcode: lwz, operands: ['r0', '0xc(r31)']
Translated lwz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r0, 0xC(r31)']
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Translated rlwinm r0 r0 0 28 26 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & -0x11; // rlwinm r0, r0, 0, 28, 26']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Translated bl fn_80009D98 to: fn_80009D98();
Processing opcode: lwz, operands: ['r3', '0x24(r31)']
Translated lwz r3 0x24(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x24); // lwz r3, 0x24(r31)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated ble .L_8000AED4 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000AED4; // ble .L_8000AED4']
Processing opcode: subic, operands: ['r0', 'r3', '0x1']
Translated subic. r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] - 1; // subic. r0, r3, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Processing opcode: lwz, operands: ['r29', '0x2c(r31)']
Translated lwz r29 0x2c(r31) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x2C); // lwz r29, 0x2C(r31)']
Processing opcode: stw, operands: ['r0', '0x24(r31)']
Translated stw r0 0x24(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x24, gc_env.r[0]); // stw r0, 0x24(r31)']
Translated ble .L_8000AEC0 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000AEC0; // ble .L_8000AEC0']
Processing opcode: lwz, operands: ['r0', '0x24(r31)']
Translated lwz r0 0x24(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x24); // lwz r0, 0x24(r31)']
Processing opcode: addi, operands: ['r3', 'r31', '0x28']
Translated addi r3 r31 0x28 to: ['gc_env.r[3] = gc_env.r[31] + 40; // addi r3, r31, 0x28']
Processing opcode: addi, operands: ['r4', 'r31', '0x30']
Translated addi r4 r31 0x30 to: ['gc_env.r[4] = gc_env.r[31] + 48; // addi r4, r31, 0x30']
Translated slwi r5 r0 3 to: ['gc_env.r[5] = gc_env.r[0] << 3; // slwi r5, r0, 3']
Translated bl fn_8001225C to: fn_8001225C();
Processing opcode: addi, operands: ['r12', 'r29', '0x0']
Translated addi r12 r29 0x0 to: ['gc_env.r[12] = gc_env.r[29] + 0; // addi r12, r29, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: lwz, operands: ['r29', '0x14(r1)']
Translated lwz r29 0x14(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r29, 0x14(r1)']
Processing opcode: lwz, operands: ['r28', '0x10(r1)']
Translated lwz r28 0x10(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r28, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EEFC@sda21(r0)']
Translated lwz r3 lbl_8001EEFC@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEFC); // lwz r3, lbl_8001EEFC@sda21(r0)']
Processing opcode: addis, operands: ['r0', 'r3', '0x5a01']
Translated addis r0 r3 0x5a01 to: ['gc_env.r[0] = gc_env.r[3] + (23041 << 16); // addis r0, r3, 23041']
Translated cmplwi r0 0x5a to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x5a) ? 0 : ((uint32_t)gc_env.r[0] < 0x5a ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000AF24 to: if (gc_env.cr[0] != 0) goto L_8000AF24;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000AF60 to: goto L_8000AF60;
Translated bl OSGetConsoleType to: OSGetConsoleType();
Translated rlwinm. r0 r3 0 3 3 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x10000000; // rlwinm r0, r3, 0, 3, 3', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_8000AF40 to: if (gc_env.cr[0] != 0) goto L_8000AF40;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EEF8@sda21(r0)']
Translated stw r0 lbl_8001EEF8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EEF8, gc_env.r[0]); // stw r0, lbl_8001EEF8@sda21(r0)']
Processing opcode: li, operands: ['r3', '0x2']
Translated li r3 0x2 to: ['gc_env.r[3] = 0x2; // li r3, 0x2']
Translated b .L_8000AF60 to: goto L_8000AF60;
Translated lis r3 0xa5ff to: ['gc_env.r[3] = -23041 << 16; // lis r3, 0xa5ff']
Processing opcode: addi, operands: ['r0', 'r3', '0x5a']
Translated addi r0 r3 0x5a to: ['gc_env.r[0] = gc_env.r[3] + 90; // addi r0, r3, 0x5a']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EEF8@sda21(r0)']
Translated stw r0 lbl_8001EEF8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EEF8, gc_env.r[0]); // stw r0, lbl_8001EEF8@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r3', 'lbl_8001EEF0@sda21(r0)']
Translated stw r3 lbl_8001EEF0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EEF0, gc_env.r[3]); // stw r3, lbl_8001EEF0@sda21(r0)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EEF4@sda21(r0)']
Translated stw r0 lbl_8001EEF4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EEF4, gc_env.r[0]); // stw r0, lbl_8001EEF4@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: li, operands: ['r3', '0x4']
Translated li r3 0x4 to: ['gc_env.r[3] = 0x4; // li r3, 0x4']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Translated stmw r26 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[26]); // stmw r26, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[27]); // stmw r26, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[28]); // stmw r26, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[29]); // stmw r26, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[30]); // stmw r26, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stmw r26, 0x18(r1)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Processing opcode: addi, operands: ['r31', 'r4', '0x0']
Translated addi r31 r4 0x0 to: ['gc_env.r[31] = gc_env.r[4] + 0; // addi r31, r4, 0x0']
Processing opcode: lwz, operands: ['r5', 'lbl_8001EEF8@sda21(r0)']
Translated lwz r5 lbl_8001EEF8@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF8); // lwz r5, lbl_8001EEF8@sda21(r0)']
Processing opcode: addis, operands: ['r0', 'r5', '0x5a01']
Translated addis r0 r5 0x5a01 to: ['gc_env.r[0] = gc_env.r[5] + (23041 << 16); // addis r0, r5, 23041']
Translated cmplwi r0 0x5a to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x5a) ? 0 : ((uint32_t)gc_env.r[0] < 0x5a ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000AFA8 to: if (gc_env.cr[0] == 0) goto L_8000AFA8;
Processing opcode: li, operands: ['r3', '0x2']
Translated li r3 0x2 to: ['gc_env.r[3] = 0x2; // li r3, 0x2']
Translated b .L_8000B164 to: goto L_8000B164;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EEF0@sda21(r0)']
Translated lwz r3 lbl_8001EEF0@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF0); // lwz r3, lbl_8001EEF0@sda21(r0)']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: lwz, operands: ['r4', 'lbl_8001EEF4@sda21(r0)']
Translated lwz r4 lbl_8001EEF4@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF4); // lwz r4, lbl_8001EEF4@sda21(r0)']
Translated bl EXILock to: EXILock();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000AFC8 to: if (gc_env.cr[0] != 0) goto L_8000AFC8;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000B164 to: goto L_8000B164;
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: li, operands: ['r3', '0xd']
Translated li r3 0xd to: ['gc_env.r[3] = 0xd; // li r3, 0xd']
Translated b .L_8000AFE8 to: goto L_8000AFE8;
Processing opcode: lbz, operands: ['r0', '0x0(r4)']
Translated lbz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 0x0); // lbz r0, 0x0(r4)']
Translated cmpwi r0 0xa to: gc_env.cr[0] = (gc_env.r[0] == 0xa) ? 0 : (gc_env.r[0] < 0xa ? -1 : 1); // Compare with immediate
Translated bne .L_8000AFE4 to: if (gc_env.cr[0] != 0) goto L_8000AFE4;
Processing opcode: stb, operands: ['r3', '0x0(r4)']
Translated stb r3 0x0(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4], gc_env.r[3]); // stb r3, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Processing opcode: subf, operands: ['r0', 'r30', 'r4']
Translated subf r0 r30 r4 to: ['gc_env.r[0] = gc_env.r[4] - gc_env.r[30]; // subf r0, r30, r4']
Translated cmplw r0 r31 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[31]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[31] ? -1 : 1); // Logical compare word
Translated blt .L_8000AFD4 to: ['if (gc_env.cr[0] & 0x8) goto L_8000AFD4; // blt .L_8000AFD4']
Translated lis r0 0xa001 to: ['gc_env.r[0] = -24575 << 16; // lis r0, 0xa001']
Processing opcode: stw, operands: ['r0', '0x14(r1)']
Translated stw r0 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stw r0, 0x14(r1)']
Processing opcode: li, operands: ['r26', '0x0']
Translated li r26 0x0 to: ['gc_env.r[26] = 0x0; // li r26, 0x0']
Translated lis r29 0x2001 to: ['gc_env.r[29] = 8193 << 16; // lis r29, 0x2001']
Translated b .L_8000B150 to: goto L_8000B150;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EEF0@sda21(r0)']
Translated lwz r3 lbl_8001EEF0@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF0); // lwz r3, lbl_8001EEF0@sda21(r0)']
Processing opcode: li, operands: ['r5', '0x3']
Translated li r5 0x3 to: ['gc_env.r[5] = 0x3; // li r5, 0x3']
Processing opcode: lwz, operands: ['r4', 'lbl_8001EEF4@sda21(r0)']
Translated lwz r4 lbl_8001EEF4@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF4); // lwz r4, lbl_8001EEF4@sda21(r0)']
Translated bl EXISelect to: EXISelect();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000B028 to: if (gc_env.cr[0] != 0) goto L_8000B028;
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated b .L_8000B080 to: goto L_8000B080;
Processing opcode: stw, operands: ['r29', '0x10(r1)']
Translated stw r29 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[29]); // stw r29, 0x10(r1)']
Processing opcode: addi, operands: ['r4', 'r1', '0x10']
Translated addi r4 r1 0x10 to: ['gc_env.r[4] = gc_env.r[1] + 16; // addi r4, r1, 0x10']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EEF0@sda21(r0)']
Translated lwz r3 lbl_8001EEF0@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF0); // lwz r3, lbl_8001EEF0@sda21(r0)']
Processing opcode: li, operands: ['r5', '0x4']
Translated li r5 0x4 to: ['gc_env.r[5] = 0x4; // li r5, 0x4']
Processing opcode: li, operands: ['r6', '0x1']
Translated li r6 0x1 to: ['gc_env.r[6] = 0x1; // li r6, 0x1']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bl EXIImm to: EXIImm();
Processing opcode: lwz, operands: ['r3', 'lbl_8001EEF0@sda21(r0)']
Translated lwz r3 lbl_8001EEF0@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF0); // lwz r3, lbl_8001EEF0@sda21(r0)']
Translated bl EXISync to: EXISync();
Processing opcode: lwz, operands: ['r3', 'lbl_8001EEF0@sda21(r0)']
Translated lwz r3 lbl_8001EEF0@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF0); // lwz r3, lbl_8001EEF0@sda21(r0)']
Processing opcode: addi, operands: ['r4', 'r1', '0x10']
Translated addi r4 r1 0x10 to: ['gc_env.r[4] = gc_env.r[1] + 16; // addi r4, r1, 0x10']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bl EXIImm to: EXIImm();
Processing opcode: lwz, operands: ['r3', 'lbl_8001EEF0@sda21(r0)']
Translated lwz r3 lbl_8001EEF0@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF0); // lwz r3, lbl_8001EEF0@sda21(r0)']
Translated bl EXISync to: EXISync();
Processing opcode: lwz, operands: ['r3', 'lbl_8001EEF0@sda21(r0)']
Translated lwz r3 lbl_8001EEF0@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF0); // lwz r3, lbl_8001EEF0@sda21(r0)']
Translated bl EXIDeselect to: EXIDeselect();
Processing opcode: lwz, operands: ['r0', '0x10(r1)']
Translated lwz r0 0x10(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r0, 0x10(r1)']
Translated srwi r0 r0 24 to: ['gc_env.r[0] = gc_env.r[0] >> 24; // srwi r0, r0, 24']
Translated subfic r0 r0 0x10 to: ['gc_env.r[0] = 16 - gc_env.r[0]; // subfic r0, r0, 16', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (16 >= gc_env.r[0] ? 0x20000000 : 0);']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated mr r27 r0 to: gc_env.r[27] = gc_env.r[0]; // Move register
Translated bge .L_8000B094 to: if (gc_env.cr[0] >= 0) goto L_8000B094;
Processing opcode: li, operands: ['r26', '0x3']
Translated li r26 0x3 to: ['gc_env.r[26] = 0x3; // li r26, 0x3']
Translated b .L_8000B158 to: goto L_8000B158;
Translated cmpwi r0 0xc to: gc_env.cr[0] = (gc_env.r[0] == 0xc) ? 0 : (gc_env.r[0] < 0xc ? -1 : 1); // Compare with immediate
Translated bge .L_8000B0A4 to: if (gc_env.cr[0] >= 0) goto L_8000B0A4;
Translated cmplw r0 r31 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[31]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[31] ? -1 : 1); // Logical compare word
Translated blt .L_8000B150 to: ['if (gc_env.cr[0] & 0x8) goto L_8000B150; // blt .L_8000B150']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EEF0@sda21(r0)']
Translated lwz r3 lbl_8001EEF0@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF0); // lwz r3, lbl_8001EEF0@sda21(r0)']
Processing opcode: li, operands: ['r5', '0x3']
Translated li r5 0x3 to: ['gc_env.r[5] = 0x3; // li r5, 0x3']
Processing opcode: lwz, operands: ['r4', 'lbl_8001EEF4@sda21(r0)']
Translated lwz r4 lbl_8001EEF4@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF4); // lwz r4, lbl_8001EEF4@sda21(r0)']
Translated bl EXISelect to: EXISelect();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000B0C4 to: if (gc_env.cr[0] != 0) goto L_8000B0C4;
Processing opcode: li, operands: ['r26', '0x3']
Translated li r26 0x3 to: ['gc_env.r[26] = 0x3; // li r26, 0x3']
Translated b .L_8000B158 to: goto L_8000B158;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EEF0@sda21(r0)']
Translated lwz r3 lbl_8001EEF0@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF0); // lwz r3, lbl_8001EEF0@sda21(r0)']
Processing opcode: addi, operands: ['r4', 'r1', '0x14']
Translated addi r4 r1 0x14 to: ['gc_env.r[4] = gc_env.r[1] + 20; // addi r4, r1, 0x14']
Processing opcode: li, operands: ['r5', '0x4']
Translated li r5 0x4 to: ['gc_env.r[5] = 0x4; // li r5, 0x4']
Processing opcode: li, operands: ['r6', '0x1']
Translated li r6 0x1 to: ['gc_env.r[6] = 0x1; // li r6, 0x1']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bl EXIImm to: EXIImm();
Processing opcode: lwz, operands: ['r3', 'lbl_8001EEF0@sda21(r0)']
Translated lwz r3 lbl_8001EEF0@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF0); // lwz r3, lbl_8001EEF0@sda21(r0)']
Translated bl EXISync to: EXISync();
Translated b .L_8000B138 to: goto L_8000B138;
Translated cmpwi r27 0x4 to: gc_env.cr[0] = (gc_env.r[27] == 0x4) ? 0 : (gc_env.r[27] < 0x4 ? -1 : 1); // Compare with immediate
Translated bge .L_8000B0F8 to: if (gc_env.cr[0] >= 0) goto L_8000B0F8;
Translated cmplw r27 r31 to: gc_env.cr[0] = ((uint32_t)gc_env.r[27] == (uint32_t)gc_env.r[31]) ? 0 : ((uint32_t)gc_env.r[27] < (uint32_t)gc_env.r[31] ? -1 : 1); // Logical compare word
Translated blt .L_8000B148 to: ['if (gc_env.cr[0] & 0x8) goto L_8000B148; // blt .L_8000B148']
Translated cmplwi r31 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == 0x4) ? 0 : ((uint32_t)gc_env.r[31] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated bge .L_8000B108 to: if (gc_env.cr[0] >= 0) goto L_8000B108;
Translated mr r28 r31 to: gc_env.r[28] = gc_env.r[31]; // Move register
Translated b .L_8000B10C to: goto L_8000B10C;
Processing opcode: li, operands: ['r28', '0x4']
Translated li r28 0x4 to: ['gc_env.r[28] = 0x4; // li r28, 0x4']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EEF0@sda21(r0)']
Translated lwz r3 lbl_8001EEF0@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF0); // lwz r3, lbl_8001EEF0@sda21(r0)']
Translated mr r5 r28 to: gc_env.r[5] = gc_env.r[28]; // Move register
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: li, operands: ['r6', '0x1']
Translated li r6 0x1 to: ['gc_env.r[6] = 0x1; // li r6, 0x1']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bl EXIImm to: EXIImm();
Processing opcode: lwz, operands: ['r3', 'lbl_8001EEF0@sda21(r0)']
Translated lwz r3 lbl_8001EEF0@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF0); // lwz r3, lbl_8001EEF0@sda21(r0)']
Processing opcode: add, operands: ['r30', 'r30', 'r28']
Translated add r30 r30 r28 to: ['gc_env.r[30] = gc_env.r[30] + gc_env.r[28]; // add r30, r30, r28']
Processing opcode: subf, operands: ['r31', 'r28', 'r31']
Translated subf r31 r28 r31 to: ['gc_env.r[31] = gc_env.r[31] - gc_env.r[28]; // subf r31, r28, r31']
Processing opcode: subf, operands: ['r27', 'r28', 'r27']
Translated subf r27 r28 r27 to: ['gc_env.r[27] = gc_env.r[27] - gc_env.r[28]; // subf r27, r28, r27']
Translated bl EXISync to: EXISync();
Translated cmpwi r27 0x0 to: gc_env.cr[0] = (gc_env.r[27] == 0x0) ? 0 : (gc_env.r[27] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000B148 to: if (gc_env.cr[0] == 0) goto L_8000B148;
Translated cmplwi r31 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == 0x0) ? 0 : ((uint32_t)gc_env.r[31] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000B0E8 to: if (gc_env.cr[0] != 0) goto L_8000B0E8;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EEF0@sda21(r0)']
Translated lwz r3 lbl_8001EEF0@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF0); // lwz r3, lbl_8001EEF0@sda21(r0)']
Translated bl EXIDeselect to: EXIDeselect();
Translated cmplwi r31 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == 0x0) ? 0 : ((uint32_t)gc_env.r[31] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000B008 to: if (gc_env.cr[0] != 0) goto L_8000B008;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EEF0@sda21(r0)']
Translated lwz r3 lbl_8001EEF0@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EEF0); // lwz r3, lbl_8001EEF0@sda21(r0)']
Translated bl EXIUnlock to: EXIUnlock();
Translated mr r3 r26 to: gc_env.r[3] = gc_env.r[26]; // Move register
Translated lmw r26 0x18(r1) to: ['gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lmw r26, 0x18(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r26, 0x18(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r26, 0x18(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r26, 0x18(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r26, 0x18(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r26, 0x18(r1)']
Processing opcode: lwz, operands: ['r0', '0x34(r1)']
Translated lwz r0 0x34(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r0, 0x34(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: addi, operands: ['r30', 'r3', '0x6400']
Translated addi r30 r3 0x6400 to: ['gc_env.r[30] = gc_env.r[3] + 25600; // addi r30, r3, 0x6400']
Processing opcode: stw, operands: ['r29', '0x14(r1)']
Translated stw r29 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stw r29, 0x14(r1)']
Processing opcode: addi, operands: ['r29', 'r30', '0x34']
Translated addi r29 r30 0x34 to: ['gc_env.r[29] = gc_env.r[30] + 52; // addi r29, r30, 0x34']
Processing opcode: stw, operands: ['r28', '0x10(r1)']
Translated stw r28 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[28]); // stw r28, 0x10(r1)']
Processing opcode: lwz, operands: ['r0', '0x6434(r3)']
Translated lwz r0 0x6434(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6434); // lwz r0, 0x6434(r3)']
Processing opcode: lwz, operands: ['r28', '0x6438(r3)']
Translated lwz r28 0x6438(r3) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6438); // lwz r28, 0x6438(r3)']
Translated lis r3 Si_8001B088@ha to: ['gc_env.r[3] = ((uint32_t)&Si_8001B088 >> 16) & 0xFFFF; // lis r3, Si_8001B088@ha']
Translated oris r0 r0 0x8000 to: ['gc_env.r[0] = gc_env.r[0] | 0x80000000; // oris r0, r0, 0x8000']
Translated clrrwi r0 r0 1 to: gc_env.r[0] = gc_env.r[0] & ~((1ULL << 1) - 1); // Clear rightmost 1 bits
Processing opcode: stw, operands: ['r0', '0x34(r30)']
Translated stw r0 0x34(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x34, gc_env.r[0]); // stw r0, 0x34(r30)']
Processing opcode: addi, operands: ['r31', 'r3', 'Si_8001B088@l']
Translated addi r31 r3 Si_8001B088@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&Si_8001B088 & 0xFFFF); // addi r31, r3, Si_8001B088@l']
Processing opcode: lwz, operands: ['r0', '0x0(r31)']
Translated lwz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r0, (r31)']
Translated cmpwi r0 -0x1 to: gc_env.cr[0] = (gc_env.r[0] == -0x1) ? 0 : (gc_env.r[0] < -0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_8000B438 to: if (gc_env.cr[0] == 0) goto L_8000B438;
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: lwz, operands: ['r6', '0x0(r31)']
Translated lwz r6 0x0(r31) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r6, (r31)']
Translated lis r5 lbl_8001C800@ha to: ['gc_env.r[5] = ((uint32_t)&lbl_8001C800 >> 16) & 0xFFFF; // lis r5, lbl_8001C800@ha']
Processing opcode: addi, operands: ['r0', 'r5', 'lbl_8001C800@l']
Translated addi r0 r5 lbl_8001C800@l to: ['gc_env.r[0] = (uint32_t)&lbl_8001C800; // lis + addi lbl_8001C800 (completing pattern)']
Translated slwi r5 r6 3 to: ['gc_env.r[5] = gc_env.r[6] << 3; // slwi r5, r6, 3']
Processing opcode: add, operands: ['r5', 'r0', 'r5']
Translated add r5 r0 r5 to: ['gc_env.r[5] = gc_env.r[0] + gc_env.r[5]; // add r5, r0, r5']
Processing opcode: stw, operands: ['r4', '0x4(r5)']
Translated stw r4 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[4]); // stw r4, 0x4(r5)']
Processing opcode: addi, operands: ['r6', 'r31', '0x8']
Translated addi r6 r31 0x8 to: ['gc_env.r[6] = gc_env.r[31] + 8; // addi r6, r31, 0x8']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: stw, operands: ['r3', '0x0(r5)']
Translated stw r3 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[3]); // stw r3, (r5)']
Processing opcode: lwz, operands: ['r0', '0x8(r31)']
Translated lwz r0 0x8(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r0, 0x8(r31)']
Processing opcode: lwz, operands: ['r5', '0xc(r31)']
Translated lwz r5 0xc(r31) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r5, 0xC(r31)']
Translated srwi r7 r0 2 to: ['gc_env.r[7] = gc_env.r[0] >> 2; // srwi r7, r0, 2']
Translated cmplwi r7 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[7] == 0x0) ? 0 : ((uint32_t)gc_env.r[7] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated ble .L_8000B2A0 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000B2A0; // ble .L_8000B2A0']
Translated cmplwi r7 0x8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[7] == 0x8) ? 0 : ((uint32_t)gc_env.r[7] < 0x8 ? -1 : 1); // Logical compare with immediate
Processing opcode: subi, operands: ['r3', 'r7', '0x8']
Translated subi r3 r7 0x8 to: ['gc_env.r[3] = gc_env.r[7] - 8; // subi r3, r7, 8']
Translated ble .L_8000B440 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000B440; // ble .L_8000B440']
Processing opcode: addi, operands: ['r0', 'r3', '0x7']
Translated addi r0 r3 0x7 to: ['gc_env.r[0] = gc_env.r[3] + 7; // addi r0, r3, 0x7']
Translated srwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] >> 3; // srwi r0, r0, 3']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated ble .L_8000B440 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000B440; // ble .L_8000B440']
Processing opcode: lwz, operands: ['r0', '0x80(r30)']
Translated lwz r0 0x80(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x80); // lwz r0, 0x80(r30)']
Processing opcode: addi, operands: ['r4', 'r4', '0x8']
Translated addi r4 r4 0x8 to: ['gc_env.r[4] += 8; // addi r4, r4, 0x8']
Processing opcode: stw, operands: ['r0', '0x0(r5)']
Translated stw r0 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stw r0, (r5)']
Processing opcode: lwz, operands: ['r0', '0x84(r30)']
Translated lwz r0 0x84(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x84); // lwz r0, 0x84(r30)']
Processing opcode: stw, operands: ['r0', '0x4(r5)']
Translated stw r0 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[0]); // stw r0, 0x4(r5)']
Processing opcode: lwz, operands: ['r0', '0x88(r30)']
Translated lwz r0 0x88(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x88); // lwz r0, 0x88(r30)']
Processing opcode: stw, operands: ['r0', '0x8(r5)']
Translated stw r0 0x8(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x8, gc_env.r[0]); // stw r0, 0x8(r5)']
Processing opcode: lwz, operands: ['r0', '0x8c(r30)']
Translated lwz r0 0x8c(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x8C); // lwz r0, 0x8C(r30)']
Processing opcode: stw, operands: ['r0', '0xc(r5)']
Translated stw r0 0xc(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0xC, gc_env.r[0]); // stw r0, 0xC(r5)']
Processing opcode: lwz, operands: ['r0', '0x90(r30)']
Translated lwz r0 0x90(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x90); // lwz r0, 0x90(r30)']
Processing opcode: stw, operands: ['r0', '0x10(r5)']
Translated stw r0 0x10(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x10, gc_env.r[0]); // stw r0, 0x10(r5)']
Processing opcode: lwz, operands: ['r0', '0x94(r30)']
Translated lwz r0 0x94(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x94); // lwz r0, 0x94(r30)']
Processing opcode: stw, operands: ['r0', '0x14(r5)']
Translated stw r0 0x14(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x14, gc_env.r[0]); // stw r0, 0x14(r5)']
Processing opcode: lwz, operands: ['r0', '0x98(r30)']
Translated lwz r0 0x98(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x98); // lwz r0, 0x98(r30)']
Processing opcode: stw, operands: ['r0', '0x18(r5)']
Translated stw r0 0x18(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x18, gc_env.r[0]); // stw r0, 0x18(r5)']
Processing opcode: lwz, operands: ['r0', '0x9c(r30)']
Translated lwz r0 0x9c(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x9C); // lwz r0, 0x9C(r30)']
Processing opcode: addi, operands: ['r30', 'r30', '0x20']
Translated addi r30 r30 0x20 to: ['gc_env.r[30] += 32; // addi r30, r30, 0x20']
Processing opcode: stw, operands: ['r0', '0x1c(r5)']
Translated stw r0 0x1c(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r5)']
Processing opcode: addi, operands: ['r5', 'r5', '0x20']
Translated addi r5 r5 0x20 to: ['gc_env.r[5] += 32; // addi r5, r5, 0x20']
Translated bdnz .L_8000B224 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8000B224;']
Translated b .L_8000B440 to: goto L_8000B440;
Processing opcode: subf, operands: ['r0', 'r4', 'r7']
Translated subf r0 r4 r7 to: ['gc_env.r[0] = gc_env.r[7] - gc_env.r[4]; // subf r0, r4, r7']
Translated cmplw r4 r7 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[7]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[7] ? -1 : 1); // Logical compare word
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bge .L_8000B2A0 to: if (gc_env.cr[0] >= 0) goto L_8000B2A0;
Processing opcode: lwz, operands: ['r0', '0x80(r3)']
Translated lwz r0 0x80(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x80); // lwz r0, 0x80(r3)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4']
Translated addi r3 r3 0x4 to: ['gc_env.r[3] += 4; // addi r3, r3, 0x4']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Processing opcode: stw, operands: ['r0', '0x0(r5)']
Translated stw r0 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stw r0, (r5)']
Processing opcode: addi, operands: ['r5', 'r5', '0x4']
Translated addi r5 r5 0x4 to: ['gc_env.r[5] += 4; // addi r5, r5, 0x4']
Translated bdnz .L_8000B288 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8000B288;']
Processing opcode: lwz, operands: ['r0', '0x0(r6)']
Translated lwz r0 0x0(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r0, (r6)']
Translated clrlwi. r3 r0 30 to: ['gc_env.r[3] = gc_env.r[0] & 0x3; // clrlwi r3, r0, 30']
Translated beq .L_8000B3B8 to: if (gc_env.cr[0] == 0) goto L_8000B3B8;
Translated lis r6 0xcc00 to: ['gc_env.r[6] = -13312 << 16; // lis r6, 0xcc00']
Processing opcode: addi, operands: ['r6', 'r6', '0x6400']
Translated addi r6 r6 0x6400 to: ['gc_env.r[6] += 25600; // addi r6, r6, 0x6400']
Translated slwi r0 r4 2 to: ['gc_env.r[0] = gc_env.r[4] << 2; // slwi r0, r4, 2']
Processing opcode: add, operands: ['r4', 'r6', 'r0']
Translated add r4 r6 r0 to: ['gc_env.r[4] = gc_env.r[6] + gc_env.r[0]; // add r4, r6, r0']
Processing opcode: lwz, operands: ['r6', '0x80(r4)']
Translated lwz r6 0x80(r4) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x80); // lwz r6, 0x80(r4)']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated ble .L_8000B3B8 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000B3B8; // ble .L_8000B3B8']
Translated cmplwi r3 0x8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x8) ? 0 : ((uint32_t)gc_env.r[3] < 0x8 ? -1 : 1); // Logical compare with immediate
Processing opcode: subi, operands: ['r7', 'r3', '0x8']
Translated subi r7 r3 0x8 to: ['gc_env.r[7] = gc_env.r[3] - 8; // subi r7, r3, 8']
Translated ble .L_8000B38C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000B38C; // ble .L_8000B38C']
Processing opcode: addi, operands: ['r0', 'r7', '0x7']
Translated addi r0 r7 0x7 to: ['gc_env.r[0] = gc_env.r[7] + 7; // addi r0, r7, 0x7']
Translated srwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] >> 3; // srwi r0, r0, 3']
Translated cmplwi r7 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[7] == 0x0) ? 0 : ((uint32_t)gc_env.r[7] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated ble .L_8000B38C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000B38C; // ble .L_8000B38C']
Translated subfic r0 r4 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[4]; // subfic r0, r4, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[4] ? 0x20000000 : 0);']
Translated slwi r7 r0 3 to: ['gc_env.r[7] = gc_env.r[0] << 3; // slwi r7, r0, 3']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Translated srw r7 r6 r7 to: ['gc_env.r[7] = gc_env.r[6] >> (gc_env.r[7] & 31); // srw r7, r6, r7']
Translated subfic r0 r0 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[0]; // subfic r0, r0, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[0] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r7', '0x0(r5)']
Translated stb r7 0x0(r5) to: ['gc_mem_write8(gc_env.ram, gc_env.r[5], gc_env.r[7]); // stb r7, (r5)']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Processing opcode: addi, operands: ['r7', 'r4', '0x2']
Translated addi r7 r4 0x2 to: ['gc_env.r[7] = gc_env.r[4] + 2; // addi r7, r4, 0x2']
Translated srw r0 r6 r0 to: ['gc_env.r[0] = gc_env.r[6] >> (gc_env.r[0] & 31); // srw r0, r6, r0']
Translated subfic r7 r7 0x3 to: ['gc_env.r[7] = 3 - gc_env.r[7]; // subfic r7, r7, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[7] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r0', '0x1(r5)']
Translated stb r0 0x1(r5) to: ['gc_mem_write8(gc_env.ram, gc_env.r[5] + 0x1, gc_env.r[0]); // stb r0, 0x1(r5)']
Translated slwi r7 r7 3 to: ['gc_env.r[7] = gc_env.r[7] << 3; // slwi r7, r7, 3']
Translated srw r12 r6 r7 to: ['gc_env.r[12] = gc_env.r[6] >> (gc_env.r[7] & 31); // srw r12, r6, r7']
Translated neg r7 r4 to: ['gc_env.r[7] = -(int32_t)gc_env.r[4]; // neg r7, r4']
Processing opcode: stb, operands: ['r12', '0x2(r5)']
Translated stb r12 0x2(r5) to: ['gc_mem_write8(gc_env.ram, gc_env.r[5] + 0x2, gc_env.r[12]); // stb r12, 0x2(r5)']
Translated slwi r8 r7 3 to: ['gc_env.r[8] = gc_env.r[7] << 3; // slwi r8, r7, 3']
Processing opcode: addi, operands: ['r7', 'r4', '0x4']
Translated addi r7 r4 0x4 to: ['gc_env.r[7] = gc_env.r[4] + 4; // addi r7, r4, 0x4']
Translated srw r11 r6 r8 to: ['gc_env.r[11] = gc_env.r[6] >> (gc_env.r[8] & 31); // srw r11, r6, r8']
Translated subfic r7 r7 0x3 to: ['gc_env.r[7] = 3 - gc_env.r[7]; // subfic r7, r7, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[7] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r11', '0x3(r5)']
Translated stb r11 0x3(r5) to: ['gc_mem_write8(gc_env.ram, gc_env.r[5] + 0x3, gc_env.r[11]); // stb r11, 0x3(r5)']
Translated slwi r8 r7 3 to: ['gc_env.r[8] = gc_env.r[7] << 3; // slwi r8, r7, 3']
Processing opcode: addi, operands: ['r7', 'r4', '0x5']
Translated addi r7 r4 0x5 to: ['gc_env.r[7] = gc_env.r[4] + 5; // addi r7, r4, 0x5']
Translated srw r10 r6 r8 to: ['gc_env.r[10] = gc_env.r[6] >> (gc_env.r[8] & 31); // srw r10, r6, r8']
Translated subfic r7 r7 0x3 to: ['gc_env.r[7] = 3 - gc_env.r[7]; // subfic r7, r7, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[7] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r10', '0x4(r5)']
Translated stb r10 0x4(r5) to: ['gc_mem_write8(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[10]); // stb r10, 0x4(r5)']
Translated slwi r8 r7 3 to: ['gc_env.r[8] = gc_env.r[7] << 3; // slwi r8, r7, 3']
Translated srw r9 r6 r8 to: ['gc_env.r[9] = gc_env.r[6] >> (gc_env.r[8] & 31); // srw r9, r6, r8']
Processing opcode: addi, operands: ['r7', 'r4', '0x6']
Translated addi r7 r4 0x6 to: ['gc_env.r[7] = gc_env.r[4] + 6; // addi r7, r4, 0x6']
Processing opcode: stb, operands: ['r9', '0x5(r5)']
Translated stb r9 0x5(r5) to: ['gc_mem_write8(gc_env.ram, gc_env.r[5] + 0x5, gc_env.r[9]); // stb r9, 0x5(r5)']
Translated subfic r8 r7 0x3 to: ['gc_env.r[8] = 3 - gc_env.r[7]; // subfic r8, r7, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[7] ? 0x20000000 : 0);']
Processing opcode: addi, operands: ['r7', 'r4', '0x7']
Translated addi r7 r4 0x7 to: ['gc_env.r[7] = gc_env.r[4] + 7; // addi r7, r4, 0x7']
Translated slwi r8 r8 3 to: ['gc_env.r[8] = gc_env.r[8] << 3; // slwi r8, r8, 3']
Translated srw r8 r6 r8 to: ['gc_env.r[8] = gc_env.r[6] >> (gc_env.r[8] & 31); // srw r8, r6, r8']
Translated subfic r7 r7 0x3 to: ['gc_env.r[7] = 3 - gc_env.r[7]; // subfic r7, r7, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[7] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r8', '0x6(r5)']
Translated stb r8 0x6(r5) to: ['gc_mem_write8(gc_env.ram, gc_env.r[5] + 0x6, gc_env.r[8]); // stb r8, 0x6(r5)']
Translated slwi r7 r7 3 to: ['gc_env.r[7] = gc_env.r[7] << 3; // slwi r7, r7, 3']
Translated srw r7 r6 r7 to: ['gc_env.r[7] = gc_env.r[6] >> (gc_env.r[7] & 31); // srw r7, r6, r7']
Processing opcode: stb, operands: ['r7', '0x7(r5)']
Translated stb r7 0x7(r5) to: ['gc_mem_write8(gc_env.ram, gc_env.r[5] + 0x7, gc_env.r[7]); // stb r7, 0x7(r5)']
Processing opcode: addi, operands: ['r5', 'r5', '0x8']
Translated addi r5 r5 0x8 to: ['gc_env.r[5] += 8; // addi r5, r5, 0x8']
Processing opcode: addi, operands: ['r4', 'r4', '0x8']
Translated addi r4 r4 0x8 to: ['gc_env.r[4] += 8; // addi r4, r4, 0x8']
Translated bdnz .L_8000B2E8 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8000B2E8;']
Processing opcode: subf, operands: ['r0', 'r4', 'r3']
Translated subf r0 r4 r3 to: ['gc_env.r[0] = gc_env.r[3] - gc_env.r[4]; // subf r0, r4, r3']
Translated cmplw r4 r3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[3]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[3] ? -1 : 1); // Logical compare word
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bge .L_8000B3B8 to: if (gc_env.cr[0] >= 0) goto L_8000B3B8;
Translated subfic r0 r4 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[4]; // subfic r0, r4, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[4] ? 0x20000000 : 0);']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Translated srw r0 r6 r0 to: ['gc_env.r[0] = gc_env.r[6] >> (gc_env.r[0] & 31); // srw r0, r6, r0']
Processing opcode: stb, operands: ['r0', '0x0(r5)']
Translated stb r0 0x0(r5) to: ['gc_mem_write8(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stb r0, (r5)']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Translated bdnz .L_8000B39C to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8000B39C;']
Processing opcode: lwz, operands: ['r0', '0x0(r29)']
Translated lwz r0 0x0(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29]); // lwz r0, (r29)']
Translated rlwinm. r0 r0 0 2 2 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x20000000; // rlwinm r0, r0, 0, 2, 2', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000B40C to: if (gc_env.cr[0] == 0) goto L_8000B40C;
Processing opcode: lwz, operands: ['r3', '0x0(r31)']
Translated lwz r3 0x0(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r3, (r31)']
Translated subfic r0 r3 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[3]; // subfic r0, r3, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[3] ? 0x20000000 : 0);']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Translated srw r28 r28 r0 to: ['gc_env.r[28] = gc_env.r[28] >> (gc_env.r[0] & 31); // srw r28, r28, r0']
Translated clrlwi r28 r28 28 to: ['gc_env.r[28] = gc_env.r[28] & 0xF; // clrlwi r28, r28, 28']
Translated rlwinm. r0 r28 0 28 28 to: ['gc_env.r[0] = (gc_env.r[28] << 0) & 0x8; // rlwinm r0, r28, 0, 28, 28', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000B3FC to: if (gc_env.cr[0] == 0) goto L_8000B3FC;
Translated slwi r0 r3 2 to: ['gc_env.r[0] = gc_env.r[3] << 2; // slwi r0, r3, 2']
Processing opcode: add, operands: ['r3', 'r31', 'r0']
Translated add r3 r31 r0 to: ['gc_env.r[3] = gc_env.r[31] + gc_env.r[0]; // add r3, r31, r0']
Processing opcode: lwzu, operands: ['r0', '0x14(r3)']
Translated lwzu r0 0x14(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x14); // lwzu r0, 0x14(r3)', 'gc_env.r[3] = gc_env.r[3] + 0x14;']
Translated rlwinm. r0 r0 0 24 24 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x80; // rlwinm r0, r0, 0, 24, 24', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_8000B3FC to: if (gc_env.cr[0] != 0) goto L_8000B3FC;
Processing opcode: li, operands: ['r0', '0x8']
Translated li r0 0x8 to: ['gc_env.r[0] = 0x8; // li r0, 0x8']
Processing opcode: stw, operands: ['r0', '0x0(r3)']
Translated stw r0 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[0]); // stw r0, (r3)']
Translated cmplwi r28 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[28] == 0x0) ? 0 : ((uint32_t)gc_env.r[28] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000B430 to: if (gc_env.cr[0] != 0) goto L_8000B430;
Processing opcode: li, operands: ['r28', '0x4']
Translated li r28 0x4 to: ['gc_env.r[28] = 0x4; // li r28, 0x4']
Translated b .L_8000B430 to: goto L_8000B430;
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: lwz, operands: ['r6', '0x0(r31)']
Translated lwz r6 0x0(r31) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r6, (r31)']
Translated lis r5 TypeTime_8001C7E0@ha to: ['gc_env.r[5] = ((uint32_t)&TypeTime_8001C7E0 >> 16) & 0xFFFF; // lis r5, TypeTime_8001C7E0@ha']
Processing opcode: addi, operands: ['r0', 'r5', 'TypeTime_8001C7E0@l']
Translated addi r0 r5 TypeTime_8001C7E0@l to: ['gc_env.r[0] = (uint32_t)&TypeTime_8001C7E0; // lis + addi TypeTime_8001C7E0 (completing pattern)']
Translated slwi r5 r6 3 to: ['gc_env.r[5] = gc_env.r[6] << 3; // slwi r5, r6, 3']
Processing opcode: add, operands: ['r5', 'r0', 'r5']
Translated add r5 r0 r5 to: ['gc_env.r[5] = gc_env.r[0] + gc_env.r[5]; // add r5, r0, r5']
Processing opcode: stw, operands: ['r4', '0x4(r5)']
Translated stw r4 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[4]); // stw r4, 0x4(r5)']
Processing opcode: li, operands: ['r28', '0x0']
Translated li r28 0x0 to: ['gc_env.r[28] = 0x0; // li r28, 0x0']
Processing opcode: stw, operands: ['r3', '0x0(r5)']
Translated stw r3 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[3]); // stw r3, (r5)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r0', '0x0(r31)']
Translated stw r0 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stw r0, (r31)']
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Translated b .L_8000B454 to: goto L_8000B454;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Translated slwi r0 r4 2 to: ['gc_env.r[0] = gc_env.r[4] << 2; // slwi r0, r4, 2']
Processing opcode: addi, operands: ['r3', 'r3', '0x6400']
Translated addi r3 r3 0x6400 to: ['gc_env.r[3] += 25600; // addi r3, r3, 0x6400']
Processing opcode: add, operands: ['r3', 'r3', 'r0']
Translated add r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] + gc_env.r[0]; // add r3, r3, r0']
Translated b .L_8000B278 to: goto L_8000B278;
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: lwz, operands: ['r29', '0x14(r1)']
Translated lwz r29 0x14(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r29, 0x14(r1)']
Processing opcode: lwz, operands: ['r28', '0x10(r1)']
Translated lwz r28 0x10(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r28, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r5 0xcc00 to: ['gc_env.r[5] = -13312 << 16; // lis r5, 0xcc00']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Translated lis r7 Packet_8001C6C0@ha to: ['gc_env.r[7] = ((uint32_t)&Packet_8001C6C0 >> 16) & 0xFFFF; // lis r7, Packet_8001C6C0@ha']
Translated lis r6 Si_8001B088@ha to: ['gc_env.r[6] = ((uint32_t)&Si_8001B088 >> 16) & 0xFFFF; // lis r6, Si_8001B088@ha']
Processing opcode: stwu, operands: ['r1', '-0x48(r1)']
Translated stwu r1 -0x48(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x48, gc_env.r[1]); // stwu r1, -0x48(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x48;']
Translated stmw r21 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[21]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[22]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[23]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[24]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[25]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[26]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[27]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[28]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[29]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x40, gc_env.r[30]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x44, gc_env.r[31]); // stmw r21, 0x1C(r1)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Processing opcode: addi, operands: ['r31', 'r4', '0x0']
Translated addi r31 r4 0x0 to: ['gc_env.r[31] = gc_env.r[4] + 0; // addi r31, r4, 0x0']
Processing opcode: addi, operands: ['r28', 'r7', 'Packet_8001C6C0@l']
Translated addi r28 r7 Packet_8001C6C0@l to: ['gc_env.r[28] = gc_env.r[7] + ((uint32_t)&Packet_8001C6C0 & 0xFFFF); // addi r28, r7, Packet_8001C6C0@l']
Processing opcode: addi, operands: ['r29', 'r6', 'Si_8001B088@l']
Translated addi r29 r6 Si_8001B088@l to: ['gc_env.r[29] = gc_env.r[6] + ((uint32_t)&Si_8001B088 & 0xFFFF); // addi r29, r6, Si_8001B088@l']
Processing opcode: lwz, operands: ['r24', '0x6434(r5)']
Translated lwz r24 0x6434(r5) to: ['gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x6434); // lwz r24, 0x6434(r5)']
Translated clrrwi r5 r24 30 to: gc_env.r[5] = gc_env.r[24] & ~((1ULL << 30) - 1); // Clear rightmost 30 bits
Processing opcode: addis, operands: ['r0', 'r5', '0x4000']
Translated addis r0 r5 0x4000 to: ['gc_env.r[0] = gc_env.r[5] + (16384 << 16); // addis r0, r5, 16384']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000B634 to: if (gc_env.cr[0] != 0) goto L_8000B634;
Processing opcode: lwz, operands: ['r23', '0x0(r29)']
Translated lwz r23 0x0(r29) to: ['gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[29]); // lwz r23, (r29)']
Translated bl fn_8000B178 to: fn_8000B178();
Processing opcode: lwz, operands: ['r21', '0x10(r29)']
Translated lwz r21 0x10(r29) to: ['gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x10); // lwz r21, 0x10(r29)']
Processing opcode: li, operands: ['r27', '0x0']
Translated li r27 0x0 to: ['gc_env.r[27] = 0x0; // li r27, 0x0']
Processing opcode: addi, operands: ['r22', 'r3', '0x0']
Translated addi r22 r3 0x0 to: ['gc_env.r[22] = gc_env.r[3] + 0; // addi r22, r3, 0x0']
Processing opcode: stw, operands: ['r27', '0x10(r29)']
Translated stw r27 0x10(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0x10, gc_env.r[27]); // stw r27, 0x10(r29)']
Processing opcode: addi, operands: ['r26', 'r23', '0x0']
Translated addi r26 r23 0x0 to: ['gc_env.r[26] = gc_env.r[23] + 0; // addi r26, r23, 0x0']
Processing opcode: addi, operands: ['r26', 'r26', '0x1']
Translated addi r26 r26 0x1 to: ['gc_env.r[26] += 1; // addi r26, r26, 0x1']
Translated srawi r0 r26 2 to: ['gc_env.r[0] = ((int32_t)gc_env.r[26]) >> 2; // srawi r0, r26, 2']
Translated addze r0 r0 to: ['uint64_t addze_temp = (uint64_t)gc_env.r[0] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[0] = (uint32_t)addze_temp; // addze r0, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addze_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated slwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] << 2; // slwi r0, r0, 2']
Translated subfc r0 r0 r26 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[26] - gc_env.r[0];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r0, r26', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[26] >= gc_env.r[0] ? 0x20000000 : 0);']
Translated mr r26 r0 to: gc_env.r[26] = gc_env.r[0]; // Move register
Translated slwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] << 5; // slwi r0, r0, 5']
Processing opcode: add, operands: ['r25', 'r28', 'r0']
Translated add r25 r28 r0 to: ['gc_env.r[25] = gc_env.r[28] + gc_env.r[0]; // add r25, r28, r0']
Processing opcode: lwz, operands: ['r0', '0x0(r25)']
Translated lwz r0 0x0(r25) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[25]); // lwz r0, (r25)']
Translated cmpwi r0 -0x1 to: gc_env.cr[0] = (gc_env.r[0] == -0x1) ? 0 : (gc_env.r[0] < -0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_8000B564 to: if (gc_env.cr[0] == 0) goto L_8000B564;
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: lwz, operands: ['r0', '0x18(r25)']
Translated lwz r0 0x18(r25) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[25] + 0x18); // lwz r0, 0x18(r25)']
Translated xoris r5 r3 0x8000 to: ['gc_env.r[5] = gc_env.r[3] ^ 0x80000000; // xoris r5, r3, 0x8000']
Processing opcode: lwz, operands: ['r6', '0x1c(r25)']
Translated lwz r6 0x1c(r25) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[25] + 0x1C); // lwz r6, 0x1C(r25)']
Translated xoris r3 r0 0x8000 to: ['gc_env.r[3] = gc_env.r[0] ^ 0x80000000; // xoris r3, r0, 0x8000']
Translated subfc r0 r6 r4 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[4] - gc_env.r[6];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r6, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= gc_env.r[6] ? 0x20000000 : 0);']
Translated subfe r3 r3 r5 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[5] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r3, r5', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r3 r5 r5 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[5] - gc_env.r[5] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r5, r5', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= (gc_env.r[5] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r3 r3 to: ['gc_env.r[3] = -(int32_t)gc_env.r[3]; // neg r3, r3']
Translated bne .L_8000B564 to: if (gc_env.cr[0] != 0) goto L_8000B564;
Processing opcode: lwz, operands: ['r3', '0x0(r25)']
Translated lwz r3 0x0(r25) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[25]); // lwz r3, (r25)']
Processing opcode: lwz, operands: ['r4', '0x4(r25)']
Translated lwz r4 0x4(r25) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[25] + 0x4); // lwz r4, 0x4(r25)']
Processing opcode: lwz, operands: ['r5', '0x8(r25)']
Translated lwz r5 0x8(r25) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[25] + 0x8); // lwz r5, 0x8(r25)']
Processing opcode: lwz, operands: ['r6', '0xc(r25)']
Translated lwz r6 0xc(r25) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[25] + 0xC); // lwz r6, 0xC(r25)']
Processing opcode: lwz, operands: ['r7', '0x10(r25)']
Translated lwz r7 0x10(r25) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[25] + 0x10); // lwz r7, 0x10(r25)']
Processing opcode: lwz, operands: ['r8', '0x14(r25)']
Translated lwz r8 0x14(r25) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[25] + 0x14); // lwz r8, 0x14(r25)']
Translated bl fn_8000B85C to: fn_8000B85C();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000B570 to: if (gc_env.cr[0] == 0) goto L_8000B570;
Processing opcode: mulli, operands: ['r0', 'r26', '0x28']
Translated mulli r0 r26 0x28 to: ['gc_env.r[0] = gc_env.r[26] * 40; // mulli r0, r26, 40']
Processing opcode: add, operands: ['r3', 'r28', 'r0']
Translated add r3 r28 r0 to: ['gc_env.r[3] = gc_env.r[28] + gc_env.r[0]; // add r3, r28, r0']
Processing opcode: addi, operands: ['r3', 'r3', '0x80']
Translated addi r3 r3 0x80 to: ['gc_env.r[3] += 128; // addi r3, r3, 0x80']
Translated bl fn_80006288 to: fn_80006288();
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r0', '0x0(r25)']
Translated stw r0 0x0(r25) to: ['gc_mem_write32(gc_env.ram, gc_env.r[25], gc_env.r[0]); // stw r0, (r25)']
Translated b .L_8000B570 to: goto L_8000B570;
Processing opcode: addi, operands: ['r27', 'r27', '0x1']
Translated addi r27 r27 0x1 to: ['gc_env.r[27] += 1; // addi r27, r27, 0x1']
Translated cmpwi r27 0x4 to: gc_env.cr[0] = (gc_env.r[27] == 0x4) ? 0 : (gc_env.r[27] < 0x4 ? -1 : 1); // Compare with immediate
Translated blt .L_8000B4D0 to: ['if (gc_env.cr[0] & 0x8) goto L_8000B4D0; // blt .L_8000B4D0']
Translated cmplwi r21 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[21] == 0x0) ? 0 : ((uint32_t)gc_env.r[21] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000B590 to: if (gc_env.cr[0] == 0) goto L_8000B590;
Processing opcode: addi, operands: ['r12', 'r21', '0x0']
Translated addi r12 r21 0x0 to: ['gc_env.r[12] = gc_env.r[21] + 0; // addi r12, r21, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r23', '0x0']
Translated addi r3 r23 0x0 to: ['gc_env.r[3] = gc_env.r[23] + 0; // addi r3, r23, 0x0']
Processing opcode: addi, operands: ['r4', 'r22', '0x0']
Translated addi r4 r22 0x0 to: ['gc_env.r[4] = gc_env.r[22] + 0; // addi r4, r22, 0x0']
Processing opcode: addi, operands: ['r5', 'r31', '0x0']
Translated addi r5 r31 0x0 to: ['gc_env.r[5] = gc_env.r[31] + 0; // addi r5, r31, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r4', 'r3', '0x6400']
Translated addi r4 r3 0x6400 to: ['gc_env.r[4] = gc_env.r[3] + 25600; // addi r4, r3, 0x6400']
Processing opcode: lwz, operands: ['r5', '0x6438(r3)']
Translated lwz r5 0x6438(r3) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6438); // lwz r5, 0x6438(r3)']
Translated slwi r0 r23 3 to: ['gc_env.r[0] = gc_env.r[23] << 3; // slwi r0, r23, 3']
Translated lis r3 0xf00 to: ['gc_env.r[3] = 3840 << 16; // lis r3, 0xf00']
Translated sraw r0 r3 r0 to: ['gc_env.r[0] = ((int32_t)gc_env.r[3]) >> (gc_env.r[0] & 31); // sraw r0, r3, r0']
Translated and r5 r5 r0 to: gc_env.r[5] = gc_env.r[5] & gc_env.r[0];
Translated slwi r0 r23 2 to: ['gc_env.r[0] = gc_env.r[23] << 2; // slwi r0, r23, 2']
Processing opcode: stw, operands: ['r5', '0x38(r4)']
Translated stw r5 0x38(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x38, gc_env.r[5]); // stw r5, 0x38(r4)']
Processing opcode: add, operands: ['r6', 'r29', 'r0']
Translated add r6 r29 r0 to: ['gc_env.r[6] = gc_env.r[29] + gc_env.r[0]; // add r6, r29, r0']
Processing opcode: lwzu, operands: ['r0', '0x14(r6)']
Translated lwzu r0 0x14(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x14); // lwzu r0, 0x14(r6)', 'gc_env.r[6] = gc_env.r[6] + 0x14;']
Translated cmplwi r0 0x80 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x80) ? 0 : ((uint32_t)gc_env.r[0] < 0x80 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000B634 to: if (gc_env.cr[0] != 0) goto L_8000B634;
Translated slwi r0 r23 5 to: ['gc_env.r[0] = gc_env.r[23] << 5; // slwi r0, r23, 5']
Translated lwzx r0 r28 r0 to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[28] + gc_env.r[0]); // lwzx r0, r28, r0']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated cmpwi r0 -0x1 to: gc_env.cr[0] = (gc_env.r[0] == -0x1) ? 0 : (gc_env.r[0] < -0x1 ? -1 : 1); // Compare with immediate
Translated bne .L_8000B5E8 to: if (gc_env.cr[0] != 0) goto L_8000B5E8;
Processing opcode: lwz, operands: ['r0', '0x0(r29)']
Translated lwz r0 0x0(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29]); // lwz r0, (r29)']
Translated cmpw r0 r23 to: ['gc_env.cr[0] = (int32_t)gc_env.r[0] < (int32_t)gc_env.r[23] ? 0x8 : ((int32_t)gc_env.r[0] > (int32_t)gc_env.r[23] ? 0x4 : 0x2); // cmpw r0, r23']
Translated beq .L_8000B5E8 to: if (gc_env.cr[0] == 0) goto L_8000B5E8;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000B634 to: if (gc_env.cr[0] != 0) goto L_8000B634;
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r0', '0xf8(r3)']
Translated lwz r0 0xf8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xF8); // lwz r0, 0xF8(r3)']
Translated lis r3 0x431c to: ['gc_env.r[3] = 17180 << 16; // lis r3, 0x431c']
Translated lis r4 GetTypeCallback@ha to: ['gc_env.r[4] = ((uint32_t)&GetTypeCallback >> 16) & 0xFFFF; // lis r4, GetTypeCallback@ha']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Processing opcode: subi, operands: ['r3', 'r3', '0x217d']
Translated subi r3 r3 0x217d to: ['gc_env.r[3] = gc_env.r[3] - 8573; // subi r3, r3, 8573']
Translated mulhwu r0 r3 r0 to: ['gc_env.r[0] = (uint32_t)(((uint64_t)gc_env.r[3] * (uint64_t)gc_env.r[0]) >> 32); // mulhwu r0, r3, r0']
Translated srwi r0 r0 15 to: ['gc_env.r[0] = gc_env.r[0] >> 15; // srwi r0, r0, 15']
Processing opcode: mulli, operands: ['r0', 'r0', '0x41']
Translated mulli r0 r0 0x41 to: ['gc_env.r[0] = gc_env.r[0] * 65; // mulli r0, r0, 65']
Processing opcode: addi, operands: ['r8', 'r4', 'GetTypeCallback@l']
Translated addi r8 r4 GetTypeCallback@l to: ['gc_env.r[8] = gc_env.r[4] + ((uint32_t)&GetTypeCallback & 0xFFFF); // addi r8, r4, GetTypeCallback@l']
Translated srwi r10 r0 3 to: ['gc_env.r[10] = gc_env.r[0] >> 3; // srwi r10, r0, 3']
Processing opcode: addi, operands: ['r3', 'r23', '0x0']
Translated addi r3 r23 0x0 to: ['gc_env.r[3] = gc_env.r[23] + 0; // addi r3, r23, 0x0']
Processing opcode: li, operands: ['r4', 'lbl_8001EF00@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: li, operands: ['r7', '0x3']
Translated li r7 0x3 to: ['gc_env.r[7] = 0x3; // li r7, 0x3']
Processing opcode: li, operands: ['r9', '0x0']
Translated li r9 0x0 to: ['gc_env.r[9] = 0x0; // li r9, 0x0']
Translated bl SITransfer to: SITransfer();
Translated rlwinm r3 r24 0 3 4 to: ['gc_env.r[3] = (gc_env.r[24] << 0) & 0x18000000; // rlwinm r3, r24, 0, 3, 4']
Processing opcode: subis, operands: ['r0', 'r3', '0x1800']
Translated subis r0 r3 0x1800 to: ['gc_env.r[0] = gc_env.r[3] - (6144 << 16); // subis r0, r3, 6144']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000B7A4 to: if (gc_env.cr[0] != 0) goto L_8000B7A4;
Translated bl fn_80011200 to: fn_80011200();
Processing opcode: lwz, operands: ['r0', '0x4(r29)']
Translated lwz r0 0x4(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x4); // lwz r0, 0x4(r29)']
Processing opcode: addi, operands: ['r23', 'r28', '0x1e0']
Translated addi r23 r28 0x1e0 to: ['gc_env.r[23] = gc_env.r[28] + 480; // addi r23, r28, 0x1e0']
Processing opcode: addi, operands: ['r24', 'r29', '0x4']
Translated addi r24 r29 0x4 to: ['gc_env.r[24] = gc_env.r[29] + 4; // addi r24, r29, 0x4']
Processing opcode: addi, operands: ['r22', 'r23', '0x0']
Translated addi r22 r23 0x0 to: ['gc_env.r[22] = gc_env.r[23] + 0; // addi r22, r23, 0x0']
Processing opcode: addi, operands: ['r21', 'r3', '0x1']
Translated addi r21 r3 0x1 to: ['gc_env.r[21] = gc_env.r[3] + 1; // addi r21, r3, 0x1']
Translated extrwi r26 r0 10 6 to: ['gc_env.r[26] = (gc_env.r[0] >> 16) & 0x3FF; // extrwi r26, r0, 10, 6']
Processing opcode: li, operands: ['r25', '0x0']
Translated li r25 0x0 to: ['gc_env.r[25] = 0x0; // li r25, 0x0']
Translated mr r3 r25 to: gc_env.r[3] = gc_env.r[25]; // Move register
Translated bl fn_8000BAD4 to: fn_8000BAD4();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000B678 to: if (gc_env.cr[0] == 0) goto L_8000B678;
Processing opcode: stw, operands: ['r21', '0x0(r22)']
Translated stw r21 0x0(r22) to: ['gc_mem_write32(gc_env.ram, gc_env.r[22], gc_env.r[21]); // stw r21, (r22)']
Processing opcode: addi, operands: ['r25', 'r25', '0x1']
Translated addi r25 r25 0x1 to: ['gc_env.r[25] += 1; // addi r25, r25, 0x1']
Translated cmpwi r25 0x4 to: gc_env.cr[0] = (gc_env.r[25] == 0x4) ? 0 : (gc_env.r[25] < 0x4 ? -1 : 1); // Compare with immediate
Processing opcode: addi, operands: ['r22', 'r22', '0x4']
Translated addi r22 r22 0x4 to: ['gc_env.r[22] += 4; // addi r22, r22, 0x4']
Translated blt .L_8000B664 to: ['if (gc_env.cr[0] & 0x8) goto L_8000B664; // blt .L_8000B664']
Processing opcode: lwz, operands: ['r5', '0x0(r24)']
Translated lwz r5 0x0(r24) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[24]); // lwz r5, (r24)']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: li, operands: ['r0', '0x18']
Translated li r0 0x18 to: ['gc_env.r[0] = 0x18; // li r0, 0x18']
Translated srw r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] >> (gc_env.r[0] & 31); // srw r0, r3, r0']
Translated and. r0 r5 r0 to: gc_env.r[0] = gc_env.r[5] & gc_env.r[0];
Translated srwi r6 r26 1 to: ['gc_env.r[6] = gc_env.r[26] >> 1; // srwi r6, r26, 1']
Translated beq .L_8000B6C4 to: if (gc_env.cr[0] == 0) goto L_8000B6C4;
Processing opcode: lwz, operands: ['r0', '0x0(r23)']
Translated lwz r0 0x0(r23) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[23]); // lwz r0, (r23)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000B7A4 to: if (gc_env.cr[0] == 0) goto L_8000B7A4;
Processing opcode: lwz, operands: ['r0', '0x0(r23)']
Translated lwz r0 0x0(r23) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[23]); // lwz r0, (r23)']
Processing opcode: add, operands: ['r0', 'r6', 'r0']
Translated add r0 r6 r0 to: ['gc_env.r[0] = gc_env.r[6] + gc_env.r[0]; // add r0, r6, r0']
Translated cmplw r0 r21 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[21]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[21] ? -1 : 1); // Logical compare word
Translated bge .L_8000B6C4 to: if (gc_env.cr[0] >= 0) goto L_8000B6C4;
Translated b .L_8000B7A4 to: goto L_8000B7A4;
Processing opcode: li, operands: ['r0', '0x19']
Translated li r0 0x19 to: ['gc_env.r[0] = 0x19; // li r0, 0x19']
Translated srw r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] >> (gc_env.r[0] & 31); // srw r0, r3, r0']
Translated and. r0 r5 r0 to: gc_env.r[0] = gc_env.r[5] & gc_env.r[0];
Processing opcode: addi, operands: ['r4', 'r23', '0x4']
Translated addi r4 r23 0x4 to: ['gc_env.r[4] = gc_env.r[23] + 4; // addi r4, r23, 0x4']
Translated beq .L_8000B6F8 to: if (gc_env.cr[0] == 0) goto L_8000B6F8;
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000B7A4 to: if (gc_env.cr[0] == 0) goto L_8000B7A4;
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Processing opcode: add, operands: ['r0', 'r6', 'r0']
Translated add r0 r6 r0 to: ['gc_env.r[0] = gc_env.r[6] + gc_env.r[0]; // add r0, r6, r0']
Translated cmplw r0 r21 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[21]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[21] ? -1 : 1); // Logical compare word
Translated bge .L_8000B6F8 to: if (gc_env.cr[0] >= 0) goto L_8000B6F8;
Translated b .L_8000B7A4 to: goto L_8000B7A4;
Processing opcode: li, operands: ['r0', '0x1a']
Translated li r0 0x1a to: ['gc_env.r[0] = 0x1a; // li r0, 0x1a']
Translated srw r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] >> (gc_env.r[0] & 31); // srw r0, r3, r0']
Translated and. r0 r5 r0 to: gc_env.r[0] = gc_env.r[5] & gc_env.r[0];
Processing opcode: addi, operands: ['r4', 'r4', '0x4']
Translated addi r4 r4 0x4 to: ['gc_env.r[4] += 4; // addi r4, r4, 0x4']
Translated beq .L_8000B72C to: if (gc_env.cr[0] == 0) goto L_8000B72C;
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000B7A4 to: if (gc_env.cr[0] == 0) goto L_8000B7A4;
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Processing opcode: add, operands: ['r0', 'r6', 'r0']
Translated add r0 r6 r0 to: ['gc_env.r[0] = gc_env.r[6] + gc_env.r[0]; // add r0, r6, r0']
Translated cmplw r0 r21 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[21]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[21] ? -1 : 1); // Logical compare word
Translated bge .L_8000B72C to: if (gc_env.cr[0] >= 0) goto L_8000B72C;
Translated b .L_8000B7A4 to: goto L_8000B7A4;
Processing opcode: li, operands: ['r0', '0x1b']
Translated li r0 0x1b to: ['gc_env.r[0] = 0x1b; // li r0, 0x1b']
Translated srw r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] >> (gc_env.r[0] & 31); // srw r0, r3, r0']
Translated and. r0 r5 r0 to: gc_env.r[0] = gc_env.r[5] & gc_env.r[0];
Processing opcode: addi, operands: ['r4', 'r4', '0x4']
Translated addi r4 r4 0x4 to: ['gc_env.r[4] += 4; // addi r4, r4, 0x4']
Translated beq .L_8000B760 to: if (gc_env.cr[0] == 0) goto L_8000B760;
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000B7A4 to: if (gc_env.cr[0] == 0) goto L_8000B7A4;
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Processing opcode: add, operands: ['r0', 'r6', 'r0']
Translated add r0 r6 r0 to: ['gc_env.r[0] = gc_env.r[6] + gc_env.r[0]; // add r0, r6, r0']
Translated cmplw r0 r21 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[21]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[21] ? -1 : 1); // Logical compare word
Translated bge .L_8000B760 to: if (gc_env.cr[0] >= 0) goto L_8000B760;
Translated b .L_8000B7A4 to: goto L_8000B7A4;
Processing opcode: li, operands: ['r22', '0x0']
Translated li r22 0x0 to: ['gc_env.r[22] = 0x0; // li r22, 0x0']
Processing opcode: stw, operands: ['r22', '0x0(r23)']
Translated stw r22 0x0(r23) to: ['gc_mem_write32(gc_env.ram, gc_env.r[23], gc_env.r[22]); // stw r22, (r23)']
Processing opcode: addi, operands: ['r21', 'r28', '0x1a0']
Translated addi r21 r28 0x1a0 to: ['gc_env.r[21] = gc_env.r[28] + 416; // addi r21, r28, 0x1a0']
Processing opcode: stw, operands: ['r22', '0x1e4(r28)']
Translated stw r22 0x1e4(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28] + 0x1E4, gc_env.r[22]); // stw r22, 0x1E4(r28)']
Processing opcode: stw, operands: ['r22', '0x1e8(r28)']
Translated stw r22 0x1e8(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28] + 0x1E8, gc_env.r[22]); // stw r22, 0x1E8(r28)']
Processing opcode: stw, operands: ['r22', '0x1ec(r28)']
Translated stw r22 0x1ec(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28] + 0x1EC, gc_env.r[22]); // stw r22, 0x1EC(r28)']
Processing opcode: lwz, operands: ['r12', '0x0(r21)']
Translated lwz r12 0x0(r21) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[21]); // lwz r12, (r21)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000B794 to: if (gc_env.cr[0] == 0) goto L_8000B794;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: addi, operands: ['r22', 'r22', '0x1']
Translated addi r22 r22 0x1 to: ['gc_env.r[22] += 1; // addi r22, r22, 0x1']
Translated cmpwi r22 0x4 to: gc_env.cr[0] = (gc_env.r[22] == 0x4) ? 0 : (gc_env.r[22] < 0x4 ? -1 : 1); // Compare with immediate
Processing opcode: addi, operands: ['r21', 'r21', '0x4']
Translated addi r21 r21 0x4 to: ['gc_env.r[21] += 4; // addi r21, r21, 0x4']
Translated blt .L_8000B778 to: ['if (gc_env.cr[0] & 0x8) goto L_8000B778; // blt .L_8000B778']
Translated lmw r21 0x1c(r1) to: ['gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r21, 0x1C(r1)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r21, 0x1C(r1)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r21, 0x1C(r1)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r21, 0x1C(r1)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r21, 0x1C(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r21, 0x1C(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r21, 0x1C(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x38); // lmw r21, 0x1C(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lmw r21, 0x1C(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x40); // lmw r21, 0x1C(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lmw r21, 0x1C(r1)']
Processing opcode: lwz, operands: ['r0', '0x4c(r1)']
Translated lwz r0 0x4c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4C); // lwz r0, 0x4C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x48']
Translated addi r1 r1 0x48 to: ['gc_env.r[1] += 72; // addi r1, r1, 0x48']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 Packet_8001C6C0@ha to: ['gc_env.r[3] = ((uint32_t)&Packet_8001C6C0 >> 16) & 0xFFFF; // lis r3, Packet_8001C6C0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r6', 'r3', 'Packet_8001C6C0@l']
Translated addi r6 r3 Packet_8001C6C0@l to: ['gc_env.r[6] = gc_env.r[3] + ((uint32_t)&Packet_8001C6C0 & 0xFFFF); // addi r6, r3, Packet_8001C6C0@l']
Translated lis r3 Si_8001B088@ha to: ['gc_env.r[3] = ((uint32_t)&Si_8001B088 >> 16) & 0xFFFF; // lis r3, Si_8001B088@ha']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: li, operands: ['r5', '-0x1']
Translated li r5 -0x1 to: ['gc_env.r[5] = -0x1; // li r5, -0x1']
Processing opcode: addi, operands: ['r4', 'r3', 'Si_8001B088@l']
Translated addi r4 r3 Si_8001B088@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&Si_8001B088 & 0xFFFF); // addi r4, r3, Si_8001B088@l']
Processing opcode: stw, operands: ['r5', '0x60(r6)']
Translated stw r5 0x60(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x60, gc_env.r[5]); // stw r5, 0x60(r6)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stw, operands: ['r5', '0x40(r6)']
Translated stw r5 0x40(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x40, gc_env.r[5]); // stw r5, 0x40(r6)']
Processing opcode: stw, operands: ['r5', '0x20(r6)']
Translated stw r5 0x20(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x20, gc_env.r[5]); // stw r5, 0x20(r6)']
Processing opcode: stw, operands: ['r5', '0x0(r6)']
Translated stw r5 0x0(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6], gc_env.r[5]); // stw r5, (r6)']
Processing opcode: stw, operands: ['r0', '0x4(r4)']
Translated stw r0 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[0]); // stw r0, 0x4(r4)']
Translated bl SISetSamplingRate to: SISetSamplingRate();
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r4', 'r3', '0x6400']
Translated addi r4 r3 0x6400 to: ['gc_env.r[4] = gc_env.r[3] + 25600; // addi r4, r3, 0x6400']
Processing opcode: lwzu, operands: ['r0', '0x34(r4)']
Translated lwzu r0 0x34(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x34); // lwzu r0, 0x34(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x34;']
Translated clrlwi. r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Translated bne .L_8000B7FC to: if (gc_env.cr[0] != 0) goto L_8000B7FC;
Translated lis r0 0x8000 to: ['gc_env.r[0] = -32768 << 16; // lis r0, 0x8000']
Translated lis r3 SIInterruptHandler@ha to: ['gc_env.r[3] = ((uint32_t)&SIInterruptHandler >> 16) & 0xFFFF; // lis r3, SIInterruptHandler@ha']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Processing opcode: addi, operands: ['r4', 'r3', 'SIInterruptHandler@l']
Translated addi r4 r3 SIInterruptHandler@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&SIInterruptHandler & 0xFFFF); // addi r4, r3, SIInterruptHandler@l']
Processing opcode: li, operands: ['r3', '0x14']
Translated li r3 0x14 to: ['gc_env.r[3] = 0x14; // li r3, 0x14']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Processing opcode: li, operands: ['r3', '0x800']
Translated li r3 0x800 to: ['gc_env.r[3] = 0x800; // li r3, 0x800']
Translated bl __OSUnmaskInterrupts to: __OSUnmaskInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl SIGetType to: SIGetType();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated bl SIGetType to: SIGetType();
Processing opcode: li, operands: ['r3', '0x2']
Translated li r3 0x2 to: ['gc_env.r[3] = 0x2; // li r3, 0x2']
Translated bl SIGetType to: SIGetType();
Processing opcode: li, operands: ['r3', '0x3']
Translated li r3 0x3 to: ['gc_env.r[3] = 0x3; // li r3, 0x3']
Translated bl SIGetType to: SIGetType();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r9 Si_8001B088@ha to: ['gc_env.r[9] = ((uint32_t)&Si_8001B088 >> 16) & 0xFFFF; // lis r9, Si_8001B088@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x48(r1)']
Translated stwu r1 -0x48(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x48, gc_env.r[1]); // stwu r1, -0x48(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x48;']
Translated stmw r25 0x2c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[25]); // stmw r25, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[26]); // stmw r25, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[27]); // stmw r25, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[28]); // stmw r25, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[29]); // stmw r25, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x40, gc_env.r[30]); // stmw r25, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x44, gc_env.r[31]); // stmw r25, 0x2C(r1)']
Processing opcode: addi, operands: ['r26', 'r3', '0x0']
Translated addi r26 r3 0x0 to: ['gc_env.r[26] = gc_env.r[3] + 0; // addi r26, r3, 0x0']
Processing opcode: addi, operands: ['r27', 'r4', '0x0']
Translated addi r27 r4 0x0 to: ['gc_env.r[27] = gc_env.r[4] + 0; // addi r27, r4, 0x0']
Processing opcode: addi, operands: ['r28', 'r5', '0x0']
Translated addi r28 r5 0x0 to: ['gc_env.r[28] = gc_env.r[5] + 0; // addi r28, r5, 0x0']
Processing opcode: addi, operands: ['r29', 'r6', '0x0']
Translated addi r29 r6 0x0 to: ['gc_env.r[29] = gc_env.r[6] + 0; // addi r29, r6, 0x0']
Processing opcode: addi, operands: ['r30', 'r7', '0x0']
Translated addi r30 r7 0x0 to: ['gc_env.r[30] = gc_env.r[7] + 0; // addi r30, r7, 0x0']
Processing opcode: addi, operands: ['r31', 'r8', '0x0']
Translated addi r31 r8 0x0 to: ['gc_env.r[31] = gc_env.r[8] + 0; // addi r31, r8, 0x0']
Processing opcode: addi, operands: ['r25', 'r9', 'Si_8001B088@l']
Translated addi r25 r9 Si_8001B088@l to: ['gc_env.r[25] = gc_env.r[9] + ((uint32_t)&Si_8001B088 & 0xFFFF); // addi r25, r9, Si_8001B088@l']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', '0x0(r25)']
Translated lwz r0 0x0(r25) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[25]); // lwz r0, (r25)']
Translated cmpwi r0 -0x1 to: gc_env.cr[0] = (gc_env.r[0] == -0x1) ? 0 : (gc_env.r[0] < -0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_8000B8A8 to: if (gc_env.cr[0] == 0) goto L_8000B8A8;
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000BA54 to: goto L_8000BA54;
Translated lis r6 0xcc00 to: ['gc_env.r[6] = -13312 << 16; // lis r6, 0xcc00']
Translated slwi r0 r26 3 to: ['gc_env.r[0] = gc_env.r[26] << 3; // slwi r0, r26, 3']
Processing opcode: lwz, operands: ['r7', '0x6438(r6)']
Translated lwz r7 0x6438(r6) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x6438); // lwz r7, 0x6438(r6)']
Translated lis r4 0xf00 to: ['gc_env.r[4] = 3840 << 16; // lis r4, 0xf00']
Translated sraw r0 r4 r0 to: ['gc_env.r[0] = ((int32_t)gc_env.r[4]) >> (gc_env.r[0] & 31); // sraw r0, r4, r0']
Translated and r7 r7 r0 to: gc_env.r[7] = gc_env.r[7] & gc_env.r[0];
Processing opcode: stw, operands: ['r7', '0x6438(r6)']
Translated stw r7 0x6438(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x6438, gc_env.r[7]); // stw r7, 0x6438(r6)']
Processing opcode: addi, operands: ['r0', 'r28', '0x3']
Translated addi r0 r28 0x3 to: ['gc_env.r[0] = gc_env.r[28] + 3; // addi r0, r28, 0x3']
Translated srwi r4 r0 2 to: ['gc_env.r[4] = gc_env.r[0] >> 2; // srwi r4, r0, 2']
Processing opcode: stw, operands: ['r26', '0x0(r25)']
Translated stw r26 0x0(r25) to: ['gc_mem_write32(gc_env.ram, gc_env.r[25], gc_env.r[26]); // stw r26, (r25)']
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: stw, operands: ['r31', '0x10(r25)']
Translated stw r31 0x10(r25) to: ['gc_mem_write32(gc_env.ram, gc_env.r[25] + 0x10, gc_env.r[31]); // stw r31, 0x10(r25)']
Processing opcode: stw, operands: ['r30', '0x8(r25)']
Translated stw r30 0x8(r25) to: ['gc_mem_write32(gc_env.ram, gc_env.r[25] + 0x8, gc_env.r[30]); // stw r30, 0x8(r25)']
Processing opcode: stw, operands: ['r29', '0xc(r25)']
Translated stw r29 0xc(r25) to: ['gc_mem_write32(gc_env.ram, gc_env.r[25] + 0xC, gc_env.r[29]); // stw r29, 0xC(r25)']
Translated ble .L_8000B988 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000B988; // ble .L_8000B988']
Translated cmplwi r4 0x8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x8) ? 0 : ((uint32_t)gc_env.r[4] < 0x8 ? -1 : 1); // Logical compare with immediate
Processing opcode: subi, operands: ['r7', 'r4', '0x8']
Translated subi r7 r4 0x8 to: ['gc_env.r[7] = gc_env.r[4] - 8; // subi r7, r4, 8']
Translated ble .L_8000BA3C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000BA3C; // ble .L_8000BA3C']
Processing opcode: addi, operands: ['r0', 'r7', '0x7']
Translated addi r0 r7 0x7 to: ['gc_env.r[0] = gc_env.r[7] + 7; // addi r0, r7, 0x7']
Translated srwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] >> 3; // srwi r0, r0, 3']
Translated cmplwi r7 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[7] == 0x0) ? 0 : ((uint32_t)gc_env.r[7] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Processing opcode: addi, operands: ['r7', 'r27', '0x0']
Translated addi r7 r27 0x0 to: ['gc_env.r[7] = gc_env.r[27] + 0; // addi r7, r27, 0x0']
Processing opcode: addi, operands: ['r6', 'r6', '0x6400']
Translated addi r6 r6 0x6400 to: ['gc_env.r[6] += 25600; // addi r6, r6, 0x6400']
Translated ble .L_8000BA3C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000BA3C; // ble .L_8000BA3C']
Processing opcode: lwz, operands: ['r0', '0x0(r7)']
Translated lwz r0 0x0(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7]); // lwz r0, (r7)']
Processing opcode: addi, operands: ['r5', 'r5', '0x8']
Translated addi r5 r5 0x8 to: ['gc_env.r[5] += 8; // addi r5, r5, 0x8']
Processing opcode: stw, operands: ['r0', '0x80(r6)']
Translated stw r0 0x80(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x80, gc_env.r[0]); // stw r0, 0x80(r6)']
Processing opcode: lwz, operands: ['r0', '0x4(r7)']
Translated lwz r0 0x4(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x4); // lwz r0, 0x4(r7)']
Processing opcode: stw, operands: ['r0', '0x84(r6)']
Translated stw r0 0x84(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x84, gc_env.r[0]); // stw r0, 0x84(r6)']
Processing opcode: lwz, operands: ['r0', '0x8(r7)']
Translated lwz r0 0x8(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x8); // lwz r0, 0x8(r7)']
Processing opcode: stw, operands: ['r0', '0x88(r6)']
Translated stw r0 0x88(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x88, gc_env.r[0]); // stw r0, 0x88(r6)']
Processing opcode: lwz, operands: ['r0', '0xc(r7)']
Translated lwz r0 0xc(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0xC); // lwz r0, 0xC(r7)']
Processing opcode: stw, operands: ['r0', '0x8c(r6)']
Translated stw r0 0x8c(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x8C, gc_env.r[0]); // stw r0, 0x8C(r6)']
Processing opcode: lwz, operands: ['r0', '0x10(r7)']
Translated lwz r0 0x10(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x10); // lwz r0, 0x10(r7)']
Processing opcode: stw, operands: ['r0', '0x90(r6)']
Translated stw r0 0x90(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x90, gc_env.r[0]); // stw r0, 0x90(r6)']
Processing opcode: lwz, operands: ['r0', '0x14(r7)']
Translated lwz r0 0x14(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x14); // lwz r0, 0x14(r7)']
Processing opcode: stw, operands: ['r0', '0x94(r6)']
Translated stw r0 0x94(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x94, gc_env.r[0]); // stw r0, 0x94(r6)']
Processing opcode: lwz, operands: ['r0', '0x18(r7)']
Translated lwz r0 0x18(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x18); // lwz r0, 0x18(r7)']
Processing opcode: stw, operands: ['r0', '0x98(r6)']
Translated stw r0 0x98(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x98, gc_env.r[0]); // stw r0, 0x98(r6)']
Processing opcode: lwz, operands: ['r0', '0x1c(r7)']
Translated lwz r0 0x1c(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x1C); // lwz r0, 0x1C(r7)']
Processing opcode: addi, operands: ['r7', 'r7', '0x20']
Translated addi r7 r7 0x20 to: ['gc_env.r[7] += 32; // addi r7, r7, 0x20']
Processing opcode: stw, operands: ['r0', '0x9c(r6)']
Translated stw r0 0x9c(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x9C, gc_env.r[0]); // stw r0, 0x9C(r6)']
Processing opcode: addi, operands: ['r6', 'r6', '0x20']
Translated addi r6 r6 0x20 to: ['gc_env.r[6] += 32; // addi r6, r6, 0x20']
Translated bdnz .L_8000B910 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8000B910;']
Translated b .L_8000BA3C to: goto L_8000BA3C;
Processing opcode: subf, operands: ['r0', 'r5', 'r4']
Translated subf r0 r5 r4 to: ['gc_env.r[0] = gc_env.r[4] - gc_env.r[5]; // subf r0, r5, r4']
Translated cmplw r5 r4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == (uint32_t)gc_env.r[4]) ? 0 : ((uint32_t)gc_env.r[5] < (uint32_t)gc_env.r[4] ? -1 : 1); // Logical compare word
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bge .L_8000B988 to: if (gc_env.cr[0] >= 0) goto L_8000B988;
Processing opcode: lwz, operands: ['r0', '0x0(r6)']
Translated lwz r0 0x0(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r0, (r6)']
Processing opcode: addi, operands: ['r6', 'r6', '0x4']
Translated addi r6 r6 0x4 to: ['gc_env.r[6] += 4; // addi r6, r6, 0x4']
Processing opcode: stw, operands: ['r0', '0x80(r7)']
Translated stw r0 0x80(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7] + 0x80, gc_env.r[0]); // stw r0, 0x80(r7)']
Processing opcode: addi, operands: ['r7', 'r7', '0x4']
Translated addi r7 r7 0x4 to: ['gc_env.r[7] += 4; // addi r7, r7, 0x4']
Translated bdnz .L_8000B974 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8000B974;']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: addi, operands: ['r6', 'r4', '0x6400']
Translated addi r6 r4 0x6400 to: ['gc_env.r[6] = gc_env.r[4] + 25600; // addi r6, r4, 0x6400']
Processing opcode: lwzu, operands: ['r0', '0x34(r6)']
Translated lwzu r0 0x34(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x34); // lwzu r0, 0x34(r6)', 'gc_env.r[6] = gc_env.r[6] + 0x34;']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Processing opcode: stw, operands: ['r0', '0x24(r1)']
Translated stw r0 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[0]); // stw r0, 0x24(r1)']
Translated cmplwi r31 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == 0x0) ? 0 : ((uint32_t)gc_env.r[31] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: lbz, operands: ['r0', '0x24(r1)']
Translated lbz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x24); // lbz r0, 0x24(r1)']
Translated rlwimi r0 r4 7 24 24 to: ['uint32_t rotated = gc_env.r[4] << 7; // rlwimi r0, r4, 7, 24, 24', 'gc_env.r[0] = (gc_env.r[0] & ~0x80) | (rotated & 0x80);']
Processing opcode: stb, operands: ['r0', '0x24(r1)']
Translated stb r0 0x24(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[0]); // stb r0, 0x24(r1)']
Translated beq .L_8000B9B4 to: if (gc_env.cr[0] == 0) goto L_8000B9B4;
Translated b .L_8000B9B8 to: goto L_8000B9B8;
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: lbz, operands: ['r0', '0x24(r1)']
Translated lbz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x24); // lbz r0, 0x24(r1)']
Translated rlwimi r0 r4 6 25 25 to: ['uint32_t rotated = gc_env.r[4] << 6; // rlwimi r0, r4, 6, 25, 25', 'gc_env.r[0] = (gc_env.r[0] & ~0x40) | (rotated & 0x40);']
Translated cmplwi r28 0x80 to: gc_env.cr[0] = ((uint32_t)gc_env.r[28] == 0x80) ? 0 : ((uint32_t)gc_env.r[28] < 0x80 ? -1 : 1); // Logical compare with immediate
Processing opcode: stb, operands: ['r0', '0x24(r1)']
Translated stb r0 0x24(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[0]); // stb r0, 0x24(r1)']
Translated bne .L_8000B9D4 to: if (gc_env.cr[0] != 0) goto L_8000B9D4;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated b .L_8000B9D8 to: goto L_8000B9D8;
Translated mr r0 r28 to: gc_env.r[0] = gc_env.r[28]; // Move register
Translated clrlwi r4 r0 24 to: ['gc_env.r[4] = gc_env.r[0] & 0xFF; // clrlwi r4, r0, 24']
Processing opcode: lbz, operands: ['r0', '0x25(r1)']
Translated lbz r0 0x25(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x25); // lbz r0, 0x25(r1)']
Translated rlwimi r0 r4 0 25 31 to: ['uint32_t rotated = gc_env.r[4] << 0; // rlwimi r0, r4, 0, 25, 31', 'gc_env.r[0] = (gc_env.r[0] & ~0x7F) | (rotated & 0x7F);']
Translated cmplwi r30 0x80 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == 0x80) ? 0 : ((uint32_t)gc_env.r[30] < 0x80 ? -1 : 1); // Logical compare with immediate
Processing opcode: stb, operands: ['r0', '0x25(r1)']
Translated stb r0 0x25(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x25, gc_env.r[0]); // stb r0, 0x25(r1)']
Translated bne .L_8000B9F8 to: if (gc_env.cr[0] != 0) goto L_8000B9F8;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated b .L_8000B9FC to: goto L_8000B9FC;
Translated mr r0 r30 to: gc_env.r[0] = gc_env.r[30]; // Move register
Translated clrlwi r4 r0 24 to: ['gc_env.r[4] = gc_env.r[0] & 0xFF; // clrlwi r4, r0, 24']
Processing opcode: lbz, operands: ['r0', '0x26(r1)']
Translated lbz r0 0x26(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x26); // lbz r0, 0x26(r1)']
Translated rlwimi r0 r4 0 25 31 to: ['uint32_t rotated = gc_env.r[4] << 0; // rlwimi r0, r4, 0, 25, 31', 'gc_env.r[0] = (gc_env.r[0] & ~0x7F) | (rotated & 0x7F);']
Processing opcode: stb, operands: ['r0', '0x26(r1)']
Translated stb r0 0x26(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x26, gc_env.r[0]); // stb r0, 0x26(r1)']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Processing opcode: lbz, operands: ['r0', '0x27(r1)']
Translated lbz r0 0x27(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x27); // lbz r0, 0x27(r1)']
Translated rlwimi r0 r26 1 29 30 to: ['uint32_t rotated = gc_env.r[26] << 1; // rlwimi r0, r26, 1, 29, 30', 'gc_env.r[0] = (gc_env.r[0] & ~0x6) | (rotated & 0x6);']
Processing opcode: stb, operands: ['r0', '0x27(r1)']
Translated stb r0 0x27(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x27, gc_env.r[0]); // stb r0, 0x27(r1)']
Processing opcode: lbz, operands: ['r0', '0x27(r1)']
Translated lbz r0 0x27(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x27); // lbz r0, 0x27(r1)']
Translated rlwimi r0 r4 0 31 31 to: ['uint32_t rotated = gc_env.r[4] << 0; // rlwimi r0, r4, 0, 31, 31', 'gc_env.r[0] = (gc_env.r[0] & ~0x1) | (rotated & 0x1);']
Processing opcode: stb, operands: ['r0', '0x27(r1)']
Translated stb r0 0x27(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x27, gc_env.r[0]); // stb r0, 0x27(r1)']
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: stw, operands: ['r0', '0x0(r6)']
Translated stw r0 0x0(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6], gc_env.r[0]); // stw r0, (r6)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated b .L_8000BA54 to: goto L_8000BA54;
Translated lis r6 0xcc00 to: ['gc_env.r[6] = -13312 << 16; // lis r6, 0xcc00']
Translated slwi r0 r5 2 to: ['gc_env.r[0] = gc_env.r[5] << 2; // slwi r0, r5, 2']
Processing opcode: addi, operands: ['r7', 'r6', '0x6400']
Translated addi r7 r6 0x6400 to: ['gc_env.r[7] = gc_env.r[6] + 25600; // addi r7, r6, 0x6400']
Processing opcode: add, operands: ['r6', 'r27', 'r0']
Translated add r6 r27 r0 to: ['gc_env.r[6] = gc_env.r[27] + gc_env.r[0]; // add r6, r27, r0']
Processing opcode: add, operands: ['r7', 'r7', 'r0']
Translated add r7 r7 r0 to: ['gc_env.r[7] = gc_env.r[7] + gc_env.r[0]; // add r7, r7, r0']
Translated b .L_8000B964 to: goto L_8000B964;
Translated lmw r25 0x2c(r1) to: ['gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r25, 0x2C(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r25, 0x2C(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r25, 0x2C(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x38); // lmw r25, 0x2C(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lmw r25, 0x2C(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x40); // lmw r25, 0x2C(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lmw r25, 0x2C(r1)']
Processing opcode: lwz, operands: ['r0', '0x4c(r1)']
Translated lwz r0 0x4c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4C); // lwz r0, 0x4C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x48']
Translated addi r1 r1 0x48 to: ['gc_env.r[1] += 72; // addi r1, r1, 0x48']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Translated slwi r0 r4 8 to: ['gc_env.r[0] = gc_env.r[4] << 8; // slwi r0, r4, 8']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated slwi r31 r3 16 to: ['gc_env.r[31] = gc_env.r[3] << 16; // slwi r31, r3, 16']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated lis r4 Si_8001B088@ha to: ['gc_env.r[4] = ((uint32_t)&Si_8001B088 >> 16) & 0xFFFF; // lis r4, Si_8001B088@ha']
Processing opcode: addi, operands: ['r4', 'r4', 'Si_8001B088@l']
Translated addi r4 r4 Si_8001B088@l to: ['gc_env.r[4] = (uint32_t)&Si_8001B088; // lis + addi Si_8001B088 (completing pattern)']
Processing opcode: lwz, operands: ['r0', '0x4(r4)']
Translated lwz r0 0x4(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwz r0, 0x4(r4)']
Processing opcode: addi, operands: ['r5', 'r4', '0x4']
Translated addi r5 r4 0x4 to: ['gc_env.r[5] = gc_env.r[4] + 4; // addi r5, r4, 0x4']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Translated rlwinm r0 r0 0 24 5 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & -0x3FFFF01; // rlwinm r0, r0, 0, 24, 5']
Processing opcode: stw, operands: ['r0', '0x0(r5)']
Translated stw r0 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stw r0, (r5)']
Processing opcode: lwz, operands: ['r0', '0x0(r5)']
Translated lwz r0 0x0(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r0, (r5)']
Translated or r0 r0 r31 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[31]; // or r0, r0, r31']
Processing opcode: stw, operands: ['r0', '0x0(r5)']
Translated stw r0 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stw r0, (r5)']
Processing opcode: lwz, operands: ['r31', '0x0(r5)']
Translated lwz r31 0x0(r5) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r31, (r5)']
Processing opcode: stw, operands: ['r31', '0x6430(r4)']
Translated stw r31 0x6430(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x6430, gc_env.r[31]); // stw r31, 0x6430(r4)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r4 Packet_8001C6C0@ha to: ['gc_env.r[4] = ((uint32_t)&Packet_8001C6C0 >> 16) & 0xFFFF; // lis r4, Packet_8001C6C0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x28(r1)']
Translated stwu r1 -0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x28, gc_env.r[1]); // stwu r1, -0x28(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x28;']
Processing opcode: stw, operands: ['r31', '0x24(r1)']
Translated stw r31 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[31]); // stw r31, 0x24(r1)']
Processing opcode: addi, operands: ['r31', 'r4', 'Packet_8001C6C0@l']
Translated addi r31 r4 Packet_8001C6C0@l to: ['gc_env.r[31] = gc_env.r[4] + ((uint32_t)&Packet_8001C6C0 & 0xFFFF); // addi r31, r4, Packet_8001C6C0@l']
Processing opcode: stw, operands: ['r30', '0x20(r1)']
Translated stw r30 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[30]); // stw r30, 0x20(r1)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Processing opcode: stw, operands: ['r29', '0x1c(r1)']
Translated stw r29 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[29]); // stw r29, 0x1C(r1)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Translated subfic r0 r30 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[30]; // subfic r0, r30, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[30] ? 0x20000000 : 0);']
Processing opcode: lwz, operands: ['r29', '0x6438(r4)']
Translated lwz r29 0x6438(r4) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x6438); // lwz r29, 0x6438(r4)']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Translated srw r29 r29 r0 to: ['gc_env.r[29] = gc_env.r[29] >> (gc_env.r[0] & 31); // srw r29, r29, r0']
Translated rlwinm. r0 r29 0 28 28 to: ['gc_env.r[0] = (gc_env.r[29] << 0) & 0x8; // rlwinm r0, r29, 0, 28, 28', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000BB3C to: if (gc_env.cr[0] == 0) goto L_8000BB3C;
Translated lis r4 Type_8001B09C@ha to: ['gc_env.r[4] = ((uint32_t)&Type_8001B09C >> 16) & 0xFFFF; // lis r4, Type_8001B09C@ha']
Translated slwi r5 r30 2 to: ['gc_env.r[5] = gc_env.r[30] << 2; // slwi r5, r30, 2']
Processing opcode: addi, operands: ['r0', 'r4', 'Type_8001B09C@l']
Translated addi r0 r4 Type_8001B09C@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&Type_8001B09C & 0xFFFF); // addi r0, r4, Type_8001B09C@l']
Processing opcode: add, operands: ['r4', 'r0', 'r5']
Translated add r4 r0 r5 to: ['gc_env.r[4] = gc_env.r[0] + gc_env.r[5]; // add r4, r0, r5']
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated rlwinm. r0 r0 0 24 24 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x80; // rlwinm r0, r0, 0, 24, 24', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_8000BB3C to: if (gc_env.cr[0] != 0) goto L_8000BB3C;
Processing opcode: li, operands: ['r0', '0x8']
Translated li r0 0x8 to: ['gc_env.r[0] = 0x8; // li r0, 0x8']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated rlwinm. r0 r29 0 26 26 to: ['gc_env.r[0] = (gc_env.r[29] << 0) & 0x20; // rlwinm r0, r29, 0, 26, 26', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000BB88 to: if (gc_env.cr[0] == 0) goto L_8000BB88;
Processing opcode: mulli, operands: ['r4', 'r30', '0xc']
Translated mulli r4 r30 0xc to: ['gc_env.r[4] = gc_env.r[30] * 12; // mulli r4, r30, 12']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r0', 'r3', '0x6400']
Translated addi r0 r3 0x6400 to: ['gc_env.r[0] = gc_env.r[3] + 25600; // addi r0, r3, 0x6400']
Processing opcode: add, operands: ['r3', 'r0', 'r4']
Translated add r3 r0 r4 to: ['gc_env.r[3] = gc_env.r[0] + gc_env.r[4]; // add r3, r0, r4']
Translated slwi r4 r30 3 to: ['gc_env.r[4] = gc_env.r[30] << 3; // slwi r4, r30, 3']
Processing opcode: lwz, operands: ['r0', '0x4(r3)']
Translated lwz r0 0x4(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4); // lwz r0, 0x4(r3)']
Processing opcode: add, operands: ['r6', 'r31', 'r4']
Translated add r6 r31 r4 to: ['gc_env.r[6] = gc_env.r[31] + gc_env.r[4]; // add r6, r31, r4']
Processing opcode: stw, operands: ['r0', '0x1c0(r6)']
Translated stw r0 0x1c0(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x1C0, gc_env.r[0]); // stw r0, 0x1C0(r6)']
Translated slwi r0 r30 2 to: ['gc_env.r[0] = gc_env.r[30] << 2; // slwi r0, r30, 2']
Processing opcode: add, operands: ['r4', 'r31', 'r0']
Translated add r4 r31 r0 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[0]; // add r4, r31, r0']
Processing opcode: lwz, operands: ['r5', '0x8(r3)']
Translated lwz r5 0x8(r3) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r5, 0x8(r3)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: stw, operands: ['r5', '0x1c4(r6)']
Translated stw r5 0x1c4(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x1C4, gc_env.r[5]); // stw r5, 0x1C4(r6)']
Processing opcode: stw, operands: ['r0', '0x1b0(r4)']
Translated stw r0 0x1b0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1B0, gc_env.r[0]); // stw r0, 0x1B0(r4)']
Translated b .L_8000BB8C to: goto L_8000BB8C;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r0', '0x2c(r1)']
Translated lwz r0 0x2c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r0, 0x2C(r1)']
Processing opcode: lwz, operands: ['r31', '0x24(r1)']
Translated lwz r31 0x24(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r31, 0x24(r1)']
Processing opcode: lwz, operands: ['r30', '0x20(r1)']
Translated lwz r30 0x20(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r30, 0x20(r1)']
Processing opcode: lwz, operands: ['r29', '0x1c(r1)']
Translated lwz r29 0x1c(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r29, 0x1C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x28']
Translated addi r1 r1 0x28 to: ['gc_env.r[1] += 40; // addi r1, r1, 0x28']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r4 lbl_8001C740@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001C740 >> 16) & 0xFFFF; // lis r4, lbl_8001C740@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r0', 'r4', 'lbl_8001C740@l']
Translated addi r0 r4 lbl_8001C740@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&lbl_8001C740 & 0xFFFF); // addi r0, r4, lbl_8001C740@l']
Translated lis r4 0x6666 to: ['gc_env.r[4] = 26214 << 16; // lis r4, 0x6666']
Processing opcode: subf, operands: ['r0', 'r0', 'r3']
Translated subf r0 r0 r3 to: ['gc_env.r[0] = gc_env.r[3] - gc_env.r[0]; // subf r0, r0, r3']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: addi, operands: ['r3', 'r4', '0x6667']
Translated addi r3 r4 0x6667 to: ['gc_env.r[3] = gc_env.r[4] + 26215; // addi r3, r4, 0x6667']
Translated mulhw r0 r3 r0 to: ['gc_env.r[0] = (int32_t)(((int64_t)(int32_t)gc_env.r[3] * (int64_t)(int32_t)gc_env.r[0]) >> 32); // mulhw r0, r3, r0']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Translated srawi r0 r0 4 to: ['gc_env.r[0] = ((int32_t)gc_env.r[0]) >> 4; // srawi r0, r0, 4']
Translated srwi r3 r0 31 to: ['gc_env.r[3] = gc_env.r[0] >> 31; // srwi r3, r0, 31']
Processing opcode: add, operands: ['r0', 'r0', 'r3']
Translated add r0 r0 r3 to: ['gc_env.r[0] = gc_env.r[0] + gc_env.r[3]; // add r0, r0, r3']
Translated lis r3 Packet_8001C6C0@ha to: ['gc_env.r[3] = ((uint32_t)&Packet_8001C6C0 >> 16) & 0xFFFF; // lis r3, Packet_8001C6C0@ha']
Translated slwi r4 r0 5 to: ['gc_env.r[4] = gc_env.r[0] << 5; // slwi r4, r0, 5']
Processing opcode: addi, operands: ['r0', 'r3', 'Packet_8001C6C0@l']
Translated addi r0 r3 Packet_8001C6C0@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&Packet_8001C6C0 & 0xFFFF); // addi r0, r3, Packet_8001C6C0@l']
Processing opcode: add, operands: ['r31', 'r0', 'r4']
Translated add r31 r0 r4 to: ['gc_env.r[31] = gc_env.r[0] + gc_env.r[4]; // add r31, r0, r4']
Processing opcode: lwz, operands: ['r3', '0x0(r31)']
Translated lwz r3 0x0(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r3, (r31)']
Translated cmpwi r3 -0x1 to: gc_env.cr[0] = (gc_env.r[3] == -0x1) ? 0 : (gc_env.r[3] < -0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_8000BC20 to: if (gc_env.cr[0] == 0) goto L_8000BC20;
Processing opcode: lwz, operands: ['r4', '0x4(r31)']
Translated lwz r4 0x4(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x4); // lwz r4, 0x4(r31)']
Processing opcode: lwz, operands: ['r5', '0x8(r31)']
Translated lwz r5 0x8(r31) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r5, 0x8(r31)']
Processing opcode: lwz, operands: ['r6', '0xc(r31)']
Translated lwz r6 0xc(r31) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r6, 0xC(r31)']
Processing opcode: lwz, operands: ['r7', '0x10(r31)']
Translated lwz r7 0x10(r31) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x10); // lwz r7, 0x10(r31)']
Processing opcode: lwz, operands: ['r8', '0x14(r31)']
Translated lwz r8 0x14(r31) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x14); // lwz r8, 0x14(r31)']
Translated bl fn_8000B85C to: fn_8000B85C();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000BC20 to: if (gc_env.cr[0] == 0) goto L_8000BC20;
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r0', '0x0(r31)']
Translated stw r0 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stw r0, (r31)']
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x60(r1)']
Translated stwu r1 -0x60(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x60, gc_env.r[1]); // stwu r1, -0x60(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x60;']
Translated stmw r19 0x2c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[19]); // stmw r19, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[20]); // stmw r19, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[21]); // stmw r19, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[22]); // stmw r19, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[23]); // stmw r19, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x40, gc_env.r[24]); // stmw r19, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x44, gc_env.r[25]); // stmw r19, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x48, gc_env.r[26]); // stmw r19, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4C, gc_env.r[27]); // stmw r19, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x50, gc_env.r[28]); // stmw r19, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x54, gc_env.r[29]); // stmw r19, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x58, gc_env.r[30]); // stmw r19, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x5C, gc_env.r[31]); // stmw r19, 0x2C(r1)']
Processing opcode: addi, operands: ['r24', 'r3', '0x0']
Translated addi r24 r3 0x0 to: ['gc_env.r[24] = gc_env.r[3] + 0; // addi r24, r3, 0x0']
Translated lis r3 Packet_8001C6C0@ha to: ['gc_env.r[3] = ((uint32_t)&Packet_8001C6C0 >> 16) & 0xFFFF; // lis r3, Packet_8001C6C0@ha']
Processing opcode: addi, operands: ['r23', 'r3', 'Packet_8001C6C0@l']
Translated addi r23 r3 Packet_8001C6C0@l to: ['gc_env.r[23] = (uint32_t)&Packet_8001C6C0; // lis + addi Packet_8001C6C0 (completing pattern)']
Translated slwi r0 r24 5 to: ['gc_env.r[0] = gc_env.r[24] << 5; // slwi r0, r24, 5']
Processing opcode: addi, operands: ['r25', 'r4', '0x0']
Translated addi r25 r4 0x0 to: ['gc_env.r[25] = gc_env.r[4] + 0; // addi r25, r4, 0x0']
Processing opcode: addi, operands: ['r26', 'r5', '0x0']
Translated addi r26 r5 0x0 to: ['gc_env.r[26] = gc_env.r[5] + 0; // addi r26, r5, 0x0']
Processing opcode: addi, operands: ['r27', 'r6', '0x0']
Translated addi r27 r6 0x0 to: ['gc_env.r[27] = gc_env.r[6] + 0; // addi r27, r6, 0x0']
Processing opcode: addi, operands: ['r28', 'r7', '0x0']
Translated addi r28 r7 0x0 to: ['gc_env.r[28] = gc_env.r[7] + 0; // addi r28, r7, 0x0']
Processing opcode: addi, operands: ['r29', 'r8', '0x0']
Translated addi r29 r8 0x0 to: ['gc_env.r[29] = gc_env.r[8] + 0; // addi r29, r8, 0x0']
Processing opcode: addi, operands: ['r31', 'r9', '0x0']
Translated addi r31 r9 0x0 to: ['gc_env.r[31] = gc_env.r[9] + 0; // addi r31, r9, 0x0']
Processing opcode: addi, operands: ['r30', 'r10', '0x0']
Translated addi r30 r10 0x0 to: ['gc_env.r[30] = gc_env.r[10] + 0; // addi r30, r10, 0x0']
Processing opcode: add, operands: ['r22', 'r23', 'r0']
Translated add r22 r23 r0 to: ['gc_env.r[22] = gc_env.r[23] + gc_env.r[0]; // add r22, r23, r0']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', '0x0(r22)']
Translated lwz r0 0x0(r22) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[22]); // lwz r0, (r22)']
Processing opcode: addi, operands: ['r21', 'r3', '0x0']
Translated addi r21 r3 0x0 to: ['gc_env.r[21] = gc_env.r[3] + 0; // addi r21, r3, 0x0']
Translated cmpwi r0 -0x1 to: gc_env.cr[0] = (gc_env.r[0] == -0x1) ? 0 : (gc_env.r[0] < -0x1 ? -1 : 1); // Compare with immediate
Translated bne .L_8000BC98 to: if (gc_env.cr[0] != 0) goto L_8000BC98;
Translated lis r3 Si_8001B088@ha to: ['gc_env.r[3] = ((uint32_t)&Si_8001B088 >> 16) & 0xFFFF; // lis r3, Si_8001B088@ha']
Processing opcode: lwz, operands: ['r0', 'Si_8001B088@l(r3)']
Translated lwz r0 Si_8001B088@l(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + (uint32_t)&Si_8001B088); // lwz r0, Si_8001B088@l/h(r3)']
Translated cmpw r0 r24 to: ['gc_env.cr[0] = (int32_t)gc_env.r[0] < (int32_t)gc_env.r[24] ? 0x8 : ((int32_t)gc_env.r[0] > (int32_t)gc_env.r[24] ? 0x4 : 0x2); // cmpw r0, r24']
Translated bne .L_8000BCA8 to: if (gc_env.cr[0] != 0) goto L_8000BCA8;
Translated mr r3 r21 to: gc_env.r[3] = gc_env.r[21]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000BD8C to: goto L_8000BD8C;
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated xor r5 r30 r0 to: ['gc_env.r[5] = gc_env.r[30] ^ gc_env.r[0]; // xor r5, r30, r0']
Translated xor r0 r31 r0 to: ['gc_env.r[0] = gc_env.r[31] ^ gc_env.r[0]; // xor r0, r31, r0']
Translated or. r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] | gc_env.r[0]; // or r0, r5, r0']
Translated bne .L_8000BCCC to: if (gc_env.cr[0] != 0) goto L_8000BCCC;
Processing opcode: addi, operands: ['r19', 'r4', '0x0']
Translated addi r19 r4 0x0 to: ['gc_env.r[19] = gc_env.r[4] + 0; // addi r19, r4, 0x0']
Processing opcode: addi, operands: ['r20', 'r3', '0x0']
Translated addi r20 r3 0x0 to: ['gc_env.r[20] = gc_env.r[3] + 0; // addi r20, r3, 0x0']
Translated b .L_8000BCE4 to: goto L_8000BCE4;
Translated slwi r0 r24 3 to: ['gc_env.r[0] = gc_env.r[24] << 3; // slwi r0, r24, 3']
Processing opcode: add, operands: ['r6', 'r23', 'r0']
Translated add r6 r23 r0 to: ['gc_env.r[6] = gc_env.r[23] + gc_env.r[0]; // add r6, r23, r0']
Processing opcode: lwz, operands: ['r5', '0x144(r6)']
Translated lwz r5 0x144(r6) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x144); // lwz r5, 0x144(r6)']
Processing opcode: lwz, operands: ['r0', '0x140(r6)']
Translated lwz r0 0x140(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x140); // lwz r0, 0x140(r6)']
Processing opcode: addc, operands: ['r19', 'r30', 'r5']
Translated addc r19 r30 r5 to: ['uint64_t addc_temp = (uint64_t)gc_env.r[30] + gc_env.r[5];', 'gc_env.r[19] = (uint32_t)addc_temp; // addc r19, r30, r5', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addc_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r20 r31 r0 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[31] + gc_env.r[0] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[20] = (uint32_t)adde_temp; // adde r20, r31, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated xoris r6 r3 0x8000 to: ['gc_env.r[6] = gc_env.r[3] ^ 0x80000000; // xoris r6, r3, 0x8000']
Translated xoris r5 r20 0x8000 to: ['gc_env.r[5] = gc_env.r[20] ^ 0x80000000; // xoris r5, r20, 0x8000']
Translated subfc r0 r19 r4 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[4] - gc_env.r[19];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r19, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= gc_env.r[19] ? 0x20000000 : 0);']
Translated subfe r5 r5 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[5] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r5, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[5] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r5 r6 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[6] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r6, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[6] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r5 r5 to: ['gc_env.r[5] = -(int32_t)gc_env.r[5]; // neg r5, r5']
Translated beq .L_8000BD2C to: if (gc_env.cr[0] == 0) goto L_8000BD2C;
Processing opcode: mulli, operands: ['r0', 'r24', '0x28']
Translated mulli r0 r24 0x28 to: ['gc_env.r[0] = gc_env.r[24] * 40; // mulli r0, r24, 40']
Translated subfc r30 r4 r19 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[19] - gc_env.r[4];', 'gc_env.r[30] = (uint32_t)subfc_temp; // subfc r30, r4, r19', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[19] >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfe r31 r3 r20 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[20] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[31] = (uint32_t)subfe_temp; // subfe r31, r3, r20', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[20] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated lis r4 fn_8000BBA8@ha to: ['gc_env.r[4] = ((uint32_t)&fn_8000BBA8 >> 16) & 0xFFFF; // lis r4, fn_8000BBA8@ha']
Processing opcode: add, operands: ['r3', 'r23', 'r0']
Translated add r3 r23 r0 to: ['gc_env.r[3] = gc_env.r[23] + gc_env.r[0]; // add r3, r23, r0']
Processing opcode: addi, operands: ['r7', 'r4', 'fn_8000BBA8@l']
Translated addi r7 r4 fn_8000BBA8@l to: ['gc_env.r[7] = gc_env.r[4] + ((uint32_t)&fn_8000BBA8 & 0xFFFF); // addi r7, r4, fn_8000BBA8@l']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: addi, operands: ['r5', 'r31', '0x0']
Translated addi r5 r31 0x0 to: ['gc_env.r[5] = gc_env.r[31] + 0; // addi r5, r31, 0x0']
Processing opcode: addi, operands: ['r3', 'r3', '0x80']
Translated addi r3 r3 0x80 to: ['gc_env.r[3] += 128; // addi r3, r3, 0x80']
Translated bl fn_80006220 to: fn_80006220();
Translated b .L_8000BD60 to: goto L_8000BD60;
Processing opcode: addi, operands: ['r3', 'r24', '0x0']
Translated addi r3 r24 0x0 to: ['gc_env.r[3] = gc_env.r[24] + 0; // addi r3, r24, 0x0']
Processing opcode: addi, operands: ['r4', 'r25', '0x0']
Translated addi r4 r25 0x0 to: ['gc_env.r[4] = gc_env.r[25] + 0; // addi r4, r25, 0x0']
Processing opcode: addi, operands: ['r5', 'r26', '0x0']
Translated addi r5 r26 0x0 to: ['gc_env.r[5] = gc_env.r[26] + 0; // addi r5, r26, 0x0']
Processing opcode: addi, operands: ['r6', 'r27', '0x0']
Translated addi r6 r27 0x0 to: ['gc_env.r[6] = gc_env.r[27] + 0; // addi r6, r27, 0x0']
Processing opcode: addi, operands: ['r7', 'r28', '0x0']
Translated addi r7 r28 0x0 to: ['gc_env.r[7] = gc_env.r[28] + 0; // addi r7, r28, 0x0']
Processing opcode: addi, operands: ['r8', 'r29', '0x0']
Translated addi r8 r29 0x0 to: ['gc_env.r[8] = gc_env.r[29] + 0; // addi r8, r29, 0x0']
Translated bl fn_8000B85C to: fn_8000B85C();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000BD60 to: if (gc_env.cr[0] == 0) goto L_8000BD60;
Translated mr r3 r21 to: gc_env.r[3] = gc_env.r[21]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated b .L_8000BD8C to: goto L_8000BD8C;
Processing opcode: stw, operands: ['r24', '0x0(r22)']
Translated stw r24 0x0(r22) to: ['gc_mem_write32(gc_env.ram, gc_env.r[22], gc_env.r[24]); // stw r24, (r22)']
Translated mr r3 r21 to: gc_env.r[3] = gc_env.r[21]; // Move register
Processing opcode: stw, operands: ['r25', '0x4(r22)']
Translated stw r25 0x4(r22) to: ['gc_mem_write32(gc_env.ram, gc_env.r[22] + 0x4, gc_env.r[25]); // stw r25, 0x4(r22)']
Processing opcode: stw, operands: ['r26', '0x8(r22)']
Translated stw r26 0x8(r22) to: ['gc_mem_write32(gc_env.ram, gc_env.r[22] + 0x8, gc_env.r[26]); // stw r26, 0x8(r22)']
Processing opcode: stw, operands: ['r27', '0xc(r22)']
Translated stw r27 0xc(r22) to: ['gc_mem_write32(gc_env.ram, gc_env.r[22] + 0xC, gc_env.r[27]); // stw r27, 0xC(r22)']
Processing opcode: stw, operands: ['r28', '0x10(r22)']
Translated stw r28 0x10(r22) to: ['gc_mem_write32(gc_env.ram, gc_env.r[22] + 0x10, gc_env.r[28]); // stw r28, 0x10(r22)']
Processing opcode: stw, operands: ['r29', '0x14(r22)']
Translated stw r29 0x14(r22) to: ['gc_mem_write32(gc_env.ram, gc_env.r[22] + 0x14, gc_env.r[29]); // stw r29, 0x14(r22)']
Processing opcode: stw, operands: ['r19', '0x1c(r22)']
Translated stw r19 0x1c(r22) to: ['gc_mem_write32(gc_env.ram, gc_env.r[22] + 0x1C, gc_env.r[19]); // stw r19, 0x1C(r22)']
Processing opcode: stw, operands: ['r20', '0x18(r22)']
Translated stw r20 0x18(r22) to: ['gc_mem_write32(gc_env.ram, gc_env.r[22] + 0x18, gc_env.r[20]); // stw r20, 0x18(r22)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated lmw r19 0x2c(r1) to: ['gc_env.r[19] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r19, 0x2C(r1)', 'gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r19, 0x2C(r1)', 'gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r19, 0x2C(r1)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x38); // lmw r19, 0x2C(r1)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lmw r19, 0x2C(r1)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x40); // lmw r19, 0x2C(r1)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lmw r19, 0x2C(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x48); // lmw r19, 0x2C(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4C); // lmw r19, 0x2C(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x50); // lmw r19, 0x2C(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x54); // lmw r19, 0x2C(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x58); // lmw r19, 0x2C(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x5C); // lmw r19, 0x2C(r1)']
Processing opcode: lwz, operands: ['r0', '0x64(r1)']
Translated lwz r0 0x64(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x64); // lwz r0, 0x64(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x60']
Translated addi r1 r1 0x60 to: ['gc_env.r[1] += 96; // addi r1, r1, 0x60']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Translated stmw r26 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[26]); // stmw r26, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[27]); // stmw r26, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[28]); // stmw r26, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[29]); // stmw r26, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[30]); // stmw r26, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stmw r26, 0x18(r1)']
Processing opcode: addi, operands: ['r27', 'r3', '0x0']
Translated addi r27 r3 0x0 to: ['gc_env.r[27] = gc_env.r[3] + 0; // addi r27, r3, 0x0']
Translated lis r3 Type_8001B09C@ha to: ['gc_env.r[3] = ((uint32_t)&Type_8001B09C >> 16) & 0xFFFF; // lis r3, Type_8001B09C@ha']
Processing opcode: addi, operands: ['r0', 'r3', 'Type_8001B09C@l']
Translated addi r0 r3 Type_8001B09C@l to: ['gc_env.r[0] = (uint32_t)&Type_8001B09C; // lis + addi Type_8001B09C (completing pattern)']
Translated slwi r29 r27 2 to: ['gc_env.r[29] = gc_env.r[27] << 2; // slwi r29, r27, 2']
Processing opcode: add, operands: ['r30', 'r0', 'r29']
Translated add r30 r0 r29 to: ['gc_env.r[30] = gc_env.r[0] + gc_env.r[29]; // add r30, r0, r29']
Translated lis r3 Packet_8001C6C0@ha to: ['gc_env.r[3] = ((uint32_t)&Packet_8001C6C0 >> 16) & 0xFFFF; // lis r3, Packet_8001C6C0@ha']
Processing opcode: addi, operands: ['r26', 'r4', '0x0']
Translated addi r26 r4 0x0 to: ['gc_env.r[26] = gc_env.r[4] + 0; // addi r26, r4, 0x0']
Processing opcode: addi, operands: ['r31', 'r3', 'Packet_8001C6C0@l']
Translated addi r31 r3 Packet_8001C6C0@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&Packet_8001C6C0 & 0xFFFF); // addi r31, r3, Packet_8001C6C0@l']
Processing opcode: lwz, operands: ['r0', '0x0(r30)']
Translated lwz r0 0x0(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r0, (r30)']
Translated rlwinm r0 r0 0 25 23 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & -0x81; // rlwinm r0, r0, 0, 25, 23']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Processing opcode: lwz, operands: ['r0', '0x0(r30)']
Translated lwz r0 0x0(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r0, (r30)']
Translated or r0 r0 r26 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[26]; // or r0, r0, r26']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Translated slwi r0 r27 3 to: ['gc_env.r[0] = gc_env.r[27] << 3; // slwi r0, r27, 3']
Processing opcode: add, operands: ['r5', 'r31', 'r0']
Translated add r5 r31 r0 to: ['gc_env.r[5] = gc_env.r[31] + gc_env.r[0]; // add r5, r31, r0']
Processing opcode: stw, operands: ['r4', '0x124(r5)']
Translated stw r4 0x124(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x124, gc_env.r[4]); // stw r4, 0x124(r5)']
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Translated clrlwi. r0 r26 28 to: ['gc_env.r[0] = gc_env.r[26] & 0xF; // clrlwi r0, r26, 28']
Processing opcode: stw, operands: ['r3', '0x120(r5)']
Translated stw r3 0x120(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x120, gc_env.r[3]); // stw r3, 0x120(r5)']
Translated srw r4 r4 r27 to: ['gc_env.r[4] = gc_env.r[4] >> (gc_env.r[27] & 31); // srw r4, r4, r27']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF08@sda21(r0)']
Translated lwz r3 lbl_8001EF08@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF08); // lwz r3, lbl_8001EF08@sda21(r0)']
Processing opcode: lwz, operands: ['r28', '0x0(r30)']
Translated lwz r28 0x0(r30) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r28, (r30)']
Translated andc r0 r3 r4 to: ['gc_env.r[0] = gc_env.r[3] & ~gc_env.r[4]; // andc r0, r3, r4']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF08@sda21(r0)']
Translated stw r0 lbl_8001EF08@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF08, gc_env.r[0]); // stw r0, lbl_8001EF08@sda21(r0)']
Translated and r26 r3 r4 to: gc_env.r[26] = gc_env.r[3] & gc_env.r[4];
Translated bne .L_8000BE40 to: if (gc_env.cr[0] != 0) goto L_8000BE40;
Translated rlwinm r3 r28 0 3 4 to: ['gc_env.r[3] = (gc_env.r[28] << 0) & 0x18000000; // rlwinm r3, r28, 0, 3, 4']
Processing opcode: subis, operands: ['r0', 'r3', '0x800']
Translated subis r0 r3 0x800 to: ['gc_env.r[0] = gc_env.r[3] - (2048 << 16); // subis r0, r3, 2048']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000BE40 to: if (gc_env.cr[0] != 0) goto L_8000BE40;
Translated clrrwi. r0 r28 31 to: gc_env.r[0] = gc_env.r[28] & ~((1ULL << 31) - 1); // Clear rightmost 31 bits
Translated beq .L_8000BE40 to: if (gc_env.cr[0] == 0) goto L_8000BE40;
Translated rlwinm. r0 r28 0 5 5 to: ['gc_env.r[0] = (gc_env.r[28] << 0) & 0x4000000; // rlwinm r0, r28, 0, 5, 5', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000BE98 to: if (gc_env.cr[0] == 0) goto L_8000BE98;
Processing opcode: addi, operands: ['r3', 'r27', '0x0']
Translated addi r3 r27 0x0 to: ['gc_env.r[3] = gc_env.r[27] + 0; // addi r3, r27, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl fn_80009158 to: fn_80009158();
Translated slwi r0 r27 4 to: ['gc_env.r[0] = gc_env.r[27] << 4; // slwi r0, r27, 4']
Processing opcode: lwz, operands: ['r30', '0x0(r30)']
Translated lwz r30 0x0(r30) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r30, (r30)']
Processing opcode: add, operands: ['r31', 'r31', 'r0']
Translated add r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] + gc_env.r[0]; // add r31, r31, r0']
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Processing opcode: addi, operands: ['r28', 'r29', '0x0']
Translated addi r28 r29 0x0 to: ['gc_env.r[28] = gc_env.r[29] + 0; // addi r28, r29, 0x0']
Processing opcode: addi, operands: ['r31', 'r31', '0x160']
Translated addi r31 r31 0x160 to: ['gc_env.r[31] += 352; // addi r31, r31, 0x160']
Processing opcode: lwz, operands: ['r12', '0x0(r31)']
Translated lwz r12 0x0(r31) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r12, (r31)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000BE84 to: if (gc_env.cr[0] == 0) goto L_8000BE84;
Processing opcode: stw, operands: ['r28', '0x0(r31)']
Translated stw r28 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[28]); // stw r28, (r31)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r27', '0x0']
Translated addi r3 r27 0x0 to: ['gc_env.r[3] = gc_env.r[27] + 0; // addi r3, r27, 0x0']
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: addi, operands: ['r29', 'r29', '0x1']
Translated addi r29 r29 0x1 to: ['gc_env.r[29] += 1; // addi r29, r29, 0x1']
Translated cmpwi r29 0x4 to: gc_env.cr[0] = (gc_env.r[29] == 0x4) ? 0 : (gc_env.r[29] < 0x4 ? -1 : 1); // Compare with immediate
Processing opcode: addi, operands: ['r31', 'r31', '0x4']
Translated addi r31 r31 0x4 to: ['gc_env.r[31] += 4; // addi r31, r31, 0x4']
Translated blt .L_8000BE64 to: ['if (gc_env.cr[0] & 0x8) goto L_8000BE64; // blt .L_8000BE64']
Translated b .L_8000C024 to: goto L_8000C024;
Translated mr r3 r27 to: gc_env.r[3] = gc_env.r[27]; // Move register
Translated bl fn_800090D4 to: fn_800090D4();
Translated cmpwi r26 0x0 to: gc_env.cr[0] = (gc_env.r[26] == 0x0) ? 0 : (gc_env.r[26] < 0x0 ? -1 : 1); // Compare with immediate
Translated clrlslwi r26 r3 16 8 to: ['gc_env.r[26] = (gc_env.r[3] << 8) & 0xFFFF; // clrlslwi r26, r3, 16, 8']
Translated beq .L_8000BEFC to: if (gc_env.cr[0] == 0) goto L_8000BEFC;
Translated rlwinm. r0 r26 0 11 11 to: ['gc_env.r[0] = (gc_env.r[26] << 0) & 0x100000; // rlwinm r0, r26, 0, 11, 11', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000BEFC to: if (gc_env.cr[0] == 0) goto L_8000BEFC;
Translated lis r3 0xd0 to: ['gc_env.r[3] = 208 << 16; // lis r3, 0xd0']
Processing opcode: subi, operands: ['r0', 'r3', '0x100']
Translated subi r0 r3 0x100 to: ['gc_env.r[0] = gc_env.r[3] - 256; // subi r0, r3, 256']
Translated and r0 r26 r0 to: gc_env.r[0] = gc_env.r[26] & gc_env.r[0];
Translated oris r0 r0 0x4e10 to: ['gc_env.r[0] = gc_env.r[0] | 0x4E100000; // oris r0, r0, 0x4E10']
Processing opcode: add, operands: ['r4', 'r31', 'r29']
Translated add r4 r31 r29 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[29]; // add r4, r31, r29']
Processing opcode: stwu, operands: ['r0', '0x1f0(r4)']
Translated stwu r0 0x1f0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1F0, gc_env.r[0]); // stwu r0, 0x1F0(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x1F0;']
Processing opcode: li, operands: ['r0', '0x80']
Translated li r0 0x80 to: ['gc_env.r[0] = 0x80; // li r0, 0x80']
Translated lis r3 GetTypeCallback@ha to: ['gc_env.r[3] = ((uint32_t)&GetTypeCallback >> 16) & 0xFFFF; // lis r3, GetTypeCallback@ha']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Processing opcode: addi, operands: ['r8', 'r3', 'GetTypeCallback@l']
Translated addi r8 r3 GetTypeCallback@l to: ['gc_env.r[8] = gc_env.r[3] + ((uint32_t)&GetTypeCallback & 0xFFFF); // addi r8, r3, GetTypeCallback@l']
Processing opcode: addi, operands: ['r3', 'r27', '0x0']
Translated addi r3 r27 0x0 to: ['gc_env.r[3] = gc_env.r[27] + 0; // addi r3, r27, 0x0']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: li, operands: ['r5', '0x3']
Translated li r5 0x3 to: ['gc_env.r[5] = 0x3; // li r5, 0x3']
Processing opcode: li, operands: ['r7', '0x3']
Translated li r7 0x3 to: ['gc_env.r[7] = 0x3; // li r7, 0x3']
Processing opcode: li, operands: ['r10', '0x0']
Translated li r10 0x0 to: ['gc_env.r[10] = 0x0; // li r10, 0x0']
Processing opcode: li, operands: ['r9', '0x0']
Translated li r9 0x0 to: ['gc_env.r[9] = 0x0; // li r9, 0x0']
Translated bl SITransfer to: SITransfer();
Translated b .L_8000C024 to: goto L_8000C024;
Translated rlwinm. r0 r28 0 11 11 to: ['gc_env.r[0] = (gc_env.r[28] << 0) & 0x100000; // rlwinm r0, r28, 0, 11, 11', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000BF70 to: if (gc_env.cr[0] == 0) goto L_8000BF70;
Translated lis r3 0xd0 to: ['gc_env.r[3] = 208 << 16; // lis r3, 0xd0']
Processing opcode: subi, operands: ['r3', 'r3', '0x100']
Translated subi r3 r3 0x100 to: ['gc_env.r[3] = gc_env.r[3] - 256; // subi r3, r3, 256']
Translated and r0 r26 r3 to: gc_env.r[0] = gc_env.r[26] & gc_env.r[3];
Translated and r3 r28 r3 to: gc_env.r[3] = gc_env.r[28] & gc_env.r[3];
Translated cmplw r0 r3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[3]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[3] ? -1 : 1); // Logical compare word
Translated beq .L_8000BFDC to: if (gc_env.cr[0] == 0) goto L_8000BFDC;
Translated rlwinm. r0 r26 0 11 11 to: ['gc_env.r[0] = (gc_env.r[26] << 0) & 0x100000; // rlwinm r0, r26, 0, 11, 11', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_8000BF34 to: if (gc_env.cr[0] != 0) goto L_8000BF34;
Translated oris r26 r3 0x10 to: ['gc_env.r[26] = gc_env.r[3] | 0x100000; // oris r26, r3, 0x10']
Processing opcode: addi, operands: ['r3', 'r27', '0x0']
Translated addi r3 r27 0x0 to: ['gc_env.r[3] = gc_env.r[27] + 0; // addi r3, r27, 0x0']
Translated extrwi r4 r26 16 8 to: ['gc_env.r[4] = (gc_env.r[26] >> 8) & 0xFFFF; // extrwi r4, r26, 16, 8']
Translated bl fn_80009158 to: fn_80009158();
Translated oris r0 r26 0x4e00 to: ['gc_env.r[0] = gc_env.r[26] | 0x4E000000; // oris r0, r26, 0x4E00']
Processing opcode: add, operands: ['r4', 'r31', 'r29']
Translated add r4 r31 r29 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[29]; // add r4, r31, r29']
Processing opcode: stwu, operands: ['r0', '0x1f0(r4)']
Translated stwu r0 0x1f0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1F0, gc_env.r[0]); // stwu r0, 0x1F0(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x1F0;']
Processing opcode: li, operands: ['r0', '0x80']
Translated li r0 0x80 to: ['gc_env.r[0] = 0x80; // li r0, 0x80']
Translated lis r3 GetTypeCallback@ha to: ['gc_env.r[3] = ((uint32_t)&GetTypeCallback >> 16) & 0xFFFF; // lis r3, GetTypeCallback@ha']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Processing opcode: addi, operands: ['r8', 'r3', 'GetTypeCallback@l']
Translated addi r8 r3 GetTypeCallback@l to: ['gc_env.r[8] = gc_env.r[3] + ((uint32_t)&GetTypeCallback & 0xFFFF); // addi r8, r3, GetTypeCallback@l']
Processing opcode: addi, operands: ['r3', 'r27', '0x0']
Translated addi r3 r27 0x0 to: ['gc_env.r[3] = gc_env.r[27] + 0; // addi r3, r27, 0x0']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: li, operands: ['r5', '0x3']
Translated li r5 0x3 to: ['gc_env.r[5] = 0x3; // li r5, 0x3']
Processing opcode: li, operands: ['r7', '0x3']
Translated li r7 0x3 to: ['gc_env.r[7] = 0x3; // li r7, 0x3']
Processing opcode: li, operands: ['r10', '0x0']
Translated li r10 0x0 to: ['gc_env.r[10] = 0x0; // li r10, 0x0']
Processing opcode: li, operands: ['r9', '0x0']
Translated li r9 0x0 to: ['gc_env.r[9] = 0x0; // li r9, 0x0']
Translated bl SITransfer to: SITransfer();
Translated b .L_8000C024 to: goto L_8000C024;
Translated rlwinm. r0 r28 0 1 1 to: ['gc_env.r[0] = (gc_env.r[28] << 0) & 0x40000000; // rlwinm r0, r28, 0, 1, 1', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000BFD0 to: if (gc_env.cr[0] == 0) goto L_8000BFD0;
Translated lis r3 0xd0 to: ['gc_env.r[3] = 208 << 16; // lis r3, 0xd0']
Processing opcode: subi, operands: ['r0', 'r3', '0x100']
Translated subi r0 r3 0x100 to: ['gc_env.r[0] = gc_env.r[3] - 256; // subi r0, r3, 256']
Translated and r28 r28 r0 to: gc_env.r[28] = gc_env.r[28] & gc_env.r[0];
Translated oris r28 r28 0x10 to: ['gc_env.r[28] = gc_env.r[28] | 0x100000; // oris r28, r28, 0x10']
Processing opcode: addi, operands: ['r3', 'r27', '0x0']
Translated addi r3 r27 0x0 to: ['gc_env.r[3] = gc_env.r[27] + 0; // addi r3, r27, 0x0']
Translated extrwi r4 r28 16 8 to: ['gc_env.r[4] = (gc_env.r[28] >> 8) & 0xFFFF; // extrwi r4, r28, 16, 8']
Translated bl fn_80009158 to: fn_80009158();
Translated oris r0 r28 0x4e00 to: ['gc_env.r[0] = gc_env.r[28] | 0x4E000000; // oris r0, r28, 0x4E00']
Processing opcode: add, operands: ['r4', 'r31', 'r29']
Translated add r4 r31 r29 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[29]; // add r4, r31, r29']
Processing opcode: stwu, operands: ['r0', '0x1f0(r4)']
Translated stwu r0 0x1f0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1F0, gc_env.r[0]); // stwu r0, 0x1F0(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x1F0;']
Processing opcode: li, operands: ['r0', '0x80']
Translated li r0 0x80 to: ['gc_env.r[0] = 0x80; // li r0, 0x80']
Translated lis r3 GetTypeCallback@ha to: ['gc_env.r[3] = ((uint32_t)&GetTypeCallback >> 16) & 0xFFFF; // lis r3, GetTypeCallback@ha']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Processing opcode: addi, operands: ['r8', 'r3', 'GetTypeCallback@l']
Translated addi r8 r3 GetTypeCallback@l to: ['gc_env.r[8] = gc_env.r[3] + ((uint32_t)&GetTypeCallback & 0xFFFF); // addi r8, r3, GetTypeCallback@l']
Processing opcode: addi, operands: ['r3', 'r27', '0x0']
Translated addi r3 r27 0x0 to: ['gc_env.r[3] = gc_env.r[27] + 0; // addi r3, r27, 0x0']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: li, operands: ['r5', '0x3']
Translated li r5 0x3 to: ['gc_env.r[5] = 0x3; // li r5, 0x3']
Processing opcode: li, operands: ['r7', '0x3']
Translated li r7 0x3 to: ['gc_env.r[7] = 0x3; // li r7, 0x3']
Processing opcode: li, operands: ['r10', '0x0']
Translated li r10 0x0 to: ['gc_env.r[10] = 0x0; // li r10, 0x0']
Processing opcode: li, operands: ['r9', '0x0']
Translated li r9 0x0 to: ['gc_env.r[9] = 0x0; // li r9, 0x0']
Translated bl SITransfer to: SITransfer();
Translated b .L_8000C024 to: goto L_8000C024;
Processing opcode: addi, operands: ['r3', 'r27', '0x0']
Translated addi r3 r27 0x0 to: ['gc_env.r[3] = gc_env.r[27] + 0; // addi r3, r27, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl fn_80009158 to: fn_80009158();
Translated slwi r0 r27 4 to: ['gc_env.r[0] = gc_env.r[27] << 4; // slwi r0, r27, 4']
Processing opcode: lwz, operands: ['r30', '0x0(r30)']
Translated lwz r30 0x0(r30) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r30, (r30)']
Processing opcode: add, operands: ['r31', 'r31', 'r0']
Translated add r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] + gc_env.r[0]; // add r31, r31, r0']
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Processing opcode: addi, operands: ['r28', 'r29', '0x0']
Translated addi r28 r29 0x0 to: ['gc_env.r[28] = gc_env.r[29] + 0; // addi r28, r29, 0x0']
Processing opcode: addi, operands: ['r31', 'r31', '0x160']
Translated addi r31 r31 0x160 to: ['gc_env.r[31] += 352; // addi r31, r31, 0x160']
Processing opcode: lwz, operands: ['r12', '0x0(r31)']
Translated lwz r12 0x0(r31) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r12, (r31)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000C014 to: if (gc_env.cr[0] == 0) goto L_8000C014;
Processing opcode: stw, operands: ['r28', '0x0(r31)']
Translated stw r28 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[28]); // stw r28, (r31)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r27', '0x0']
Translated addi r3 r27 0x0 to: ['gc_env.r[3] = gc_env.r[27] + 0; // addi r3, r27, 0x0']
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: addi, operands: ['r29', 'r29', '0x1']
Translated addi r29 r29 0x1 to: ['gc_env.r[29] += 1; // addi r29, r29, 0x1']
Translated cmpwi r29 0x4 to: gc_env.cr[0] = (gc_env.r[29] == 0x4) ? 0 : (gc_env.r[29] < 0x4 ? -1 : 1); // Compare with immediate
Processing opcode: addi, operands: ['r31', 'r31', '0x4']
Translated addi r31 r31 0x4 to: ['gc_env.r[31] += 4; // addi r31, r31, 0x4']
Translated blt .L_8000BFF4 to: ['if (gc_env.cr[0] & 0x8) goto L_8000BFF4; // blt .L_8000BFF4']
Translated lmw r26 0x18(r1) to: ['gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lmw r26, 0x18(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r26, 0x18(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r26, 0x18(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r26, 0x18(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r26, 0x18(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r26, 0x18(r1)']
Processing opcode: lwz, operands: ['r0', '0x34(r1)']
Translated lwz r0 0x34(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r0, 0x34(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x28(r1)']
Translated stwu r1 -0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x28, gc_env.r[1]); // stwu r1, -0x28(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x28;']
Translated stmw r27 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[27]); // stmw r27, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[28]); // stmw r27, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[29]); // stmw r27, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[30]); // stmw r27, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[31]); // stmw r27, 0x14(r1)']
Translated mr r27 r3 to: gc_env.r[27] = gc_env.r[3]; // Move register
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated lis r4 Type_8001B09C@ha to: ['gc_env.r[4] = ((uint32_t)&Type_8001B09C >> 16) & 0xFFFF; // lis r4, Type_8001B09C@ha']
Translated slwi r5 r27 2 to: ['gc_env.r[5] = gc_env.r[27] << 2; // slwi r5, r27, 2']
Processing opcode: addi, operands: ['r0', 'r4', 'Type_8001B09C@l']
Translated addi r0 r4 Type_8001B09C@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&Type_8001B09C & 0xFFFF); // addi r0, r4, Type_8001B09C@l']
Processing opcode: add, operands: ['r30', 'r0', 'r5']
Translated add r30 r0 r5 to: ['gc_env.r[30] = gc_env.r[0] + gc_env.r[5]; // add r30, r0, r5']
Processing opcode: lwz, operands: ['r28', '0x0(r30)']
Translated lwz r28 0x0(r30) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r28, (r30)']
Translated mr r29 r3 to: gc_env.r[29] = gc_env.r[3]; // Move register
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Translated lis r5 TypeTime_8001C7E0@ha to: ['gc_env.r[5] = ((uint32_t)&TypeTime_8001C7E0 >> 16) & 0xFFFF; // lis r5, TypeTime_8001C7E0@ha']
Translated slwi r6 r27 3 to: ['gc_env.r[6] = gc_env.r[27] << 3; // slwi r6, r27, 3']
Processing opcode: addi, operands: ['r0', 'r5', 'TypeTime_8001C7E0@l']
Translated addi r0 r5 TypeTime_8001C7E0@l to: ['gc_env.r[0] = gc_env.r[5] + ((uint32_t)&TypeTime_8001C7E0 & 0xFFFF); // addi r0, r5, TypeTime_8001C7E0@l']
Processing opcode: add, operands: ['r31', 'r0', 'r6']
Translated add r31 r0 r6 to: ['gc_env.r[31] = gc_env.r[0] + gc_env.r[6]; // add r31, r0, r6']
Processing opcode: lwz, operands: ['r6', '0x4(r31)']
Translated lwz r6 0x4(r31) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x4); // lwz r6, 0x4(r31)']
Translated lis r5 Si_8001B088@ha to: ['gc_env.r[5] = ((uint32_t)&Si_8001B088 >> 16) & 0xFFFF; // lis r5, Si_8001B088@ha']
Processing opcode: addi, operands: ['r5', 'r5', 'Si_8001B088@l']
Translated addi r5 r5 Si_8001B088@l to: ['gc_env.r[5] = (uint32_t)&Si_8001B088; // lis + addi Si_8001B088 (completing pattern)']
Processing opcode: lwz, operands: ['r0', '0x0(r31)']
Translated lwz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r0, (r31)']
Translated subfc r4 r6 r4 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[4] - gc_env.r[6];', 'gc_env.r[4] = (uint32_t)subfc_temp; // subfc r4, r6, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= gc_env.r[6] ? 0x20000000 : 0);']
Translated subfe r0 r0 r3 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[3] - gc_env.r[0] - subfe_borrow;', 'gc_env.r[0] = (uint32_t)subfe_temp; // subfe r0, r0, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= (gc_env.r[0] + subfe_borrow) ? 0x20000000 : 0);']
Processing opcode: lwz, operands: ['r6', '0x4(r5)']
Translated lwz r6 0x4(r5) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x4); // lwz r6, 0x4(r5)']
Processing opcode: li, operands: ['r5', '0x80']
Translated li r5 0x80 to: ['gc_env.r[5] = 0x80; // li r5, 0x80']
Translated sraw r3 r5 r27 to: ['gc_env.r[3] = ((int32_t)gc_env.r[5]) >> (gc_env.r[27] & 31); // sraw r3, r5, r27']
Translated and. r3 r6 r3 to: gc_env.r[3] = gc_env.r[6] & gc_env.r[3];
Translated beq .L_8000C0D8 to: if (gc_env.cr[0] == 0) goto L_8000C0D8;
Translated cmplwi r28 0x8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[28] == 0x8) ? 0 : ((uint32_t)gc_env.r[28] < 0x8 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000C0CC to: if (gc_env.cr[0] == 0) goto L_8000C0CC;
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: stw, operands: ['r4', '0x4(r31)']
Translated stw r4 0x4(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x4, gc_env.r[4]); // stw r4, 0x4(r31)']
Processing opcode: stw, operands: ['r3', '0x0(r31)']
Translated stw r3 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[3]); // stw r3, (r31)']
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Translated b .L_8000C1E8 to: goto L_8000C1E8;
Processing opcode: stw, operands: ['r5', '0x0(r30)']
Translated stw r5 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[5]); // stw r5, (r30)']
Processing opcode: li, operands: ['r28', '0x80']
Translated li r28 0x80 to: ['gc_env.r[28] = 0x80; // li r28, 0x80']
Translated b .L_8000C188 to: goto L_8000C188;
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r6', '0xf8(r3)']
Translated lwz r6 0xf8(r3) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xF8); // lwz r6, 0xF8(r3)']
Translated lis r5 0x1062 to: ['gc_env.r[5] = 4194 << 16; // lis r5, 0x1062']
Processing opcode: addi, operands: ['r5', 'r5', '0x4dd3']
Translated addi r5 r5 0x4dd3 to: ['gc_env.r[5] += 19923; // addi r5, r5, 0x4dd3']
Translated srwi r6 r6 2 to: ['gc_env.r[6] = gc_env.r[6] >> 2; // srwi r6, r6, 2']
Translated mulhwu r5 r5 r6 to: ['gc_env.r[5] = (uint32_t)(((uint64_t)gc_env.r[5] * (uint64_t)gc_env.r[6]) >> 32); // mulhwu r5, r5, r6']
Translated srwi r5 r5 6 to: ['gc_env.r[5] = gc_env.r[5] >> 6; // srwi r5, r5, 6']
Processing opcode: mulli, operands: ['r7', 'r5', '0x32']
Translated mulli r7 r5 0x32 to: ['gc_env.r[7] = gc_env.r[5] * 50; // mulli r7, r5, 50']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated xoris r6 r3 0x8000 to: ['gc_env.r[6] = gc_env.r[3] ^ 0x80000000; // xoris r6, r3, 0x8000']
Translated xoris r5 r0 0x8000 to: ['gc_env.r[5] = gc_env.r[0] ^ 0x80000000; // xoris r5, r0, 0x8000']
Translated subfc r3 r4 r7 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[7] - gc_env.r[4];', 'gc_env.r[3] = (uint32_t)subfc_temp; // subfc r3, r4, r7', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[7] >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfe r5 r5 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[5] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r5, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[5] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r5 r6 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[6] - subfe_borrow;', 'gc_env.r[5] = (uint32_t)subfe_temp; // subfe r5, r6, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[6] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r5 r5 to: ['gc_env.r[5] = -(int32_t)gc_env.r[5]; // neg r5, r5']
Translated bne .L_8000C130 to: if (gc_env.cr[0] != 0) goto L_8000C130;
Translated cmplwi r28 0x8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[28] == 0x8) ? 0 : ((uint32_t)gc_env.r[28] < 0x8 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000C130 to: if (gc_env.cr[0] == 0) goto L_8000C130;
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Translated b .L_8000C1E8 to: goto L_8000C1E8;
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r6', '0xf8(r3)']
Translated lwz r6 0xf8(r3) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xF8); // lwz r6, 0xF8(r3)']
Translated lis r5 0x1062 to: ['gc_env.r[5] = 4194 << 16; // lis r5, 0x1062']
Processing opcode: addi, operands: ['r5', 'r5', '0x4dd3']
Translated addi r5 r5 0x4dd3 to: ['gc_env.r[5] += 19923; // addi r5, r5, 0x4dd3']
Translated srwi r6 r6 2 to: ['gc_env.r[6] = gc_env.r[6] >> 2; // srwi r6, r6, 2']
Translated mulhwu r5 r5 r6 to: ['gc_env.r[5] = (uint32_t)(((uint64_t)gc_env.r[5] * (uint64_t)gc_env.r[6]) >> 32); // mulhwu r5, r5, r6']
Translated srwi r5 r5 6 to: ['gc_env.r[5] = gc_env.r[5] >> 6; // srwi r5, r5, 6']
Processing opcode: mulli, operands: ['r6', 'r5', '0x4b']
Translated mulli r6 r5 0x4b to: ['gc_env.r[6] = gc_env.r[5] * 75; // mulli r6, r5, 75']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated xoris r5 r3 0x8000 to: ['gc_env.r[5] = gc_env.r[3] ^ 0x80000000; // xoris r5, r3, 0x8000']
Translated xoris r3 r0 0x8000 to: ['gc_env.r[3] = gc_env.r[0] ^ 0x80000000; // xoris r3, r0, 0x8000']
Translated subfc r0 r4 r6 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[6] - gc_env.r[4];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r4, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfe r3 r3 r5 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[5] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r3, r5', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r3 r5 r5 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[5] - gc_env.r[5] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r5, r5', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= (gc_env.r[5] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r3 r3 to: ['gc_env.r[3] = -(int32_t)gc_env.r[3]; // neg r3, r3']
Translated bne .L_8000C17C to: if (gc_env.cr[0] != 0) goto L_8000C17C;
Processing opcode: li, operands: ['r0', '0x80']
Translated li r0 0x80 to: ['gc_env.r[0] = 0x80; // li r0, 0x80']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Translated b .L_8000C188 to: goto L_8000C188;
Processing opcode: li, operands: ['r0', '0x80']
Translated li r0 0x80 to: ['gc_env.r[0] = 0x80; // li r0, 0x80']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Processing opcode: li, operands: ['r28', '0x80']
Translated li r28 0x80 to: ['gc_env.r[28] = 0x80; // li r28, 0x80']
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: stw, operands: ['r4', '0x4(r31)']
Translated stw r4 0x4(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x4, gc_env.r[4]); // stw r4, 0x4(r31)']
Translated lis r4 0x431c to: ['gc_env.r[4] = 17180 << 16; // lis r4, 0x431c']
Translated lis r5 GetTypeCallback@ha to: ['gc_env.r[5] = ((uint32_t)&GetTypeCallback >> 16) & 0xFFFF; // lis r5, GetTypeCallback@ha']
Processing opcode: stw, operands: ['r3', '0x0(r31)']
Translated stw r3 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[3]); // stw r3, (r31)']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: addi, operands: ['r8', 'r5', 'GetTypeCallback@l']
Translated addi r8 r5 GetTypeCallback@l to: ['gc_env.r[8] = gc_env.r[5] + ((uint32_t)&GetTypeCallback & 0xFFFF); // addi r8, r5, GetTypeCallback@l']
Processing opcode: lwz, operands: ['r0', '0xf8(r3)']
Translated lwz r0 0xf8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xF8); // lwz r0, 0xF8(r3)']
Processing opcode: subi, operands: ['r4', 'r4', '0x217d']
Translated subi r4 r4 0x217d to: ['gc_env.r[4] = gc_env.r[4] - 8573; // subi r4, r4, 8573']
Processing opcode: addi, operands: ['r3', 'r27', '0x0']
Translated addi r3 r27 0x0 to: ['gc_env.r[3] = gc_env.r[27] + 0; // addi r3, r27, 0x0']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Translated mulhwu r0 r4 r0 to: ['gc_env.r[0] = (uint32_t)(((uint64_t)gc_env.r[4] * (uint64_t)gc_env.r[0]) >> 32); // mulhwu r0, r4, r0']
Translated srwi r0 r0 15 to: ['gc_env.r[0] = gc_env.r[0] >> 15; // srwi r0, r0, 15']
Processing opcode: mulli, operands: ['r0', 'r0', '0x41']
Translated mulli r0 r0 0x41 to: ['gc_env.r[0] = gc_env.r[0] * 65; // mulli r0, r0, 65']
Translated srwi r10 r0 3 to: ['gc_env.r[10] = gc_env.r[0] >> 3; // srwi r10, r0, 3']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: li, operands: ['r4', 'cmdTypeAndStatus$371_8001EF04@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: li, operands: ['r7', '0x3']
Translated li r7 0x3 to: ['gc_env.r[7] = 0x3; // li r7, 0x3']
Processing opcode: li, operands: ['r9', '0x0']
Translated li r9 0x0 to: ['gc_env.r[9] = 0x0; // li r9, 0x0']
Translated bl SITransfer to: SITransfer();
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Translated lmw r27 0x14(r1) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lmw r27, 0x14(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lmw r27, 0x14(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r27, 0x14(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r27, 0x14(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r27, 0x14(r1)']
Processing opcode: lwz, operands: ['r0', '0x2c(r1)']
Translated lwz r0 0x2c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r0, 0x2C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x28']
Translated addi r1 r1 0x28 to: ['gc_env.r[1] += 40; // addi r1, r1, 0x28']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: stw, operands: ['r29', '0x14(r1)']
Translated stw r29 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stw r29, 0x14(r1)']
Processing opcode: addi, operands: ['r29', 'r3', '0x0']
Translated addi r29 r3 0x0 to: ['gc_env.r[29] = gc_env.r[3] + 0; // addi r29, r3, 0x0']
Translated cmplwi r29 0xb to: gc_env.cr[0] = ((uint32_t)gc_env.r[29] == 0xb) ? 0 : ((uint32_t)gc_env.r[29] < 0xb ? -1 : 1); // Logical compare with immediate
Translated lis r3 XYNTSC_8001B158@ha to: ['gc_env.r[3] = ((uint32_t)&XYNTSC_8001B158 >> 16) & 0xFFFF; // lis r3, XYNTSC_8001B158@ha']
Processing opcode: addi, operands: ['r31', 'r3', 'XYNTSC_8001B158@l']
Translated addi r31 r3 XYNTSC_8001B158@l to: ['gc_env.r[31] = (uint32_t)&XYNTSC_8001B158; // lis + addi XYNTSC_8001B158 (completing pattern)']
Translated ble .L_8000C22C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000C22C; // ble .L_8000C22C']
Processing opcode: li, operands: ['r29', '0xb']
Translated li r29 0xb to: ['gc_env.r[29] = 0xb; // li r29, 0xb']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: stw, operands: ['r29', 'SamplingRate_8001EF10@sda21(r0)']
Translated stw r29 SamplingRate_8001EF10@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&SamplingRate_8001EF10, gc_env.r[29]); // stw r29, SamplingRate_8001EF10@sda21(r0)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated bl VIGetTvFormat to: VIGetTvFormat();
Translated cmpwi r3 0x2 to: gc_env.cr[0] = (gc_env.r[3] == 0x2) ? 0 : (gc_env.r[3] < 0x2 ? -1 : 1); // Compare with immediate
Translated beq .L_8000C264 to: if (gc_env.cr[0] == 0) goto L_8000C264;
Translated bge .L_8000C258 to: if (gc_env.cr[0] >= 0) goto L_8000C258;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000C264 to: if (gc_env.cr[0] == 0) goto L_8000C264;
Translated bge .L_8000C26C to: if (gc_env.cr[0] >= 0) goto L_8000C26C;
Translated b .L_8000C274 to: goto L_8000C274;
Translated cmpwi r3 0x5 to: gc_env.cr[0] = (gc_env.r[3] == 0x5) ? 0 : (gc_env.r[3] < 0x5 ? -1 : 1); // Compare with immediate
Translated beq .L_8000C264 to: if (gc_env.cr[0] == 0) goto L_8000C264;
Translated b .L_8000C274 to: goto L_8000C274;
Translated mr r4 r31 to: gc_env.r[4] = gc_env.r[31]; // Move register
Translated b .L_8000C288 to: goto L_8000C288;
Processing opcode: addi, operands: ['r4', 'r31', '0x30']
Translated addi r4 r31 0x30 to: ['gc_env.r[4] = gc_env.r[31] + 48; // addi r4, r31, 0x30']
Translated b .L_8000C288 to: goto L_8000C288;
Processing opcode: addi, operands: ['r3', 'r31', '0x60']
Translated addi r3 r31 0x60 to: ['gc_env.r[3] = gc_env.r[31] + 96; // addi r3, r31, 0x60']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lhz, operands: ['r0', '0x206c(r3)']
Translated lhz r0 0x206c(r3) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x206c); // lhz r0, 0x206c(r3)']
Translated clrlwi. r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Translated beq .L_8000C2A0 to: if (gc_env.cr[0] == 0) goto L_8000C2A0;
Processing opcode: li, operands: ['r5', '0x2']
Translated li r5 0x2 to: ['gc_env.r[5] = 0x2; // li r5, 0x2']
Translated b .L_8000C2A4 to: goto L_8000C2A4;
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Translated slwi r3 r29 2 to: ['gc_env.r[3] = gc_env.r[29] << 2; // slwi r3, r29, 2']
Translated lhzx r0 r4 r3 to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[4] + gc_env.r[3]); // lhzx r0, r4, r3']
Processing opcode: add, operands: ['r3', 'r4', 'r3']
Translated add r3 r4 r3 to: ['gc_env.r[3] = gc_env.r[4] + gc_env.r[3]; // add r3, r4, r3']
Processing opcode: lbz, operands: ['r4', '0x2(r3)']
Translated lbz r4 0x2(r3) to: ['gc_env.r[4] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x2); // lbz r4, 0x2(r3)']
Processing opcode: mullw, operands: ['r3', 'r5', 'r0']
Translated mullw r3 r5 r0 to: ['gc_env.r[3] = gc_env.r[5] * gc_env.r[0]; // mullw r3, r5, r0']
Translated bl SISetXY to: SISetXY();
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: lwz, operands: ['r29', '0x14(r1)']
Translated lwz r29 0x14(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r29, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: lwz, operands: ['r3', 'SamplingRate_8001EF10@sda21(r0)']
Translated lwz r3 SamplingRate_8001EF10@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&SamplingRate_8001EF10); // lwz r3, SamplingRate_8001EF10@sda21(r0)']
Translated bl SISetSamplingRate to: SISetSamplingRate();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: addi, operands: ['r0', 'r4', '0x40']
Translated addi r0 r4 0x40 to: ['gc_env.r[0] = gc_env.r[4] + 64; // addi r0, r4, 0x40']
Translated lis r3 __DBExceptionDestination@ha to: ['gc_env.r[3] = ((uint32_t)&__DBExceptionDestination >> 16) & 0xFFFF; // lis r3, __DBExceptionDestination@ha']
Processing opcode: stw, operands: ['r0', '__DBInterface@sda21(r0)']
Translated stw r0 __DBInterface@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&__DBInterface, gc_env.r[0]); // stw r0, __DBInterface@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r3', '__DBExceptionDestination@l']
Translated addi r3 r3 __DBExceptionDestination@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&__DBExceptionDestination & 0xFFFF); // addi r3, r3, __DBExceptionDestination@l']
Processing opcode: addis, operands: ['r0', 'r3', '0x8000']
Translated addis r0 r3 0x8000 to: ['gc_env.r[0] = gc_env.r[3] + (32768 << 16); // addis r0, r3, 32768']
Processing opcode: stw, operands: ['r0', '0x48(r4)']
Translated stw r0 0x48(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x48, gc_env.r[0]); // stw r0, 0x48(r4)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', 'DBVerbose@sda21(r0)']
Translated stw r0 DBVerbose@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&DBVerbose, gc_env.r[0]); // stw r0, DBVerbose@sda21(r0)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 lbl_8001B1F0@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001B1F0 >> 16) & 0xFFFF; // lis r3, lbl_8001B1F0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001B1F0@l']
Translated addi r3 r3 lbl_8001B1F0@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&lbl_8001B1F0 & 0xFFFF); // addi r3, r3, lbl_8001B1F0@l']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r4', '0xc0(r0)']
Translated lwz r4 0xc0(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[0] + 0xC0); // lwz r4, 0xC0(r0)']
Processing opcode: addis, operands: ['r31', 'r4', '0x8000']
Translated addis r31 r4 0x8000 to: ['gc_env.r[31] = gc_env.r[4] + (32768 << 16); // addis r31, r4, 32768']
Translated bl OSReport to: OSReport();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSDumpContext to: OSDumpContext();
Translated bl PPCHalt to: PPCHalt();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mfmsr r3 to: gc_env.r[3] = gc_env.msr; // Move from machine state register
Translated ori r3 r3 0x30 to: ['gc_env.r[3] |= 48; // ori r3, r3, 0x30']
Translated mtmsr r3 to: gc_env.msr = gc_env.r[3]; // Move to machine state register
Translated b fn_8000C32C to: fn_8000C32C();
Processing opcode: lwz, operands: ['r4', '__DBInterface@sda21(r0)']
Translated lwz r4 __DBInterface@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&__DBInterface); // lwz r4, __DBInterface@sda21(r0)']
Translated clrlwi r0 r3 24 to: ['gc_env.r[0] = gc_env.r[3] & 0xFF; // clrlwi r0, r3, 24']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r4', '0x4(r4)']
Translated lwz r4 0x4(r4) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwz r4, 0x4(r4)']
Translated slw r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] << (gc_env.r[0] & 31); // slw r0, r3, r0']
Translated and r3 r4 r0 to: gc_env.r[3] = gc_env.r[4] & gc_env.r[0];
Translated blr  to: return;
Processing opcode: stwu, operands: ['r1', '-0x70(r1)']
Translated stwu r1 -0x70(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x70, gc_env.r[1]); // stwu r1, -0x70(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x70;']
Translated bne cr1 .L_8000C3C8 to: if (gc_env.cr[1] != 0) goto L_8000C3C8;
Translated stfd f1 0x28(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[1], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x28, temp); // stfd f1, 0x28(r1)']
Translated stfd f2 0x30(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[2], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x30, temp); // stfd f2, 0x30(r1)']
Translated stfd f3 0x38(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[3], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x38, temp); // stfd f3, 0x38(r1)']
Translated stfd f4 0x40(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[4], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x40, temp); // stfd f4, 0x40(r1)']
Translated stfd f5 0x48(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[5], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x48, temp); // stfd f5, 0x48(r1)']
Translated stfd f6 0x50(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[6], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x50, temp); // stfd f6, 0x50(r1)']
Translated stfd f7 0x58(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[7], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x58, temp); // stfd f7, 0x58(r1)']
Translated stfd f8 0x60(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[8], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x60, temp); // stfd f8, 0x60(r1)']
Processing opcode: stw, operands: ['r3', '0x8(r1)']
Translated stw r3 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[3]); // stw r3, 0x8(r1)']
Processing opcode: stw, operands: ['r4', '0xc(r1)']
Translated stw r4 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[4]); // stw r4, 0xC(r1)']
Processing opcode: stw, operands: ['r5', '0x10(r1)']
Translated stw r5 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[5]); // stw r5, 0x10(r1)']
Processing opcode: stw, operands: ['r6', '0x14(r1)']
Translated stw r6 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[6]); // stw r6, 0x14(r1)']
Processing opcode: stw, operands: ['r7', '0x18(r1)']
Translated stw r7 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[7]); // stw r7, 0x18(r1)']
Processing opcode: stw, operands: ['r8', '0x1c(r1)']
Translated stw r8 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[8]); // stw r8, 0x1C(r1)']
Processing opcode: stw, operands: ['r9', '0x20(r1)']
Translated stw r9 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[9]); // stw r9, 0x20(r1)']
Processing opcode: stw, operands: ['r10', '0x24(r1)']
Translated stw r10 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[10]); // stw r10, 0x24(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x70']
Translated addi r1 r1 0x70 to: ['gc_env.r[1] += 112; // addi r1, r1, 0x70']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 lbl_8001C8C0@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C8C0 >> 16) & 0xFFFF; // lis r3, lbl_8001C8C0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF64@sda21(r0)']
Translated stw r0 lbl_8001EF64@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF64, gc_env.r[0]); // stw r0, lbl_8001EF64@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001C8C0@l(r3)']
Translated stw r0 lbl_8001C8C0@l(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + (uint32_t)&lbl_8001C8C0, gc_env.r[0]); // stw r0, lbl_8001C8C0@l/h(r3)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl fn_8000D200 to: fn_8000D200();
Translated bl OSInitAlarm to: OSInitAlarm();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 lbl_8001C8C0@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C8C0 >> 16) & 0xFFFF; // lis r3, lbl_8001C8C0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x2e8(r1)']
Translated stwu r1 -0x2e8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x2E8, gc_env.r[1]); // stwu r1, -0x2E8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x2E8;']
Processing opcode: stw, operands: ['r31', '0x2e4(r1)']
Translated stw r31 0x2e4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2E4, gc_env.r[31]); // stw r31, 0x2E4(r1)']
Processing opcode: stw, operands: ['r30', '0x2e0(r1)']
Translated stw r30 0x2e0(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2E0, gc_env.r[30]); // stw r30, 0x2E0(r1)']
Processing opcode: addi, operands: ['r30', 'r3', 'lbl_8001C8C0@l']
Translated addi r30 r3 lbl_8001C8C0@l to: ['gc_env.r[30] = gc_env.r[3] + ((uint32_t)&lbl_8001C8C0 & 0xFFFF); // addi r30, r3, lbl_8001C8C0@l']
Processing opcode: addi, operands: ['r3', 'r30', '0x68']
Translated addi r3 r30 0x68 to: ['gc_env.r[3] = gc_env.r[30] + 104; // addi r3, r30, 0x68']
Processing opcode: stw, operands: ['r29', '0x2dc(r1)']
Translated stw r29 0x2dc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2DC, gc_env.r[29]); // stw r29, 0x2DC(r1)']
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Processing opcode: stw, operands: ['r28', '0x2d8(r1)']
Translated stw r28 0x2d8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2D8, gc_env.r[28]); // stw r28, 0x2D8(r1)']
Processing opcode: addi, operands: ['r28', 'r4', '0x0']
Translated addi r28 r4 0x0 to: ['gc_env.r[28] = gc_env.r[4] + 0; // addi r28, r4, 0x0']
Translated bl fn_80006288 to: fn_80006288();
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF60@sda21(r0)']
Translated lwz r0 lbl_8001EF60@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF60); // lwz r0, lbl_8001EF60@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000C4AC to: if (gc_env.cr[0] == 0) goto L_8000C4AC;
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: stw, operands: ['r4', 'lbl_8001EF54@sda21(r0)']
Translated stw r4 lbl_8001EF54@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF54, gc_env.r[4]); // stw r4, lbl_8001EF54@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF50@sda21(r0)']
Translated stw r3 lbl_8001EF50@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF50, gc_env.r[3]); // stw r3, lbl_8001EF50@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EE18@sda21(r0)']
Translated stw r0 lbl_8001EE18@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EE18, gc_env.r[0]); // stw r0, lbl_8001EE18@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0xc4(r30)']
Translated lwz r0 0xc4(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0xC4); // lwz r0, 0xC4(r30)']
Processing opcode: stw, operands: ['r0', '0xb8(r30)']
Translated stw r0 0xb8(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0xB8, gc_env.r[0]); // stw r0, 0xB8(r30)']
Processing opcode: lwz, operands: ['r0', '0xc8(r30)']
Translated lwz r0 0xc8(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0xC8); // lwz r0, 0xC8(r30)']
Processing opcode: stw, operands: ['r0', '0xbc(r30)']
Translated stw r0 0xbc(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0xBC, gc_env.r[0]); // stw r0, 0xBC(r30)']
Processing opcode: lwz, operands: ['r0', '0xcc(r30)']
Translated lwz r0 0xcc(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0xCC); // lwz r0, 0xCC(r30)']
Processing opcode: stw, operands: ['r0', '0xc0(r30)']
Translated stw r0 0xc0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0xC0, gc_env.r[0]); // stw r0, 0xC0(r30)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF20@sda21(r0)']
Translated lwz r0 lbl_8001EF20@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF20); // lwz r0, lbl_8001EF20@sda21(r0)']
Translated cmpwi r0 0x1 to: gc_env.cr[0] = (gc_env.r[0] == 0x1) ? 0 : (gc_env.r[0] < 0x1 ? -1 : 1); // Compare with immediate
Translated bne .L_8000C4AC to: if (gc_env.cr[0] != 0) goto L_8000C4AC;
Translated ori r29 r29 0x8 to: ['gc_env.r[29] |= 8; // ori r29, r29, 0x8']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF60@sda21(r0)']
Translated stw r0 lbl_8001EF60@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF60, gc_env.r[0]); // stw r0, lbl_8001EF60@sda21(r0)']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF20@sda21(r0)']
Translated stw r0 lbl_8001EF20@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF20, gc_env.r[0]); // stw r0, lbl_8001EF20@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x6000(r3)']
Translated lwz r0 0x6000(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6000); // lwz r0, 0x6000(r3)']
Translated andi. r4 r0 0x2a to: gc_env.r[4] = gc_env.r[0] & 0x2a;
Translated andi. r3 r0 0x54 to: gc_env.r[3] = gc_env.r[0] & 0x54;
Translated slwi r0 r4 1 to: ['gc_env.r[0] = gc_env.r[4] << 1; // slwi r0, r4, 1']
Translated and r3 r3 r0 to: gc_env.r[3] = gc_env.r[3] & gc_env.r[0];
Translated rlwinm. r0 r3 0 25 25 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x40; // rlwinm r0, r3, 0, 25, 25', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000C4DC to: if (gc_env.cr[0] == 0) goto L_8000C4DC;
Translated ori r29 r29 0x8 to: ['gc_env.r[29] |= 8; // ori r29, r29, 0x8']
Translated rlwinm. r0 r3 0 27 27 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x10; // rlwinm r0, r3, 0, 27, 27', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000C4E8 to: if (gc_env.cr[0] == 0) goto L_8000C4E8;
Translated ori r29 r29 0x1 to: ['gc_env.r[29] |= 1; // ori r29, r29, 0x1']
Translated rlwinm. r0 r3 0 29 29 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x4; // rlwinm r0, r3, 0, 29, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000C4F4 to: if (gc_env.cr[0] == 0) goto L_8000C4F4;
Translated ori r29 r29 0x2 to: ['gc_env.r[29] |= 2; // ori r29, r29, 0x2']
Translated cmplwi r29 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[29] == 0x0) ? 0 : ((uint32_t)gc_env.r[29] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000C504 to: if (gc_env.cr[0] == 0) goto L_8000C504;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF38@sda21(r0)']
Translated stw r0 lbl_8001EF38@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF38, gc_env.r[0]); // stw r0, lbl_8001EF38@sda21(r0)']
Translated or r0 r3 r4 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[4]; // or r0, r3, r4']
Translated lis r31 0xcc00 to: ['gc_env.r[31] = -13312 << 16; // lis r31, 0xcc00']
Processing opcode: stw, operands: ['r0', '0x6000(r31)']
Translated stw r0 0x6000(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x6000, gc_env.r[0]); // stw r0, 0x6000(r31)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF38@sda21(r0)']
Translated lwz r0 lbl_8001EF38@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF38); // lwz r0, lbl_8001EF38@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000C5B4 to: if (gc_env.cr[0] == 0) goto L_8000C5B4;
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Translated lis r5 0x8000 to: ['gc_env.r[5] = -32768 << 16; // lis r5, 0x8000']
Processing opcode: lwz, operands: ['r7', 'lbl_8001EF30@sda21(r0)']
Translated lwz r7 lbl_8001EF30@sda21(r0) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF30); // lwz r7, lbl_8001EF30@sda21(r0)']
Processing opcode: lwz, operands: ['r6', '0xf8(r5)']
Translated lwz r6 0xf8(r5) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xF8); // lwz r6, 0xF8(r5)']
Translated lis r5 0x1062 to: ['gc_env.r[5] = 4194 << 16; // lis r5, 0x1062']
Processing opcode: addi, operands: ['r5', 'r5', '0x4dd3']
Translated addi r5 r5 0x4dd3 to: ['gc_env.r[5] += 19923; // addi r5, r5, 0x4dd3']
Processing opcode: lwz, operands: ['r8', 'lbl_8001EF34@sda21(r0)']
Translated lwz r8 lbl_8001EF34@sda21(r0) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF34); // lwz r8, lbl_8001EF34@sda21(r0)']
Translated srwi r6 r6 2 to: ['gc_env.r[6] = gc_env.r[6] >> 2; // srwi r6, r6, 2']
Translated mulhwu r5 r5 r6 to: ['gc_env.r[5] = (uint32_t)(((uint64_t)gc_env.r[5] * (uint64_t)gc_env.r[6]) >> 32); // mulhwu r5, r5, r6']
Translated srwi r5 r5 6 to: ['gc_env.r[5] = gc_env.r[5] >> 6; // srwi r5, r5, 6']
Processing opcode: mulli, operands: ['r5', 'r5', '0xc8']
Translated mulli r5 r5 0xc8 to: ['gc_env.r[5] = gc_env.r[5] * 200; // mulli r5, r5, 200']
Translated subfc r6 r8 r4 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[4] - gc_env.r[8];', 'gc_env.r[6] = (uint32_t)subfc_temp; // subfc r6, r8, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= gc_env.r[8] ? 0x20000000 : 0);']
Translated subfe r3 r7 r3 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[3] - gc_env.r[7] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r7, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= (gc_env.r[7] + subfe_borrow) ? 0x20000000 : 0);']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated xoris r4 r3 0x8000 to: ['gc_env.r[4] = gc_env.r[3] ^ 0x80000000; // xoris r4, r3, 0x8000']
Translated xoris r3 r0 0x8000 to: ['gc_env.r[3] = gc_env.r[0] ^ 0x80000000; // xoris r3, r0, 0x8000']
Translated subfc r0 r5 r6 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[6] - gc_env.r[5];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r5, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= gc_env.r[5] ? 0x20000000 : 0);']
Translated subfe r3 r3 r4 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[4] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r3, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r3 r4 r4 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[4] - gc_env.r[4] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r4, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= (gc_env.r[4] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r3 r3 to: ['gc_env.r[3] = -(int32_t)gc_env.r[3]; // neg r3, r3']
Translated beq .L_8000C5B4 to: if (gc_env.cr[0] == 0) goto L_8000C5B4;
Processing opcode: lwzu, operands: ['r0', '0x6004(r31)']
Translated lwzu r0 0x6004(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x6004); // lwzu r0, 0x6004(r31)', 'gc_env.r[31] = gc_env.r[31] + 0x6004;']
Translated rlwinm r3 r0 0 29 29 to: ['gc_env.r[3] = (gc_env.r[0] << 0) & 0x4; // rlwinm r3, r0, 0, 29, 29']
Translated rlwinm r0 r0 1 29 29 to: ['gc_env.r[0] = (gc_env.r[0] << 1) & 0x4; // rlwinm r0, r0, 1, 29, 29']
Translated and r0 r3 r0 to: gc_env.r[0] = gc_env.r[3] & gc_env.r[0];
Translated rlwinm. r0 r0 0 29 29 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x4; // rlwinm r0, r0, 0, 29, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000C5A8 to: if (gc_env.cr[0] == 0) goto L_8000C5A8;
Processing opcode: lwz, operands: ['r12', 'lbl_8001EF2C@sda21(r0)']
Translated lwz r12 lbl_8001EF2C@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF2C); // lwz r12, lbl_8001EF2C@sda21(r0)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000C5A0 to: if (gc_env.cr[0] == 0) goto L_8000C5A0;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: li, operands: ['r3', '0x4']
Translated li r3 0x4 to: ['gc_env.r[3] = 0x4; // li r3, 0x4']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF2C@sda21(r0)']
Translated stw r0 lbl_8001EF2C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF2C, gc_env.r[0]); // stw r0, lbl_8001EF2C@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x0(r31)']
Translated lwz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r0, (r31)']
Processing opcode: stw, operands: ['r0', '0x0(r31)']
Translated stw r0 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stw r0, (r31)']
Translated b .L_8000C608 to: goto L_8000C608;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF3C@sda21(r0)']
Translated lwz r0 lbl_8001EF3C@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF3C); // lwz r0, lbl_8001EF3C@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000C5FC to: if (gc_env.cr[0] == 0) goto L_8000C5FC;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r5', 'r3', '0x6000']
Translated addi r5 r3 0x6000 to: ['gc_env.r[5] = gc_env.r[3] + 24576; // addi r5, r3, 0x6000']
Processing opcode: lwzu, operands: ['r0', '0x4(r5)']
Translated lwzu r0 0x4(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x4); // lwzu r0, 0x4(r5)', 'gc_env.r[5] = gc_env.r[5] + 0x4;']
Translated rlwinm r4 r0 0 30 30 to: ['gc_env.r[4] = (gc_env.r[0] << 0) & 0x2; // rlwinm r4, r0, 0, 30, 30']
Translated rlwinm r3 r0 0 29 29 to: ['gc_env.r[3] = (gc_env.r[0] << 0) & 0x4; // rlwinm r3, r0, 0, 29, 29']
Translated rlwinm r0 r0 1 29 29 to: ['gc_env.r[0] = (gc_env.r[0] << 1) & 0x4; // rlwinm r0, r0, 1, 29, 29']
Translated and r3 r3 r0 to: gc_env.r[3] = gc_env.r[3] & gc_env.r[0];
Translated rlwinm. r0 r3 0 29 29 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x4; // rlwinm r0, r3, 0, 29, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000C5E8 to: if (gc_env.cr[0] == 0) goto L_8000C5E8;
Translated ori r29 r29 0x4 to: ['gc_env.r[29] |= 4; // ori r29, r29, 0x4']
Translated or r0 r3 r4 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[4]; // or r0, r3, r4']
Processing opcode: stw, operands: ['r0', '0x0(r5)']
Translated stw r0 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stw r0, (r5)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF3C@sda21(r0)']
Translated stw r0 lbl_8001EF3C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF3C, gc_env.r[0]); // stw r0, lbl_8001EF3C@sda21(r0)']
Translated b .L_8000C608 to: goto L_8000C608;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x6004(r3)']
Translated stw r0 0x6004(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x6004, gc_env.r[0]); // stw r0, 0x6004(r3)']
Translated rlwinm. r0 r29 0 28 28 to: ['gc_env.r[0] = (gc_env.r[29] << 0) & 0x8; // rlwinm r0, r29, 0, 28, 28', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000C620 to: if (gc_env.cr[0] == 0) goto L_8000C620;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF40@sda21(r0)']
Translated lwz r0 lbl_8001EF40@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF40); // lwz r0, lbl_8001EF40@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000C620 to: if (gc_env.cr[0] != 0) goto L_8000C620;
Translated rlwinm r29 r29 0 29 27 to: ['gc_env.r[29] = (gc_env.r[29] << 0) & -0x9; // rlwinm r29, r29, 0, 29, 27']
Translated clrlwi. r0 r29 31 to: ['gc_env.r[0] = gc_env.r[29] & 0x1; // clrlwi r0, r29, 31']
Translated beq .L_8000C6A4 to: if (gc_env.cr[0] == 0) goto L_8000C6A4;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF64@sda21(r0)']
Translated lwz r0 lbl_8001EF64@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF64); // lwz r0, lbl_8001EF64@sda21(r0)']
Processing opcode: mulli, operands: ['r0', 'r0', '0x14']
Translated mulli r0 r0 0x14 to: ['gc_env.r[0] = gc_env.r[0] * 20; // mulli r0, r0, 20']
Translated lwzx r3 r30 r0 to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[30] + gc_env.r[0]); // lwzx r3, r30, r0']
Translated cmpwi r3 0x1 to: gc_env.cr[0] = (gc_env.r[3] == 0x1) ? 0 : (gc_env.r[3] < 0x1 ? -1 : 1); // Compare with immediate
Translated bne .L_8000C668 to: if (gc_env.cr[0] != 0) goto L_8000C668;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF64@sda21(r0)']
Translated lwz r3 lbl_8001EF64@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF64); // lwz r3, lbl_8001EF64@sda21(r0)']
Processing opcode: add, operands: ['r6', 'r30', 'r0']
Translated add r6 r30 r0 to: ['gc_env.r[6] = gc_env.r[30] + gc_env.r[0]; // add r6, r30, r0']
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF64@sda21(r0)']
Translated stw r0 lbl_8001EF64@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF64, gc_env.r[0]); // stw r0, lbl_8001EF64@sda21(r0)']
Processing opcode: lwz, operands: ['r3', '0x4(r6)']
Translated lwz r3 0x4(r6) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x4); // lwz r3, 0x4(r6)']
Processing opcode: lwz, operands: ['r4', '0x8(r6)']
Translated lwz r4 0x8(r6) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x8); // lwz r4, 0x8(r6)']
Processing opcode: lwz, operands: ['r5', '0xc(r6)']
Translated lwz r5 0xc(r6) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0xC); // lwz r5, 0xC(r6)']
Processing opcode: lwz, operands: ['r6', '0x10(r6)']
Translated lwz r6 0x10(r6) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x10); // lwz r6, 0x10(r6)']
Translated bl fn_8000C818 to: fn_8000C818();
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated b .L_8000C698 to: goto L_8000C698;
Translated cmpwi r3 0x2 to: gc_env.cr[0] = (gc_env.r[3] == 0x2) ? 0 : (gc_env.r[3] < 0x2 ? -1 : 1); // Compare with immediate
Translated bne .L_8000C694 to: if (gc_env.cr[0] != 0) goto L_8000C694;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF64@sda21(r0)']
Translated lwz r3 lbl_8001EF64@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF64); // lwz r3, lbl_8001EF64@sda21(r0)']
Processing opcode: add, operands: ['r4', 'r30', 'r0']
Translated add r4 r30 r0 to: ['gc_env.r[4] = gc_env.r[30] + gc_env.r[0]; // add r4, r30, r0']
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF64@sda21(r0)']
Translated stw r0 lbl_8001EF64@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF64, gc_env.r[0]); // stw r0, lbl_8001EF64@sda21(r0)']
Processing opcode: lwz, operands: ['r3', '0xc(r4)']
Translated lwz r3 0xc(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xC); // lwz r3, 0xC(r4)']
Processing opcode: lwz, operands: ['r4', '0x10(r4)']
Translated lwz r4 0x10(r4) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x10); // lwz r4, 0x10(r4)']
Translated bl fn_8000CC40 to: fn_8000CC40();
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated b .L_8000C698 to: goto L_8000C698;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000C6B4 to: if (gc_env.cr[0] == 0) goto L_8000C6B4;
Translated b .L_8000C704 to: goto L_8000C704;
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF64@sda21(r0)']
Translated stw r0 lbl_8001EF64@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF64, gc_env.r[0]); // stw r0, lbl_8001EF64@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r1', '0x10']
Translated addi r3 r1 0x10 to: ['gc_env.r[3] = gc_env.r[1] + 16; // addi r3, r1, 0x10']
Translated bl OSClearContext to: OSClearContext();
Processing opcode: addi, operands: ['r3', 'r1', '0x10']
Translated addi r3 r1 0x10 to: ['gc_env.r[3] = gc_env.r[1] + 16; // addi r3, r1, 0x10']
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Translated cmplwi r29 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[29] == 0x0) ? 0 : ((uint32_t)gc_env.r[29] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000C6F4 to: if (gc_env.cr[0] == 0) goto L_8000C6F4;
Processing opcode: lwz, operands: ['r12', 'lbl_8001EF28@sda21(r0)']
Translated lwz r12 lbl_8001EF28@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF28); // lwz r12, lbl_8001EF28@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r0', 'lbl_8001EF28@sda21(r0)']
Translated stw r0 lbl_8001EF28@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF28, gc_env.r[0]); // stw r0, lbl_8001EF28@sda21(r0)']
Translated beq .L_8000C6EC to: if (gc_env.cr[0] == 0) goto L_8000C6EC;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF40@sda21(r0)']
Translated stw r0 lbl_8001EF40@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF40, gc_env.r[0]); // stw r0, lbl_8001EF40@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r1', '0x10']
Translated addi r3 r1 0x10 to: ['gc_env.r[3] = gc_env.r[1] + 16; // addi r3, r1, 0x10']
Translated bl OSClearContext to: OSClearContext();
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Processing opcode: lwz, operands: ['r0', '0x2ec(r1)']
Translated lwz r0 0x2ec(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2EC); // lwz r0, 0x2EC(r1)']
Processing opcode: lwz, operands: ['r31', '0x2e4(r1)']
Translated lwz r31 0x2e4(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2E4); // lwz r31, 0x2E4(r1)']
Processing opcode: lwz, operands: ['r30', '0x2e0(r1)']
Translated lwz r30 0x2e0(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2E0); // lwz r30, 0x2E0(r1)']
Processing opcode: lwz, operands: ['r29', '0x2dc(r1)']
Translated lwz r29 0x2dc(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2DC); // lwz r29, 0x2DC(r1)']
Processing opcode: lwz, operands: ['r28', '0x2d8(r1)']
Translated lwz r28 0x2d8(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2D8); // lwz r28, 0x2D8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x2e8']
Translated addi r1 r1 0x2e8 to: ['gc_env.r[1] += 744; // addi r1, r1, 0x2e8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 lbl_8001C8C0@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C8C0 >> 16) & 0xFFFF; // lis r3, lbl_8001C8C0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r4', 'r3', 'lbl_8001C8C0@l']
Translated addi r4 r3 lbl_8001C8C0@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&lbl_8001C8C0 & 0xFFFF); // addi r4, r3, lbl_8001C8C0@l']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF64@sda21(r0)']
Translated lwz r0 lbl_8001EF64@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF64); // lwz r0, lbl_8001EF64@sda21(r0)']
Processing opcode: mulli, operands: ['r0', 'r0', '0x14']
Translated mulli r0 r0 0x14 to: ['gc_env.r[0] = gc_env.r[0] * 20; // mulli r0, r0, 20']
Translated lwzx r3 r4 r0 to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + gc_env.r[0]); // lwzx r3, r4, r0']
Translated cmpwi r3 0x1 to: gc_env.cr[0] = (gc_env.r[3] == 0x1) ? 0 : (gc_env.r[3] < 0x1 ? -1 : 1); // Compare with immediate
Translated bne .L_8000C774 to: if (gc_env.cr[0] != 0) goto L_8000C774;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF64@sda21(r0)']
Translated lwz r3 lbl_8001EF64@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF64); // lwz r3, lbl_8001EF64@sda21(r0)']
Processing opcode: add, operands: ['r6', 'r4', 'r0']
Translated add r6 r4 r0 to: ['gc_env.r[6] = gc_env.r[4] + gc_env.r[0]; // add r6, r4, r0']
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF64@sda21(r0)']
Translated stw r0 lbl_8001EF64@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF64, gc_env.r[0]); // stw r0, lbl_8001EF64@sda21(r0)']
Processing opcode: lwz, operands: ['r3', '0x4(r6)']
Translated lwz r3 0x4(r6) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x4); // lwz r3, 0x4(r6)']
Processing opcode: lwz, operands: ['r4', '0x8(r6)']
Translated lwz r4 0x8(r6) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x8); // lwz r4, 0x8(r6)']
Processing opcode: lwz, operands: ['r5', '0xc(r6)']
Translated lwz r5 0xc(r6) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0xC); // lwz r5, 0xC(r6)']
Processing opcode: lwz, operands: ['r6', '0x10(r6)']
Translated lwz r6 0x10(r6) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x10); // lwz r6, 0x10(r6)']
Translated bl fn_8000C818 to: fn_8000C818();
Translated b .L_8000C798 to: goto L_8000C798;
Translated cmpwi r3 0x2 to: gc_env.cr[0] = (gc_env.r[3] == 0x2) ? 0 : (gc_env.r[3] < 0x2 ? -1 : 1); // Compare with immediate
Translated bne .L_8000C798 to: if (gc_env.cr[0] != 0) goto L_8000C798;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF64@sda21(r0)']
Translated lwz r3 lbl_8001EF64@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF64); // lwz r3, lbl_8001EF64@sda21(r0)']
Processing opcode: add, operands: ['r4', 'r4', 'r0']
Translated add r4 r4 r0 to: ['gc_env.r[4] = gc_env.r[4] + gc_env.r[0]; // add r4, r4, r0']
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF64@sda21(r0)']
Translated stw r0 lbl_8001EF64@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF64, gc_env.r[0]); // stw r0, lbl_8001EF64@sda21(r0)']
Processing opcode: lwz, operands: ['r3', '0xc(r4)']
Translated lwz r3 0xc(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xC); // lwz r3, 0xC(r4)']
Processing opcode: lwz, operands: ['r4', '0x10(r4)']
Translated lwz r4 0x10(r4) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x10); // lwz r4, 0x10(r4)']
Translated bl fn_8000CC40 to: fn_8000CC40();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r3', '0x400']
Translated li r3 0x400 to: ['gc_env.r[3] = 0x400; // li r3, 0x400']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x2e0(r1)']
Translated stwu r1 -0x2e0(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x2E0, gc_env.r[1]); // stwu r1, -0x2E0(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x2E0;']
Processing opcode: stw, operands: ['r31', '0x2dc(r1)']
Translated stw r31 0x2dc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2DC, gc_env.r[31]); // stw r31, 0x2DC(r1)']
Processing opcode: addi, operands: ['r31', 'r4', '0x0']
Translated addi r31 r4 0x0 to: ['gc_env.r[31] = gc_env.r[4] + 0; // addi r31, r4, 0x0']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Processing opcode: addi, operands: ['r3', 'r1', '0x10']
Translated addi r3 r1 0x10 to: ['gc_env.r[3] = gc_env.r[1] + 16; // addi r3, r1, 0x10']
Translated bl OSClearContext to: OSClearContext();
Processing opcode: addi, operands: ['r3', 'r1', '0x10']
Translated addi r3 r1 0x10 to: ['gc_env.r[3] = gc_env.r[1] + 16; // addi r3, r1, 0x10']
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Processing opcode: lwz, operands: ['r12', 'lbl_8001EF28@sda21(r0)']
Translated lwz r12 lbl_8001EF28@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF28); // lwz r12, lbl_8001EF28@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r0', 'lbl_8001EF28@sda21(r0)']
Translated stw r0 lbl_8001EF28@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF28, gc_env.r[0]); // stw r0, lbl_8001EF28@sda21(r0)']
Translated beq .L_8000C7F4 to: if (gc_env.cr[0] == 0) goto L_8000C7F4;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: li, operands: ['r3', '0x10']
Translated li r3 0x10 to: ['gc_env.r[3] = 0x10; // li r3, 0x10']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: addi, operands: ['r3', 'r1', '0x10']
Translated addi r3 r1 0x10 to: ['gc_env.r[3] = gc_env.r[1] + 16; // addi r3, r1, 0x10']
Translated bl OSClearContext to: OSClearContext();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Processing opcode: lwz, operands: ['r0', '0x2e4(r1)']
Translated lwz r0 0x2e4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2E4); // lwz r0, 0x2E4(r1)']
Processing opcode: lwz, operands: ['r31', '0x2dc(r1)']
Translated lwz r31 0x2dc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2DC); // lwz r31, 0x2DC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x2e0']
Translated addi r1 r1 0x2e0 to: ['gc_env.r[1] += 736; // addi r1, r1, 0x2e0']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stwu, operands: ['r1', '-0x28(r1)']
Translated stwu r1 -0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x28, gc_env.r[1]); // stwu r1, -0x28(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x28;']
Processing opcode: stw, operands: ['r31', '0x24(r1)']
Translated stw r31 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[31]); // stw r31, 0x24(r1)']
Processing opcode: stw, operands: ['r30', '0x20(r1)']
Translated stw r30 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[30]); // stw r30, 0x20(r1)']
Processing opcode: addi, operands: ['r30', 'r5', '0x0']
Translated addi r30 r5 0x0 to: ['gc_env.r[30] = gc_env.r[5] + 0; // addi r30, r5, 0x0']
Processing opcode: stw, operands: ['r29', '0x1c(r1)']
Translated stw r29 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[29]); // stw r29, 0x1C(r1)']
Processing opcode: addi, operands: ['r29', 'r4', '0x0']
Translated addi r29 r4 0x0 to: ['gc_env.r[29] = gc_env.r[4] + 0; // addi r29, r4, 0x0']
Processing opcode: stw, operands: ['r28', '0x18(r1)']
Translated stw r28 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[28]); // stw r28, 0x18(r1)']
Processing opcode: addi, operands: ['r28', 'r3', '0x0']
Translated addi r28 r3 0x0 to: ['gc_env.r[28] = gc_env.r[3] + 0; // addi r28, r3, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF20@sda21(r0)']
Translated stw r0 lbl_8001EF20@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF20, gc_env.r[0]); // stw r0, lbl_8001EF20@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r6', 'lbl_8001EF28@sda21(r0)']
Translated stw r6 lbl_8001EF28@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF28, gc_env.r[6]); // stw r6, lbl_8001EF28@sda21(r0)']
Translated lis r6 lbl_8001C8C0@ha to: ['gc_env.r[6] = ((uint32_t)&lbl_8001C8C0 >> 16) & 0xFFFF; // lis r6, lbl_8001C8C0@ha']
Processing opcode: addi, operands: ['r31', 'r6', 'lbl_8001C8C0@l']
Translated addi r31 r6 lbl_8001C8C0@l to: ['gc_env.r[31] = (uint32_t)&lbl_8001C8C0; // lis + addi lbl_8001C8C0 (completing pattern)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF60@sda21(r0)']
Translated stw r0 lbl_8001EF60@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF60, gc_env.r[0]); // stw r0, lbl_8001EF60@sda21(r0)']
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: stw, operands: ['r4', 'lbl_8001EF5C@sda21(r0)']
Translated stw r4 lbl_8001EF5C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF5C, gc_env.r[4]); // stw r4, lbl_8001EF5C@sda21(r0)']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Translated lis r0 0xa0 to: ['gc_env.r[0] = 160 << 16; // lis r0, 0xa0']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF58@sda21(r0)']
Translated stw r3 lbl_8001EF58@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF58, gc_env.r[3]); // stw r3, lbl_8001EF58@sda21(r0)']
Processing opcode: addi, operands: ['r4', 'r4', '0x6000']
Translated addi r4 r4 0x6000 to: ['gc_env.r[4] += 24576; // addi r4, r4, 0x6000']
Translated lis r3 0xa800 to: ['gc_env.r[3] = -22528 << 16; // lis r3, 0xa800']
Processing opcode: stw, operands: ['r3', '0x8(r4)']
Translated stw r3 0x8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x8, gc_env.r[3]); // stw r3, 0x8(r4)']
Translated srwi r3 r30 2 to: ['gc_env.r[3] = gc_env.r[30] >> 2; // srwi r3, r30, 2']
Translated cmplw r29 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[29] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[29] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Processing opcode: stw, operands: ['r3', '0xc(r4)']
Translated stw r3 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[3]); // stw r3, 0xC(r4)']
Processing opcode: li, operands: ['r0', '0x3']
Translated li r0 0x3 to: ['gc_env.r[0] = 0x3; // li r0, 0x3']
Processing opcode: stw, operands: ['r29', '0x10(r4)']
Translated stw r29 0x10(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x10, gc_env.r[29]); // stw r29, 0x10(r4)']
Processing opcode: stw, operands: ['r28', '0x14(r4)']
Translated stw r28 0x14(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x14, gc_env.r[28]); // stw r28, 0x14(r4)']
Processing opcode: stw, operands: ['r29', '0x18(r4)']
Translated stw r29 0x18(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x18, gc_env.r[29]); // stw r29, 0x18(r4)']
Processing opcode: stw, operands: ['r29', 'lbl_8001EF24@sda21(r0)']
Translated stw r29 lbl_8001EF24@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF24, gc_env.r[29]); // stw r29, lbl_8001EF24@sda21(r0)']
Processing opcode: stw, operands: ['r0', '0x1c(r4)']
Translated stw r0 0x1c(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r4)']
Translated ble .L_8000C8D8 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000C8D8; // ble .L_8000C8D8']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r0', '0xf8(r3)']
Translated lwz r0 0xf8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xF8); // lwz r0, 0xF8(r3)']
Processing opcode: addi, operands: ['r3', 'r31', '0x68']
Translated addi r3 r31 0x68 to: ['gc_env.r[3] = gc_env.r[31] + 104; // addi r3, r31, 0x68']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Processing opcode: mulli, operands: ['r30', 'r0', '0x14']
Translated mulli r30 r0 0x14 to: ['gc_env.r[30] = gc_env.r[0] * 20; // mulli r30, r0, 20']
Translated bl fn_80005FC4 to: fn_80005FC4();
Translated lis r3 fn_8000C7A8@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000C7A8 >> 16) & 0xFFFF; // lis r3, fn_8000C7A8@ha']
Processing opcode: addi, operands: ['r7', 'r3', 'fn_8000C7A8@l']
Translated addi r7 r3 fn_8000C7A8@l to: ['gc_env.r[7] = (uint32_t)&fn_8000C7A8; // lis + addi fn_8000C7A8 (completing pattern)']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: addi, operands: ['r3', 'r31', '0x68']
Translated addi r3 r31 0x68 to: ['gc_env.r[3] = gc_env.r[31] + 104; // addi r3, r31, 0x68']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80006220 to: fn_80006220();
Translated b .L_8000C908 to: goto L_8000C908;
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r0', '0xf8(r3)']
Translated lwz r0 0xf8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xF8); // lwz r0, 0xF8(r3)']
Processing opcode: addi, operands: ['r3', 'r31', '0x68']
Translated addi r3 r31 0x68 to: ['gc_env.r[3] = gc_env.r[31] + 104; // addi r3, r31, 0x68']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Processing opcode: mulli, operands: ['r30', 'r0', '0xa']
Translated mulli r30 r0 0xa to: ['gc_env.r[30] = gc_env.r[0] * 10; // mulli r30, r0, 10']
Translated bl fn_80005FC4 to: fn_80005FC4();
Translated lis r3 fn_8000C7A8@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000C7A8 >> 16) & 0xFFFF; // lis r3, fn_8000C7A8@ha']
Processing opcode: addi, operands: ['r7', 'r3', 'fn_8000C7A8@l']
Translated addi r7 r3 fn_8000C7A8@l to: ['gc_env.r[7] = (uint32_t)&fn_8000C7A8; // lis + addi fn_8000C7A8 (completing pattern)']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: addi, operands: ['r3', 'r31', '0x68']
Translated addi r3 r31 0x68 to: ['gc_env.r[3] = gc_env.r[31] + 104; // addi r3, r31, 0x68']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80006220 to: fn_80006220();
Processing opcode: lwz, operands: ['r0', '0x2c(r1)']
Translated lwz r0 0x2c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r0, 0x2C(r1)']
Processing opcode: lwz, operands: ['r31', '0x24(r1)']
Translated lwz r31 0x24(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r31, 0x24(r1)']
Processing opcode: lwz, operands: ['r30', '0x20(r1)']
Translated lwz r30 0x20(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r30, 0x20(r1)']
Processing opcode: lwz, operands: ['r29', '0x1c(r1)']
Translated lwz r29 0x1c(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r29, 0x1C(r1)']
Processing opcode: lwz, operands: ['r28', '0x18(r1)']
Translated lwz r28 0x18(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r28, 0x18(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x28']
Translated addi r1 r1 0x28 to: ['gc_env.r[1] += 40; // addi r1, r1, 0x28']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r7 lbl_8001C8C0@ha to: ['gc_env.r[7] = ((uint32_t)&lbl_8001C8C0 >> 16) & 0xFFFF; // lis r7, lbl_8001C8C0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Translated clrrwi. r8 r5 15 to: gc_env.r[8] = gc_env.r[5] & ~((1ULL << 15) - 1); // Clear rightmost 15 bits
Processing opcode: addi, operands: ['r9', 'r7', 'lbl_8001C8C0@l']
Translated addi r9 r7 lbl_8001C8C0@l to: ['gc_env.r[9] = gc_env.r[7] + ((uint32_t)&lbl_8001C8C0 & 0xFFFF); // addi r9, r7, lbl_8001C8C0@l']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bne .L_8000C94C to: if (gc_env.cr[0] != 0) goto L_8000C94C;
Processing opcode: li, operands: ['r10', '0x0']
Translated li r10 0x0 to: ['gc_env.r[10] = 0x0; // li r10, 0x0']
Translated b .L_8000C954 to: goto L_8000C954;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF48@sda21(r0)']
Translated lwz r0 lbl_8001EF48@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF48); // lwz r0, lbl_8001EF48@sda21(r0)']
Processing opcode: add, operands: ['r10', 'r8', 'r0']
Translated add r10 r8 r0 to: ['gc_env.r[10] = gc_env.r[8] + gc_env.r[0]; // add r10, r8, r0']
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Processing opcode: stw, operands: ['r0', '0x0(r9)']
Translated stw r0 0x0(r9) to: ['gc_mem_write32(gc_env.ram, gc_env.r[9], gc_env.r[0]); // stw r0, (r9)']
Processing opcode: li, operands: ['r8', '0x1']
Translated li r8 0x1 to: ['gc_env.r[8] = 0x1; // li r8, 0x1']
Processing opcode: li, operands: ['r7', '-0x1']
Translated li r7 -0x1 to: ['gc_env.r[7] = -0x1; // li r7, -0x1']
Processing opcode: stw, operands: ['r10', '0xc(r9)']
Translated stw r10 0xc(r9) to: ['gc_mem_write32(gc_env.ram, gc_env.r[9] + 0xC, gc_env.r[10]); // stw r10, 0xC(r9)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r6', '0x10(r9)']
Translated stw r6 0x10(r9) to: ['gc_mem_write32(gc_env.ram, gc_env.r[9] + 0x10, gc_env.r[6]); // stw r6, 0x10(r9)']
Processing opcode: stw, operands: ['r8', '0x14(r9)']
Translated stw r8 0x14(r9) to: ['gc_mem_write32(gc_env.ram, gc_env.r[9] + 0x14, gc_env.r[8]); // stw r8, 0x14(r9)']
Processing opcode: stw, operands: ['r3', '0x18(r9)']
Translated stw r3 0x18(r9) to: ['gc_mem_write32(gc_env.ram, gc_env.r[9] + 0x18, gc_env.r[3]); // stw r3, 0x18(r9)']
Translated mr r3 r10 to: gc_env.r[3] = gc_env.r[10]; // Move register
Processing opcode: stw, operands: ['r4', '0x1c(r9)']
Translated stw r4 0x1c(r9) to: ['gc_mem_write32(gc_env.ram, gc_env.r[9] + 0x1C, gc_env.r[4]); // stw r4, 0x1C(r9)']
Translated mr r4 r6 to: gc_env.r[4] = gc_env.r[6]; // Move register
Processing opcode: stw, operands: ['r5', '0x20(r9)']
Translated stw r5 0x20(r9) to: ['gc_mem_write32(gc_env.ram, gc_env.r[9] + 0x20, gc_env.r[5]); // stw r5, 0x20(r9)']
Processing opcode: stw, operands: ['r6', '0x24(r9)']
Translated stw r6 0x24(r9) to: ['gc_mem_write32(gc_env.ram, gc_env.r[9] + 0x24, gc_env.r[6]); // stw r6, 0x24(r9)']
Processing opcode: stw, operands: ['r7', '0x28(r9)']
Translated stw r7 0x28(r9) to: ['gc_mem_write32(gc_env.ram, gc_env.r[9] + 0x28, gc_env.r[7]); // stw r7, 0x28(r9)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF64@sda21(r0)']
Translated stw r0 lbl_8001EF64@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF64, gc_env.r[0]); // stw r0, lbl_8001EF64@sda21(r0)']
Translated bl fn_8000CC40 to: fn_8000CC40();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r7 0xcc00 to: ['gc_env.r[7] = -13312 << 16; // lis r7, 0xcc00']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x40(r1)']
Translated stwu r1 -0x40(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x40, gc_env.r[1]); // stwu r1, -0x40(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x40;']
Translated stmw r22 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[22]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[23]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[24]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[25]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[26]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[27]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[28]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[29]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[30]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[31]); // stmw r22, 0x18(r1)']
Processing opcode: addi, operands: ['r25', 'r4', '0x0']
Translated addi r25 r4 0x0 to: ['gc_env.r[25] = gc_env.r[4] + 0; // addi r25, r4, 0x0']
Processing opcode: addi, operands: ['r4', 'r7', '0x6000']
Translated addi r4 r7 0x6000 to: ['gc_env.r[4] = gc_env.r[7] + 24576; // addi r4, r7, 0x6000']
Translated lis r7 lbl_8001C8C0@ha to: ['gc_env.r[7] = ((uint32_t)&lbl_8001C8C0 >> 16) & 0xFFFF; // lis r7, lbl_8001C8C0@ha']
Processing opcode: addi, operands: ['r31', 'r7', 'lbl_8001C8C0@l']
Translated addi r31 r7 lbl_8001C8C0@l to: ['gc_env.r[31] = (uint32_t)&lbl_8001C8C0; // lis + addi lbl_8001C8C0 (completing pattern)']
Processing opcode: addi, operands: ['r24', 'r3', '0x0']
Translated addi r24 r3 0x0 to: ['gc_env.r[24] = gc_env.r[3] + 0; // addi r24, r3, 0x0']
Processing opcode: addi, operands: ['r26', 'r5', '0x0']
Translated addi r26 r5 0x0 to: ['gc_env.r[26] = gc_env.r[5] + 0; // addi r26, r5, 0x0']
Processing opcode: addi, operands: ['r30', 'r31', '0xcc']
Translated addi r30 r31 0xcc to: ['gc_env.r[30] = gc_env.r[31] + 204; // addi r30, r31, 0xcc']
Translated mr r27 r6 to: gc_env.r[27] = gc_env.r[6]; // Move register
Processing opcode: stw, operands: ['r25', '0x18(r4)']
Translated stw r25 0x18(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x18, gc_env.r[25]); // stw r25, 0x18(r4)']
Processing opcode: stw, operands: ['r24', '0xc4(r31)']
Translated stw r24 0xc4(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC4, gc_env.r[24]); // stw r24, 0xC4(r31)']
Processing opcode: stw, operands: ['r25', '0xc8(r31)']
Translated stw r25 0xc8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC8, gc_env.r[25]); // stw r25, 0xC8(r31)']
Processing opcode: stw, operands: ['r26', '0xcc(r31)']
Translated stw r26 0xcc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xCC, gc_env.r[26]); // stw r26, 0xCC(r31)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF44@sda21(r0)']
Translated lwz r0 lbl_8001EF44@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF44); // lwz r0, lbl_8001EF44@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000CA20 to: if (gc_env.cr[0] != 0) goto L_8000CA20;
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r0', '0x0(r31)']
Translated stw r0 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stw r0, (r31)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: addi, operands: ['r3', 'r24', '0x0']
Translated addi r3 r24 0x0 to: ['gc_env.r[3] = gc_env.r[24] + 0; // addi r3, r24, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF64@sda21(r0)']
Translated stw r0 lbl_8001EF64@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF64, gc_env.r[0]); // stw r0, lbl_8001EF64@sda21(r0)']
Processing opcode: addi, operands: ['r4', 'r25', '0x0']
Translated addi r4 r25 0x0 to: ['gc_env.r[4] = gc_env.r[25] + 0; // addi r4, r25, 0x0']
Processing opcode: addi, operands: ['r5', 'r26', '0x0']
Translated addi r5 r26 0x0 to: ['gc_env.r[5] = gc_env.r[26] + 0; // addi r5, r26, 0x0']
Processing opcode: addi, operands: ['r6', 'r27', '0x0']
Translated addi r6 r27 0x0 to: ['gc_env.r[6] = gc_env.r[27] + 0; // addi r6, r27, 0x0']
Translated bl fn_8000C818 to: fn_8000C818();
Translated b .L_8000CC28 to: goto L_8000CC28;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF44@sda21(r0)']
Translated lwz r0 lbl_8001EF44@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF44); // lwz r0, lbl_8001EF44@sda21(r0)']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000CC28 to: if (gc_env.cr[0] != 0) goto L_8000CC28;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EE18@sda21(r0)']
Translated lwz r0 lbl_8001EE18@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE18); // lwz r0, lbl_8001EE18@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000CA50 to: if (gc_env.cr[0] == 0) goto L_8000CA50;
Processing opcode: addi, operands: ['r3', 'r24', '0x0']
Translated addi r3 r24 0x0 to: ['gc_env.r[3] = gc_env.r[24] + 0; // addi r3, r24, 0x0']
Processing opcode: addi, operands: ['r4', 'r25', '0x0']
Translated addi r4 r25 0x0 to: ['gc_env.r[4] = gc_env.r[25] + 0; // addi r4, r25, 0x0']
Processing opcode: addi, operands: ['r5', 'r26', '0x0']
Translated addi r5 r26 0x0 to: ['gc_env.r[5] = gc_env.r[26] + 0; // addi r5, r26, 0x0']
Processing opcode: addi, operands: ['r6', 'r27', '0x0']
Translated addi r6 r27 0x0 to: ['gc_env.r[6] = gc_env.r[27] + 0; // addi r6, r27, 0x0']
Translated bl fn_8000C928 to: fn_8000C928();
Translated b .L_8000CC28 to: goto L_8000CC28;
Processing opcode: addi, operands: ['r29', 'r31', '0xbc']
Translated addi r29 r31 0xbc to: ['gc_env.r[29] = gc_env.r[31] + 188; // addi r29, r31, 0xbc']
Processing opcode: lwz, operands: ['r0', '0x0(r30)']
Translated lwz r0 0x0(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r0, (r30)']
Processing opcode: addi, operands: ['r28', 'r31', '0xc0']
Translated addi r28 r31 0xc0 to: ['gc_env.r[28] = gc_env.r[31] + 192; // addi r28, r31, 0xc0']
Processing opcode: lwz, operands: ['r3', '0xbc(r31)']
Translated lwz r3 0xbc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xBC); // lwz r3, 0xBC(r31)']
Processing opcode: lwz, operands: ['r4', '0xc0(r31)']
Translated lwz r4 0xc0(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC0); // lwz r4, 0xC0(r31)']
Translated srwi r23 r0 15 to: ['gc_env.r[23] = gc_env.r[0] >> 15; // srwi r23, r0, 15']
Processing opcode: subi, operands: ['r0', 'r3', '0x1']
Translated subi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] - 1; // subi r0, r3, 1']
Processing opcode: add, operands: ['r0', 'r4', 'r0']
Translated add r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] + gc_env.r[0]; // add r0, r4, r0']
Translated srwi r22 r0 15 to: ['gc_env.r[22] = gc_env.r[0] >> 15; // srwi r22, r0, 15']
Translated bl fn_8000F230 to: fn_8000F230();
Processing opcode: lbz, operands: ['r0', '0x8(r3)']
Translated lbz r0 0x8(r3) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x8); // lbz r0, 0x8(r3)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000CA8C to: if (gc_env.cr[0] == 0) goto L_8000CA8C;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated b .L_8000CA90 to: goto L_8000CA90;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000CAA0 to: if (gc_env.cr[0] == 0) goto L_8000CAA0;
Processing opcode: li, operands: ['r3', '0x5']
Translated li r3 0x5 to: ['gc_env.r[3] = 0x5; // li r3, 0x5']
Translated b .L_8000CAA4 to: goto L_8000CAA4;
Processing opcode: li, operands: ['r3', '0xf']
Translated li r3 0xf to: ['gc_env.r[3] = 0xf; // li r3, 0xf']
Processing opcode: subi, operands: ['r0', 'r22', '0x2']
Translated subi r0 r22 0x2 to: ['gc_env.r[0] = gc_env.r[22] - 2; // subi r0, r22, 2']
Translated cmplw r23 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[23] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[23] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bgt .L_8000CAC0 to: ['if (gc_env.cr[0] & 0x4) goto L_8000CAC0; // bgt .L_8000CAC0']
Processing opcode: addi, operands: ['r0', 'r3', '0x3']
Translated addi r0 r3 0x3 to: ['gc_env.r[0] = gc_env.r[3] + 3; // addi r0, r3, 0x3']
Processing opcode: add, operands: ['r0', 'r22', 'r0']
Translated add r0 r22 r0 to: ['gc_env.r[0] = gc_env.r[22] + gc_env.r[0]; // add r0, r22, r0']
Translated cmplw r23 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[23] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[23] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bge .L_8000CAC8 to: if (gc_env.cr[0] >= 0) goto L_8000CAC8;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated b .L_8000CACC to: goto L_8000CACC;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000CAFC to: if (gc_env.cr[0] != 0) goto L_8000CAFC;
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r0', '0x0(r31)']
Translated stw r0 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stw r0, (r31)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: addi, operands: ['r3', 'r24', '0x0']
Translated addi r3 r24 0x0 to: ['gc_env.r[3] = gc_env.r[24] + 0; // addi r3, r24, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF64@sda21(r0)']
Translated stw r0 lbl_8001EF64@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF64, gc_env.r[0]); // stw r0, lbl_8001EF64@sda21(r0)']
Processing opcode: addi, operands: ['r4', 'r25', '0x0']
Translated addi r4 r25 0x0 to: ['gc_env.r[4] = gc_env.r[25] + 0; // addi r4, r25, 0x0']
Processing opcode: addi, operands: ['r5', 'r26', '0x0']
Translated addi r5 r26 0x0 to: ['gc_env.r[5] = gc_env.r[26] + 0; // addi r5, r26, 0x0']
Processing opcode: addi, operands: ['r6', 'r27', '0x0']
Translated addi r6 r27 0x0 to: ['gc_env.r[6] = gc_env.r[27] + 0; // addi r6, r27, 0x0']
Translated bl fn_8000C818 to: fn_8000C818();
Translated b .L_8000CC28 to: goto L_8000CC28;
Processing opcode: lwz, operands: ['r3', '0x0(r29)']
Translated lwz r3 0x0(r29) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[29]); // lwz r3, (r29)']
Processing opcode: lwz, operands: ['r4', '0x0(r28)']
Translated lwz r4 0x0(r28) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r4, (r28)']
Processing opcode: subi, operands: ['r3', 'r3', '0x1']
Translated subi r3 r3 0x1 to: ['gc_env.r[3] = gc_env.r[3] - 1; // subi r3, r3, 1']
Processing opcode: lwz, operands: ['r0', '0x0(r30)']
Translated lwz r0 0x0(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r0, (r30)']
Processing opcode: add, operands: ['r3', 'r4', 'r3']
Translated add r3 r4 r3 to: ['gc_env.r[3] = gc_env.r[4] + gc_env.r[3]; // add r3, r4, r3']
Translated srwi r3 r3 15 to: ['gc_env.r[3] = gc_env.r[3] >> 15; // srwi r3, r3, 15']
Translated srwi r4 r0 15 to: ['gc_env.r[4] = gc_env.r[0] >> 15; // srwi r4, r0, 15']
Translated cmplw r3 r4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[4]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[4] ? -1 : 1); // Logical compare word
Translated beq .L_8000CB2C to: if (gc_env.cr[0] == 0) goto L_8000CB2C;
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Translated cmplw r0 r4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[4]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[4] ? -1 : 1); // Logical compare word
Translated bne .L_8000CC14 to: if (gc_env.cr[0] != 0) goto L_8000CC14;
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Translated lis r5 0x8000 to: ['gc_env.r[5] = -32768 << 16; // lis r5, 0x8000']
Processing opcode: lwz, operands: ['r8', 'lbl_8001EF50@sda21(r0)']
Translated lwz r8 lbl_8001EF50@sda21(r0) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF50); // lwz r8, lbl_8001EF50@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0xf8(r5)']
Translated lwz r0 0xf8(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xF8); // lwz r0, 0xF8(r5)']
Translated lis r5 0x1062 to: ['gc_env.r[5] = 4194 << 16; // lis r5, 0x1062']
Processing opcode: lwz, operands: ['r9', 'lbl_8001EF54@sda21(r0)']
Translated lwz r9 lbl_8001EF54@sda21(r0) to: ['gc_env.r[9] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF54); // lwz r9, lbl_8001EF54@sda21(r0)']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated srwi r7 r0 2 to: ['gc_env.r[7] = gc_env.r[0] >> 2; // srwi r7, r0, 2']
Processing opcode: addi, operands: ['r0', 'r5', '0x4dd3']
Translated addi r0 r5 0x4dd3 to: ['gc_env.r[0] = gc_env.r[5] + 19923; // addi r0, r5, 0x4dd3']
Translated mulhwu r0 r0 r7 to: ['gc_env.r[0] = (uint32_t)(((uint64_t)gc_env.r[0] * (uint64_t)gc_env.r[7]) >> 32); // mulhwu r0, r0, r7']
Translated srwi r0 r0 6 to: ['gc_env.r[0] = gc_env.r[0] >> 6; // srwi r0, r0, 6']
Translated subfc r9 r9 r4 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[4] - gc_env.r[9];', 'gc_env.r[9] = (uint32_t)subfc_temp; // subfc r9, r9, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= gc_env.r[9] ? 0x20000000 : 0);']
Translated subfe r8 r8 r3 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[3] - gc_env.r[8] - subfe_borrow;', 'gc_env.r[8] = (uint32_t)subfe_temp; // subfe r8, r8, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= (gc_env.r[8] + subfe_borrow) ? 0x20000000 : 0);']
Processing opcode: mulli, operands: ['r5', 'r0', '0x5']
Translated mulli r5 r0 0x5 to: ['gc_env.r[5] = gc_env.r[0] * 5; // mulli r5, r0, 5']
Translated xoris r4 r6 0x8000 to: ['gc_env.r[4] = gc_env.r[6] ^ 0x80000000; // xoris r4, r6, 0x8000']
Translated xoris r3 r8 0x8000 to: ['gc_env.r[3] = gc_env.r[8] ^ 0x80000000; // xoris r3, r8, 0x8000']
Translated subfc r0 r9 r5 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[5] - gc_env.r[9];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r9, r5', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= gc_env.r[9] ? 0x20000000 : 0);']
Translated subfe r3 r3 r4 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[4] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r3, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r3 r4 r4 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[4] - gc_env.r[4] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r4, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= (gc_env.r[4] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r3 r3 to: ['gc_env.r[3] = -(int32_t)gc_env.r[3]; // neg r3, r3']
Translated beq .L_8000CBA4 to: if (gc_env.cr[0] == 0) goto L_8000CBA4;
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r0', '0x0(r31)']
Translated stw r0 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stw r0, (r31)']
Processing opcode: addi, operands: ['r3', 'r24', '0x0']
Translated addi r3 r24 0x0 to: ['gc_env.r[3] = gc_env.r[24] + 0; // addi r3, r24, 0x0']
Processing opcode: addi, operands: ['r4', 'r25', '0x0']
Translated addi r4 r25 0x0 to: ['gc_env.r[4] = gc_env.r[25] + 0; // addi r4, r25, 0x0']
Processing opcode: stw, operands: ['r6', 'lbl_8001EF64@sda21(r0)']
Translated stw r6 lbl_8001EF64@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF64, gc_env.r[6]); // stw r6, lbl_8001EF64@sda21(r0)']
Processing opcode: addi, operands: ['r5', 'r26', '0x0']
Translated addi r5 r26 0x0 to: ['gc_env.r[5] = gc_env.r[26] + 0; // addi r5, r26, 0x0']
Processing opcode: addi, operands: ['r6', 'r27', '0x0']
Translated addi r6 r27 0x0 to: ['gc_env.r[6] = gc_env.r[27] + 0; // addi r6, r27, 0x0']
Translated bl fn_8000C818 to: fn_8000C818();
Translated b .L_8000CC28 to: goto L_8000CC28;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', '0x0(r31)']
Translated stw r0 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stw r0, (r31)']
Translated lis r3 0x431c to: ['gc_env.r[3] = 17180 << 16; // lis r3, 0x431c']
Processing opcode: subi, operands: ['r0', 'r3', '0x217d']
Translated subi r0 r3 0x217d to: ['gc_env.r[0] = gc_env.r[3] - 8573; // subi r0, r3, 8573']
Processing opcode: stw, operands: ['r24', '0x4(r31)']
Translated stw r24 0x4(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x4, gc_env.r[24]); // stw r24, 0x4(r31)']
Translated mulhwu r0 r0 r7 to: ['gc_env.r[0] = (uint32_t)(((uint64_t)gc_env.r[0] * (uint64_t)gc_env.r[7]) >> 32); // mulhwu r0, r0, r7']
Processing opcode: stw, operands: ['r25', '0x8(r31)']
Translated stw r25 0x8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x8, gc_env.r[25]); // stw r25, 0x8(r31)']
Processing opcode: stw, operands: ['r26', '0xc(r31)']
Translated stw r26 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[26]); // stw r26, 0xC(r31)']
Translated srwi r0 r0 15 to: ['gc_env.r[0] = gc_env.r[0] >> 15; // srwi r0, r0, 15']
Processing opcode: mulli, operands: ['r3', 'r0', '0x1f4']
Translated mulli r3 r0 0x1f4 to: ['gc_env.r[3] = gc_env.r[0] * 500; // mulli r3, r0, 500']
Processing opcode: stw, operands: ['r27', '0x10(r31)']
Translated stw r27 0x10(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x10, gc_env.r[27]); // stw r27, 0x10(r31)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r0', '0x14(r31)']
Translated stw r0 0x14(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x14, gc_env.r[0]); // stw r0, 0x14(r31)']
Translated subfc r5 r9 r5 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[5] - gc_env.r[9];', 'gc_env.r[5] = (uint32_t)subfc_temp; // subfc r5, r9, r5', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= gc_env.r[9] ? 0x20000000 : 0);']
Translated subfe r4 r8 r6 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[6] - gc_env.r[8] - subfe_borrow;', 'gc_env.r[4] = (uint32_t)subfe_temp; // subfe r4, r8, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= (gc_env.r[8] + subfe_borrow) ? 0x20000000 : 0);']
Translated srwi r0 r3 3 to: ['gc_env.r[0] = gc_env.r[3] >> 3; // srwi r0, r3, 3']
Processing opcode: stw, operands: ['r6', 'lbl_8001EF64@sda21(r0)']
Translated stw r6 lbl_8001EF64@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF64, gc_env.r[6]); // stw r6, lbl_8001EF64@sda21(r0)']
Processing opcode: addc, operands: ['r23', 'r5', 'r0']
Translated addc r23 r5 r0 to: ['uint64_t addc_temp = (uint64_t)gc_env.r[5] + gc_env.r[0];', 'gc_env.r[23] = (uint32_t)addc_temp; // addc r23, r5, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addc_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r22 r4 r6 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[4] + gc_env.r[6] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[22] = (uint32_t)adde_temp; // adde r22, r4, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Processing opcode: addi, operands: ['r3', 'r31', '0x40']
Translated addi r3 r31 0x40 to: ['gc_env.r[3] = gc_env.r[31] + 64; // addi r3, r31, 0x40']
Translated bl fn_80005FC4 to: fn_80005FC4();
Translated lis r3 fn_8000C724@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000C724 >> 16) & 0xFFFF; // lis r3, fn_8000C724@ha']
Processing opcode: addi, operands: ['r7', 'r3', 'fn_8000C724@l']
Translated addi r7 r3 fn_8000C724@l to: ['gc_env.r[7] = (uint32_t)&fn_8000C724; // lis + addi fn_8000C724 (completing pattern)']
Processing opcode: addi, operands: ['r6', 'r23', '0x0']
Translated addi r6 r23 0x0 to: ['gc_env.r[6] = gc_env.r[23] + 0; // addi r6, r23, 0x0']
Processing opcode: addi, operands: ['r5', 'r22', '0x0']
Translated addi r5 r22 0x0 to: ['gc_env.r[5] = gc_env.r[22] + 0; // addi r5, r22, 0x0']
Processing opcode: addi, operands: ['r3', 'r31', '0x40']
Translated addi r3 r31 0x40 to: ['gc_env.r[3] = gc_env.r[31] + 64; // addi r3, r31, 0x40']
Translated bl fn_80006220 to: fn_80006220();
Translated b .L_8000CC28 to: goto L_8000CC28;
Processing opcode: addi, operands: ['r3', 'r24', '0x0']
Translated addi r3 r24 0x0 to: ['gc_env.r[3] = gc_env.r[24] + 0; // addi r3, r24, 0x0']
Processing opcode: addi, operands: ['r4', 'r25', '0x0']
Translated addi r4 r25 0x0 to: ['gc_env.r[4] = gc_env.r[25] + 0; // addi r4, r25, 0x0']
Processing opcode: addi, operands: ['r5', 'r26', '0x0']
Translated addi r5 r26 0x0 to: ['gc_env.r[5] = gc_env.r[26] + 0; // addi r5, r26, 0x0']
Processing opcode: addi, operands: ['r6', 'r27', '0x0']
Translated addi r6 r27 0x0 to: ['gc_env.r[6] = gc_env.r[27] + 0; // addi r6, r27, 0x0']
Translated bl fn_8000C928 to: fn_8000C928();
Translated lmw r22 0x18(r1) to: ['gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lmw r22, 0x18(r1)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r22, 0x18(r1)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r22, 0x18(r1)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r22, 0x18(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r22, 0x18(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r22, 0x18(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r22, 0x18(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r22, 0x18(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x38); // lmw r22, 0x18(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lmw r22, 0x18(r1)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r0', '0x44(r1)']
Translated lwz r0 0x44(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lwz r0, 0x44(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x40']
Translated addi r1 r1 0x40 to: ['gc_env.r[1] += 64; // addi r1, r1, 0x40']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: stw, operands: ['r4', 'lbl_8001EF28@sda21(r0)']
Translated stw r4 lbl_8001EF28@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF28, gc_env.r[4]); // stw r4, lbl_8001EF28@sda21(r0)']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: addi, operands: ['r4', 'r4', '0x6000']
Translated addi r4 r4 0x6000 to: ['gc_env.r[4] += 24576; // addi r4, r4, 0x6000']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF20@sda21(r0)']
Translated stw r0 lbl_8001EF20@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF20, gc_env.r[0]); // stw r0, lbl_8001EF20@sda21(r0)']
Translated lis r0 0xab00 to: ['gc_env.r[0] = -21760 << 16; // lis r0, 0xab00']
Processing opcode: stw, operands: ['r0', '0x8(r4)']
Translated stw r0 0x8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x8, gc_env.r[0]); // stw r0, 0x8(r4)']
Translated srwi r0 r3 2 to: ['gc_env.r[0] = gc_env.r[3] >> 2; // srwi r0, r3, 2']
Translated lis r3 lbl_8001C928@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C928 >> 16) & 0xFFFF; // lis r3, lbl_8001C928@ha']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: addi, operands: ['r31', 'r3', 'lbl_8001C928@l']
Translated addi r31 r3 lbl_8001C928@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&lbl_8001C928 & 0xFFFF); // addi r31, r3, lbl_8001C928@l']
Processing opcode: stw, operands: ['r0', '0x1c(r4)']
Translated stw r0 0x1c(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r4)']
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: lwz, operands: ['r0', '0xf8(r4)']
Translated lwz r0 0xf8(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xF8); // lwz r0, 0xF8(r4)']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Processing opcode: mulli, operands: ['r30', 'r0', '0xa']
Translated mulli r30 r0 0xa to: ['gc_env.r[30] = gc_env.r[0] * 10; // mulli r30, r0, 10']
Translated bl fn_80005FC4 to: fn_80005FC4();
Translated lis r3 fn_8000C7A8@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000C7A8 >> 16) & 0xFFFF; // lis r3, fn_8000C7A8@ha']
Processing opcode: addi, operands: ['r7', 'r3', 'fn_8000C7A8@l']
Translated addi r7 r3 fn_8000C7A8@l to: ['gc_env.r[7] = (uint32_t)&fn_8000C7A8; // lis + addi fn_8000C7A8 (completing pattern)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80006220 to: fn_80006220();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF28@sda21(r0)']
Translated stw r3 lbl_8001EF28@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF28, gc_env.r[3]); // stw r3, lbl_8001EF28@sda21(r0)']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF3C@sda21(r0)']
Translated stw r0 lbl_8001EF3C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF3C, gc_env.r[0]); // stw r0, lbl_8001EF3C@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: addi, operands: ['r4', 'r3', '0x6000']
Translated addi r4 r3 0x6000 to: ['gc_env.r[4] = gc_env.r[3] + 24576; // addi r4, r3, 0x6000']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF20@sda21(r0)']
Translated stw r0 lbl_8001EF20@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF20, gc_env.r[0]); // stw r0, lbl_8001EF20@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: stw, operands: ['r0', '0x4(r4)']
Translated stw r0 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[0]); // stw r0, 0x4(r4)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r8', '0x0']
Translated li r8 0x0 to: ['gc_env.r[8] = 0x0; // li r8, 0x0']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Translated lis r5 0xa800 to: ['gc_env.r[5] = -22528 << 16; // lis r5, 0xa800']
Processing opcode: addi, operands: ['r0', 'r5', '0x40']
Translated addi r0 r5 0x40 to: ['gc_env.r[0] = gc_env.r[5] + 64; // addi r0, r5, 0x40']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: li, operands: ['r6', '0x20']
Translated li r6 0x20 to: ['gc_env.r[6] = 0x20; // li r6, 0x20']
Translated lis r5 0x8000 to: ['gc_env.r[5] = -32768 << 16; // lis r5, 0x8000']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: stw, operands: ['r4', 'lbl_8001EF28@sda21(r0)']
Translated stw r4 lbl_8001EF28@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF28, gc_env.r[4]); // stw r4, lbl_8001EF28@sda21(r0)']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: addi, operands: ['r7', 'r4', '0x6000']
Translated addi r7 r4 0x6000 to: ['gc_env.r[7] = gc_env.r[4] + 24576; // addi r7, r4, 0x6000']
Processing opcode: stw, operands: ['r8', 'lbl_8001EF20@sda21(r0)']
Translated stw r8 lbl_8001EF20@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF20, gc_env.r[8]); // stw r8, lbl_8001EF20@sda21(r0)']
Processing opcode: stw, operands: ['r0', '0x6008(r4)']
Translated stw r0 0x6008(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x6008, gc_env.r[0]); // stw r0, 0x6008(r4)']
Translated lis r4 lbl_8001C928@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001C928 >> 16) & 0xFFFF; // lis r4, lbl_8001C928@ha']
Processing opcode: li, operands: ['r0', '0x3']
Translated li r0 0x3 to: ['gc_env.r[0] = 0x3; // li r0, 0x3']
Processing opcode: stw, operands: ['r8', '0xc(r7)']
Translated stw r8 0xc(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7] + 0xC, gc_env.r[8]); // stw r8, 0xC(r7)']
Processing opcode: addi, operands: ['r31', 'r4', 'lbl_8001C928@l']
Translated addi r31 r4 lbl_8001C928@l to: ['gc_env.r[31] = gc_env.r[4] + ((uint32_t)&lbl_8001C928 & 0xFFFF); // addi r31, r4, lbl_8001C928@l']
Processing opcode: stw, operands: ['r6', '0x10(r7)']
Translated stw r6 0x10(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7] + 0x10, gc_env.r[6]); // stw r6, 0x10(r7)']
Processing opcode: stw, operands: ['r3', '0x14(r7)']
Translated stw r3 0x14(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7] + 0x14, gc_env.r[3]); // stw r3, 0x14(r7)']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: stw, operands: ['r6', '0x18(r7)']
Translated stw r6 0x18(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7] + 0x18, gc_env.r[6]); // stw r6, 0x18(r7)']
Processing opcode: stw, operands: ['r0', '0x1c(r7)']
Translated stw r0 0x1c(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r7)']
Processing opcode: lwz, operands: ['r0', '0xf8(r5)']
Translated lwz r0 0xf8(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xF8); // lwz r0, 0xF8(r5)']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Processing opcode: mulli, operands: ['r30', 'r0', '0xa']
Translated mulli r30 r0 0xa to: ['gc_env.r[30] = gc_env.r[0] * 10; // mulli r30, r0, 10']
Translated bl fn_80005FC4 to: fn_80005FC4();
Translated lis r3 fn_8000C7A8@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000C7A8 >> 16) & 0xFFFF; // lis r3, fn_8000C7A8@ha']
Processing opcode: addi, operands: ['r7', 'r3', 'fn_8000C7A8@l']
Translated addi r7 r3 fn_8000C7A8@l to: ['gc_env.r[7] = (uint32_t)&fn_8000C7A8; // lis + addi fn_8000C7A8 (completing pattern)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80006220 to: fn_80006220();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF28@sda21(r0)']
Translated stw r3 lbl_8001EF28@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF28, gc_env.r[3]); // stw r3, lbl_8001EF28@sda21(r0)']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r4', 'r3', '0x6000']
Translated addi r4 r3 0x6000 to: ['gc_env.r[4] = gc_env.r[3] + 24576; // addi r4, r3, 0x6000']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF20@sda21(r0)']
Translated stw r0 lbl_8001EF20@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF20, gc_env.r[0]); // stw r0, lbl_8001EF20@sda21(r0)']
Translated lis r0 0xe300 to: ['gc_env.r[0] = -7424 << 16; // lis r0, 0xe300']
Processing opcode: stw, operands: ['r0', '0x6008(r3)']
Translated stw r0 0x6008(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x6008, gc_env.r[0]); // stw r0, 0x6008(r3)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated lis r3 lbl_8001C928@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C928 >> 16) & 0xFFFF; // lis r3, lbl_8001C928@ha']
Processing opcode: stw, operands: ['r0', '0x1c(r4)']
Translated stw r0 0x1c(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r4)']
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: addi, operands: ['r31', 'r3', 'lbl_8001C928@l']
Translated addi r31 r3 lbl_8001C928@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&lbl_8001C928 & 0xFFFF); // addi r31, r3, lbl_8001C928@l']
Processing opcode: lwz, operands: ['r0', '0xf8(r4)']
Translated lwz r0 0xf8(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xF8); // lwz r0, 0xF8(r4)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Processing opcode: mulli, operands: ['r30', 'r0', '0xa']
Translated mulli r30 r0 0xa to: ['gc_env.r[30] = gc_env.r[0] * 10; // mulli r30, r0, 10']
Translated bl fn_80005FC4 to: fn_80005FC4();
Translated lis r3 fn_8000C7A8@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000C7A8 >> 16) & 0xFFFF; // lis r3, fn_8000C7A8@ha']
Processing opcode: addi, operands: ['r7', 'r3', 'fn_8000C7A8@l']
Translated addi r7 r3 fn_8000C7A8@l to: ['gc_env.r[7] = (uint32_t)&fn_8000C7A8; // lis + addi fn_8000C7A8 (completing pattern)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80006220 to: fn_80006220();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF28@sda21(r0)']
Translated stw r3 lbl_8001EF28@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF28, gc_env.r[3]); // stw r3, lbl_8001EF28@sda21(r0)']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r4', 'r3', '0x6000']
Translated addi r4 r3 0x6000 to: ['gc_env.r[4] = gc_env.r[3] + 24576; // addi r4, r3, 0x6000']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF20@sda21(r0)']
Translated stw r0 lbl_8001EF20@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF20, gc_env.r[0]); // stw r0, lbl_8001EF20@sda21(r0)']
Translated lis r0 0xe000 to: ['gc_env.r[0] = -8192 << 16; // lis r0, 0xe000']
Processing opcode: stw, operands: ['r0', '0x6008(r3)']
Translated stw r0 0x6008(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x6008, gc_env.r[0]); // stw r0, 0x6008(r3)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated lis r3 lbl_8001C928@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C928 >> 16) & 0xFFFF; // lis r3, lbl_8001C928@ha']
Processing opcode: stw, operands: ['r0', '0x1c(r4)']
Translated stw r0 0x1c(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r4)']
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: addi, operands: ['r31', 'r3', 'lbl_8001C928@l']
Translated addi r31 r3 lbl_8001C928@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&lbl_8001C928 & 0xFFFF); // addi r31, r3, lbl_8001C928@l']
Processing opcode: lwz, operands: ['r0', '0xf8(r4)']
Translated lwz r0 0xf8(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xF8); // lwz r0, 0xF8(r4)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Processing opcode: mulli, operands: ['r30', 'r0', '0xa']
Translated mulli r30 r0 0xa to: ['gc_env.r[30] = gc_env.r[0] * 10; // mulli r30, r0, 10']
Translated bl fn_80005FC4 to: fn_80005FC4();
Translated lis r3 fn_8000C7A8@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000C7A8 >> 16) & 0xFFFF; // lis r3, fn_8000C7A8@ha']
Processing opcode: addi, operands: ['r7', 'r3', 'fn_8000C7A8@l']
Translated addi r7 r3 fn_8000C7A8@l to: ['gc_env.r[7] = (uint32_t)&fn_8000C7A8; // lis + addi fn_8000C7A8 (completing pattern)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80006220 to: fn_80006220();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r6', '0x20']
Translated li r6 0x20 to: ['gc_env.r[6] = 0x20; // li r6, 0x20']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated lis r5 0x8000 to: ['gc_env.r[5] = -32768 << 16; // lis r5, 0x8000']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: stw, operands: ['r4', 'lbl_8001EF28@sda21(r0)']
Translated stw r4 lbl_8001EF28@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF28, gc_env.r[4]); // stw r4, lbl_8001EF28@sda21(r0)']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: addi, operands: ['r7', 'r4', '0x6000']
Translated addi r7 r4 0x6000 to: ['gc_env.r[7] = gc_env.r[4] + 24576; // addi r7, r4, 0x6000']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF20@sda21(r0)']
Translated stw r0 lbl_8001EF20@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF20, gc_env.r[0]); // stw r0, lbl_8001EF20@sda21(r0)']
Translated lis r0 0x1200 to: ['gc_env.r[0] = 4608 << 16; // lis r0, 0x1200']
Processing opcode: stw, operands: ['r0', '0x6008(r4)']
Translated stw r0 0x6008(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x6008, gc_env.r[0]); // stw r0, 0x6008(r4)']
Translated lis r4 lbl_8001C928@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001C928 >> 16) & 0xFFFF; // lis r4, lbl_8001C928@ha']
Processing opcode: li, operands: ['r0', '0x3']
Translated li r0 0x3 to: ['gc_env.r[0] = 0x3; // li r0, 0x3']
Processing opcode: stw, operands: ['r6', '0x10(r7)']
Translated stw r6 0x10(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7] + 0x10, gc_env.r[6]); // stw r6, 0x10(r7)']
Processing opcode: addi, operands: ['r31', 'r4', 'lbl_8001C928@l']
Translated addi r31 r4 lbl_8001C928@l to: ['gc_env.r[31] = gc_env.r[4] + ((uint32_t)&lbl_8001C928 & 0xFFFF); // addi r31, r4, lbl_8001C928@l']
Processing opcode: stw, operands: ['r3', '0x14(r7)']
Translated stw r3 0x14(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7] + 0x14, gc_env.r[3]); // stw r3, 0x14(r7)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: stw, operands: ['r6', '0x18(r7)']
Translated stw r6 0x18(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7] + 0x18, gc_env.r[6]); // stw r6, 0x18(r7)']
Processing opcode: stw, operands: ['r0', '0x1c(r7)']
Translated stw r0 0x1c(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r7)']
Processing opcode: lwz, operands: ['r0', '0xf8(r5)']
Translated lwz r0 0xf8(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xF8); // lwz r0, 0xF8(r5)']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Processing opcode: mulli, operands: ['r30', 'r0', '0xa']
Translated mulli r30 r0 0xa to: ['gc_env.r[30] = gc_env.r[0] * 10; // mulli r30, r0, 10']
Translated bl fn_80005FC4 to: fn_80005FC4();
Translated lis r3 fn_8000C7A8@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000C7A8 >> 16) & 0xFFFF; // lis r3, fn_8000C7A8@ha']
Processing opcode: addi, operands: ['r7', 'r3', 'fn_8000C7A8@l']
Translated addi r7 r3 fn_8000C7A8@l to: ['gc_env.r[7] = (uint32_t)&fn_8000C7A8; // lis + addi fn_8000C7A8 (completing pattern)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80006220 to: fn_80006220();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: stw, operands: ['r6', 'lbl_8001EF28@sda21(r0)']
Translated stw r6 lbl_8001EF28@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF28, gc_env.r[6]); // stw r6, lbl_8001EF28@sda21(r0)']
Translated lis r6 0xcc00 to: ['gc_env.r[6] = -13312 << 16; // lis r6, 0xcc00']
Processing opcode: addi, operands: ['r6', 'r6', '0x6000']
Translated addi r6 r6 0x6000 to: ['gc_env.r[6] += 24576; // addi r6, r6, 0x6000']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF20@sda21(r0)']
Translated stw r0 lbl_8001EF20@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF20, gc_env.r[0]); // stw r0, lbl_8001EF20@sda21(r0)']
Translated oris r0 r3 0xe100 to: ['gc_env.r[0] = gc_env.r[3] | 0xE1000000; // oris r0, r3, 0xE100']
Translated lis r3 lbl_8001C928@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C928 >> 16) & 0xFFFF; // lis r3, lbl_8001C928@ha']
Processing opcode: stw, operands: ['r0', '0x8(r6)']
Translated stw r0 0x8(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x8, gc_env.r[0]); // stw r0, 0x8(r6)']
Translated srwi r0 r5 2 to: ['gc_env.r[0] = gc_env.r[5] >> 2; // srwi r0, r5, 2']
Processing opcode: addi, operands: ['r31', 'r3', 'lbl_8001C928@l']
Translated addi r31 r3 lbl_8001C928@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&lbl_8001C928 & 0xFFFF); // addi r31, r3, lbl_8001C928@l']
Processing opcode: stw, operands: ['r0', '0xc(r6)']
Translated stw r0 0xc(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0xC, gc_env.r[0]); // stw r0, 0xC(r6)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: stw, operands: ['r4', '0x10(r6)']
Translated stw r4 0x10(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x10, gc_env.r[4]); // stw r4, 0x10(r6)']
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: stw, operands: ['r0', '0x1c(r6)']
Translated stw r0 0x1c(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r6)']
Processing opcode: lwz, operands: ['r0', '0xf8(r4)']
Translated lwz r0 0xf8(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xF8); // lwz r0, 0xF8(r4)']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Processing opcode: mulli, operands: ['r30', 'r0', '0xa']
Translated mulli r30 r0 0xa to: ['gc_env.r[30] = gc_env.r[0] * 10; // mulli r30, r0, 10']
Translated bl fn_80005FC4 to: fn_80005FC4();
Translated lis r3 fn_8000C7A8@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000C7A8 >> 16) & 0xFFFF; // lis r3, fn_8000C7A8@ha']
Processing opcode: addi, operands: ['r7', 'r3', 'fn_8000C7A8@l']
Translated addi r7 r3 fn_8000C7A8@l to: ['gc_env.r[7] = (uint32_t)&fn_8000C7A8; // lis + addi fn_8000C7A8 (completing pattern)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80006220 to: fn_80006220();
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: stw, operands: ['r4', 'lbl_8001EF28@sda21(r0)']
Translated stw r4 lbl_8001EF28@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF28, gc_env.r[4]); // stw r4, lbl_8001EF28@sda21(r0)']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: addi, operands: ['r4', 'r4', '0x6000']
Translated addi r4 r4 0x6000 to: ['gc_env.r[4] += 24576; // addi r4, r4, 0x6000']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF20@sda21(r0)']
Translated stw r0 lbl_8001EF20@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF20, gc_env.r[0]); // stw r0, lbl_8001EF20@sda21(r0)']
Translated oris r0 r3 0xe200 to: ['gc_env.r[0] = gc_env.r[3] | 0xE2000000; // oris r0, r3, 0xE200']
Translated lis r3 lbl_8001C928@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C928 >> 16) & 0xFFFF; // lis r3, lbl_8001C928@ha']
Processing opcode: stw, operands: ['r0', '0x8(r4)']
Translated stw r0 0x8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x8, gc_env.r[0]); // stw r0, 0x8(r4)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: addi, operands: ['r31', 'r3', 'lbl_8001C928@l']
Translated addi r31 r3 lbl_8001C928@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&lbl_8001C928 & 0xFFFF); // addi r31, r3, lbl_8001C928@l']
Processing opcode: stw, operands: ['r0', '0x1c(r4)']
Translated stw r0 0x1c(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r4)']
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: lwz, operands: ['r0', '0xf8(r4)']
Translated lwz r0 0xf8(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xF8); // lwz r0, 0xF8(r4)']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Processing opcode: mulli, operands: ['r30', 'r0', '0xa']
Translated mulli r30 r0 0xa to: ['gc_env.r[30] = gc_env.r[0] * 10; // mulli r30, r0, 10']
Translated bl fn_80005FC4 to: fn_80005FC4();
Translated lis r3 fn_8000C7A8@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000C7A8 >> 16) & 0xFFFF; // lis r3, fn_8000C7A8@ha']
Processing opcode: addi, operands: ['r7', 'r3', 'fn_8000C7A8@l']
Translated addi r7 r3 fn_8000C7A8@l to: ['gc_env.r[7] = (uint32_t)&fn_8000C7A8; // lis + addi fn_8000C7A8 (completing pattern)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80006220 to: fn_80006220();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: stw, operands: ['r5', 'lbl_8001EF28@sda21(r0)']
Translated stw r5 lbl_8001EF28@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF28, gc_env.r[5]); // stw r5, lbl_8001EF28@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF20@sda21(r0)']
Translated stw r0 lbl_8001EF20@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF20, gc_env.r[0]); // stw r0, lbl_8001EF20@sda21(r0)']
Translated beq .L_8000D0A8 to: if (gc_env.cr[0] == 0) goto L_8000D0A8;
Translated lis r0 0x1 to: ['gc_env.r[0] = 1 << 16; // lis r0, 0x1']
Translated oris r0 r0 0xe400 to: ['gc_env.r[0] = gc_env.r[0] | 0xE4000000; // oris r0, r0, 0xE400']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Translated or r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] | gc_env.r[0]; // or r0, r4, r0']
Processing opcode: addi, operands: ['r3', 'r3', '0x6000']
Translated addi r3 r3 0x6000 to: ['gc_env.r[3] += 24576; // addi r3, r3, 0x6000']
Processing opcode: stw, operands: ['r0', '0x8(r3)']
Translated stw r0 0x8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[0]); // stw r0, 0x8(r3)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: stw, operands: ['r0', '0x1c(r3)']
Translated stw r0 0x1c(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r3)']
Translated lis r3 lbl_8001C928@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C928 >> 16) & 0xFFFF; // lis r3, lbl_8001C928@ha']
Processing opcode: addi, operands: ['r31', 'r3', 'lbl_8001C928@l']
Translated addi r31 r3 lbl_8001C928@l to: ['gc_env.r[31] = (uint32_t)&lbl_8001C928; // lis + addi lbl_8001C928 (completing pattern)']
Processing opcode: lwz, operands: ['r0', '0xf8(r4)']
Translated lwz r0 0xf8(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xF8); // lwz r0, 0xF8(r4)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Processing opcode: mulli, operands: ['r30', 'r0', '0xa']
Translated mulli r30 r0 0xa to: ['gc_env.r[30] = gc_env.r[0] * 10; // mulli r30, r0, 10']
Translated bl fn_80005FC4 to: fn_80005FC4();
Translated lis r3 fn_8000C7A8@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000C7A8 >> 16) & 0xFFFF; // lis r3, fn_8000C7A8@ha']
Processing opcode: addi, operands: ['r7', 'r3', 'fn_8000C7A8@l']
Translated addi r7 r3 fn_8000C7A8@l to: ['gc_env.r[7] = (uint32_t)&fn_8000C7A8; // lis + addi fn_8000C7A8 (completing pattern)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80006220 to: fn_80006220();
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Translated stmw r26 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[26]); // stmw r26, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[27]); // stmw r26, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[28]); // stmw r26, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stmw r26, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stmw r26, 0x8(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stmw r26, 0x8(r1)']
Processing opcode: addi, operands: ['r31', 'r4', '0x3000']
Translated addi r31 r4 0x3000 to: ['gc_env.r[31] = gc_env.r[4] + 12288; // addi r31, r4, 0x3000']
Processing opcode: stw, operands: ['r0', '0x6004(r4)']
Translated stw r0 0x6004(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x6004, gc_env.r[0]); // stw r0, 0x6004(r4)']
Processing opcode: lwz, operands: ['r30', '0x3024(r4)']
Translated lwz r30 0x3024(r4) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x3024); // lwz r30, 0x3024(r4)']
Translated rlwinm r0 r30 0 30 28 to: ['gc_env.r[0] = (gc_env.r[30] << 0) & -0x5; // rlwinm r0, r30, 0, 30, 28']
Translated ori r0 r0 0x1 to: ['gc_env.r[0] |= 1; // ori r0, r0, 0x1']
Processing opcode: stwu, operands: ['r0', '0x24(r31)']
Translated stwu r0 0x24(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x24, gc_env.r[0]); // stwu r0, 0x24(r31)', 'gc_env.r[31] = gc_env.r[31] + 0x24;']
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Translated lis r5 0x8000 to: ['gc_env.r[5] = -32768 << 16; // lis r5, 0x8000']
Processing opcode: lwz, operands: ['r0', '0xf8(r5)']
Translated lwz r0 0xf8(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xF8); // lwz r0, 0xF8(r5)']
Translated lis r5 0x431c to: ['gc_env.r[5] = 17180 << 16; // lis r5, 0x431c']
Processing opcode: subi, operands: ['r5', 'r5', '0x217d']
Translated subi r5 r5 0x217d to: ['gc_env.r[5] = gc_env.r[5] - 8573; // subi r5, r5, 8573']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Translated mulhwu r0 r5 r0 to: ['gc_env.r[0] = (uint32_t)(((uint64_t)gc_env.r[5] * (uint64_t)gc_env.r[0]) >> 32); // mulhwu r0, r5, r0']
Translated srwi r0 r0 15 to: ['gc_env.r[0] = gc_env.r[0] >> 15; // srwi r0, r0, 15']
Processing opcode: mulli, operands: ['r0', 'r0', '0xc']
Translated mulli r0 r0 0xc to: ['gc_env.r[0] = gc_env.r[0] * 12; // mulli r0, r0, 12']
Processing opcode: addi, operands: ['r26', 'r4', '0x0']
Translated addi r26 r4 0x0 to: ['gc_env.r[26] = gc_env.r[4] + 0; // addi r26, r4, 0x0']
Processing opcode: addi, operands: ['r27', 'r3', '0x0']
Translated addi r27 r3 0x0 to: ['gc_env.r[27] = gc_env.r[3] + 0; // addi r27, r3, 0x0']
Translated srwi r28 r0 3 to: ['gc_env.r[28] = gc_env.r[0] >> 3; // srwi r28, r0, 3']
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Translated subfc r5 r26 r4 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[4] - gc_env.r[26];', 'gc_env.r[5] = (uint32_t)subfc_temp; // subfc r5, r26, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= gc_env.r[26] ? 0x20000000 : 0);']
Translated subfe r0 r27 r3 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[3] - gc_env.r[27] - subfe_borrow;', 'gc_env.r[0] = (uint32_t)subfe_temp; // subfe r0, r27, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= (gc_env.r[27] + subfe_borrow) ? 0x20000000 : 0);']
Translated xoris r4 r0 0x8000 to: ['gc_env.r[4] = gc_env.r[0] ^ 0x80000000; // xoris r4, r0, 0x8000']
Translated xoris r3 r29 0x8000 to: ['gc_env.r[3] = gc_env.r[29] ^ 0x80000000; // xoris r3, r29, 0x8000']
Translated subfc r0 r28 r5 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[5] - gc_env.r[28];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r28, r5', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= gc_env.r[28] ? 0x20000000 : 0);']
Translated subfe r3 r3 r4 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[4] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r3, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r3 r4 r4 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[4] - gc_env.r[4] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r4, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= (gc_env.r[4] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r3 r3 to: ['gc_env.r[3] = -(int32_t)gc_env.r[3]; // neg r3, r3']
Translated bne .L_8000D17C to: if (gc_env.cr[0] != 0) goto L_8000D17C;
Translated ori r0 r30 0x5 to: ['gc_env.r[0] = gc_env.r[30] | 5; // ori r0, r30, 0x5']
Processing opcode: stw, operands: ['r0', '0x0(r31)']
Translated stw r0 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stw r0, (r31)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF38@sda21(r0)']
Translated stw r0 lbl_8001EF38@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF38, gc_env.r[0]); // stw r0, lbl_8001EF38@sda21(r0)']
Translated bl __OSGetSystemTime to: __OSGetSystemTime();
Processing opcode: stw, operands: ['r4', 'lbl_8001EF34@sda21(r0)']
Translated stw r4 lbl_8001EF34@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF34, gc_env.r[4]); // stw r4, lbl_8001EF34@sda21(r0)']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF30@sda21(r0)']
Translated stw r3 lbl_8001EF30@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF30, gc_env.r[3]); // stw r3, lbl_8001EF30@sda21(r0)']
Translated lmw r26 0x8(r1) to: ['gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lmw r26, 0x8(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lmw r26, 0x8(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lmw r26, 0x8(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lmw r26, 0x8(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lmw r26, 0x8(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r26, 0x8(r1)']
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF20@sda21(r0)']
Translated stw r0 lbl_8001EF20@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF20, gc_env.r[0]); // stw r0, lbl_8001EF20@sda21(r0)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF40@sda21(r0)']
Translated stw r0 lbl_8001EF40@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF40, gc_env.r[0]); // stw r0, lbl_8001EF40@sda21(r0)']
Translated blr  to: return;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x6004(r3)']
Translated stw r0 0x6004(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x6004, gc_env.r[0]); // stw r0, 0x6004(r3)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF28@sda21(r0)']
Translated lwz r3 lbl_8001EF28@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF28); // lwz r3, lbl_8001EF28@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF28@sda21(r0)']
Translated stw r0 lbl_8001EF28@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF28, gc_env.r[0]); // stw r0, lbl_8001EF28@sda21(r0)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: addi, operands: ['r31', 'r4', '0x0']
Translated addi r31 r4 0x0 to: ['gc_env.r[31] = gc_env.r[4] + 0; // addi r31, r4, 0x0']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: stw, operands: ['r30', 'lbl_8001EF44@sda21(r0)']
Translated stw r30 lbl_8001EF44@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF44, gc_env.r[30]); // stw r30, lbl_8001EF44@sda21(r0)']
Processing opcode: stw, operands: ['r31', 'lbl_8001EF48@sda21(r0)']
Translated stw r31 lbl_8001EF48@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF48, gc_env.r[31]); // stw r31, lbl_8001EF48@sda21(r0)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF68@sda21(r0)']
Translated stw r3 lbl_8001EF68@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF68, gc_env.r[3]); // stw r3, lbl_8001EF68@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x38(r3)']
Translated lwz r0 0x38(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x38); // lwz r0, 0x38(r3)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF6C@sda21(r0)']
Translated stw r0 lbl_8001EF6C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF6C, gc_env.r[0]); // stw r0, lbl_8001EF6C@sda21(r0)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF6C@sda21(r0)']
Translated lwz r3 lbl_8001EF6C@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF6C); // lwz r3, lbl_8001EF6C@sda21(r0)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beqlr  to: ['if (gc_env.cr[0] & 0x2) return; // beqlr']
Processing opcode: lwz, operands: ['r0', '0x8(r3)']
Translated lwz r0 0x8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r0, 0x8(r3)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF74@sda21(r0)']
Translated stw r0 lbl_8001EF74@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF74, gc_env.r[0]); // stw r0, lbl_8001EF74@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF74@sda21(r0)']
Translated lwz r0 lbl_8001EF74@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF74); // lwz r0, lbl_8001EF74@sda21(r0)']
Processing opcode: mulli, operands: ['r0', 'r0', '0xc']
Translated mulli r0 r0 0xc to: ['gc_env.r[0] = gc_env.r[0] * 12; // mulli r0, r0, 12']
Processing opcode: add, operands: ['r0', 'r3', 'r0']
Translated add r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] + gc_env.r[0]; // add r0, r3, r0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF70@sda21(r0)']
Translated stw r0 lbl_8001EF70@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF70, gc_env.r[0]); // stw r0, lbl_8001EF70@sda21(r0)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 lbl_8001B208@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001B208 >> 16) & 0xFFFF; // lis r3, lbl_8001B208@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: stw, operands: ['r30', '0x8(r1)']
Translated stw r30 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[30]); // stw r30, 0x8(r1)']
Processing opcode: addi, operands: ['r30', 'r3', 'lbl_8001B208@l']
Translated addi r30 r3 lbl_8001B208@l to: ['gc_env.r[30] = gc_env.r[3] + ((uint32_t)&lbl_8001B208 & 0xFFFF); // addi r30, r3, lbl_8001B208@l']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFC8@sda21(r0)']
Translated lwz r0 lbl_8001EFC8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFC8); // lwz r0, lbl_8001EFC8@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000D360 to: if (gc_env.cr[0] != 0) goto L_8000D360;
Translated bl OSInitAlarm to: OSInitAlarm();
Processing opcode: li, operands: ['r31', '0x1']
Translated li r31 0x1 to: ['gc_env.r[31] = 0x1; // li r31, 0x1']
Processing opcode: stw, operands: ['r31', 'lbl_8001EFC8@sda21(r0)']
Translated stw r31 lbl_8001EFC8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFC8, gc_env.r[31]); // stw r31, lbl_8001EFC8@sda21(r0)']
Translated bl fn_8000D244 to: fn_8000D244();
Translated bl fn_8000F438 to: fn_8000F438();
Translated bl fn_8000C3F0 to: fn_8000C3F0();
Translated lis r0 0x8000 to: ['gc_env.r[0] = -32768 << 16; // lis r0, 0x8000']
Translated lis r3 fn_8000C430@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000C430 >> 16) & 0xFFFF; // lis r3, fn_8000C430@ha']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF90@sda21(r0)']
Translated stw r0 lbl_8001EF90@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF90, gc_env.r[0]); // stw r0, lbl_8001EF90@sda21(r0)']
Processing opcode: addi, operands: ['r4', 'r3', 'fn_8000C430@l']
Translated addi r4 r3 fn_8000C430@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&fn_8000C430 & 0xFFFF); // addi r4, r3, fn_8000C430@l']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF8C@sda21(r0)']
Translated stw r0 lbl_8001EF8C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF8C, gc_env.r[0]); // stw r0, lbl_8001EF8C@sda21(r0)']
Processing opcode: li, operands: ['r3', '0x15']
Translated li r3 0x15 to: ['gc_env.r[3] = 0x15; // li r3, 0x15']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Processing opcode: li, operands: ['r3', '0x400']
Translated li r3 0x400 to: ['gc_env.r[3] = 0x400; // li r3, 0x400']
Translated bl __OSUnmaskInterrupts to: __OSUnmaskInterrupts();
Processing opcode: li, operands: ['r3', 'lbl_8001EF7C@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Translated bl OSInitThreadQueue to: OSInitThreadQueue();
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: li, operands: ['r0', '0x2a']
Translated li r0 0x2a to: ['gc_env.r[0] = 0x2a; // li r0, 0x2a']
Processing opcode: stw, operands: ['r0', '0x6000(r3)']
Translated stw r0 0x6000(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x6000, gc_env.r[0]); // stw r0, 0x6000(r3)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x6004(r3)']
Translated stw r0 0x6004(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x6004, gc_env.r[0]); // stw r0, 0x6004(r3)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF90@sda21(r0)']
Translated lwz r3 lbl_8001EF90@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF90); // lwz r3, lbl_8001EF90@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r3', '0x20']
Translated addi r3 r3 0x20 to: ['gc_env.r[3] += 32; // addi r3, r3, 0x20']
Processing opcode: lwz, operands: ['r3', '0x0(r3)']
Translated lwz r3 0x0(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r3, (r3)']
Processing opcode: addis, operands: ['r0', 'r3', '0x1ae0']
Translated addis r0 r3 0x1ae0 to: ['gc_env.r[0] = gc_env.r[3] + (6880 << 16); // addis r0, r3, 6880']
Translated cmplwi r0 0x7c22 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x7c22) ? 0 : ((uint32_t)gc_env.r[0] < 0x7c22 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000D334 to: if (gc_env.cr[0] != 0) goto L_8000D334;
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: addi, operands: ['r3', 'r30', '0x18']
Translated addi r3 r30 0x18 to: ['gc_env.r[3] = gc_env.r[30] + 24; // addi r3, r30, 0x18']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated bl fn_8000F8A0 to: fn_8000F8A0();
Translated b .L_8000D360 to: goto L_8000D360;
Processing opcode: subis, operands: ['r0', 'r3', '0xd15']
Translated subis r0 r3 0xd15 to: ['gc_env.r[0] = gc_env.r[3] - (3349 << 16); // subis r0, r3, 3349']
Translated cmplwi r0 0xea5e to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xea5e) ? 0 : ((uint32_t)gc_env.r[0] < 0xea5e ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000D350 to: if (gc_env.cr[0] != 0) goto L_8000D350;
Processing opcode: addi, operands: ['r3', 'r30', '0x24']
Translated addi r3 r30 0x24 to: ['gc_env.r[3] = gc_env.r[30] + 36; // addi r3, r30, 0x24']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated b .L_8000D360 to: goto L_8000D360;
Processing opcode: stw, operands: ['r31', 'lbl_8001EFC4@sda21(r0)']
Translated stw r31 lbl_8001EFC4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFC4, gc_env.r[31]); // stw r31, lbl_8001EFC4@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r30', '0x40']
Translated addi r3 r30 0x40 to: ['gc_env.r[3] = gc_env.r[30] + 64; // addi r3, r30, 0x40']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: lwz, operands: ['r30', '0x8(r1)']
Translated lwz r30 0x8(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r30, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 fn_8000D378@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D378 >> 16) & 0xFFFF; // lis r3, fn_8000D378@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r0', 'r3', 'fn_8000D378@l']
Translated addi r0 r3 fn_8000D378@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&fn_8000D378 & 0xFFFF); // addi r0, r3, fn_8000D378@l']
Translated lis r3 lbl_8001C9A0@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C9A0 >> 16) & 0xFFFF; // lis r3, lbl_8001C9A0@ha']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: addi, operands: ['r5', 'r3', 'lbl_8001C9A0@l']
Translated addi r5 r3 lbl_8001C9A0@l to: ['gc_env.r[5] = gc_env.r[3] + ((uint32_t)&lbl_8001C9A0 & 0xFFFF); // addi r5, r3, lbl_8001C9A0@l']
Translated lis r3 fn_8000D3CC@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D3CC >> 16) & 0xFFFF; // lis r3, fn_8000D3CC@ha']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFCC@sda21(r0)']
Translated stw r0 lbl_8001EFCC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFCC, gc_env.r[0]); // stw r0, lbl_8001EFCC@sda21(r0)']
Processing opcode: addi, operands: ['r6', 'r3', 'fn_8000D3CC@l']
Translated addi r6 r3 fn_8000D3CC@l to: ['gc_env.r[6] = gc_env.r[3] + ((uint32_t)&fn_8000D3CC & 0xFFFF); // addi r6, r3, fn_8000D3CC@l']
Processing opcode: lwz, operands: ['r7', 'lbl_8001EF90@sda21(r0)']
Translated lwz r7 lbl_8001EF90@sda21(r0) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF90); // lwz r7, lbl_8001EF90@sda21(r0)']
Processing opcode: lwz, operands: ['r4', '0x8(r5)']
Translated lwz r4 0x8(r5) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x8); // lwz r4, 0x8(r5)']
Processing opcode: lwz, operands: ['r3', '0x38(r7)']
Translated lwz r3 0x38(r7) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x38); // lwz r3, 0x38(r7)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1f']
Translated addi r0 r4 0x1f to: ['gc_env.r[0] = gc_env.r[4] + 31; // addi r0, r4, 0x1f']
Processing opcode: lwz, operands: ['r5', '0x4(r5)']
Translated lwz r5 0x4(r5) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x4); // lwz r5, 0x4(r5)']
Translated clrrwi r4 r0 5 to: gc_env.r[4] = gc_env.r[0] & ~((1ULL << 5) - 1); // Clear rightmost 5 bits
Translated bl fn_8000C9A8 to: fn_8000C9A8();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmplwi r3 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x10) ? 0 : ((uint32_t)gc_env.r[3] < 0x10 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bne .L_8000D3F4 to: if (gc_env.cr[0] != 0) goto L_8000D3F4;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r0', '0xc(r3)']
Translated stw r0 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[0]); // stw r0, 0xC(r3)']
Translated bl fn_8000D4F4 to: fn_8000D4F4();
Translated b .L_8000D43C to: goto L_8000D43C;
Translated clrlwi. r0 r3 31 to: ['gc_env.r[0] = gc_env.r[3] & 0x1; // clrlwi r0, r3, 31']
Translated beq .L_8000D438 to: if (gc_env.cr[0] == 0) goto L_8000D438;
Translated lis r3 lbl_8001CA20@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CA20 >> 16) & 0xFFFF; // lis r3, lbl_8001CA20@ha']
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r0', 'r3', 'lbl_8001CA20@l']
Translated addi r0 r3 lbl_8001CA20@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&lbl_8001CA20 & 0xFFFF); // addi r0, r3, lbl_8001CA20@l']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF88@sda21(r0)']
Translated stw r0 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[0]); // stw r0, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r3', 'lbl_8001EFBC@sda21(r0)']
Translated stw r3 lbl_8001EFBC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFBC, gc_env.r[3]); // stw r3, lbl_8001EFBC@sda21(r0)']
Processing opcode: stw, operands: ['r3', '0xc(r4)']
Translated stw r3 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[3]); // stw r3, 0xC(r4)']
Processing opcode: lwz, operands: ['r12', '0x28(r4)']
Translated lwz r12 0x28(r4) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x28); // lwz r12, 0x28(r4)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000D430 to: if (gc_env.cr[0] == 0) goto L_8000D430;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Translated b .L_8000D43C to: goto L_8000D43C;
Translated bl fn_8000D590 to: fn_8000D590();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmplwi r3 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x10) ? 0 : ((uint32_t)gc_env.r[3] < 0x10 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated bne .L_8000D478 to: if (gc_env.cr[0] != 0) goto L_8000D478;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r0', '0xc(r3)']
Translated stw r0 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[0]); // stw r0, 0xC(r3)']
Translated bl fn_8000D4F4 to: fn_8000D4F4();
Translated b .L_8000D4E0 to: goto L_8000D4E0;
Translated lis r3 lbl_8001CA20@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CA20 >> 16) & 0xFFFF; // lis r3, lbl_8001CA20@ha']
Processing opcode: lwz, operands: ['r31', 'lbl_8001EF88@sda21(r0)']
Translated lwz r31 lbl_8001EF88@sda21(r0) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r31, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r0', 'r3', 'lbl_8001CA20@l']
Translated addi r0 r3 lbl_8001CA20@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&lbl_8001CA20 & 0xFFFF); // addi r0, r3, lbl_8001CA20@l']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF88@sda21(r0)']
Translated stw r0 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[0]); // stw r0, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r3', 'lbl_8001EFA0@sda21(r0)']
Translated stw r3 lbl_8001EFA0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFA0, gc_env.r[3]); // stw r3, lbl_8001EFA0@sda21(r0)']
Processing opcode: lwz, operands: ['r12', '0x28(r31)']
Translated lwz r12 0x28(r31) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x28); // lwz r12, 0x28(r31)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000D4AC to: if (gc_env.cr[0] == 0) goto L_8000D4AC;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: li, operands: ['r3', '-0x1']
Translated li r3 -0x1 to: ['gc_env.r[3] = -0x1; // li r3, -0x1']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated lwz r0 lbl_8001EFA8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA8); // lwz r0, lbl_8001EFA8@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000D4DC to: if (gc_env.cr[0] == 0) goto L_8000D4DC;
Processing opcode: lwz, operands: ['r12', 'lbl_8001EFAC@sda21(r0)']
Translated lwz r12 lbl_8001EFAC@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFAC); // lwz r12, lbl_8001EFAC@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated stw r0 lbl_8001EFA8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFA8, gc_env.r[0]); // stw r0, lbl_8001EFA8@sda21(r0)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000D4DC to: if (gc_env.cr[0] == 0) goto L_8000D4DC;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4568']
Translated addi r3 r3 0x4568 to: ['gc_env.r[3] += 17768; // addi r3, r3, 0x4568']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated bl fn_8000EEC0 to: fn_8000EEC0();
Translated lis r3 lbl_8001CA20@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CA20 >> 16) & 0xFFFF; // lis r3, lbl_8001CA20@ha']
Processing opcode: lwz, operands: ['r31', 'lbl_8001EF88@sda21(r0)']
Translated lwz r31 lbl_8001EF88@sda21(r0) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r31, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r0', 'r3', 'lbl_8001CA20@l']
Translated addi r0 r3 lbl_8001CA20@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&lbl_8001CA20 & 0xFFFF); // addi r0, r3, lbl_8001CA20@l']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF88@sda21(r0)']
Translated stw r0 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[0]); // stw r0, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r3', 'lbl_8001EFA0@sda21(r0)']
Translated stw r3 lbl_8001EFA0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFA0, gc_env.r[3]); // stw r3, lbl_8001EFA0@sda21(r0)']
Processing opcode: lwz, operands: ['r12', '0x28(r31)']
Translated lwz r12 0x28(r31) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x28); // lwz r12, 0x28(r31)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000D548 to: if (gc_env.cr[0] == 0) goto L_8000D548;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: li, operands: ['r3', '-0x1']
Translated li r3 -0x1 to: ['gc_env.r[3] = -0x1; // li r3, -0x1']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated lwz r0 lbl_8001EFA8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA8); // lwz r0, lbl_8001EFA8@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000D578 to: if (gc_env.cr[0] == 0) goto L_8000D578;
Processing opcode: lwz, operands: ['r12', 'lbl_8001EFAC@sda21(r0)']
Translated lwz r12 lbl_8001EFAC@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFAC); // lwz r12, lbl_8001EFAC@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated stw r0 lbl_8001EFA8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFA8, gc_env.r[0]); // stw r0, lbl_8001EFA8@sda21(r0)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000D578 to: if (gc_env.cr[0] == 0) goto L_8000D578;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 fn_8000D66C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D66C >> 16) & 0xFFFF; // lis r3, fn_8000D66C@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000D66C@l']
Translated addi r3 r3 fn_8000D66C@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&fn_8000D66C & 0xFFFF); // addi r3, r3, fn_8000D66C@l']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_8000CE30 to: fn_8000CE30();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: subis, operands: ['r0', 'r3', '0x2']
Translated subis r0 r3 0x2 to: ['gc_env.r[0] = gc_env.r[3] - (2 << 16); // subis r0, r3, 2']
Translated cmplwi r0 0x400 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x400) ? 0 : ((uint32_t)gc_env.r[0] < 0x400 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000D5D0 to: if (gc_env.cr[0] != 0) goto L_8000D5D0;
Processing opcode: stw, operands: ['r3', 'lbl_8001EFB8@sda21(r0)']
Translated stw r3 lbl_8001EFB8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB8, gc_env.r[3]); // stw r3, lbl_8001EFB8@sda21(r0)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated blr  to: return;
Translated clrlwi r4 r3 8 to: ['gc_env.r[4] = gc_env.r[3] & 0xFFFFFF; // clrlwi r4, r3, 8']
Processing opcode: subis, operands: ['r0', 'r4', '0x6']
Translated subis r0 r4 0x6 to: ['gc_env.r[0] = gc_env.r[4] - (6 << 16); // subis r0, r4, 6']
Translated cmplwi r0 0x2800 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2800) ? 0 : ((uint32_t)gc_env.r[0] < 0x2800 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000D5F8 to: if (gc_env.cr[0] == 0) goto L_8000D5F8;
Processing opcode: subis, operands: ['r0', 'r4', '0x2']
Translated subis r0 r4 0x2 to: ['gc_env.r[0] = gc_env.r[4] - (2 << 16); // subis r0, r4, 2']
Translated cmplwi r0 0x3a00 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x3a00) ? 0 : ((uint32_t)gc_env.r[0] < 0x3a00 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000D5F8 to: if (gc_env.cr[0] == 0) goto L_8000D5F8;
Processing opcode: subis, operands: ['r0', 'r4', '0xb']
Translated subis r0 r4 0xb to: ['gc_env.r[0] = gc_env.r[4] - (11 << 16); // subis r0, r4, 11']
Translated cmplwi r0 0x5a01 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x5a01) ? 0 : ((uint32_t)gc_env.r[0] < 0x5a01 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000D600 to: if (gc_env.cr[0] != 0) goto L_8000D600;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EFBC@sda21(r0)']
Translated lwz r3 lbl_8001EFBC@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFBC); // lwz r3, lbl_8001EFBC@sda21(r0)']
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFBC@sda21(r0)']
Translated stw r0 lbl_8001EFBC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFBC, gc_env.r[0]); // stw r0, lbl_8001EFBC@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFBC@sda21(r0)']
Translated lwz r0 lbl_8001EFBC@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFBC); // lwz r0, lbl_8001EFBC@sda21(r0)']
Translated cmpwi r0 0x2 to: gc_env.cr[0] = (gc_env.r[0] == 0x2) ? 0 : (gc_env.r[0] < 0x2 ? -1 : 1); // Compare with immediate
Translated bne .L_8000D63C to: if (gc_env.cr[0] != 0) goto L_8000D63C;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFB8@sda21(r0)']
Translated lwz r0 lbl_8001EFB8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFB8); // lwz r0, lbl_8001EFB8@sda21(r0)']
Translated cmplw r4 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_8000D630 to: if (gc_env.cr[0] != 0) goto L_8000D630;
Processing opcode: stw, operands: ['r4', 'lbl_8001EFB8@sda21(r0)']
Translated stw r4 lbl_8001EFB8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB8, gc_env.r[4]); // stw r4, lbl_8001EFB8@sda21(r0)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated blr  to: return;
Processing opcode: stw, operands: ['r4', 'lbl_8001EFB8@sda21(r0)']
Translated stw r4 lbl_8001EFB8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB8, gc_env.r[4]); // stw r4, lbl_8001EFB8@sda21(r0)']
Processing opcode: li, operands: ['r3', '0x2']
Translated li r3 0x2 to: ['gc_env.r[3] = 0x2; // li r3, 0x2']
Translated blr  to: return;
Processing opcode: subis, operands: ['r0', 'r4', '0x3']
Translated subis r0 r4 0x3 to: ['gc_env.r[0] = gc_env.r[4] - (3 << 16); // subis r0, r4, 3']
Processing opcode: stw, operands: ['r4', 'lbl_8001EFB8@sda21(r0)']
Translated stw r4 lbl_8001EFB8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB8, gc_env.r[4]); // stw r4, lbl_8001EFB8@sda21(r0)']
Translated cmplwi r0 0x1100 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1100) ? 0 : ((uint32_t)gc_env.r[0] < 0x1100 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000D65C to: if (gc_env.cr[0] == 0) goto L_8000D65C;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x8(r3)']
Translated lwz r0 0x8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r0, 0x8(r3)']
Translated cmplwi r0 0x5 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x5) ? 0 : ((uint32_t)gc_env.r[0] < 0x5 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000D664 to: if (gc_env.cr[0] != 0) goto L_8000D664;
Processing opcode: li, operands: ['r3', '0x2']
Translated li r3 0x2 to: ['gc_env.r[3] = 0x2; // li r3, 0x2']
Translated blr  to: return;
Processing opcode: li, operands: ['r3', '0x3']
Translated li r3 0x3 to: ['gc_env.r[3] = 0x3; // li r3, 0x3']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmplwi r3 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x10) ? 0 : ((uint32_t)gc_env.r[3] < 0x10 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: stw, operands: ['r29', '0x14(r1)']
Translated stw r29 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stw r29, 0x14(r1)']
Processing opcode: stw, operands: ['r28', '0x10(r1)']
Translated stw r28 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[28]); // stw r28, 0x10(r1)']
Translated bne .L_8000D6B8 to: if (gc_env.cr[0] != 0) goto L_8000D6B8;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4568']
Translated addi r3 r3 0x4568 to: ['gc_env.r[3] += 17768; // addi r3, r3, 0x4568']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated bl fn_8000EEC0 to: fn_8000EEC0();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl fn_8000D44C to: fn_8000D44C();
Translated b .L_8000D8E0 to: goto L_8000D8E0;
Translated rlwinm. r0 r3 0 30 30 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x2; // rlwinm r0, r3, 0, 30, 30', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000D6E8 to: if (gc_env.cr[0] == 0) goto L_8000D6E8;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4567']
Translated addi r3 r3 0x4567 to: ['gc_env.r[3] += 17767; // addi r3, r3, 0x4567']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated lis r3 fn_8000D44C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D44C >> 16) & 0xFFFF; // lis r3, fn_8000D44C@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000D44C@l']
Translated addi r3 r3 fn_8000D44C@l to: ['gc_env.r[3] = (uint32_t)&fn_8000D44C; // lis + addi fn_8000D44C (completing pattern)']
Translated bl fn_8000CDA4 to: fn_8000CDA4();
Translated b .L_8000D8E0 to: goto L_8000D8E0;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r29', '0x6020(r3)']
Translated lwz r29 0x6020(r3) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6020); // lwz r29, 0x6020(r3)']
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Translated clrrwi r28 r29 24 to: gc_env.r[28] = gc_env.r[29] & ~((1ULL << 24) - 1); // Clear rightmost 24 bits
Translated bl fn_8000D5B8 to: fn_8000D5B8();
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Translated cmplwi r31 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == 0x1) ? 0 : ((uint32_t)gc_env.r[31] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000D72C to: if (gc_env.cr[0] != 0) goto L_8000D72C;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated lis r3 fn_8000D44C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D44C >> 16) & 0xFFFF; // lis r3, fn_8000D44C@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000D44C@l']
Translated addi r3 r3 fn_8000D44C@l to: ['gc_env.r[3] = (uint32_t)&fn_8000D44C; // lis + addi fn_8000D44C (completing pattern)']
Translated bl fn_8000CDA4 to: fn_8000CDA4();
Translated b .L_8000D8E0 to: goto L_8000D8E0;
Processing opcode: subi, operands: ['r0', 'r31', '0x2']
Translated subi r0 r31 0x2 to: ['gc_env.r[0] = gc_env.r[31] - 2; // subi r0, r31, 2']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bgt .L_8000D740 to: ['if (gc_env.cr[0] & 0x4) goto L_8000D740; // bgt .L_8000D740']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated b .L_8000D780 to: goto L_8000D780;
Processing opcode: subis, operands: ['r0', 'r28', '0x100']
Translated subis r0 r28 0x100 to: ['gc_env.r[0] = gc_env.r[28] - (256 << 16); // subis r0, r28, 256']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000D754 to: if (gc_env.cr[0] != 0) goto L_8000D754;
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Translated b .L_8000D780 to: goto L_8000D780;
Processing opcode: subis, operands: ['r0', 'r28', '0x200']
Translated subis r0 r28 0x200 to: ['gc_env.r[0] = gc_env.r[28] - (512 << 16); // subis r0, r28, 512']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000D768 to: if (gc_env.cr[0] != 0) goto L_8000D768;
Processing opcode: li, operands: ['r4', '0x6']
Translated li r4 0x6 to: ['gc_env.r[4] = 0x6; // li r4, 0x6']
Translated b .L_8000D780 to: goto L_8000D780;
Processing opcode: subis, operands: ['r0', 'r28', '0x300']
Translated subis r0 r28 0x300 to: ['gc_env.r[0] = gc_env.r[28] - (768 << 16); // subis r0, r28, 768']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000D77C to: if (gc_env.cr[0] != 0) goto L_8000D77C;
Processing opcode: li, operands: ['r4', '0x3']
Translated li r4 0x3 to: ['gc_env.r[4] = 0x3; // li r4, 0x3']
Translated b .L_8000D780 to: goto L_8000D780;
Processing opcode: li, operands: ['r4', '0x5']
Translated li r4 0x5 to: ['gc_env.r[4] = 0x5; // li r4, 0x5']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated lwz r0 lbl_8001EFA8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA8); // lwz r0, lbl_8001EFA8@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000D7F4 to: if (gc_env.cr[0] == 0) goto L_8000D7F4;
Translated lis r3 lbl_8001CA20@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CA20 >> 16) & 0xFFFF; // lis r3, lbl_8001CA20@ha']
Processing opcode: stw, operands: ['r4', 'lbl_8001EFB0@sda21(r0)']
Translated stw r4 lbl_8001EFB0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB0, gc_env.r[4]); // stw r4, lbl_8001EFB0@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: lwz, operands: ['r30', 'lbl_8001EF88@sda21(r0)']
Translated lwz r30 lbl_8001EF88@sda21(r0) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r30, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001CA20@l']
Translated addi r3 r3 lbl_8001CA20@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&lbl_8001CA20 & 0xFFFF); // addi r3, r3, lbl_8001CA20@l']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated stw r0 lbl_8001EFA8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFA8, gc_env.r[0]); // stw r0, lbl_8001EFA8@sda21(r0)']
Processing opcode: li, operands: ['r0', '0xa']
Translated li r0 0xa to: ['gc_env.r[0] = 0xa; // li r0, 0xa']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated stw r3 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[3]); // stw r3, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r0', '0xc(r30)']
Translated stw r0 0xc(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0xC, gc_env.r[0]); // stw r0, 0xC(r30)']
Processing opcode: lwz, operands: ['r12', '0x28(r30)']
Translated lwz r12 0x28(r30) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x28); // lwz r12, 0x28(r30)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000D7CC to: if (gc_env.cr[0] == 0) goto L_8000D7CC;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: li, operands: ['r3', '-0x3']
Translated li r3 -0x3 to: ['gc_env.r[3] = -0x3; // li r3, -0x3']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: lwz, operands: ['r12', 'lbl_8001EFAC@sda21(r0)']
Translated lwz r12 lbl_8001EFAC@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFAC); // lwz r12, lbl_8001EFAC@sda21(r0)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000D7E8 to: if (gc_env.cr[0] == 0) goto L_8000D7E8;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated b .L_8000D7F8 to: goto L_8000D7F8;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000D8E0 to: if (gc_env.cr[0] != 0) goto L_8000D8E0;
Translated cmplwi r31 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == 0x2) ? 0 : ((uint32_t)gc_env.r[31] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000D818 to: if (gc_env.cr[0] != 0) goto L_8000D818;
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated bl fn_8000F74C to: fn_8000F74C();
Translated bl fn_8000DA00 to: fn_8000DA00();
Translated b .L_8000D8E0 to: goto L_8000D8E0;
Translated cmplwi r31 0x3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == 0x3) ? 0 : ((uint32_t)gc_env.r[31] < 0x3 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000D85C to: if (gc_env.cr[0] != 0) goto L_8000D85C;
Translated clrlwi r3 r29 8 to: ['gc_env.r[3] = gc_env.r[29] & 0xFFFFFF; // clrlwi r3, r29, 8']
Processing opcode: subis, operands: ['r0', 'r3', '0x3']
Translated subis r0 r3 0x3 to: ['gc_env.r[0] = gc_env.r[3] - (3 << 16); // subis r0, r3, 3']
Translated cmplwi r0 0x1100 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1100) ? 0 : ((uint32_t)gc_env.r[0] < 0x1100 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000D848 to: if (gc_env.cr[0] != 0) goto L_8000D848;
Processing opcode: lwz, operands: ['r5', 'lbl_8001EF88@sda21(r0)']
Translated lwz r5 lbl_8001EF88@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r5, lbl_8001EF88@sda21(r0)']
Translated lis r3 fn_8000D900@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D900 >> 16) & 0xFFFF; // lis r3, fn_8000D900@ha']
Processing opcode: addi, operands: ['r4', 'r3', 'fn_8000D900@l']
Translated addi r4 r3 fn_8000D900@l to: ['gc_env.r[4] = (uint32_t)&fn_8000D900; // lis + addi fn_8000D900 (completing pattern)']
Processing opcode: lwz, operands: ['r3', '0x10(r5)']
Translated lwz r3 0x10(r5) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x10); // lwz r3, 0x10(r5)']
Translated bl fn_8000CC40 to: fn_8000CC40();
Translated b .L_8000D8E0 to: goto L_8000D8E0;
Processing opcode: lwz, operands: ['r12', 'lbl_8001EFCC@sda21(r0)']
Translated lwz r12 lbl_8001EFCC@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFCC); // lwz r12, lbl_8001EFCC@sda21(r0)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated b .L_8000D8E0 to: goto L_8000D8E0;
Processing opcode: subis, operands: ['r0', 'r28', '0x100']
Translated subis r0 r28 0x100 to: ['gc_env.r[0] = gc_env.r[28] - (256 << 16); // subis r0, r28, 256']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000D87C to: if (gc_env.cr[0] != 0) goto L_8000D87C;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x5']
Translated li r0 0x5 to: ['gc_env.r[0] = 0x5; // li r0, 0x5']
Processing opcode: stw, operands: ['r0', '0xc(r3)']
Translated stw r0 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[0]); // stw r0, 0xC(r3)']
Translated bl fn_8000E134 to: fn_8000E134();
Translated b .L_8000D8E0 to: goto L_8000D8E0;
Processing opcode: subis, operands: ['r0', 'r28', '0x200']
Translated subis r0 r28 0x200 to: ['gc_env.r[0] = gc_env.r[28] - (512 << 16); // subis r0, r28, 512']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000D89C to: if (gc_env.cr[0] != 0) goto L_8000D89C;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x3']
Translated li r0 0x3 to: ['gc_env.r[0] = 0x3; // li r0, 0x3']
Processing opcode: stw, operands: ['r0', '0xc(r3)']
Translated stw r0 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[0]); // stw r0, 0xC(r3)']
Translated bl fn_8000DFC8 to: fn_8000DFC8();
Translated b .L_8000D8E0 to: goto L_8000D8E0;
Processing opcode: subis, operands: ['r0', 'r28', '0x300']
Translated subis r0 r28 0x300 to: ['gc_env.r[0] = gc_env.r[28] - (768 << 16); // subis r0, r28, 768']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000D8BC to: if (gc_env.cr[0] != 0) goto L_8000D8BC;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x4']
Translated li r0 0x4 to: ['gc_env.r[0] = 0x4; // li r0, 0x4']
Processing opcode: stw, operands: ['r0', '0xc(r3)']
Translated stw r0 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[0]); // stw r0, 0xC(r3)']
Translated bl fn_8000E134 to: fn_8000E134();
Translated b .L_8000D8E0 to: goto L_8000D8E0;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4567']
Translated addi r3 r3 0x4567 to: ['gc_env.r[3] += 17767; // addi r3, r3, 0x4567']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated lis r3 fn_8000D44C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D44C >> 16) & 0xFFFF; // lis r3, fn_8000D44C@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000D44C@l']
Translated addi r3 r3 fn_8000D44C@l to: ['gc_env.r[3] = (uint32_t)&fn_8000D44C; // lis + addi fn_8000D44C (completing pattern)']
Translated bl fn_8000CDA4 to: fn_8000CDA4();
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: lwz, operands: ['r29', '0x14(r1)']
Translated lwz r29 0x14(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r29, 0x14(r1)']
Processing opcode: lwz, operands: ['r28', '0x10(r1)']
Translated lwz r28 0x10(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r28, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmplwi r3 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x10) ? 0 : ((uint32_t)gc_env.r[3] < 0x10 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bne .L_8000D93C to: if (gc_env.cr[0] != 0) goto L_8000D93C;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4568']
Translated addi r3 r3 0x4568 to: ['gc_env.r[3] += 17768; // addi r3, r3, 0x4568']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated bl fn_8000EEC0 to: fn_8000EEC0();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl fn_8000D44C to: fn_8000D44C();
Translated b .L_8000D958 to: goto L_8000D958;
Translated clrlwi. r0 r3 31 to: ['gc_env.r[0] = gc_env.r[3] & 0x1; // clrlwi r0, r3, 31']
Translated beq .L_8000D94C to: if (gc_env.cr[0] == 0) goto L_8000D94C;
Translated bl fn_8000DA00 to: fn_8000DA00();
Translated b .L_8000D958 to: goto L_8000D958;
Translated lis r3 fn_8000D968@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D968 >> 16) & 0xFFFF; // lis r3, fn_8000D968@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000D968@l']
Translated addi r3 r3 fn_8000D968@l to: ['gc_env.r[3] = (uint32_t)&fn_8000D968; // lis + addi fn_8000D968 (completing pattern)']
Translated bl fn_8000CE30 to: fn_8000CE30();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmplwi r3 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x10) ? 0 : ((uint32_t)gc_env.r[3] < 0x10 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bne .L_8000D9A4 to: if (gc_env.cr[0] != 0) goto L_8000D9A4;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4568']
Translated addi r3 r3 0x4568 to: ['gc_env.r[3] += 17768; // addi r3, r3, 0x4568']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated bl fn_8000EEC0 to: fn_8000EEC0();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl fn_8000D44C to: fn_8000D44C();
Translated b .L_8000D9F0 to: goto L_8000D9F0;
Translated rlwinm. r0 r3 0 30 30 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x2; // rlwinm r0, r3, 0, 30, 30', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r4', '-0x1']
Translated li r4 -0x1 to: ['gc_env.r[4] = -0x1; // li r4, -0x1']
Processing opcode: stw, operands: ['r4', '0xc(r3)']
Translated stw r4 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[4]); // stw r4, 0xC(r3)']
Translated beq .L_8000D9D4 to: if (gc_env.cr[0] == 0) goto L_8000D9D4;
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: addi, operands: ['r3', 'r3', '0x4567']
Translated addi r3 r3 0x4567 to: ['gc_env.r[3] += 17767; // addi r3, r3, 0x4567']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated lis r3 fn_8000D44C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D44C >> 16) & 0xFFFF; // lis r3, fn_8000D44C@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000D44C@l']
Translated addi r3 r3 fn_8000D44C@l to: ['gc_env.r[3] = (uint32_t)&fn_8000D44C; // lis + addi fn_8000D44C (completing pattern)']
Translated bl fn_8000CDA4 to: fn_8000CDA4();
Translated b .L_8000D9F0 to: goto L_8000D9F0;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x6000']
Translated addi r3 r3 0x6000 to: ['gc_env.r[3] += 24576; // addi r3, r3, 0x6000']
Processing opcode: lwz, operands: ['r3', '0x20(r3)']
Translated lwz r3 0x20(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x20); // lwz r3, 0x20(r3)']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated lis r3 fn_8000D44C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D44C >> 16) & 0xFFFF; // lis r3, fn_8000D44C@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000D44C@l']
Translated addi r3 r3 fn_8000D44C@l to: ['gc_env.r[3] = (uint32_t)&fn_8000D44C; // lis + addi fn_8000D44C (completing pattern)']
Translated bl fn_8000CDA4 to: fn_8000CDA4();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 fn_8000DA28@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000DA28 >> 16) & 0xFFFF; // lis r3, fn_8000DA28@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000DA28@l']
Translated addi r3 r3 fn_8000DA28@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&fn_8000DA28 & 0xFFFF); // addi r3, r3, fn_8000DA28@l']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_8000CDA4 to: fn_8000CDA4();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmplwi r3 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x10) ? 0 : ((uint32_t)gc_env.r[3] < 0x10 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated bne .L_8000DA68 to: if (gc_env.cr[0] != 0) goto L_8000DA68;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4568']
Translated addi r3 r3 0x4568 to: ['gc_env.r[3] += 17768; // addi r3, r3, 0x4568']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated bl fn_8000EEC0 to: fn_8000EEC0();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl fn_8000D44C to: fn_8000D44C();
Translated b .L_8000DB6C to: goto L_8000DB6C;
Translated rlwinm. r0 r3 0 30 30 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x2; // rlwinm r0, r3, 0, 30, 30', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000DA98 to: if (gc_env.cr[0] == 0) goto L_8000DA98;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4567']
Translated addi r3 r3 0x4567 to: ['gc_env.r[3] += 17767; // addi r3, r3, 0x4567']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated lis r3 fn_8000D44C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D44C >> 16) & 0xFFFF; // lis r3, fn_8000D44C@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000D44C@l']
Translated addi r3 r3 fn_8000D44C@l to: ['gc_env.r[3] = (uint32_t)&fn_8000D44C; // lis + addi fn_8000D44C (completing pattern)']
Translated bl fn_8000CDA4 to: fn_8000CDA4();
Translated b .L_8000DB6C to: goto L_8000DB6C;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFBC@sda21(r0)']
Translated stw r0 lbl_8001EFBC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFBC, gc_env.r[0]); // stw r0, lbl_8001EFBC@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x4) ? 0 : ((uint32_t)gc_env.r[0] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000DAD0 to: if (gc_env.cr[0] == 0) goto L_8000DAD0;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0x5 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x5) ? 0 : ((uint32_t)gc_env.r[0] < 0x5 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000DAD0 to: if (gc_env.cr[0] == 0) goto L_8000DAD0;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0xd to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xd) ? 0 : ((uint32_t)gc_env.r[0] < 0xd ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000DAD0 to: if (gc_env.cr[0] == 0) goto L_8000DAD0;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0xf to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xf) ? 0 : ((uint32_t)gc_env.r[0] < 0xf ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000DAD8 to: if (gc_env.cr[0] != 0) goto L_8000DAD8;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFC0@sda21(r0)']
Translated stw r0 lbl_8001EFC0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFC0, gc_env.r[0]); // stw r0, lbl_8001EFC0@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated lwz r0 lbl_8001EFA8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA8); // lwz r0, lbl_8001EFA8@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000DB50 to: if (gc_env.cr[0] == 0) goto L_8000DB50;
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Processing opcode: lwz, operands: ['r31', 'lbl_8001EF88@sda21(r0)']
Translated lwz r31 lbl_8001EF88@sda21(r0) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r31, lbl_8001EF88@sda21(r0)']
Translated lis r3 lbl_8001CA20@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CA20 >> 16) & 0xFFFF; // lis r3, lbl_8001CA20@ha']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFB0@sda21(r0)']
Translated stw r0 lbl_8001EFB0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB0, gc_env.r[0]); // stw r0, lbl_8001EFB0@sda21(r0)']
Processing opcode: addi, operands: ['r0', 'r3', 'lbl_8001CA20@l']
Translated addi r0 r3 lbl_8001CA20@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&lbl_8001CA20 & 0xFFFF); // addi r0, r3, lbl_8001CA20@l']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF88@sda21(r0)']
Translated stw r0 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[0]); // stw r0, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '0xa']
Translated li r0 0xa to: ['gc_env.r[0] = 0xa; // li r0, 0xa']
Processing opcode: stw, operands: ['r3', 'lbl_8001EFA8@sda21(r0)']
Translated stw r3 lbl_8001EFA8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFA8, gc_env.r[3]); // stw r3, lbl_8001EFA8@sda21(r0)']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: lwz, operands: ['r12', '0x28(r31)']
Translated lwz r12 0x28(r31) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x28); // lwz r12, 0x28(r31)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000DB28 to: if (gc_env.cr[0] == 0) goto L_8000DB28;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: li, operands: ['r3', '-0x3']
Translated li r3 -0x3 to: ['gc_env.r[3] = -0x3; // li r3, -0x3']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: lwz, operands: ['r12', 'lbl_8001EFAC@sda21(r0)']
Translated lwz r12 lbl_8001EFAC@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFAC); // lwz r12, lbl_8001EFAC@sda21(r0)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000DB44 to: if (gc_env.cr[0] == 0) goto L_8000DB44;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated b .L_8000DB54 to: goto L_8000DB54;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000DB6C to: if (gc_env.cr[0] != 0) goto L_8000DB6C;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '0xb']
Translated li r0 0xb to: ['gc_env.r[0] = 0xb; // li r0, 0xb']
Processing opcode: stw, operands: ['r0', '0xc(r3)']
Translated stw r0 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[0]); // stw r0, 0xC(r3)']
Translated bl fn_8000E134 to: fn_8000E134();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 lbl_8001C9A0@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C9A0 >> 16) & 0xFFFF; // lis r3, lbl_8001C9A0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: addi, operands: ['r31', 'r3', 'lbl_8001C9A0@l']
Translated addi r31 r3 lbl_8001C9A0@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&lbl_8001C9A0 & 0xFFFF); // addi r31, r3, lbl_8001C9A0@l']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmpwi r0 0x3 to: gc_env.cr[0] = (gc_env.r[0] == 0x3) ? 0 : (gc_env.r[0] < 0x3 ? -1 : 1); // Compare with immediate
Translated beq .L_8000DBA8 to: if (gc_env.cr[0] == 0) goto L_8000DBA8;
Translated b .L_8000DC14 to: goto L_8000DC14;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r5', '0x1c']
Translated li r5 0x1c to: ['gc_env.r[5] = 0x1c; // li r5, 0x1c']
Processing opcode: lwz, operands: ['r4', '0x24(r4)']
Translated lwz r4 0x24(r4) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x24); // lwz r4, 0x24(r4)']
Translated bl fn_800121EC to: fn_800121EC();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000DBD4 to: if (gc_env.cr[0] == 0) goto L_8000DBD4;
Translated lis r3 fn_8000DCD0@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000DCD0 >> 16) & 0xFFFF; // lis r3, fn_8000DCD0@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000DCD0@l']
Translated addi r3 r3 fn_8000DCD0@l to: ['gc_env.r[3] = (uint32_t)&fn_8000DCD0; // lis + addi fn_8000DCD0 (completing pattern)']
Translated bl fn_8000CDA4 to: fn_8000CDA4();
Translated b .L_8000DC50 to: goto L_8000DC50;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF8C@sda21(r0)']
Translated lwz r3 lbl_8001EF8C@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF8C); // lwz r3, lbl_8001EF8C@sda21(r0)']
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: li, operands: ['r5', '0x20']
Translated li r5 0x20 to: ['gc_env.r[5] = 0x20; // li r5, 0x20']
Translated bl memcpy to: memcpy();
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: li, operands: ['r4', '0x20']
Translated li r4 0x20 to: ['gc_env.r[4] = 0x20; // li r4, 0x20']
Translated bl DCInvalidateRange to: DCInvalidateRange();
Translated lis r4 fn_8000DC98@ha to: ['gc_env.r[4] = ((uint32_t)&fn_8000DC98 >> 16) & 0xFFFF; // lis r4, fn_8000DC98@ha']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r0', 'r4', 'fn_8000DC98@l']
Translated addi r0 r4 fn_8000DC98@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&fn_8000DC98 & 0xFFFF); // addi r0, r4, fn_8000DC98@l']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFCC@sda21(r0)']
Translated stw r0 lbl_8001EFCC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFCC, gc_env.r[0]); // stw r0, lbl_8001EFCC@sda21(r0)']
Translated bl fn_8000DC98 to: fn_8000DC98();
Translated b .L_8000DC50 to: goto L_8000DC50;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF8C@sda21(r0)']
Translated lwz r4 lbl_8001EF8C@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF8C); // lwz r4, lbl_8001EF8C@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r5', '0x20']
Translated li r5 0x20 to: ['gc_env.r[5] = 0x20; // li r5, 0x20']
Translated bl fn_800121EC to: fn_800121EC();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000DC3C to: if (gc_env.cr[0] == 0) goto L_8000DC3C;
Translated lis r3 fn_8000DCD0@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000DCD0 >> 16) & 0xFFFF; // lis r3, fn_8000DCD0@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000DCD0@l']
Translated addi r3 r3 fn_8000DCD0@l to: ['gc_env.r[3] = (uint32_t)&fn_8000DCD0; // lis + addi fn_8000DCD0 (completing pattern)']
Translated bl fn_8000CDA4 to: fn_8000CDA4();
Translated b .L_8000DC50 to: goto L_8000DC50;
Translated lis r4 fn_8000DC64@ha to: ['gc_env.r[4] = ((uint32_t)&fn_8000DC64 >> 16) & 0xFFFF; // lis r4, fn_8000DC64@ha']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r0', 'r4', 'fn_8000DC64@l']
Translated addi r0 r4 fn_8000DC64@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&fn_8000DC64 & 0xFFFF); // addi r0, r4, fn_8000DC64@l']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFCC@sda21(r0)']
Translated stw r0 lbl_8001EFCC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFCC, gc_env.r[0]); // stw r0, lbl_8001EFCC@sda21(r0)']
Translated bl fn_8000DC64 to: fn_8000DC64();
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 fn_8000DE88@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000DE88 >> 16) & 0xFFFF; // lis r3, fn_8000DE88@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r5', 'r3', 'fn_8000DE88@l']
Translated addi r5 r3 fn_8000DE88@l to: ['gc_env.r[5] = gc_env.r[3] + ((uint32_t)&fn_8000DE88 & 0xFFFF); // addi r5, r3, fn_8000DE88@l']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF8C@sda21(r0)']
Translated lwz r4 lbl_8001EF8C@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF8C); // lwz r4, lbl_8001EF8C@sda21(r0)']
Processing opcode: lbz, operands: ['r3', '0x8(r4)']
Translated lbz r3 0x8(r4) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 0x8); // lbz r3, 0x8(r4)']
Processing opcode: li, operands: ['r4', '0xa']
Translated li r4 0xa to: ['gc_env.r[4] = 0xa; // li r4, 0xa']
Translated bl fn_8000D07C to: fn_8000D07C();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 lbl_8001C9A0@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C9A0 >> 16) & 0xFFFF; // lis r3, lbl_8001C9A0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Translated lis r4 fn_8000DDE4@ha to: ['gc_env.r[4] = ((uint32_t)&fn_8000DDE4 >> 16) & 0xFFFF; // lis r4, fn_8000DDE4@ha']
Processing opcode: addi, operands: ['r6', 'r4', 'fn_8000DDE4@l']
Translated addi r6 r4 fn_8000DDE4@l to: ['gc_env.r[6] = (uint32_t)&fn_8000DDE4; // lis + addi fn_8000DDE4 (completing pattern)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001C9A0@l']
Translated addi r3 r3 lbl_8001C9A0@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&lbl_8001C9A0 & 0xFFFF); // addi r3, r3, lbl_8001C9A0@l']
Processing opcode: li, operands: ['r4', '0x20']
Translated li r4 0x20 to: ['gc_env.r[4] = 0x20; // li r4, 0x20']
Processing opcode: li, operands: ['r5', '0x420']
Translated li r5 0x420 to: ['gc_env.r[5] = 0x420; // li r5, 0x420']
Translated bl fn_8000C9A8 to: fn_8000C9A8();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmplwi r3 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x10) ? 0 : ((uint32_t)gc_env.r[3] < 0x10 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated bne .L_8000DD10 to: if (gc_env.cr[0] != 0) goto L_8000DD10;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4568']
Translated addi r3 r3 0x4568 to: ['gc_env.r[3] += 17768; // addi r3, r3, 0x4568']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated bl fn_8000EEC0 to: fn_8000EEC0();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl fn_8000D44C to: fn_8000D44C();
Translated b .L_8000DDD0 to: goto L_8000DDD0;
Translated rlwinm. r0 r3 0 30 30 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x2; // rlwinm r0, r3, 0, 30, 30', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000DD40 to: if (gc_env.cr[0] == 0) goto L_8000DD40;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4567']
Translated addi r3 r3 0x4567 to: ['gc_env.r[3] += 17767; // addi r3, r3, 0x4567']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated lis r3 fn_8000D44C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D44C >> 16) & 0xFFFF; // lis r3, fn_8000D44C@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000D44C@l']
Translated addi r3 r3 fn_8000D44C@l to: ['gc_env.r[3] = (uint32_t)&fn_8000D44C; // lis + addi fn_8000D44C (completing pattern)']
Translated bl fn_8000CDA4 to: fn_8000CDA4();
Translated b .L_8000DDD0 to: goto L_8000DDD0;
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: stw, operands: ['r4', 'lbl_8001EFBC@sda21(r0)']
Translated stw r4 lbl_8001EFBC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFBC, gc_env.r[4]); // stw r4, lbl_8001EFBC@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated lwz r0 lbl_8001EFA8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA8); // lwz r0, lbl_8001EFA8@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000DDB8 to: if (gc_env.cr[0] == 0) goto L_8000DDB8;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: lwz, operands: ['r31', 'lbl_8001EF88@sda21(r0)']
Translated lwz r31 lbl_8001EF88@sda21(r0) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r31, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFB0@sda21(r0)']
Translated stw r0 lbl_8001EFB0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB0, gc_env.r[0]); // stw r0, lbl_8001EFB0@sda21(r0)']
Translated lis r3 lbl_8001CA20@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CA20 >> 16) & 0xFFFF; // lis r3, lbl_8001CA20@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001CA20@l']
Translated addi r3 r3 lbl_8001CA20@l to: ['gc_env.r[3] = (uint32_t)&lbl_8001CA20; // lis + addi lbl_8001CA20 (completing pattern)']
Processing opcode: stw, operands: ['r4', 'lbl_8001EFA8@sda21(r0)']
Translated stw r4 lbl_8001EFA8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFA8, gc_env.r[4]); // stw r4, lbl_8001EFA8@sda21(r0)']
Processing opcode: li, operands: ['r0', '0xa']
Translated li r0 0xa to: ['gc_env.r[0] = 0xa; // li r0, 0xa']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated stw r3 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[3]); // stw r3, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: lwz, operands: ['r12', '0x28(r31)']
Translated lwz r12 0x28(r31) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x28); // lwz r12, 0x28(r31)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000DD94 to: if (gc_env.cr[0] == 0) goto L_8000DD94;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: li, operands: ['r3', '-0x3']
Translated li r3 -0x3 to: ['gc_env.r[3] = -0x3; // li r3, -0x3']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: lwz, operands: ['r12', 'lbl_8001EFAC@sda21(r0)']
Translated lwz r12 lbl_8001EFAC@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFAC); // lwz r12, lbl_8001EFAC@sda21(r0)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000DDB0 to: if (gc_env.cr[0] == 0) goto L_8000DDB0;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000DDD0 to: if (gc_env.cr[0] != 0) goto L_8000DDD0;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x6']
Translated li r0 0x6 to: ['gc_env.r[0] = 0x6; // li r0, 0x6']
Processing opcode: stw, operands: ['r0', '0xc(r3)']
Translated stw r0 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[0]); // stw r0, 0xC(r3)']
Translated bl fn_8000E134 to: fn_8000E134();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmplwi r3 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x10) ? 0 : ((uint32_t)gc_env.r[3] < 0x10 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bne .L_8000DE20 to: if (gc_env.cr[0] != 0) goto L_8000DE20;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4568']
Translated addi r3 r3 0x4568 to: ['gc_env.r[3] += 17768; // addi r3, r3, 0x4568']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated bl fn_8000EEC0 to: fn_8000EEC0();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl fn_8000D44C to: fn_8000D44C();
Translated b .L_8000DE78 to: goto L_8000DE78;
Translated clrlwi. r0 r3 31 to: ['gc_env.r[0] = gc_env.r[3] & 0x1; // clrlwi r0, r3, 31']
Translated beq .L_8000DE6C to: if (gc_env.cr[0] == 0) goto L_8000DE6C;
Translated lis r3 fn_8000D378@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D378 >> 16) & 0xFFFF; // lis r3, fn_8000D378@ha']
Processing opcode: lwz, operands: ['r7', 'lbl_8001EF90@sda21(r0)']
Translated lwz r7 lbl_8001EF90@sda21(r0) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF90); // lwz r7, lbl_8001EF90@sda21(r0)']
Processing opcode: addi, operands: ['r0', 'r3', 'fn_8000D378@l']
Translated addi r0 r3 fn_8000D378@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&fn_8000D378 & 0xFFFF); // addi r0, r3, fn_8000D378@l']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFCC@sda21(r0)']
Translated stw r0 lbl_8001EFCC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFCC, gc_env.r[0]); // stw r0, lbl_8001EFCC@sda21(r0)']
Translated lis r3 lbl_8001C9A0@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C9A0 >> 16) & 0xFFFF; // lis r3, lbl_8001C9A0@ha']
Processing opcode: addi, operands: ['r5', 'r3', 'lbl_8001C9A0@l']
Translated addi r5 r3 lbl_8001C9A0@l to: ['gc_env.r[5] = (uint32_t)&lbl_8001C9A0; // lis + addi lbl_8001C9A0 (completing pattern)']
Processing opcode: stw, operands: ['r4', 'lbl_8001EFBC@sda21(r0)']
Translated stw r4 lbl_8001EFBC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFBC, gc_env.r[4]); // stw r4, lbl_8001EFBC@sda21(r0)']
Translated lis r3 fn_8000D3CC@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D3CC >> 16) & 0xFFFF; // lis r3, fn_8000D3CC@ha']
Processing opcode: lwz, operands: ['r4', '0x8(r5)']
Translated lwz r4 0x8(r5) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x8); // lwz r4, 0x8(r5)']
Processing opcode: addi, operands: ['r6', 'r3', 'fn_8000D3CC@l']
Translated addi r6 r3 fn_8000D3CC@l to: ['gc_env.r[6] = gc_env.r[3] + ((uint32_t)&fn_8000D3CC & 0xFFFF); // addi r6, r3, fn_8000D3CC@l']
Processing opcode: lwz, operands: ['r3', '0x38(r7)']
Translated lwz r3 0x38(r7) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x38); // lwz r3, 0x38(r7)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1f']
Translated addi r0 r4 0x1f to: ['gc_env.r[0] = gc_env.r[4] + 31; // addi r0, r4, 0x1f']
Processing opcode: lwz, operands: ['r5', '0x4(r5)']
Translated lwz r5 0x4(r5) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x4); // lwz r5, 0x4(r5)']
Translated clrrwi r4 r0 5 to: gc_env.r[4] = gc_env.r[0] & ~((1ULL << 5) - 1); // Clear rightmost 5 bits
Translated bl fn_8000C9A8 to: fn_8000C9A8();
Translated b .L_8000DE78 to: goto L_8000DE78;
Translated lis r3 fn_8000D66C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D66C >> 16) & 0xFFFF; // lis r3, fn_8000D66C@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000D66C@l']
Translated addi r3 r3 fn_8000D66C@l to: ['gc_env.r[3] = (uint32_t)&fn_8000D66C; // lis + addi fn_8000D66C (completing pattern)']
Translated bl fn_8000CE30 to: fn_8000CE30();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmplwi r3 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x10) ? 0 : ((uint32_t)gc_env.r[3] < 0x10 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated bne .L_8000DEC8 to: if (gc_env.cr[0] != 0) goto L_8000DEC8;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4568']
Translated addi r3 r3 0x4568 to: ['gc_env.r[3] += 17768; // addi r3, r3, 0x4568']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated bl fn_8000EEC0 to: fn_8000EEC0();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl fn_8000D44C to: fn_8000D44C();
Translated b .L_8000DF70 to: goto L_8000DF70;
Translated clrlwi. r0 r3 31 to: ['gc_env.r[0] = gc_env.r[3] & 0x1; // clrlwi r0, r3, 31']
Translated beq .L_8000DF64 to: if (gc_env.cr[0] == 0) goto L_8000DF64;
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: stw, operands: ['r4', 'lbl_8001EFBC@sda21(r0)']
Translated stw r4 lbl_8001EFBC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFBC, gc_env.r[4]); // stw r4, lbl_8001EFBC@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated lwz r0 lbl_8001EFA8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA8); // lwz r0, lbl_8001EFA8@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000DF44 to: if (gc_env.cr[0] == 0) goto L_8000DF44;
Processing opcode: stw, operands: ['r4', 'lbl_8001EFB0@sda21(r0)']
Translated stw r4 lbl_8001EFB0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB0, gc_env.r[4]); // stw r4, lbl_8001EFB0@sda21(r0)']
Translated lis r3 lbl_8001CA20@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CA20 >> 16) & 0xFFFF; // lis r3, lbl_8001CA20@ha']
Processing opcode: lwz, operands: ['r31', 'lbl_8001EF88@sda21(r0)']
Translated lwz r31 lbl_8001EF88@sda21(r0) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r31, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001CA20@l']
Translated addi r3 r3 lbl_8001CA20@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&lbl_8001CA20 & 0xFFFF); // addi r3, r3, lbl_8001CA20@l']
Processing opcode: stw, operands: ['r4', 'lbl_8001EFA8@sda21(r0)']
Translated stw r4 lbl_8001EFA8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFA8, gc_env.r[4]); // stw r4, lbl_8001EFA8@sda21(r0)']
Processing opcode: li, operands: ['r0', '0xa']
Translated li r0 0xa to: ['gc_env.r[0] = 0xa; // li r0, 0xa']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated stw r3 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[3]); // stw r3, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: lwz, operands: ['r12', '0x28(r31)']
Translated lwz r12 0x28(r31) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x28); // lwz r12, 0x28(r31)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000DF20 to: if (gc_env.cr[0] == 0) goto L_8000DF20;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: li, operands: ['r3', '-0x3']
Translated li r3 -0x3 to: ['gc_env.r[3] = -0x3; // li r3, -0x3']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: lwz, operands: ['r12', 'lbl_8001EFAC@sda21(r0)']
Translated lwz r12 lbl_8001EFAC@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFAC); // lwz r12, lbl_8001EFAC@sda21(r0)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000DF3C to: if (gc_env.cr[0] == 0) goto L_8000DF3C;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000DF70 to: if (gc_env.cr[0] != 0) goto L_8000DF70;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', '0xc(r3)']
Translated stw r0 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[0]); // stw r0, 0xC(r3)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Translated bl fn_8000E488 to: fn_8000E488();
Translated b .L_8000DF70 to: goto L_8000DF70;
Translated lis r3 fn_8000D66C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D66C >> 16) & 0xFFFF; // lis r3, fn_8000D66C@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000D66C@l']
Translated addi r3 r3 fn_8000D66C@l to: ['gc_env.r[3] = (uint32_t)&fn_8000D66C; // lis + addi fn_8000D66C (completing pattern)']
Translated bl fn_8000CE30 to: fn_8000CE30();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_8000EEC0 to: fn_8000EEC0();
Translated lis r3 lbl_8001C9A0@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C9A0 >> 16) & 0xFFFF; // lis r3, lbl_8001C9A0@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001C9A0@l']
Translated addi r3 r3 lbl_8001C9A0@l to: ['gc_env.r[3] = (uint32_t)&lbl_8001C9A0; // lis + addi lbl_8001C9A0 (completing pattern)']
Processing opcode: li, operands: ['r4', '0x20']
Translated li r4 0x20 to: ['gc_env.r[4] = 0x20; // li r4, 0x20']
Translated bl DCInvalidateRange to: DCInvalidateRange();
Translated lis r4 fn_8000E094@ha to: ['gc_env.r[4] = ((uint32_t)&fn_8000E094 >> 16) & 0xFFFF; // lis r4, fn_8000E094@ha']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r0', 'r4', 'fn_8000E094@l']
Translated addi r0 r4 fn_8000E094@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&fn_8000E094 & 0xFFFF); // addi r0, r4, fn_8000E094@l']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFCC@sda21(r0)']
Translated stw r0 lbl_8001EFCC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFCC, gc_env.r[0]); // stw r0, lbl_8001EFCC@sda21(r0)']
Translated bl fn_8000E094 to: fn_8000E094();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 lbl_8001C9A0@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C9A0 >> 16) & 0xFFFF; // lis r3, lbl_8001C9A0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: addi, operands: ['r31', 'r3', 'lbl_8001C9A0@l']
Translated addi r31 r3 lbl_8001C9A0@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&lbl_8001C9A0 & 0xFFFF); // addi r31, r3, lbl_8001C9A0@l']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmpwi r0 0xd to: gc_env.cr[0] = (gc_env.r[0] == 0xd) ? 0 : (gc_env.r[0] < 0xd ? -1 : 1); // Compare with immediate
Translated beq .L_8000E010 to: if (gc_env.cr[0] == 0) goto L_8000E010;
Translated bge .L_8000E004 to: if (gc_env.cr[0] >= 0) goto L_8000E004;
Translated cmpwi r0 0x6 to: gc_env.cr[0] = (gc_env.r[0] == 0x6) ? 0 : (gc_env.r[0] < 0x6 ? -1 : 1); // Compare with immediate
Translated bge .L_8000E040 to: if (gc_env.cr[0] >= 0) goto L_8000E040;
Translated cmpwi r0 0x4 to: gc_env.cr[0] = (gc_env.r[0] == 0x4) ? 0 : (gc_env.r[0] < 0x4 ? -1 : 1); // Compare with immediate
Translated bge .L_8000E010 to: if (gc_env.cr[0] >= 0) goto L_8000E010;
Translated b .L_8000E040 to: goto L_8000E040;
Translated cmpwi r0 0xf to: gc_env.cr[0] = (gc_env.r[0] == 0xf) ? 0 : (gc_env.r[0] < 0xf ? -1 : 1); // Compare with immediate
Translated beq .L_8000E010 to: if (gc_env.cr[0] == 0) goto L_8000E010;
Translated b .L_8000E040 to: goto L_8000E040;
Translated bl fn_8000F438 to: fn_8000F438();
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r0', 'r31', '0x80']
Translated addi r0 r31 0x80 to: ['gc_env.r[0] = gc_env.r[31] + 128; // addi r0, r31, 0x80']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF88@sda21(r0)']
Translated stw r0 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[0]); // stw r0, lbl_8001EF88@sda21(r0)']
Processing opcode: lwz, operands: ['r12', '0x28(r4)']
Translated lwz r12 0x28(r4) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x28); // lwz r12, 0x28(r4)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E038 to: if (gc_env.cr[0] == 0) goto L_8000E038;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: li, operands: ['r3', '-0x4']
Translated li r3 -0x4 to: ['gc_env.r[3] = -0x4; // li r3, -0x4']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Translated b .L_8000E080 to: goto L_8000E080;
Translated bl fn_8000EEC0 to: fn_8000EEC0();
Processing opcode: addi, operands: ['r3', 'r31', '0xb0']
Translated addi r3 r31 0xb0 to: ['gc_env.r[3] = gc_env.r[31] + 176; // addi r3, r31, 0xb0']
Translated bl fn_80005FC4 to: fn_80005FC4();
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r0', '0xf8(r3)']
Translated lwz r0 0xf8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xF8); // lwz r0, 0xF8(r3)']
Translated lis r4 0x1062 to: ['gc_env.r[4] = 4194 << 16; // lis r4, 0x1062']
Translated lis r3 fn_8000DF84@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000DF84 >> 16) & 0xFFFF; // lis r3, fn_8000DF84@ha']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Processing opcode: addi, operands: ['r4', 'r4', '0x4dd3']
Translated addi r4 r4 0x4dd3 to: ['gc_env.r[4] += 19923; // addi r4, r4, 0x4dd3']
Translated mulhwu r0 r4 r0 to: ['gc_env.r[0] = (uint32_t)(((uint64_t)gc_env.r[4] * (uint64_t)gc_env.r[0]) >> 32); // mulhwu r0, r4, r0']
Translated srwi r0 r0 6 to: ['gc_env.r[0] = gc_env.r[0] >> 6; // srwi r0, r0, 6']
Processing opcode: mulli, operands: ['r6', 'r0', '0x47e']
Translated mulli r6 r0 0x47e to: ['gc_env.r[6] = gc_env.r[0] * 1150; // mulli r6, r0, 1150']
Processing opcode: addi, operands: ['r7', 'r3', 'fn_8000DF84@l']
Translated addi r7 r3 fn_8000DF84@l to: ['gc_env.r[7] = gc_env.r[3] + ((uint32_t)&fn_8000DF84 & 0xFFFF); // addi r7, r3, fn_8000DF84@l']
Processing opcode: addi, operands: ['r3', 'r31', '0xb0']
Translated addi r3 r31 0xb0 to: ['gc_env.r[3] = gc_env.r[31] + 176; // addi r3, r31, 0xb0']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80006220 to: fn_80006220();
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 lbl_8001C9A0@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C9A0 >> 16) & 0xFFFF; // lis r3, lbl_8001C9A0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Translated lis r4 fn_8000E0C4@ha to: ['gc_env.r[4] = ((uint32_t)&fn_8000E0C4 >> 16) & 0xFFFF; // lis r4, fn_8000E0C4@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001C9A0@l']
Translated addi r3 r3 lbl_8001C9A0@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&lbl_8001C9A0 & 0xFFFF); // addi r3, r3, lbl_8001C9A0@l']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: addi, operands: ['r4', 'r4', 'fn_8000E0C4@l']
Translated addi r4 r4 fn_8000E0C4@l to: ['gc_env.r[4] = gc_env.r[4] + ((uint32_t)&fn_8000E0C4 & 0xFFFF); // addi r4, r4, fn_8000E0C4@l']
Translated bl fn_8000CD00 to: fn_8000CD00();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmplwi r3 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x10) ? 0 : ((uint32_t)gc_env.r[3] < 0x10 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bne .L_8000E100 to: if (gc_env.cr[0] != 0) goto L_8000E100;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4568']
Translated addi r3 r3 0x4568 to: ['gc_env.r[3] += 17768; // addi r3, r3, 0x4568']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated bl fn_8000EEC0 to: fn_8000EEC0();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl fn_8000D44C to: fn_8000D44C();
Translated b .L_8000E124 to: goto L_8000E124;
Translated clrlwi. r0 r3 31 to: ['gc_env.r[0] = gc_env.r[3] & 0x1; // clrlwi r0, r3, 31']
Translated beq .L_8000E118 to: if (gc_env.cr[0] == 0) goto L_8000E118;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFBC@sda21(r0)']
Translated stw r0 lbl_8001EFBC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFBC, gc_env.r[0]); // stw r0, lbl_8001EFBC@sda21(r0)']
Translated bl fn_8000DB80 to: fn_8000DB80();
Translated b .L_8000E124 to: goto L_8000E124;
Translated lis r3 fn_8000D66C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D66C >> 16) & 0xFFFF; // lis r3, fn_8000D66C@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000D66C@l']
Translated addi r3 r3 fn_8000D66C@l to: ['gc_env.r[3] = (uint32_t)&fn_8000D66C; // lis + addi fn_8000D66C (completing pattern)']
Translated bl fn_8000CE30 to: fn_8000CE30();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 fn_8000E15C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E15C >> 16) & 0xFFFF; // lis r3, fn_8000E15C@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000E15C@l']
Translated addi r3 r3 fn_8000E15C@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&fn_8000E15C & 0xFFFF); // addi r3, r3, fn_8000E15C@l']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_8000CCD4 to: fn_8000CCD4();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated lis r4 lbl_8001C9A0@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001C9A0 >> 16) & 0xFFFF; // lis r4, lbl_8001C9A0@ha']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: addi, operands: ['r31', 'r4', 'lbl_8001C9A0@l']
Translated addi r31 r4 lbl_8001C9A0@l to: ['gc_env.r[31] = gc_env.r[4] + ((uint32_t)&lbl_8001C9A0 & 0xFFFF); // addi r31, r4, lbl_8001C9A0@l']
Processing opcode: stw, operands: ['r0', '0x6004(r3)']
Translated stw r0 0x6004(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x6004, gc_env.r[0]); // stw r0, 0x6004(r3)']
Processing opcode: li, operands: ['r0', '0x3']
Translated li r0 0x3 to: ['gc_env.r[0] = 0x3; // li r0, 0x3']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r0', '0xc(r3)']
Translated stw r0 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[0]); // stw r0, 0xC(r3)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmpwi r0 0xd to: gc_env.cr[0] = (gc_env.r[0] == 0xd) ? 0 : (gc_env.r[0] < 0xd ? -1 : 1); // Compare with immediate
Translated beq .L_8000E1BC to: if (gc_env.cr[0] == 0) goto L_8000E1BC;
Translated bge .L_8000E1B0 to: if (gc_env.cr[0] >= 0) goto L_8000E1B0;
Translated cmpwi r0 0x6 to: gc_env.cr[0] = (gc_env.r[0] == 0x6) ? 0 : (gc_env.r[0] < 0x6 ? -1 : 1); // Compare with immediate
Translated bge .L_8000E1EC to: if (gc_env.cr[0] >= 0) goto L_8000E1EC;
Translated cmpwi r0 0x4 to: gc_env.cr[0] = (gc_env.r[0] == 0x4) ? 0 : (gc_env.r[0] < 0x4 ? -1 : 1); // Compare with immediate
Translated bge .L_8000E1BC to: if (gc_env.cr[0] >= 0) goto L_8000E1BC;
Translated b .L_8000E1EC to: goto L_8000E1EC;
Translated cmpwi r0 0xf to: gc_env.cr[0] = (gc_env.r[0] == 0xf) ? 0 : (gc_env.r[0] < 0xf ? -1 : 1); // Compare with immediate
Translated beq .L_8000E1BC to: if (gc_env.cr[0] == 0) goto L_8000E1BC;
Translated b .L_8000E1EC to: goto L_8000E1EC;
Translated bl fn_8000F438 to: fn_8000F438();
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r0', 'r31', '0x80']
Translated addi r0 r31 0x80 to: ['gc_env.r[0] = gc_env.r[31] + 128; // addi r0, r31, 0x80']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF88@sda21(r0)']
Translated stw r0 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[0]); // stw r0, lbl_8001EF88@sda21(r0)']
Processing opcode: lwz, operands: ['r12', '0x28(r4)']
Translated lwz r12 0x28(r4) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x28); // lwz r12, 0x28(r4)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E1E4 to: if (gc_env.cr[0] == 0) goto L_8000E1E4;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: li, operands: ['r3', '-0x4']
Translated li r3 -0x4 to: ['gc_env.r[3] = -0x4; // li r3, -0x4']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Translated b .L_8000E22C to: goto L_8000E22C;
Translated bl fn_8000EEC0 to: fn_8000EEC0();
Processing opcode: addi, operands: ['r3', 'r31', '0xb0']
Translated addi r3 r31 0xb0 to: ['gc_env.r[3] = gc_env.r[31] + 176; // addi r3, r31, 0xb0']
Translated bl fn_80005FC4 to: fn_80005FC4();
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r0', '0xf8(r3)']
Translated lwz r0 0xf8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xF8); // lwz r0, 0xF8(r3)']
Translated lis r4 0x1062 to: ['gc_env.r[4] = 4194 << 16; // lis r4, 0x1062']
Translated lis r3 fn_8000DF84@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000DF84 >> 16) & 0xFFFF; // lis r3, fn_8000DF84@ha']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Processing opcode: addi, operands: ['r4', 'r4', '0x4dd3']
Translated addi r4 r4 0x4dd3 to: ['gc_env.r[4] += 19923; // addi r4, r4, 0x4dd3']
Translated mulhwu r0 r4 r0 to: ['gc_env.r[0] = (uint32_t)(((uint64_t)gc_env.r[4] * (uint64_t)gc_env.r[0]) >> 32); // mulhwu r0, r4, r0']
Translated srwi r0 r0 6 to: ['gc_env.r[0] = gc_env.r[0] >> 6; // srwi r0, r0, 6']
Processing opcode: mulli, operands: ['r6', 'r0', '0x47e']
Translated mulli r6 r0 0x47e to: ['gc_env.r[6] = gc_env.r[0] * 1150; // mulli r6, r0, 1150']
Processing opcode: addi, operands: ['r7', 'r3', 'fn_8000DF84@l']
Translated addi r7 r3 fn_8000DF84@l to: ['gc_env.r[7] = gc_env.r[3] + ((uint32_t)&fn_8000DF84 & 0xFFFF); // addi r7, r3, fn_8000DF84@l']
Processing opcode: addi, operands: ['r3', 'r31', '0xb0']
Translated addi r3 r31 0xb0 to: ['gc_env.r[3] = gc_env.r[31] + 176; // addi r3, r31, 0xb0']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80006220 to: fn_80006220();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 lbl_8001C9A0@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001C9A0 >> 16) & 0xFFFF; // lis r3, lbl_8001C9A0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: addi, operands: ['r31', 'r3', 'lbl_8001C9A0@l']
Translated addi r31 r3 lbl_8001C9A0@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&lbl_8001C9A0 & 0xFFFF); // addi r31, r3, lbl_8001C9A0@l']
Translated bl fn_8000F578 to: fn_8000F578();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000E270 to: if (gc_env.cr[0] != 0) goto L_8000E270;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF88@sda21(r0)']
Translated stw r0 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[0]); // stw r0, lbl_8001EF88@sda21(r0)']
Translated b .L_8000E474 to: goto L_8000E474;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF94@sda21(r0)']
Translated lwz r0 lbl_8001EF94@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF94); // lwz r0, lbl_8001EF94@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000E290 to: if (gc_env.cr[0] == 0) goto L_8000E290;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF98@sda21(r0)']
Translated stw r3 lbl_8001EF98@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF98, gc_env.r[3]); // stw r3, lbl_8001EF98@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF88@sda21(r0)']
Translated stw r0 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[0]); // stw r0, lbl_8001EF88@sda21(r0)']
Translated b .L_8000E474 to: goto L_8000E474;
Translated bl fn_8000F4D8 to: fn_8000F4D8();
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA0@sda21(r0)']
Translated lwz r0 lbl_8001EFA0@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA0); // lwz r0, lbl_8001EFA0@sda21(r0)']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated stw r3 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[3]); // stw r3, lbl_8001EF88@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000E2DC to: if (gc_env.cr[0] == 0) goto L_8000E2DC;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r4', '-0x1']
Translated li r4 -0x1 to: ['gc_env.r[4] = -0x1; // li r4, -0x1']
Processing opcode: addi, operands: ['r0', 'r31', '0x80']
Translated addi r0 r31 0x80 to: ['gc_env.r[0] = gc_env.r[31] + 128; // addi r0, r31, 0x80']
Processing opcode: stw, operands: ['r4', '0xc(r3)']
Translated stw r4 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[4]); // stw r4, 0xC(r3)']
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF88@sda21(r0)']
Translated stw r0 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[0]); // stw r0, lbl_8001EF88@sda21(r0)']
Processing opcode: lwz, operands: ['r12', '0x28(r4)']
Translated lwz r12 0x28(r4) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x28); // lwz r12, 0x28(r4)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E2D4 to: if (gc_env.cr[0] == 0) goto L_8000E2D4;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: li, operands: ['r3', '-0x1']
Translated li r3 -0x1 to: ['gc_env.r[3] = -0x1; // li r3, -0x1']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Translated b .L_8000E474 to: goto L_8000E474;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x8(r4)']
Translated lwz r0 0x8(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x8); // lwz r0, 0x8(r4)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated stw r0 lbl_8001EFA4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFA4, gc_env.r[0]); // stw r0, lbl_8001EFA4@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFB0@sda21(r0)']
Translated lwz r0 lbl_8001EFB0@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFB0); // lwz r0, lbl_8001EFB0@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E464 to: if (gc_env.cr[0] == 0) goto L_8000E464;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFB0@sda21(r0)']
Translated lwz r0 lbl_8001EFB0@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFB0); // lwz r0, lbl_8001EFB0@sda21(r0)']
Translated cmplwi r0 0x7 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x7) ? 0 : ((uint32_t)gc_env.r[0] < 0x7 ? -1 : 1); // Logical compare with immediate
Translated bgt .L_8000E458 to: ['if (gc_env.cr[0] & 0x4) goto L_8000E458; // bgt .L_8000E458']
Translated lis r3 jumptable_8001B254@ha to: ['gc_env.r[3] = ((uint32_t)&jumptable_8001B254 >> 16) & 0xFFFF; // lis r3, jumptable_8001B254@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'jumptable_8001B254@l']
Translated addi r3 r3 jumptable_8001B254@l to: ['gc_env.r[3] = (uint32_t)&jumptable_8001B254; // lis + addi jumptable_8001B254 (completing pattern)']
Translated slwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] << 2; // slwi r0, r0, 2']
Translated lwzx r0 r3 r0 to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + gc_env.r[0]); // lwzx r0, r3, r0']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bctr  to: ['return gc_env.ctr; // bctr']
Processing opcode: li, operands: ['r0', '0x6']
Translated li r0 0x6 to: ['gc_env.r[0] = 0x6; // li r0, 0x6']
Translated lis r3 fn_8000E15C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E15C >> 16) & 0xFFFF; // lis r3, fn_8000E15C@ha']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000E15C@l']
Translated addi r3 r3 fn_8000E15C@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&fn_8000E15C & 0xFFFF); // addi r3, r3, fn_8000E15C@l']
Translated bl fn_8000CCD4 to: fn_8000CCD4();
Translated b .L_8000E458 to: goto L_8000E458;
Processing opcode: li, operands: ['r0', '0xb']
Translated li r0 0xb to: ['gc_env.r[0] = 0xb; // li r0, 0xb']
Translated lis r3 fn_8000E15C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E15C >> 16) & 0xFFFF; // lis r3, fn_8000E15C@ha']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000E15C@l']
Translated addi r3 r3 fn_8000E15C@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&fn_8000E15C & 0xFFFF); // addi r3, r3, fn_8000E15C@l']
Translated bl fn_8000CCD4 to: fn_8000CCD4();
Translated b .L_8000E458 to: goto L_8000E458;
Processing opcode: li, operands: ['r0', '0x4']
Translated li r0 0x4 to: ['gc_env.r[0] = 0x4; // li r0, 0x4']
Translated lis r3 fn_8000E15C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E15C >> 16) & 0xFFFF; // lis r3, fn_8000E15C@ha']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000E15C@l']
Translated addi r3 r3 fn_8000E15C@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&fn_8000E15C & 0xFFFF); // addi r3, r3, fn_8000E15C@l']
Translated bl fn_8000CCD4 to: fn_8000CCD4();
Translated b .L_8000E458 to: goto L_8000E458;
Processing opcode: li, operands: ['r0', '0x7']
Translated li r0 0x7 to: ['gc_env.r[0] = 0x7; // li r0, 0x7']
Translated lis r3 fn_8000E15C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E15C >> 16) & 0xFFFF; // lis r3, fn_8000E15C@ha']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000E15C@l']
Translated addi r3 r3 fn_8000E15C@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&fn_8000E15C & 0xFFFF); // addi r3, r3, fn_8000E15C@l']
Translated bl fn_8000CCD4 to: fn_8000CCD4();
Translated b .L_8000E458 to: goto L_8000E458;
Processing opcode: li, operands: ['r0', '0x5']
Translated li r0 0x5 to: ['gc_env.r[0] = 0x5; // li r0, 0x5']
Translated lis r3 fn_8000E15C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E15C >> 16) & 0xFFFF; // lis r3, fn_8000E15C@ha']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000E15C@l']
Translated addi r3 r3 fn_8000E15C@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&fn_8000E15C & 0xFFFF); // addi r3, r3, fn_8000E15C@l']
Translated bl fn_8000CCD4 to: fn_8000CCD4();
Translated b .L_8000E458 to: goto L_8000E458;
Processing opcode: li, operands: ['r0', '0x3']
Translated li r0 0x3 to: ['gc_env.r[0] = 0x3; // li r0, 0x3']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmpwi r0 0xd to: gc_env.cr[0] = (gc_env.r[0] == 0xd) ? 0 : (gc_env.r[0] < 0xd ? -1 : 1); // Compare with immediate
Translated beq .L_8000E3C8 to: if (gc_env.cr[0] == 0) goto L_8000E3C8;
Translated bge .L_8000E3BC to: if (gc_env.cr[0] >= 0) goto L_8000E3BC;
Translated cmpwi r0 0x6 to: gc_env.cr[0] = (gc_env.r[0] == 0x6) ? 0 : (gc_env.r[0] < 0x6 ? -1 : 1); // Compare with immediate
Translated bge .L_8000E3F8 to: if (gc_env.cr[0] >= 0) goto L_8000E3F8;
Translated cmpwi r0 0x4 to: gc_env.cr[0] = (gc_env.r[0] == 0x4) ? 0 : (gc_env.r[0] < 0x4 ? -1 : 1); // Compare with immediate
Translated bge .L_8000E3C8 to: if (gc_env.cr[0] >= 0) goto L_8000E3C8;
Translated b .L_8000E3F8 to: goto L_8000E3F8;
Translated cmpwi r0 0xf to: gc_env.cr[0] = (gc_env.r[0] == 0xf) ? 0 : (gc_env.r[0] < 0xf ? -1 : 1); // Compare with immediate
Translated beq .L_8000E3C8 to: if (gc_env.cr[0] == 0) goto L_8000E3C8;
Translated b .L_8000E3F8 to: goto L_8000E3F8;
Translated bl fn_8000F438 to: fn_8000F438();
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r0', 'r31', '0x80']
Translated addi r0 r31 0x80 to: ['gc_env.r[0] = gc_env.r[31] + 128; // addi r0, r31, 0x80']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF88@sda21(r0)']
Translated stw r0 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[0]); // stw r0, lbl_8001EF88@sda21(r0)']
Processing opcode: lwz, operands: ['r12', '0x28(r4)']
Translated lwz r12 0x28(r4) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x28); // lwz r12, 0x28(r4)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E3F0 to: if (gc_env.cr[0] == 0) goto L_8000E3F0;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: li, operands: ['r3', '-0x4']
Translated li r3 -0x4 to: ['gc_env.r[3] = -0x4; // li r3, -0x4']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Translated b .L_8000E458 to: goto L_8000E458;
Translated bl fn_8000EEC0 to: fn_8000EEC0();
Processing opcode: addi, operands: ['r3', 'r31', '0xb0']
Translated addi r3 r31 0xb0 to: ['gc_env.r[3] = gc_env.r[31] + 176; // addi r3, r31, 0xb0']
Translated bl fn_80005FC4 to: fn_80005FC4();
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r0', '0xf8(r3)']
Translated lwz r0 0xf8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xF8); // lwz r0, 0xF8(r3)']
Translated lis r4 0x1062 to: ['gc_env.r[4] = 4194 << 16; // lis r4, 0x1062']
Translated lis r3 fn_8000DF84@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000DF84 >> 16) & 0xFFFF; // lis r3, fn_8000DF84@ha']
Translated srwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] >> 2; // srwi r0, r0, 2']
Processing opcode: addi, operands: ['r4', 'r4', '0x4dd3']
Translated addi r4 r4 0x4dd3 to: ['gc_env.r[4] += 19923; // addi r4, r4, 0x4dd3']
Translated mulhwu r0 r4 r0 to: ['gc_env.r[0] = (uint32_t)(((uint64_t)gc_env.r[4] * (uint64_t)gc_env.r[0]) >> 32); // mulhwu r0, r4, r0']
Translated srwi r0 r0 6 to: ['gc_env.r[0] = gc_env.r[0] >> 6; // srwi r0, r0, 6']
Processing opcode: mulli, operands: ['r6', 'r0', '0x47e']
Translated mulli r6 r0 0x47e to: ['gc_env.r[6] = gc_env.r[0] * 1150; // mulli r6, r0, 1150']
Processing opcode: addi, operands: ['r7', 'r3', 'fn_8000DF84@l']
Translated addi r7 r3 fn_8000DF84@l to: ['gc_env.r[7] = gc_env.r[3] + ((uint32_t)&fn_8000DF84 & 0xFFFF); // addi r7, r3, fn_8000DF84@l']
Processing opcode: addi, operands: ['r3', 'r31', '0xb0']
Translated addi r3 r31 0xb0 to: ['gc_env.r[3] = gc_env.r[31] + 176; // addi r3, r31, 0xb0']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80006220 to: fn_80006220();
Translated b .L_8000E458 to: goto L_8000E458;
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EFB4@sda21(r0)']
Translated lwz r3 lbl_8001EFB4@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFB4); // lwz r3, lbl_8001EFB4@sda21(r0)']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated lis r3 fn_8000D44C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D44C >> 16) & 0xFFFF; // lis r3, fn_8000D44C@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000D44C@l']
Translated addi r3 r3 fn_8000D44C@l to: ['gc_env.r[3] = (uint32_t)&fn_8000D44C; // lis + addi fn_8000D44C (completing pattern)']
Translated bl fn_8000CDA4 to: fn_8000CDA4();
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFB0@sda21(r0)']
Translated stw r0 lbl_8001EFB0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB0, gc_env.r[0]); // stw r0, lbl_8001EFB0@sda21(r0)']
Translated b .L_8000E474 to: goto L_8000E474;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Translated bl fn_8000E488 to: fn_8000E488();
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r4 fn_8000E488@ha to: ['gc_env.r[4] = ((uint32_t)&fn_8000E488 >> 16) & 0xFFFF; // lis r4, fn_8000E488@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r0', 'r4', 'fn_8000E488@l']
Translated addi r0 r4 fn_8000E488@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&fn_8000E488 & 0xFFFF); // addi r0, r4, fn_8000E488@l']
Translated mr r7 r3 to: gc_env.r[7] = gc_env.r[3]; // Move register
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFCC@sda21(r0)']
Translated stw r0 lbl_8001EFCC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFCC, gc_env.r[0]); // stw r0, lbl_8001EFCC@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x8(r3)']
Translated lwz r0 0x8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r0, 0x8(r3)']
Translated cmplwi r0 0xf to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xf) ? 0 : ((uint32_t)gc_env.r[0] < 0xf ? -1 : 1); // Logical compare with immediate
Translated bgt .L_8000E738 to: ['if (gc_env.cr[0] & 0x4) goto L_8000E738; // bgt .L_8000E738']
Translated lis r3 jumptable_8001B274@ha to: ['gc_env.r[3] = ((uint32_t)&jumptable_8001B274 >> 16) & 0xFFFF; // lis r3, jumptable_8001B274@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'jumptable_8001B274@l']
Translated addi r3 r3 jumptable_8001B274@l to: ['gc_env.r[3] = (uint32_t)&jumptable_8001B274; // lis + addi jumptable_8001B274 (completing pattern)']
Translated slwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] << 2; // slwi r0, r0, 2']
Translated lwzx r0 r3 r0 to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + gc_env.r[0]); // lwzx r0, r3, r0']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bctr  to: ['return gc_env.ctr; // bctr']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r0', '0x6004(r3)']
Translated lwz r0 0x6004(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6004); // lwz r0, 0x6004(r3)']
Processing opcode: addi, operands: ['r5', 'r3', '0x6000']
Translated addi r5 r3 0x6000 to: ['gc_env.r[5] = gc_env.r[3] + 24576; // addi r5, r3, 0x6000']
Translated lis r3 fn_8000E748@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E748 >> 16) & 0xFFFF; // lis r3, fn_8000E748@ha']
Processing opcode: stw, operands: ['r0', '0x4(r5)']
Translated stw r0 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[0]); // stw r0, 0x4(r5)']
Processing opcode: li, operands: ['r0', '0x20']
Translated li r0 0x20 to: ['gc_env.r[0] = 0x20; // li r0, 0x20']
Processing opcode: addi, operands: ['r4', 'r3', 'fn_8000E748@l']
Translated addi r4 r3 fn_8000E748@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&fn_8000E748 & 0xFFFF); // addi r4, r3, fn_8000E748@l']
Processing opcode: stw, operands: ['r0', '0x1c(r7)']
Translated stw r0 0x1c(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r7)']
Processing opcode: lwz, operands: ['r3', '0x18(r7)']
Translated lwz r3 0x18(r7) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x18); // lwz r3, 0x18(r7)']
Translated bl fn_8000CD00 to: fn_8000CD00();
Translated b .L_8000E738 to: goto L_8000E738;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x6000']
Translated addi r3 r3 0x6000 to: ['gc_env.r[3] += 24576; // addi r3, r3, 0x6000']
Processing opcode: lwz, operands: ['r0', '0x4(r3)']
Translated lwz r0 0x4(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4); // lwz r0, 0x4(r3)']
Translated lis r4 0x8 to: ['gc_env.r[4] = 8 << 16; // lis r4, 0x8']
Processing opcode: stw, operands: ['r0', '0x4(r3)']
Translated stw r0 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[0]); // stw r0, 0x4(r3)']
Processing opcode: lwz, operands: ['r3', '0x20(r7)']
Translated lwz r3 0x20(r7) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x20); // lwz r3, 0x20(r7)']
Processing opcode: lwz, operands: ['r0', '0x14(r7)']
Translated lwz r0 0x14(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x14); // lwz r0, 0x14(r7)']
Processing opcode: subf, operands: ['r0', 'r3', 'r0']
Translated subf r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[3]; // subf r0, r3, r0']
Translated cmplw r0 r4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[4]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[4] ? -1 : 1); // Logical compare word
Translated ble .L_8000E520 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000E520; // ble .L_8000E520']
Translated b .L_8000E524 to: goto L_8000E524;
Translated mr r4 r0 to: gc_env.r[4] = gc_env.r[0]; // Move register
Processing opcode: stw, operands: ['r4', '0x1c(r7)']
Translated stw r4 0x1c(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7] + 0x1C, gc_env.r[4]); // stw r4, 0x1C(r7)']
Translated lis r3 fn_8000E748@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E748 >> 16) & 0xFFFF; // lis r3, fn_8000E748@ha']
Processing opcode: addi, operands: ['r6', 'r3', 'fn_8000E748@l']
Translated addi r6 r3 fn_8000E748@l to: ['gc_env.r[6] = (uint32_t)&fn_8000E748; // lis + addi fn_8000E748 (completing pattern)']
Processing opcode: lwz, operands: ['r5', '0x20(r7)']
Translated lwz r5 0x20(r7) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x20); // lwz r5, 0x20(r7)']
Processing opcode: lwz, operands: ['r3', '0x18(r7)']
Translated lwz r3 0x18(r7) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x18); // lwz r3, 0x18(r7)']
Processing opcode: lwz, operands: ['r0', '0x10(r7)']
Translated lwz r0 0x10(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x10); // lwz r0, 0x10(r7)']
Processing opcode: add, operands: ['r3', 'r3', 'r5']
Translated add r3 r3 r5 to: ['gc_env.r[3] = gc_env.r[3] + gc_env.r[5]; // add r3, r3, r5']
Processing opcode: lwz, operands: ['r4', '0x1c(r7)']
Translated lwz r4 0x1c(r7) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x1C); // lwz r4, 0x1C(r7)']
Processing opcode: add, operands: ['r5', 'r0', 'r5']
Translated add r5 r0 r5 to: ['gc_env.r[5] = gc_env.r[0] + gc_env.r[5]; // add r5, r0, r5']
Translated bl fn_8000C9A8 to: fn_8000C9A8();
Translated b .L_8000E738 to: goto L_8000E738;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r0', '0x6004(r3)']
Translated lwz r0 0x6004(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6004); // lwz r0, 0x6004(r3)']
Processing opcode: addi, operands: ['r5', 'r3', '0x6000']
Translated addi r5 r3 0x6000 to: ['gc_env.r[5] = gc_env.r[3] + 24576; // addi r5, r3, 0x6000']
Translated lis r3 fn_8000E748@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E748 >> 16) & 0xFFFF; // lis r3, fn_8000E748@ha']
Processing opcode: stw, operands: ['r0', '0x4(r5)']
Translated stw r0 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[0]); // stw r0, 0x4(r5)']
Processing opcode: addi, operands: ['r4', 'r3', 'fn_8000E748@l']
Translated addi r4 r3 fn_8000E748@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&fn_8000E748 & 0xFFFF); // addi r4, r3, fn_8000E748@l']
Processing opcode: lwz, operands: ['r3', '0x10(r7)']
Translated lwz r3 0x10(r7) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x10); // lwz r3, 0x10(r7)']
Translated bl fn_8000CC40 to: fn_8000CC40();
Translated b .L_8000E738 to: goto L_8000E738;
Translated lis r3 fn_8000E748@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E748 >> 16) & 0xFFFF; // lis r3, fn_8000E748@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000E748@l']
Translated addi r3 r3 fn_8000E748@l to: ['gc_env.r[3] = (uint32_t)&fn_8000E748; // lis + addi fn_8000E748 (completing pattern)']
Translated bl fn_8000CDA4 to: fn_8000CDA4();
Translated b .L_8000E738 to: goto L_8000E738;
Translated lis r3 fn_8000E748@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E748 >> 16) & 0xFFFF; // lis r3, fn_8000E748@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000E748@l']
Translated addi r3 r3 fn_8000E748@l to: ['gc_env.r[3] = (uint32_t)&fn_8000E748; // lis + addi fn_8000E748 (completing pattern)']
Translated bl fn_8000CDA4 to: fn_8000CDA4();
Translated b .L_8000E738 to: goto L_8000E738;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x6000']
Translated addi r3 r3 0x6000 to: ['gc_env.r[3] += 24576; // addi r3, r3, 0x6000']
Processing opcode: lwz, operands: ['r0', '0x4(r3)']
Translated lwz r0 0x4(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4); // lwz r0, 0x4(r3)']
Processing opcode: stw, operands: ['r0', '0x4(r3)']
Translated stw r0 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[0]); // stw r0, 0x4(r3)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF9C@sda21(r0)']
Translated lwz r0 lbl_8001EF9C@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF9C); // lwz r0, lbl_8001EF9C@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000E5D0 to: if (gc_env.cr[0] == 0) goto L_8000E5D0;
Processing opcode: lwz, operands: ['r5', 'lbl_8001EF88@sda21(r0)']
Translated lwz r5 lbl_8001EF88@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r5, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated lis r3 fn_8000E748@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E748 >> 16) & 0xFFFF; // lis r3, fn_8000E748@ha']
Processing opcode: stw, operands: ['r0', '0x1c(r5)']
Translated stw r0 0x1c(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r5)']
Processing opcode: addi, operands: ['r4', 'r3', 'fn_8000E748@l']
Translated addi r4 r3 fn_8000E748@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&fn_8000E748 & 0xFFFF); // addi r4, r3, fn_8000E748@l']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl fn_8000CFF0 to: fn_8000CFF0();
Translated b .L_8000E738 to: goto L_8000E738;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated lis r3 fn_8000E748@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E748 >> 16) & 0xFFFF; // lis r3, fn_8000E748@ha']
Processing opcode: stw, operands: ['r0', '0x1c(r4)']
Translated stw r0 0x1c(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r4)']
Processing opcode: addi, operands: ['r6', 'r3', 'fn_8000E748@l']
Translated addi r6 r3 fn_8000E748@l to: ['gc_env.r[6] = gc_env.r[3] + ((uint32_t)&fn_8000E748 & 0xFFFF); // addi r6, r3, fn_8000E748@l']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r4', '0x14(r7)']
Translated lwz r4 0x14(r7) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x14); // lwz r4, 0x14(r7)']
Processing opcode: lwz, operands: ['r5', '0x10(r7)']
Translated lwz r5 0x10(r7) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x10); // lwz r5, 0x10(r7)']
Translated bl fn_8000CF58 to: fn_8000CF58();
Translated b .L_8000E738 to: goto L_8000E738;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r0', '0x6004(r3)']
Translated lwz r0 0x6004(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6004); // lwz r0, 0x6004(r3)']
Processing opcode: addi, operands: ['r4', 'r3', '0x6000']
Translated addi r4 r3 0x6000 to: ['gc_env.r[4] = gc_env.r[3] + 24576; // addi r4, r3, 0x6000']
Translated lis r3 fn_8000E748@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E748 >> 16) & 0xFFFF; // lis r3, fn_8000E748@ha']
Processing opcode: stw, operands: ['r0', '0x4(r4)']
Translated stw r0 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[0]); // stw r0, 0x4(r4)']
Processing opcode: addi, operands: ['r6', 'r3', 'fn_8000E748@l']
Translated addi r6 r3 fn_8000E748@l to: ['gc_env.r[6] = gc_env.r[3] + ((uint32_t)&fn_8000E748 & 0xFFFF); // addi r6, r3, fn_8000E748@l']
Translated lis r3 0x1 to: ['gc_env.r[3] = 1 << 16; // lis r3, 0x1']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_8000CF58 to: fn_8000CF58();
Translated b .L_8000E738 to: goto L_8000E738;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r0', '0x6004(r3)']
Translated lwz r0 0x6004(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6004); // lwz r0, 0x6004(r3)']
Processing opcode: addi, operands: ['r4', 'r3', '0x6000']
Translated addi r4 r3 0x6000 to: ['gc_env.r[4] = gc_env.r[3] + 24576; // addi r4, r3, 0x6000']
Translated lis r3 fn_8000E748@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E748 >> 16) & 0xFFFF; // lis r3, fn_8000E748@ha']
Processing opcode: stw, operands: ['r0', '0x4(r4)']
Translated stw r0 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[0]); // stw r0, 0x4(r4)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: addi, operands: ['r6', 'r3', 'fn_8000E748@l']
Translated addi r6 r3 fn_8000E748@l to: ['gc_env.r[6] = gc_env.r[3] + ((uint32_t)&fn_8000E748 & 0xFFFF); // addi r6, r3, fn_8000E748@l']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF9C@sda21(r0)']
Translated stw r0 lbl_8001EF9C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF9C, gc_env.r[0]); // stw r0, lbl_8001EF9C@sda21(r0)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_8000CF58 to: fn_8000CF58();
Translated b .L_8000E738 to: goto L_8000E738;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r0', '0x6004(r3)']
Translated lwz r0 0x6004(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6004); // lwz r0, 0x6004(r3)']
Processing opcode: addi, operands: ['r5', 'r3', '0x6000']
Translated addi r5 r3 0x6000 to: ['gc_env.r[5] = gc_env.r[3] + 24576; // addi r5, r3, 0x6000']
Translated lis r3 fn_8000E748@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E748 >> 16) & 0xFFFF; // lis r3, fn_8000E748@ha']
Processing opcode: stw, operands: ['r0', '0x4(r5)']
Translated stw r0 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[0]); // stw r0, 0x4(r5)']
Processing opcode: addi, operands: ['r4', 'r3', 'fn_8000E748@l']
Translated addi r4 r3 fn_8000E748@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&fn_8000E748 & 0xFFFF); // addi r4, r3, fn_8000E748@l']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl fn_8000CFF0 to: fn_8000CFF0();
Translated b .L_8000E738 to: goto L_8000E738;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r0', '0x6004(r3)']
Translated lwz r0 0x6004(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6004); // lwz r0, 0x6004(r3)']
Processing opcode: addi, operands: ['r5', 'r3', '0x6000']
Translated addi r5 r3 0x6000 to: ['gc_env.r[5] = gc_env.r[3] + 24576; // addi r5, r3, 0x6000']
Translated lis r3 fn_8000E748@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E748 >> 16) & 0xFFFF; // lis r3, fn_8000E748@ha']
Processing opcode: stw, operands: ['r0', '0x4(r5)']
Translated stw r0 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[0]); // stw r0, 0x4(r5)']
Processing opcode: addi, operands: ['r4', 'r3', 'fn_8000E748@l']
Translated addi r4 r3 fn_8000E748@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&fn_8000E748 & 0xFFFF); // addi r4, r3, fn_8000E748@l']
Translated lis r3 0x1 to: ['gc_env.r[3] = 1 << 16; // lis r3, 0x1']
Translated bl fn_8000CFF0 to: fn_8000CFF0();
Translated b .L_8000E738 to: goto L_8000E738;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r0', '0x6004(r3)']
Translated lwz r0 0x6004(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6004); // lwz r0, 0x6004(r3)']
Processing opcode: addi, operands: ['r5', 'r3', '0x6000']
Translated addi r5 r3 0x6000 to: ['gc_env.r[5] = gc_env.r[3] + 24576; // addi r5, r3, 0x6000']
Translated lis r3 fn_8000E748@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E748 >> 16) & 0xFFFF; // lis r3, fn_8000E748@ha']
Processing opcode: stw, operands: ['r0', '0x4(r5)']
Translated stw r0 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[0]); // stw r0, 0x4(r5)']
Processing opcode: addi, operands: ['r4', 'r3', 'fn_8000E748@l']
Translated addi r4 r3 fn_8000E748@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&fn_8000E748 & 0xFFFF); // addi r4, r3, fn_8000E748@l']
Translated lis r3 0x2 to: ['gc_env.r[3] = 2 << 16; // lis r3, 0x2']
Translated bl fn_8000CFF0 to: fn_8000CFF0();
Translated b .L_8000E738 to: goto L_8000E738;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r0', '0x6004(r3)']
Translated lwz r0 0x6004(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6004); // lwz r0, 0x6004(r3)']
Processing opcode: addi, operands: ['r5', 'r3', '0x6000']
Translated addi r5 r3 0x6000 to: ['gc_env.r[5] = gc_env.r[3] + 24576; // addi r5, r3, 0x6000']
Translated lis r3 fn_8000E748@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E748 >> 16) & 0xFFFF; // lis r3, fn_8000E748@ha']
Processing opcode: stw, operands: ['r0', '0x4(r5)']
Translated stw r0 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[0]); // stw r0, 0x4(r5)']
Processing opcode: addi, operands: ['r4', 'r3', 'fn_8000E748@l']
Translated addi r4 r3 fn_8000E748@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&fn_8000E748 & 0xFFFF); // addi r4, r3, fn_8000E748@l']
Translated lis r3 0x3 to: ['gc_env.r[3] = 3 << 16; // lis r3, 0x3']
Translated bl fn_8000CFF0 to: fn_8000CFF0();
Translated b .L_8000E738 to: goto L_8000E738;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r0', '0x6004(r3)']
Translated lwz r0 0x6004(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6004); // lwz r0, 0x6004(r3)']
Processing opcode: addi, operands: ['r4', 'r3', '0x6000']
Translated addi r4 r3 0x6000 to: ['gc_env.r[4] = gc_env.r[3] + 24576; // addi r4, r3, 0x6000']
Translated lis r3 fn_8000E748@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E748 >> 16) & 0xFFFF; // lis r3, fn_8000E748@ha']
Processing opcode: stw, operands: ['r0', '0x4(r4)']
Translated stw r0 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[0]); // stw r0, 0x4(r4)']
Processing opcode: addi, operands: ['r5', 'r3', 'fn_8000E748@l']
Translated addi r5 r3 fn_8000E748@l to: ['gc_env.r[5] = gc_env.r[3] + ((uint32_t)&fn_8000E748 & 0xFFFF); // addi r5, r3, fn_8000E748@l']
Processing opcode: lwz, operands: ['r3', '0x10(r7)']
Translated lwz r3 0x10(r7) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x10); // lwz r3, 0x10(r7)']
Processing opcode: lwz, operands: ['r4', '0x14(r7)']
Translated lwz r4 0x14(r7) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x14); // lwz r4, 0x14(r7)']
Translated bl fn_8000D07C to: fn_8000D07C();
Translated b .L_8000E738 to: goto L_8000E738;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r0', '0x6004(r3)']
Translated lwz r0 0x6004(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6004); // lwz r0, 0x6004(r3)']
Processing opcode: addi, operands: ['r5', 'r3', '0x6000']
Translated addi r5 r3 0x6000 to: ['gc_env.r[5] = gc_env.r[3] + 24576; // addi r5, r3, 0x6000']
Translated lis r3 fn_8000E748@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E748 >> 16) & 0xFFFF; // lis r3, fn_8000E748@ha']
Processing opcode: stw, operands: ['r0', '0x4(r5)']
Translated stw r0 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[0]); // stw r0, 0x4(r5)']
Processing opcode: li, operands: ['r0', '0x20']
Translated li r0 0x20 to: ['gc_env.r[0] = 0x20; // li r0, 0x20']
Processing opcode: addi, operands: ['r4', 'r3', 'fn_8000E748@l']
Translated addi r4 r3 fn_8000E748@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&fn_8000E748 & 0xFFFF); // addi r4, r3, fn_8000E748@l']
Processing opcode: stw, operands: ['r0', '0x1c(r7)']
Translated stw r0 0x1c(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r7)']
Processing opcode: lwz, operands: ['r3', '0x18(r7)']
Translated lwz r3 0x18(r7) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x18); // lwz r3, 0x18(r7)']
Translated bl fn_8000CEBC to: fn_8000CEBC();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmplwi r3 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x10) ? 0 : ((uint32_t)gc_env.r[3] < 0x10 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Translated lis r4 lbl_8001C9A0@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001C9A0 >> 16) & 0xFFFF; // lis r4, lbl_8001C9A0@ha']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: addi, operands: ['r31', 'r4', 'lbl_8001C9A0@l']
Translated addi r31 r4 lbl_8001C9A0@l to: ['gc_env.r[31] = gc_env.r[4] + ((uint32_t)&lbl_8001C9A0 & 0xFFFF); // addi r31, r4, lbl_8001C9A0@l']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Translated bne .L_8000E794 to: if (gc_env.cr[0] != 0) goto L_8000E794;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4568']
Translated addi r3 r3 0x4568 to: ['gc_env.r[3] += 17768; // addi r3, r3, 0x4568']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated bl fn_8000EEC0 to: fn_8000EEC0();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl fn_8000D44C to: fn_8000D44C();
Translated b .L_8000ED04 to: goto L_8000ED04;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0x3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x3) ? 0 : ((uint32_t)gc_env.r[0] < 0x3 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E7AC to: if (gc_env.cr[0] == 0) goto L_8000E7AC;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0xf to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xf) ? 0 : ((uint32_t)gc_env.r[0] < 0xf ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000E894 to: if (gc_env.cr[0] != 0) goto L_8000E894;
Translated rlwinm. r0 r3 0 30 30 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x2; // rlwinm r0, r3, 0, 30, 30', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000E7DC to: if (gc_env.cr[0] == 0) goto L_8000E7DC;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4567']
Translated addi r3 r3 0x4567 to: ['gc_env.r[3] += 17767; // addi r3, r3, 0x4567']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated lis r3 fn_8000D44C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D44C >> 16) & 0xFFFF; // lis r3, fn_8000D44C@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000D44C@l']
Translated addi r3 r3 fn_8000D44C@l to: ['gc_env.r[3] = (uint32_t)&fn_8000D44C; // lis + addi fn_8000D44C (completing pattern)']
Translated bl fn_8000CDA4 to: fn_8000CDA4();
Translated b .L_8000ED04 to: goto L_8000ED04;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFBC@sda21(r0)']
Translated stw r0 lbl_8001EFBC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFBC, gc_env.r[0]); // stw r0, lbl_8001EFBC@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0xf to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xf) ? 0 : ((uint32_t)gc_env.r[0] < 0xf ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000E7F8 to: if (gc_env.cr[0] != 0) goto L_8000E7F8;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFC0@sda21(r0)']
Translated stw r0 lbl_8001EFC0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFC0, gc_env.r[0]); // stw r0, lbl_8001EFC0@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated lwz r0 lbl_8001EFA8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA8); // lwz r0, lbl_8001EFA8@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E86C to: if (gc_env.cr[0] == 0) goto L_8000E86C;
Processing opcode: li, operands: ['r0', '0x7']
Translated li r0 0x7 to: ['gc_env.r[0] = 0x7; // li r0, 0x7']
Processing opcode: lwz, operands: ['r30', 'lbl_8001EF88@sda21(r0)']
Translated lwz r30 lbl_8001EF88@sda21(r0) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r30, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFB0@sda21(r0)']
Translated stw r0 lbl_8001EFB0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB0, gc_env.r[0]); // stw r0, lbl_8001EFB0@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r31', '0x80']
Translated addi r3 r31 0x80 to: ['gc_env.r[3] = gc_env.r[31] + 128; // addi r3, r31, 0x80']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated stw r0 lbl_8001EFA8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFA8, gc_env.r[0]); // stw r0, lbl_8001EFA8@sda21(r0)']
Processing opcode: li, operands: ['r0', '0xa']
Translated li r0 0xa to: ['gc_env.r[0] = 0xa; // li r0, 0xa']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated stw r3 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[3]); // stw r3, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r0', '0xc(r30)']
Translated stw r0 0xc(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0xC, gc_env.r[0]); // stw r0, 0xC(r30)']
Processing opcode: lwz, operands: ['r12', '0x28(r30)']
Translated lwz r12 0x28(r30) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x28); // lwz r12, 0x28(r30)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E844 to: if (gc_env.cr[0] == 0) goto L_8000E844;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: li, operands: ['r3', '-0x3']
Translated li r3 -0x3 to: ['gc_env.r[3] = -0x3; // li r3, -0x3']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: lwz, operands: ['r12', 'lbl_8001EFAC@sda21(r0)']
Translated lwz r12 lbl_8001EFAC@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFAC); // lwz r12, lbl_8001EFAC@sda21(r0)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E860 to: if (gc_env.cr[0] == 0) goto L_8000E860;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated b .L_8000E870 to: goto L_8000E870;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000ED04 to: if (gc_env.cr[0] != 0) goto L_8000ED04;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x7']
Translated li r0 0x7 to: ['gc_env.r[0] = 0x7; // li r0, 0x7']
Translated lis r3 fn_8000E15C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E15C >> 16) & 0xFFFF; // lis r3, fn_8000E15C@ha']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000E15C@l']
Translated addi r3 r3 fn_8000E15C@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&fn_8000E15C & 0xFFFF); // addi r3, r3, fn_8000E15C@l']
Translated bl fn_8000CCD4 to: fn_8000CCD4();
Translated b .L_8000ED04 to: goto L_8000ED04;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E8C4 to: if (gc_env.cr[0] == 0) goto L_8000E8C4;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x4) ? 0 : ((uint32_t)gc_env.r[0] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E8C4 to: if (gc_env.cr[0] == 0) goto L_8000E8C4;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0x5 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x5) ? 0 : ((uint32_t)gc_env.r[0] < 0x5 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E8C4 to: if (gc_env.cr[0] == 0) goto L_8000E8C4;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0xe to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xe) ? 0 : ((uint32_t)gc_env.r[0] < 0xe ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000E8E8 to: if (gc_env.cr[0] != 0) goto L_8000E8E8;
Processing opcode: lwz, operands: ['r6', 'lbl_8001EF88@sda21(r0)']
Translated lwz r6 lbl_8001EF88@sda21(r0) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r6, lbl_8001EF88@sda21(r0)']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: addi, operands: ['r4', 'r4', '0x6000']
Translated addi r4 r4 0x6000 to: ['gc_env.r[4] += 24576; // addi r4, r4, 0x6000']
Processing opcode: lwz, operands: ['r4', '0x18(r4)']
Translated lwz r4 0x18(r4) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x18); // lwz r4, 0x18(r4)']
Processing opcode: lwz, operands: ['r0', '0x1c(r6)']
Translated lwz r0 0x1c(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x1C); // lwz r0, 0x1C(r6)']
Processing opcode: lwz, operands: ['r5', '0x20(r6)']
Translated lwz r5 0x20(r6) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x20); // lwz r5, 0x20(r6)']
Processing opcode: subf, operands: ['r0', 'r4', 'r0']
Translated subf r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[4]; // subf r0, r4, r0']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: stw, operands: ['r0', '0x20(r6)']
Translated stw r0 0x20(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x20, gc_env.r[0]); // stw r0, 0x20(r6)']
Translated rlwinm. r0 r3 0 28 28 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x8; // rlwinm r0, r3, 0, 28, 28', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000E94C to: if (gc_env.cr[0] == 0) goto L_8000E94C;
Processing opcode: lwz, operands: ['r30', 'lbl_8001EF88@sda21(r0)']
Translated lwz r30 lbl_8001EF88@sda21(r0) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r30, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r31', '0x80']
Translated addi r3 r31 0x80 to: ['gc_env.r[3] = gc_env.r[31] + 128; // addi r3, r31, 0x80']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated stw r0 lbl_8001EFA8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFA8, gc_env.r[0]); // stw r0, lbl_8001EFA8@sda21(r0)']
Processing opcode: li, operands: ['r0', '0xa']
Translated li r0 0xa to: ['gc_env.r[0] = 0xa; // li r0, 0xa']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated stw r3 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[3]); // stw r3, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r0', '0xc(r30)']
Translated stw r0 0xc(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0xC, gc_env.r[0]); // stw r0, 0xC(r30)']
Processing opcode: lwz, operands: ['r12', '0x28(r30)']
Translated lwz r12 0x28(r30) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x28); // lwz r12, 0x28(r30)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E928 to: if (gc_env.cr[0] == 0) goto L_8000E928;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: li, operands: ['r3', '-0x3']
Translated li r3 -0x3 to: ['gc_env.r[3] = -0x3; // li r3, -0x3']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: lwz, operands: ['r12', 'lbl_8001EFAC@sda21(r0)']
Translated lwz r12 lbl_8001EFAC@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFAC); // lwz r12, lbl_8001EFAC@sda21(r0)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E944 to: if (gc_env.cr[0] == 0) goto L_8000E944;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Translated b .L_8000ED04 to: goto L_8000ED04;
Translated clrlwi. r0 r3 31 to: ['gc_env.r[0] = gc_env.r[3] & 0x1; // clrlwi r0, r3, 31']
Translated beq .L_8000EBD4 to: if (gc_env.cr[0] == 0) goto L_8000EBD4;
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: stw, operands: ['r4', 'lbl_8001EFBC@sda21(r0)']
Translated stw r4 lbl_8001EFBC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFBC, gc_env.r[4]); // stw r4, lbl_8001EFBC@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated lwz r0 lbl_8001EFA8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA8); // lwz r0, lbl_8001EFA8@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E9C4 to: if (gc_env.cr[0] == 0) goto L_8000E9C4;
Processing opcode: stw, operands: ['r4', 'lbl_8001EFB0@sda21(r0)']
Translated stw r4 lbl_8001EFB0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB0, gc_env.r[4]); // stw r4, lbl_8001EFB0@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r31', '0x80']
Translated addi r3 r31 0x80 to: ['gc_env.r[3] = gc_env.r[31] + 128; // addi r3, r31, 0x80']
Processing opcode: lwz, operands: ['r30', 'lbl_8001EF88@sda21(r0)']
Translated lwz r30 lbl_8001EF88@sda21(r0) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r30, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '0xa']
Translated li r0 0xa to: ['gc_env.r[0] = 0xa; // li r0, 0xa']
Processing opcode: stw, operands: ['r4', 'lbl_8001EFA8@sda21(r0)']
Translated stw r4 lbl_8001EFA8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFA8, gc_env.r[4]); // stw r4, lbl_8001EFA8@sda21(r0)']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated stw r3 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[3]); // stw r3, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r0', '0xc(r30)']
Translated stw r0 0xc(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0xC, gc_env.r[0]); // stw r0, 0xC(r30)']
Processing opcode: lwz, operands: ['r12', '0x28(r30)']
Translated lwz r12 0x28(r30) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x28); // lwz r12, 0x28(r30)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E9A0 to: if (gc_env.cr[0] == 0) goto L_8000E9A0;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: li, operands: ['r3', '-0x3']
Translated li r3 -0x3 to: ['gc_env.r[3] = -0x3; // li r3, -0x3']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: lwz, operands: ['r12', 'lbl_8001EFAC@sda21(r0)']
Translated lwz r12 lbl_8001EFAC@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFAC); // lwz r12, lbl_8001EFAC@sda21(r0)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E9BC to: if (gc_env.cr[0] == 0) goto L_8000E9BC;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000ED04 to: if (gc_env.cr[0] != 0) goto L_8000ED04;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E9FC to: if (gc_env.cr[0] == 0) goto L_8000E9FC;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x4) ? 0 : ((uint32_t)gc_env.r[0] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E9FC to: if (gc_env.cr[0] == 0) goto L_8000E9FC;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0x5 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x5) ? 0 : ((uint32_t)gc_env.r[0] < 0x5 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000E9FC to: if (gc_env.cr[0] == 0) goto L_8000E9FC;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0xe to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xe) ? 0 : ((uint32_t)gc_env.r[0] < 0xe ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000EA4C to: if (gc_env.cr[0] != 0) goto L_8000EA4C;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Processing opcode: lwz, operands: ['r4', '0x20(r3)']
Translated lwz r4 0x20(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x20); // lwz r4, 0x20(r3)']
Processing opcode: lwz, operands: ['r0', '0x14(r3)']
Translated lwz r0 0x14(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x14); // lwz r0, 0x14(r3)']
Translated cmplw r4 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated beq .L_8000EA18 to: if (gc_env.cr[0] == 0) goto L_8000EA18;
Translated bl fn_8000E488 to: fn_8000E488();
Translated b .L_8000ED04 to: goto L_8000ED04;
Processing opcode: addi, operands: ['r0', 'r31', '0x80']
Translated addi r0 r31 0x80 to: ['gc_env.r[0] = gc_env.r[31] + 128; // addi r0, r31, 0x80']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF88@sda21(r0)']
Translated stw r0 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[0]); // stw r0, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: addi, operands: ['r4', 'r3', '0x0']
Translated addi r4 r3 0x0 to: ['gc_env.r[4] = gc_env.r[3] + 0; // addi r4, r3, 0x0']
Processing opcode: stw, operands: ['r0', '0xc(r3)']
Translated stw r0 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[0]); // stw r0, 0xC(r3)']
Processing opcode: lwz, operands: ['r12', '0x28(r3)']
Translated lwz r12 0x28(r3) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x28); // lwz r12, 0x28(r3)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000EA44 to: if (gc_env.cr[0] == 0) goto L_8000EA44;
Processing opcode: lwz, operands: ['r3', '0x20(r4)']
Translated lwz r3 0x20(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x20); // lwz r3, 0x20(r4)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Translated b .L_8000ED04 to: goto L_8000ED04;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0x9 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x9) ? 0 : ((uint32_t)gc_env.r[0] < 0x9 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000EA7C to: if (gc_env.cr[0] == 0) goto L_8000EA7C;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0xa to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xa) ? 0 : ((uint32_t)gc_env.r[0] < 0xa ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000EA7C to: if (gc_env.cr[0] == 0) goto L_8000EA7C;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0xb to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xb) ? 0 : ((uint32_t)gc_env.r[0] < 0xb ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000EA7C to: if (gc_env.cr[0] == 0) goto L_8000EA7C;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0xc to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xc) ? 0 : ((uint32_t)gc_env.r[0] < 0xc ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000EAE0 to: if (gc_env.cr[0] != 0) goto L_8000EAE0;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0xb to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xb) ? 0 : ((uint32_t)gc_env.r[0] < 0xb ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000EA94 to: if (gc_env.cr[0] == 0) goto L_8000EA94;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0xa to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xa) ? 0 : ((uint32_t)gc_env.r[0] < 0xa ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000EAA4 to: if (gc_env.cr[0] != 0) goto L_8000EAA4;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r0', '0x6020(r3)']
Translated lwz r0 0x6020(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6020); // lwz r0, 0x6020(r3)']
Translated slwi r3 r0 2 to: ['gc_env.r[3] = gc_env.r[0] << 2; // slwi r3, r0, 2']
Translated b .L_8000EAB0 to: goto L_8000EAB0;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x6000']
Translated addi r3 r3 0x6000 to: ['gc_env.r[3] += 24576; // addi r3, r3, 0x6000']
Processing opcode: lwz, operands: ['r3', '0x20(r3)']
Translated lwz r3 0x20(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x20); // lwz r3, 0x20(r3)']
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r5', 'r31', '0x80']
Translated addi r5 r31 0x80 to: ['gc_env.r[5] = gc_env.r[31] + 128; // addi r5, r31, 0x80']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r5', 'lbl_8001EF88@sda21(r0)']
Translated stw r5 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[5]); // stw r5, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: lwz, operands: ['r12', '0x28(r4)']
Translated lwz r12 0x28(r4) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x28); // lwz r12, 0x28(r4)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000EAD8 to: if (gc_env.cr[0] == 0) goto L_8000EAD8;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Translated b .L_8000ED04 to: goto L_8000ED04;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0x6 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x6) ? 0 : ((uint32_t)gc_env.r[0] < 0x6 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000EBA0 to: if (gc_env.cr[0] != 0) goto L_8000EBA0;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r5', 'r4', '0x1c']
Translated addi r5 r4 0x1c to: ['gc_env.r[5] = gc_env.r[4] + 28; // addi r5, r4, 0x1c']
Processing opcode: lwz, operands: ['r0', '0x1c(r4)']
Translated lwz r0 0x1c(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x1C); // lwz r0, 0x1C(r4)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000EB70 to: if (gc_env.cr[0] != 0) goto L_8000EB70;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r0', '0x6020(r3)']
Translated lwz r0 0x6020(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6020); // lwz r0, 0x6020(r3)']
Translated clrlwi. r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Translated beq .L_8000EB40 to: if (gc_env.cr[0] == 0) goto L_8000EB40;
Processing opcode: addi, operands: ['r0', 'r31', '0x80']
Translated addi r0 r31 0x80 to: ['gc_env.r[0] = gc_env.r[31] + 128; // addi r0, r31, 0x80']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF88@sda21(r0)']
Translated stw r0 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[0]); // stw r0, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x9']
Translated li r0 0x9 to: ['gc_env.r[0] = 0x9; // li r0, 0x9']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: lwz, operands: ['r12', '0x28(r4)']
Translated lwz r12 0x28(r4) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x28); // lwz r12, 0x28(r4)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000EB38 to: if (gc_env.cr[0] == 0) goto L_8000EB38;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: li, operands: ['r3', '-0x2']
Translated li r3 -0x2 to: ['gc_env.r[3] = -0x2; // li r3, -0x2']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Translated b .L_8000ED04 to: goto L_8000ED04;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF9C@sda21(r0)']
Translated stw r0 lbl_8001EF9C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF9C, gc_env.r[0]); // stw r0, lbl_8001EF9C@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated lis r3 fn_8000E748@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000E748 >> 16) & 0xFFFF; // lis r3, fn_8000E748@ha']
Processing opcode: stw, operands: ['r0', '0x0(r5)']
Translated stw r0 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stw r0, (r5)']
Processing opcode: addi, operands: ['r6', 'r3', 'fn_8000E748@l']
Translated addi r6 r3 fn_8000E748@l to: ['gc_env.r[6] = gc_env.r[3] + ((uint32_t)&fn_8000E748 & 0xFFFF); // addi r6, r3, fn_8000E748@l']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r5', 'lbl_8001EF88@sda21(r0)']
Translated lwz r5 lbl_8001EF88@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r5, lbl_8001EF88@sda21(r0)']
Processing opcode: lwz, operands: ['r4', '0x14(r5)']
Translated lwz r4 0x14(r5) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x14); // lwz r4, 0x14(r5)']
Processing opcode: lwz, operands: ['r5', '0x10(r5)']
Translated lwz r5 0x10(r5) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x10); // lwz r5, 0x10(r5)']
Translated bl fn_8000CF58 to: fn_8000CF58();
Translated b .L_8000ED04 to: goto L_8000ED04;
Processing opcode: addi, operands: ['r0', 'r31', '0x80']
Translated addi r0 r31 0x80 to: ['gc_env.r[0] = gc_env.r[31] + 128; // addi r0, r31, 0x80']
Processing opcode: stw, operands: ['r0', 'lbl_8001EF88@sda21(r0)']
Translated stw r0 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[0]); // stw r0, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: lwz, operands: ['r12', '0x28(r4)']
Translated lwz r12 0x28(r4) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x28); // lwz r12, 0x28(r4)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000EB98 to: if (gc_env.cr[0] == 0) goto L_8000EB98;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Translated b .L_8000ED04 to: goto L_8000ED04;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r31', '0x80']
Translated addi r3 r31 0x80 to: ['gc_env.r[3] = gc_env.r[31] + 128; // addi r3, r31, 0x80']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated stw r3 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[3]); // stw r3, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: lwz, operands: ['r12', '0x28(r4)']
Translated lwz r12 0x28(r4) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x28); // lwz r12, 0x28(r4)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000EBCC to: if (gc_env.cr[0] == 0) goto L_8000EBCC;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Translated b .L_8000ED04 to: goto L_8000ED04;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0xe to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xe) ? 0 : ((uint32_t)gc_env.r[0] < 0xe ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000EC08 to: if (gc_env.cr[0] != 0) goto L_8000EC08;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated lis r3 0x123 to: ['gc_env.r[3] = 291 << 16; // lis r3, 0x123']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r3', '0x4567']
Translated addi r3 r3 0x4567 to: ['gc_env.r[3] += 17767; // addi r3, r3, 0x4567']
Translated bl fn_8000F74C to: fn_8000F74C();
Translated lis r3 fn_8000D44C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D44C >> 16) & 0xFFFF; // lis r3, fn_8000D44C@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000D44C@l']
Translated addi r3 r3 fn_8000D44C@l to: ['gc_env.r[3] = (uint32_t)&fn_8000D44C; // lis + addi fn_8000D44C (completing pattern)']
Translated bl fn_8000CDA4 to: fn_8000CDA4();
Translated b .L_8000ED04 to: goto L_8000ED04;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000EC38 to: if (gc_env.cr[0] == 0) goto L_8000EC38;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x4) ? 0 : ((uint32_t)gc_env.r[0] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000EC38 to: if (gc_env.cr[0] == 0) goto L_8000EC38;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0x5 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x5) ? 0 : ((uint32_t)gc_env.r[0] < 0x5 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000EC38 to: if (gc_env.cr[0] == 0) goto L_8000EC38;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA4@sda21(r0)']
Translated lwz r0 lbl_8001EFA4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA4); // lwz r0, lbl_8001EFA4@sda21(r0)']
Translated cmplwi r0 0xe to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xe) ? 0 : ((uint32_t)gc_env.r[0] < 0xe ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000ECF8 to: if (gc_env.cr[0] != 0) goto L_8000ECF8;
Processing opcode: lwz, operands: ['r30', 'lbl_8001EF88@sda21(r0)']
Translated lwz r30 lbl_8001EF88@sda21(r0) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r30, lbl_8001EF88@sda21(r0)']
Processing opcode: lwz, operands: ['r3', '0x20(r30)']
Translated lwz r3 0x20(r30) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x20); // lwz r3, 0x20(r30)']
Processing opcode: lwz, operands: ['r0', '0x14(r30)']
Translated lwz r0 0x14(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x14); // lwz r0, 0x14(r30)']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_8000ECF8 to: if (gc_env.cr[0] != 0) goto L_8000ECF8;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated lwz r0 lbl_8001EFA8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA8); // lwz r0, lbl_8001EFA8@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000ECB8 to: if (gc_env.cr[0] == 0) goto L_8000ECB8;
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: stw, operands: ['r4', 'lbl_8001EFB0@sda21(r0)']
Translated stw r4 lbl_8001EFB0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB0, gc_env.r[4]); // stw r4, lbl_8001EFB0@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r31', '0x80']
Translated addi r3 r31 0x80 to: ['gc_env.r[3] = gc_env.r[31] + 128; // addi r3, r31, 0x80']
Processing opcode: li, operands: ['r0', '0xa']
Translated li r0 0xa to: ['gc_env.r[0] = 0xa; // li r0, 0xa']
Processing opcode: stw, operands: ['r4', 'lbl_8001EFA8@sda21(r0)']
Translated stw r4 lbl_8001EFA8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFA8, gc_env.r[4]); // stw r4, lbl_8001EFA8@sda21(r0)']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated stw r3 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[3]); // stw r3, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r0', '0xc(r30)']
Translated stw r0 0xc(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0xC, gc_env.r[0]); // stw r0, 0xC(r30)']
Processing opcode: lwz, operands: ['r12', '0x28(r30)']
Translated lwz r12 0x28(r30) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x28); // lwz r12, 0x28(r30)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000EC90 to: if (gc_env.cr[0] == 0) goto L_8000EC90;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: li, operands: ['r3', '-0x3']
Translated li r3 -0x3 to: ['gc_env.r[3] = -0x3; // li r3, -0x3']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: lwz, operands: ['r12', 'lbl_8001EFAC@sda21(r0)']
Translated lwz r12 lbl_8001EFAC@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFAC); // lwz r12, lbl_8001EFAC@sda21(r0)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000ECAC to: if (gc_env.cr[0] == 0) goto L_8000ECAC;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated b .L_8000ECBC to: goto L_8000ECBC;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000ED04 to: if (gc_env.cr[0] != 0) goto L_8000ED04;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EF88@sda21(r0)']
Translated lwz r4 lbl_8001EF88@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r4, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r31', '0x80']
Translated addi r3 r31 0x80 to: ['gc_env.r[3] = gc_env.r[31] + 128; // addi r3, r31, 0x80']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated stw r3 lbl_8001EF88@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF88, gc_env.r[3]); // stw r3, lbl_8001EF88@sda21(r0)']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Processing opcode: lwz, operands: ['r12', '0x28(r4)']
Translated lwz r12 0x28(r4) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x28); // lwz r12, 0x28(r4)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000ECF0 to: if (gc_env.cr[0] == 0) goto L_8000ECF0;
Processing opcode: lwz, operands: ['r3', '0x20(r4)']
Translated lwz r3 0x20(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x20); // lwz r3, 0x20(r4)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Translated b .L_8000ED04 to: goto L_8000ED04;
Translated lis r3 fn_8000D66C@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000D66C >> 16) & 0xFFFF; // lis r3, fn_8000D66C@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_8000D66C@l']
Translated addi r3 r3 fn_8000D66C@l to: ['gc_env.r[3] = (uint32_t)&fn_8000D66C; // lis + addi fn_8000D66C (completing pattern)']
Translated bl fn_8000CE30 to: fn_8000CE30();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x4']
Translated li r0 0x4 to: ['gc_env.r[0] = 0x4; // li r0, 0x4']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Processing opcode: stw, operands: ['r31', '0x2c(r1)']
Translated stw r31 0x2c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stw r31, 0x2C(r1)']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Processing opcode: stw, operands: ['r30', '0x28(r1)']
Translated stw r30 0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[30]); // stw r30, 0x28(r1)']
Processing opcode: stw, operands: ['r0', '0x8(r3)']
Translated stw r0 0x8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[0]); // stw r0, 0x8(r3)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r4', '0x18(r3)']
Translated stw r4 0x18(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x18, gc_env.r[4]); // stw r4, 0x18(r3)']
Processing opcode: stw, operands: ['r5', '0x14(r3)']
Translated stw r5 0x14(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x14, gc_env.r[5]); // stw r5, 0x14(r3)']
Processing opcode: stw, operands: ['r6', '0x10(r3)']
Translated stw r6 0x10(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x10, gc_env.r[6]); // stw r6, 0x10(r3)']
Processing opcode: stw, operands: ['r0', '0x20(r3)']
Translated stw r0 0x20(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x20, gc_env.r[0]); // stw r0, 0x20(r3)']
Processing opcode: stw, operands: ['r7', '0x28(r3)']
Translated stw r7 0x28(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x28, gc_env.r[7]); // stw r7, 0x28(r3)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EE20@sda21(r0)']
Translated lwz r0 lbl_8001EE20@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE20); // lwz r0, lbl_8001EE20@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000ED8C to: if (gc_env.cr[0] == 0) goto L_8000ED8C;
Processing opcode: lwz, operands: ['r3', '0x8(r31)']
Translated lwz r3 0x8(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r3, 0x8(r31)']
Translated cmplwi r3 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x1) ? 0 : ((uint32_t)gc_env.r[3] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000ED80 to: if (gc_env.cr[0] == 0) goto L_8000ED80;
Processing opcode: subi, operands: ['r0', 'r3', '0x4']
Translated subi r0 r3 0x4 to: ['gc_env.r[0] = gc_env.r[3] - 4; // subi r0, r3, 4']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated ble .L_8000ED80 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000ED80; // ble .L_8000ED80']
Translated cmplwi r3 0xe to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0xe) ? 0 : ((uint32_t)gc_env.r[3] < 0xe ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000ED8C to: if (gc_env.cr[0] != 0) goto L_8000ED8C;
Processing opcode: lwz, operands: ['r3', '0x18(r31)']
Translated lwz r3 0x18(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x18); // lwz r3, 0x18(r31)']
Processing opcode: lwz, operands: ['r4', '0x14(r31)']
Translated lwz r4 0x14(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x14); // lwz r4, 0x14(r31)']
Translated bl DCInvalidateRange to: DCInvalidateRange();
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: li, operands: ['r3', '0x2']
Translated li r3 0x2 to: ['gc_env.r[3] = 0x2; // li r3, 0x2']
Translated bl fn_8000F470 to: fn_8000F470();
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF88@sda21(r0)']
Translated lwz r0 lbl_8001EF88@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r0, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000EDC8 to: if (gc_env.cr[0] != 0) goto L_8000EDC8;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF94@sda21(r0)']
Translated lwz r0 lbl_8001EF94@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF94); // lwz r0, lbl_8001EF94@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000EDC8 to: if (gc_env.cr[0] != 0) goto L_8000EDC8;
Translated bl fn_8000E240 to: fn_8000E240();
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r0', '0x34(r1)']
Translated lwz r0 0x34(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r0, 0x34(r1)']
Processing opcode: lwz, operands: ['r31', '0x2c(r1)']
Translated lwz r31 0x2c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r31, 0x2C(r1)']
Processing opcode: lwz, operands: ['r30', '0x28(r1)']
Translated lwz r30 0x28(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lwz r30, 0x28(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x5']
Translated li r0 0x5 to: ['gc_env.r[0] = 0x5; // li r0, 0x5']
Processing opcode: stwu, operands: ['r1', '-0x28(r1)']
Translated stwu r1 -0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x28, gc_env.r[1]); // stwu r1, -0x28(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x28;']
Processing opcode: stw, operands: ['r31', '0x24(r1)']
Translated stw r31 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[31]); // stw r31, 0x24(r1)']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Processing opcode: stw, operands: ['r30', '0x20(r1)']
Translated stw r30 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[30]); // stw r30, 0x20(r1)']
Processing opcode: stw, operands: ['r0', '0x8(r3)']
Translated stw r0 0x8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[0]); // stw r0, 0x8(r3)']
Processing opcode: li, operands: ['r3', '0x20']
Translated li r3 0x20 to: ['gc_env.r[3] = 0x20; // li r3, 0x20']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r4', '0x18(r31)']
Translated stw r4 0x18(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x18, gc_env.r[4]); // stw r4, 0x18(r31)']
Processing opcode: stw, operands: ['r3', '0x14(r31)']
Translated stw r3 0x14(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x14, gc_env.r[3]); // stw r3, 0x14(r31)']
Processing opcode: stw, operands: ['r0', '0x10(r31)']
Translated stw r0 0x10(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x10, gc_env.r[0]); // stw r0, 0x10(r31)']
Processing opcode: stw, operands: ['r0', '0x20(r31)']
Translated stw r0 0x20(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x20, gc_env.r[0]); // stw r0, 0x20(r31)']
Processing opcode: stw, operands: ['r5', '0x28(r31)']
Translated stw r5 0x28(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x28, gc_env.r[5]); // stw r5, 0x28(r31)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EE20@sda21(r0)']
Translated lwz r0 lbl_8001EE20@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE20); // lwz r0, lbl_8001EE20@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000EE60 to: if (gc_env.cr[0] == 0) goto L_8000EE60;
Processing opcode: lwz, operands: ['r3', '0x8(r31)']
Translated lwz r3 0x8(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r3, 0x8(r31)']
Translated cmplwi r3 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x1) ? 0 : ((uint32_t)gc_env.r[3] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000EE54 to: if (gc_env.cr[0] == 0) goto L_8000EE54;
Processing opcode: subi, operands: ['r0', 'r3', '0x4']
Translated subi r0 r3 0x4 to: ['gc_env.r[0] = gc_env.r[3] - 4; // subi r0, r3, 4']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated ble .L_8000EE54 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000EE54; // ble .L_8000EE54']
Translated cmplwi r3 0xe to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0xe) ? 0 : ((uint32_t)gc_env.r[3] < 0xe ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000EE60 to: if (gc_env.cr[0] != 0) goto L_8000EE60;
Processing opcode: lwz, operands: ['r3', '0x18(r31)']
Translated lwz r3 0x18(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x18); // lwz r3, 0x18(r31)']
Processing opcode: lwz, operands: ['r4', '0x14(r31)']
Translated lwz r4 0x14(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x14); // lwz r4, 0x14(r31)']
Translated bl DCInvalidateRange to: DCInvalidateRange();
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: li, operands: ['r3', '0x2']
Translated li r3 0x2 to: ['gc_env.r[3] = 0x2; // li r3, 0x2']
Translated bl fn_8000F470 to: fn_8000F470();
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF88@sda21(r0)']
Translated lwz r0 lbl_8001EF88@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r0, lbl_8001EF88@sda21(r0)']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000EE9C to: if (gc_env.cr[0] != 0) goto L_8000EE9C;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF94@sda21(r0)']
Translated lwz r0 lbl_8001EF94@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF94); // lwz r0, lbl_8001EF94@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000EE9C to: if (gc_env.cr[0] != 0) goto L_8000EE9C;
Translated bl fn_8000E240 to: fn_8000E240();
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r0', '0x2c(r1)']
Translated lwz r0 0x2c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r0, 0x2C(r1)']
Processing opcode: lwz, operands: ['r31', '0x24(r1)']
Translated lwz r31 0x24(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r31, 0x24(r1)']
Processing opcode: lwz, operands: ['r30', '0x20(r1)']
Translated lwz r30 0x20(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r30, 0x20(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x28']
Translated addi r1 r1 0x28 to: ['gc_env.r[1] += 40; // addi r1, r1, 0x28']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_8000D118 to: fn_8000D118();
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: li, operands: ['r0', '0x2a']
Translated li r0 0x2a to: ['gc_env.r[0] = 0x2a; // li r0, 0x2a']
Processing opcode: stw, operands: ['r0', '0x6000(r3)']
Translated stw r0 0x6000(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x6000, gc_env.r[0]); // stw r0, 0x6000(r3)']
Processing opcode: addi, operands: ['r4', 'r3', '0x6000']
Translated addi r4 r3 0x6000 to: ['gc_env.r[4] = gc_env.r[3] + 24576; // addi r4, r3, 0x6000']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: lwz, operands: ['r3', '0x6004(r3)']
Translated lwz r3 0x6004(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6004); // lwz r3, 0x6004(r3)']
Processing opcode: stw, operands: ['r3', '0x4(r4)']
Translated stw r3 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[3]); // stw r3, 0x4(r4)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFC0@sda21(r0)']
Translated stw r0 lbl_8001EFC0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFC0, gc_env.r[0]); // stw r0, lbl_8001EFC0@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFB0@sda21(r0)']
Translated stw r0 lbl_8001EFB0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB0, gc_env.r[0]); // stw r0, lbl_8001EFB0@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA0@sda21(r0)']
Translated lwz r0 lbl_8001EFA0@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA0); // lwz r0, lbl_8001EFA0@sda21(r0)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000EF34 to: if (gc_env.cr[0] == 0) goto L_8000EF34;
Processing opcode: li, operands: ['r31', '-0x1']
Translated li r31 -0x1 to: ['gc_env.r[31] = -0x1; // li r31, -0x1']
Translated b .L_8000EF8C to: goto L_8000EF8C;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF98@sda21(r0)']
Translated lwz r0 lbl_8001EF98@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF98); // lwz r0, lbl_8001EF98@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000EF48 to: if (gc_env.cr[0] == 0) goto L_8000EF48;
Processing opcode: li, operands: ['r31', '0x8']
Translated li r31 0x8 to: ['gc_env.r[31] = 0x8; // li r31, 0x8']
Translated b .L_8000EF8C to: goto L_8000EF8C;
Processing opcode: lwz, operands: ['r31', 'lbl_8001EF88@sda21(r0)']
Translated lwz r31 lbl_8001EF88@sda21(r0) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r31, lbl_8001EF88@sda21(r0)']
Translated cmplwi r31 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == 0x0) ? 0 : ((uint32_t)gc_env.r[31] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000EF5C to: if (gc_env.cr[0] != 0) goto L_8000EF5C;
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Translated b .L_8000EF8C to: goto L_8000EF8C;
Translated lis r3 lbl_8001CA20@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CA20 >> 16) & 0xFFFF; // lis r3, lbl_8001CA20@ha']
Processing opcode: addi, operands: ['r0', 'r3', 'lbl_8001CA20@l']
Translated addi r0 r3 lbl_8001CA20@l to: ['gc_env.r[0] = (uint32_t)&lbl_8001CA20; // lis + addi lbl_8001CA20 (completing pattern)']
Translated cmplw r31 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[31] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_8000EF74 to: if (gc_env.cr[0] != 0) goto L_8000EF74;
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Translated b .L_8000EF8C to: goto L_8000EF8C;
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r31', '0xc(r31)']
Translated lwz r31 0xc(r31) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r31, 0xC(r31)']
Translated cmpwi r31 0x3 to: gc_env.cr[0] = (gc_env.r[31] == 0x3) ? 0 : (gc_env.r[31] < 0x3 ? -1 : 1); // Compare with immediate
Translated bne .L_8000EF88 to: if (gc_env.cr[0] != 0) goto L_8000EF88;
Processing opcode: li, operands: ['r31', '0x1']
Translated li r31 0x1 to: ['gc_env.r[31] = 0x1; // li r31, 0x1']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EE20@sda21(r0)']
Translated lwz r0 lbl_8001EE20@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE20); // lwz r0, lbl_8001EE20@sda21(r0)']
Processing opcode: stw, operands: ['r3', 'lbl_8001EE20@sda21(r0)']
Translated stw r3 lbl_8001EE20@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EE20, gc_env.r[3]); // stw r3, lbl_8001EE20@sda21(r0)']
Translated mr r3 r0 to: gc_env.r[3] = gc_env.r[0]; // Move register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: addi, operands: ['r30', 'r4', '0x0']
Translated addi r30 r4 0x0 to: ['gc_env.r[30] = gc_env.r[4] + 0; // addi r30, r4, 0x0']
Processing opcode: stw, operands: ['r29', '0x14(r1)']
Translated stw r29 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stw r29, 0x14(r1)']
Processing opcode: addi, operands: ['r29', 'r3', '0x0']
Translated addi r29 r3 0x0 to: ['gc_env.r[29] = gc_env.r[3] + 0; // addi r29, r3, 0x0']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r4', '0xc(r29)']
Translated lwz r4 0xc(r29) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r4, 0xC(r29)']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Translated cmplwi r0 0xc to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xc) ? 0 : ((uint32_t)gc_env.r[0] < 0xc ? -1 : 1); // Logical compare with immediate
Translated bgt .L_8000F208 to: ['if (gc_env.cr[0] & 0x4) goto L_8000F208; // bgt .L_8000F208']
Translated lis r3 jumptable_8001B2B4@ha to: ['gc_env.r[3] = ((uint32_t)&jumptable_8001B2B4 >> 16) & 0xFFFF; // lis r3, jumptable_8001B2B4@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'jumptable_8001B2B4@l']
Translated addi r3 r3 jumptable_8001B2B4@l to: ['gc_env.r[3] = (uint32_t)&jumptable_8001B2B4; // lis + addi jumptable_8001B2B4 (completing pattern)']
Translated slwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] << 2; // slwi r0, r0, 2']
Translated lwzx r0 r3 r0 to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + gc_env.r[0]); // lwzx r0, r3, r0']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bctr  to: ['return gc_env.ctr; // bctr']
Translated cmplwi r30 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == 0x0) ? 0 : ((uint32_t)gc_env.r[30] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000F208 to: if (gc_env.cr[0] == 0) goto L_8000F208;
Processing opcode: addi, operands: ['r12', 'r30', '0x0']
Translated addi r12 r30 0x0 to: ['gc_env.r[12] = gc_env.r[30] + 0; // addi r12, r30, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r29', '0x0']
Translated addi r4 r29 0x0 to: ['gc_env.r[4] = gc_env.r[29] + 0; // addi r4, r29, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated b .L_8000F208 to: goto L_8000F208;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated lwz r0 lbl_8001EFA8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA8); // lwz r0, lbl_8001EFA8@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000F04C to: if (gc_env.cr[0] == 0) goto L_8000F04C;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000F214 to: goto L_8000F214;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r30', 'lbl_8001EFAC@sda21(r0)']
Translated stw r30 lbl_8001EFAC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFAC, gc_env.r[30]); // stw r30, lbl_8001EFAC@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated stw r0 lbl_8001EFA8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFA8, gc_env.r[0]); // stw r0, lbl_8001EFA8@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x8(r29)']
Translated lwz r0 0x8(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x8); // lwz r0, 0x8(r29)']
Translated cmplwi r0 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x4) ? 0 : ((uint32_t)gc_env.r[0] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000F06C to: if (gc_env.cr[0] == 0) goto L_8000F06C;
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000F208 to: if (gc_env.cr[0] != 0) goto L_8000F208;
Translated bl fn_8000D1D4 to: fn_8000D1D4();
Translated b .L_8000F208 to: goto L_8000F208;
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated bl fn_8000F5D0 to: fn_8000F5D0();
Processing opcode: li, operands: ['r0', '0xa']
Translated li r0 0xa to: ['gc_env.r[0] = 0xa; // li r0, 0xa']
Processing opcode: stw, operands: ['r0', '0xc(r29)']
Translated stw r0 0xc(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0xC, gc_env.r[0]); // stw r0, 0xC(r29)']
Processing opcode: lwz, operands: ['r12', '0x28(r29)']
Translated lwz r12 0x28(r29) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x28); // lwz r12, 0x28(r29)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000F0A0 to: if (gc_env.cr[0] == 0) goto L_8000F0A0;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r29', '0x0']
Translated addi r4 r29 0x0 to: ['gc_env.r[4] = gc_env.r[29] + 0; // addi r4, r29, 0x0']
Processing opcode: li, operands: ['r3', '-0x3']
Translated li r3 -0x3 to: ['gc_env.r[3] = -0x3; // li r3, -0x3']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated cmplwi r30 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == 0x0) ? 0 : ((uint32_t)gc_env.r[30] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000F208 to: if (gc_env.cr[0] == 0) goto L_8000F208;
Processing opcode: addi, operands: ['r12', 'r30', '0x0']
Translated addi r12 r30 0x0 to: ['gc_env.r[12] = gc_env.r[30] + 0; // addi r12, r30, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r29', '0x0']
Translated addi r4 r29 0x0 to: ['gc_env.r[4] = gc_env.r[29] + 0; // addi r4, r29, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated b .L_8000F208 to: goto L_8000F208;
Processing opcode: lwz, operands: ['r0', '0x8(r29)']
Translated lwz r0 0x8(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x8); // lwz r0, 0x8(r29)']
Translated cmpwi r0 0xd to: gc_env.cr[0] = (gc_env.r[0] == 0xd) ? 0 : (gc_env.r[0] < 0xd ? -1 : 1); // Compare with immediate
Translated beq .L_8000F0F0 to: if (gc_env.cr[0] == 0) goto L_8000F0F0;
Translated bge .L_8000F0E4 to: if (gc_env.cr[0] >= 0) goto L_8000F0E4;
Translated cmpwi r0 0x6 to: gc_env.cr[0] = (gc_env.r[0] == 0x6) ? 0 : (gc_env.r[0] < 0x6 ? -1 : 1); // Compare with immediate
Translated bge .L_8000F110 to: if (gc_env.cr[0] >= 0) goto L_8000F110;
Translated cmpwi r0 0x4 to: gc_env.cr[0] = (gc_env.r[0] == 0x4) ? 0 : (gc_env.r[0] < 0x4 ? -1 : 1); // Compare with immediate
Translated bge .L_8000F0F0 to: if (gc_env.cr[0] >= 0) goto L_8000F0F0;
Translated b .L_8000F110 to: goto L_8000F110;
Translated cmpwi r0 0xf to: gc_env.cr[0] = (gc_env.r[0] == 0xf) ? 0 : (gc_env.r[0] < 0xf ? -1 : 1); // Compare with immediate
Translated beq .L_8000F0F0 to: if (gc_env.cr[0] == 0) goto L_8000F0F0;
Translated b .L_8000F110 to: goto L_8000F110;
Translated cmplwi r30 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == 0x0) ? 0 : ((uint32_t)gc_env.r[30] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000F208 to: if (gc_env.cr[0] == 0) goto L_8000F208;
Processing opcode: addi, operands: ['r12', 'r30', '0x0']
Translated addi r12 r30 0x0 to: ['gc_env.r[12] = gc_env.r[30] + 0; // addi r12, r30, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r29', '0x0']
Translated addi r4 r29 0x0 to: ['gc_env.r[4] = gc_env.r[29] + 0; // addi r4, r29, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated b .L_8000F208 to: goto L_8000F208;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated lwz r0 lbl_8001EFA8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA8); // lwz r0, lbl_8001EFA8@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000F12C to: if (gc_env.cr[0] == 0) goto L_8000F12C;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000F214 to: goto L_8000F214;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r30', 'lbl_8001EFAC@sda21(r0)']
Translated stw r30 lbl_8001EFAC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFAC, gc_env.r[30]); // stw r30, lbl_8001EFAC@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated stw r0 lbl_8001EFA8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFA8, gc_env.r[0]); // stw r0, lbl_8001EFA8@sda21(r0)']
Translated b .L_8000F208 to: goto L_8000F208;
Translated bl fn_8000D1E8 to: fn_8000D1E8();
Translated lis r4 fn_8000E15C@ha to: ['gc_env.r[4] = ((uint32_t)&fn_8000E15C >> 16) & 0xFFFF; // lis r4, fn_8000E15C@ha']
Processing opcode: addi, operands: ['r0', 'r4', 'fn_8000E15C@l']
Translated addi r0 r4 fn_8000E15C@l to: ['gc_env.r[0] = (uint32_t)&fn_8000E15C; // lis + addi fn_8000E15C (completing pattern)']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated beq .L_8000F160 to: if (gc_env.cr[0] == 0) goto L_8000F160;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000F214 to: goto L_8000F214;
Processing opcode: lwz, operands: ['r0', '0xc(r29)']
Translated lwz r0 0xc(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r0, 0xC(r29)']
Translated cmpwi r0 0x4 to: gc_env.cr[0] = (gc_env.r[0] == 0x4) ? 0 : (gc_env.r[0] < 0x4 ? -1 : 1); // Compare with immediate
Translated bne .L_8000F174 to: if (gc_env.cr[0] != 0) goto L_8000F174;
Processing opcode: li, operands: ['r0', '0x3']
Translated li r0 0x3 to: ['gc_env.r[0] = 0x3; // li r0, 0x3']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFB0@sda21(r0)']
Translated stw r0 lbl_8001EFB0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB0, gc_env.r[0]); // stw r0, lbl_8001EFB0@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0xc(r29)']
Translated lwz r0 0xc(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r0, 0xC(r29)']
Translated cmpwi r0 0x5 to: gc_env.cr[0] = (gc_env.r[0] == 0x5) ? 0 : (gc_env.r[0] < 0x5 ? -1 : 1); // Compare with immediate
Translated bne .L_8000F188 to: if (gc_env.cr[0] != 0) goto L_8000F188;
Processing opcode: li, operands: ['r0', '0x4']
Translated li r0 0x4 to: ['gc_env.r[0] = 0x4; // li r0, 0x4']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFB0@sda21(r0)']
Translated stw r0 lbl_8001EFB0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB0, gc_env.r[0]); // stw r0, lbl_8001EFB0@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0xc(r29)']
Translated lwz r0 0xc(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r0, 0xC(r29)']
Translated cmpwi r0 0x6 to: gc_env.cr[0] = (gc_env.r[0] == 0x6) ? 0 : (gc_env.r[0] < 0x6 ? -1 : 1); // Compare with immediate
Translated bne .L_8000F19C to: if (gc_env.cr[0] != 0) goto L_8000F19C;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFB0@sda21(r0)']
Translated stw r0 lbl_8001EFB0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB0, gc_env.r[0]); // stw r0, lbl_8001EFB0@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0xc(r29)']
Translated lwz r0 0xc(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r0, 0xC(r29)']
Translated cmpwi r0 0xb to: gc_env.cr[0] = (gc_env.r[0] == 0xb) ? 0 : (gc_env.r[0] < 0xb ? -1 : 1); // Compare with immediate
Translated bne .L_8000F1B0 to: if (gc_env.cr[0] != 0) goto L_8000F1B0;
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFB0@sda21(r0)']
Translated stw r0 lbl_8001EFB0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB0, gc_env.r[0]); // stw r0, lbl_8001EFB0@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0xc(r29)']
Translated lwz r0 0xc(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r0, 0xC(r29)']
Translated cmpwi r0 0x7 to: gc_env.cr[0] = (gc_env.r[0] == 0x7) ? 0 : (gc_env.r[0] < 0x7 ? -1 : 1); // Compare with immediate
Translated bne .L_8000F1C4 to: if (gc_env.cr[0] != 0) goto L_8000F1C4;
Processing opcode: li, operands: ['r0', '0x7']
Translated li r0 0x7 to: ['gc_env.r[0] = 0x7; // li r0, 0x7']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFB0@sda21(r0)']
Translated stw r0 lbl_8001EFB0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFB0, gc_env.r[0]); // stw r0, lbl_8001EFB0@sda21(r0)']
Processing opcode: li, operands: ['r0', '0xa']
Translated li r0 0xa to: ['gc_env.r[0] = 0xa; // li r0, 0xa']
Processing opcode: stw, operands: ['r0', '0xc(r29)']
Translated stw r0 0xc(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0xC, gc_env.r[0]); // stw r0, 0xC(r29)']
Processing opcode: lwz, operands: ['r12', '0x28(r29)']
Translated lwz r12 0x28(r29) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x28); // lwz r12, 0x28(r29)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000F1E8 to: if (gc_env.cr[0] == 0) goto L_8000F1E8;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r29', '0x0']
Translated addi r4 r29 0x0 to: ['gc_env.r[4] = gc_env.r[29] + 0; // addi r4, r29, 0x0']
Processing opcode: li, operands: ['r3', '-0x3']
Translated li r3 -0x3 to: ['gc_env.r[3] = -0x3; // li r3, -0x3']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated cmplwi r30 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == 0x0) ? 0 : ((uint32_t)gc_env.r[30] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000F204 to: if (gc_env.cr[0] == 0) goto L_8000F204;
Processing opcode: addi, operands: ['r12', 'r30', '0x0']
Translated addi r12 r30 0x0 to: ['gc_env.r[12] = gc_env.r[30] + 0; // addi r12, r30, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r4', 'r29', '0x0']
Translated addi r4 r29 0x0 to: ['gc_env.r[4] = gc_env.r[29] + 0; // addi r4, r29, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl fn_8000E240 to: fn_8000E240();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: lwz, operands: ['r29', '0x14(r1)']
Translated lwz r29 0x14(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r29, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA0@sda21(r0)']
Translated lwz r0 lbl_8001EFA0@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA0); // lwz r0, lbl_8001EFA0@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000F260 to: if (gc_env.cr[0] == 0) goto L_8000F260;
Processing opcode: li, operands: ['r4', '-0x1']
Translated li r4 -0x1 to: ['gc_env.r[4] = -0x1; // li r4, -0x1']
Translated b .L_8000F2A4 to: goto L_8000F2A4;
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF98@sda21(r0)']
Translated lwz r0 lbl_8001EF98@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF98); // lwz r0, lbl_8001EF98@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000F274 to: if (gc_env.cr[0] == 0) goto L_8000F274;
Processing opcode: li, operands: ['r4', '0x8']
Translated li r4 0x8 to: ['gc_env.r[4] = 0x8; // li r4, 0x8']
Translated b .L_8000F2A4 to: goto L_8000F2A4;
Processing opcode: lwz, operands: ['r5', 'lbl_8001EF88@sda21(r0)']
Translated lwz r5 lbl_8001EF88@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r5, lbl_8001EF88@sda21(r0)']
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000F288 to: if (gc_env.cr[0] != 0) goto L_8000F288;
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated b .L_8000F2A4 to: goto L_8000F2A4;
Translated lis r4 lbl_8001CA20@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001CA20 >> 16) & 0xFFFF; // lis r4, lbl_8001CA20@ha']
Processing opcode: addi, operands: ['r0', 'r4', 'lbl_8001CA20@l']
Translated addi r0 r4 lbl_8001CA20@l to: ['gc_env.r[0] = (uint32_t)&lbl_8001CA20; // lis + addi lbl_8001CA20 (completing pattern)']
Translated cmplw r5 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[5] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_8000F2A0 to: if (gc_env.cr[0] != 0) goto L_8000F2A0;
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated b .L_8000F2A4 to: goto L_8000F2A4;
Processing opcode: lwz, operands: ['r4', '0xc(r5)']
Translated lwz r4 0xc(r5) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xC); // lwz r4, 0xC(r5)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Translated cmplwi r0 0xc to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xc) ? 0 : ((uint32_t)gc_env.r[0] < 0xc ? -1 : 1); // Logical compare with immediate
Translated bgt .L_8000F300 to: ['if (gc_env.cr[0] & 0x4) goto L_8000F300; // bgt .L_8000F300']
Translated lis r4 jumptable_8001B2E8@ha to: ['gc_env.r[4] = ((uint32_t)&jumptable_8001B2E8 >> 16) & 0xFFFF; // lis r4, jumptable_8001B2E8@ha']
Processing opcode: addi, operands: ['r4', 'r4', 'jumptable_8001B2E8@l']
Translated addi r4 r4 jumptable_8001B2E8@l to: ['gc_env.r[4] = (uint32_t)&jumptable_8001B2E8; // lis + addi jumptable_8001B2E8 (completing pattern)']
Translated slwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] << 2; // slwi r0, r0, 2']
Translated lwzx r0 r4 r0 to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + gc_env.r[0]); // lwzx r0, r4, r0']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bctr  to: ['return gc_env.ctr; // bctr']
Processing opcode: li, operands: ['r31', '0x1']
Translated li r31 0x1 to: ['gc_env.r[31] = 0x1; // li r31, 0x1']
Translated b .L_8000F300 to: goto L_8000F300;
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Translated b .L_8000F300 to: goto L_8000F300;
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: addi, operands: ['r4', 'r4', '0x6000']
Translated addi r4 r4 0x6000 to: ['gc_env.r[4] += 24576; // addi r4, r4, 0x6000']
Processing opcode: lwz, operands: ['r4', '0x4(r4)']
Translated lwz r4 0x4(r4) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwz r4, 0x4(r4)']
Translated extrwi. r0 r4 1 29 to: ['gc_env.r[0] = (gc_env.r[4] >> 2) & 0x1; // extrwi r0, r4, 1, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_8000F2F4 to: if (gc_env.cr[0] != 0) goto L_8000F2F4;
Translated clrlwi. r0 r4 31 to: ['gc_env.r[0] = gc_env.r[4] & 0x1; // clrlwi r0, r4, 31']
Translated beq .L_8000F2FC to: if (gc_env.cr[0] == 0) goto L_8000F2FC;
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Translated b .L_8000F300 to: goto L_8000F300;
Processing opcode: li, operands: ['r31', '0x1']
Translated li r31 0x1 to: ['gc_env.r[31] = 0x1; // li r31, 0x1']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Processing opcode: stw, operands: ['r29', '0x14(r1)']
Translated stw r29 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stw r29, 0x14(r1)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated mr r29 r3 to: gc_env.r[29] = gc_env.r[3]; // Move register
Translated bl fn_8000F438 to: fn_8000F438();
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFA8@sda21(r0)']
Translated lwz r0 lbl_8001EFA8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFA8); // lwz r0, lbl_8001EFA8@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000F358 to: if (gc_env.cr[0] == 0) goto L_8000F358;
Processing opcode: stw, operands: ['r30', 'lbl_8001EFAC@sda21(r0)']
Translated stw r30 lbl_8001EFAC@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFAC, gc_env.r[30]); // stw r30, lbl_8001EFAC@sda21(r0)']
Translated b .L_8000F414 to: goto L_8000F414;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000F36C to: if (gc_env.cr[0] == 0) goto L_8000F36C;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x28(r3)']
Translated stw r0 0x28(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x28, gc_env.r[0]); // stw r0, 0x28(r3)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF88@sda21(r0)']
Translated lwz r0 lbl_8001EF88@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r0, lbl_8001EF88@sda21(r0)']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Processing opcode: stw, operands: ['r4', 'lbl_8001EF94@sda21(r0)']
Translated stw r4 lbl_8001EF94@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF94, gc_env.r[4]); // stw r4, lbl_8001EF94@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000F390 to: if (gc_env.cr[0] != 0) goto L_8000F390;
Processing opcode: stw, operands: ['r4', 'lbl_8001EF98@sda21(r0)']
Translated stw r4 lbl_8001EF98@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF98, gc_env.r[4]); // stw r4, lbl_8001EF98@sda21(r0)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated b .L_8000F3A0 to: goto L_8000F3A0;
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl fn_8000EFC0 to: fn_8000EFC0();
Translated bl fn_8000F4D8 to: fn_8000F4D8();
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000F398 to: if (gc_env.cr[0] != 0) goto L_8000F398;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EF88@sda21(r0)']
Translated lwz r3 lbl_8001EF88@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF88); // lwz r3, lbl_8001EF88@sda21(r0)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000F3C4 to: if (gc_env.cr[0] == 0) goto L_8000F3C4;
Translated mr r4 r30 to: gc_env.r[4] = gc_env.r[30]; // Move register
Translated bl fn_8000EFC0 to: fn_8000EFC0();
Translated b .L_8000F3E0 to: goto L_8000F3E0;
Translated cmplwi r30 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == 0x0) ? 0 : ((uint32_t)gc_env.r[30] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000F3E0 to: if (gc_env.cr[0] == 0) goto L_8000F3E0;
Processing opcode: addi, operands: ['r12', 'r30', '0x0']
Translated addi r12 r30 0x0 to: ['gc_env.r[12] = gc_env.r[30] + 0; // addi r12, r30, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: stw, operands: ['r4', 'lbl_8001EF94@sda21(r0)']
Translated stw r4 lbl_8001EF94@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF94, gc_env.r[4]); // stw r4, lbl_8001EF94@sda21(r0)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Processing opcode: lwz, operands: ['r0', 'lbl_8001EF98@sda21(r0)']
Translated lwz r0 lbl_8001EF98@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EF98); // lwz r0, lbl_8001EF98@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000F404 to: if (gc_env.cr[0] == 0) goto L_8000F404;
Processing opcode: stw, operands: ['r4', 'lbl_8001EF98@sda21(r0)']
Translated stw r4 lbl_8001EF98@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EF98, gc_env.r[4]); // stw r4, lbl_8001EF98@sda21(r0)']
Translated bl fn_8000E240 to: fn_8000E240();
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: lwz, operands: ['r29', '0x14(r1)']
Translated lwz r29 0x14(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r29, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r3 lbl_8001CA78@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CA78 >> 16) & 0xFFFF; // lis r3, lbl_8001CA78@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001CA78@l']
Translated addi r3 r3 lbl_8001CA78@l to: ['gc_env.r[3] = (uint32_t)&lbl_8001CA78; // lis + addi lbl_8001CA78 (completing pattern)']
Processing opcode: stw, operands: ['r3', '0x0(r3)']
Translated stw r3 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[3]); // stw r3, (r3)']
Processing opcode: addi, operands: ['r5', 'r3', '0x8']
Translated addi r5 r3 0x8 to: ['gc_env.r[5] = gc_env.r[3] + 8; // addi r5, r3, 0x8']
Processing opcode: addi, operands: ['r4', 'r3', '0x10']
Translated addi r4 r3 0x10 to: ['gc_env.r[4] = gc_env.r[3] + 16; // addi r4, r3, 0x10']
Processing opcode: stw, operands: ['r3', '0x4(r3)']
Translated stw r3 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[3]); // stw r3, 0x4(r3)']
Processing opcode: addi, operands: ['r3', 'r3', '0x18']
Translated addi r3 r3 0x18 to: ['gc_env.r[3] += 24; // addi r3, r3, 0x18']
Processing opcode: stw, operands: ['r5', '0x0(r5)']
Translated stw r5 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[5]); // stw r5, (r5)']
Processing opcode: stw, operands: ['r5', '0x4(r5)']
Translated stw r5 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[5]); // stw r5, 0x4(r5)']
Processing opcode: stw, operands: ['r4', '0x0(r4)']
Translated stw r4 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[4]); // stw r4, (r4)']
Processing opcode: stw, operands: ['r4', '0x4(r4)']
Translated stw r4 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[4]); // stw r4, 0x4(r4)']
Processing opcode: stw, operands: ['r3', '0x0(r3)']
Translated stw r3 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[3]); // stw r3, (r3)']
Processing opcode: stw, operands: ['r3', '0x4(r3)']
Translated stw r3 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[3]); // stw r3, 0x4(r3)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: addi, operands: ['r31', 'r4', '0x0']
Translated addi r31 r4 0x0 to: ['gc_env.r[31] = gc_env.r[4] + 0; // addi r31, r4, 0x0']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated lis r4 lbl_8001CA78@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001CA78 >> 16) & 0xFFFF; // lis r4, lbl_8001CA78@ha']
Translated slwi r5 r30 3 to: ['gc_env.r[5] = gc_env.r[30] << 3; // slwi r5, r30, 3']
Processing opcode: addi, operands: ['r0', 'r4', 'lbl_8001CA78@l']
Translated addi r0 r4 lbl_8001CA78@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&lbl_8001CA78 & 0xFFFF); // addi r0, r4, lbl_8001CA78@l']
Processing opcode: add, operands: ['r5', 'r0', 'r5']
Translated add r5 r0 r5 to: ['gc_env.r[5] = gc_env.r[0] + gc_env.r[5]; // add r5, r0, r5']
Processing opcode: lwz, operands: ['r4', '0x4(r5)']
Translated lwz r4 0x4(r5) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x4); // lwz r4, 0x4(r5)']
Processing opcode: stw, operands: ['r31', '0x0(r4)']
Translated stw r31 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[31]); // stw r31, (r4)']
Processing opcode: lwz, operands: ['r0', '0x4(r5)']
Translated lwz r0 0x4(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x4); // lwz r0, 0x4(r5)']
Processing opcode: stw, operands: ['r0', '0x4(r31)']
Translated stw r0 0x4(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x4, gc_env.r[0]); // stw r0, 0x4(r31)']
Processing opcode: stw, operands: ['r5', '0x0(r31)']
Translated stw r5 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[5]); // stw r5, (r31)']
Processing opcode: stw, operands: ['r31', '0x4(r5)']
Translated stw r31 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[31]); // stw r31, 0x4(r5)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: li, operands: ['r0', '0x4']
Translated li r0 0x4 to: ['gc_env.r[0] = 0x4; // li r0, 0x4']
Translated lis r4 lbl_8001CA78@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001CA78 >> 16) & 0xFFFF; // lis r4, lbl_8001CA78@ha']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Processing opcode: addi, operands: ['r4', 'r4', 'lbl_8001CA78@l']
Translated addi r4 r4 lbl_8001CA78@l to: ['gc_env.r[4] = gc_env.r[4] + ((uint32_t)&lbl_8001CA78 & 0xFFFF); // addi r4, r4, lbl_8001CA78@l']
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated cmplw r0 r4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[4]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[4] ? -1 : 1); // Logical compare word
Translated beq .L_8000F550 to: if (gc_env.cr[0] == 0) goto L_8000F550;
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated lis r4 lbl_8001CA78@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001CA78 >> 16) & 0xFFFF; // lis r4, lbl_8001CA78@ha']
Translated slwi r5 r31 3 to: ['gc_env.r[5] = gc_env.r[31] << 3; // slwi r5, r31, 3']
Processing opcode: addi, operands: ['r0', 'r4', 'lbl_8001CA78@l']
Translated addi r0 r4 lbl_8001CA78@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&lbl_8001CA78 & 0xFFFF); // addi r0, r4, lbl_8001CA78@l']
Processing opcode: add, operands: ['r5', 'r0', 'r5']
Translated add r5 r0 r5 to: ['gc_env.r[5] = gc_env.r[0] + gc_env.r[5]; // add r5, r0, r5']
Processing opcode: lwz, operands: ['r31', '0x0(r5)']
Translated lwz r31 0x0(r5) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r31, (r5)']
Processing opcode: lwz, operands: ['r0', '0x0(r31)']
Translated lwz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r0, (r31)']
Processing opcode: stw, operands: ['r0', '0x0(r5)']
Translated stw r0 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stw r0, (r5)']
Processing opcode: lwz, operands: ['r4', '0x0(r31)']
Translated lwz r4 0x0(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r4, (r31)']
Processing opcode: stw, operands: ['r5', '0x4(r4)']
Translated stw r5 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[5]); // stw r5, 0x4(r4)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x0(r31)']
Translated stw r0 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stw r0, (r31)']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: stw, operands: ['r0', '0x4(r31)']
Translated stw r0 0x4(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x4, gc_env.r[0]); // stw r0, 0x4(r31)']
Translated b .L_8000F564 to: goto L_8000F564;
Processing opcode: addi, operands: ['r4', 'r4', '0x8']
Translated addi r4 r4 0x8 to: ['gc_env.r[4] += 8; // addi r4, r4, 0x8']
Processing opcode: addi, operands: ['r31', 'r31', '0x1']
Translated addi r31 r31 0x1 to: ['gc_env.r[31] += 1; // addi r31, r31, 0x1']
Translated bdnz .L_8000F500 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8000F500;']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: li, operands: ['r0', '0x4']
Translated li r0 0x4 to: ['gc_env.r[0] = 0x4; // li r0, 0x4']
Translated lis r4 lbl_8001CA78@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001CA78 >> 16) & 0xFFFF; // lis r4, lbl_8001CA78@ha']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Processing opcode: addi, operands: ['r4', 'r4', 'lbl_8001CA78@l']
Translated addi r4 r4 lbl_8001CA78@l to: ['gc_env.r[4] = gc_env.r[4] + ((uint32_t)&lbl_8001CA78 & 0xFFFF); // addi r4, r4, lbl_8001CA78@l']
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated cmplw r0 r4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[4]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[4] ? -1 : 1); // Logical compare word
Translated beq .L_8000F5B0 to: if (gc_env.cr[0] == 0) goto L_8000F5B0;
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated b .L_8000F5C0 to: goto L_8000F5C0;
Processing opcode: addi, operands: ['r4', 'r4', '0x8']
Translated addi r4 r4 0x8 to: ['gc_env.r[4] += 8; // addi r4, r4, 0x8']
Translated bdnz .L_8000F598 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8000F598;']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r4', '0x4(r31)']
Translated lwz r4 0x4(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x4); // lwz r4, 0x4(r31)']
Processing opcode: lwz, operands: ['r5', '0x0(r31)']
Translated lwz r5 0x0(r31) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r5, (r31)']
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000F600 to: if (gc_env.cr[0] == 0) goto L_8000F600;
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000F60C to: if (gc_env.cr[0] != 0) goto L_8000F60C;
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8000F61C to: goto L_8000F61C;
Processing opcode: stw, operands: ['r5', '0x0(r4)']
Translated stw r5 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[5]); // stw r5, (r4)']
Processing opcode: stw, operands: ['r4', '0x4(r5)']
Translated stw r4 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[4]); // stw r4, 0x4(r5)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Translated lis r4 lbl_8001B320@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001B320 >> 16) & 0xFFFF; // lis r4, lbl_8001B320@ha']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Processing opcode: addi, operands: ['r4', 'r4', 'lbl_8001B320@l']
Translated addi r4 r4 lbl_8001B320@l to: ['gc_env.r[4] = gc_env.r[4] + ((uint32_t)&lbl_8001B320 & 0xFFFF); // addi r4, r4, lbl_8001B320@l']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_8000F658 to: if (gc_env.cr[0] != 0) goto L_8000F658;
Translated clrlwi r3 r5 24 to: ['gc_env.r[3] = gc_env.r[5] & 0xFF; // clrlwi r3, r5, 24']
Translated blr  to: return;
Processing opcode: lwzu, operands: ['r0', '0x4(r4)']
Translated lwzu r0 0x4(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwzu r0, 0x4(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x4;']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_8000F670 to: if (gc_env.cr[0] != 0) goto L_8000F670;
Translated clrlwi r3 r5 24 to: ['gc_env.r[3] = gc_env.r[5] & 0xFF; // clrlwi r3, r5, 24']
Translated blr  to: return;
Processing opcode: lwzu, operands: ['r0', '0x4(r4)']
Translated lwzu r0 0x4(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwzu r0, 0x4(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x4;']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_8000F688 to: if (gc_env.cr[0] != 0) goto L_8000F688;
Translated clrlwi r3 r5 24 to: ['gc_env.r[3] = gc_env.r[5] & 0xFF; // clrlwi r3, r5, 24']
Translated blr  to: return;
Processing opcode: lwzu, operands: ['r0', '0x4(r4)']
Translated lwzu r0 0x4(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwzu r0, 0x4(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x4;']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_8000F6A0 to: if (gc_env.cr[0] != 0) goto L_8000F6A0;
Translated clrlwi r3 r5 24 to: ['gc_env.r[3] = gc_env.r[5] & 0xFF; // clrlwi r3, r5, 24']
Translated blr  to: return;
Processing opcode: lwzu, operands: ['r0', '0x4(r4)']
Translated lwzu r0 0x4(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwzu r0, 0x4(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x4;']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_8000F6B8 to: if (gc_env.cr[0] != 0) goto L_8000F6B8;
Translated clrlwi r3 r5 24 to: ['gc_env.r[3] = gc_env.r[5] & 0xFF; // clrlwi r3, r5, 24']
Translated blr  to: return;
Processing opcode: lwzu, operands: ['r0', '0x4(r4)']
Translated lwzu r0 0x4(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwzu r0, 0x4(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x4;']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_8000F6D0 to: if (gc_env.cr[0] != 0) goto L_8000F6D0;
Translated clrlwi r3 r5 24 to: ['gc_env.r[3] = gc_env.r[5] & 0xFF; // clrlwi r3, r5, 24']
Translated blr  to: return;
Processing opcode: lwzu, operands: ['r0', '0x4(r4)']
Translated lwzu r0 0x4(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwzu r0, 0x4(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x4;']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_8000F6E8 to: if (gc_env.cr[0] != 0) goto L_8000F6E8;
Translated clrlwi r3 r5 24 to: ['gc_env.r[3] = gc_env.r[5] & 0xFF; // clrlwi r3, r5, 24']
Translated blr  to: return;
Processing opcode: lwzu, operands: ['r0', '0x4(r4)']
Translated lwzu r0 0x4(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwzu r0, 0x4(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x4;']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_8000F700 to: if (gc_env.cr[0] != 0) goto L_8000F700;
Translated clrlwi r3 r5 24 to: ['gc_env.r[3] = gc_env.r[5] & 0xFF; // clrlwi r3, r5, 24']
Translated blr  to: return;
Processing opcode: lwzu, operands: ['r0', '0x4(r4)']
Translated lwzu r0 0x4(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwzu r0, 0x4(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x4;']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_8000F718 to: if (gc_env.cr[0] != 0) goto L_8000F718;
Translated clrlwi r3 r5 24 to: ['gc_env.r[3] = gc_env.r[5] & 0xFF; // clrlwi r3, r5, 24']
Translated blr  to: return;
Processing opcode: addi, operands: ['r4', 'r4', '0x4']
Translated addi r4 r4 0x4 to: ['gc_env.r[4] += 4; // addi r4, r4, 0x4']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated bdnz .L_8000F644 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8000F644;']
Translated lis r4 0x10 to: ['gc_env.r[4] = 16 << 16; // lis r4, 0x10']
Translated cmplw r3 r4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[4]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[4] ? -1 : 1); // Logical compare word
Translated blt .L_8000F744 to: ['if (gc_env.cr[0] & 0x8) goto L_8000F744; // blt .L_8000F744']
Processing opcode: addi, operands: ['r0', 'r4', '0x8']
Translated addi r0 r4 0x8 to: ['gc_env.r[0] = gc_env.r[4] + 8; // addi r0, r4, 0x8']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bgt .L_8000F744 to: ['if (gc_env.cr[0] & 0x4) goto L_8000F744; // bgt .L_8000F744']
Processing opcode: li, operands: ['r3', '0x11']
Translated li r3 0x11 to: ['gc_env.r[3] = 0x11; // li r3, 0x11']
Translated blr  to: return;
Processing opcode: li, operands: ['r3', '0x1d']
Translated li r3 0x1d to: ['gc_env.r[3] = 0x1d; // li r3, 0x1d']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: subis, operands: ['r0', 'r3', '0x123']
Translated subis r0 r3 0x123 to: ['gc_env.r[0] = gc_env.r[3] - (291 << 16); // subis r0, r3, 291']
Translated cmplwi r0 0x4567 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x4567) ? 0 : ((uint32_t)gc_env.r[0] < 0x4567 ? -1 : 1); // Logical compare with immediate
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated bne .L_8000F770 to: if (gc_env.cr[0] != 0) goto L_8000F770;
Processing opcode: li, operands: ['r31', '0xff']
Translated li r31 0xff to: ['gc_env.r[31] = 0xff; // li r31, 0xff']
Translated b .L_8000F7A4 to: goto L_8000F7A4;
Translated cmplwi r0 0x4568 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x4568) ? 0 : ((uint32_t)gc_env.r[0] < 0x4568 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000F780 to: if (gc_env.cr[0] != 0) goto L_8000F780;
Processing opcode: li, operands: ['r31', '0xfe']
Translated li r31 0xfe to: ['gc_env.r[31] = 0xfe; // li r31, 0xfe']
Translated b .L_8000F7A4 to: goto L_8000F7A4;
Translated srwi r31 r3 24 to: ['gc_env.r[31] = gc_env.r[3] >> 24; // srwi r31, r3, 24']
Translated clrlwi r3 r3 8 to: ['gc_env.r[3] = gc_env.r[3] & 0xFFFFFF; // clrlwi r3, r3, 8']
Translated bl fn_8000F630 to: fn_8000F630();
Translated cmplwi r31 0x6 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == 0x6) ? 0 : ((uint32_t)gc_env.r[31] < 0x6 ? -1 : 1); // Logical compare with immediate
Translated blt .L_8000F798 to: ['if (gc_env.cr[0] & 0x8) goto L_8000F798; // blt .L_8000F798']
Processing opcode: li, operands: ['r31', '0x6']
Translated li r31 0x6 to: ['gc_env.r[31] = 0x6; // li r31, 0x6']
Processing opcode: mulli, operands: ['r0', 'r31', '0x1e']
Translated mulli r0 r31 0x1e to: ['gc_env.r[0] = gc_env.r[31] * 30; // mulli r0, r31, 30']
Translated clrlwi r3 r3 24 to: ['gc_env.r[3] = gc_env.r[3] & 0xFF; // clrlwi r3, r3, 24']
Processing opcode: add, operands: ['r31', 'r3', 'r0']
Translated add r31 r3 r0 to: ['gc_env.r[31] = gc_env.r[3] + gc_env.r[0]; // add r31, r3, r0']
Translated bl fn_80008D18 to: fn_80008D18();
Processing opcode: stb, operands: ['r31', '0x24(r3)']
Translated stb r31 0x24(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x24, gc_env.r[31]); // stb r31, 0x24(r3)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated bl fn_800090A0 to: fn_800090A0();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: addi, operands: ['r31', 'r4', '0x0']
Translated addi r31 r4 0x0 to: ['gc_env.r[31] = gc_env.r[4] + 0; // addi r31, r4, 0x0']
Translated ble .L_8000F85C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8000F85C; // ble .L_8000F85C']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFD0@sda21(r0)']
Translated lwz r0 lbl_8001EFD0@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFD0); // lwz r0, lbl_8001EFD0@sda21(r0)']
Translated cmpwi r0 0x1 to: gc_env.cr[0] = (gc_env.r[0] == 0x1) ? 0 : (gc_env.r[0] < 0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_8000F828 to: if (gc_env.cr[0] == 0) goto L_8000F828;
Translated bge .L_8000F88C to: if (gc_env.cr[0] >= 0) goto L_8000F88C;
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bge .L_8000F800 to: if (gc_env.cr[0] >= 0) goto L_8000F800;
Translated b .L_8000F88C to: goto L_8000F88C;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: lwz, operands: ['r4', 'lbl_8001EFD4@sda21(r0)']
Translated lwz r4 lbl_8001EFD4@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFD4); // lwz r4, lbl_8001EFD4@sda21(r0)']
Translated lis r3 fn_8000F7C8@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000F7C8 >> 16) & 0xFFFF; // lis r3, fn_8000F7C8@ha']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFD0@sda21(r0)']
Translated stw r0 lbl_8001EFD0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFD0, gc_env.r[0]); // stw r0, lbl_8001EFD0@sda21(r0)']
Processing opcode: addi, operands: ['r7', 'r3', 'fn_8000F7C8@l']
Translated addi r7 r3 fn_8000F7C8@l to: ['gc_env.r[7] = gc_env.r[3] + ((uint32_t)&fn_8000F7C8 & 0xFFFF); // addi r7, r3, fn_8000F7C8@l']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r5', '0x20']
Translated li r5 0x20 to: ['gc_env.r[5] = 0x20; // li r5, 0x20']
Processing opcode: li, operands: ['r6', '0x420']
Translated li r6 0x420 to: ['gc_env.r[6] = 0x420; // li r6, 0x420']
Translated bl fn_8000ED1C to: fn_8000ED1C();
Translated b .L_8000F88C to: goto L_8000F88C;
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Processing opcode: lwz, operands: ['r6', 'lbl_8001EFD4@sda21(r0)']
Translated lwz r6 lbl_8001EFD4@sda21(r0) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFD4); // lwz r6, lbl_8001EFD4@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFD0@sda21(r0)']
Translated stw r0 lbl_8001EFD0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFD0, gc_env.r[0]); // stw r0, lbl_8001EFD0@sda21(r0)']
Translated lis r3 fn_8000F7C8@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000F7C8 >> 16) & 0xFFFF; // lis r3, fn_8000F7C8@ha']
Processing opcode: addi, operands: ['r7', 'r3', 'fn_8000F7C8@l']
Translated addi r7 r3 fn_8000F7C8@l to: ['gc_env.r[7] = (uint32_t)&fn_8000F7C8; // lis + addi fn_8000F7C8 (completing pattern)']
Processing opcode: lwz, operands: ['r5', '0x8(r6)']
Translated lwz r5 0x8(r6) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x8); // lwz r5, 0x8(r6)']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r4', '0x10(r6)']
Translated lwz r4 0x10(r6) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x10); // lwz r4, 0x10(r6)']
Processing opcode: addi, operands: ['r0', 'r5', '0x1f']
Translated addi r0 r5 0x1f to: ['gc_env.r[0] = gc_env.r[5] + 31; // addi r0, r5, 0x1f']
Processing opcode: lwz, operands: ['r6', '0x4(r6)']
Translated lwz r6 0x4(r6) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x4); // lwz r6, 0x4(r6)']
Translated clrrwi r5 r0 5 to: gc_env.r[5] = gc_env.r[0] & ~((1ULL << 5) - 1); // Clear rightmost 5 bits
Translated bl fn_8000ED1C to: fn_8000ED1C();
Translated b .L_8000F88C to: goto L_8000F88C;
Translated cmpwi r3 -0x1 to: gc_env.cr[0] = (gc_env.r[3] == -0x1) ? 0 : (gc_env.r[3] < -0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_8000F88C to: if (gc_env.cr[0] == 0) goto L_8000F88C;
Translated cmpwi r3 -0x4 to: gc_env.cr[0] = (gc_env.r[3] == -0x4) ? 0 : (gc_env.r[3] < -0x4 ? -1 : 1); // Compare with immediate
Translated bne .L_8000F88C to: if (gc_env.cr[0] != 0) goto L_8000F88C;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFD0@sda21(r0)']
Translated stw r0 lbl_8001EFD0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFD0, gc_env.r[0]); // stw r0, lbl_8001EFD0@sda21(r0)']
Translated bl fn_8000EEC0 to: fn_8000EEC0();
Translated lis r3 fn_8000F7C8@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000F7C8 >> 16) & 0xFFFF; // lis r3, fn_8000F7C8@ha']
Processing opcode: lwz, operands: ['r4', 'lbl_8001EFD8@sda21(r0)']
Translated lwz r4 lbl_8001EFD8@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFD8); // lwz r4, lbl_8001EFD8@sda21(r0)']
Processing opcode: addi, operands: ['r5', 'r3', 'fn_8000F7C8@l']
Translated addi r5 r3 fn_8000F7C8@l to: ['gc_env.r[5] = gc_env.r[3] + ((uint32_t)&fn_8000F7C8 & 0xFFFF); // addi r5, r3, fn_8000F7C8@l']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Translated bl fn_8000EDEC to: fn_8000EDEC();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 lbl_8001B368@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001B368 >> 16) & 0xFFFF; // lis r3, lbl_8001B368@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x60(r1)']
Translated stwu r1 -0x60(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x60, gc_env.r[1]); // stwu r1, -0x60(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x60;']
Processing opcode: stw, operands: ['r31', '0x5c(r1)']
Translated stw r31 0x5c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x5C, gc_env.r[31]); // stw r31, 0x5C(r1)']
Processing opcode: addi, operands: ['r31', 'r3', 'lbl_8001B368@l']
Translated addi r31 r3 lbl_8001B368@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&lbl_8001B368 & 0xFFFF); // addi r31, r3, lbl_8001B368@l']
Processing opcode: stw, operands: ['r30', '0x58(r1)']
Translated stw r30 0x58(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x58, gc_env.r[30]); // stw r30, 0x58(r1)']
Processing opcode: stw, operands: ['r29', '0x54(r1)']
Translated stw r29 0x54(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x54, gc_env.r[29]); // stw r29, 0x54(r1)']
Translated bl OSGetArenaHi to: OSGetArenaHi();
Translated lis r3 lbl_8001CA98@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CA98 >> 16) & 0xFFFF; // lis r3, lbl_8001CA98@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001CA98@l']
Translated addi r3 r3 lbl_8001CA98@l to: ['gc_env.r[3] = (uint32_t)&lbl_8001CA98; // lis + addi lbl_8001CA98 (completing pattern)']
Processing opcode: addi, operands: ['r4', 'r1', '0x2b']
Translated addi r4 r1 0x2b to: ['gc_env.r[4] = gc_env.r[1] + 43; // addi r4, r1, 0x2b']
Processing opcode: addi, operands: ['r0', 'r3', '0x1f']
Translated addi r0 r3 0x1f to: ['gc_env.r[0] = gc_env.r[3] + 31; // addi r0, r3, 0x1f']
Translated clrrwi r3 r4 5 to: gc_env.r[3] = gc_env.r[4] & ~((1ULL << 5) - 1); // Clear rightmost 5 bits
Translated clrrwi r0 r0 5 to: gc_env.r[0] = gc_env.r[0] & ~((1ULL << 5) - 1); // Clear rightmost 5 bits
Processing opcode: stw, operands: ['r3', 'lbl_8001EFD8@sda21(r0)']
Translated stw r3 lbl_8001EFD8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFD8, gc_env.r[3]); // stw r3, lbl_8001EFD8@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFD4@sda21(r0)']
Translated stw r0 lbl_8001EFD4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFD4, gc_env.r[0]); // stw r0, lbl_8001EFD4@sda21(r0)']
Translated bl fn_8000EEC0 to: fn_8000EEC0();
Translated lis r3 lbl_8001CAD8@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CAD8 >> 16) & 0xFFFF; // lis r3, lbl_8001CAD8@ha']
Processing opcode: lwz, operands: ['r4', 'lbl_8001EFD8@sda21(r0)']
Translated lwz r4 lbl_8001EFD8@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFD8); // lwz r4, lbl_8001EFD8@sda21(r0)']
Translated lis r5 fn_8000F7C8@ha to: ['gc_env.r[5] = ((uint32_t)&fn_8000F7C8 >> 16) & 0xFFFF; // lis r5, fn_8000F7C8@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001CAD8@l']
Translated addi r3 r3 lbl_8001CAD8@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&lbl_8001CAD8 & 0xFFFF); // addi r3, r3, lbl_8001CAD8@l']
Processing opcode: addi, operands: ['r5', 'r5', 'fn_8000F7C8@l']
Translated addi r5 r5 fn_8000F7C8@l to: ['gc_env.r[5] = gc_env.r[5] + ((uint32_t)&fn_8000F7C8 & 0xFFFF); // addi r5, r5, fn_8000F7C8@l']
Translated bl fn_8000EDEC to: fn_8000EDEC();
Translated bl fn_8000EF04 to: fn_8000EF04();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8000F900 to: if (gc_env.cr[0] != 0) goto L_8000F900;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EFD4@sda21(r0)']
Translated lwz r3 lbl_8001EFD4@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFD4); // lwz r3, lbl_8001EFD4@sda21(r0)']
Translated lis r29 0x8000 to: ['gc_env.r[29] = -32768 << 16; // lis r29, 0x8000']
Translated lis r30 0x8000 to: ['gc_env.r[30] = -32768 << 16; // lis r30, 0x8000']
Processing opcode: lwz, operands: ['r0', '0x10(r3)']
Translated lwz r0 0x10(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x10); // lwz r0, 0x10(r3)']
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Processing opcode: li, operands: ['r5', '0x20']
Translated li r5 0x20 to: ['gc_env.r[5] = 0x20; // li r5, 0x20']
Processing opcode: stw, operands: ['r0', '0x38(r30)']
Translated stw r0 0x38(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x38, gc_env.r[0]); // stw r0, 0x38(r30)']
Processing opcode: lwz, operands: ['r4', 'lbl_8001EFD4@sda21(r0)']
Translated lwz r4 lbl_8001EFD4@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFD4); // lwz r4, lbl_8001EFD4@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0xc(r4)']
Translated lwz r0 0xc(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xC); // lwz r0, 0xC(r4)']
Processing opcode: stw, operands: ['r0', '0x3c(r30)']
Translated stw r0 0x3c(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x3C, gc_env.r[0]); // stw r0, 0x3C(r30)']
Processing opcode: lwz, operands: ['r4', 'lbl_8001EFD8@sda21(r0)']
Translated lwz r4 lbl_8001EFD8@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFD8); // lwz r4, lbl_8001EFD8@sda21(r0)']
Translated bl memcpy to: memcpy();
Processing opcode: li, operands: ['r3', 'lbl_8001EE28@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: lbz, operands: ['r4', '0x0(r29)']
Translated lbz r4 0x0(r29) to: ['gc_env.r[4] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x0); // lbz r4, 0x0(r29)']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lbz, operands: ['r5', '0x1(r29)']
Translated lbz r5 0x1(r29) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x1); // lbz r5, 0x1(r29)']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: lbz, operands: ['r6', '0x2(r29)']
Translated lbz r6 0x2(r29) to: ['gc_env.r[6] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x2); // lbz r6, 0x2(r29)']
Processing opcode: lbz, operands: ['r7', '0x3(r29)']
Translated lbz r7 0x3(r29) to: ['gc_env.r[7] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x3); // lbz r7, 0x3(r29)']
Translated extsb r4 r4 to: ['gc_env.r[4] = (int32_t)(int8_t)(gc_env.r[4] & 0xFF); // extsb r4, r4']
Translated extsb r5 r5 to: ['gc_env.r[5] = (int32_t)(int8_t)(gc_env.r[5] & 0xFF); // extsb r5, r5']
Translated extsb r6 r6 to: ['gc_env.r[6] = (int32_t)(int8_t)(gc_env.r[6] & 0xFF); // extsb r6, r6']
Translated extsb r7 r7 to: ['gc_env.r[7] = (int32_t)(int8_t)(gc_env.r[7] & 0xFF); // extsb r7, r7']
Translated bl OSReport to: OSReport();
Processing opcode: lbz, operands: ['r4', '0x4(r29)']
Translated lbz r4 0x4(r29) to: ['gc_env.r[4] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x4); // lbz r4, 0x4(r29)']
Processing opcode: addi, operands: ['r3', 'r31', '0x1c']
Translated addi r3 r31 0x1c to: ['gc_env.r[3] = gc_env.r[31] + 28; // addi r3, r31, 0x1c']
Processing opcode: lbz, operands: ['r5', '0x5(r29)']
Translated lbz r5 0x5(r29) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x5); // lbz r5, 0x5(r29)']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated extsb r4 r4 to: ['gc_env.r[4] = (int32_t)(int8_t)(gc_env.r[4] & 0xFF); // extsb r4, r4']
Translated extsb r5 r5 to: ['gc_env.r[5] = (int32_t)(int8_t)(gc_env.r[5] & 0xFF); // extsb r5, r5']
Translated bl OSReport to: OSReport();
Processing opcode: lbz, operands: ['r4', '0x6(r29)']
Translated lbz r4 0x6(r29) to: ['gc_env.r[4] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x6); // lbz r4, 0x6(r29)']
Processing opcode: addi, operands: ['r3', 'r31', '0x34']
Translated addi r3 r31 0x34 to: ['gc_env.r[3] = gc_env.r[31] + 52; // addi r3, r31, 0x34']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: lbz, operands: ['r4', '0x7(r29)']
Translated lbz r4 0x7(r29) to: ['gc_env.r[4] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x7); // lbz r4, 0x7(r29)']
Processing opcode: addi, operands: ['r3', 'r31', '0x48']
Translated addi r3 r31 0x48 to: ['gc_env.r[3] = gc_env.r[31] + 72; // addi r3, r31, 0x48']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: lbz, operands: ['r0', '0x8(r30)']
Translated lbz r0 0x8(r30) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[30] + 0x8); // lbz r0, 0x8(r30)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000F9C4 to: if (gc_env.cr[0] != 0) goto L_8000F9C4;
Processing opcode: li, operands: ['r4', 'lbl_8001EE2C@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Translated b .L_8000F9C8 to: goto L_8000F9C8;
Processing opcode: li, operands: ['r4', 'lbl_8001EE30@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: addi, operands: ['r3', 'r31', '0x5c']
Translated addi r3 r31 0x5c to: ['gc_env.r[3] = gc_env.r[31] + 92; // addi r3, r31, 0x5c']
Translated bl OSReport to: OSReport();
Processing opcode: li, operands: ['r3', 'lbl_8001EE28@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: lwz, operands: ['r3', 'lbl_8001EFD4@sda21(r0)']
Translated lwz r3 lbl_8001EFD4@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFD4); // lwz r3, lbl_8001EFD4@sda21(r0)']
Processing opcode: lwz, operands: ['r3', '0x10(r3)']
Translated lwz r3 0x10(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x10); // lwz r3, 0x10(r3)']
Translated bl OSSetArenaHi to: OSSetArenaHi();
Processing opcode: lwz, operands: ['r0', '0x64(r1)']
Translated lwz r0 0x64(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x64); // lwz r0, 0x64(r1)']
Processing opcode: lwz, operands: ['r31', '0x5c(r1)']
Translated lwz r31 0x5c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x5C); // lwz r31, 0x5C(r1)']
Processing opcode: lwz, operands: ['r30', '0x58(r1)']
Translated lwz r30 0x58(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x58); // lwz r30, 0x58(r1)']
Processing opcode: lwz, operands: ['r29', '0x54(r1)']
Translated lwz r29 0x54(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x54); // lwz r29, 0x54(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x60']
Translated addi r1 r1 0x60 to: ['gc_env.r[1] += 96; // addi r1, r1, 0x60']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r5', 'r3', '0x2000']
Translated addi r5 r3 0x2000 to: ['gc_env.r[5] = gc_env.r[3] + 8192; // addi r5, r3, 0x2000']
Translated lis r3 lbl_8001CB08@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CB08 >> 16) & 0xFFFF; // lis r3, lbl_8001CB08@ha']
Processing opcode: stwu, operands: ['r1', '-0x2f8(r1)']
Translated stwu r1 -0x2f8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x2F8, gc_env.r[1]); // stwu r1, -0x2F8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x2F8;']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated stmw r27 0x2e4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2E4, gc_env.r[27]); // stmw r27, 0x2E4(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2E8, gc_env.r[28]); // stmw r27, 0x2E4(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2EC, gc_env.r[29]); // stmw r27, 0x2E4(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2F0, gc_env.r[30]); // stmw r27, 0x2E4(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2F4, gc_env.r[31]); // stmw r27, 0x2E4(r1)']
Processing opcode: addi, operands: ['r30', 'r4', '0x0']
Translated addi r30 r4 0x0 to: ['gc_env.r[30] = gc_env.r[4] + 0; // addi r30, r4, 0x0']
Processing opcode: addi, operands: ['r31', 'r3', 'lbl_8001CB08@l']
Translated addi r31 r3 lbl_8001CB08@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&lbl_8001CB08 & 0xFFFF); // addi r31, r3, lbl_8001CB08@l']
Processing opcode: lhzu, operands: ['r6', '0x30(r5)']
Translated lhzu r6 0x30(r5) to: ['gc_env.r[6] = gc_mem_read16(gc_env.ram, gc_env.r[5] + 0x30); // lhzu r6, 0x30(r5)', 'gc_env.r[5] = gc_env.r[5] + 0x30;']
Translated rlwinm. r0 r6 0 16 16 to: ['gc_env.r[0] = (gc_env.r[6] << 0) & 0x8000; // rlwinm r0, r6, 0, 16, 16', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000FA48 to: if (gc_env.cr[0] == 0) goto L_8000FA48;
Translated rlwinm r0 r6 0 17 15 to: ['gc_env.r[0] = (gc_env.r[6] << 0) & -0x8001; // rlwinm r0, r6, 0, 17, 15']
Processing opcode: sth, operands: ['r0', '0x0(r5)']
Translated sth r0 0x0(r5) to: ['gc_mem_write16(gc_env.ram, gc_env.r[5], gc_env.r[0]); // sth r0, (r5)']
Translated ori r7 r7 0x1 to: ['gc_env.r[7] |= 1; // ori r7, r7, 0x1']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lhzu, operands: ['r4', '0x2034(r3)']
Translated lhzu r4 0x2034(r3) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x2034); // lhzu r4, 0x2034(r3)', 'gc_env.r[3] = gc_env.r[3] + 0x2034;']
Translated rlwinm. r0 r4 0 16 16 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x8000; // rlwinm r0, r4, 0, 16, 16', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000FA64 to: if (gc_env.cr[0] == 0) goto L_8000FA64;
Translated rlwinm r0 r4 0 17 15 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & -0x8001; // rlwinm r0, r4, 0, 17, 15']
Processing opcode: sth, operands: ['r0', '0x0(r3)']
Translated sth r0 0x0(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3], gc_env.r[0]); // sth r0, (r3)']
Translated ori r7 r7 0x2 to: ['gc_env.r[7] |= 2; // ori r7, r7, 0x2']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lhzu, operands: ['r4', '0x2038(r3)']
Translated lhzu r4 0x2038(r3) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x2038); // lhzu r4, 0x2038(r3)', 'gc_env.r[3] = gc_env.r[3] + 0x2038;']
Translated rlwinm. r0 r4 0 16 16 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x8000; // rlwinm r0, r4, 0, 16, 16', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000FA80 to: if (gc_env.cr[0] == 0) goto L_8000FA80;
Translated rlwinm r0 r4 0 17 15 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & -0x8001; // rlwinm r0, r4, 0, 17, 15']
Processing opcode: sth, operands: ['r0', '0x0(r3)']
Translated sth r0 0x0(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3], gc_env.r[0]); // sth r0, (r3)']
Translated ori r7 r7 0x4 to: ['gc_env.r[7] |= 4; // ori r7, r7, 0x4']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lhzu, operands: ['r4', '0x203c(r3)']
Translated lhzu r4 0x203c(r3) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x203c); // lhzu r4, 0x203c(r3)', 'gc_env.r[3] = gc_env.r[3] + 0x203c;']
Translated rlwinm. r0 r4 0 16 16 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0x8000; // rlwinm r0, r4, 0, 16, 16', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000FA9C to: if (gc_env.cr[0] == 0) goto L_8000FA9C;
Translated rlwinm r0 r4 0 17 15 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & -0x8001; // rlwinm r0, r4, 0, 17, 15']
Processing opcode: sth, operands: ['r0', '0x0(r3)']
Translated sth r0 0x0(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3], gc_env.r[0]); // sth r0, (r3)']
Translated ori r7 r7 0x8 to: ['gc_env.r[7] |= 8; // ori r7, r7, 0x8']
Translated rlwinm. r0 r7 0 29 29 to: ['gc_env.r[0] = (gc_env.r[7] << 0) & 0x4; // rlwinm r0, r7, 0, 29, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_8000FAAC to: if (gc_env.cr[0] != 0) goto L_8000FAAC;
Translated rlwinm. r0 r7 0 28 28 to: ['gc_env.r[0] = (gc_env.r[7] << 0) & 0x8; // rlwinm r0, r7, 0, 28, 28', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_8000FAB8 to: if (gc_env.cr[0] == 0) goto L_8000FAB8;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Translated b .L_8000FC1C to: goto L_8000FC1C;
Processing opcode: lwz, operands: ['r4', 'lbl_8001EFE0@sda21(r0)']
Translated lwz r4 lbl_8001EFE0@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFE0); // lwz r4, lbl_8001EFE0@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFE0@sda21(r0)']
Translated stw r0 lbl_8001EFE0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFE0, gc_env.r[0]); // stw r0, lbl_8001EFE0@sda21(r0)']
Translated bl OSClearContext to: OSClearContext();
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Processing opcode: lwz, operands: ['r12', 'lbl_8001EFF0@sda21(r0)']
Translated lwz r12 lbl_8001EFF0@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFF0); // lwz r12, lbl_8001EFF0@sda21(r0)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000FAEC to: if (gc_env.cr[0] == 0) goto L_8000FAEC;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EFE0@sda21(r0)']
Translated lwz r3 lbl_8001EFE0@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFE0); // lwz r3, lbl_8001EFE0@sda21(r0)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFE4@sda21(r0)']
Translated lwz r0 lbl_8001EFE4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFE4); // lwz r0, lbl_8001EFE4@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000FBE0 to: if (gc_env.cr[0] == 0) goto L_8000FBE0;
Processing opcode: lwz, operands: ['r0', 'lbl_8001F010@sda21(r0)']
Translated lwz r0 lbl_8001F010@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F010); // lwz r0, lbl_8001F010@sda21(r0)']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8000FB10 to: if (gc_env.cr[0] != 0) goto L_8000FB10;
Translated bl fn_80011198 to: fn_80011198();
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000FBC8 to: if (gc_env.cr[0] == 0) goto L_8000FBC8;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r29', 'r3', '0x2000']
Translated addi r29 r3 0x2000 to: ['gc_env.r[29] = gc_env.r[3] + 8192; // addi r29, r3, 0x2000']
Translated b .L_8000FB90 to: goto L_8000FB90;
Processing opcode: lwz, operands: ['r3', 'lbl_8001F018@sda21(r0)']
Translated lwz r3 lbl_8001F018@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F018); // lwz r3, lbl_8001F018@sda21(r0)']
Processing opcode: li, operands: ['r5', '0x20']
Translated li r5 0x20 to: ['gc_env.r[5] = 0x20; // li r5, 0x20']
Processing opcode: lwz, operands: ['r27', 'lbl_8001F01C@sda21(r0)']
Translated lwz r27 lbl_8001F01C@sda21(r0) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F01C); // lwz r27, lbl_8001F01C@sda21(r0)']
Processing opcode: addi, operands: ['r4', 'r27', '0x0']
Translated addi r4 r27 0x0 to: ['gc_env.r[4] = gc_env.r[27] + 0; // addi r4, r27, 0x0']
Translated bl fn_800118EC to: fn_800118EC();
Translated cntlzw r4 r4 to: ['uint32_t val = gc_env.r[4]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[4] = count; // cntlzw r4, r4']
Translated cmpwi r4 0x20 to: gc_env.cr[0] = (gc_env.r[4] == 0x20) ? 0 : (gc_env.r[4] < 0x20 ? -1 : 1); // Compare with immediate
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated and r0 r27 r0 to: gc_env.r[0] = gc_env.r[27] & gc_env.r[0];
Translated bge .L_8000FB48 to: if (gc_env.cr[0] >= 0) goto L_8000FB48;
Translated b .L_8000FB50 to: goto L_8000FB50;
Translated cntlzw r3 r0 to: ['uint32_t val = gc_env.r[0]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[3] = count; // cntlzw r3, r0']
Processing opcode: addi, operands: ['r4', 'r3', '0x20']
Translated addi r4 r3 0x20 to: ['gc_env.r[4] = gc_env.r[3] + 32; // addi r4, r3, 0x20']
Translated slwi r6 r4 1 to: ['gc_env.r[6] = gc_env.r[4] << 1; // slwi r6, r4, 1']
Processing opcode: add, operands: ['r3', 'r31', 'r6']
Translated add r3 r31 r6 to: ['gc_env.r[3] = gc_env.r[31] + gc_env.r[6]; // add r3, r31, r6']
Processing opcode: lhz, operands: ['r0', '0x78(r3)']
Translated lhz r0 0x78(r3) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x78); // lhz r0, 0x78(r3)']
Translated subfic r5 r4 0x3f to: ['gc_env.r[5] = 63 - gc_env.r[4]; // subfic r5, r4, 63', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (63 >= gc_env.r[4] ? 0x20000000 : 0);']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated sthx r0 r29 r6 to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + gc_env.r[6], gc_env.r[0]); // sthx r0, r29, r6']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl fn_800118C8 to: fn_800118C8();
Processing opcode: lwz, operands: ['r0', 'lbl_8001F018@sda21(r0)']
Translated lwz r0 lbl_8001F018@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F018); // lwz r0, lbl_8001F018@sda21(r0)']
Translated nor r5 r3 r3 to: ['gc_env.r[5] = ~gc_env.r[3]; // nor r5, r3, r3']
Translated nor r4 r4 r4 to: ['gc_env.r[4] = ~gc_env.r[4]; // nor r4, r4, r4']
Processing opcode: lwz, operands: ['r3', 'lbl_8001F01C@sda21(r0)']
Translated lwz r3 lbl_8001F01C@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F01C); // lwz r3, lbl_8001F01C@sda21(r0)']
Translated and r0 r0 r5 to: gc_env.r[0] = gc_env.r[0] & gc_env.r[5];
Translated and r3 r3 r4 to: gc_env.r[3] = gc_env.r[3] & gc_env.r[4];
Processing opcode: stw, operands: ['r3', 'lbl_8001F01C@sda21(r0)']
Translated stw r3 lbl_8001F01C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F01C, gc_env.r[3]); // stw r3, lbl_8001F01C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F018@sda21(r0)']
Translated stw r0 lbl_8001F018@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F018, gc_env.r[0]); // stw r0, lbl_8001F018@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F018@sda21(r0)']
Translated lwz r0 lbl_8001F018@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F018); // lwz r0, lbl_8001F018@sda21(r0)']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: lwz, operands: ['r3', 'lbl_8001F01C@sda21(r0)']
Translated lwz r3 lbl_8001F01C@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F01C); // lwz r3, lbl_8001F01C@sda21(r0)']
Translated xor r0 r0 r4 to: ['gc_env.r[0] = gc_env.r[0] ^ gc_env.r[4]; // xor r0, r0, r4']
Translated xor r3 r3 r4 to: ['gc_env.r[3] = gc_env.r[3] ^ gc_env.r[4]; // xor r3, r3, r4']
Translated or. r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Translated bne .L_8000FB1C to: if (gc_env.cr[0] != 0) goto L_8000FB1C;
Processing opcode: stw, operands: ['r4', 'lbl_8001F010@sda21(r0)']
Translated stw r4 lbl_8001F010@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F010, gc_env.r[4]); // stw r4, lbl_8001F010@sda21(r0)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r0', '0x144(r31)']
Translated lwz r0 0x144(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x144); // lwz r0, 0x144(r31)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F020@sda21(r0)']
Translated stw r0 lbl_8001F020@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F020, gc_env.r[0]); // stw r0, lbl_8001F020@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x118(r31)']
Translated lwz r0 0x118(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x118); // lwz r0, 0x118(r31)']
Processing opcode: stw, operands: ['r0', 'CurrTvMode_8001F024@sda21(r0)']
Translated stw r0 CurrTvMode_8001F024@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&CurrTvMode_8001F024, gc_env.r[0]); // stw r0, CurrTvMode_8001F024@sda21(r0)']
Translated b .L_8000FBCC to: goto L_8000FBCC;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8000FBE0 to: if (gc_env.cr[0] == 0) goto L_8000FBE0;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFE4@sda21(r0)']
Translated stw r0 lbl_8001EFE4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFE4, gc_env.r[0]); // stw r0, lbl_8001EFE4@sda21(r0)']
Translated bl fn_8000C2E0 to: fn_8000C2E0();
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFF4@sda21(r0)']
Translated lwz r0 lbl_8001EFF4@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFF4); // lwz r0, lbl_8001EFF4@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8000FC04 to: if (gc_env.cr[0] == 0) goto L_8000FC04;
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Translated bl OSClearContext to: OSClearContext();
Processing opcode: lwz, operands: ['r12', 'lbl_8001EFF4@sda21(r0)']
Translated lwz r12 lbl_8001EFF4@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFF4); // lwz r12, lbl_8001EFF4@sda21(r0)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EFE0@sda21(r0)']
Translated lwz r3 lbl_8001EFE0@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFE0); // lwz r3, lbl_8001EFE0@sda21(r0)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: li, operands: ['r3', 'lbl_8001EFE8@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Translated bl fn_80009B7C to: fn_80009B7C();
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Translated bl OSClearContext to: OSClearContext();
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSSetCurrentContext to: OSSetCurrentContext();
Translated lmw r27 0x2e4(r1) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2E4); // lmw r27, 0x2E4(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2E8); // lmw r27, 0x2E4(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2EC); // lmw r27, 0x2E4(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2F0); // lmw r27, 0x2E4(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2F4); // lmw r27, 0x2E4(r1)']
Processing opcode: lwz, operands: ['r0', '0x2fc(r1)']
Translated lwz r0 0x2fc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2FC); // lwz r0, 0x2FC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x2f8']
Translated addi r1 r1 0x2f8 to: ['gc_env.r[1] += 760; // addi r1, r1, 0x2f8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated cmplwi r3 0x15 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x15) ? 0 : ((uint32_t)gc_env.r[3] < 0x15 ? -1 : 1); // Logical compare with immediate
Translated lis r4 lbl_8001B3D8@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001B3D8 >> 16) & 0xFFFF; // lis r4, lbl_8001B3D8@ha']
Processing opcode: addi, operands: ['r5', 'r4', 'lbl_8001B3D8@l']
Translated addi r5 r4 lbl_8001B3D8@l to: ['gc_env.r[5] = (uint32_t)&lbl_8001B3D8; // lis + addi lbl_8001B3D8 (completing pattern)']
Translated bgt .L_8000FCB8 to: ['if (gc_env.cr[0] & 0x4) goto L_8000FCB8; // bgt .L_8000FCB8']
Translated lis r4 jumptable_8001B53C@ha to: ['gc_env.r[4] = ((uint32_t)&jumptable_8001B53C >> 16) & 0xFFFF; // lis r4, jumptable_8001B53C@ha']
Processing opcode: addi, operands: ['r4', 'r4', 'jumptable_8001B53C@l']
Translated addi r4 r4 jumptable_8001B53C@l to: ['gc_env.r[4] = (uint32_t)&jumptable_8001B53C; // lis + addi jumptable_8001B53C (completing pattern)']
Translated slwi r0 r3 2 to: ['gc_env.r[0] = gc_env.r[3] << 2; // slwi r0, r3, 2']
Translated lwzx r0 r4 r0 to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + gc_env.r[0]); // lwzx r0, r4, r0']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bctr  to: ['return gc_env.ctr; // bctr']
Translated mr r3 r5 to: gc_env.r[3] = gc_env.r[5]; // Move register
Translated blr  to: return;
Processing opcode: addi, operands: ['r3', 'r5', '0x26']
Translated addi r3 r5 0x26 to: ['gc_env.r[3] = gc_env.r[5] + 38; // addi r3, r5, 0x26']
Translated blr  to: return;
Processing opcode: addi, operands: ['r3', 'r5', '0x4c']
Translated addi r3 r5 0x4c to: ['gc_env.r[3] = gc_env.r[5] + 76; // addi r3, r5, 0x4c']
Translated blr  to: return;
Processing opcode: addi, operands: ['r3', 'r5', '0x72']
Translated addi r3 r5 0x72 to: ['gc_env.r[3] = gc_env.r[5] + 114; // addi r3, r5, 0x72']
Translated blr  to: return;
Translated mr r3 r5 to: gc_env.r[3] = gc_env.r[5]; // Move register
Translated blr  to: return;
Processing opcode: addi, operands: ['r3', 'r5', '0x26']
Translated addi r3 r5 0x26 to: ['gc_env.r[3] = gc_env.r[5] + 38; // addi r3, r5, 0x26']
Translated blr  to: return;
Processing opcode: addi, operands: ['r3', 'r5', '0x98']
Translated addi r3 r5 0x98 to: ['gc_env.r[3] = gc_env.r[5] + 152; // addi r3, r5, 0x98']
Translated blr  to: return;
Processing opcode: addi, operands: ['r3', 'r5', '0xbe']
Translated addi r3 r5 0xbe to: ['gc_env.r[3] = gc_env.r[5] + 190; // addi r3, r5, 0xbe']
Translated blr  to: return;
Processing opcode: addi, operands: ['r3', 'r5', '0xe4']
Translated addi r3 r5 0xe4 to: ['gc_env.r[3] = gc_env.r[5] + 228; // addi r3, r5, 0xe4']
Translated blr  to: return;
Processing opcode: addi, operands: ['r3', 'r5', '0x10a']
Translated addi r3 r5 0x10a to: ['gc_env.r[3] = gc_env.r[5] + 266; // addi r3, r5, 0x10a']
Translated blr  to: return;
Processing opcode: addi, operands: ['r3', 'r5', '0x4c']
Translated addi r3 r5 0x4c to: ['gc_env.r[3] = gc_env.r[5] + 76; // addi r3, r5, 0x4c']
Translated blr  to: return;
Processing opcode: addi, operands: ['r3', 'r5', '0x72']
Translated addi r3 r5 0x72 to: ['gc_env.r[3] = gc_env.r[5] + 114; // addi r3, r5, 0x72']
Translated blr  to: return;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Processing opcode: stw, operands: ['r31', '0x2c(r1)']
Translated stw r31 0x2c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stw r31, 0x2C(r1)']
Translated srwi r31 r3 2 to: ['gc_env.r[31] = gc_env.r[3] >> 2; // srwi r31, r3, 2']
Processing opcode: stw, operands: ['r30', '0x28(r1)']
Translated stw r30 0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[30]); // stw r30, 0x28(r1)']
Processing opcode: stw, operands: ['r29', '0x24(r1)']
Translated stw r29 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[29]); // stw r29, 0x24(r1)']
Processing opcode: addi, operands: ['r29', 'r3', '0x0']
Translated addi r29 r3 0x0 to: ['gc_env.r[29] = gc_env.r[3] + 0; // addi r29, r3, 0x0']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: stw, operands: ['r31', '0xcc(r3)']
Translated stw r31 0xcc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xCC, gc_env.r[31]); // stw r31, 0xCC(r3)']
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Translated rlwinm r30 r29 0 30 30 to: ['gc_env.r[30] = (gc_env.r[29] << 0) & 0x2; // rlwinm r30, r29, 0, 30, 30']
Translated bl fn_8000FC30 to: fn_8000FC30();
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Processing opcode: addi, operands: ['r5', 'r4', '0x2000']
Translated addi r5 r4 0x2000 to: ['gc_env.r[5] = gc_env.r[4] + 8192; // addi r5, r4, 0x2000']
Processing opcode: sthu, operands: ['r0', '0x2(r5)']
Translated sthu r0 0x2(r5) to: ['gc_mem_write16(gc_env.ram, gc_env.r[5] + 0x2, gc_env.r[0]); // sthu r0, 0x2(r5)', 'gc_env.r[5] = gc_env.r[5] + 0x2;']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x1c(r1)']
Translated stw r0 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Translated cmplwi r0 0x3e8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x3e8) ? 0 : ((uint32_t)gc_env.r[0] < 0x3e8 ? -1 : 1); // Logical compare with immediate
Translated bge .L_8000FD34 to: if (gc_env.cr[0] >= 0) goto L_8000FD34;
Translated b .L_8000FD28 to: goto L_8000FD28;
Processing opcode: lwz, operands: ['r4', '0x1c(r1)']
Translated lwz r4 0x1c(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r4, 0x1C(r1)']
Processing opcode: addi, operands: ['r0', 'r4', '0x8']
Translated addi r0 r4 0x8 to: ['gc_env.r[0] = gc_env.r[4] + 8; // addi r0, r4, 0x8']
Processing opcode: stw, operands: ['r0', '0x1c(r1)']
Translated stw r0 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Translated cmplwi r0 0x3e8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x3e8) ? 0 : ((uint32_t)gc_env.r[0] < 0x3e8 ? -1 : 1); // Logical compare with immediate
Translated blt .L_8000FD1C to: ['if (gc_env.cr[0] & 0x8) goto L_8000FD1C; // blt .L_8000FD1C']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: sth, operands: ['r0', '0x0(r5)']
Translated sth r0 0x0(r5) to: ['gc_mem_write16(gc_env.ram, gc_env.r[5], gc_env.r[0]); // sth r0, (r5)']
Translated lis r12 0xcc00 to: ['gc_env.r[12] = -13312 << 16; // lis r12, 0xcc00']
Processing opcode: li, operands: ['r8', '0x2828']
Translated li r8 0x2828 to: ['gc_env.r[8] = 0x2828; // li r8, 0x2828']
Processing opcode: lhz, operands: ['r6', '0x1a(r3)']
Translated lhz r6 0x1a(r3) to: ['gc_env.r[6] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x1a); // lhz r6, 0x1a(r3)']
Processing opcode: li, operands: ['r7', '0x1']
Translated li r7 0x1 to: ['gc_env.r[7] = 0x1; // li r7, 0x1']
Translated cmpwi r29 0x2 to: gc_env.cr[0] = (gc_env.r[29] == 0x2) ? 0 : (gc_env.r[29] < 0x2 ? -1 : 1); // Compare with immediate
Processing opcode: sth, operands: ['r6', '0x2006(r12)']
Translated sth r6 0x2006(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x2006, gc_env.r[6]); // sth r6, 0x2006(r12)']
Processing opcode: li, operands: ['r6', '0x1001']
Translated li r6 0x1001 to: ['gc_env.r[6] = 0x1001; // li r6, 0x1001']
Processing opcode: addi, operands: ['r4', 'r12', '0x2000']
Translated addi r4 r12 0x2000 to: ['gc_env.r[4] = gc_env.r[12] + 8192; // addi r4, r12, 0x2000']
Processing opcode: lbz, operands: ['r9', '0x1d(r3)']
Translated lbz r9 0x1d(r3) to: ['gc_env.r[9] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x1d); // lbz r9, 0x1d(r3)']
Processing opcode: lbz, operands: ['r10', '0x1e(r3)']
Translated lbz r10 0x1e(r3) to: ['gc_env.r[10] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x1e); // lbz r10, 0x1e(r3)']
Translated rlwimi r10 r9 8 16 23 to: ['uint32_t rotated = gc_env.r[9] << 8; // rlwimi r10, r9, 8, 16, 23', 'gc_env.r[10] = (gc_env.r[10] & ~0xFF00) | (rotated & 0xFF00);']
Processing opcode: sth, operands: ['r10', '0x2004(r12)']
Translated sth r10 0x2004(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x2004, gc_env.r[10]); // sth r10, 0x2004(r12)']
Processing opcode: lbz, operands: ['r9', '0x1f(r3)']
Translated lbz r9 0x1f(r3) to: ['gc_env.r[9] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x1f); // lbz r9, 0x1f(r3)']
Processing opcode: lbz, operands: ['r10', '0x1c(r3)']
Translated lbz r10 0x1c(r3) to: ['gc_env.r[10] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x1c); // lbz r10, 0x1c(r3)']
Translated slwi r9 r9 7 to: ['gc_env.r[9] = gc_env.r[9] << 7; // slwi r9, r9, 7']
Translated or r9 r10 r9 to: ['gc_env.r[9] = gc_env.r[10] | gc_env.r[9]; // or r9, r10, r9']
Processing opcode: sth, operands: ['r9', '0x200a(r12)']
Translated sth r9 0x200a(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x200A, gc_env.r[9]); // sth r9, 0x200A(r12)']
Processing opcode: lhz, operands: ['r9', '0x20(r3)']
Translated lhz r9 0x20(r3) to: ['gc_env.r[9] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x20); // lhz r9, 0x20(r3)']
Translated clrlslwi r9 r9 17 1 to: ['gc_env.r[9] = (gc_env.r[9] << 1) & 0x7FFF; // clrlslwi r9, r9, 17, 1']
Processing opcode: sth, operands: ['r9', '0x2008(r12)']
Translated sth r9 0x2008(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x2008, gc_env.r[9]); // sth r9, 0x2008(r12)']
Processing opcode: lhz, operands: ['r9', '0x2(r3)']
Translated lhz r9 0x2(r3) to: ['gc_env.r[9] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x2); // lhz r9, 0x2(r3)']
Processing opcode: lbz, operands: ['r11', '0x0(r3)']
Translated lbz r11 0x0(r3) to: ['gc_env.r[11] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x0); // lbz r11, 0x0(r3)']
Translated slwi r9 r9 1 to: ['gc_env.r[9] = gc_env.r[9] << 1; // slwi r9, r9, 1']
Processing opcode: lhz, operands: ['r10', '0x4(r3)']
Translated lhz r10 0x4(r3) to: ['gc_env.r[10] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x4); // lhz r10, 0x4(r3)']
Processing opcode: subi, operands: ['r9', 'r9', '0x2']
Translated subi r9 r9 0x2 to: ['gc_env.r[9] = gc_env.r[9] - 2; // subi r9, r9, 2']
Processing opcode: sth, operands: ['r11', '0x2000(r12)']
Translated sth r11 0x2000(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x2000, gc_env.r[11]); // sth r11, 0x2000(r12)']
Processing opcode: add, operands: ['r9', 'r10', 'r9']
Translated add r9 r10 r9 to: ['gc_env.r[9] = gc_env.r[10] + gc_env.r[9]; // add r9, r10, r9']
Processing opcode: sth, operands: ['r9', '0x200e(r12)']
Translated sth r9 0x200e(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x200E, gc_env.r[9]); // sth r9, 0x200E(r12)']
Processing opcode: lhz, operands: ['r9', '0x8(r3)']
Translated lhz r9 0x8(r3) to: ['gc_env.r[9] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x8); // lhz r9, 0x8(r3)']
Processing opcode: addi, operands: ['r9', 'r9', '0x2']
Translated addi r9 r9 0x2 to: ['gc_env.r[9] += 2; // addi r9, r9, 0x2']
Processing opcode: sth, operands: ['r9', '0x200c(r12)']
Translated sth r9 0x200c(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x200C, gc_env.r[9]); // sth r9, 0x200C(r12)']
Processing opcode: lhz, operands: ['r9', '0x2(r3)']
Translated lhz r9 0x2(r3) to: ['gc_env.r[9] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x2); // lhz r9, 0x2(r3)']
Processing opcode: lhz, operands: ['r10', '0x6(r3)']
Translated lhz r10 0x6(r3) to: ['gc_env.r[10] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x6); // lhz r10, 0x6(r3)']
Translated slwi r9 r9 1 to: ['gc_env.r[9] = gc_env.r[9] << 1; // slwi r9, r9, 1']
Processing opcode: subi, operands: ['r9', 'r9', '0x2']
Translated subi r9 r9 0x2 to: ['gc_env.r[9] = gc_env.r[9] - 2; // subi r9, r9, 2']
Processing opcode: add, operands: ['r9', 'r10', 'r9']
Translated add r9 r10 r9 to: ['gc_env.r[9] = gc_env.r[10] + gc_env.r[9]; // add r9, r10, r9']
Processing opcode: sth, operands: ['r9', '0x2012(r12)']
Translated sth r9 0x2012(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x2012, gc_env.r[9]); // sth r9, 0x2012(r12)']
Processing opcode: lhz, operands: ['r9', '0xa(r3)']
Translated lhz r9 0xa(r3) to: ['gc_env.r[9] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0xa); // lhz r9, 0xa(r3)']
Processing opcode: addi, operands: ['r9', 'r9', '0x2']
Translated addi r9 r9 0x2 to: ['gc_env.r[9] += 2; // addi r9, r9, 0x2']
Processing opcode: sth, operands: ['r9', '0x2010(r12)']
Translated sth r9 0x2010(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x2010, gc_env.r[9]); // sth r9, 0x2010(r12)']
Processing opcode: lhz, operands: ['r9', '0x10(r3)']
Translated lhz r9 0x10(r3) to: ['gc_env.r[9] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x10); // lhz r9, 0x10(r3)']
Processing opcode: lbz, operands: ['r10', '0xc(r3)']
Translated lbz r10 0xc(r3) to: ['gc_env.r[10] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0xc); // lbz r10, 0xc(r3)']
Translated slwi r9 r9 5 to: ['gc_env.r[9] = gc_env.r[9] << 5; // slwi r9, r9, 5']
Translated or r9 r10 r9 to: ['gc_env.r[9] = gc_env.r[10] | gc_env.r[9]; // or r9, r10, r9']
Processing opcode: sth, operands: ['r9', '0x2016(r12)']
Translated sth r9 0x2016(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x2016, gc_env.r[9]); // sth r9, 0x2016(r12)']
Processing opcode: lhz, operands: ['r9', '0x14(r3)']
Translated lhz r9 0x14(r3) to: ['gc_env.r[9] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x14); // lhz r9, 0x14(r3)']
Processing opcode: lbz, operands: ['r10', '0xe(r3)']
Translated lbz r10 0xe(r3) to: ['gc_env.r[10] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0xe); // lbz r10, 0xe(r3)']
Translated slwi r9 r9 5 to: ['gc_env.r[9] = gc_env.r[9] << 5; // slwi r9, r9, 5']
Translated or r9 r10 r9 to: ['gc_env.r[9] = gc_env.r[10] | gc_env.r[9]; // or r9, r10, r9']
Processing opcode: sth, operands: ['r9', '0x2014(r12)']
Translated sth r9 0x2014(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x2014, gc_env.r[9]); // sth r9, 0x2014(r12)']
Processing opcode: lhz, operands: ['r9', '0x12(r3)']
Translated lhz r9 0x12(r3) to: ['gc_env.r[9] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x12); // lhz r9, 0x12(r3)']
Processing opcode: lbz, operands: ['r10', '0xd(r3)']
Translated lbz r10 0xd(r3) to: ['gc_env.r[10] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0xd); // lbz r10, 0xd(r3)']
Translated slwi r9 r9 5 to: ['gc_env.r[9] = gc_env.r[9] << 5; // slwi r9, r9, 5']
Translated or r9 r10 r9 to: ['gc_env.r[9] = gc_env.r[10] | gc_env.r[9]; // or r9, r10, r9']
Processing opcode: sth, operands: ['r9', '0x201a(r12)']
Translated sth r9 0x201a(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x201A, gc_env.r[9]); // sth r9, 0x201A(r12)']
Processing opcode: lhz, operands: ['r9', '0x16(r3)']
Translated lhz r9 0x16(r3) to: ['gc_env.r[9] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x16); // lhz r9, 0x16(r3)']
Processing opcode: lbz, operands: ['r10', '0xf(r3)']
Translated lbz r10 0xf(r3) to: ['gc_env.r[10] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0xf); // lbz r10, 0xf(r3)']
Translated slwi r9 r9 5 to: ['gc_env.r[9] = gc_env.r[9] << 5; // slwi r9, r9, 5']
Translated or r9 r10 r9 to: ['gc_env.r[9] = gc_env.r[10] | gc_env.r[9]; // or r9, r10, r9']
Processing opcode: sth, operands: ['r9', '0x2018(r12)']
Translated sth r9 0x2018(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x2018, gc_env.r[9]); // sth r9, 0x2018(r12)']
Processing opcode: sth, operands: ['r8', '0x2048(r12)']
Translated sth r8 0x2048(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x2048, gc_env.r[8]); // sth r8, 0x2048(r12)']
Processing opcode: sth, operands: ['r7', '0x2036(r12)']
Translated sth r7 0x2036(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x2036, gc_env.r[7]); // sth r7, 0x2036(r12)']
Processing opcode: sth, operands: ['r6', '0x2034(r12)']
Translated sth r6 0x2034(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x2034, gc_env.r[6]); // sth r6, 0x2034(r12)']
Processing opcode: lhz, operands: ['r6', '0x18(r3)']
Translated lhz r6 0x18(r3) to: ['gc_env.r[6] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x18); // lhz r6, 0x18(r3)']
Processing opcode: lhz, operands: ['r3', '0x1a(r3)']
Translated lhz r3 0x1a(r3) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x1a); // lhz r3, 0x1a(r3)']
Translated srawi r6 r6 1 to: ['gc_env.r[6] = ((int32_t)gc_env.r[6]) >> 1; // srawi r6, r6, 1']
Processing opcode: addi, operands: ['r3', 'r3', '0x1']
Translated addi r3 r3 0x1 to: ['gc_env.r[3] += 1; // addi r3, r3, 0x1']
Translated addze r6 r6 to: ['uint64_t addze_temp = (uint64_t)gc_env.r[6] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[6] = (uint32_t)addze_temp; // addze r6, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addze_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Processing opcode: sth, operands: ['r3', '0x2032(r12)']
Translated sth r3 0x2032(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x2032, gc_env.r[3]); // sth r3, 0x2032(r12)']
Processing opcode: addi, operands: ['r6', 'r6', '0x1']
Translated addi r6 r6 0x1 to: ['gc_env.r[6] += 1; // addi r6, r6, 0x1']
Translated ori r3 r6 0x1000 to: ['gc_env.r[3] = gc_env.r[6] | 4096; // ori r3, r6, 0x1000']
Processing opcode: sth, operands: ['r3', '0x2030(r12)']
Translated sth r3 0x2030(r12) to: ['gc_mem_write16(gc_env.ram, gc_env.r[12] + 0x2030, gc_env.r[3]); // sth r3, 0x2030(r12)']
Translated beq .L_8000FE84 to: if (gc_env.cr[0] == 0) goto L_8000FE84;
Translated cmpwi r29 0x3 to: gc_env.cr[0] = (gc_env.r[29] == 0x3) ? 0 : (gc_env.r[29] < 0x3 ? -1 : 1); // Compare with immediate
Translated beq .L_8000FE84 to: if (gc_env.cr[0] == 0) goto L_8000FE84;
Translated slwi r3 r30 2 to: ['gc_env.r[3] = gc_env.r[30] << 2; // slwi r3, r30, 2']
Translated ori r6 r3 0x1 to: ['gc_env.r[6] = gc_env.r[3] | 1; // ori r6, r3, 0x1']
Translated slwi r3 r31 8 to: ['gc_env.r[3] = gc_env.r[31] << 8; // slwi r3, r31, 8']
Translated or r3 r6 r3 to: ['gc_env.r[3] = gc_env.r[6] | gc_env.r[3]; // or r3, r6, r3']
Processing opcode: sth, operands: ['r3', '0x0(r5)']
Translated sth r3 0x0(r5) to: ['gc_mem_write16(gc_env.ram, gc_env.r[5], gc_env.r[3]); // sth r3, (r5)']
Processing opcode: sth, operands: ['r0', '0x6c(r4)']
Translated sth r0 0x6c(r4) to: ['gc_mem_write16(gc_env.ram, gc_env.r[4] + 0x6C, gc_env.r[0]); // sth r0, 0x6C(r4)']
Translated b .L_8000FE9C to: goto L_8000FE9C;
Translated slwi r0 r31 8 to: ['gc_env.r[0] = gc_env.r[31] << 8; // slwi r0, r31, 8']
Translated ori r0 r0 0x5 to: ['gc_env.r[0] |= 5; // ori r0, r0, 0x5']
Processing opcode: sth, operands: ['r0', '0x0(r5)']
Translated sth r0 0x0(r5) to: ['gc_mem_write16(gc_env.ram, gc_env.r[5], gc_env.r[0]); // sth r0, (r5)']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: sth, operands: ['r0', '0x206c(r3)']
Translated sth r0 0x206c(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x206C, gc_env.r[0]); // sth r0, 0x206C(r3)']
Processing opcode: lwz, operands: ['r0', '0x34(r1)']
Translated lwz r0 0x34(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r0, 0x34(r1)']
Processing opcode: lwz, operands: ['r31', '0x2c(r1)']
Translated lwz r31 0x2c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r31, 0x2C(r1)']
Processing opcode: lwz, operands: ['r30', '0x28(r1)']
Translated lwz r30 0x28(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lwz r30, 0x28(r1)']
Processing opcode: lwz, operands: ['r29', '0x24(r1)']
Translated lwz r29 0x24(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r29, 0x24(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated lis r4 lbl_8001B3D8@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001B3D8 >> 16) & 0xFFFF; // lis r4, lbl_8001B3D8@ha']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: addi, operands: ['r30', 'r4', 'lbl_8001B3D8@l']
Translated addi r30 r4 lbl_8001B3D8@l to: ['gc_env.r[30] = gc_env.r[4] + ((uint32_t)&lbl_8001B3D8 & 0xFFFF); // addi r30, r4, lbl_8001B3D8@l']
Processing opcode: stw, operands: ['r29', '0xc(r1)']
Translated stw r29 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[29]); // stw r29, 0xC(r1)']
Processing opcode: stw, operands: ['r28', '0x8(r1)']
Translated stw r28 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[28]); // stw r28, 0x8(r1)']
Processing opcode: addi, operands: ['r28', 'r3', '0x2000']
Translated addi r28 r3 0x2000 to: ['gc_env.r[28] = gc_env.r[3] + 8192; // addi r28, r3, 0x2000']
Translated lis r3 lbl_8001CB08@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CB08 >> 16) & 0xFFFF; // lis r3, lbl_8001CB08@ha']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFF8@sda21(r0)']
Translated stw r0 lbl_8001EFF8@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFF8, gc_env.r[0]); // stw r0, lbl_8001EFF8@sda21(r0)']
Processing opcode: addi, operands: ['r31', 'r3', 'lbl_8001CB08@l']
Translated addi r31 r3 lbl_8001CB08@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&lbl_8001CB08 & 0xFFFF); // addi r31, r3, lbl_8001CB08@l']
Processing opcode: lhzu, operands: ['r0', '0x2(r28)']
Translated lhzu r0 0x2(r28) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[28] + 0x2); // lhzu r0, 0x2(r28)', 'gc_env.r[28] = gc_env.r[28] + 0x2;']
Translated clrlwi. r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Translated bne .L_8000FF08 to: if (gc_env.cr[0] != 0) goto L_8000FF08;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl fn_8000FCC0 to: fn_8000FCC0();
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Processing opcode: stw, operands: ['r29', 'lbl_8001EFE0@sda21(r0)']
Translated stw r29 lbl_8001EFE0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFE0, gc_env.r[29]); // stw r29, lbl_8001EFE0@sda21(r0)']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x2000']
Translated addi r3 r3 0x2000 to: ['gc_env.r[3] += 8192; // addi r3, r3, 0x2000']
Processing opcode: stw, operands: ['r29', 'lbl_8001F00C@sda21(r0)']
Translated stw r29 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[29]); // stw r29, lbl_8001F00C@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x280']
Translated li r0 0x280 to: ['gc_env.r[0] = 0x280; // li r0, 0x280']
Processing opcode: stw, operands: ['r29', 'lbl_8001F008@sda21(r0)']
Translated stw r29 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[29]); // stw r29, lbl_8001F008@sda21(r0)']
Processing opcode: stw, operands: ['r29', 'lbl_8001F01C@sda21(r0)']
Translated stw r29 lbl_8001F01C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F01C, gc_env.r[29]); // stw r29, lbl_8001F01C@sda21(r0)']
Processing opcode: stw, operands: ['r29', 'lbl_8001F018@sda21(r0)']
Translated stw r29 lbl_8001F018@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F018, gc_env.r[29]); // stw r29, lbl_8001F018@sda21(r0)']
Processing opcode: stw, operands: ['r29', 'lbl_8001F000@sda21(r0)']
Translated stw r29 lbl_8001F000@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F000, gc_env.r[29]); // stw r29, lbl_8001F000@sda21(r0)']
Processing opcode: stw, operands: ['r29', 'lbl_8001F010@sda21(r0)']
Translated stw r29 lbl_8001F010@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F010, gc_env.r[29]); // stw r29, lbl_8001F010@sda21(r0)']
Processing opcode: stw, operands: ['r29', 'lbl_8001EFE4@sda21(r0)']
Translated stw r29 lbl_8001EFE4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFE4, gc_env.r[29]); // stw r29, lbl_8001EFE4@sda21(r0)']
Processing opcode: lhz, operands: ['r5', '0x132(r30)']
Translated lhz r5 0x132(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x132); // lhz r5, 0x132(r30)']
Processing opcode: lhz, operands: ['r6', '0x130(r30)']
Translated lhz r6 0x130(r30) to: ['gc_env.r[6] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x130); // lhz r6, 0x130(r30)']
Translated clrlslwi r5 r5 26 10 to: ['gc_env.r[5] = (gc_env.r[5] << 10) & 0x3F; // clrlslwi r5, r5, 26, 10']
Translated or r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[6] | gc_env.r[5]; // or r5, r6, r5']
Processing opcode: sth, operands: ['r5', '0x4e(r3)']
Translated sth r5 0x4e(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x4E, gc_env.r[5]); // sth r5, 0x4E(r3)']
Processing opcode: lhz, operands: ['r6', '0x132(r30)']
Translated lhz r6 0x132(r30) to: ['gc_env.r[6] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x132); // lhz r6, 0x132(r30)']
Processing opcode: lhz, operands: ['r5', '0x134(r30)']
Translated lhz r5 0x134(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x134); // lhz r5, 0x134(r30)']
Translated srawi r6 r6 6 to: ['gc_env.r[6] = ((int32_t)gc_env.r[6]) >> 6; // srawi r6, r6, 6']
Translated slwi r5 r5 4 to: ['gc_env.r[5] = gc_env.r[5] << 4; // slwi r5, r5, 4']
Translated or r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[6] | gc_env.r[5]; // or r5, r6, r5']
Processing opcode: sth, operands: ['r5', '0x4c(r3)']
Translated sth r5 0x4c(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x4C, gc_env.r[5]); // sth r5, 0x4C(r3)']
Processing opcode: lhz, operands: ['r5', '0x138(r30)']
Translated lhz r5 0x138(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x138); // lhz r5, 0x138(r30)']
Processing opcode: lhz, operands: ['r6', '0x136(r30)']
Translated lhz r6 0x136(r30) to: ['gc_env.r[6] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x136); // lhz r6, 0x136(r30)']
Translated clrlslwi r5 r5 26 10 to: ['gc_env.r[5] = (gc_env.r[5] << 10) & 0x3F; // clrlslwi r5, r5, 26, 10']
Translated or r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[6] | gc_env.r[5]; // or r5, r6, r5']
Processing opcode: sth, operands: ['r5', '0x52(r3)']
Translated sth r5 0x52(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x52, gc_env.r[5]); // sth r5, 0x52(r3)']
Processing opcode: lhz, operands: ['r6', '0x138(r30)']
Translated lhz r6 0x138(r30) to: ['gc_env.r[6] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x138); // lhz r6, 0x138(r30)']
Processing opcode: lhz, operands: ['r5', '0x13a(r30)']
Translated lhz r5 0x13a(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x13a); // lhz r5, 0x13a(r30)']
Translated srawi r6 r6 6 to: ['gc_env.r[6] = ((int32_t)gc_env.r[6]) >> 6; // srawi r6, r6, 6']
Translated slwi r5 r5 4 to: ['gc_env.r[5] = gc_env.r[5] << 4; // slwi r5, r5, 4']
Translated or r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[6] | gc_env.r[5]; // or r5, r6, r5']
Processing opcode: sth, operands: ['r5', '0x50(r3)']
Translated sth r5 0x50(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x50, gc_env.r[5]); // sth r5, 0x50(r3)']
Processing opcode: lhz, operands: ['r5', '0x13e(r30)']
Translated lhz r5 0x13e(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x13e); // lhz r5, 0x13e(r30)']
Processing opcode: lhz, operands: ['r6', '0x13c(r30)']
Translated lhz r6 0x13c(r30) to: ['gc_env.r[6] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x13c); // lhz r6, 0x13c(r30)']
Translated clrlslwi r5 r5 26 10 to: ['gc_env.r[5] = (gc_env.r[5] << 10) & 0x3F; // clrlslwi r5, r5, 26, 10']
Translated or r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[6] | gc_env.r[5]; // or r5, r6, r5']
Processing opcode: sth, operands: ['r5', '0x56(r3)']
Translated sth r5 0x56(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x56, gc_env.r[5]); // sth r5, 0x56(r3)']
Processing opcode: lhz, operands: ['r5', '0x13e(r30)']
Translated lhz r5 0x13e(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x13e); // lhz r5, 0x13e(r30)']
Processing opcode: lhz, operands: ['r4', '0x140(r30)']
Translated lhz r4 0x140(r30) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x140); // lhz r4, 0x140(r30)']
Translated srawi r5 r5 6 to: ['gc_env.r[5] = ((int32_t)gc_env.r[5]) >> 6; // srawi r5, r5, 6']
Translated slwi r4 r4 4 to: ['gc_env.r[4] = gc_env.r[4] << 4; // slwi r4, r4, 4']
Translated or r4 r5 r4 to: ['gc_env.r[4] = gc_env.r[5] | gc_env.r[4]; // or r4, r5, r4']
Processing opcode: sth, operands: ['r4', '0x54(r3)']
Translated sth r4 0x54(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x54, gc_env.r[4]); // sth r4, 0x54(r3)']
Processing opcode: lhz, operands: ['r4', '0x144(r30)']
Translated lhz r4 0x144(r30) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x144); // lhz r4, 0x144(r30)']
Processing opcode: lhz, operands: ['r5', '0x142(r30)']
Translated lhz r5 0x142(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x142); // lhz r5, 0x142(r30)']
Translated slwi r4 r4 8 to: ['gc_env.r[4] = gc_env.r[4] << 8; // slwi r4, r4, 8']
Translated or r4 r5 r4 to: ['gc_env.r[4] = gc_env.r[5] | gc_env.r[4]; // or r4, r5, r4']
Processing opcode: sth, operands: ['r4', '0x5a(r3)']
Translated sth r4 0x5a(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x5A, gc_env.r[4]); // sth r4, 0x5A(r3)']
Processing opcode: lhz, operands: ['r4', '0x148(r30)']
Translated lhz r4 0x148(r30) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x148); // lhz r4, 0x148(r30)']
Processing opcode: lhz, operands: ['r5', '0x146(r30)']
Translated lhz r5 0x146(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x146); // lhz r5, 0x146(r30)']
Translated slwi r4 r4 8 to: ['gc_env.r[4] = gc_env.r[4] << 8; // slwi r4, r4, 8']
Translated or r4 r5 r4 to: ['gc_env.r[4] = gc_env.r[5] | gc_env.r[4]; // or r4, r5, r4']
Processing opcode: sth, operands: ['r4', '0x58(r3)']
Translated sth r4 0x58(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x58, gc_env.r[4]); // sth r4, 0x58(r3)']
Processing opcode: lhz, operands: ['r4', '0x14c(r30)']
Translated lhz r4 0x14c(r30) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x14c); // lhz r4, 0x14c(r30)']
Processing opcode: lhz, operands: ['r5', '0x14a(r30)']
Translated lhz r5 0x14a(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x14a); // lhz r5, 0x14a(r30)']
Translated slwi r4 r4 8 to: ['gc_env.r[4] = gc_env.r[4] << 8; // slwi r4, r4, 8']
Translated or r4 r5 r4 to: ['gc_env.r[4] = gc_env.r[5] | gc_env.r[4]; // or r4, r5, r4']
Processing opcode: sth, operands: ['r4', '0x5e(r3)']
Translated sth r4 0x5e(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x5E, gc_env.r[4]); // sth r4, 0x5E(r3)']
Processing opcode: lhz, operands: ['r4', '0x150(r30)']
Translated lhz r4 0x150(r30) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x150); // lhz r4, 0x150(r30)']
Processing opcode: lhz, operands: ['r5', '0x14e(r30)']
Translated lhz r5 0x14e(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x14e); // lhz r5, 0x14e(r30)']
Translated slwi r4 r4 8 to: ['gc_env.r[4] = gc_env.r[4] << 8; // slwi r4, r4, 8']
Translated or r4 r5 r4 to: ['gc_env.r[4] = gc_env.r[5] | gc_env.r[4]; // or r4, r5, r4']
Processing opcode: sth, operands: ['r4', '0x5c(r3)']
Translated sth r4 0x5c(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x5C, gc_env.r[4]); // sth r4, 0x5C(r3)']
Processing opcode: lhz, operands: ['r4', '0x154(r30)']
Translated lhz r4 0x154(r30) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x154); // lhz r4, 0x154(r30)']
Processing opcode: lhz, operands: ['r5', '0x152(r30)']
Translated lhz r5 0x152(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x152); // lhz r5, 0x152(r30)']
Translated slwi r4 r4 8 to: ['gc_env.r[4] = gc_env.r[4] << 8; // slwi r4, r4, 8']
Translated or r4 r5 r4 to: ['gc_env.r[4] = gc_env.r[5] | gc_env.r[4]; // or r4, r5, r4']
Processing opcode: sth, operands: ['r4', '0x62(r3)']
Translated sth r4 0x62(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x62, gc_env.r[4]); // sth r4, 0x62(r3)']
Processing opcode: lhz, operands: ['r4', '0x158(r30)']
Translated lhz r4 0x158(r30) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x158); // lhz r4, 0x158(r30)']
Processing opcode: lhz, operands: ['r5', '0x156(r30)']
Translated lhz r5 0x156(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x156); // lhz r5, 0x156(r30)']
Translated slwi r4 r4 8 to: ['gc_env.r[4] = gc_env.r[4] << 8; // slwi r4, r4, 8']
Translated or r4 r5 r4 to: ['gc_env.r[4] = gc_env.r[5] | gc_env.r[4]; // or r4, r5, r4']
Processing opcode: sth, operands: ['r4', '0x60(r3)']
Translated sth r4 0x60(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x60, gc_env.r[4]); // sth r4, 0x60(r3)']
Processing opcode: lhz, operands: ['r4', '0x15c(r30)']
Translated lhz r4 0x15c(r30) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x15c); // lhz r4, 0x15c(r30)']
Processing opcode: lhz, operands: ['r5', '0x15a(r30)']
Translated lhz r5 0x15a(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x15a); // lhz r5, 0x15a(r30)']
Translated slwi r4 r4 8 to: ['gc_env.r[4] = gc_env.r[4] << 8; // slwi r4, r4, 8']
Translated or r4 r5 r4 to: ['gc_env.r[4] = gc_env.r[5] | gc_env.r[4]; // or r4, r5, r4']
Processing opcode: sth, operands: ['r4', '0x66(r3)']
Translated sth r4 0x66(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x66, gc_env.r[4]); // sth r4, 0x66(r3)']
Processing opcode: lhz, operands: ['r4', '0x160(r30)']
Translated lhz r4 0x160(r30) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x160); // lhz r4, 0x160(r30)']
Processing opcode: lhz, operands: ['r5', '0x15e(r30)']
Translated lhz r5 0x15e(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x15e); // lhz r5, 0x15e(r30)']
Translated slwi r4 r4 8 to: ['gc_env.r[4] = gc_env.r[4] << 8; // slwi r4, r4, 8']
Translated or r4 r5 r4 to: ['gc_env.r[4] = gc_env.r[5] | gc_env.r[4]; // or r4, r5, r4']
Processing opcode: sth, operands: ['r4', '0x64(r3)']
Translated sth r4 0x64(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x64, gc_env.r[4]); // sth r4, 0x64(r3)']
Processing opcode: sth, operands: ['r0', '0x70(r3)']
Translated sth r0 0x70(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x70, gc_env.r[0]); // sth r0, 0x70(r3)']
Translated bl __OSLockSram to: __OSLockSram();
Processing opcode: lbz, operands: ['r0', '0x10(r3)']
Translated lbz r0 0x10(r3) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x10); // lbz r0, 0x10(r3)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated extsb r0 r0 to: ['gc_env.r[0] = (int32_t)(int8_t)(gc_env.r[0] & 0xFF); // extsb r0, r0']
Processing opcode: sth, operands: ['r29', 'lbl_8001EFFE@sda21(r0)']
Translated sth r29 lbl_8001EFFE@sda21(r0) to: ['gc_mem_write16(gc_env.ram, (uint32_t)&lbl_8001EFFE, gc_env.r[29]); // sth r29, lbl_8001EFFE@sda21(r0)']
Processing opcode: sth, operands: ['r0', 'lbl_8001EFFC@sda21(r0)']
Translated sth r0 lbl_8001EFFC@sda21(r0) to: ['gc_mem_write16(gc_env.ram, (uint32_t)&lbl_8001EFFC, gc_env.r[0]); // sth r0, lbl_8001EFFC@sda21(r0)']
Translated bl __OSUnlockSram to: __OSUnlockSram();
Processing opcode: lhz, operands: ['r30', '0x0(r28)']
Translated lhz r30 0x0(r28) to: ['gc_env.r[30] = gc_mem_read16(gc_env.ram, gc_env.r[28] + 0x0); // lhz r30, 0x0(r28)']
Processing opcode: addi, operands: ['r3', 'r31', '0x114']
Translated addi r3 r31 0x114 to: ['gc_env.r[3] = gc_env.r[31] + 276; // addi r3, r31, 0x114']
Processing opcode: addi, operands: ['r28', 'r31', '0x118']
Translated addi r28 r31 0x118 to: ['gc_env.r[28] = gc_env.r[31] + 280; // addi r28, r31, 0x118']
Translated extrwi r0 r30 1 29 to: ['gc_env.r[0] = (gc_env.r[30] >> 2) & 0x1; // extrwi r0, r30, 1, 29']
Processing opcode: stw, operands: ['r0', '0x114(r31)']
Translated stw r0 0x114(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x114, gc_env.r[0]); // stw r0, 0x114(r31)']
Translated extrwi r0 r30 2 22 to: ['gc_env.r[0] = (gc_env.r[30] >> 8) & 0x3; // extrwi r0, r30, 2, 22']
Processing opcode: stw, operands: ['r0', '0x118(r31)']
Translated stw r0 0x118(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x118, gc_env.r[0]); // stw r0, 0x118(r31)']
Processing opcode: lwz, operands: ['r0', '0x118(r31)']
Translated lwz r0 0x118(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x118); // lwz r0, 0x118(r31)']
Translated cmplwi r0 0x3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x3) ? 0 : ((uint32_t)gc_env.r[0] < 0x3 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800100A8 to: if (gc_env.cr[0] != 0) goto L_800100A8;
Translated b .L_800100AC to: goto L_800100AC;
Translated mr r29 r0 to: gc_env.r[29] = gc_env.r[0]; // Move register
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Translated slwi r3 r29 2 to: ['gc_env.r[3] = gc_env.r[29] << 2; // slwi r3, r29, 2']
Processing opcode: add, operands: ['r3', 'r3', 'r0']
Translated add r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] + gc_env.r[0]; // add r3, r3, r0']
Translated bl fn_8000FC30 to: fn_8000FC30();
Processing opcode: stw, operands: ['r3', '0x144(r31)']
Translated stw r3 0x144(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x144, gc_env.r[3]); // stw r3, 0x144(r31)']
Processing opcode: addi, operands: ['r4', 'r31', '0x144']
Translated addi r4 r31 0x144 to: ['gc_env.r[4] = gc_env.r[31] + 324; // addi r4, r31, 0x144']
Processing opcode: li, operands: ['r0', '0x280']
Translated li r0 0x280 to: ['gc_env.r[0] = 0x280; // li r0, 0x280']
Processing opcode: sth, operands: ['r30', '0x2(r31)']
Translated sth r30 0x2(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x2, gc_env.r[30]); // sth r30, 0x2(r31)']
Processing opcode: li, operands: ['r8', '0x0']
Translated li r8 0x0 to: ['gc_env.r[8] = 0x0; // li r8, 0x0']
Processing opcode: addi, operands: ['r6', 'r31', '0xf6']
Translated addi r6 r31 0xf6 to: ['gc_env.r[6] = gc_env.r[31] + 246; // addi r6, r31, 0xf6']
Processing opcode: lwz, operands: ['r4', '0x0(r4)']
Translated lwz r4 0x0(r4) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r4, (r4)']
Processing opcode: addi, operands: ['r3', 'r31', '0xf2']
Translated addi r3 r31 0xf2 to: ['gc_env.r[3] = gc_env.r[31] + 242; // addi r3, r31, 0xf2']
Processing opcode: stw, operands: ['r4', 'lbl_8001F020@sda21(r0)']
Translated stw r4 lbl_8001F020@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F020, gc_env.r[4]); // stw r4, lbl_8001F020@sda21(r0)']
Processing opcode: lwz, operands: ['r4', '0x0(r28)']
Translated lwz r4 0x0(r28) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r4, (r28)']
Processing opcode: stw, operands: ['r4', 'CurrTvMode_8001F024@sda21(r0)']
Translated stw r4 CurrTvMode_8001F024@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&CurrTvMode_8001F024, gc_env.r[4]); // stw r4, CurrTvMode_8001F024@sda21(r0)']
Processing opcode: sth, operands: ['r0', '0xf4(r31)']
Translated sth r0 0xf4(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0xF4, gc_env.r[0]); // sth r0, 0xF4(r31)']
Processing opcode: lwz, operands: ['r4', 'lbl_8001F020@sda21(r0)']
Translated lwz r4 lbl_8001F020@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F020); // lwz r4, lbl_8001F020@sda21(r0)']
Processing opcode: lhzu, operands: ['r0', '0x2(r4)']
Translated lhzu r0 0x2(r4) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[4] + 0x2); // lhzu r0, 0x2(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x2;']
Translated clrlslwi r0 r0 17 1 to: ['gc_env.r[0] = (gc_env.r[0] << 1) & 0x7FFF; // clrlslwi r0, r0, 17, 1']
Processing opcode: sth, operands: ['r0', '0xf6(r31)']
Translated sth r0 0xf6(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0xF6, gc_env.r[0]); // sth r0, 0xF6(r31)']
Processing opcode: lhz, operands: ['r0', '0xf4(r31)']
Translated lhz r0 0xf4(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0xf4); // lhz r0, 0xf4(r31)']
Translated subfic r0 r0 0x2d0 to: ['gc_env.r[0] = 720 - gc_env.r[0]; // subfic r0, r0, 720', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (720 >= gc_env.r[0] ? 0x20000000 : 0);']
Translated srawi r0 r0 1 to: ['gc_env.r[0] = ((int32_t)gc_env.r[0]) >> 1; // srawi r0, r0, 1']
Translated addze r0 r0 to: ['uint64_t addze_temp = (uint64_t)gc_env.r[0] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[0] = (uint32_t)addze_temp; // addze r0, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addze_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Processing opcode: sth, operands: ['r0', '0xf0(r31)']
Translated sth r0 0xf0(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0xF0, gc_env.r[0]); // sth r0, 0xF0(r31)']
Processing opcode: sth, operands: ['r8', '0xf2(r31)']
Translated sth r8 0xf2(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0xF2, gc_env.r[8]); // sth r8, 0xF2(r31)']
Processing opcode: lhz, operands: ['r0', '0xf4(r31)']
Translated lhz r0 0xf4(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0xf4); // lhz r0, 0xf4(r31)']
Translated lha r7 0xf0(r31) to: ['gc_env.r[7] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[31] + 0xF0); // lha r7, 0xF0(r31)']
Translated lha r5 lbl_8001EFFC@sda21(r0) to: ['// Error processing lha r5 lbl_8001EFFC@sda21(r0): Invalid immediate: lbl_8001EFFC@sda21']
Translated subfic r0 r0 0x2d0 to: ['gc_env.r[0] = 720 - gc_env.r[0]; // subfic r0, r0, 720', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (720 >= gc_env.r[0] ? 0x20000000 : 0);']
Processing opcode: lhz, operands: ['r9', '0x0(r4)']
Translated lhz r9 0x0(r4) to: ['gc_env.r[9] = gc_mem_read16(gc_env.ram, gc_env.r[4] + 0x0); // lhz r9, 0x0(r4)']
Processing opcode: add, operands: ['r5', 'r7', 'r5']
Translated add r5 r7 r5 to: ['gc_env.r[5] = gc_env.r[7] + gc_env.r[5]; // add r5, r7, r5']
Translated cmpw r5 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[5] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[5] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r5, r0']
Translated ble .L_80010138 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80010138; // ble .L_80010138']
Translated b .L_8001014C to: goto L_8001014C;
Translated cmpwi r5 0x0 to: gc_env.cr[0] = (gc_env.r[5] == 0x0) ? 0 : (gc_env.r[5] < 0x0 ? -1 : 1); // Compare with immediate
Translated bge .L_80010144 to: if (gc_env.cr[0] >= 0) goto L_80010144;
Translated b .L_80010148 to: goto L_80010148;
Translated mr r8 r5 to: gc_env.r[8] = gc_env.r[5]; // Move register
Translated mr r0 r8 to: gc_env.r[0] = gc_env.r[8]; // Move register
Processing opcode: sth, operands: ['r0', '0xf8(r31)']
Translated sth r0 0xf8(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0xF8, gc_env.r[0]); // sth r0, 0xF8(r31)']
Processing opcode: addi, operands: ['r8', 'r31', '0x110']
Translated addi r8 r31 0x110 to: ['gc_env.r[8] = gc_env.r[31] + 272; // addi r8, r31, 0x110']
Processing opcode: lwz, operands: ['r0', '0x110(r31)']
Translated lwz r0 0x110(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x110); // lwz r0, 0x110(r31)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80010168 to: if (gc_env.cr[0] != 0) goto L_80010168;
Processing opcode: li, operands: ['r11', '0x2']
Translated li r11 0x2 to: ['gc_env.r[11] = 0x2; // li r11, 0x2']
Translated b .L_8001016C to: goto L_8001016C;
Processing opcode: li, operands: ['r11', '0x1']
Translated li r11 0x1 to: ['gc_env.r[11] = 0x1; // li r11, 0x1']
Processing opcode: lhz, operands: ['r0', '0x0(r3)']
Translated lhz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x0); // lhz r0, 0x0(r3)']
Translated lha r5 lbl_8001EFFE@sda21(r0) to: ['// Error processing lha r5 lbl_8001EFFE@sda21(r0): Invalid immediate: lbl_8001EFFE@sda21']
Translated extsh r7 r0 to: ['gc_env.r[7] = (int32_t)(int16_t)(gc_env.r[0] & 0xFFFF); // extsh r7, r0']
Translated clrlwi r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Processing opcode: add, operands: ['r7', 'r7', 'r5']
Translated add r7 r7 r5 to: ['gc_env.r[7] = gc_env.r[7] + gc_env.r[5]; // add r7, r7, r5']
Translated cmpw r7 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[7] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[7] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r7, r0']
Translated ble .L_8001018C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8001018C; // ble .L_8001018C']
Translated b .L_80010190 to: goto L_80010190;
Translated mr r7 r0 to: gc_env.r[7] = gc_env.r[0]; // Move register
Processing opcode: sth, operands: ['r7', '0xfa(r31)']
Translated sth r7 0xfa(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0xFA, gc_env.r[7]); // sth r7, 0xFA(r31)']
Translated extsh r7 r9 to: ['gc_env.r[7] = (int32_t)(int16_t)(gc_env.r[9] & 0xFFFF); // extsh r7, r9']
Translated slwi r7 r7 1 to: ['gc_env.r[7] = gc_env.r[7] << 1; // slwi r7, r7, 1']
Processing opcode: lhz, operands: ['r28', '0x0(r6)']
Translated lhz r28 0x0(r6) to: ['gc_env.r[28] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x0); // lhz r28, 0x0(r6)']
Processing opcode: subf, operands: ['r12', 'r0', 'r7']
Translated subf r12 r0 r7 to: ['gc_env.r[12] = gc_env.r[7] - gc_env.r[0]; // subf r12, r0, r7']
Translated lha r10 0x0(r3) to: ['gc_env.r[10] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x0); // lha r10, 0x0(r3)']
Translated extsh r7 r28 to: ['gc_env.r[7] = (int32_t)(int16_t)(gc_env.r[28] & 0xFFFF); // extsh r7, r28']
Processing opcode: add, operands: ['r9', 'r7', 'r5']
Translated add r9 r7 r5 to: ['gc_env.r[9] = gc_env.r[7] + gc_env.r[5]; // add r9, r7, r5']
Processing opcode: add, operands: ['r9', 'r10', 'r9']
Translated add r9 r10 r9 to: ['gc_env.r[9] = gc_env.r[10] + gc_env.r[9]; // add r9, r10, r9']
Processing opcode: subf, operands: ['r7', 'r12', 'r9']
Translated subf. r7 r12 r9 to: ['gc_env.r[7] = gc_env.r[9] - gc_env.r[12]; // subf r7, r12, r9']
Translated ble .L_800101C4 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_800101C4; // ble .L_800101C4']
Processing opcode: subf, operands: ['r9', 'r12', 'r9']
Translated subf r9 r12 r9 to: ['gc_env.r[9] = gc_env.r[9] - gc_env.r[12]; // subf r9, r12, r9']
Translated b .L_800101C8 to: goto L_800101C8;
Processing opcode: li, operands: ['r9', '0x0']
Translated li r9 0x0 to: ['gc_env.r[9] = 0x0; // li r9, 0x0']
Processing opcode: add, operands: ['r10', 'r10', 'r5']
Translated add r10 r10 r5 to: ['gc_env.r[10] = gc_env.r[10] + gc_env.r[5]; // add r10, r10, r5']
Processing opcode: subf, operands: ['r7', 'r0', 'r10']
Translated subf. r7 r0 r10 to: ['gc_env.r[7] = gc_env.r[10] - gc_env.r[0]; // subf r7, r0, r10']
Translated bge .L_800101DC to: if (gc_env.cr[0] >= 0) goto L_800101DC;
Processing opcode: subf, operands: ['r7', 'r0', 'r10']
Translated subf r7 r0 r10 to: ['gc_env.r[7] = gc_env.r[10] - gc_env.r[0]; // subf r7, r0, r10']
Translated b .L_800101E0 to: goto L_800101E0;
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Processing opcode: add, operands: ['r7', 'r28', 'r7']
Translated add r7 r28 r7 to: ['gc_env.r[7] = gc_env.r[28] + gc_env.r[7]; // add r7, r28, r7']
Processing opcode: subf, operands: ['r7', 'r9', 'r7']
Translated subf r7 r9 r7 to: ['gc_env.r[7] = gc_env.r[7] - gc_env.r[9]; // subf r7, r9, r7']
Processing opcode: sth, operands: ['r7', '0xfc(r31)']
Translated sth r7 0xfc(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0xFC, gc_env.r[7]); // sth r7, 0xFC(r31)']
Translated lha r7 0x0(r3) to: ['gc_env.r[7] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x0); // lha r7, 0x0(r3)']
Processing opcode: add, operands: ['r9', 'r7', 'r5']
Translated add r9 r7 r5 to: ['gc_env.r[9] = gc_env.r[7] + gc_env.r[5]; // add r9, r7, r5']
Processing opcode: subf, operands: ['r7', 'r0', 'r9']
Translated subf. r7 r0 r9 to: ['gc_env.r[7] = gc_env.r[9] - gc_env.r[0]; // subf r7, r0, r9']
Translated bge .L_80010204 to: if (gc_env.cr[0] >= 0) goto L_80010204;
Processing opcode: subf, operands: ['r7', 'r0', 'r9']
Translated subf r7 r0 r9 to: ['gc_env.r[7] = gc_env.r[9] - gc_env.r[0]; // subf r7, r0, r9']
Translated b .L_80010208 to: goto L_80010208;
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Processing opcode: divw, operands: ['r10', 'r7', 'r11']
Translated divw r10 r7 r11 to: ['gc_env.r[10] = gc_env.r[7] / gc_env.r[11]; // divw r10, r7, r11']
Processing opcode: addi, operands: ['r7', 'r31', '0x108']
Translated addi r7 r31 0x108 to: ['gc_env.r[7] = gc_env.r[31] + 264; // addi r7, r31, 0x108']
Processing opcode: lhz, operands: ['r9', '0x108(r31)']
Translated lhz r9 0x108(r31) to: ['gc_env.r[9] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x108); // lhz r9, 0x108(r31)']
Processing opcode: subf, operands: ['r9', 'r10', 'r9']
Translated subf r9 r10 r9 to: ['gc_env.r[9] = gc_env.r[9] - gc_env.r[10]; // subf r9, r10, r9']
Processing opcode: sth, operands: ['r9', '0xfe(r31)']
Translated sth r9 0xfe(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0xFE, gc_env.r[9]); // sth r9, 0xFE(r31)']
Translated lha r6 0x0(r6) to: ['gc_env.r[6] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x0); // lha r6, 0x0(r6)']
Translated lha r9 0x0(r3) to: ['gc_env.r[9] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x0); // lha r9, 0x0(r3)']
Processing opcode: add, operands: ['r6', 'r6', 'r5']
Translated add r6 r6 r5 to: ['gc_env.r[6] = gc_env.r[6] + gc_env.r[5]; // add r6, r6, r5']
Processing opcode: add, operands: ['r6', 'r9', 'r6']
Translated add r6 r9 r6 to: ['gc_env.r[6] = gc_env.r[9] + gc_env.r[6]; // add r6, r9, r6']
Processing opcode: subf, operands: ['r3', 'r12', 'r6']
Translated subf. r3 r12 r6 to: ['gc_env.r[3] = gc_env.r[6] - gc_env.r[12]; // subf r3, r12, r6']
Translated ble .L_8001023C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8001023C; // ble .L_8001023C']
Processing opcode: subf, operands: ['r6', 'r12', 'r6']
Translated subf r6 r12 r6 to: ['gc_env.r[6] = gc_env.r[6] - gc_env.r[12]; // subf r6, r12, r6']
Translated b .L_80010240 to: goto L_80010240;
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Processing opcode: add, operands: ['r5', 'r9', 'r5']
Translated add r5 r9 r5 to: ['gc_env.r[5] = gc_env.r[9] + gc_env.r[5]; // add r5, r9, r5']
Processing opcode: subf, operands: ['r3', 'r0', 'r5']
Translated subf. r3 r0 r5 to: ['gc_env.r[3] = gc_env.r[5] - gc_env.r[0]; // subf r3, r0, r5']
Translated bge .L_80010254 to: if (gc_env.cr[0] >= 0) goto L_80010254;
Processing opcode: subf, operands: ['r0', 'r0', 'r5']
Translated subf r0 r0 r5 to: ['gc_env.r[0] = gc_env.r[5] - gc_env.r[0]; // subf r0, r0, r5']
Translated b .L_80010258 to: goto L_80010258;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: divw, operands: ['r0', 'r0', 'r11']
Translated divw r0 r0 r11 to: ['gc_env.r[0] = gc_env.r[0] / gc_env.r[11]; // divw r0, r0, r11']
Processing opcode: lhz, operands: ['r3', '0x10c(r31)']
Translated lhz r3 0x10c(r31) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x10c); // lhz r3, 0x10c(r31)']
Processing opcode: add, operands: ['r0', 'r3', 'r0']
Translated add r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] + gc_env.r[0]; // add r0, r3, r0']
Processing opcode: divw, operands: ['r5', 'r6', 'r11']
Translated divw r5 r6 r11 to: ['gc_env.r[5] = gc_env.r[6] / gc_env.r[11]; // divw r5, r6, r11']
Processing opcode: subf, operands: ['r0', 'r5', 'r0']
Translated subf r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[5]; // subf r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x100(r31)']
Translated sth r0 0x100(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x100, gc_env.r[0]); // sth r0, 0x100(r31)']
Processing opcode: li, operands: ['r9', '0x280']
Translated li r9 0x280 to: ['gc_env.r[9] = 0x280; // li r9, 0x280']
Processing opcode: li, operands: ['r28', '0x0']
Translated li r28 0x0 to: ['gc_env.r[28] = 0x0; // li r28, 0x0']
Processing opcode: sth, operands: ['r9', '0x102(r31)']
Translated sth r9 0x102(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x102, gc_env.r[9]); // sth r9, 0x102(r31)']
Processing opcode: li, operands: ['r5', '0x28']
Translated li r5 0x28 to: ['gc_env.r[5] = 0x28; // li r5, 0x28']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: lhz, operands: ['r6', '0x0(r4)']
Translated lhz r6 0x0(r4) to: ['gc_env.r[6] = gc_mem_read16(gc_env.ram, gc_env.r[4] + 0x0); // lhz r6, 0x0(r4)']
Processing opcode: li, operands: ['r3', 'lbl_8001EFE8@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Translated clrlslwi r6 r6 17 1 to: ['gc_env.r[6] = (gc_env.r[6] << 1) & 0x7FFF; // clrlslwi r6, r6, 17, 1']
Processing opcode: sth, operands: ['r6', '0x104(r31)']
Translated sth r6 0x104(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x104, gc_env.r[6]); // sth r6, 0x104(r31)']
Processing opcode: sth, operands: ['r28', '0x106(r31)']
Translated sth r28 0x106(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x106, gc_env.r[28]); // sth r28, 0x106(r31)']
Processing opcode: sth, operands: ['r28', '0x0(r7)']
Translated sth r28 0x0(r7) to: ['gc_mem_write16(gc_env.ram, gc_env.r[7], gc_env.r[28]); // sth r28, (r7)']
Processing opcode: sth, operands: ['r9', '0x10a(r31)']
Translated sth r9 0x10a(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x10A, gc_env.r[9]); // sth r9, 0x10A(r31)']
Processing opcode: lhz, operands: ['r4', '0x0(r4)']
Translated lhz r4 0x0(r4) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[4] + 0x0); // lhz r4, 0x0(r4)']
Translated clrlslwi r4 r4 17 1 to: ['gc_env.r[4] = (gc_env.r[4] << 1) & 0x7FFF; // clrlslwi r4, r4, 17, 1']
Processing opcode: sth, operands: ['r4', '0x10c(r31)']
Translated sth r4 0x10c(r31) to: ['gc_mem_write16(gc_env.ram, gc_env.r[31] + 0x10C, gc_env.r[4]); // sth r4, 0x10C(r31)']
Processing opcode: stw, operands: ['r28', '0x0(r8)']
Translated stw r28 0x0(r8) to: ['gc_mem_write32(gc_env.ram, gc_env.r[8], gc_env.r[28]); // stw r28, (r8)']
Processing opcode: stb, operands: ['r5', '0x11c(r31)']
Translated stb r5 0x11c(r31) to: ['gc_mem_write8(gc_env.ram, gc_env.r[31] + 0x11C, gc_env.r[5]); // stb r5, 0x11C(r31)']
Processing opcode: stb, operands: ['r5', '0x11d(r31)']
Translated stb r5 0x11d(r31) to: ['gc_mem_write8(gc_env.ram, gc_env.r[31] + 0x11D, gc_env.r[5]); // stb r5, 0x11D(r31)']
Processing opcode: stb, operands: ['r5', '0x11e(r31)']
Translated stb r5 0x11e(r31) to: ['gc_mem_write8(gc_env.ram, gc_env.r[31] + 0x11E, gc_env.r[5]); // stb r5, 0x11E(r31)']
Processing opcode: stb, operands: ['r28', '0x12c(r31)']
Translated stb r28 0x12c(r31) to: ['gc_mem_write8(gc_env.ram, gc_env.r[31] + 0x12C, gc_env.r[28]); // stb r28, 0x12C(r31)']
Processing opcode: stw, operands: ['r0', '0x130(r31)']
Translated stw r0 0x130(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x130, gc_env.r[0]); // stw r0, 0x130(r31)']
Processing opcode: stw, operands: ['r28', '0x134(r31)']
Translated stw r28 0x134(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x134, gc_env.r[28]); // stw r28, 0x134(r31)']
Translated bl OSInitThreadQueue to: OSInitThreadQueue();
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lhz, operands: ['r0', '0x2030(r3)']
Translated lhz r0 0x2030(r3) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x2030); // lhz r0, 0x2030(r3)']
Processing opcode: addi, operands: ['r4', 'r3', '0x2000']
Translated addi r4 r3 0x2000 to: ['gc_env.r[4] = gc_env.r[3] + 8192; // addi r4, r3, 0x2000']
Processing opcode: addi, operands: ['r5', 'r3', '0x2000']
Translated addi r5 r3 0x2000 to: ['gc_env.r[5] = gc_env.r[3] + 8192; // addi r5, r3, 0x2000']
Translated clrlwi r0 r0 17 to: ['gc_env.r[0] = gc_env.r[0] & 0x7FFF; // clrlwi r0, r0, 17']
Processing opcode: sth, operands: ['r0', '0x30(r4)']
Translated sth r0 0x30(r4) to: ['gc_mem_write16(gc_env.ram, gc_env.r[4] + 0x30, gc_env.r[0]); // sth r0, 0x30(r4)']
Translated lis r3 fn_8000FA08@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8000FA08 >> 16) & 0xFFFF; // lis r3, fn_8000FA08@ha']
Processing opcode: addi, operands: ['r4', 'r3', 'fn_8000FA08@l']
Translated addi r4 r3 fn_8000FA08@l to: ['gc_env.r[4] = (uint32_t)&fn_8000FA08; // lis + addi fn_8000FA08 (completing pattern)']
Processing opcode: lhz, operands: ['r0', '0x34(r5)']
Translated lhz r0 0x34(r5) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[5] + 0x34); // lhz r0, 0x34(r5)']
Processing opcode: li, operands: ['r3', '0x18']
Translated li r3 0x18 to: ['gc_env.r[3] = 0x18; // li r3, 0x18']
Translated clrlwi r0 r0 17 to: ['gc_env.r[0] = gc_env.r[0] & 0x7FFF; // clrlwi r0, r0, 17']
Processing opcode: sth, operands: ['r0', '0x34(r5)']
Translated sth r0 0x34(r5) to: ['gc_mem_write16(gc_env.ram, gc_env.r[5] + 0x34, gc_env.r[0]); // sth r0, 0x34(r5)']
Processing opcode: stw, operands: ['r28', 'lbl_8001EFF0@sda21(r0)']
Translated stw r28 lbl_8001EFF0@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFF0, gc_env.r[28]); // stw r28, lbl_8001EFF0@sda21(r0)']
Processing opcode: stw, operands: ['r28', 'lbl_8001EFF4@sda21(r0)']
Translated stw r28 lbl_8001EFF4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFF4, gc_env.r[28]); // stw r28, lbl_8001EFF4@sda21(r0)']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Processing opcode: li, operands: ['r3', '0x80']
Translated li r3 0x80 to: ['gc_env.r[3] = 0x80; // li r3, 0x80']
Translated bl __OSUnmaskInterrupts to: __OSUnmaskInterrupts();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: lwz, operands: ['r29', '0xc(r1)']
Translated lwz r29 0xc(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r29, 0xC(r1)']
Processing opcode: lwz, operands: ['r28', '0x8(r1)']
Translated lwz r28 0x8(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r28, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: stw, operands: ['r30', '0x8(r1)']
Translated stw r30 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[30]); // stw r30, 0x8(r1)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r30', 'lbl_8001EFE0@sda21(r0)']
Translated lwz r30 lbl_8001EFE0@sda21(r0) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFE0); // lwz r30, lbl_8001EFE0@sda21(r0)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: li, operands: ['r3', 'lbl_8001EFE8@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Translated bl fn_80009A90 to: fn_80009A90();
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFE0@sda21(r0)']
Translated lwz r0 lbl_8001EFE0@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFE0); // lwz r0, lbl_8001EFE0@sda21(r0)']
Translated cmplw r30 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[30] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated beq .L_80010350 to: if (gc_env.cr[0] == 0) goto L_80010350;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: lwz, operands: ['r30', '0x8(r1)']
Translated lwz r30 0x8(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r30, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: stwu, operands: ['r1', '-0x48(r1)']
Translated stwu r1 -0x48(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x48, gc_env.r[1]); // stwu r1, -0x48(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x48;']
Translated lis r9 lbl_8001CB08@ha to: ['gc_env.r[9] = ((uint32_t)&lbl_8001CB08 >> 16) & 0xFFFF; // lis r9, lbl_8001CB08@ha']
Processing opcode: addi, operands: ['r9', 'r9', 'lbl_8001CB08@l']
Translated addi r9 r9 lbl_8001CB08@l to: ['gc_env.r[9] = (uint32_t)&lbl_8001CB08; // lis + addi lbl_8001CB08 (completing pattern)']
Processing opcode: stw, operands: ['r31', '0x44(r1)']
Translated stw r31 0x44(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x44, gc_env.r[31]); // stw r31, 0x44(r1)']
Processing opcode: lbz, operands: ['r8', '0x2c(r3)']
Translated lbz r8 0x2c(r3) to: ['gc_env.r[8] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x2c); // lbz r8, 0x2c(r3)']
Processing opcode: lhz, operands: ['r0', '0xe(r3)']
Translated lhz r0 0xe(r3) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0xe); // lhz r0, 0xe(r3)']
Translated slwi r31 r8 5 to: ['gc_env.r[31] = gc_env.r[8] << 5; // slwi r31, r8, 5']
Processing opcode: lhz, operands: ['r8', '0x16(r3)']
Translated lhz r8 0x16(r3) to: ['gc_env.r[8] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x16); // lhz r8, 0x16(r3)']
Processing opcode: mullw, operands: ['r0', 'r31', 'r0']
Translated mullw r0 r31 r0 to: ['gc_env.r[0] = gc_env.r[31] * gc_env.r[0]; // mullw r0, r31, r0']
Processing opcode: lwz, operands: ['r11', '0x20(r3)']
Translated lwz r11 0x20(r3) to: ['gc_env.r[11] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x20); // lwz r11, 0x20(r3)']
Processing opcode: lwz, operands: ['r10', '0x30(r3)']
Translated lwz r10 0x30(r3) to: ['gc_env.r[10] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x30); // lwz r10, 0x30(r3)']
Processing opcode: lhz, operands: ['r12', '0xa(r3)']
Translated lhz r12 0xa(r3) to: ['gc_env.r[12] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0xa); // lhz r12, 0xa(r3)']
Translated extlwi r8 r8 27 1 to: ['uint32_t rotated = (gc_env.r[8] << 1) | (gc_env.r[8] >> 31); // extlwi r8, r8, 27, 1', 'gc_env.r[8] = rotated & 0x7FFFFFF;']
Processing opcode: add, operands: ['r0', 'r8', 'r0']
Translated add r0 r8 r0 to: ['gc_env.r[0] = gc_env.r[8] + gc_env.r[0]; // add r0, r8, r0']
Processing opcode: add, operands: ['r0', 'r10', 'r0']
Translated add r0 r10 r0 to: ['gc_env.r[0] = gc_env.r[10] + gc_env.r[0]; // add r0, r10, r0']
Translated cmpwi r11 0x0 to: gc_env.cr[0] = (gc_env.r[11] == 0x0) ? 0 : (gc_env.r[11] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Translated bne .L_800103D4 to: if (gc_env.cr[0] != 0) goto L_800103D4;
Processing opcode: lwz, operands: ['r8', '0x0(r4)']
Translated lwz r8 0x0(r4) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r8, (r4)']
Translated b .L_800103DC to: goto L_800103DC;
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Processing opcode: add, operands: ['r8', 'r0', 'r31']
Translated add r8 r0 r31 to: ['gc_env.r[8] = gc_env.r[0] + gc_env.r[31]; // add r8, r0, r31']
Translated srawi r0 r12 1 to: ['gc_env.r[0] = ((int32_t)gc_env.r[12]) >> 1; // srawi r0, r12, 1']
Processing opcode: stw, operands: ['r8', '0x0(r5)']
Translated stw r8 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[8]); // stw r8, (r5)']
Translated addze r0 r0 to: ['uint64_t addze_temp = (uint64_t)gc_env.r[0] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[0] = (uint32_t)addze_temp; // addze r0, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addze_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated slwi r0 r0 1 to: ['gc_env.r[0] = gc_env.r[0] << 1; // slwi r0, r0, 1']
Translated subfc r0 r0 r12 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[12] - gc_env.r[0];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r0, r12', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[12] >= gc_env.r[0] ? 0x20000000 : 0);']
Translated cmpwi r0 0x1 to: gc_env.cr[0] = (gc_env.r[0] == 0x1) ? 0 : (gc_env.r[0] < 0x1 ? -1 : 1); // Compare with immediate
Translated bne .L_80010408 to: if (gc_env.cr[0] != 0) goto L_80010408;
Processing opcode: lwz, operands: ['r8', '0x0(r4)']
Translated lwz r8 0x0(r4) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r8, (r4)']
Processing opcode: lwz, operands: ['r0', '0x0(r5)']
Translated lwz r0 0x0(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r0, (r5)']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Processing opcode: stw, operands: ['r8', '0x0(r5)']
Translated stw r8 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[8]); // stw r8, (r5)']
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated clrlwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] & 0x3FFFFFFF; // clrlwi r0, r0, 2']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Processing opcode: lwz, operands: ['r0', '0x0(r5)']
Translated lwz r0 0x0(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r0, (r5)']
Translated clrlwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] & 0x3FFFFFFF; // clrlwi r0, r0, 2']
Processing opcode: stw, operands: ['r0', '0x0(r5)']
Translated stw r0 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stw r0, (r5)']
Processing opcode: lwz, operands: ['r0', '0x44(r3)']
Translated lwz r0 0x44(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x44); // lwz r0, 0x44(r3)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800104B8 to: if (gc_env.cr[0] == 0) goto L_800104B8;
Processing opcode: lbz, operands: ['r8', '0x2c(r3)']
Translated lbz r8 0x2c(r3) to: ['gc_env.r[8] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x2c); // lbz r8, 0x2c(r3)']
Processing opcode: lhz, operands: ['r0', '0xe(r3)']
Translated lhz r0 0xe(r3) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0xe); // lhz r0, 0xe(r3)']
Translated slwi r31 r8 5 to: ['gc_env.r[31] = gc_env.r[8] << 5; // slwi r31, r8, 5']
Processing opcode: lhz, operands: ['r8', '0x16(r3)']
Translated lhz r8 0x16(r3) to: ['gc_env.r[8] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x16); // lhz r8, 0x16(r3)']
Processing opcode: mullw, operands: ['r0', 'r31', 'r0']
Translated mullw r0 r31 r0 to: ['gc_env.r[0] = gc_env.r[31] * gc_env.r[0]; // mullw r0, r31, r0']
Processing opcode: lwz, operands: ['r11', '0x20(r3)']
Translated lwz r11 0x20(r3) to: ['gc_env.r[11] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x20); // lwz r11, 0x20(r3)']
Processing opcode: lwz, operands: ['r10', '0x48(r3)']
Translated lwz r10 0x48(r3) to: ['gc_env.r[10] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x48); // lwz r10, 0x48(r3)']
Processing opcode: lhz, operands: ['r12', '0xa(r3)']
Translated lhz r12 0xa(r3) to: ['gc_env.r[12] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0xa); // lhz r12, 0xa(r3)']
Translated extlwi r8 r8 27 1 to: ['uint32_t rotated = (gc_env.r[8] << 1) | (gc_env.r[8] >> 31); // extlwi r8, r8, 27, 1', 'gc_env.r[8] = rotated & 0x7FFFFFF;']
Processing opcode: add, operands: ['r0', 'r8', 'r0']
Translated add r0 r8 r0 to: ['gc_env.r[0] = gc_env.r[8] + gc_env.r[0]; // add r0, r8, r0']
Processing opcode: add, operands: ['r0', 'r10', 'r0']
Translated add r0 r10 r0 to: ['gc_env.r[0] = gc_env.r[10] + gc_env.r[0]; // add r0, r10, r0']
Translated cmpwi r11 0x0 to: gc_env.cr[0] = (gc_env.r[11] == 0x0) ? 0 : (gc_env.r[11] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: stw, operands: ['r0', '0x0(r6)']
Translated stw r0 0x0(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6], gc_env.r[0]); // stw r0, (r6)']
Translated bne .L_8001046C to: if (gc_env.cr[0] != 0) goto L_8001046C;
Processing opcode: lwz, operands: ['r8', '0x0(r6)']
Translated lwz r8 0x0(r6) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r8, (r6)']
Translated b .L_80010474 to: goto L_80010474;
Processing opcode: lwz, operands: ['r0', '0x0(r6)']
Translated lwz r0 0x0(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r0, (r6)']
Processing opcode: add, operands: ['r8', 'r0', 'r31']
Translated add r8 r0 r31 to: ['gc_env.r[8] = gc_env.r[0] + gc_env.r[31]; // add r8, r0, r31']
Translated srawi r0 r12 1 to: ['gc_env.r[0] = ((int32_t)gc_env.r[12]) >> 1; // srawi r0, r12, 1']
Processing opcode: stw, operands: ['r8', '0x0(r7)']
Translated stw r8 0x0(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7], gc_env.r[8]); // stw r8, (r7)']
Translated addze r0 r0 to: ['uint64_t addze_temp = (uint64_t)gc_env.r[0] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[0] = (uint32_t)addze_temp; // addze r0, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addze_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated slwi r0 r0 1 to: ['gc_env.r[0] = gc_env.r[0] << 1; // slwi r0, r0, 1']
Translated subfc r0 r0 r12 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[12] - gc_env.r[0];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r0, r12', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[12] >= gc_env.r[0] ? 0x20000000 : 0);']
Translated cmpwi r0 0x1 to: gc_env.cr[0] = (gc_env.r[0] == 0x1) ? 0 : (gc_env.r[0] < 0x1 ? -1 : 1); // Compare with immediate
Translated bne .L_800104A0 to: if (gc_env.cr[0] != 0) goto L_800104A0;
Processing opcode: lwz, operands: ['r8', '0x0(r6)']
Translated lwz r8 0x0(r6) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r8, (r6)']
Processing opcode: lwz, operands: ['r0', '0x0(r7)']
Translated lwz r0 0x0(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7]); // lwz r0, (r7)']
Processing opcode: stw, operands: ['r0', '0x0(r6)']
Translated stw r0 0x0(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6], gc_env.r[0]); // stw r0, (r6)']
Processing opcode: stw, operands: ['r8', '0x0(r7)']
Translated stw r8 0x0(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7], gc_env.r[8]); // stw r8, (r7)']
Processing opcode: lwz, operands: ['r0', '0x0(r6)']
Translated lwz r0 0x0(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r0, (r6)']
Translated clrlwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] & 0x3FFFFFFF; // clrlwi r0, r0, 2']
Processing opcode: stw, operands: ['r0', '0x0(r6)']
Translated stw r0 0x0(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6], gc_env.r[0]); // stw r0, (r6)']
Processing opcode: lwz, operands: ['r0', '0x0(r7)']
Translated lwz r0 0x0(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7]); // lwz r0, (r7)']
Translated clrlwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] & 0x3FFFFFFF; // clrlwi r0, r0, 2']
Processing opcode: stw, operands: ['r0', '0x0(r7)']
Translated stw r0 0x0(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7], gc_env.r[0]); // stw r0, (r7)']
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated lis r8 0x100 to: ['gc_env.r[8] = 256 << 16; // lis r8, 0x100']
Translated cmplw r0 r8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[8]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[8] ? -1 : 1); // Logical compare word
Translated bge .L_800104F4 to: if (gc_env.cr[0] >= 0) goto L_800104F4;
Processing opcode: lwz, operands: ['r0', '0x0(r5)']
Translated lwz r0 0x0(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r0, (r5)']
Translated cmplw r0 r8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[8]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[8] ? -1 : 1); // Logical compare word
Translated bge .L_800104F4 to: if (gc_env.cr[0] >= 0) goto L_800104F4;
Processing opcode: lwz, operands: ['r0', '0x0(r6)']
Translated lwz r0 0x0(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r0, (r6)']
Translated cmplw r0 r8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[8]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[8] ? -1 : 1); // Logical compare word
Translated bge .L_800104F4 to: if (gc_env.cr[0] >= 0) goto L_800104F4;
Processing opcode: lwz, operands: ['r0', '0x0(r7)']
Translated lwz r0 0x0(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7]); // lwz r0, (r7)']
Translated cmplw r0 r8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[8]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[8] ? -1 : 1); // Logical compare word
Translated bge .L_800104F4 to: if (gc_env.cr[0] >= 0) goto L_800104F4;
Processing opcode: li, operands: ['r10', '0x0']
Translated li r10 0x0 to: ['gc_env.r[10] = 0x0; // li r10, 0x0']
Translated b .L_800104F8 to: goto L_800104F8;
Processing opcode: li, operands: ['r10', '0x1']
Translated li r10 0x1 to: ['gc_env.r[10] = 0x1; // li r10, 0x1']
Translated cmplwi r10 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[10] == 0x0) ? 0 : ((uint32_t)gc_env.r[10] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80010530 to: if (gc_env.cr[0] == 0) goto L_80010530;
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Processing opcode: lwz, operands: ['r0', '0x0(r5)']
Translated lwz r0 0x0(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r0, (r5)']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Processing opcode: stw, operands: ['r0', '0x0(r5)']
Translated stw r0 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stw r0, (r5)']
Processing opcode: lwz, operands: ['r0', '0x0(r6)']
Translated lwz r0 0x0(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r0, (r6)']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Processing opcode: stw, operands: ['r0', '0x0(r6)']
Translated stw r0 0x0(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6], gc_env.r[0]); // stw r0, (r6)']
Processing opcode: lwz, operands: ['r0', '0x0(r7)']
Translated lwz r0 0x0(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7]); // lwz r0, (r7)']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Processing opcode: stw, operands: ['r0', '0x0(r7)']
Translated stw r0 0x0(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7], gc_env.r[0]); // stw r0, (r7)']
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated slwi r11 r10 12 to: ['gc_env.r[11] = gc_env.r[10] << 12; // slwi r11, r10, 12']
Translated lis r8 0x1 to: ['gc_env.r[8] = 1 << 16; // lis r8, 0x1']
Processing opcode: sth, operands: ['r0', '0x1e(r9)']
Translated sth r0 0x1e(r9) to: ['gc_mem_write16(gc_env.ram, gc_env.r[9] + 0x1E, gc_env.r[0]); // sth r0, 0x1E(r9)']
Translated lis r0 0x2 to: ['gc_env.r[0] = 2 << 16; // lis r0, 0x2']
Processing opcode: lwz, operands: ['r10', 'lbl_8001F008@sda21(r0)']
Translated lwz r10 lbl_8001F008@sda21(r0) to: ['gc_env.r[10] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r10, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r12', 'lbl_8001F00C@sda21(r0)']
Translated lwz r12 lbl_8001F00C@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r12, lbl_8001F00C@sda21(r0)']
Translated or r10 r10 r8 to: ['gc_env.r[10] = gc_env.r[10] | gc_env.r[8]; // or r10, r10, r8']
Processing opcode: stw, operands: ['r12', 'lbl_8001F00C@sda21(r0)']
Translated stw r12 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[12]); // stw r12, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r10', 'lbl_8001F008@sda21(r0)']
Translated stw r10 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[10]); // stw r10, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r10', '0x0(r4)']
Translated lwz r10 0x0(r4) to: ['gc_env.r[10] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r10, (r4)']
Processing opcode: lbz, operands: ['r4', '0x3c(r3)']
Translated lbz r4 0x3c(r3) to: ['gc_env.r[4] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x3c); // lbz r4, 0x3c(r3)']
Translated srwi r10 r10 16 to: ['gc_env.r[10] = gc_env.r[10] >> 16; // srwi r10, r10, 16']
Translated slwi r4 r4 8 to: ['gc_env.r[4] = gc_env.r[4] << 8; // slwi r4, r4, 8']
Translated or r4 r10 r4 to: ['gc_env.r[4] = gc_env.r[10] | gc_env.r[4]; // or r4, r10, r4']
Translated or r4 r11 r4 to: ['gc_env.r[4] = gc_env.r[11] | gc_env.r[4]; // or r4, r11, r4']
Processing opcode: sth, operands: ['r4', '0x1c(r9)']
Translated sth r4 0x1c(r9) to: ['gc_mem_write16(gc_env.ram, gc_env.r[9] + 0x1C, gc_env.r[4]); // sth r4, 0x1C(r9)']
Processing opcode: lwz, operands: ['r4', 'lbl_8001F008@sda21(r0)']
Translated lwz r4 lbl_8001F008@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r4, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r10', 'lbl_8001F00C@sda21(r0)']
Translated lwz r10 lbl_8001F00C@sda21(r0) to: ['gc_env.r[10] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r10, lbl_8001F00C@sda21(r0)']
Translated or r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] | gc_env.r[0]; // or r0, r4, r0']
Processing opcode: stw, operands: ['r10', 'lbl_8001F00C@sda21(r0)']
Translated stw r10 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[10]); // stw r10, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x0(r5)']
Translated lwz r0 0x0(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r0, (r5)']
Processing opcode: sth, operands: ['r0', '0x26(r9)']
Translated sth r0 0x26(r9) to: ['gc_mem_write16(gc_env.ram, gc_env.r[9] + 0x26, gc_env.r[0]); // sth r0, 0x26(r9)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated lwz r0 lbl_8001F008@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r4', 'lbl_8001F00C@sda21(r0)']
Translated lwz r4 lbl_8001F00C@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r4, lbl_8001F00C@sda21(r0)']
Translated ori r0 r0 0x1000 to: ['gc_env.r[0] |= 4096; // ori r0, r0, 0x1000']
Processing opcode: stw, operands: ['r4', 'lbl_8001F00C@sda21(r0)']
Translated stw r4 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[4]); // stw r4, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x0(r5)']
Translated lwz r0 0x0(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r0, (r5)']
Translated srwi r0 r0 16 to: ['gc_env.r[0] = gc_env.r[0] >> 16; // srwi r0, r0, 16']
Processing opcode: sth, operands: ['r0', '0x24(r9)']
Translated sth r0 0x24(r9) to: ['gc_mem_write16(gc_env.ram, gc_env.r[9] + 0x24, gc_env.r[0]); // sth r0, 0x24(r9)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated lwz r0 lbl_8001F008@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r4', 'lbl_8001F00C@sda21(r0)']
Translated lwz r4 lbl_8001F00C@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r4, lbl_8001F00C@sda21(r0)']
Translated ori r0 r0 0x2000 to: ['gc_env.r[0] |= 8192; // ori r0, r0, 0x2000']
Processing opcode: stw, operands: ['r4', 'lbl_8001F00C@sda21(r0)']
Translated stw r4 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[4]); // stw r4, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x44(r3)']
Translated lwz r0 0x44(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x44); // lwz r0, 0x44(r3)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8001064C to: if (gc_env.cr[0] == 0) goto L_8001064C;
Processing opcode: lwz, operands: ['r3', '0x0(r6)']
Translated lwz r3 0x0(r6) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r3, (r6)']
Processing opcode: addi, operands: ['r0', 'r8', '-0x8000']
Translated addi r0 r8 -0x8000 to: ['gc_env.r[0] = gc_env.r[8] + -32768; // addi r0, r8, -0x8000']
Processing opcode: sth, operands: ['r3', '0x22(r9)']
Translated sth r3 0x22(r9) to: ['gc_mem_write16(gc_env.ram, gc_env.r[9] + 0x22, gc_env.r[3]); // sth r3, 0x22(r9)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001F008@sda21(r0)']
Translated lwz r3 lbl_8001F008@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r3, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r4', 'lbl_8001F00C@sda21(r0)']
Translated lwz r4 lbl_8001F00C@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r4, lbl_8001F00C@sda21(r0)']
Translated ori r3 r3 0x4000 to: ['gc_env.r[3] |= 16384; // ori r3, r3, 0x4000']
Processing opcode: stw, operands: ['r4', 'lbl_8001F00C@sda21(r0)']
Translated stw r4 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[4]); // stw r4, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r3', 'lbl_8001F008@sda21(r0)']
Translated stw r3 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[3]); // stw r3, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r3', '0x0(r6)']
Translated lwz r3 0x0(r6) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r3, (r6)']
Translated srwi r3 r3 16 to: ['gc_env.r[3] = gc_env.r[3] >> 16; // srwi r3, r3, 16']
Processing opcode: sth, operands: ['r3', '0x20(r9)']
Translated sth r3 0x20(r9) to: ['gc_mem_write16(gc_env.ram, gc_env.r[9] + 0x20, gc_env.r[3]); // sth r3, 0x20(r9)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001F008@sda21(r0)']
Translated lwz r3 lbl_8001F008@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r3, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r4', 'lbl_8001F00C@sda21(r0)']
Translated lwz r4 lbl_8001F00C@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r4, lbl_8001F00C@sda21(r0)']
Translated or r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Processing opcode: stw, operands: ['r4', 'lbl_8001F00C@sda21(r0)']
Translated stw r4 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[4]); // stw r4, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x0(r7)']
Translated lwz r0 0x0(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7]); // lwz r0, (r7)']
Processing opcode: sth, operands: ['r0', '0x2a(r9)']
Translated sth r0 0x2a(r9) to: ['gc_mem_write16(gc_env.ram, gc_env.r[9] + 0x2A, gc_env.r[0]); // sth r0, 0x2A(r9)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated lwz r0 lbl_8001F008@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001F00C@sda21(r0)']
Translated lwz r3 lbl_8001F00C@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r3, lbl_8001F00C@sda21(r0)']
Translated ori r0 r0 0x400 to: ['gc_env.r[0] |= 1024; // ori r0, r0, 0x400']
Processing opcode: stw, operands: ['r3', 'lbl_8001F00C@sda21(r0)']
Translated stw r3 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[3]); // stw r3, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x0(r7)']
Translated lwz r0 0x0(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7]); // lwz r0, (r7)']
Translated srwi r0 r0 16 to: ['gc_env.r[0] = gc_env.r[0] >> 16; // srwi r0, r0, 16']
Processing opcode: sth, operands: ['r0', '0x28(r9)']
Translated sth r0 0x28(r9) to: ['gc_mem_write16(gc_env.ram, gc_env.r[9] + 0x28, gc_env.r[0]); // sth r0, 0x28(r9)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated lwz r0 lbl_8001F008@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001F00C@sda21(r0)']
Translated lwz r3 lbl_8001F00C@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r3, lbl_8001F00C@sda21(r0)']
Translated ori r0 r0 0x800 to: ['gc_env.r[0] |= 2048; // ori r0, r0, 0x800']
Processing opcode: stw, operands: ['r3', 'lbl_8001F00C@sda21(r0)']
Translated stw r3 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[3]); // stw r3, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r31', '0x44(r1)']
Translated lwz r31 0x44(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lwz r31, 0x44(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x48']
Translated addi r1 r1 0x48 to: ['gc_env.r[1] += 72; // addi r1, r1, 0x48']
Translated blr  to: return;
Processing opcode: stwu, operands: ['r1', '-0x28(r1)']
Translated stwu r1 -0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x28, gc_env.r[1]); // stwu r1, -0x28(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x28;']
Translated clrlwi r0 r5 24 to: ['gc_env.r[0] = gc_env.r[5] & 0xFF; // clrlwi r0, r5, 24']
Translated lis r11 lbl_8001CB08@ha to: ['gc_env.r[11] = ((uint32_t)&lbl_8001CB08 >> 16) & 0xFFFF; // lis r11, lbl_8001CB08@ha']
Processing opcode: stw, operands: ['r31', '0x24(r1)']
Translated stw r31 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[31]); // stw r31, 0x24(r1)']
Translated cmplwi r0 0xa to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xa) ? 0 : ((uint32_t)gc_env.r[0] < 0xa ? -1 : 1); // Logical compare with immediate
Processing opcode: lwz, operands: ['r31', '0x30(r1)']
Translated lwz r31 0x30(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lwz r31, 0x30(r1)']
Processing opcode: addi, operands: ['r11', 'r11', 'lbl_8001CB08@l']
Translated addi r11 r11 lbl_8001CB08@l to: ['gc_env.r[11] = gc_env.r[11] + ((uint32_t)&lbl_8001CB08 & 0xFFFF); // addi r11, r11, lbl_8001CB08@l']
Processing opcode: stw, operands: ['r30', '0x20(r1)']
Translated stw r30 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[30]); // stw r30, 0x20(r1)']
Processing opcode: stw, operands: ['r29', '0x1c(r1)']
Translated stw r29 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[29]); // stw r29, 0x1C(r1)']
Translated blt .L_8001068C to: ['if (gc_env.cr[0] & 0x8) goto L_8001068C; // blt .L_8001068C']
Processing opcode: li, operands: ['r12', '0x1']
Translated li r12 0x1 to: ['gc_env.r[12] = 0x1; // li r12, 0x1']
Processing opcode: li, operands: ['r29', '0x2']
Translated li r29 0x2 to: ['gc_env.r[29] = 0x2; // li r29, 0x2']
Translated b .L_80010694 to: goto L_80010694;
Processing opcode: li, operands: ['r12', '0x2']
Translated li r12 0x2 to: ['gc_env.r[12] = 0x2; // li r12, 0x2']
Processing opcode: li, operands: ['r29', '0x1']
Translated li r29 0x1 to: ['gc_env.r[29] = 0x1; // li r29, 0x1']
Translated clrlwi r30 r3 16 to: ['gc_env.r[30] = gc_env.r[3] & 0xFFFF; // clrlwi r30, r3, 16']
Translated srawi r0 r30 1 to: ['gc_env.r[0] = ((int32_t)gc_env.r[30]) >> 1; // srawi r0, r30, 1']
Translated addze r0 r0 to: ['uint64_t addze_temp = (uint64_t)gc_env.r[0] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[0] = (uint32_t)addze_temp; // addze r0, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addze_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated slwi r0 r0 1 to: ['gc_env.r[0] = gc_env.r[0] << 1; // slwi r0, r0, 1']
Translated subfc. r0 r0 r30 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[30] - gc_env.r[0];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r0, r30', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[30] >= gc_env.r[0] ? 0x20000000 : 0);']
Translated bne .L_800106E4 to: if (gc_env.cr[0] != 0) goto L_800106E4;
Translated clrlwi r3 r12 16 to: ['gc_env.r[3] = gc_env.r[12] & 0xFFFF; // clrlwi r3, r12, 16']
Translated clrlwi r0 r6 16 to: ['gc_env.r[0] = gc_env.r[6] & 0xFFFF; // clrlwi r0, r6, 16']
Processing opcode: mullw, operands: ['r0', 'r3', 'r0']
Translated mullw r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] * gc_env.r[0]; // mullw r0, r3, r0']
Translated clrlwi r3 r4 16 to: ['gc_env.r[3] = gc_env.r[4] & 0xFFFF; // clrlwi r3, r4, 16']
Processing opcode: subf, operands: ['r0', 'r3', 'r0']
Translated subf r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[3]; // subf r0, r3, r0']
Translated clrlwi r3 r29 16 to: ['gc_env.r[3] = gc_env.r[29] & 0xFFFF; // clrlwi r3, r29, 16']
Processing opcode: mullw, operands: ['r29', 'r3', 'r30']
Translated mullw r29 r3 r30 to: ['gc_env.r[29] = gc_env.r[3] * gc_env.r[30]; // mullw r29, r3, r30']
Processing opcode: subf, operands: ['r0', 'r30', 'r0']
Translated subf r0 r30 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[30]; // subf r0, r30, r0']
Processing opcode: mullw, operands: ['r30', 'r3', 'r0']
Translated mullw r30 r3 r0 to: ['gc_env.r[30] = gc_env.r[3] * gc_env.r[0]; // mullw r30, r3, r0']
Processing opcode: add, operands: ['r0', 'r7', 'r29']
Translated add r0 r7 r29 to: ['gc_env.r[0] = gc_env.r[7] + gc_env.r[29]; // add r0, r7, r29']
Processing opcode: add, operands: ['r6', 'r9', 'r30']
Translated add r6 r9 r30 to: ['gc_env.r[6] = gc_env.r[9] + gc_env.r[30]; // add r6, r9, r30']
Processing opcode: add, operands: ['r3', 'r8', 'r29']
Translated add r3 r8 r29 to: ['gc_env.r[3] = gc_env.r[8] + gc_env.r[29]; // add r3, r8, r29']
Processing opcode: add, operands: ['r7', 'r10', 'r30']
Translated add r7 r10 r30 to: ['gc_env.r[7] = gc_env.r[10] + gc_env.r[30]; // add r7, r10, r30']
Translated b .L_80010718 to: goto L_80010718;
Translated clrlwi r3 r12 16 to: ['gc_env.r[3] = gc_env.r[12] & 0xFFFF; // clrlwi r3, r12, 16']
Translated clrlwi r0 r6 16 to: ['gc_env.r[0] = gc_env.r[6] & 0xFFFF; // clrlwi r0, r6, 16']
Processing opcode: mullw, operands: ['r0', 'r3', 'r0']
Translated mullw r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] * gc_env.r[0]; // mullw r0, r3, r0']
Translated clrlwi r3 r4 16 to: ['gc_env.r[3] = gc_env.r[4] & 0xFFFF; // clrlwi r3, r4, 16']
Processing opcode: subf, operands: ['r0', 'r3', 'r0']
Translated subf r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[3]; // subf r0, r3, r0']
Translated clrlwi r3 r29 16 to: ['gc_env.r[3] = gc_env.r[29] & 0xFFFF; // clrlwi r3, r29, 16']
Processing opcode: mullw, operands: ['r29', 'r3', 'r30']
Translated mullw r29 r3 r30 to: ['gc_env.r[29] = gc_env.r[3] * gc_env.r[30]; // mullw r29, r3, r30']
Processing opcode: subf, operands: ['r0', 'r30', 'r0']
Translated subf r0 r30 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[30]; // subf r0, r30, r0']
Processing opcode: mullw, operands: ['r30', 'r3', 'r0']
Translated mullw r30 r3 r0 to: ['gc_env.r[30] = gc_env.r[3] * gc_env.r[0]; // mullw r30, r3, r0']
Processing opcode: add, operands: ['r0', 'r8', 'r29']
Translated add r0 r8 r29 to: ['gc_env.r[0] = gc_env.r[8] + gc_env.r[29]; // add r0, r8, r29']
Processing opcode: add, operands: ['r6', 'r10', 'r30']
Translated add r6 r10 r30 to: ['gc_env.r[6] = gc_env.r[10] + gc_env.r[30]; // add r6, r10, r30']
Processing opcode: add, operands: ['r3', 'r7', 'r29']
Translated add r3 r7 r29 to: ['gc_env.r[3] = gc_env.r[7] + gc_env.r[29]; // add r3, r7, r29']
Processing opcode: add, operands: ['r7', 'r9', 'r30']
Translated add r7 r9 r30 to: ['gc_env.r[7] = gc_env.r[9] + gc_env.r[30]; // add r7, r9, r30']
Translated clrlwi r8 r4 16 to: ['gc_env.r[8] = gc_env.r[4] & 0xFFFF; // clrlwi r8, r4, 16']
Translated clrlwi r4 r12 16 to: ['gc_env.r[4] = gc_env.r[12] & 0xFFFF; // clrlwi r4, r12, 16']
Processing opcode: divw, operands: ['r4', 'r8', 'r4']
Translated divw r4 r8 r4 to: ['gc_env.r[4] = gc_env.r[8] / gc_env.r[4]; // divw r4, r8, r4']
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated clrlwi r4 r4 16 to: ['gc_env.r[4] = gc_env.r[4] & 0xFFFF; // clrlwi r4, r4, 16']
Translated beq .L_8001074C to: if (gc_env.cr[0] == 0) goto L_8001074C;
Translated slwi r4 r4 1 to: ['gc_env.r[4] = gc_env.r[4] << 1; // slwi r4, r4, 1']
Processing opcode: subi, operands: ['r4', 'r4', '0x2']
Translated subi r4 r4 0x2 to: ['gc_env.r[4] = gc_env.r[4] - 2; // subi r4, r4, 2']
Processing opcode: add, operands: ['r0', 'r0', 'r4']
Translated add r0 r0 r4 to: ['gc_env.r[0] = gc_env.r[0] + gc_env.r[4]; // add r0, r0, r4']
Processing opcode: add, operands: ['r3', 'r3', 'r4']
Translated add r3 r3 r4 to: ['gc_env.r[3] = gc_env.r[3] + gc_env.r[4]; // add r3, r3, r4']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: addi, operands: ['r6', 'r6', '0x2']
Translated addi r6 r6 0x2 to: ['gc_env.r[6] += 2; // addi r6, r6, 0x2']
Processing opcode: addi, operands: ['r7', 'r7', '0x2']
Translated addi r7 r7 0x2 to: ['gc_env.r[7] += 2; // addi r7, r7, 0x2']
Translated clrlwi r5 r5 24 to: ['gc_env.r[5] = gc_env.r[5] & 0xFF; // clrlwi r5, r5, 24']
Translated clrlslwi r4 r4 16 4 to: ['gc_env.r[4] = (gc_env.r[4] << 4) & 0xFFFF; // clrlslwi r4, r4, 16, 4']
Translated or r4 r5 r4 to: ['gc_env.r[4] = gc_env.r[5] | gc_env.r[4]; // or r4, r5, r4']
Processing opcode: sth, operands: ['r4', '0x0(r11)']
Translated sth r4 0x0(r11) to: ['gc_mem_write16(gc_env.ram, gc_env.r[11], gc_env.r[4]); // sth r4, (r11)']
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Translated lis r9 0x100 to: ['gc_env.r[9] = 256 << 16; // lis r9, 0x100']
Processing opcode: lwz, operands: ['r5', 'lbl_8001F008@sda21(r0)']
Translated lwz r5 lbl_8001F008@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r5, lbl_8001F008@sda21(r0)']
Translated lis r8 0x200 to: ['gc_env.r[8] = 512 << 16; // lis r8, 0x200']
Processing opcode: lwz, operands: ['r10', 'lbl_8001F00C@sda21(r0)']
Translated lwz r10 lbl_8001F00C@sda21(r0) to: ['gc_env.r[10] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r10, lbl_8001F00C@sda21(r0)']
Translated or r4 r5 r4 to: ['gc_env.r[4] = gc_env.r[5] | gc_env.r[4]; // or r4, r5, r4']
Translated lis r5 0x40 to: ['gc_env.r[5] = 64 << 16; // lis r5, 0x40']
Processing opcode: stw, operands: ['r10', 'lbl_8001F00C@sda21(r0)']
Translated stw r10 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[10]); // stw r10, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r4', 'lbl_8001F008@sda21(r0)']
Translated stw r4 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[4]); // stw r4, lbl_8001F008@sda21(r0)']
Translated lis r4 0x80 to: ['gc_env.r[4] = 128 << 16; // lis r4, 0x80']
Processing opcode: sth, operands: ['r0', '0xe(r11)']
Translated sth r0 0xe(r11) to: ['gc_mem_write16(gc_env.ram, gc_env.r[11] + 0xE, gc_env.r[0]); // sth r0, 0xE(r11)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated lwz r0 lbl_8001F008@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r10', 'lbl_8001F00C@sda21(r0)']
Translated lwz r10 lbl_8001F00C@sda21(r0) to: ['gc_env.r[10] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r10, lbl_8001F00C@sda21(r0)']
Translated or r0 r0 r9 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[9]; // or r0, r0, r9']
Processing opcode: stw, operands: ['r10', 'lbl_8001F00C@sda21(r0)']
Translated stw r10 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[10]); // stw r10, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: sth, operands: ['r6', '0xc(r11)']
Translated sth r6 0xc(r11) to: ['gc_mem_write16(gc_env.ram, gc_env.r[11] + 0xC, gc_env.r[6]); // sth r6, 0xC(r11)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated lwz r0 lbl_8001F008@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r6', 'lbl_8001F00C@sda21(r0)']
Translated lwz r6 lbl_8001F00C@sda21(r0) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r6, lbl_8001F00C@sda21(r0)']
Translated or r0 r0 r8 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[8]; // or r0, r0, r8']
Processing opcode: stw, operands: ['r6', 'lbl_8001F00C@sda21(r0)']
Translated stw r6 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[6]); // stw r6, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: sth, operands: ['r3', '0x12(r11)']
Translated sth r3 0x12(r11) to: ['gc_mem_write16(gc_env.ram, gc_env.r[11] + 0x12, gc_env.r[3]); // sth r3, 0x12(r11)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated lwz r0 lbl_8001F008@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001F00C@sda21(r0)']
Translated lwz r3 lbl_8001F00C@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r3, lbl_8001F00C@sda21(r0)']
Translated or r0 r0 r5 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[5]; // or r0, r0, r5']
Processing opcode: stw, operands: ['r3', 'lbl_8001F00C@sda21(r0)']
Translated stw r3 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[3]); // stw r3, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: sth, operands: ['r7', '0x10(r11)']
Translated sth r7 0x10(r11) to: ['gc_mem_write16(gc_env.ram, gc_env.r[11] + 0x10, gc_env.r[7]); // sth r7, 0x10(r11)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated lwz r0 lbl_8001F008@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001F00C@sda21(r0)']
Translated lwz r3 lbl_8001F00C@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r3, lbl_8001F00C@sda21(r0)']
Translated or r0 r0 r4 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[4]; // or r0, r0, r4']
Processing opcode: stw, operands: ['r3', 'lbl_8001F00C@sda21(r0)']
Translated stw r3 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[3]); // stw r3, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r31', '0x24(r1)']
Translated lwz r31 0x24(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r31, 0x24(r1)']
Processing opcode: lwz, operands: ['r30', '0x20(r1)']
Translated lwz r30 0x20(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r30, 0x20(r1)']
Processing opcode: lwz, operands: ['r29', '0x1c(r1)']
Translated lwz r29 0x1c(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r29, 0x1C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x28']
Translated addi r1 r1 0x28 to: ['gc_env.r[1] += 40; // addi r1, r1, 0x28']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r5 lbl_8001B3D8@ha to: ['gc_env.r[5] = ((uint32_t)&lbl_8001B3D8 >> 16) & 0xFFFF; // lis r5, lbl_8001B3D8@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Translated lis r4 lbl_8001CB08@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001CB08 >> 16) & 0xFFFF; // lis r4, lbl_8001CB08@ha']
Processing opcode: stwu, operands: ['r1', '-0x78(r1)']
Translated stwu r1 -0x78(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x78, gc_env.r[1]); // stwu r1, -0x78(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x78;']
Translated stmw r14 0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[14]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[15]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[16]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[17]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x40, gc_env.r[18]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x44, gc_env.r[19]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x48, gc_env.r[20]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4C, gc_env.r[21]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x50, gc_env.r[22]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x54, gc_env.r[23]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x58, gc_env.r[24]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x5C, gc_env.r[25]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x60, gc_env.r[26]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x64, gc_env.r[27]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x68, gc_env.r[28]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x6C, gc_env.r[29]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x70, gc_env.r[30]); // stmw r14, 0x30(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x74, gc_env.r[31]); // stmw r14, 0x30(r1)']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Processing opcode: addi, operands: ['r15', 'r5', 'lbl_8001B3D8@l']
Translated addi r15 r5 lbl_8001B3D8@l to: ['gc_env.r[15] = gc_env.r[5] + ((uint32_t)&lbl_8001B3D8 & 0xFFFF); // addi r15, r5, lbl_8001B3D8@l']
Processing opcode: addi, operands: ['r29', 'r4', 'lbl_8001CB08@l']
Translated addi r29 r4 lbl_8001CB08@l to: ['gc_env.r[29] = gc_env.r[4] + ((uint32_t)&lbl_8001CB08 & 0xFFFF); // addi r29, r4, lbl_8001CB08@l']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r4', '0x0(r31)']
Translated lwz r4 0x0(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r4, (r31)']
Processing opcode: addi, operands: ['r28', 'r29', '0x114']
Translated addi r28 r29 0x114 to: ['gc_env.r[28] = gc_env.r[29] + 276; // addi r28, r29, 0x114']
Processing opcode: lwz, operands: ['r0', '0x114(r29)']
Translated lwz r0 0x114(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x114); // lwz r0, 0x114(r29)']
Processing opcode: addi, operands: ['r14', 'r3', '0x0']
Translated addi r14 r3 0x0 to: ['gc_env.r[14] = gc_env.r[3] + 0; // addi r14, r3, 0x0']
Translated clrlwi r4 r4 30 to: ['gc_env.r[4] = gc_env.r[4] & 0x3; // clrlwi r4, r4, 30']
Translated cmplw r0 r4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[4]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[4] ? -1 : 1); // Logical compare word
Translated beq .L_80010848 to: if (gc_env.cr[0] == 0) goto L_80010848;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001F000@sda21(r0)']
Translated stw r0 lbl_8001F000@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F000, gc_env.r[0]); // stw r0, lbl_8001F000@sda21(r0)']
Processing opcode: stw, operands: ['r4', '0x0(r28)']
Translated stw r4 0x0(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28], gc_env.r[4]); // stw r4, (r28)']
Processing opcode: lwz, operands: ['r0', '0x0(r31)']
Translated lwz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r0, (r31)']
Translated lis r3 0x8000 to: ['gc_env.r[3] = -32768 << 16; // lis r3, 0x8000']
Processing opcode: lwz, operands: ['r17', '0xcc(r3)']
Translated lwz r17 0xcc(r3) to: ['gc_env.r[17] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xCC); // lwz r17, 0xCC(r3)']
Translated srwi r16 r0 2 to: ['gc_env.r[16] = gc_env.r[0] >> 2; // srwi r16, r0, 2']
Translated cmplwi r16 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[16] == 0x4) ? 0 : ((uint32_t)gc_env.r[16] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800108C8 to: if (gc_env.cr[0] != 0) goto L_800108C8;
Processing opcode: lwz, operands: ['r0', 'lbl_8001F02C@sda21(r0)']
Translated lwz r0 lbl_8001F02C@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F02C); // lwz r0, lbl_8001F02C@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800108C8 to: if (gc_env.cr[0] != 0) goto L_800108C8;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: stw, operands: ['r0', 'lbl_8001F02C@sda21(r0)']
Translated stw r0 lbl_8001F02C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F02C, gc_env.r[0]); // stw r0, lbl_8001F02C@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r15', '0x1bc']
Translated addi r3 r15 0x1bc to: ['gc_env.r[3] = gc_env.r[15] + 444; // addi r3, r15, 0x1bc']
Translated bl OSReport to: OSReport();
Processing opcode: addi, operands: ['r3', 'r15', '0x1e8']
Translated addi r3 r15 0x1e8 to: ['gc_env.r[3] = gc_env.r[15] + 488; // addi r3, r15, 0x1e8']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: addi, operands: ['r3', 'r15', '0x214']
Translated addi r3 r15 0x214 to: ['gc_env.r[3] = gc_env.r[15] + 532; // addi r3, r15, 0x214']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: addi, operands: ['r3', 'r15', '0x240']
Translated addi r3 r15 0x240 to: ['gc_env.r[3] = gc_env.r[15] + 576; // addi r3, r15, 0x240']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: addi, operands: ['r3', 'r15', '0x26c']
Translated addi r3 r15 0x26c to: ['gc_env.r[3] = gc_env.r[15] + 620; // addi r3, r15, 0x26c']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: addi, operands: ['r3', 'r15', '0x298']
Translated addi r3 r15 0x298 to: ['gc_env.r[3] = gc_env.r[15] + 664; // addi r3, r15, 0x298']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: addi, operands: ['r3', 'r15', '0x1bc']
Translated addi r3 r15 0x1bc to: ['gc_env.r[3] = gc_env.r[15] + 444; // addi r3, r15, 0x1bc']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Translated cmplwi r16 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[16] == 0x0) ? 0 : ((uint32_t)gc_env.r[16] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800108D8 to: if (gc_env.cr[0] == 0) goto L_800108D8;
Translated cmplwi r16 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[16] == 0x2) ? 0 : ((uint32_t)gc_env.r[16] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800108E0 to: if (gc_env.cr[0] != 0) goto L_800108E0;
Processing opcode: stw, operands: ['r17', '0x118(r29)']
Translated stw r17 0x118(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0x118, gc_env.r[17]); // stw r17, 0x118(r29)']
Translated b .L_800108E4 to: goto L_800108E4;
Processing opcode: stw, operands: ['r16', '0x118(r29)']
Translated stw r16 0x118(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0x118, gc_env.r[16]); // stw r16, 0x118(r29)']
Processing opcode: lhz, operands: ['r0', '0xa(r31)']
Translated lhz r0 0xa(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0xa); // lhz r0, 0xa(r31)']
Processing opcode: sth, operands: ['r0', '0xf0(r29)']
Translated sth r0 0xf0(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0xF0, gc_env.r[0]); // sth r0, 0xF0(r29)']
Processing opcode: lwz, operands: ['r0', '0x0(r28)']
Translated lwz r0 0x0(r28) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r0, (r28)']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80010904 to: if (gc_env.cr[0] != 0) goto L_80010904;
Processing opcode: lhz, operands: ['r0', '0xc(r31)']
Translated lhz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0xc); // lhz r0, 0xc(r31)']
Translated clrlslwi r0 r0 17 1 to: ['gc_env.r[0] = (gc_env.r[0] << 1) & 0x7FFF; // clrlslwi r0, r0, 17, 1']
Translated b .L_80010908 to: goto L_80010908;
Processing opcode: lhz, operands: ['r0', '0xc(r31)']
Translated lhz r0 0xc(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0xc); // lhz r0, 0xc(r31)']
Processing opcode: sth, operands: ['r0', '0xf2(r29)']
Translated sth r0 0xf2(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0xF2, gc_env.r[0]); // sth r0, 0xF2(r29)']
Processing opcode: addi, operands: ['r23', 'r29', '0xf2']
Translated addi r23 r29 0xf2 to: ['gc_env.r[23] = gc_env.r[29] + 242; // addi r23, r29, 0xf2']
Processing opcode: addi, operands: ['r24', 'r29', '0xf4']
Translated addi r24 r29 0xf4 to: ['gc_env.r[24] = gc_env.r[29] + 244; // addi r24, r29, 0xf4']
Processing opcode: lhz, operands: ['r0', '0xe(r31)']
Translated lhz r0 0xe(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0xe); // lhz r0, 0xe(r31)']
Processing opcode: addi, operands: ['r27', 'r29', '0x102']
Translated addi r27 r29 0x102 to: ['gc_env.r[27] = gc_env.r[29] + 258; // addi r27, r29, 0x102']
Processing opcode: addi, operands: ['r25', 'r29', '0x110']
Translated addi r25 r29 0x110 to: ['gc_env.r[25] = gc_env.r[29] + 272; // addi r25, r29, 0x110']
Processing opcode: sth, operands: ['r0', '0xf4(r29)']
Translated sth r0 0xf4(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0xF4, gc_env.r[0]); // sth r0, 0xF4(r29)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: addi, operands: ['r16', 'r29', '0x10a']
Translated addi r16 r29 0x10a to: ['gc_env.r[16] = gc_env.r[29] + 266; // addi r16, r29, 0x10a']
Processing opcode: lhz, operands: ['r3', '0x4(r31)']
Translated lhz r3 0x4(r31) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x4); // lhz r3, 0x4(r31)']
Processing opcode: addi, operands: ['r26', 'r29', '0x10c']
Translated addi r26 r29 0x10c to: ['gc_env.r[26] = gc_env.r[29] + 268; // addi r26, r29, 0x10c']
Processing opcode: addi, operands: ['r15', 'r29', '0x106']
Translated addi r15 r29 0x106 to: ['gc_env.r[15] = gc_env.r[29] + 262; // addi r15, r29, 0x106']
Processing opcode: sth, operands: ['r3', '0x102(r29)']
Translated sth r3 0x102(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x102, gc_env.r[3]); // sth r3, 0x102(r29)']
Processing opcode: addi, operands: ['r17', 'r29', '0x108']
Translated addi r17 r29 0x108 to: ['gc_env.r[17] = gc_env.r[29] + 264; // addi r17, r29, 0x108']
Processing opcode: lhz, operands: ['r3', '0x8(r31)']
Translated lhz r3 0x8(r31) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x8); // lhz r3, 0x8(r31)']
Processing opcode: sth, operands: ['r3', '0x104(r29)']
Translated sth r3 0x104(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x104, gc_env.r[3]); // sth r3, 0x104(r29)']
Processing opcode: lwz, operands: ['r3', '0x14(r31)']
Translated lwz r3 0x14(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x14); // lwz r3, 0x14(r31)']
Processing opcode: stw, operands: ['r3', '0x110(r29)']
Translated stw r3 0x110(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0x110, gc_env.r[3]); // stw r3, 0x110(r29)']
Processing opcode: lhz, operands: ['r3', '0x102(r29)']
Translated lhz r3 0x102(r29) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[29] + 0x102); // lhz r3, 0x102(r29)']
Processing opcode: sth, operands: ['r3', '0x10a(r29)']
Translated sth r3 0x10a(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x10A, gc_env.r[3]); // sth r3, 0x10A(r29)']
Processing opcode: lhz, operands: ['r3', '0x104(r29)']
Translated lhz r3 0x104(r29) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[29] + 0x104); // lhz r3, 0x104(r29)']
Processing opcode: sth, operands: ['r3', '0x10c(r29)']
Translated sth r3 0x10c(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x10C, gc_env.r[3]); // sth r3, 0x10C(r29)']
Processing opcode: sth, operands: ['r0', '0x106(r29)']
Translated sth r0 0x106(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x106, gc_env.r[0]); // sth r0, 0x106(r29)']
Processing opcode: sth, operands: ['r0', '0x108(r29)']
Translated sth r0 0x108(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x108, gc_env.r[0]); // sth r0, 0x108(r29)']
Processing opcode: lwz, operands: ['r0', '0x0(r28)']
Translated lwz r0 0x0(r28) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r0, (r28)']
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8001097C to: if (gc_env.cr[0] != 0) goto L_8001097C;
Processing opcode: lhz, operands: ['r0', '0x0(r26)']
Translated lhz r0 0x0(r26) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[26] + 0x0); // lhz r0, 0x0(r26)']
Translated b .L_800109A8 to: goto L_800109A8;
Translated cmplwi r0 0x3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x3) ? 0 : ((uint32_t)gc_env.r[0] < 0x3 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8001098C to: if (gc_env.cr[0] != 0) goto L_8001098C;
Processing opcode: lhz, operands: ['r0', '0x0(r26)']
Translated lhz r0 0x0(r26) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[26] + 0x0); // lhz r0, 0x0(r26)']
Translated b .L_800109A8 to: goto L_800109A8;
Processing opcode: lwz, operands: ['r0', '0x0(r25)']
Translated lwz r0 0x0(r25) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[25]); // lwz r0, (r25)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800109A4 to: if (gc_env.cr[0] != 0) goto L_800109A4;
Processing opcode: lhz, operands: ['r0', '0x0(r26)']
Translated lhz r0 0x0(r26) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[26] + 0x0); // lhz r0, 0x0(r26)']
Translated clrlslwi r0 r0 17 1 to: ['gc_env.r[0] = (gc_env.r[0] << 1) & 0x7FFF; // clrlslwi r0, r0, 17, 1']
Translated b .L_800109A8 to: goto L_800109A8;
Processing opcode: lhz, operands: ['r0', '0x0(r26)']
Translated lhz r0 0x0(r26) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[26] + 0x0); // lhz r0, 0x0(r26)']
Processing opcode: addi, operands: ['r22', 'r29', '0xf6']
Translated addi r22 r29 0xf6 to: ['gc_env.r[22] = gc_env.r[29] + 246; // addi r22, r29, 0xf6']
Processing opcode: sth, operands: ['r0', '0xf6(r29)']
Translated sth r0 0xf6(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0xF6, gc_env.r[0]); // sth r0, 0xF6(r29)']
Processing opcode: lwz, operands: ['r0', '0x0(r28)']
Translated lwz r0 0x0(r28) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r0, (r28)']
Translated cmplwi r0 0x3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x3) ? 0 : ((uint32_t)gc_env.r[0] < 0x3 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800109C4 to: if (gc_env.cr[0] != 0) goto L_800109C4;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated b .L_800109C8 to: goto L_800109C8;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: addi, operands: ['r18', 'r29', '0x134']
Translated addi r18 r29 0x134 to: ['gc_env.r[18] = gc_env.r[29] + 308; // addi r18, r29, 0x134']
Processing opcode: stw, operands: ['r0', '0x134(r29)']
Translated stw r0 0x134(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0x134, gc_env.r[0]); // stw r0, 0x134(r29)']
Processing opcode: addi, operands: ['r21', 'r29', '0x118']
Translated addi r21 r29 0x118 to: ['gc_env.r[21] = gc_env.r[29] + 280; // addi r21, r29, 0x118']
Processing opcode: lwz, operands: ['r3', '0x118(r29)']
Translated lwz r3 0x118(r29) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x118); // lwz r3, 0x118(r29)']
Processing opcode: lwz, operands: ['r0', '0x0(r28)']
Translated lwz r0 0x0(r28) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r0, (r28)']
Translated slwi r3 r3 2 to: ['gc_env.r[3] = gc_env.r[3] << 2; // slwi r3, r3, 2']
Processing opcode: add, operands: ['r3', 'r3', 'r0']
Translated add r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] + gc_env.r[0]; // add r3, r3, r0']
Translated bl fn_8000FC30 to: fn_8000FC30();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Processing opcode: stw, operands: ['r30', '0x144(r29)']
Translated stw r30 0x144(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0x144, gc_env.r[30]); // stw r30, 0x144(r29)']
Processing opcode: lhz, operands: ['r0', '0x0(r24)']
Translated lhz r0 0x0(r24) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[24] + 0x0); // lhz r0, 0x0(r24)']
Translated lha r4 0xf0(r29) to: ['gc_env.r[4] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[29] + 0xF0); // lha r4, 0xF0(r29)']
Translated lha r3 lbl_8001EFFC@sda21(r0) to: ['// Error processing lha r3 lbl_8001EFFC@sda21(r0): Invalid immediate: lbl_8001EFFC@sda21']
Translated subfic r5 r0 0x2d0 to: ['gc_env.r[5] = 720 - gc_env.r[0]; // subfic r5, r0, 720', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (720 >= gc_env.r[0] ? 0x20000000 : 0);']
Processing opcode: lhz, operands: ['r0', '0x2(r30)']
Translated lhz r0 0x2(r30) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x2); // lhz r0, 0x2(r30)']
Processing opcode: add, operands: ['r3', 'r4', 'r3']
Translated add r3 r4 r3 to: ['gc_env.r[3] = gc_env.r[4] + gc_env.r[3]; // add r3, r4, r3']
Translated cmpw r3 r5 to: ['gc_env.cr[0] = (int32_t)gc_env.r[3] < (int32_t)gc_env.r[5] ? 0x8 : ((int32_t)gc_env.r[3] > (int32_t)gc_env.r[5] ? 0x4 : 0x2); // cmpw r3, r5']
Translated ble .L_80010A14 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80010A14; // ble .L_80010A14']
Translated b .L_80010A24 to: goto L_80010A24;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bge .L_80010A20 to: if (gc_env.cr[0] >= 0) goto L_80010A20;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated mr r5 r3 to: gc_env.r[5] = gc_env.r[3]; // Move register
Processing opcode: sth, operands: ['r5', '0xf8(r29)']
Translated sth r5 0xf8(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0xF8, gc_env.r[5]); // sth r5, 0xF8(r29)']
Processing opcode: addi, operands: ['r3', 'r29', '0xf8']
Translated addi r3 r29 0xf8 to: ['gc_env.r[3] = gc_env.r[29] + 248; // addi r3, r29, 0xf8']
Processing opcode: lwz, operands: ['r4', '0x0(r25)']
Translated lwz r4 0x0(r25) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[25]); // lwz r4, (r25)']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80010A40 to: if (gc_env.cr[0] != 0) goto L_80010A40;
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Translated b .L_80010A44 to: goto L_80010A44;
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Processing opcode: lhz, operands: ['r5', '0x0(r23)']
Translated lhz r5 0x0(r23) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[23] + 0x0); // lhz r5, 0x0(r23)']
Translated lha r6 lbl_8001EFFE@sda21(r0) to: ['// Error processing lha r6 lbl_8001EFFE@sda21(r0): Invalid immediate: lbl_8001EFFE@sda21']
Translated extsh r7 r5 to: ['gc_env.r[7] = (int32_t)(int16_t)(gc_env.r[5] & 0xFFFF); // extsh r7, r5']
Translated clrlwi r5 r5 31 to: ['gc_env.r[5] = gc_env.r[5] & 0x1; // clrlwi r5, r5, 31']
Processing opcode: add, operands: ['r7', 'r7', 'r6']
Translated add r7 r7 r6 to: ['gc_env.r[7] = gc_env.r[7] + gc_env.r[6]; // add r7, r7, r6']
Translated cmpw r7 r5 to: ['gc_env.cr[0] = (int32_t)gc_env.r[7] < (int32_t)gc_env.r[5] ? 0x8 : ((int32_t)gc_env.r[7] > (int32_t)gc_env.r[5] ? 0x4 : 0x2); // cmpw r7, r5']
Translated ble .L_80010A64 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80010A64; // ble .L_80010A64']
Translated b .L_80010A68 to: goto L_80010A68;
Translated mr r7 r5 to: gc_env.r[7] = gc_env.r[5]; // Move register
Processing opcode: sth, operands: ['r7', '0xfa(r29)']
Translated sth r7 0xfa(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0xFA, gc_env.r[7]); // sth r7, 0xFA(r29)']
Translated extsh r0 r0 to: ['gc_env.r[0] = (int32_t)(int16_t)(gc_env.r[0] & 0xFFFF); // extsh r0, r0']
Translated slwi r0 r0 1 to: ['gc_env.r[0] = gc_env.r[0] << 1; // slwi r0, r0, 1']
Processing opcode: lhz, operands: ['r8', '0x0(r22)']
Translated lhz r8 0x0(r22) to: ['gc_env.r[8] = gc_mem_read16(gc_env.ram, gc_env.r[22] + 0x0); // lhz r8, 0x0(r22)']
Processing opcode: subf, operands: ['r0', 'r5', 'r0']
Translated subf r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[5]; // subf r0, r5, r0']
Translated lha r7 0x0(r23) to: ['gc_env.r[7] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[23] + 0x0); // lha r7, 0x0(r23)']
Processing opcode: addi, operands: ['r19', 'r29', '0xfa']
Translated addi r19 r29 0xfa to: ['gc_env.r[19] = gc_env.r[29] + 250; // addi r19, r29, 0xfa']
Translated extsh r9 r8 to: ['gc_env.r[9] = (int32_t)(int16_t)(gc_env.r[8] & 0xFFFF); // extsh r9, r8']
Processing opcode: add, operands: ['r10', 'r9', 'r6']
Translated add r10 r9 r6 to: ['gc_env.r[10] = gc_env.r[9] + gc_env.r[6]; // add r10, r9, r6']
Processing opcode: add, operands: ['r10', 'r7', 'r10']
Translated add r10 r7 r10 to: ['gc_env.r[10] = gc_env.r[7] + gc_env.r[10]; // add r10, r7, r10']
Processing opcode: subf, operands: ['r9', 'r0', 'r10']
Translated subf. r9 r0 r10 to: ['gc_env.r[9] = gc_env.r[10] - gc_env.r[0]; // subf r9, r0, r10']
Translated ble .L_80010AA0 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80010AA0; // ble .L_80010AA0']
Processing opcode: subf, operands: ['r9', 'r0', 'r10']
Translated subf r9 r0 r10 to: ['gc_env.r[9] = gc_env.r[10] - gc_env.r[0]; // subf r9, r0, r10']
Translated b .L_80010AA4 to: goto L_80010AA4;
Processing opcode: li, operands: ['r9', '0x0']
Translated li r9 0x0 to: ['gc_env.r[9] = 0x0; // li r9, 0x0']
Processing opcode: add, operands: ['r10', 'r7', 'r6']
Translated add r10 r7 r6 to: ['gc_env.r[10] = gc_env.r[7] + gc_env.r[6]; // add r10, r7, r6']
Processing opcode: subf, operands: ['r7', 'r5', 'r10']
Translated subf. r7 r5 r10 to: ['gc_env.r[7] = gc_env.r[10] - gc_env.r[5]; // subf r7, r5, r10']
Translated bge .L_80010AB8 to: if (gc_env.cr[0] >= 0) goto L_80010AB8;
Processing opcode: subf, operands: ['r7', 'r5', 'r10']
Translated subf r7 r5 r10 to: ['gc_env.r[7] = gc_env.r[10] - gc_env.r[5]; // subf r7, r5, r10']
Translated b .L_80010ABC to: goto L_80010ABC;
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Processing opcode: add, operands: ['r7', 'r8', 'r7']
Translated add r7 r8 r7 to: ['gc_env.r[7] = gc_env.r[8] + gc_env.r[7]; // add r7, r8, r7']
Processing opcode: subf, operands: ['r7', 'r9', 'r7']
Translated subf r7 r9 r7 to: ['gc_env.r[7] = gc_env.r[7] - gc_env.r[9]; // subf r7, r9, r7']
Processing opcode: addi, operands: ['r20', 'r29', '0xfc']
Translated addi r20 r29 0xfc to: ['gc_env.r[20] = gc_env.r[29] + 252; // addi r20, r29, 0xfc']
Processing opcode: sth, operands: ['r7', '0xfc(r29)']
Translated sth r7 0xfc(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0xFC, gc_env.r[7]); // sth r7, 0xFC(r29)']
Translated lha r7 0x0(r23) to: ['gc_env.r[7] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[23] + 0x0); // lha r7, 0x0(r23)']
Processing opcode: add, operands: ['r8', 'r7', 'r6']
Translated add r8 r7 r6 to: ['gc_env.r[8] = gc_env.r[7] + gc_env.r[6]; // add r8, r7, r6']
Processing opcode: subf, operands: ['r7', 'r5', 'r8']
Translated subf. r7 r5 r8 to: ['gc_env.r[7] = gc_env.r[8] - gc_env.r[5]; // subf r7, r5, r8']
Translated bge .L_80010AE4 to: if (gc_env.cr[0] >= 0) goto L_80010AE4;
Processing opcode: subf, operands: ['r7', 'r5', 'r8']
Translated subf r7 r5 r8 to: ['gc_env.r[7] = gc_env.r[8] - gc_env.r[5]; // subf r7, r5, r8']
Translated b .L_80010AE8 to: goto L_80010AE8;
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Processing opcode: divw, operands: ['r8', 'r7', 'r4']
Translated divw r8 r7 r4 to: ['gc_env.r[8] = gc_env.r[7] / gc_env.r[4]; // divw r8, r7, r4']
Processing opcode: lhz, operands: ['r7', '0x0(r17)']
Translated lhz r7 0x0(r17) to: ['gc_env.r[7] = gc_mem_read16(gc_env.ram, gc_env.r[17] + 0x0); // lhz r7, 0x0(r17)']
Processing opcode: subf, operands: ['r7', 'r8', 'r7']
Translated subf r7 r8 r7 to: ['gc_env.r[7] = gc_env.r[7] - gc_env.r[8]; // subf r7, r8, r7']
Processing opcode: sth, operands: ['r7', '0xfe(r29)']
Translated sth r7 0xfe(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0xFE, gc_env.r[7]); // sth r7, 0xFE(r29)']
Translated lha r7 0x0(r22) to: ['gc_env.r[7] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[22] + 0x0); // lha r7, 0x0(r22)']
Translated lha r9 0x0(r23) to: ['gc_env.r[9] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[23] + 0x0); // lha r9, 0x0(r23)']
Processing opcode: add, operands: ['r8', 'r7', 'r6']
Translated add r8 r7 r6 to: ['gc_env.r[8] = gc_env.r[7] + gc_env.r[6]; // add r8, r7, r6']
Processing opcode: add, operands: ['r8', 'r9', 'r8']
Translated add r8 r9 r8 to: ['gc_env.r[8] = gc_env.r[9] + gc_env.r[8]; // add r8, r9, r8']
Processing opcode: subf, operands: ['r7', 'r0', 'r8']
Translated subf. r7 r0 r8 to: ['gc_env.r[7] = gc_env.r[8] - gc_env.r[0]; // subf r7, r0, r8']
Translated ble .L_80010B18 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80010B18; // ble .L_80010B18']
Processing opcode: subf, operands: ['r7', 'r0', 'r8']
Translated subf r7 r0 r8 to: ['gc_env.r[7] = gc_env.r[8] - gc_env.r[0]; // subf r7, r0, r8']
Translated b .L_80010B1C to: goto L_80010B1C;
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Processing opcode: add, operands: ['r6', 'r9', 'r6']
Translated add r6 r9 r6 to: ['gc_env.r[6] = gc_env.r[9] + gc_env.r[6]; // add r6, r9, r6']
Processing opcode: subf, operands: ['r0', 'r5', 'r6']
Translated subf. r0 r5 r6 to: ['gc_env.r[0] = gc_env.r[6] - gc_env.r[5]; // subf r0, r5, r6']
Translated bge .L_80010B30 to: if (gc_env.cr[0] >= 0) goto L_80010B30;
Processing opcode: subf, operands: ['r0', 'r5', 'r6']
Translated subf r0 r5 r6 to: ['gc_env.r[0] = gc_env.r[6] - gc_env.r[5]; // subf r0, r5, r6']
Translated b .L_80010B34 to: goto L_80010B34;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: divw, operands: ['r0', 'r0', 'r4']
Translated divw r0 r0 r4 to: ['gc_env.r[0] = gc_env.r[0] / gc_env.r[4]; // divw r0, r0, r4']
Processing opcode: lhz, operands: ['r5', '0x0(r26)']
Translated lhz r5 0x0(r26) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[26] + 0x0); // lhz r5, 0x0(r26)']
Processing opcode: divw, operands: ['r4', 'r7', 'r4']
Translated divw r4 r7 r4 to: ['gc_env.r[4] = gc_env.r[7] / gc_env.r[4]; // divw r4, r7, r4']
Processing opcode: add, operands: ['r0', 'r5', 'r0']
Translated add r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] + gc_env.r[0]; // add r0, r5, r0']
Processing opcode: subf, operands: ['r0', 'r4', 'r0']
Translated subf r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[4]; // subf r0, r4, r0']
Processing opcode: sth, operands: ['r0', '0x100(r29)']
Translated sth r0 0x100(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x100, gc_env.r[0]); // sth r0, 0x100(r29)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EFF8@sda21(r0)']
Translated lwz r0 lbl_8001EFF8@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EFF8); // lwz r0, lbl_8001EFF8@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80010B60 to: if (gc_env.cr[0] != 0) goto L_80010B60;
Processing opcode: li, operands: ['r0', '0x3']
Translated li r0 0x3 to: ['gc_env.r[0] = 0x3; // li r0, 0x3']
Processing opcode: stw, operands: ['r0', '0x0(r21)']
Translated stw r0 0x0(r21) to: ['gc_mem_write32(gc_env.ram, gc_env.r[21], gc_env.r[0]); // stw r0, (r21)']
Processing opcode: lhz, operands: ['r5', '0x18(r30)']
Translated lhz r5 0x18(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x18); // lhz r5, 0x18(r30)']
Translated srawi r4 r5 1 to: ['gc_env.r[4] = ((int32_t)gc_env.r[5]) >> 1; // srawi r4, r5, 1']
Translated addze r4 r4 to: ['uint64_t addze_temp = (uint64_t)gc_env.r[4] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[4] = (uint32_t)addze_temp; // addze r4, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addze_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated srawi r0 r5 1 to: ['gc_env.r[0] = ((int32_t)gc_env.r[5]) >> 1; // srawi r0, r5, 1']
Translated addze r0 r0 to: ['uint64_t addze_temp = (uint64_t)gc_env.r[0] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[0] = (uint32_t)addze_temp; // addze r0, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addze_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated slwi r0 r0 1 to: ['gc_env.r[0] = gc_env.r[0] << 1; // slwi r0, r0, 1']
Translated subfc r0 r0 r5 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[5] - gc_env.r[0];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r0, r5', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= gc_env.r[0] ? 0x20000000 : 0);']
Translated clrlwi. r0 r0 16 to: ['gc_env.r[0] = gc_env.r[0] & 0xFFFF; // clrlwi r0, r0, 16']
Translated clrlwi r4 r4 16 to: ['gc_env.r[4] = gc_env.r[4] & 0xFFFF; // clrlwi r4, r4, 16']
Translated beq .L_80010B90 to: if (gc_env.cr[0] == 0) goto L_80010B90;
Processing opcode: lhz, operands: ['r5', '0x1a(r30)']
Translated lhz r5 0x1a(r30) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x1a); // lhz r5, 0x1a(r30)']
Translated b .L_80010B94 to: goto L_80010B94;
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: addi, operands: ['r0', 'r5', '0x1']
Translated addi r0 r5 0x1 to: ['gc_env.r[0] = gc_env.r[5] + 1; // addi r0, r5, 0x1']
Processing opcode: sth, operands: ['r0', '0x32(r29)']
Translated sth r0 0x32(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x32, gc_env.r[0]); // sth r0, 0x32(r29)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Translated ori r0 r0 0x1000 to: ['gc_env.r[0] |= 4096; // ori r0, r0, 0x1000']
Processing opcode: lwz, operands: ['r5', 'lbl_8001F008@sda21(r0)']
Translated lwz r5 lbl_8001F008@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r5, lbl_8001F008@sda21(r0)']
Processing opcode: addi, operands: ['r4', 'r29', '0x2']
Translated addi r4 r29 0x2 to: ['gc_env.r[4] = gc_env.r[29] + 2; // addi r4, r29, 0x2']
Processing opcode: lwz, operands: ['r6', 'lbl_8001F00C@sda21(r0)']
Translated lwz r6 lbl_8001F00C@sda21(r0) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r6, lbl_8001F00C@sda21(r0)']
Translated ori r5 r5 0x40 to: ['gc_env.r[5] |= 64; // ori r5, r5, 0x40']
Processing opcode: stw, operands: ['r6', 'lbl_8001F00C@sda21(r0)']
Translated stw r6 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[6]); // stw r6, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r5', 'lbl_8001F008@sda21(r0)']
Translated stw r5 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[5]); // stw r5, lbl_8001F008@sda21(r0)']
Processing opcode: sth, operands: ['r0', '0x30(r29)']
Translated sth r0 0x30(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x30, gc_env.r[0]); // sth r0, 0x30(r29)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated lwz r0 lbl_8001F008@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r5', 'lbl_8001F00C@sda21(r0)']
Translated lwz r5 lbl_8001F00C@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r5, lbl_8001F00C@sda21(r0)']
Translated ori r0 r0 0x80 to: ['gc_env.r[0] |= 128; // ori r0, r0, 0x80']
Processing opcode: stw, operands: ['r5', 'lbl_8001F00C@sda21(r0)']
Translated stw r5 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[5]); // stw r5, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x0(r28)']
Translated lwz r0 0x0(r28) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r0, (r28)']
Processing opcode: lhz, operands: ['r5', '0x2(r29)']
Translated lhz r5 0x2(r29) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[29] + 0x2); // lhz r5, 0x2(r29)']
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80010BEC to: if (gc_env.cr[0] == 0) goto L_80010BEC;
Translated cmplwi r0 0x3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x3) ? 0 : ((uint32_t)gc_env.r[0] < 0x3 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80010BF8 to: if (gc_env.cr[0] != 0) goto L_80010BF8;
Translated rlwinm r0 r5 0 30 28 to: ['gc_env.r[0] = (gc_env.r[5] << 0) & -0x5; // rlwinm r0, r5, 0, 30, 28']
Translated ori r5 r0 0x4 to: ['gc_env.r[5] = gc_env.r[0] | 4; // ori r5, r0, 0x4']
Translated b .L_80010C00 to: goto L_80010C00;
Translated rlwinm r5 r5 0 30 28 to: ['gc_env.r[5] = (gc_env.r[5] << 0) & -0x5; // rlwinm r5, r5, 0, 30, 28']
Translated rlwimi r5 r0 2 29 29 to: ['uint32_t rotated = gc_env.r[0] << 2; // rlwimi r5, r0, 2, 29, 29', 'gc_env.r[5] = (gc_env.r[5] & ~0x4) | (rotated & 0x4);']
Processing opcode: lwz, operands: ['r6', '0x0(r21)']
Translated lwz r6 0x0(r21) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[21]); // lwz r6, (r21)']
Translated rlwinm r5 r5 0 29 27 to: ['gc_env.r[5] = (gc_env.r[5] << 0) & -0x9; // rlwinm r5, r5, 0, 29, 27']
Processing opcode: lwz, operands: ['r7', '0x0(r18)']
Translated lwz r7 0x0(r18) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[18]); // lwz r7, (r18)']
Translated cmplwi r6 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[6] == 0x4) ? 0 : ((uint32_t)gc_env.r[6] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated slwi r0 r7 3 to: ['gc_env.r[0] = gc_env.r[7] << 3; // slwi r0, r7, 3']
Translated or r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] | gc_env.r[0]; // or r0, r5, r0']
Translated beq .L_80010C24 to: if (gc_env.cr[0] == 0) goto L_80010C24;
Translated cmplwi r6 0x5 to: gc_env.cr[0] = ((uint32_t)gc_env.r[6] == 0x5) ? 0 : ((uint32_t)gc_env.r[6] < 0x5 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80010C2C to: if (gc_env.cr[0] != 0) goto L_80010C2C;
Translated rlwinm r0 r0 0 24 21 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & -0x301; // rlwinm r0, r0, 0, 24, 21']
Translated b .L_80010C38 to: goto L_80010C38;
Translated rlwinm r5 r0 0 24 21 to: ['gc_env.r[5] = (gc_env.r[0] << 0) & -0x301; // rlwinm r5, r0, 0, 24, 21']
Translated slwi r0 r6 8 to: ['gc_env.r[0] = gc_env.r[6] << 8; // slwi r0, r6, 8']
Translated or r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] | gc_env.r[0]; // or r0, r5, r0']
Processing opcode: sth, operands: ['r0', '0x0(r4)']
Translated sth r0 0x0(r4) to: ['gc_mem_write16(gc_env.ram, gc_env.r[4], gc_env.r[0]); // sth r0, (r4)']
Translated lis r0 0x4000 to: ['gc_env.r[0] = 16384 << 16; // lis r0, 0x4000']
Processing opcode: addi, operands: ['r6', 'r29', '0x6c']
Translated addi r6 r29 0x6c to: ['gc_env.r[6] = gc_env.r[29] + 108; // addi r6, r29, 0x6c']
Processing opcode: lwz, operands: ['r4', 'lbl_8001F008@sda21(r0)']
Translated lwz r4 lbl_8001F008@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r4, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r5', 'lbl_8001F00C@sda21(r0)']
Translated lwz r5 lbl_8001F00C@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r5, lbl_8001F00C@sda21(r0)']
Translated or r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] | gc_env.r[0]; // or r0, r4, r0']
Processing opcode: stw, operands: ['r5', 'lbl_8001F00C@sda21(r0)']
Translated stw r5 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[5]); // stw r5, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x0(r31)']
Translated lwz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r0, (r31)']
Processing opcode: lhz, operands: ['r4', '0x6c(r29)']
Translated lhz r4 0x6c(r29) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[29] + 0x6c); // lhz r4, 0x6c(r29)']
Translated cmpwi r0 0x2 to: gc_env.cr[0] = (gc_env.r[0] == 0x2) ? 0 : (gc_env.r[0] < 0x2 ? -1 : 1); // Compare with immediate
Translated beq .L_80010C70 to: if (gc_env.cr[0] == 0) goto L_80010C70;
Translated cmpwi r0 0x3 to: gc_env.cr[0] = (gc_env.r[0] == 0x3) ? 0 : (gc_env.r[0] < 0x3 ? -1 : 1); // Compare with immediate
Translated bne .L_80010C7C to: if (gc_env.cr[0] != 0) goto L_80010C7C;
Translated clrrwi r0 r4 1 to: gc_env.r[0] = gc_env.r[4] & ~((1ULL << 1) - 1); // Clear rightmost 1 bits
Translated ori r0 r0 0x1 to: ['gc_env.r[0] |= 1; // ori r0, r0, 0x1']
Translated b .L_80010C80 to: goto L_80010C80;
Translated clrrwi r0 r4 1 to: gc_env.r[0] = gc_env.r[4] & ~((1ULL << 1) - 1); // Clear rightmost 1 bits
Processing opcode: sth, operands: ['r0', '0x0(r6)']
Translated sth r0 0x0(r6) to: ['gc_mem_write16(gc_env.ram, gc_env.r[6], gc_env.r[0]); // sth r0, (r6)']
Translated cmpwi r7 0x0 to: gc_env.cr[0] = (gc_env.r[7] == 0x0) ? 0 : (gc_env.r[7] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: lwz, operands: ['r4', 'lbl_8001F008@sda21(r0)']
Translated lwz r4 lbl_8001F008@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r4, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F00C@sda21(r0)']
Translated lwz r0 lbl_8001F00C@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r0, lbl_8001F00C@sda21(r0)']
Translated ori r0 r0 0x200 to: ['gc_env.r[0] |= 512; // ori r0, r0, 0x200']
Processing opcode: stw, operands: ['r0', 'lbl_8001F00C@sda21(r0)']
Translated stw r0 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[0]); // stw r0, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r4', 'lbl_8001F008@sda21(r0)']
Translated stw r4 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[4]); // stw r4, lbl_8001F008@sda21(r0)']
Processing opcode: lhz, operands: ['r4', '0x0(r24)']
Translated lhz r4 0x0(r24) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[24] + 0x0); // lhz r4, 0x0(r24)']
Processing opcode: lhz, operands: ['r5', '0x0(r16)']
Translated lhz r5 0x0(r16) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[16] + 0x0); // lhz r5, 0x0(r16)']
Translated beq .L_80010CB0 to: if (gc_env.cr[0] == 0) goto L_80010CB0;
Translated slwi r0 r5 1 to: ['gc_env.r[0] = gc_env.r[5] << 1; // slwi r0, r5, 1']
Translated b .L_80010CB4 to: goto L_80010CB4;
Translated mr r0 r5 to: gc_env.r[0] = gc_env.r[5]; // Move register
Translated clrlwi r8 r0 16 to: ['gc_env.r[8] = gc_env.r[0] & 0xFFFF; // clrlwi r8, r0, 16']
Translated cmplw r8 r4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[8] == (uint32_t)gc_env.r[4]) ? 0 : ((uint32_t)gc_env.r[8] < (uint32_t)gc_env.r[4] ? -1 : 1); // Logical compare word
Translated bge .L_80010D0C to: if (gc_env.cr[0] >= 0) goto L_80010D0C;
Translated slwi r6 r8 8 to: ['gc_env.r[6] = gc_env.r[8] << 8; // slwi r6, r8, 8']
Processing opcode: subi, operands: ['r0', 'r6', '0x1']
Translated subi r0 r6 0x1 to: ['gc_env.r[0] = gc_env.r[6] - 1; // subi r0, r6, 1']
Processing opcode: add, operands: ['r0', 'r4', 'r0']
Translated add r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] + gc_env.r[0]; // add r0, r4, r0']
Processing opcode: divwu, operands: ['r0', 'r0', 'r4']
Translated divwu r0 r0 r4 to: ['gc_env.r[0] = (uint32_t)gc_env.r[0] / (uint32_t)gc_env.r[4]; // divwu r0, r0, r4']
Translated ori r0 r0 0x1000 to: ['gc_env.r[0] |= 4096; // ori r0, r0, 0x1000']
Processing opcode: sth, operands: ['r0', '0x4a(r29)']
Translated sth r0 0x4a(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x4A, gc_env.r[0]); // sth r0, 0x4A(r29)']
Translated lis r0 0x400 to: ['gc_env.r[0] = 1024 << 16; // lis r0, 0x400']
Processing opcode: lwz, operands: ['r6', 'lbl_8001F008@sda21(r0)']
Translated lwz r6 lbl_8001F008@sda21(r0) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r6, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r7', 'lbl_8001F00C@sda21(r0)']
Translated lwz r7 lbl_8001F00C@sda21(r0) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r7, lbl_8001F00C@sda21(r0)']
Translated or r0 r7 r0 to: ['gc_env.r[0] = gc_env.r[7] | gc_env.r[0]; // or r0, r7, r0']
Processing opcode: stw, operands: ['r0', 'lbl_8001F00C@sda21(r0)']
Translated stw r0 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[0]); // stw r0, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r6', 'lbl_8001F008@sda21(r0)']
Translated stw r6 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[6]); // stw r6, lbl_8001F008@sda21(r0)']
Processing opcode: sth, operands: ['r8', '0x70(r29)']
Translated sth r8 0x70(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x70, gc_env.r[8]); // sth r8, 0x70(r29)']
Processing opcode: lwz, operands: ['r6', 'lbl_8001F008@sda21(r0)']
Translated lwz r6 lbl_8001F008@sda21(r0) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r6, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F00C@sda21(r0)']
Translated lwz r0 lbl_8001F00C@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r0, lbl_8001F00C@sda21(r0)']
Translated ori r0 r0 0x80 to: ['gc_env.r[0] |= 128; // ori r0, r0, 0x80']
Processing opcode: stw, operands: ['r0', 'lbl_8001F00C@sda21(r0)']
Translated stw r0 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[0]); // stw r0, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r6', 'lbl_8001F008@sda21(r0)']
Translated stw r6 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[6]); // stw r6, lbl_8001F008@sda21(r0)']
Translated b .L_80010D2C to: goto L_80010D2C;
Processing opcode: li, operands: ['r0', '0x100']
Translated li r0 0x100 to: ['gc_env.r[0] = 0x100; // li r0, 0x100']
Processing opcode: sth, operands: ['r0', '0x4a(r29)']
Translated sth r0 0x4a(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x4A, gc_env.r[0]); // sth r0, 0x4A(r29)']
Translated lis r0 0x400 to: ['gc_env.r[0] = 1024 << 16; // lis r0, 0x400']
Processing opcode: lwz, operands: ['r6', 'lbl_8001F008@sda21(r0)']
Translated lwz r6 lbl_8001F008@sda21(r0) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r6, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r7', 'lbl_8001F00C@sda21(r0)']
Translated lwz r7 lbl_8001F00C@sda21(r0) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r7, lbl_8001F00C@sda21(r0)']
Translated or r0 r7 r0 to: ['gc_env.r[0] = gc_env.r[7] | gc_env.r[0]; // or r0, r7, r0']
Processing opcode: stw, operands: ['r0', 'lbl_8001F00C@sda21(r0)']
Translated stw r0 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[0]); // stw r0, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r6', 'lbl_8001F008@sda21(r0)']
Translated stw r6 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[6]); // stw r6, lbl_8001F008@sda21(r0)']
Processing opcode: lhz, operands: ['r0', '0x0(r3)']
Translated lhz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x0); // lhz r0, 0x0(r3)']
Translated subfic r12 r4 0x2d0 to: ['gc_env.r[12] = 720 - gc_env.r[4]; // subfic r12, r4, 720', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (720 >= gc_env.r[4] ? 0x20000000 : 0);']
Processing opcode: lhz, operands: ['r6', '0x1a(r30)']
Translated lhz r6 0x1a(r30) to: ['gc_env.r[6] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x1a); // lhz r6, 0x1a(r30)']
Translated lis r3 0x1000 to: ['gc_env.r[3] = 4096 << 16; // lis r3, 0x1000']
Translated lis r8 0x2000 to: ['gc_env.r[8] = 8192 << 16; // lis r8, 0x2000']
Processing opcode: sth, operands: ['r6', '0x6(r29)']
Translated sth r6 0x6(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x6, gc_env.r[6]); // sth r6, 0x6(r29)']
Translated lis r9 0x400 to: ['gc_env.r[9] = 1024 << 16; // lis r9, 0x400']
Translated lis r7 0x800 to: ['gc_env.r[7] = 2048 << 16; // lis r7, 0x800']
Processing opcode: lwz, operands: ['r10', 'lbl_8001F008@sda21(r0)']
Translated lwz r10 lbl_8001F008@sda21(r0) to: ['gc_env.r[10] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r10, lbl_8001F008@sda21(r0)']
Translated lis r6 0x10 to: ['gc_env.r[6] = 16 << 16; // lis r6, 0x10']
Translated lis r4 0x20 to: ['gc_env.r[4] = 32 << 16; // lis r4, 0x20']
Processing opcode: lwz, operands: ['r11', 'lbl_8001F00C@sda21(r0)']
Translated lwz r11 lbl_8001F00C@sda21(r0) to: ['gc_env.r[11] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r11, lbl_8001F00C@sda21(r0)']
Translated or r10 r10 r3 to: ['gc_env.r[10] = gc_env.r[10] | gc_env.r[3]; // or r10, r10, r3']
Translated lis r3 0x4 to: ['gc_env.r[3] = 4 << 16; // lis r3, 0x4']
Processing opcode: stw, operands: ['r11', 'lbl_8001F00C@sda21(r0)']
Translated stw r11 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[11]); // stw r11, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r10', 'lbl_8001F008@sda21(r0)']
Translated stw r10 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[10]); // stw r10, lbl_8001F008@sda21(r0)']
Processing opcode: lbz, operands: ['r10', '0x1d(r30)']
Translated lbz r10 0x1d(r30) to: ['gc_env.r[10] = gc_mem_read8(gc_env.ram, gc_env.r[30] + 0x1d); // lbz r10, 0x1d(r30)']
Processing opcode: lbz, operands: ['r11', '0x1e(r30)']
Translated lbz r11 0x1e(r30) to: ['gc_env.r[11] = gc_mem_read8(gc_env.ram, gc_env.r[30] + 0x1e); // lbz r11, 0x1e(r30)']
Translated rlwimi r11 r10 8 16 23 to: ['uint32_t rotated = gc_env.r[10] << 8; // rlwimi r11, r10, 8, 16, 23', 'gc_env.r[11] = (gc_env.r[11] & ~0xFF00) | (rotated & 0xFF00);']
Processing opcode: sth, operands: ['r11', '0x4(r29)']
Translated sth r11 0x4(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x4, gc_env.r[11]); // sth r11, 0x4(r29)']
Processing opcode: lwz, operands: ['r10', 'lbl_8001F008@sda21(r0)']
Translated lwz r10 lbl_8001F008@sda21(r0) to: ['gc_env.r[10] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r10, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r11', 'lbl_8001F00C@sda21(r0)']
Translated lwz r11 lbl_8001F00C@sda21(r0) to: ['gc_env.r[11] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r11, lbl_8001F00C@sda21(r0)']
Translated or r8 r10 r8 to: ['gc_env.r[8] = gc_env.r[10] | gc_env.r[8]; // or r8, r10, r8']
Processing opcode: stw, operands: ['r11', 'lbl_8001F00C@sda21(r0)']
Translated stw r11 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[11]); // stw r11, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r8', 'lbl_8001F008@sda21(r0)']
Translated stw r8 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[8]); // stw r8, lbl_8001F008@sda21(r0)']
Processing opcode: lbz, operands: ['r8', '0x1f(r30)']
Translated lbz r8 0x1f(r30) to: ['gc_env.r[8] = gc_mem_read8(gc_env.ram, gc_env.r[30] + 0x1f); // lbz r8, 0x1f(r30)']
Processing opcode: lbz, operands: ['r10', '0x1c(r30)']
Translated lbz r10 0x1c(r30) to: ['gc_env.r[10] = gc_mem_read8(gc_env.ram, gc_env.r[30] + 0x1c); // lbz r10, 0x1c(r30)']
Processing opcode: add, operands: ['r16', 'r8', 'r0']
Translated add r16 r8 r0 to: ['gc_env.r[16] = gc_env.r[8] + gc_env.r[0]; // add r16, r8, r0']
Processing opcode: lhz, operands: ['r11', '0x20(r30)']
Translated lhz r11 0x20(r30) to: ['gc_env.r[11] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x20); // lhz r11, 0x20(r30)']
Processing opcode: subi, operands: ['r16', 'r16', '0x28']
Translated subi r16 r16 0x28 to: ['gc_env.r[16] = gc_env.r[16] - 40; // subi r16, r16, 40']
Translated clrlslwi r8 r16 23 7 to: ['gc_env.r[8] = (gc_env.r[16] << 7) & 0x1FF; // clrlslwi r8, r16, 23, 7']
Translated or r8 r10 r8 to: ['gc_env.r[8] = gc_env.r[10] | gc_env.r[8]; // or r8, r10, r8']
Processing opcode: sth, operands: ['r8', '0xa(r29)']
Translated sth r8 0xa(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0xA, gc_env.r[8]); // sth r8, 0xA(r29)']
Processing opcode: add, operands: ['r8', 'r11', 'r0']
Translated add r8 r11 r0 to: ['gc_env.r[8] = gc_env.r[11] + gc_env.r[0]; // add r8, r11, r0']
Processing opcode: addi, operands: ['r0', 'r8', '0x28']
Translated addi r0 r8 0x28 to: ['gc_env.r[0] = gc_env.r[8] + 40; // addi r0, r8, 0x28']
Processing opcode: lwz, operands: ['r10', 'lbl_8001F008@sda21(r0)']
Translated lwz r10 lbl_8001F008@sda21(r0) to: ['gc_env.r[10] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r10, lbl_8001F008@sda21(r0)']
Processing opcode: subf, operands: ['r0', 'r12', 'r0']
Translated subf r0 r12 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[12]; // subf r0, r12, r0']
Translated srwi r8 r16 9 to: ['gc_env.r[8] = gc_env.r[16] >> 9; // srwi r8, r16, 9']
Processing opcode: lwz, operands: ['r11', 'lbl_8001F00C@sda21(r0)']
Translated lwz r11 lbl_8001F00C@sda21(r0) to: ['gc_env.r[11] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r11, lbl_8001F00C@sda21(r0)']
Translated slwi r0 r0 1 to: ['gc_env.r[0] = gc_env.r[0] << 1; // slwi r0, r0, 1']
Translated or r9 r10 r9 to: ['gc_env.r[9] = gc_env.r[10] | gc_env.r[9]; // or r9, r10, r9']
Processing opcode: stw, operands: ['r11', 'lbl_8001F00C@sda21(r0)']
Translated stw r11 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[11]); // stw r11, lbl_8001F00C@sda21(r0)']
Translated or r0 r8 r0 to: ['gc_env.r[0] = gc_env.r[8] | gc_env.r[0]; // or r0, r8, r0']
Processing opcode: stw, operands: ['r9', 'lbl_8001F008@sda21(r0)']
Translated stw r9 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[9]); // stw r9, lbl_8001F008@sda21(r0)']
Processing opcode: sth, operands: ['r0', '0x8(r29)']
Translated sth r0 0x8(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x8, gc_env.r[0]); // sth r0, 0x8(r29)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated lwz r0 lbl_8001F008@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r8', 'lbl_8001F00C@sda21(r0)']
Translated lwz r8 lbl_8001F00C@sda21(r0) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r8, lbl_8001F00C@sda21(r0)']
Translated or r0 r0 r7 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[7]; // or r0, r0, r7']
Processing opcode: stw, operands: ['r8', 'lbl_8001F00C@sda21(r0)']
Translated stw r8 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[8]); // stw r8, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: lhz, operands: ['r0', '0x10(r30)']
Translated lhz r0 0x10(r30) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x10); // lhz r0, 0x10(r30)']
Processing opcode: lbz, operands: ['r7', '0xc(r30)']
Translated lbz r7 0xc(r30) to: ['gc_env.r[7] = gc_mem_read8(gc_env.ram, gc_env.r[30] + 0xc); // lbz r7, 0xc(r30)']
Translated slwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] << 5; // slwi r0, r0, 5']
Translated or r0 r7 r0 to: ['gc_env.r[0] = gc_env.r[7] | gc_env.r[0]; // or r0, r7, r0']
Processing opcode: sth, operands: ['r0', '0x16(r29)']
Translated sth r0 0x16(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x16, gc_env.r[0]); // sth r0, 0x16(r29)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated lwz r0 lbl_8001F008@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r7', 'lbl_8001F00C@sda21(r0)']
Translated lwz r7 lbl_8001F00C@sda21(r0) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r7, lbl_8001F00C@sda21(r0)']
Translated or r0 r0 r6 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[6]; // or r0, r0, r6']
Processing opcode: stw, operands: ['r7', 'lbl_8001F00C@sda21(r0)']
Translated stw r7 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[7]); // stw r7, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: lhz, operands: ['r0', '0x14(r30)']
Translated lhz r0 0x14(r30) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x14); // lhz r0, 0x14(r30)']
Processing opcode: lbz, operands: ['r6', '0xe(r30)']
Translated lbz r6 0xe(r30) to: ['gc_env.r[6] = gc_mem_read8(gc_env.ram, gc_env.r[30] + 0xe); // lbz r6, 0xe(r30)']
Translated slwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] << 5; // slwi r0, r0, 5']
Translated or r0 r6 r0 to: ['gc_env.r[0] = gc_env.r[6] | gc_env.r[0]; // or r0, r6, r0']
Processing opcode: sth, operands: ['r0', '0x14(r29)']
Translated sth r0 0x14(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x14, gc_env.r[0]); // sth r0, 0x14(r29)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated lwz r0 lbl_8001F008@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r6', 'lbl_8001F00C@sda21(r0)']
Translated lwz r6 lbl_8001F00C@sda21(r0) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r6, lbl_8001F00C@sda21(r0)']
Translated or r0 r0 r4 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[4]; // or r0, r0, r4']
Processing opcode: stw, operands: ['r6', 'lbl_8001F00C@sda21(r0)']
Translated stw r6 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[6]); // stw r6, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: lhz, operands: ['r0', '0x12(r30)']
Translated lhz r0 0x12(r30) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x12); // lhz r0, 0x12(r30)']
Processing opcode: lbz, operands: ['r4', '0xd(r30)']
Translated lbz r4 0xd(r30) to: ['gc_env.r[4] = gc_mem_read8(gc_env.ram, gc_env.r[30] + 0xd); // lbz r4, 0xd(r30)']
Translated slwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] << 5; // slwi r0, r0, 5']
Translated or r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] | gc_env.r[0]; // or r0, r4, r0']
Processing opcode: sth, operands: ['r0', '0x1a(r29)']
Translated sth r0 0x1a(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x1A, gc_env.r[0]); // sth r0, 0x1A(r29)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated lwz r0 lbl_8001F008@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r4', 'lbl_8001F00C@sda21(r0)']
Translated lwz r4 lbl_8001F00C@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r4, lbl_8001F00C@sda21(r0)']
Translated or r0 r0 r3 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[3]; // or r0, r0, r3']
Processing opcode: stw, operands: ['r4', 'lbl_8001F00C@sda21(r0)']
Translated stw r4 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[4]); // stw r4, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: lhz, operands: ['r0', '0x16(r30)']
Translated lhz r0 0x16(r30) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x16); // lhz r0, 0x16(r30)']
Processing opcode: lbz, operands: ['r3', '0xf(r30)']
Translated lbz r3 0xf(r30) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[30] + 0xf); // lbz r3, 0xf(r30)']
Translated slwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] << 5; // slwi r0, r0, 5']
Translated or r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Processing opcode: sth, operands: ['r0', '0x18(r29)']
Translated sth r0 0x18(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x18, gc_env.r[0]); // sth r0, 0x18(r29)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001F008@sda21(r0)']
Translated lwz r3 lbl_8001F008@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r3, lbl_8001F008@sda21(r0)']
Translated lis r0 0x8 to: ['gc_env.r[0] = 8 << 16; // lis r0, 0x8']
Processing opcode: addi, operands: ['r6', 'r29', '0x11c']
Translated addi r6 r29 0x11c to: ['gc_env.r[6] = gc_env.r[29] + 284; // addi r6, r29, 0x11c']
Processing opcode: lwz, operands: ['r4', 'lbl_8001F00C@sda21(r0)']
Translated lwz r4 lbl_8001F00C@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r4, lbl_8001F00C@sda21(r0)']
Translated or r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Processing opcode: stw, operands: ['r4', 'lbl_8001F00C@sda21(r0)']
Translated stw r4 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[4]); // stw r4, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: lhz, operands: ['r3', '0x0(r27)']
Translated lhz r3 0x0(r27) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[27] + 0x0); // lhz r3, 0x0(r27)']
Processing opcode: lwz, operands: ['r4', '0x0(r25)']
Translated lwz r4 0x0(r25) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[25]); // lwz r4, (r25)']
Processing opcode: addi, operands: ['r0', 'r3', '0xf']
Translated addi r0 r3 0xf to: ['gc_env.r[0] = gc_env.r[3] + 15; // addi r0, r3, 0xf']
Processing opcode: lhz, operands: ['r3', '0x0(r15)']
Translated lhz r3 0x0(r15) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[15] + 0x0); // lhz r3, 0x0(r15)']
Translated srawi r0 r0 4 to: ['gc_env.r[0] = ((int32_t)gc_env.r[0]) >> 4; // srawi r0, r0, 4']
Translated addze r0 r0 to: ['uint64_t addze_temp = (uint64_t)gc_env.r[0] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[0] = (uint32_t)addze_temp; // addze r0, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addze_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: stb, operands: ['r0', '0x11c(r29)']
Translated stb r0 0x11c(r29) to: ['gc_mem_write8(gc_env.ram, gc_env.r[29] + 0x11C, gc_env.r[0]); // stb r0, 0x11C(r29)']
Translated bne .L_80010EC8 to: if (gc_env.cr[0] != 0) goto L_80010EC8;
Processing opcode: lbz, operands: ['r4', '0x0(r6)']
Translated lbz r4 0x0(r6) to: ['gc_env.r[4] = gc_mem_read8(gc_env.ram, gc_env.r[6] + 0x0); // lbz r4, 0x0(r6)']
Translated b .L_80010ED0 to: goto L_80010ED0;
Processing opcode: lbz, operands: ['r0', '0x0(r6)']
Translated lbz r0 0x0(r6) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[6] + 0x0); // lbz r0, 0x0(r6)']
Translated clrlslwi r4 r0 25 1 to: ['gc_env.r[4] = (gc_env.r[0] << 1) & 0x7F; // clrlslwi r4, r0, 25, 1']
Translated srawi r0 r3 4 to: ['gc_env.r[0] = ((int32_t)gc_env.r[3]) >> 4; // srawi r0, r3, 4']
Processing opcode: stb, operands: ['r4', '0x11d(r29)']
Translated stb r4 0x11d(r29) to: ['gc_mem_write8(gc_env.ram, gc_env.r[29] + 0x11D, gc_env.r[4]); // stb r4, 0x11D(r29)']
Translated addze r0 r0 to: ['uint64_t addze_temp = (uint64_t)gc_env.r[0] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[0] = (uint32_t)addze_temp; // addze r0, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addze_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated slwi r0 r0 4 to: ['gc_env.r[0] = gc_env.r[0] << 4; // slwi r0, r0, 4']
Translated subfc r0 r0 r3 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[3] - gc_env.r[0];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r0, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= gc_env.r[0] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r0', '0x12c(r29)']
Translated stb r0 0x12c(r29) to: ['gc_mem_write8(gc_env.ram, gc_env.r[29] + 0x12C, gc_env.r[0]); // stb r0, 0x12C(r29)']
Processing opcode: addi, operands: ['r0', 'r5', '0xf']
Translated addi r0 r5 0xf to: ['gc_env.r[0] = gc_env.r[5] + 15; // addi r0, r5, 0xf']
Translated lis r3 0x800 to: ['gc_env.r[3] = 2048 << 16; // lis r3, 0x800']
Processing opcode: lbz, operands: ['r4', '0x12c(r29)']
Translated lbz r4 0x12c(r29) to: ['gc_env.r[4] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x12c); // lbz r4, 0x12c(r29)']
Processing opcode: add, operands: ['r0', 'r4', 'r0']
Translated add r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] + gc_env.r[0]; // add r0, r4, r0']
Translated srawi r0 r0 4 to: ['gc_env.r[0] = ((int32_t)gc_env.r[0]) >> 4; // srawi r0, r0, 4']
Translated addze r0 r0 to: ['uint64_t addze_temp = (uint64_t)gc_env.r[0] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[0] = (uint32_t)addze_temp; // addze r0, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addze_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r0', '0x11e(r29)']
Translated stb r0 0x11e(r29) to: ['gc_mem_write8(gc_env.ram, gc_env.r[29] + 0x11E, gc_env.r[0]); // stb r0, 0x11E(r29)']
Processing opcode: lbz, operands: ['r0', '0x11e(r29)']
Translated lbz r0 0x11e(r29) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x11e); // lbz r0, 0x11e(r29)']
Processing opcode: lbz, operands: ['r4', '0x11d(r29)']
Translated lbz r4 0x11d(r29) to: ['gc_env.r[4] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x11d); // lbz r4, 0x11d(r29)']
Translated rlwimi r4 r0 8 16 23 to: ['uint32_t rotated = gc_env.r[0] << 8; // rlwimi r4, r0, 8, 16, 23', 'gc_env.r[4] = (gc_env.r[4] & ~0xFF00) | (rotated & 0xFF00);']
Processing opcode: sth, operands: ['r4', '0x48(r29)']
Translated sth r4 0x48(r29) to: ['gc_mem_write16(gc_env.ram, gc_env.r[29] + 0x48, gc_env.r[4]); // sth r4, 0x48(r29)']
Processing opcode: lwz, operands: ['r4', 'lbl_8001F008@sda21(r0)']
Translated lwz r4 lbl_8001F008@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r4, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F028@sda21(r0)']
Translated lwz r0 lbl_8001F028@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F028); // lwz r0, lbl_8001F028@sda21(r0)']
Processing opcode: lwz, operands: ['r5', 'lbl_8001F00C@sda21(r0)']
Translated lwz r5 lbl_8001F00C@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r5, lbl_8001F00C@sda21(r0)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated or r0 r5 r3 to: ['gc_env.r[0] = gc_env.r[5] | gc_env.r[3]; // or r0, r5, r3']
Processing opcode: stw, operands: ['r0', 'lbl_8001F00C@sda21(r0)']
Translated stw r0 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[0]); // stw r0, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r4', 'lbl_8001F008@sda21(r0)']
Translated stw r4 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[4]); // stw r4, lbl_8001F008@sda21(r0)']
Translated beq .L_80010F4C to: if (gc_env.cr[0] == 0) goto L_80010F4C;
Processing opcode: addi, operands: ['r3', 'r29', '0xf0']
Translated addi r3 r29 0xf0 to: ['gc_env.r[3] = gc_env.r[29] + 240; // addi r3, r29, 0xf0']
Processing opcode: addi, operands: ['r4', 'r29', '0x124']
Translated addi r4 r29 0x124 to: ['gc_env.r[4] = gc_env.r[29] + 292; // addi r4, r29, 0x124']
Processing opcode: addi, operands: ['r5', 'r29', '0x128']
Translated addi r5 r29 0x128 to: ['gc_env.r[5] = gc_env.r[29] + 296; // addi r5, r29, 0x128']
Processing opcode: addi, operands: ['r6', 'r29', '0x13c']
Translated addi r6 r29 0x13c to: ['gc_env.r[6] = gc_env.r[29] + 316; // addi r6, r29, 0x13c']
Processing opcode: addi, operands: ['r7', 'r29', '0x140']
Translated addi r7 r29 0x140 to: ['gc_env.r[7] = gc_env.r[29] + 320; // addi r7, r29, 0x140']
Translated bl fn_80010384 to: fn_80010384();
Processing opcode: lwz, operands: ['r0', '0x130(r29)']
Translated lwz r0 0x130(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x130); // lwz r0, 0x130(r29)']
Processing opcode: stw, operands: ['r0', '0x8(r1)']
Translated stw r0 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stw r0, 0x8(r1)']
Processing opcode: lhz, operands: ['r3', '0x0(r19)']
Translated lhz r3 0x0(r19) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[19] + 0x0); // lhz r3, 0x0(r19)']
Processing opcode: lhz, operands: ['r4', '0x0(r20)']
Translated lhz r4 0x0(r20) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[20] + 0x0); // lhz r4, 0x0(r20)']
Processing opcode: lbz, operands: ['r5', '0x0(r30)']
Translated lbz r5 0x0(r30) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[30] + 0x0); // lbz r5, 0x0(r30)']
Processing opcode: lhz, operands: ['r6', '0x2(r30)']
Translated lhz r6 0x2(r30) to: ['gc_env.r[6] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x2); // lhz r6, 0x2(r30)']
Processing opcode: lhz, operands: ['r7', '0x4(r30)']
Translated lhz r7 0x4(r30) to: ['gc_env.r[7] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x4); // lhz r7, 0x4(r30)']
Processing opcode: lhz, operands: ['r8', '0x6(r30)']
Translated lhz r8 0x6(r30) to: ['gc_env.r[8] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x6); // lhz r8, 0x6(r30)']
Processing opcode: lhz, operands: ['r9', '0x8(r30)']
Translated lhz r9 0x8(r30) to: ['gc_env.r[9] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0x8); // lhz r9, 0x8(r30)']
Processing opcode: lhz, operands: ['r10', '0xa(r30)']
Translated lhz r10 0xa(r30) to: ['gc_env.r[10] = gc_mem_read16(gc_env.ram, gc_env.r[30] + 0xa); // lhz r10, 0xa(r30)']
Translated bl fn_80010658 to: fn_80010658();
Translated mr r3 r14 to: gc_env.r[3] = gc_env.r[14]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated lmw r14 0x30(r1) to: ['gc_env.r[14] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r14, 0x30(r1)', 'gc_env.r[15] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r14, 0x30(r1)', 'gc_env.r[16] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x38); // lmw r14, 0x30(r1)', 'gc_env.r[17] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lmw r14, 0x30(r1)', 'gc_env.r[18] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x40); // lmw r14, 0x30(r1)', 'gc_env.r[19] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lmw r14, 0x30(r1)', 'gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x48); // lmw r14, 0x30(r1)', 'gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4C); // lmw r14, 0x30(r1)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x50); // lmw r14, 0x30(r1)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x54); // lmw r14, 0x30(r1)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x58); // lmw r14, 0x30(r1)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x5C); // lmw r14, 0x30(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x60); // lmw r14, 0x30(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x64); // lmw r14, 0x30(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x68); // lmw r14, 0x30(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x6C); // lmw r14, 0x30(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x70); // lmw r14, 0x30(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x74); // lmw r14, 0x30(r1)']
Processing opcode: lwz, operands: ['r0', '0x7c(r1)']
Translated lwz r0 0x7c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x7C); // lwz r0, 0x7C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x78']
Translated addi r1 r1 0x78 to: ['gc_env.r[1] += 120; // addi r1, r1, 0x78']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x28(r1)']
Translated stwu r1 -0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x28, gc_env.r[1]); // stwu r1, -0x28(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x28;']
Translated stmw r27 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[27]); // stmw r27, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[28]); // stmw r27, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[29]); // stmw r27, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[30]); // stmw r27, 0x14(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[31]); // stmw r27, 0x14(r1)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r7', 'lbl_8001F010@sda21(r0)']
Translated lwz r7 lbl_8001F010@sda21(r0) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F010); // lwz r7, lbl_8001F010@sda21(r0)']
Translated lis r4 lbl_8001CB80@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001CB80 >> 16) & 0xFFFF; // lis r4, lbl_8001CB80@ha']
Translated lis r5 lbl_8001CB08@ha to: ['gc_env.r[5] = ((uint32_t)&lbl_8001CB08 >> 16) & 0xFFFF; // lis r5, lbl_8001CB08@ha']
Processing opcode: lwz, operands: ['r6', 'lbl_8001F000@sda21(r0)']
Translated lwz r6 lbl_8001F000@sda21(r0) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F000); // lwz r6, lbl_8001F000@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: addi, operands: ['r29', 'r4', 'lbl_8001CB80@l']
Translated addi r29 r4 lbl_8001CB80@l to: ['gc_env.r[29] = gc_env.r[4] + ((uint32_t)&lbl_8001CB80 & 0xFFFF); // addi r29, r4, lbl_8001CB80@l']
Translated or r6 r7 r6 to: ['gc_env.r[6] = gc_env.r[7] | gc_env.r[6]; // or r6, r7, r6']
Processing opcode: stw, operands: ['r6', 'lbl_8001F010@sda21(r0)']
Translated stw r6 lbl_8001F010@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F010, gc_env.r[6]); // stw r6, lbl_8001F010@sda21(r0)']
Processing opcode: addi, operands: ['r31', 'r5', 'lbl_8001CB08@l']
Translated addi r31 r5 lbl_8001CB08@l to: ['gc_env.r[31] = gc_env.r[5] + ((uint32_t)&lbl_8001CB08 & 0xFFFF); // addi r31, r5, lbl_8001CB08@l']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001F000@sda21(r0)']
Translated stw r0 lbl_8001F000@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F000, gc_env.r[0]); // stw r0, lbl_8001F000@sda21(r0)']
Processing opcode: lwz, operands: ['r4', 'lbl_8001F018@sda21(r0)']
Translated lwz r4 lbl_8001F018@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F018); // lwz r4, lbl_8001F018@sda21(r0)']
Processing opcode: lwz, operands: ['r5', 'lbl_8001F01C@sda21(r0)']
Translated lwz r5 lbl_8001F01C@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F01C); // lwz r5, lbl_8001F01C@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated lwz r0 lbl_8001F008@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001F00C@sda21(r0)']
Translated lwz r3 lbl_8001F00C@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r3, lbl_8001F00C@sda21(r0)']
Translated or r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] | gc_env.r[0]; // or r0, r4, r0']
Translated or r3 r5 r3 to: ['gc_env.r[3] = gc_env.r[5] | gc_env.r[3]; // or r3, r5, r3']
Processing opcode: stw, operands: ['r3', 'lbl_8001F01C@sda21(r0)']
Translated stw r3 lbl_8001F01C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F01C, gc_env.r[3]); // stw r3, lbl_8001F01C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F018@sda21(r0)']
Translated stw r0 lbl_8001F018@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F018, gc_env.r[0]); // stw r0, lbl_8001F018@sda21(r0)']
Translated b .L_80011070 to: goto L_80011070;
Processing opcode: lwz, operands: ['r3', 'lbl_8001F008@sda21(r0)']
Translated lwz r3 lbl_8001F008@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r3, lbl_8001F008@sda21(r0)']
Processing opcode: li, operands: ['r5', '0x20']
Translated li r5 0x20 to: ['gc_env.r[5] = 0x20; // li r5, 0x20']
Processing opcode: lwz, operands: ['r27', 'lbl_8001F00C@sda21(r0)']
Translated lwz r27 lbl_8001F00C@sda21(r0) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r27, lbl_8001F00C@sda21(r0)']
Processing opcode: addi, operands: ['r4', 'r27', '0x0']
Translated addi r4 r27 0x0 to: ['gc_env.r[4] = gc_env.r[27] + 0; // addi r4, r27, 0x0']
Translated bl fn_800118EC to: fn_800118EC();
Translated cntlzw r4 r4 to: ['uint32_t val = gc_env.r[4]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[4] = count; // cntlzw r4, r4']
Translated cmpwi r4 0x20 to: gc_env.cr[0] = (gc_env.r[4] == 0x20) ? 0 : (gc_env.r[4] < 0x20 ? -1 : 1); // Compare with immediate
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Translated and r0 r27 r0 to: gc_env.r[0] = gc_env.r[27] & gc_env.r[0];
Translated bge .L_80011024 to: if (gc_env.cr[0] >= 0) goto L_80011024;
Translated b .L_8001102C to: goto L_8001102C;
Translated cntlzw r3 r0 to: ['uint32_t val = gc_env.r[0]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[3] = count; // cntlzw r3, r0']
Processing opcode: addi, operands: ['r4', 'r3', '0x20']
Translated addi r4 r3 0x20 to: ['gc_env.r[4] = gc_env.r[3] + 32; // addi r4, r3, 0x20']
Translated slwi r5 r4 1 to: ['gc_env.r[5] = gc_env.r[4] << 1; // slwi r5, r4, 1']
Processing opcode: add, operands: ['r3', 'r31', 'r5']
Translated add r3 r31 r5 to: ['gc_env.r[3] = gc_env.r[31] + gc_env.r[5]; // add r3, r31, r5']
Processing opcode: lhz, operands: ['r0', '0x0(r3)']
Translated lhz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x0); // lhz r0, 0x0(r3)']
Processing opcode: add, operands: ['r3', 'r29', 'r5']
Translated add r3 r29 r5 to: ['gc_env.r[3] = gc_env.r[29] + gc_env.r[5]; // add r3, r29, r5']
Translated subfic r5 r4 0x3f to: ['gc_env.r[5] = 63 - gc_env.r[4]; // subfic r5, r4, 63', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (63 >= gc_env.r[4] ? 0x20000000 : 0);']
Processing opcode: sth, operands: ['r0', '0x0(r3)']
Translated sth r0 0x0(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3], gc_env.r[0]); // sth r0, (r3)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl fn_800118C8 to: fn_800118C8();
Processing opcode: lwz, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated lwz r0 lbl_8001F008@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r0, lbl_8001F008@sda21(r0)']
Translated nor r5 r3 r3 to: ['gc_env.r[5] = ~gc_env.r[3]; // nor r5, r3, r3']
Translated nor r4 r4 r4 to: ['gc_env.r[4] = ~gc_env.r[4]; // nor r4, r4, r4']
Processing opcode: lwz, operands: ['r3', 'lbl_8001F00C@sda21(r0)']
Translated lwz r3 lbl_8001F00C@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r3, lbl_8001F00C@sda21(r0)']
Translated and r0 r0 r5 to: gc_env.r[0] = gc_env.r[0] & gc_env.r[5];
Translated and r3 r3 r4 to: gc_env.r[3] = gc_env.r[3] & gc_env.r[4];
Processing opcode: stw, operands: ['r3', 'lbl_8001F00C@sda21(r0)']
Translated stw r3 lbl_8001F00C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F00C, gc_env.r[3]); // stw r3, lbl_8001F00C@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated stw r0 lbl_8001F008@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F008, gc_env.r[0]); // stw r0, lbl_8001F008@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F008@sda21(r0)']
Translated lwz r0 lbl_8001F008@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F008); // lwz r0, lbl_8001F008@sda21(r0)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r4', 'lbl_8001F00C@sda21(r0)']
Translated lwz r4 lbl_8001F00C@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F00C); // lwz r4, lbl_8001F00C@sda21(r0)']
Translated xor r0 r0 r3 to: ['gc_env.r[0] = gc_env.r[0] ^ gc_env.r[3]; // xor r0, r0, r3']
Translated xor r3 r4 r3 to: ['gc_env.r[3] = gc_env.r[4] ^ gc_env.r[3]; // xor r3, r4, r3']
Translated or. r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Translated bne .L_80010FF8 to: if (gc_env.cr[0] != 0) goto L_80010FF8;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001EFE4@sda21(r0)']
Translated stw r0 lbl_8001EFE4@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001EFE4, gc_env.r[0]); // stw r0, lbl_8001EFE4@sda21(r0)']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated lmw r27 0x14(r1) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lmw r27, 0x14(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lmw r27, 0x14(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r27, 0x14(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r27, 0x14(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r27, 0x14(r1)']
Processing opcode: lwz, operands: ['r0', '0x2c(r1)']
Translated lwz r0 0x2c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r0, 0x2C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x28']
Translated addi r1 r1 0x28 to: ['gc_env.r[1] += 40; // addi r1, r1, 0x28']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r4 lbl_8001CB08@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001CB08 >> 16) & 0xFFFF; // lis r4, lbl_8001CB08@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: addi, operands: ['r31', 'r4', 'lbl_8001CB08@l']
Translated addi r31 r4 lbl_8001CB08@l to: ['gc_env.r[31] = gc_env.r[4] + ((uint32_t)&lbl_8001CB08 & 0xFFFF); // addi r31, r4, lbl_8001CB08@l']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: stw, operands: ['r30', '0x120(r31)']
Translated stw r30 0x120(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x120, gc_env.r[30]); // stw r30, 0x120(r31)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001F028@sda21(r0)']
Translated stw r0 lbl_8001F028@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F028, gc_env.r[0]); // stw r0, lbl_8001F028@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r31', '0xf0']
Translated addi r3 r31 0xf0 to: ['gc_env.r[3] = gc_env.r[31] + 240; // addi r3, r31, 0xf0']
Processing opcode: addi, operands: ['r4', 'r31', '0x124']
Translated addi r4 r31 0x124 to: ['gc_env.r[4] = gc_env.r[31] + 292; // addi r4, r31, 0x124']
Processing opcode: addi, operands: ['r5', 'r31', '0x128']
Translated addi r5 r31 0x128 to: ['gc_env.r[5] = gc_env.r[31] + 296; // addi r5, r31, 0x128']
Processing opcode: addi, operands: ['r6', 'r31', '0x13c']
Translated addi r6 r31 0x13c to: ['gc_env.r[6] = gc_env.r[31] + 316; // addi r6, r31, 0x13c']
Processing opcode: addi, operands: ['r7', 'r31', '0x140']
Translated addi r7 r31 0x140 to: ['gc_env.r[7] = gc_env.r[31] + 320; // addi r7, r31, 0x140']
Translated bl fn_80010384 to: fn_80010384();
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r4 lbl_8001CB08@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001CB08 >> 16) & 0xFFFF; // lis r4, lbl_8001CB08@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: addi, operands: ['r31', 'r4', 'lbl_8001CB08@l']
Translated addi r31 r4 lbl_8001CB08@l to: ['gc_env.r[31] = gc_env.r[4] + ((uint32_t)&lbl_8001CB08 & 0xFFFF); // addi r31, r4, lbl_8001CB08@l']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: stw, operands: ['r30', '0x130(r31)']
Translated stw r30 0x130(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x130, gc_env.r[30]); // stw r30, 0x130(r31)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Processing opcode: lwz, operands: ['r10', '0x144(r31)']
Translated lwz r10 0x144(r31) to: ['gc_env.r[10] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x144); // lwz r10, 0x144(r31)']
Processing opcode: lwz, operands: ['r0', '0x130(r31)']
Translated lwz r0 0x130(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x130); // lwz r0, 0x130(r31)']
Processing opcode: stw, operands: ['r0', '0x8(r1)']
Translated stw r0 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stw r0, 0x8(r1)']
Processing opcode: lhz, operands: ['r3', '0xfa(r31)']
Translated lhz r3 0xfa(r31) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0xfa); // lhz r3, 0xfa(r31)']
Processing opcode: lhz, operands: ['r4', '0xf6(r31)']
Translated lhz r4 0xf6(r31) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0xf6); // lhz r4, 0xf6(r31)']
Processing opcode: lbz, operands: ['r5', '0x0(r10)']
Translated lbz r5 0x0(r10) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[10] + 0x0); // lbz r5, 0x0(r10)']
Processing opcode: lhz, operands: ['r6', '0x2(r10)']
Translated lhz r6 0x2(r10) to: ['gc_env.r[6] = gc_mem_read16(gc_env.ram, gc_env.r[10] + 0x2); // lhz r6, 0x2(r10)']
Processing opcode: lhz, operands: ['r7', '0x4(r10)']
Translated lhz r7 0x4(r10) to: ['gc_env.r[7] = gc_mem_read16(gc_env.ram, gc_env.r[10] + 0x4); // lhz r7, 0x4(r10)']
Processing opcode: lhz, operands: ['r8', '0x6(r10)']
Translated lhz r8 0x6(r10) to: ['gc_env.r[8] = gc_mem_read16(gc_env.ram, gc_env.r[10] + 0x6); // lhz r8, 0x6(r10)']
Processing opcode: lhz, operands: ['r9', '0x8(r10)']
Translated lhz r9 0x8(r10) to: ['gc_env.r[9] = gc_mem_read16(gc_env.ram, gc_env.r[10] + 0x8); // lhz r9, 0x8(r10)']
Processing opcode: lhz, operands: ['r10', '0xa(r10)']
Translated lhz r10 0xa(r10) to: ['gc_env.r[10] = gc_mem_read16(gc_env.ram, gc_env.r[10] + 0xa); // lhz r10, 0xa(r10)']
Translated bl fn_80010658 to: fn_80010658();
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r7', 'r3', '0x2000']
Translated addi r7 r3 0x2000 to: ['gc_env.r[7] = gc_env.r[3] + 8192; // addi r7, r3, 0x2000']
Processing opcode: lhzu, operands: ['r0', '0x2c(r7)']
Translated lhzu r0 0x2c(r7) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[7] + 0x2c); // lhzu r0, 0x2c(r7)', 'gc_env.r[7] = gc_env.r[7] + 0x2c;']
Processing opcode: addi, operands: ['r4', 'r3', '0x2000']
Translated addi r4 r3 0x2000 to: ['gc_env.r[4] = gc_env.r[3] + 8192; // addi r4, r3, 0x2000']
Translated clrlwi r5 r0 21 to: ['gc_env.r[5] = gc_env.r[0] & 0x7FF; // clrlwi r5, r0, 21']
Processing opcode: lhz, operands: ['r0', '0x0(r7)']
Translated lhz r0 0x0(r7) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[7] + 0x0); // lhz r0, 0x0(r7)']
Translated mr r6 r5 to: gc_env.r[6] = gc_env.r[5]; // Move register
Processing opcode: lhz, operands: ['r3', '0x2e(r4)']
Translated lhz r3 0x2e(r4) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[4] + 0x2e); // lhz r3, 0x2e(r4)']
Translated clrlwi r5 r0 21 to: ['gc_env.r[5] = gc_env.r[0] & 0x7FF; // clrlwi r5, r0, 21']
Translated cmplw r6 r5 to: gc_env.cr[0] = ((uint32_t)gc_env.r[6] == (uint32_t)gc_env.r[5]) ? 0 : ((uint32_t)gc_env.r[6] < (uint32_t)gc_env.r[5] ? -1 : 1); // Logical compare word
Translated clrlwi r3 r3 21 to: ['gc_env.r[3] = gc_env.r[3] & 0x7FF; // clrlwi r3, r3, 21']
Translated bne .L_800111AC to: if (gc_env.cr[0] != 0) goto L_800111AC;
Processing opcode: lwz, operands: ['r6', 'lbl_8001F020@sda21(r0)']
Translated lwz r6 lbl_8001F020@sda21(r0) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F020); // lwz r6, lbl_8001F020@sda21(r0)']
Processing opcode: subi, operands: ['r0', 'r5', '0x1']
Translated subi r0 r5 0x1 to: ['gc_env.r[0] = gc_env.r[5] - 1; // subi r0, r5, 1']
Processing opcode: subi, operands: ['r4', 'r3', '0x1']
Translated subi r4 r3 0x1 to: ['gc_env.r[4] = gc_env.r[3] - 1; // subi r4, r3, 1']
Processing opcode: lhz, operands: ['r3', '0x1a(r6)']
Translated lhz r3 0x1a(r6) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x1a); // lhz r3, 0x1a(r6)']
Translated slwi r5 r0 1 to: ['gc_env.r[5] = gc_env.r[0] << 1; // slwi r5, r0, 1']
Processing opcode: lhz, operands: ['r0', '0x18(r6)']
Translated lhz r0 0x18(r6) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[6] + 0x18); // lhz r0, 0x18(r6)']
Processing opcode: divwu, operands: ['r3', 'r4', 'r3']
Translated divwu r3 r4 r3 to: ['gc_env.r[3] = (uint32_t)gc_env.r[4] / (uint32_t)gc_env.r[3]; // divwu r3, r4, r3']
Processing opcode: add, operands: ['r3', 'r5', 'r3']
Translated add r3 r5 r3 to: ['gc_env.r[3] = gc_env.r[5] + gc_env.r[3]; // add r3, r5, r3']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bge .L_800111F8 to: if (gc_env.cr[0] >= 0) goto L_800111F8;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated blr  to: return;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: stw, operands: ['r30', '0x8(r1)']
Translated stw r30 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[30]); // stw r30, 0x8(r1)']
Processing opcode: lwz, operands: ['r31', 'lbl_8001F020@sda21(r0)']
Translated lwz r31 lbl_8001F020@sda21(r0) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F020); // lwz r31, lbl_8001F020@sda21(r0)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: addi, operands: ['r8', 'r4', '0x2000']
Translated addi r8 r4 0x2000 to: ['gc_env.r[8] = gc_env.r[4] + 8192; // addi r8, r4, 0x2000']
Processing opcode: lhzu, operands: ['r0', '0x2c(r8)']
Translated lhzu r0 0x2c(r8) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[8] + 0x2c); // lhzu r0, 0x2c(r8)', 'gc_env.r[8] = gc_env.r[8] + 0x2c;']
Processing opcode: addi, operands: ['r5', 'r4', '0x2000']
Translated addi r5 r4 0x2000 to: ['gc_env.r[5] = gc_env.r[4] + 8192; // addi r5, r4, 0x2000']
Translated clrlwi r6 r0 21 to: ['gc_env.r[6] = gc_env.r[0] & 0x7FF; // clrlwi r6, r0, 21']
Processing opcode: lhz, operands: ['r0', '0x0(r8)']
Translated lhz r0 0x0(r8) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[8] + 0x0); // lhz r0, 0x0(r8)']
Translated mr r7 r6 to: gc_env.r[7] = gc_env.r[6]; // Move register
Processing opcode: lhz, operands: ['r4', '0x2e(r5)']
Translated lhz r4 0x2e(r5) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[5] + 0x2e); // lhz r4, 0x2e(r5)']
Translated clrlwi r6 r0 21 to: ['gc_env.r[6] = gc_env.r[0] & 0x7FF; // clrlwi r6, r0, 21']
Translated cmplw r7 r6 to: gc_env.cr[0] = ((uint32_t)gc_env.r[7] == (uint32_t)gc_env.r[6]) ? 0 : ((uint32_t)gc_env.r[7] < (uint32_t)gc_env.r[6] ? -1 : 1); // Logical compare word
Translated clrlwi r7 r4 21 to: ['gc_env.r[7] = gc_env.r[4] & 0x7FF; // clrlwi r7, r4, 21']
Translated bne .L_80011230 to: if (gc_env.cr[0] != 0) goto L_80011230;
Processing opcode: lwz, operands: ['r4', 'lbl_8001F020@sda21(r0)']
Translated lwz r4 lbl_8001F020@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F020); // lwz r4, lbl_8001F020@sda21(r0)']
Processing opcode: subi, operands: ['r5', 'r7', '0x1']
Translated subi r5 r7 0x1 to: ['gc_env.r[5] = gc_env.r[7] - 1; // subi r5, r7, 1']
Processing opcode: subi, operands: ['r6', 'r6', '0x1']
Translated subi r6 r6 0x1 to: ['gc_env.r[6] = gc_env.r[6] - 1; // subi r6, r6, 1']
Processing opcode: lhz, operands: ['r0', '0x1a(r4)']
Translated lhz r0 0x1a(r4) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[4] + 0x1a); // lhz r0, 0x1a(r4)']
Translated slwi r4 r6 1 to: ['gc_env.r[4] = gc_env.r[6] << 1; // slwi r4, r6, 1']
Processing opcode: divwu, operands: ['r0', 'r5', 'r0']
Translated divwu r0 r5 r0 to: ['gc_env.r[0] = (uint32_t)gc_env.r[5] / (uint32_t)gc_env.r[0]; // divwu r0, r5, r0']
Processing opcode: add, operands: ['r30', 'r4', 'r0']
Translated add r30 r4 r0 to: ['gc_env.r[30] = gc_env.r[4] + gc_env.r[0]; // add r30, r4, r0']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lhz, operands: ['r0', '0x18(r31)']
Translated lhz r0 0x18(r31) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[31] + 0x18); // lhz r0, 0x18(r31)']
Translated cmplw r30 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[30] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated blt .L_8001127C to: ['if (gc_env.cr[0] & 0x8) goto L_8001127C; // blt .L_8001127C']
Processing opcode: subf, operands: ['r30', 'r0', 'r30']
Translated subf r30 r0 r30 to: ['gc_env.r[30] = gc_env.r[30] - gc_env.r[0]; // subf r30, r0, r30']
Translated srwi r3 r30 1 to: ['gc_env.r[3] = gc_env.r[30] >> 1; // srwi r3, r30, 1']
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: lwz, operands: ['r30', '0x8(r1)']
Translated lwz r30 0x8(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r30, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r0', 'CurrTvMode_8001F024@sda21(r0)']
Translated lwz r0 CurrTvMode_8001F024@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&CurrTvMode_8001F024); // lwz r0, CurrTvMode_8001F024@sda21(r0)']
Translated cmpwi r0 0x3 to: gc_env.cr[0] = (gc_env.r[0] == 0x3) ? 0 : (gc_env.r[0] < 0x3 ? -1 : 1); // Compare with immediate
Translated beq .L_800112E4 to: if (gc_env.cr[0] == 0) goto L_800112E4;
Translated bge .L_800112D4 to: if (gc_env.cr[0] >= 0) goto L_800112D4;
Translated cmpwi r0 0x1 to: gc_env.cr[0] = (gc_env.r[0] == 0x1) ? 0 : (gc_env.r[0] < 0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_800112EC to: if (gc_env.cr[0] == 0) goto L_800112EC;
Translated bge .L_800112F4 to: if (gc_env.cr[0] >= 0) goto L_800112F4;
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bge .L_800112E4 to: if (gc_env.cr[0] >= 0) goto L_800112E4;
Translated b .L_800112F8 to: goto L_800112F8;
Translated cmpwi r0 0x5 to: gc_env.cr[0] = (gc_env.r[0] == 0x5) ? 0 : (gc_env.r[0] < 0x5 ? -1 : 1); // Compare with immediate
Translated beq .L_800112F4 to: if (gc_env.cr[0] == 0) goto L_800112F4;
Translated bge .L_800112F8 to: if (gc_env.cr[0] >= 0) goto L_800112F8;
Translated b .L_800112EC to: goto L_800112EC;
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Translated b .L_800112F8 to: goto L_800112F8;
Processing opcode: li, operands: ['r31', '0x1']
Translated li r31 0x1 to: ['gc_env.r[31] = 0x1; // li r31, 0x1']
Translated b .L_800112F8 to: goto L_800112F8;
Translated mr r31 r0 to: gc_env.r[31] = gc_env.r[0]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: lbz, operands: ['r0', '0x30e3(r4)']
Translated lbz r0 0x30e3(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 0x30e3); // lbz r0, 0x30e3(r4)']
Translated rlwinm. r0 r0 0 25 25 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x40; // rlwinm r0, r0, 0, 25, 25', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_80011348 to: if (gc_env.cr[0] == 0) goto L_80011348;
Processing opcode: li, operands: ['r31', '0x1']
Translated li r31 0x1 to: ['gc_env.r[31] = 0x1; // li r31, 0x1']
Translated b .L_8001134C to: goto L_8001134C;
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Translated lis r4 0x8000 to: ['gc_env.r[4] = -32768 << 16; // lis r4, 0x8000']
Processing opcode: lbz, operands: ['r0', '0x30e3(r4)']
Translated lbz r0 0x30e3(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 0x30e3); // lbz r0, 0x30e3(r4)']
Translated andi. r0 r0 0xbf to: gc_env.r[0] = gc_env.r[0] & 0xbf;
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: stb, operands: ['r0', '0x30e3(r4)']
Translated stb r0 0x30e3(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x30E3, gc_env.r[0]); // stb r0, 0x30E3(r4)']
Translated beq .L_80011370 to: if (gc_env.cr[0] == 0) goto L_80011370;
Processing opcode: lbz, operands: ['r0', '0x30e3(r4)']
Translated lbz r0 0x30e3(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 0x30e3); // lbz r0, 0x30e3(r4)']
Translated ori r0 r0 0x40 to: ['gc_env.r[0] |= 64; // ori r0, r0, 0x40']
Processing opcode: stb, operands: ['r0', '0x30e3(r4)']
Translated stb r0 0x30e3(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x30E3, gc_env.r[0]); // stb r0, 0x30E3(r4)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated clrlwi r0 r4 24 to: ['gc_env.r[0] = gc_env.r[4] & 0xFF; // clrlwi r0, r4, 24']
Processing opcode: lbz, operands: ['r6', '0x0(r3)']
Translated lbz r6 0x0(r3) to: ['gc_env.r[6] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x0); // lbz r6, 0x0(r3)']
Translated cmplwi r0 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x4) ? 0 : ((uint32_t)gc_env.r[0] < 0x4 ? -1 : 1); // Logical compare with immediate
Processing opcode: addi, operands: ['r7', 'r3', '0x0']
Translated addi r7 r3 0x0 to: ['gc_env.r[7] = gc_env.r[3] + 0; // addi r7, r3, 0x0']
Translated extsb r6 r6 to: ['gc_env.r[6] = (int32_t)(int8_t)(gc_env.r[6] & 0xFF); // extsb r6, r6']
Processing opcode: li, operands: ['r5', '0x8']
Translated li r5 0x8 to: ['gc_env.r[5] = 0x8; // li r5, 0x8']
Processing opcode: li, operands: ['r8', '0x4']
Translated li r8 0x4 to: ['gc_env.r[8] = 0x4; // li r8, 0x4']
Processing opcode: li, operands: ['r9', '0x1']
Translated li r9 0x1 to: ['gc_env.r[9] = 0x1; // li r9, 0x1']
Processing opcode: li, operands: ['r10', '0x0']
Translated li r10 0x0 to: ['gc_env.r[10] = 0x0; // li r10, 0x0']
Processing opcode: li, operands: ['r11', '0x0']
Translated li r11 0x0 to: ['gc_env.r[11] = 0x0; // li r11, 0x0']
Processing opcode: li, operands: ['r12', '0x4']
Translated li r12 0x4 to: ['gc_env.r[12] = 0x4; // li r12, 0x4']
Translated bne .L_800113DC to: if (gc_env.cr[0] != 0) goto L_800113DC;
Processing opcode: lwz, operands: ['r4', '0x4(r3)']
Translated lwz r4 0x4(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4); // lwz r4, 0x4(r3)']
Processing opcode: addi, operands: ['r0', 'r4', '0xf']
Translated addi r0 r4 0xf to: ['gc_env.r[0] = gc_env.r[4] + 15; // addi r0, r4, 0xf']
Translated clrrwi r4 r0 4 to: gc_env.r[4] = gc_env.r[0] & ~((1ULL << 4) - 1); // Clear rightmost 4 bits
Processing opcode: addi, operands: ['r0', 'r4', '0x10']
Translated addi r0 r4 0x10 to: ['gc_env.r[0] = gc_env.r[4] + 16; // addi r0, r4, 0x10']
Processing opcode: stw, operands: ['r0', '0x4(r3)']
Translated stw r0 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[0]); // stw r0, 0x4(r3)']
Translated mr r3 r4 to: gc_env.r[3] = gc_env.r[4]; // Move register
Translated blr  to: return;
Translated cmplwi r0 0x3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x3) ? 0 : ((uint32_t)gc_env.r[0] < 0x3 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800113FC to: if (gc_env.cr[0] != 0) goto L_800113FC;
Processing opcode: lbz, operands: ['r6', '0x1(r3)']
Translated lbz r6 0x1(r3) to: ['gc_env.r[6] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x1); // lbz r6, 0x1(r3)']
Processing opcode: addi, operands: ['r7', 'r3', '0x1']
Translated addi r7 r3 0x1 to: ['gc_env.r[7] = gc_env.r[3] + 1; // addi r7, r3, 0x1']
Processing opcode: li, operands: ['r8', '0x8']
Translated li r8 0x8 to: ['gc_env.r[8] = 0x8; // li r8, 0x8']
Translated extsb r6 r6 to: ['gc_env.r[6] = (int32_t)(int8_t)(gc_env.r[6] & 0xFF); // extsb r6, r6']
Processing opcode: li, operands: ['r11', '0x20']
Translated li r11 0x20 to: ['gc_env.r[11] = 0x20; // li r11, 0x20']
Processing opcode: li, operands: ['r12', '0x8']
Translated li r12 0x8 to: ['gc_env.r[12] = 0x8; // li r12, 0x8']
Translated clrlwi r0 r4 24 to: ['gc_env.r[0] = gc_env.r[4] & 0xFF; // clrlwi r0, r4, 24']
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80011420 to: if (gc_env.cr[0] != 0) goto L_80011420;
Translated clrlwi. r0 r6 31 to: ['gc_env.r[0] = gc_env.r[6] & 0x1; // clrlwi r0, r6, 31']
Processing opcode: li, operands: ['r8', '0x8']
Translated li r8 0x8 to: ['gc_env.r[8] = 0x8; // li r8, 0x8']
Processing opcode: li, operands: ['r5', '0x7']
Translated li r5 0x7 to: ['gc_env.r[5] = 0x7; // li r5, 0x7']
Translated beq .L_8001141C to: if (gc_env.cr[0] == 0) goto L_8001141C;
Processing opcode: li, operands: ['r10', '0x1']
Translated li r10 0x1 to: ['gc_env.r[10] = 0x1; // li r10, 0x1']
Processing opcode: li, operands: ['r9', '0x2']
Translated li r9 0x2 to: ['gc_env.r[9] = 0x2; // li r9, 0x2']
Translated cmpw r6 r5 to: ['gc_env.cr[0] = (int32_t)gc_env.r[6] < (int32_t)gc_env.r[5] ? 0x8 : ((int32_t)gc_env.r[6] > (int32_t)gc_env.r[5] ? 0x4 : 0x2); // cmpw r6, r5']
Translated bge .L_80011448 to: if (gc_env.cr[0] >= 0) goto L_80011448;
Processing opcode: add, operands: ['r6', 'r6', 'r10']
Translated add r6 r6 r10 to: ['gc_env.r[6] = gc_env.r[6] + gc_env.r[10]; // add r6, r6, r10']
Processing opcode: lwz, operands: ['r5', '0x8(r3)']
Translated lwz r5 0x8(r3) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r5, 0x8(r3)']
Processing opcode: mullw, operands: ['r3', 'r6', 'r12']
Translated mullw r3 r6 r12 to: ['gc_env.r[3] = gc_env.r[6] * gc_env.r[12]; // mullw r3, r6, r12']
Processing opcode: add, operands: ['r0', 'r6', 'r9']
Translated add r0 r6 r9 to: ['gc_env.r[0] = gc_env.r[6] + gc_env.r[9]; // add r0, r6, r9']
Processing opcode: add, operands: ['r6', 'r11', 'r3']
Translated add r6 r11 r3 to: ['gc_env.r[6] = gc_env.r[11] + gc_env.r[3]; // add r6, r11, r3']
Processing opcode: stb, operands: ['r0', '0x0(r7)']
Translated stb r0 0x0(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7], gc_env.r[0]); // stb r0, (r7)']
Processing opcode: add, operands: ['r6', 'r5', 'r6']
Translated add r6 r5 r6 to: ['gc_env.r[6] = gc_env.r[5] + gc_env.r[6]; // add r6, r5, r6']
Translated b .L_80011470 to: goto L_80011470;
Processing opcode: li, operands: ['r0', '0x8']
Translated li r0 0x8 to: ['gc_env.r[0] = 0x8; // li r0, 0x8']
Processing opcode: stb, operands: ['r0', '0x0(r7)']
Translated stb r0 0x0(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7], gc_env.r[0]); // stb r0, (r7)']
Processing opcode: subi, operands: ['r0', 'r8', '0x1']
Translated subi r0 r8 0x1 to: ['gc_env.r[0] = gc_env.r[8] - 1; // subi r0, r8, 1']
Translated nor r6 r0 r0 to: ['gc_env.r[6] = ~gc_env.r[0]; // nor r6, r0, r0']
Processing opcode: lwz, operands: ['r0', '0x4(r3)']
Translated lwz r0 0x4(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4); // lwz r0, 0x4(r3)']
Processing opcode: add, operands: ['r5', 'r8', 'r0']
Translated add r5 r8 r0 to: ['gc_env.r[5] = gc_env.r[8] + gc_env.r[0]; // add r5, r8, r0']
Processing opcode: subi, operands: ['r0', 'r5', '0x1']
Translated subi r0 r5 0x1 to: ['gc_env.r[0] = gc_env.r[5] - 1; // subi r0, r5, 1']
Translated and r6 r6 r0 to: gc_env.r[6] = gc_env.r[6] & gc_env.r[0];
Processing opcode: add, operands: ['r0', 'r6', 'r8']
Translated add r0 r6 r8 to: ['gc_env.r[0] = gc_env.r[6] + gc_env.r[8]; // add r0, r6, r8']
Processing opcode: stw, operands: ['r0', '0x4(r3)']
Translated stw r0 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[0]); // stw r0, 0x4(r3)']
Translated clrlwi. r0 r4 24 to: ['gc_env.r[0] = gc_env.r[4] & 0xFF; // clrlwi r0, r4, 24']
Translated bne .L_8001147C to: if (gc_env.cr[0] != 0) goto L_8001147C;
Processing opcode: lwz, operands: ['r6', '0x0(r6)']
Translated lwz r6 0x0(r6) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r6, (r6)']
Translated mr r3 r6 to: gc_env.r[3] = gc_env.r[6]; // Move register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated b .L_800114B0 to: goto L_800114B0;
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Processing opcode: li, operands: ['r4', '-0x1']
Translated li r4 -0x1 to: ['gc_env.r[4] = -0x1; // li r4, -0x1']
Processing opcode: stw, operands: ['r0', '__global_destructor_chain@sda21(r0)']
Translated stw r0 __global_destructor_chain@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&__global_destructor_chain, gc_env.r[0]); // stw r0, __global_destructor_chain@sda21(r0)']
Processing opcode: lwz, operands: ['r12', '0x4(r3)']
Translated lwz r12 0x4(r3) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4); // lwz r12, 0x4(r3)']
Processing opcode: lwz, operands: ['r3', '0x8(r3)']
Translated lwz r3 0x8(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r3, 0x8(r3)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: lwz, operands: ['r3', '__global_destructor_chain@sda21(r0)']
Translated lwz r3 __global_destructor_chain@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&__global_destructor_chain); // lwz r3, __global_destructor_chain@sda21(r0)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80011494 to: if (gc_env.cr[0] != 0) goto L_80011494;
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Translated lis r4 lbl_8001A460@h to: ['gc_env.r[4] = ((uint32_t)&lbl_8001A460 >> 16) & 0xFFFF; // lis r4, lbl_8001A460@h']
Translated ori r4 r4 lbl_8001A460@l to: ['gc_env.r[4] = (uint32_t)&lbl_8001A460; // lis + ori lbl_8001A460']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Error in handler for lfd: name 'format_hex' is not defined
Translated fcmpu cr0 f1 f0 to: ['gc_env.cr[0] = isnan(gc_env.f[1]) || isnan(gc_env.f[0]) ? 0x1 : (gc_env.f[1] < gc_env.f[0] ? 0x8 : (gc_env.f[1] > gc_env.f[0] ? 0x4 : 0x2)); // fcmpu cr0, f1, f0']
Translated fcmpu cr6 f1 f3 to: ['gc_env.cr[6] = isnan(gc_env.f[1]) || isnan(gc_env.f[3]) ? 0x1 : (gc_env.f[1] < gc_env.f[3] ? 0x8 : (gc_env.f[1] > gc_env.f[3] ? 0x4 : 0x2)); // fcmpu cr6, f1, f3']
Translated blt .L_80011520 to: ['if (gc_env.cr[0] & 0x8) goto L_80011520; // blt .L_80011520']
Processing opcode: subi, operands: ['r3', 'r3', '0x1']
Translated subi r3 r3 0x1 to: ['gc_env.r[3] = gc_env.r[3] - 1; // subi r3, r3, 1']
Translated bge cr6 .L_80011520 to: if (gc_env.cr[6] >= 0) goto L_80011520;
Translated fcmpu cr7 f1 f4 to: ['gc_env.cr[7] = isnan(gc_env.f[1]) || isnan(gc_env.f[4]) ? 0x1 : (gc_env.f[1] < gc_env.f[4] ? 0x8 : (gc_env.f[1] > gc_env.f[4] ? 0x4 : 0x2)); // fcmpu cr7, f1, f4']
Translated fmr f2 f1 to: ['gc_env.f[2] = gc_env.f[1]; // fmr f2, f1']
Translated blt cr7 .L_8001150C to: ['if (gc_env.cr[7] & 0x8) goto L_8001150C; // blt .L_8001150C']
Translated fsub f2 f1 f4 to: ['gc_env.f[2] = gc_env.f[1] - gc_env.f[4]; // fsub f2, f1, f4']
Translated fctiwz f2 f2 to: ['gc_env.f[2] = (double)(int32_t)gc_env.f[2]; // fctiwz f2, f2']
Translated stfd f2 0x8(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[2], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x8, temp); // stfd f2, 0x8(r1)']
Processing opcode: lwz, operands: ['r3', '0xc(r1)']
Translated lwz r3 0xc(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r3, 0xC(r1)']
Translated blt cr7 .L_80011520 to: ['if (gc_env.cr[7] & 0x8) goto L_80011520; // blt .L_80011520']
Processing opcode: addis, operands: ['r3', 'r3', '0x8000']
Translated addis r3 r3 0x8000 to: ['gc_env.r[3] = gc_env.r[3] + (32768 << 16); // addis r3, r3, 32768']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated blr  to: return;
Processing opcode: stw, operands: ['r14', '-0x48(r11)']
Translated stw r14 -0x48(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x48, gc_env.r[14]); // stw r14, -0x48(r11)']
Processing opcode: stw, operands: ['r15', '-0x44(r11)']
Translated stw r15 -0x44(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x44, gc_env.r[15]); // stw r15, -0x44(r11)']
Processing opcode: stw, operands: ['r16', '-0x40(r11)']
Translated stw r16 -0x40(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x40, gc_env.r[16]); // stw r16, -0x40(r11)']
Processing opcode: stw, operands: ['r17', '-0x3c(r11)']
Translated stw r17 -0x3c(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x3C, gc_env.r[17]); // stw r17, -0x3C(r11)']
Processing opcode: stw, operands: ['r18', '-0x38(r11)']
Translated stw r18 -0x38(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x38, gc_env.r[18]); // stw r18, -0x38(r11)']
Processing opcode: stw, operands: ['r19', '-0x34(r11)']
Translated stw r19 -0x34(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x34, gc_env.r[19]); // stw r19, -0x34(r11)']
Processing opcode: stw, operands: ['r20', '-0x30(r11)']
Translated stw r20 -0x30(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x30, gc_env.r[20]); // stw r20, -0x30(r11)']
Processing opcode: stw, operands: ['r21', '-0x2c(r11)']
Translated stw r21 -0x2c(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x2C, gc_env.r[21]); // stw r21, -0x2C(r11)']
Processing opcode: stw, operands: ['r22', '-0x28(r11)']
Translated stw r22 -0x28(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x28, gc_env.r[22]); // stw r22, -0x28(r11)']
Processing opcode: stw, operands: ['r23', '-0x24(r11)']
Translated stw r23 -0x24(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x24, gc_env.r[23]); // stw r23, -0x24(r11)']
Processing opcode: stw, operands: ['r24', '-0x20(r11)']
Translated stw r24 -0x20(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x20, gc_env.r[24]); // stw r24, -0x20(r11)']
Processing opcode: stw, operands: ['r25', '-0x1c(r11)']
Translated stw r25 -0x1c(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x1C, gc_env.r[25]); // stw r25, -0x1C(r11)']
Processing opcode: stw, operands: ['r26', '-0x18(r11)']
Translated stw r26 -0x18(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x18, gc_env.r[26]); // stw r26, -0x18(r11)']
Processing opcode: stw, operands: ['r27', '-0x14(r11)']
Translated stw r27 -0x14(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x14, gc_env.r[27]); // stw r27, -0x14(r11)']
Processing opcode: stw, operands: ['r28', '-0x10(r11)']
Translated stw r28 -0x10(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x10, gc_env.r[28]); // stw r28, -0x10(r11)']
Processing opcode: stw, operands: ['r29', '-0xc(r11)']
Translated stw r29 -0xc(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0xC, gc_env.r[29]); // stw r29, -0xC(r11)']
Processing opcode: stw, operands: ['r30', '-0x8(r11)']
Translated stw r30 -0x8(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x8, gc_env.r[30]); // stw r30, -0x8(r11)']
Processing opcode: stw, operands: ['r31', '-0x4(r11)']
Translated stw r31 -0x4(r11) to: ['gc_mem_write32(gc_env.ram, gc_env.r[11] + -0x4, gc_env.r[31]); // stw r31, -0x4(r11)']
Translated blr  to: return;
Processing opcode: lwz, operands: ['r14', '-0x48(r11)']
Translated lwz r14 -0x48(r11) to: ['gc_env.r[14] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x48); // lwz r14, -0x48(r11)']
Processing opcode: lwz, operands: ['r15', '-0x44(r11)']
Translated lwz r15 -0x44(r11) to: ['gc_env.r[15] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x44); // lwz r15, -0x44(r11)']
Processing opcode: lwz, operands: ['r16', '-0x40(r11)']
Translated lwz r16 -0x40(r11) to: ['gc_env.r[16] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x40); // lwz r16, -0x40(r11)']
Processing opcode: lwz, operands: ['r17', '-0x3c(r11)']
Translated lwz r17 -0x3c(r11) to: ['gc_env.r[17] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x3C); // lwz r17, -0x3C(r11)']
Processing opcode: lwz, operands: ['r18', '-0x38(r11)']
Translated lwz r18 -0x38(r11) to: ['gc_env.r[18] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x38); // lwz r18, -0x38(r11)']
Processing opcode: lwz, operands: ['r19', '-0x34(r11)']
Translated lwz r19 -0x34(r11) to: ['gc_env.r[19] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x34); // lwz r19, -0x34(r11)']
Processing opcode: lwz, operands: ['r20', '-0x30(r11)']
Translated lwz r20 -0x30(r11) to: ['gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x30); // lwz r20, -0x30(r11)']
Processing opcode: lwz, operands: ['r21', '-0x2c(r11)']
Translated lwz r21 -0x2c(r11) to: ['gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x2C); // lwz r21, -0x2C(r11)']
Processing opcode: lwz, operands: ['r22', '-0x28(r11)']
Translated lwz r22 -0x28(r11) to: ['gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x28); // lwz r22, -0x28(r11)']
Processing opcode: lwz, operands: ['r23', '-0x24(r11)']
Translated lwz r23 -0x24(r11) to: ['gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x24); // lwz r23, -0x24(r11)']
Processing opcode: lwz, operands: ['r24', '-0x20(r11)']
Translated lwz r24 -0x20(r11) to: ['gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x20); // lwz r24, -0x20(r11)']
Processing opcode: lwz, operands: ['r25', '-0x1c(r11)']
Translated lwz r25 -0x1c(r11) to: ['gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x1C); // lwz r25, -0x1C(r11)']
Processing opcode: lwz, operands: ['r26', '-0x18(r11)']
Translated lwz r26 -0x18(r11) to: ['gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x18); // lwz r26, -0x18(r11)']
Processing opcode: lwz, operands: ['r27', '-0x14(r11)']
Translated lwz r27 -0x14(r11) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x14); // lwz r27, -0x14(r11)']
Processing opcode: lwz, operands: ['r28', '-0x10(r11)']
Translated lwz r28 -0x10(r11) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x10); // lwz r28, -0x10(r11)']
Processing opcode: lwz, operands: ['r29', '-0xc(r11)']
Translated lwz r29 -0xc(r11) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0xC); // lwz r29, -0xC(r11)']
Processing opcode: lwz, operands: ['r30', '-0x8(r11)']
Translated lwz r30 -0x8(r11) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x8); // lwz r30, -0x8(r11)']
Processing opcode: lwz, operands: ['r31', '-0x4(r11)']
Translated lwz r31 -0x4(r11) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x4); // lwz r31, -0x4(r11)']
Translated blr  to: return;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated cntlzw r9 r4 to: ['uint32_t val = gc_env.r[4]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[9] = count; // cntlzw r9, r4']
Translated bne .L_800115D4 to: if (gc_env.cr[0] != 0) goto L_800115D4;
Processing opcode: addi, operands: ['r0', 'r9', '0x20']
Translated addi r0 r9 0x20 to: ['gc_env.r[0] = gc_env.r[9] + 32; // addi r0, r9, 0x20']
Translated cmpwi r5 0x0 to: gc_env.cr[0] = (gc_env.r[5] == 0x0) ? 0 : (gc_env.r[5] < 0x0 ? -1 : 1); // Compare with immediate
Translated cntlzw r9 r5 to: ['uint32_t val = gc_env.r[5]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[9] = count; // cntlzw r9, r5']
Translated cntlzw r10 r6 to: ['uint32_t val = gc_env.r[6]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[10] = count; // cntlzw r10, r6']
Translated bne .L_800115E8 to: if (gc_env.cr[0] != 0) goto L_800115E8;
Processing opcode: addi, operands: ['r9', 'r10', '0x20']
Translated addi r9 r10 0x20 to: ['gc_env.r[9] = gc_env.r[10] + 32; // addi r9, r10, 0x20']
Translated cmpw r0 r9 to: ['gc_env.cr[0] = (int32_t)gc_env.r[0] < (int32_t)gc_env.r[9] ? 0x8 : ((int32_t)gc_env.r[0] > (int32_t)gc_env.r[9] ? 0x4 : 0x2); // cmpw r0, r9']
Translated subfic r10 r0 0x40 to: ['gc_env.r[10] = 64 - gc_env.r[0]; // subfic r10, r0, 64', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (64 >= gc_env.r[0] ? 0x20000000 : 0);']
Translated bgt .L_800116A0 to: ['if (gc_env.cr[0] & 0x4) goto L_800116A0; // bgt .L_800116A0']
Processing opcode: addi, operands: ['r9', 'r9', '0x1']
Translated addi r9 r9 0x1 to: ['gc_env.r[9] += 1; // addi r9, r9, 0x1']
Translated subfic r9 r9 0x40 to: ['gc_env.r[9] = 64 - gc_env.r[9]; // subfic r9, r9, 64', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (64 >= gc_env.r[9] ? 0x20000000 : 0);']
Processing opcode: add, operands: ['r0', 'r0', 'r9']
Translated add r0 r0 r9 to: ['gc_env.r[0] = gc_env.r[0] + gc_env.r[9]; // add r0, r0, r9']
Processing opcode: subf, operands: ['r9', 'r9', 'r10']
Translated subf r9 r9 r10 to: ['gc_env.r[9] = gc_env.r[10] - gc_env.r[9]; // subf r9, r9, r10']
Translated mtctr r9 to: gc_env.ctr = gc_env.r[9]; // Move to count register
Translated cmpwi r9 0x20 to: gc_env.cr[0] = (gc_env.r[9] == 0x20) ? 0 : (gc_env.r[9] < 0x20 ? -1 : 1); // Compare with immediate
Processing opcode: subi, operands: ['r7', 'r9', '0x20']
Translated subi r7 r9 0x20 to: ['gc_env.r[7] = gc_env.r[9] - 32; // subi r7, r9, 32']
Translated blt .L_80011620 to: ['if (gc_env.cr[0] & 0x8) goto L_80011620; // blt .L_80011620']
Translated srw r8 r3 r7 to: ['gc_env.r[8] = gc_env.r[3] >> (gc_env.r[7] & 31); // srw r8, r3, r7']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated b .L_80011634 to: goto L_80011634;
Translated srw r8 r4 r9 to: ['gc_env.r[8] = gc_env.r[4] >> (gc_env.r[9] & 31); // srw r8, r4, r9']
Translated subfic r7 r9 0x20 to: ['gc_env.r[7] = 32 - gc_env.r[9]; // subfic r7, r9, 32', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (32 >= gc_env.r[9] ? 0x20000000 : 0);']
Translated slw r7 r3 r7 to: ['gc_env.r[7] = gc_env.r[3] << (gc_env.r[7] & 31); // slw r7, r3, r7']
Translated or r8 r8 r7 to: ['gc_env.r[8] = gc_env.r[8] | gc_env.r[7]; // or r8, r8, r7']
Translated srw r7 r3 r9 to: ['gc_env.r[7] = gc_env.r[3] >> (gc_env.r[9] & 31); // srw r7, r3, r9']
Translated cmpwi r0 0x20 to: gc_env.cr[0] = (gc_env.r[0] == 0x20) ? 0 : (gc_env.r[0] < 0x20 ? -1 : 1); // Compare with immediate
Processing opcode: subic, operands: ['r9', 'r0', '0x20']
Translated subic r9 r0 0x20 to: ['gc_env.r[9] = gc_env.r[0] - 32; // subic r9, r0, 32', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[0] >= 32 ? 0x20000000 : 0);']
Translated blt .L_8001164C to: ['if (gc_env.cr[0] & 0x8) goto L_8001164C; // blt .L_8001164C']
Translated slw r3 r4 r9 to: ['gc_env.r[3] = gc_env.r[4] << (gc_env.r[9] & 31); // slw r3, r4, r9']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated b .L_80011660 to: goto L_80011660;
Translated slw r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] << (gc_env.r[0] & 31); // slw r3, r3, r0']
Translated subfic r9 r0 0x20 to: ['gc_env.r[9] = 32 - gc_env.r[0]; // subfic r9, r0, 32', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (32 >= gc_env.r[0] ? 0x20000000 : 0);']
Translated srw r9 r4 r9 to: ['gc_env.r[9] = gc_env.r[4] >> (gc_env.r[9] & 31); // srw r9, r4, r9']
Translated or r3 r3 r9 to: ['gc_env.r[3] = gc_env.r[3] | gc_env.r[9]; // or r3, r3, r9']
Translated slw r4 r4 r0 to: ['gc_env.r[4] = gc_env.r[4] << (gc_env.r[0] & 31); // slw r4, r4, r0']
Processing opcode: li, operands: ['r10', '-0x1']
Translated li r10 -0x1 to: ['gc_env.r[10] = -0x1; // li r10, -0x1']
Processing opcode: addic, operands: ['r7', 'r7', '0x0']
Translated addic r7 r7 0x0 to: ['gc_env.r[7] = gc_env.r[7] + 0; // addic r7, r7, 0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (((uint64_t)gc_env.r[7] + 0) > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r4 r4 r4 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[4] + gc_env.r[4] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[4] = (uint32_t)adde_temp; // adde r4, r4, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r3 r3 r3 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[3] + gc_env.r[3] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[3] = (uint32_t)adde_temp; // adde r3, r3, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r8 r8 r8 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[8] + gc_env.r[8] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[8] = (uint32_t)adde_temp; // adde r8, r8, r8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r7 r7 r7 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[7] + gc_env.r[7] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[7] = (uint32_t)adde_temp; // adde r7, r7, r7', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated subfc r0 r6 r8 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[8] - gc_env.r[6];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r6, r8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[8] >= gc_env.r[6] ? 0x20000000 : 0);']
Translated subfe. r9 r5 r7 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[7] - gc_env.r[5] - subfe_borrow;', 'gc_env.r[9] = (uint32_t)subfe_temp; // subfe r9, r5, r7', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[7] >= (gc_env.r[5] + subfe_borrow) ? 0x20000000 : 0);']
Translated blt .L_80011690 to: ['if (gc_env.cr[0] & 0x8) goto L_80011690; // blt .L_80011690']
Translated mr r8 r0 to: gc_env.r[8] = gc_env.r[0]; // Move register
Translated mr r7 r9 to: gc_env.r[7] = gc_env.r[9]; // Move register
Processing opcode: addic, operands: ['r0', 'r10', '0x1']
Translated addic r0 r10 0x1 to: ['gc_env.r[0] = gc_env.r[10] + 1; // addic r0, r10, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (((uint64_t)gc_env.r[10] + 1) > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated bdnz .L_80011668 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80011668;']
Translated adde r4 r4 r4 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[4] + gc_env.r[4] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[4] = (uint32_t)adde_temp; // adde r4, r4, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r3 r3 r3 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[3] + gc_env.r[3] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[3] = (uint32_t)adde_temp; // adde r3, r3, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated blr  to: return;
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Translated clrrwi. r9 r3 31 to: gc_env.r[9] = gc_env.r[3] & ~((1ULL << 31) - 1); // Clear rightmost 31 bits
Translated beq .L_800116C0 to: if (gc_env.cr[0] == 0) goto L_800116C0;
Translated subfic r4 r4 0x0 to: ['gc_env.r[4] = 0 - gc_env.r[4]; // subfic r4, r4, 0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (0 >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfze r3 r3 to: ['uint32_t subfze_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfze_temp = (uint64_t)0 - gc_env.r[3] - subfze_borrow;', 'gc_env.r[3] = (uint32_t)subfze_temp; // subfze r3, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (0 >= (gc_env.r[3] + subfze_borrow) ? 0x20000000 : 0);']
Processing opcode: stw, operands: ['r9', '0x8(r1)']
Translated stw r9 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[9]); // stw r9, 0x8(r1)']
Translated clrrwi. r9 r5 31 to: gc_env.r[9] = gc_env.r[5] & ~((1ULL << 31) - 1); // Clear rightmost 31 bits
Translated beq .L_800116D4 to: if (gc_env.cr[0] == 0) goto L_800116D4;
Translated subfic r6 r6 0x0 to: ['gc_env.r[6] = 0 - gc_env.r[6]; // subfic r6, r6, 0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (0 >= gc_env.r[6] ? 0x20000000 : 0);']
Translated subfze r5 r5 to: ['uint32_t subfze_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfze_temp = (uint64_t)0 - gc_env.r[5] - subfze_borrow;', 'gc_env.r[5] = (uint32_t)subfze_temp; // subfze r5, r5', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (0 >= (gc_env.r[5] + subfze_borrow) ? 0x20000000 : 0);']
Processing opcode: stw, operands: ['r9', '0xc(r1)']
Translated stw r9 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[9]); // stw r9, 0xC(r1)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated cntlzw r9 r4 to: ['uint32_t val = gc_env.r[4]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[9] = count; // cntlzw r9, r4']
Translated bne .L_800116EC to: if (gc_env.cr[0] != 0) goto L_800116EC;
Processing opcode: addi, operands: ['r0', 'r9', '0x20']
Translated addi r0 r9 0x20 to: ['gc_env.r[0] = gc_env.r[9] + 32; // addi r0, r9, 0x20']
Translated cmpwi r5 0x0 to: gc_env.cr[0] = (gc_env.r[5] == 0x0) ? 0 : (gc_env.r[5] < 0x0 ? -1 : 1); // Compare with immediate
Translated cntlzw r9 r5 to: ['uint32_t val = gc_env.r[5]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[9] = count; // cntlzw r9, r5']
Translated cntlzw r10 r6 to: ['uint32_t val = gc_env.r[6]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[10] = count; // cntlzw r10, r6']
Translated bne .L_80011700 to: if (gc_env.cr[0] != 0) goto L_80011700;
Processing opcode: addi, operands: ['r9', 'r10', '0x20']
Translated addi r9 r10 0x20 to: ['gc_env.r[9] = gc_env.r[10] + 32; // addi r9, r10, 0x20']
Translated cmpw r0 r9 to: ['gc_env.cr[0] = (int32_t)gc_env.r[0] < (int32_t)gc_env.r[9] ? 0x8 : ((int32_t)gc_env.r[0] > (int32_t)gc_env.r[9] ? 0x4 : 0x2); // cmpw r0, r9']
Translated subfic r10 r0 0x40 to: ['gc_env.r[10] = 64 - gc_env.r[0]; // subfic r10, r0, 64', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (64 >= gc_env.r[0] ? 0x20000000 : 0);']
Translated bgt .L_800117D4 to: ['if (gc_env.cr[0] & 0x4) goto L_800117D4; // bgt .L_800117D4']
Processing opcode: addi, operands: ['r9', 'r9', '0x1']
Translated addi r9 r9 0x1 to: ['gc_env.r[9] += 1; // addi r9, r9, 0x1']
Translated subfic r9 r9 0x40 to: ['gc_env.r[9] = 64 - gc_env.r[9]; // subfic r9, r9, 64', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (64 >= gc_env.r[9] ? 0x20000000 : 0);']
Processing opcode: add, operands: ['r0', 'r0', 'r9']
Translated add r0 r0 r9 to: ['gc_env.r[0] = gc_env.r[0] + gc_env.r[9]; // add r0, r0, r9']
Processing opcode: subf, operands: ['r9', 'r9', 'r10']
Translated subf r9 r9 r10 to: ['gc_env.r[9] = gc_env.r[10] - gc_env.r[9]; // subf r9, r9, r10']
Translated mtctr r9 to: gc_env.ctr = gc_env.r[9]; // Move to count register
Translated cmpwi r9 0x20 to: gc_env.cr[0] = (gc_env.r[9] == 0x20) ? 0 : (gc_env.r[9] < 0x20 ? -1 : 1); // Compare with immediate
Processing opcode: subi, operands: ['r7', 'r9', '0x20']
Translated subi r7 r9 0x20 to: ['gc_env.r[7] = gc_env.r[9] - 32; // subi r7, r9, 32']
Translated blt .L_80011738 to: ['if (gc_env.cr[0] & 0x8) goto L_80011738; // blt .L_80011738']
Translated srw r8 r3 r7 to: ['gc_env.r[8] = gc_env.r[3] >> (gc_env.r[7] & 31); // srw r8, r3, r7']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated b .L_8001174C to: goto L_8001174C;
Translated srw r8 r4 r9 to: ['gc_env.r[8] = gc_env.r[4] >> (gc_env.r[9] & 31); // srw r8, r4, r9']
Translated subfic r7 r9 0x20 to: ['gc_env.r[7] = 32 - gc_env.r[9]; // subfic r7, r9, 32', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (32 >= gc_env.r[9] ? 0x20000000 : 0);']
Translated slw r7 r3 r7 to: ['gc_env.r[7] = gc_env.r[3] << (gc_env.r[7] & 31); // slw r7, r3, r7']
Translated or r8 r8 r7 to: ['gc_env.r[8] = gc_env.r[8] | gc_env.r[7]; // or r8, r8, r7']
Translated srw r7 r3 r9 to: ['gc_env.r[7] = gc_env.r[3] >> (gc_env.r[9] & 31); // srw r7, r3, r9']
Translated cmpwi r0 0x20 to: gc_env.cr[0] = (gc_env.r[0] == 0x20) ? 0 : (gc_env.r[0] < 0x20 ? -1 : 1); // Compare with immediate
Processing opcode: subic, operands: ['r9', 'r0', '0x20']
Translated subic r9 r0 0x20 to: ['gc_env.r[9] = gc_env.r[0] - 32; // subic r9, r0, 32', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[0] >= 32 ? 0x20000000 : 0);']
Translated blt .L_80011764 to: ['if (gc_env.cr[0] & 0x8) goto L_80011764; // blt .L_80011764']
Translated slw r3 r4 r9 to: ['gc_env.r[3] = gc_env.r[4] << (gc_env.r[9] & 31); // slw r3, r4, r9']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated b .L_80011778 to: goto L_80011778;
Translated slw r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] << (gc_env.r[0] & 31); // slw r3, r3, r0']
Translated subfic r9 r0 0x20 to: ['gc_env.r[9] = 32 - gc_env.r[0]; // subfic r9, r0, 32', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (32 >= gc_env.r[0] ? 0x20000000 : 0);']
Translated srw r9 r4 r9 to: ['gc_env.r[9] = gc_env.r[4] >> (gc_env.r[9] & 31); // srw r9, r4, r9']
Translated or r3 r3 r9 to: ['gc_env.r[3] = gc_env.r[3] | gc_env.r[9]; // or r3, r3, r9']
Translated slw r4 r4 r0 to: ['gc_env.r[4] = gc_env.r[4] << (gc_env.r[0] & 31); // slw r4, r4, r0']
Processing opcode: li, operands: ['r10', '-0x1']
Translated li r10 -0x1 to: ['gc_env.r[10] = -0x1; // li r10, -0x1']
Processing opcode: addic, operands: ['r7', 'r7', '0x0']
Translated addic r7 r7 0x0 to: ['gc_env.r[7] = gc_env.r[7] + 0; // addic r7, r7, 0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (((uint64_t)gc_env.r[7] + 0) > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r4 r4 r4 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[4] + gc_env.r[4] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[4] = (uint32_t)adde_temp; // adde r4, r4, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r3 r3 r3 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[3] + gc_env.r[3] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[3] = (uint32_t)adde_temp; // adde r3, r3, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r8 r8 r8 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[8] + gc_env.r[8] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[8] = (uint32_t)adde_temp; // adde r8, r8, r8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r7 r7 r7 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[7] + gc_env.r[7] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[7] = (uint32_t)adde_temp; // adde r7, r7, r7', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated subfc r0 r6 r8 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[8] - gc_env.r[6];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r6, r8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[8] >= gc_env.r[6] ? 0x20000000 : 0);']
Translated subfe. r9 r5 r7 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[7] - gc_env.r[5] - subfe_borrow;', 'gc_env.r[9] = (uint32_t)subfe_temp; // subfe r9, r5, r7', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[7] >= (gc_env.r[5] + subfe_borrow) ? 0x20000000 : 0);']
Translated blt .L_800117A8 to: ['if (gc_env.cr[0] & 0x8) goto L_800117A8; // blt .L_800117A8']
Translated mr r8 r0 to: gc_env.r[8] = gc_env.r[0]; // Move register
Translated mr r7 r9 to: gc_env.r[7] = gc_env.r[9]; // Move register
Processing opcode: addic, operands: ['r0', 'r10', '0x1']
Translated addic r0 r10 0x1 to: ['gc_env.r[0] = gc_env.r[10] + 1; // addic r0, r10, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (((uint64_t)gc_env.r[10] + 1) > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated bdnz .L_80011780 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80011780;']
Translated adde r4 r4 r4 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[4] + gc_env.r[4] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[4] = (uint32_t)adde_temp; // adde r4, r4, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r3 r3 r3 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[3] + gc_env.r[3] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[3] = (uint32_t)adde_temp; // adde r3, r3, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Processing opcode: lwz, operands: ['r9', '0x8(r1)']
Translated lwz r9 0x8(r1) to: ['gc_env.r[9] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r9, 0x8(r1)']
Processing opcode: lwz, operands: ['r10', '0xc(r1)']
Translated lwz r10 0xc(r1) to: ['gc_env.r[10] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r10, 0xC(r1)']
Translated xor. r7 r9 r10 to: ['gc_env.r[7] = gc_env.r[9] ^ gc_env.r[10]; // xor. r7, r9, r10', 'gc_env.cr[0] = (gc_env.r[7] == 0) ? 0x2 : ((int32_t)gc_env.r[7] < 0 ? 0x8 : 0x4);']
Translated beq .L_800117D0 to: if (gc_env.cr[0] == 0) goto L_800117D0;
Translated cmpwi r9 0x0 to: gc_env.cr[0] = (gc_env.r[9] == 0x0) ? 0 : (gc_env.r[9] < 0x0 ? -1 : 1); // Compare with immediate
Translated subfic r4 r4 0x0 to: ['gc_env.r[4] = 0 - gc_env.r[4]; // subfic r4, r4, 0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (0 >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfze r3 r3 to: ['uint32_t subfze_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfze_temp = (uint64_t)0 - gc_env.r[3] - subfze_borrow;', 'gc_env.r[3] = (uint32_t)subfze_temp; // subfze r3, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (0 >= (gc_env.r[3] + subfze_borrow) ? 0x20000000 : 0);']
Translated b .L_800117DC to: goto L_800117DC;
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated blr  to: return;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated cntlzw r9 r4 to: ['uint32_t val = gc_env.r[4]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[9] = count; // cntlzw r9, r4']
Translated bne .L_800117F8 to: if (gc_env.cr[0] != 0) goto L_800117F8;
Processing opcode: addi, operands: ['r0', 'r9', '0x20']
Translated addi r0 r9 0x20 to: ['gc_env.r[0] = gc_env.r[9] + 32; // addi r0, r9, 0x20']
Translated cmpwi r5 0x0 to: gc_env.cr[0] = (gc_env.r[5] == 0x0) ? 0 : (gc_env.r[5] < 0x0 ? -1 : 1); // Compare with immediate
Translated cntlzw r9 r5 to: ['uint32_t val = gc_env.r[5]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[9] = count; // cntlzw r9, r5']
Translated cntlzw r10 r6 to: ['uint32_t val = gc_env.r[6]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[10] = count; // cntlzw r10, r6']
Translated bne .L_8001180C to: if (gc_env.cr[0] != 0) goto L_8001180C;
Processing opcode: addi, operands: ['r9', 'r10', '0x20']
Translated addi r9 r10 0x20 to: ['gc_env.r[9] = gc_env.r[10] + 32; // addi r9, r10, 0x20']
Translated cmpw r0 r9 to: ['gc_env.cr[0] = (int32_t)gc_env.r[0] < (int32_t)gc_env.r[9] ? 0x8 : ((int32_t)gc_env.r[0] > (int32_t)gc_env.r[9] ? 0x4 : 0x2); // cmpw r0, r9']
Translated subfic r10 r0 0x40 to: ['gc_env.r[10] = 64 - gc_env.r[0]; // subfic r10, r0, 64', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (64 >= gc_env.r[0] ? 0x20000000 : 0);']
Translated bgt .L_800118C4 to: ['if (gc_env.cr[0] & 0x4) goto L_800118C4; // bgt .L_800118C4']
Processing opcode: addi, operands: ['r9', 'r9', '0x1']
Translated addi r9 r9 0x1 to: ['gc_env.r[9] += 1; // addi r9, r9, 0x1']
Translated subfic r9 r9 0x40 to: ['gc_env.r[9] = 64 - gc_env.r[9]; // subfic r9, r9, 64', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (64 >= gc_env.r[9] ? 0x20000000 : 0);']
Processing opcode: add, operands: ['r0', 'r0', 'r9']
Translated add r0 r0 r9 to: ['gc_env.r[0] = gc_env.r[0] + gc_env.r[9]; // add r0, r0, r9']
Processing opcode: subf, operands: ['r9', 'r9', 'r10']
Translated subf r9 r9 r10 to: ['gc_env.r[9] = gc_env.r[10] - gc_env.r[9]; // subf r9, r9, r10']
Translated mtctr r9 to: gc_env.ctr = gc_env.r[9]; // Move to count register
Translated cmpwi r9 0x20 to: gc_env.cr[0] = (gc_env.r[9] == 0x20) ? 0 : (gc_env.r[9] < 0x20 ? -1 : 1); // Compare with immediate
Processing opcode: subi, operands: ['r7', 'r9', '0x20']
Translated subi r7 r9 0x20 to: ['gc_env.r[7] = gc_env.r[9] - 32; // subi r7, r9, 32']
Translated blt .L_80011844 to: ['if (gc_env.cr[0] & 0x8) goto L_80011844; // blt .L_80011844']
Translated srw r8 r3 r7 to: ['gc_env.r[8] = gc_env.r[3] >> (gc_env.r[7] & 31); // srw r8, r3, r7']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated b .L_80011858 to: goto L_80011858;
Translated srw r8 r4 r9 to: ['gc_env.r[8] = gc_env.r[4] >> (gc_env.r[9] & 31); // srw r8, r4, r9']
Translated subfic r7 r9 0x20 to: ['gc_env.r[7] = 32 - gc_env.r[9]; // subfic r7, r9, 32', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (32 >= gc_env.r[9] ? 0x20000000 : 0);']
Translated slw r7 r3 r7 to: ['gc_env.r[7] = gc_env.r[3] << (gc_env.r[7] & 31); // slw r7, r3, r7']
Translated or r8 r8 r7 to: ['gc_env.r[8] = gc_env.r[8] | gc_env.r[7]; // or r8, r8, r7']
Translated srw r7 r3 r9 to: ['gc_env.r[7] = gc_env.r[3] >> (gc_env.r[9] & 31); // srw r7, r3, r9']
Translated cmpwi r0 0x20 to: gc_env.cr[0] = (gc_env.r[0] == 0x20) ? 0 : (gc_env.r[0] < 0x20 ? -1 : 1); // Compare with immediate
Processing opcode: subic, operands: ['r9', 'r0', '0x20']
Translated subic r9 r0 0x20 to: ['gc_env.r[9] = gc_env.r[0] - 32; // subic r9, r0, 32', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[0] >= 32 ? 0x20000000 : 0);']
Translated blt .L_80011870 to: ['if (gc_env.cr[0] & 0x8) goto L_80011870; // blt .L_80011870']
Translated slw r3 r4 r9 to: ['gc_env.r[3] = gc_env.r[4] << (gc_env.r[9] & 31); // slw r3, r4, r9']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated b .L_80011884 to: goto L_80011884;
Translated slw r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] << (gc_env.r[0] & 31); // slw r3, r3, r0']
Translated subfic r9 r0 0x20 to: ['gc_env.r[9] = 32 - gc_env.r[0]; // subfic r9, r0, 32', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (32 >= gc_env.r[0] ? 0x20000000 : 0);']
Translated srw r9 r4 r9 to: ['gc_env.r[9] = gc_env.r[4] >> (gc_env.r[9] & 31); // srw r9, r4, r9']
Translated or r3 r3 r9 to: ['gc_env.r[3] = gc_env.r[3] | gc_env.r[9]; // or r3, r3, r9']
Translated slw r4 r4 r0 to: ['gc_env.r[4] = gc_env.r[4] << (gc_env.r[0] & 31); // slw r4, r4, r0']
Processing opcode: li, operands: ['r10', '-0x1']
Translated li r10 -0x1 to: ['gc_env.r[10] = -0x1; // li r10, -0x1']
Processing opcode: addic, operands: ['r7', 'r7', '0x0']
Translated addic r7 r7 0x0 to: ['gc_env.r[7] = gc_env.r[7] + 0; // addic r7, r7, 0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (((uint64_t)gc_env.r[7] + 0) > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r4 r4 r4 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[4] + gc_env.r[4] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[4] = (uint32_t)adde_temp; // adde r4, r4, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r3 r3 r3 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[3] + gc_env.r[3] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[3] = (uint32_t)adde_temp; // adde r3, r3, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r8 r8 r8 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[8] + gc_env.r[8] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[8] = (uint32_t)adde_temp; // adde r8, r8, r8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated adde r7 r7 r7 to: ['uint64_t adde_temp = (uint64_t)gc_env.r[7] + gc_env.r[7] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[7] = (uint32_t)adde_temp; // adde r7, r7, r7', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (adde_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated subfc r0 r6 r8 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[8] - gc_env.r[6];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r6, r8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[8] >= gc_env.r[6] ? 0x20000000 : 0);']
Translated subfe. r9 r5 r7 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[7] - gc_env.r[5] - subfe_borrow;', 'gc_env.r[9] = (uint32_t)subfe_temp; // subfe r9, r5, r7', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[7] >= (gc_env.r[5] + subfe_borrow) ? 0x20000000 : 0);']
Translated blt .L_800118B4 to: ['if (gc_env.cr[0] & 0x8) goto L_800118B4; // blt .L_800118B4']
Translated mr r8 r0 to: gc_env.r[8] = gc_env.r[0]; // Move register
Translated mr r7 r9 to: gc_env.r[7] = gc_env.r[9]; // Move register
Processing opcode: addic, operands: ['r0', 'r10', '0x1']
Translated addic r0 r10 0x1 to: ['gc_env.r[0] = gc_env.r[10] + 1; // addic r0, r10, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (((uint64_t)gc_env.r[10] + 1) > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated bdnz .L_8001188C to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8001188C;']
Translated mr r4 r8 to: gc_env.r[4] = gc_env.r[8]; // Move register
Translated mr r3 r7 to: gc_env.r[3] = gc_env.r[7]; // Move register
Translated blr  to: return;
Translated blr  to: return;
Translated subfic r8 r5 0x20 to: ['gc_env.r[8] = 32 - gc_env.r[5]; // subfic r8, r5, 32', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (32 >= gc_env.r[5] ? 0x20000000 : 0);']
Processing opcode: subic, operands: ['r9', 'r5', '0x20']
Translated subic r9 r5 0x20 to: ['gc_env.r[9] = gc_env.r[5] - 32; // subic r9, r5, 32', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= 32 ? 0x20000000 : 0);']
Translated slw r3 r3 r5 to: ['gc_env.r[3] = gc_env.r[3] << (gc_env.r[5] & 31); // slw r3, r3, r5']
Translated srw r10 r4 r8 to: ['gc_env.r[10] = gc_env.r[4] >> (gc_env.r[8] & 31); // srw r10, r4, r8']
Translated or r3 r3 r10 to: ['gc_env.r[3] = gc_env.r[3] | gc_env.r[10]; // or r3, r3, r10']
Translated slw r10 r4 r9 to: ['gc_env.r[10] = gc_env.r[4] << (gc_env.r[9] & 31); // slw r10, r4, r9']
Translated or r3 r3 r10 to: ['gc_env.r[3] = gc_env.r[3] | gc_env.r[10]; // or r3, r3, r10']
Translated slw r4 r4 r5 to: ['gc_env.r[4] = gc_env.r[4] << (gc_env.r[5] & 31); // slw r4, r4, r5']
Translated blr  to: return;
Translated subfic r8 r5 0x20 to: ['gc_env.r[8] = 32 - gc_env.r[5]; // subfic r8, r5, 32', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (32 >= gc_env.r[5] ? 0x20000000 : 0);']
Processing opcode: subic, operands: ['r9', 'r5', '0x20']
Translated subic r9 r5 0x20 to: ['gc_env.r[9] = gc_env.r[5] - 32; // subic r9, r5, 32', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= 32 ? 0x20000000 : 0);']
Translated srw r4 r4 r5 to: ['gc_env.r[4] = gc_env.r[4] >> (gc_env.r[5] & 31); // srw r4, r4, r5']
Translated slw r10 r3 r8 to: ['gc_env.r[10] = gc_env.r[3] << (gc_env.r[8] & 31); // slw r10, r3, r8']
Translated or r4 r4 r10 to: ['gc_env.r[4] = gc_env.r[4] | gc_env.r[10]; // or r4, r4, r10']
Translated srw r10 r3 r9 to: ['gc_env.r[10] = gc_env.r[3] >> (gc_env.r[9] & 31); // srw r10, r3, r9']
Translated or r4 r4 r10 to: ['gc_env.r[4] = gc_env.r[4] | gc_env.r[10]; // or r4, r4, r10']
Translated srw r3 r3 r5 to: ['gc_env.r[3] = gc_env.r[3] >> (gc_env.r[5] & 31); // srw r3, r3, r5']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x68(r1)']
Translated stwu r1 -0x68(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x68, gc_env.r[1]); // stwu r1, -0x68(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x68;']
Translated stfd f31 0x60(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[31], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x60, temp); // stfd f31, 0x60(r1)']
Translated fmr f31 f1 to: ['gc_env.f[31] = gc_env.f[1]; // fmr f31, f1']
Processing opcode: stw, operands: ['r31', '0x5c(r1)']
Translated stw r31 0x5c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x5C, gc_env.r[31]); // stw r31, 0x5C(r1)']
Processing opcode: stw, operands: ['r30', '0x58(r1)']
Translated stw r30 0x58(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x58, gc_env.r[30]); // stw r30, 0x58(r1)']
Processing opcode: addi, operands: ['r30', 'r4', '0x0']
Translated addi r30 r4 0x0 to: ['gc_env.r[30] = gc_env.r[4] + 0; // addi r30, r4, 0x0']
Processing opcode: stw, operands: ['r29', '0x54(r1)']
Translated stw r29 0x54(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x54, gc_env.r[29]); // stw r29, 0x54(r1)']
Translated mr r29 r3 to: gc_env.r[29] = gc_env.r[3]; // Move register
Translated lha r0 0x2(r3) to: ['gc_env.r[0] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x2); // lha r0, 0x2(r3)']
Translated cmpwi r0 0x10 to: gc_env.cr[0] = (gc_env.r[0] == 0x10) ? 0 : (gc_env.r[0] < 0x10 ? -1 : 1); // Compare with immediate
Translated mr r31 r0 to: gc_env.r[31] = gc_env.r[0]; // Move register
Translated ble .L_80011A58 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80011A58; // ble .L_80011A58']
Processing opcode: li, operands: ['r31', '0x10']
Translated li r31 0x10 to: ['gc_env.r[31] = 0x10; // li r31, 0x10']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r3', '0x0(r30)']
Translated stb r3 0x0(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30], gc_env.r[3]); // stb r3, (r30)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: sth, operands: ['r3', '0x2(r30)']
Translated sth r3 0x2(r30) to: ['gc_mem_write16(gc_env.ram, gc_env.r[30] + 0x2, gc_env.r[3]); // sth r3, 0x2(r30)']
Processing opcode: stb, operands: ['r0', '0x4(r30)']
Translated stb r0 0x4(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x4, gc_env.r[0]); // stb r0, 0x4(r30)']
Translated lfd f0 lbl_8001F0A0@sda21(r0) to: ['gc_env.f[0] = *(double*)&lbl_8001F0A0; // lfd f0, lbl_8001F0A0@sda21(r0)']
Translated fcmpu cr0 f0 f31 to: ['gc_env.cr[0] = isnan(gc_env.f[0]) || isnan(gc_env.f[31]) ? 0x1 : (gc_env.f[0] < gc_env.f[31] ? 0x8 : (gc_env.f[0] > gc_env.f[31] ? 0x4 : 0x2)); // fcmpu cr0, f0, f31']
Translated bne .L_80011A84 to: if (gc_env.cr[0] != 0) goto L_80011A84;
Processing opcode: li, operands: ['r0', '0x30']
Translated li r0 0x30 to: ['gc_env.r[0] = 0x30; // li r0, 0x30']
Processing opcode: stb, operands: ['r0', '0x5(r30)']
Translated stb r0 0x5(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x5, gc_env.r[0]); // stb r0, 0x5(r30)']
Translated b .L_80011DB0 to: goto L_80011DB0;
Translated stfd f31 0x28(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[31], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x28, temp); // stfd f31, 0x28(r1)']
Translated lis r0 0x7ff0 to: ['gc_env.r[0] = 32752 << 16; // lis r0, 0x7ff0']
Processing opcode: lwz, operands: ['r4', '0x28(r1)']
Translated lwz r4 0x28(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lwz r4, 0x28(r1)']
Translated rlwinm r3 r4 0 1 11 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x7FF00000; // rlwinm r3, r4, 0, 1, 11']
Translated cmpw r3 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[3] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[3] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r3, r0']
Translated beq .L_80011AAC to: if (gc_env.cr[0] == 0) goto L_80011AAC;
Translated bge .L_80011AF4 to: if (gc_env.cr[0] >= 0) goto L_80011AF4;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80011AD0 to: if (gc_env.cr[0] == 0) goto L_80011AD0;
Translated b .L_80011AF4 to: goto L_80011AF4;
Translated clrlwi. r0 r4 12 to: ['gc_env.r[0] = gc_env.r[4] & 0xFFFFF; // clrlwi r0, r4, 12']
Translated bne .L_80011AC0 to: if (gc_env.cr[0] != 0) goto L_80011AC0;
Processing opcode: lwz, operands: ['r0', '0x2c(r1)']
Translated lwz r0 0x2c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r0, 0x2C(r1)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80011AC8 to: if (gc_env.cr[0] == 0) goto L_80011AC8;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated b .L_80011AF8 to: goto L_80011AF8;
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Translated b .L_80011AF8 to: goto L_80011AF8;
Translated clrlwi. r0 r4 12 to: ['gc_env.r[0] = gc_env.r[4] & 0xFFFFF; // clrlwi r0, r4, 12']
Translated bne .L_80011AE4 to: if (gc_env.cr[0] != 0) goto L_80011AE4;
Processing opcode: lwz, operands: ['r0', '0x2c(r1)']
Translated lwz r0 0x2c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r0, 0x2C(r1)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80011AEC to: if (gc_env.cr[0] == 0) goto L_80011AEC;
Processing opcode: li, operands: ['r0', '0x5']
Translated li r0 0x5 to: ['gc_env.r[0] = 0x5; // li r0, 0x5']
Translated b .L_80011AF8 to: goto L_80011AF8;
Processing opcode: li, operands: ['r0', '0x3']
Translated li r0 0x3 to: ['gc_env.r[0] = 0x3; // li r0, 0x3']
Translated b .L_80011AF8 to: goto L_80011AF8;
Processing opcode: li, operands: ['r0', '0x4']
Translated li r0 0x4 to: ['gc_env.r[0] = 0x4; // li r0, 0x4']
Translated cmpwi r0 0x2 to: gc_env.cr[0] = (gc_env.r[0] == 0x2) ? 0 : (gc_env.r[0] < 0x2 ? -1 : 1); // Compare with immediate
Translated bgt .L_80011B90 to: ['if (gc_env.cr[0] & 0x4) goto L_80011B90; // bgt .L_80011B90']
Translated stfd f31 0x20(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[31], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x20, temp); // stfd f31, 0x20(r1)']
Translated lis r0 0x7ff0 to: ['gc_env.r[0] = 32752 << 16; // lis r0, 0x7ff0']
Processing opcode: lwz, operands: ['r4', '0x20(r1)']
Translated lwz r4 0x20(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r4, 0x20(r1)']
Translated rlwinm r3 r4 0 1 11 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x7FF00000; // rlwinm r3, r4, 0, 1, 11']
Translated cmpw r3 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[3] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[3] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r3, r0']
Translated beq .L_80011B28 to: if (gc_env.cr[0] == 0) goto L_80011B28;
Translated bge .L_80011B70 to: if (gc_env.cr[0] >= 0) goto L_80011B70;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80011B4C to: if (gc_env.cr[0] == 0) goto L_80011B4C;
Translated b .L_80011B70 to: goto L_80011B70;
Translated clrlwi. r0 r4 12 to: ['gc_env.r[0] = gc_env.r[4] & 0xFFFFF; // clrlwi r0, r4, 12']
Translated bne .L_80011B3C to: if (gc_env.cr[0] != 0) goto L_80011B3C;
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80011B44 to: if (gc_env.cr[0] == 0) goto L_80011B44;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated b .L_80011B74 to: goto L_80011B74;
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Translated b .L_80011B74 to: goto L_80011B74;
Translated clrlwi. r0 r4 12 to: ['gc_env.r[0] = gc_env.r[4] & 0xFFFFF; // clrlwi r0, r4, 12']
Translated bne .L_80011B60 to: if (gc_env.cr[0] != 0) goto L_80011B60;
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80011B68 to: if (gc_env.cr[0] == 0) goto L_80011B68;
Processing opcode: li, operands: ['r0', '0x5']
Translated li r0 0x5 to: ['gc_env.r[0] = 0x5; // li r0, 0x5']
Translated b .L_80011B74 to: goto L_80011B74;
Processing opcode: li, operands: ['r0', '0x3']
Translated li r0 0x3 to: ['gc_env.r[0] = 0x3; // li r0, 0x3']
Translated b .L_80011B74 to: goto L_80011B74;
Processing opcode: li, operands: ['r0', '0x4']
Translated li r0 0x4 to: ['gc_env.r[0] = 0x4; // li r0, 0x4']
Translated cmpwi r0 0x1 to: gc_env.cr[0] = (gc_env.r[0] == 0x1) ? 0 : (gc_env.r[0] < 0x1 ? -1 : 1); // Compare with immediate
Translated bne .L_80011B84 to: if (gc_env.cr[0] != 0) goto L_80011B84;
Processing opcode: li, operands: ['r0', '0x4e']
Translated li r0 0x4e to: ['gc_env.r[0] = 0x4e; // li r0, 0x4e']
Translated b .L_80011B88 to: goto L_80011B88;
Processing opcode: li, operands: ['r0', '0x49']
Translated li r0 0x49 to: ['gc_env.r[0] = 0x49; // li r0, 0x49']
Processing opcode: stb, operands: ['r0', '0x5(r30)']
Translated stb r0 0x5(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x5, gc_env.r[0]); // stb r0, 0x5(r30)']
Translated b .L_80011DB0 to: goto L_80011DB0;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', '0x4(r30)']
Translated stb r0 0x4(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x4, gc_env.r[0]); // stb r0, 0x4(r30)']
Translated lfd f0 lbl_8001F0A0@sda21(r0) to: ['gc_env.f[0] = *(double*)&lbl_8001F0A0; // lfd f0, lbl_8001F0A0@sda21(r0)']
Translated fcmpo cr0 f31 f0 to: ['gc_env.cr[0] = isnan(gc_env.f[31]) || isnan(gc_env.f[0]) ? 0x1 : (gc_env.f[31] < gc_env.f[0] ? 0x8 : (gc_env.f[31] > gc_env.f[0] ? 0x4 : 0x2)); // fcmpo cr0, f31, f0']
Translated bge .L_80011BB0 to: if (gc_env.cr[0] >= 0) goto L_80011BB0;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated fneg f31 f31 to: ['gc_env.f[31] = -gc_env.f[31]; // fneg f31, f31']
Processing opcode: stb, operands: ['r0', '0x0(r30)']
Translated stb r0 0x0(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stb r0, (r30)']
Translated fmr f1 f31 to: ['gc_env.f[1] = gc_env.f[31]; // fmr f1, f31']
Processing opcode: addi, operands: ['r3', 'r1', '0x30']
Translated addi r3 r1 0x30 to: ['gc_env.r[3] = gc_env.r[1] + 48; // addi r3, r1, 0x30']
Translated bl fn_80014234 to: fn_80014234();
Translated lis r3 0x5 to: ['gc_env.r[3] = 5 << 16; // lis r3, 0x5']
Processing opcode: lwz, operands: ['r4', '0x30(r1)']
Translated lwz r4 0x30(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lwz r4, 0x30(r1)']
Processing opcode: subi, operands: ['r0', 'r3', '0x681b']
Translated subi r0 r3 0x681b to: ['gc_env.r[0] = gc_env.r[3] - 26651; // subi r0, r3, 26651']
Processing opcode: mullw, operands: ['r0', 'r4', 'r0']
Translated mullw r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] * gc_env.r[0]; // mullw r0, r4, r0']
Translated lis r3 0x431c to: ['gc_env.r[3] = 17180 << 16; // lis r3, 0x431c']
Processing opcode: subi, operands: ['r3', 'r3', '0x217d']
Translated subi r3 r3 0x217d to: ['gc_env.r[3] = gc_env.r[3] - 8573; // subi r3, r3, 8573']
Translated mulhw r0 r3 r0 to: ['gc_env.r[0] = (int32_t)(((int64_t)(int32_t)gc_env.r[3] * (int64_t)(int32_t)gc_env.r[0]) >> 32); // mulhw r0, r3, r0']
Translated srawi r0 r0 18 to: ['gc_env.r[0] = ((int32_t)gc_env.r[0]) >> 18; // srawi r0, r0, 18']
Translated srwi r3 r0 31 to: ['gc_env.r[3] = gc_env.r[0] >> 31; // srwi r3, r0, 31']
Processing opcode: add, operands: ['r4', 'r0', 'r3']
Translated add. r4 r0 r3 to: ['gc_env.r[4] = gc_env.r[0] + gc_env.r[3]; // add r4, r0, r3']
Translated lis r3 lbl_8001A478@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001A478 >> 16) & 0xFFFF; // lis r3, lbl_8001A478@ha']
Processing opcode: addi, operands: ['r0', 'r3', 'lbl_8001A478@l']
Translated addi r0 r3 lbl_8001A478@l to: ['gc_env.r[0] = (uint32_t)&lbl_8001A478; // lis + addi lbl_8001A478 (completing pattern)']
Processing opcode: addi, operands: ['r3', 'r4', '0x0']
Translated addi r3 r4 0x0 to: ['gc_env.r[3] = gc_env.r[4] + 0; // addi r3, r4, 0x0']
Translated mr r5 r0 to: gc_env.r[5] = gc_env.r[0]; // Move register
Translated bge .L_80011C24 to: if (gc_env.cr[0] >= 0) goto L_80011C24;
Translated neg r4 r4 to: ['gc_env.r[4] = -(int32_t)gc_env.r[4]; // neg r4, r4']
Translated b .L_80011C18 to: goto L_80011C18;
Translated clrlwi. r0 r4 31 to: ['gc_env.r[0] = gc_env.r[4] & 0x1; // clrlwi r0, r4, 31']
Translated beq .L_80011C10 to: if (gc_env.cr[0] == 0) goto L_80011C10;
Error in handler for lfd: name 'format_hex' is not defined
Translated fmul f31 f31 f0 to: ['gc_env.f[31] = gc_env.f[31] * gc_env.f[0]; // fmul f31, f31, f0']
Translated srawi r4 r4 1 to: ['gc_env.r[4] = ((int32_t)gc_env.r[4]) >> 1; // srawi r4, r4, 1']
Processing opcode: addi, operands: ['r5', 'r5', '0x8']
Translated addi r5 r5 0x8 to: ['gc_env.r[5] += 8; // addi r5, r5, 0x8']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80011C00 to: if (gc_env.cr[0] != 0) goto L_80011C00;
Translated b .L_80011C54 to: goto L_80011C54;
Translated ble .L_80011C54 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80011C54; // ble .L_80011C54']
Translated lfd f1 lbl_8001F0A8@sda21(r0) to: ['gc_env.f[1] = *(double*)&lbl_8001F0A8; // lfd f1, lbl_8001F0A8@sda21(r0)']
Translated b .L_80011C48 to: goto L_80011C48;
Translated clrlwi. r0 r4 31 to: ['gc_env.r[0] = gc_env.r[4] & 0x1; // clrlwi r0, r4, 31']
Translated beq .L_80011C40 to: if (gc_env.cr[0] == 0) goto L_80011C40;
Error in handler for lfd: name 'format_hex' is not defined
Translated fmul f1 f1 f0 to: ['gc_env.f[1] = gc_env.f[1] * gc_env.f[0]; // fmul f1, f1, f0']
Translated srawi r4 r4 1 to: ['gc_env.r[4] = ((int32_t)gc_env.r[4]) >> 1; // srawi r4, r4, 1']
Processing opcode: addi, operands: ['r5', 'r5', '0x8']
Translated addi r5 r5 0x8 to: ['gc_env.r[5] += 8; // addi r5, r5, 0x8']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80011C30 to: if (gc_env.cr[0] != 0) goto L_80011C30;
Translated fdiv f31 f31 f1 to: ['gc_env.f[31] = gc_env.f[31] / gc_env.f[1]; // fdiv f31, f31, f1']
Translated lfd f1 lbl_8001F0B8@sda21(r0) to: ['gc_env.f[1] = *(double*)&lbl_8001F0B8; // lfd f1, lbl_8001F0B8@sda21(r0)']
Translated lfd f0 lbl_8001F0A8@sda21(r0) to: ['gc_env.f[0] = *(double*)&lbl_8001F0A8; // lfd f0, lbl_8001F0A8@sda21(r0)']
Translated b .L_80011C68 to: goto L_80011C68;
Translated fmul f31 f31 f1 to: ['gc_env.f[31] = gc_env.f[31] * gc_env.f[1]; // fmul f31, f31, f1']
Processing opcode: addi, operands: ['r3', 'r3', '0x1']
Translated addi r3 r3 0x1 to: ['gc_env.r[3] += 1; // addi r3, r3, 0x1']
Translated fcmpo cr0 f31 f0 to: ['gc_env.cr[0] = isnan(gc_env.f[31]) || isnan(gc_env.f[0]) ? 0x1 : (gc_env.f[31] < gc_env.f[0] ? 0x8 : (gc_env.f[31] > gc_env.f[0] ? 0x4 : 0x2)); // fcmpo cr0, f31, f0']
Translated cror eq gt eq to: ['gc_env.cr[0] = (gc_env.cr[0] & ~(1 << 2)) | ((((gc_env.cr[0] >> 1) & 1) | ((gc_env.cr[0] >> 2) & 1)) << 2); // cror eq, gt, eq']
Translated beq .L_80011C60 to: if (gc_env.cr[0] == 0) goto L_80011C60;
Translated lfd f1 lbl_8001F0C0@sda21(r0) to: ['gc_env.f[1] = *(double*)&lbl_8001F0C0; // lfd f1, lbl_8001F0C0@sda21(r0)']
Translated lfd f0 lbl_8001F0B8@sda21(r0) to: ['gc_env.f[0] = *(double*)&lbl_8001F0B8; // lfd f0, lbl_8001F0B8@sda21(r0)']
Translated b .L_80011C88 to: goto L_80011C88;
Translated fmul f31 f31 f1 to: ['gc_env.f[31] = gc_env.f[31] * gc_env.f[1]; // fmul f31, f31, f1']
Processing opcode: subi, operands: ['r3', 'r3', '0x1']
Translated subi r3 r3 0x1 to: ['gc_env.r[3] = gc_env.r[3] - 1; // subi r3, r3, 1']
Translated fcmpo cr0 f31 f0 to: ['gc_env.cr[0] = isnan(gc_env.f[31]) || isnan(gc_env.f[0]) ? 0x1 : (gc_env.f[31] < gc_env.f[0] ? 0x8 : (gc_env.f[31] > gc_env.f[0] ? 0x4 : 0x2)); // fcmpo cr0, f31, f0']
Translated blt .L_80011C80 to: ['if (gc_env.cr[0] & 0x8) goto L_80011C80; // blt .L_80011C80']
Translated lis r5 0x6666 to: ['gc_env.r[5] = 26214 << 16; // lis r5, 0x6666']
Translated lfd f1 lbl_8001F0B0@sda21(r0) to: ['gc_env.f[1] = *(double*)&lbl_8001F0B0; // lfd f1, lbl_8001F0B0@sda21(r0)']
Translated lis r6 lbl_8001A4C0@ha to: ['gc_env.r[6] = ((uint32_t)&lbl_8001A4C0 >> 16) & 0xFFFF; // lis r6, lbl_8001A4C0@ha']
Processing opcode: addi, operands: ['r4', 'r30', '0x5']
Translated addi r4 r30 0x5 to: ['gc_env.r[4] = gc_env.r[30] + 5; // addi r4, r30, 0x5']
Processing opcode: addi, operands: ['r7', 'r5', '0x6667']
Translated addi r7 r5 0x6667 to: ['gc_env.r[7] = gc_env.r[5] + 26215; // addi r7, r5, 0x6667']
Processing opcode: addi, operands: ['r10', 'r6', 'lbl_8001A4C0@l']
Translated addi r10 r6 lbl_8001A4C0@l to: ['gc_env.r[10] = gc_env.r[6] + ((uint32_t)&lbl_8001A4C0 & 0xFFFF); // addi r10, r6, lbl_8001A4C0@l']
Translated lis r9 0x4330 to: ['gc_env.r[9] = 17200 << 16; // lis r9, 0x4330']
Translated b .L_80011D58 to: goto L_80011D58;
Translated cmpwi r31 0x8 to: gc_env.cr[0] = (gc_env.r[31] == 0x8) ? 0 : (gc_env.r[31] < 0x8 ? -1 : 1); // Compare with immediate
Processing opcode: addi, operands: ['r12', 'r31', '0x0']
Translated addi r12 r31 0x0 to: ['gc_env.r[12] = gc_env.r[31] + 0; // addi r12, r31, 0x0']
Translated ble .L_80011CC0 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80011CC0; // ble .L_80011CC0']
Processing opcode: li, operands: ['r12', '0x8']
Translated li r12 0x8 to: ['gc_env.r[12] = 0x8; // li r12, 0x8']
Processing opcode: lbz, operands: ['r6', '0x4(r30)']
Translated lbz r6 0x4(r30) to: ['gc_env.r[6] = gc_mem_read8(gc_env.ram, gc_env.r[30] + 0x4); // lbz r6, 0x4(r30)']
Translated slwi r0 r12 3 to: ['gc_env.r[0] = gc_env.r[12] << 3; // slwi r0, r12, 3']
Processing opcode: add, operands: ['r5', 'r10', 'r0']
Translated add r5 r10 r0 to: ['gc_env.r[5] = gc_env.r[10] + gc_env.r[0]; // add r5, r10, r0']
Processing opcode: add, operands: ['r0', 'r6', 'r12']
Translated add r0 r6 r12 to: ['gc_env.r[0] = gc_env.r[6] + gc_env.r[12]; // add r0, r6, r12']
Processing opcode: stb, operands: ['r0', '0x4(r30)']
Translated stb r0 0x4(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x4, gc_env.r[0]); // stb r0, 0x4(r30)']
Processing opcode: subf, operands: ['r31', 'r12', 'r31']
Translated subf r31 r12 r31 to: ['gc_env.r[31] = gc_env.r[31] - gc_env.r[12]; // subf r31, r12, r31']
Processing opcode: subf, operands: ['r3', 'r12', 'r3']
Translated subf r3 r12 r3 to: ['gc_env.r[3] = gc_env.r[3] - gc_env.r[12]; // subf r3, r12, r3']
Error in handler for lfd: name 'format_hex' is not defined
Processing opcode: add, operands: ['r4', 'r4', 'r12']
Translated add r4 r4 r12 to: ['gc_env.r[4] = gc_env.r[4] + gc_env.r[12]; // add r4, r4, r12']
Processing opcode: addi, operands: ['r11', 'r12', '0x1']
Translated addi r11 r12 0x1 to: ['gc_env.r[11] = gc_env.r[12] + 1; // addi r11, r12, 0x1']
Translated fmul f31 f31 f0 to: ['gc_env.f[31] = gc_env.f[31] * gc_env.f[0]; // fmul f31, f31, f0']
Translated fctiwz f0 f31 to: ['gc_env.f[0] = (double)(int32_t)gc_env.f[31]; // fctiwz f0, f31']
Translated stfd f0 0x40(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[0], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x40, temp); // stfd f0, 0x40(r1)']
Processing opcode: lwz, operands: ['r0', '0x44(r1)']
Translated lwz r0 0x44(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lwz r0, 0x44(r1)']
Translated stfd f0 0x48(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[0], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x48, temp); // stfd f0, 0x48(r1)']
Translated xoris r0 r0 0x8000 to: ['gc_env.r[0] = gc_env.r[0] ^ 0x80000000; // xoris r0, r0, 0x8000']
Processing opcode: stw, operands: ['r0', '0x3c(r1)']
Translated stw r0 0x3c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[0]); // stw r0, 0x3C(r1)']
Processing opcode: lwz, operands: ['r6', '0x4c(r1)']
Translated lwz r6 0x4c(r1) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4C); // lwz r6, 0x4C(r1)']
Processing opcode: stw, operands: ['r9', '0x38(r1)']
Translated stw r9 0x38(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[9]); // stw r9, 0x38(r1)']
Error in handler for lfd: name 'format_hex' is not defined
Translated fsub f0 f0 f1 to: ['gc_env.f[0] = gc_env.f[0] - gc_env.f[1]; // fsub f0, f0, f1']
Translated fsub f31 f31 f0 to: ['gc_env.f[31] = gc_env.f[31] - gc_env.f[0]; // fsub f31, f31, f0']
Translated b .L_80011D4C to: goto L_80011D4C;
Translated mulhw r8 r7 r6 to: ['gc_env.r[8] = (int32_t)(((int64_t)(int32_t)gc_env.r[7] * (int64_t)(int32_t)gc_env.r[6]) >> 32); // mulhw r8, r7, r6']
Translated srawi r0 r8 2 to: ['gc_env.r[0] = ((int32_t)gc_env.r[8]) >> 2; // srawi r0, r8, 2']
Translated srwi r5 r0 31 to: ['gc_env.r[5] = gc_env.r[0] >> 31; // srwi r5, r0, 31']
Processing opcode: add, operands: ['r0', 'r0', 'r5']
Translated add r0 r0 r5 to: ['gc_env.r[0] = gc_env.r[0] + gc_env.r[5]; // add r0, r0, r5']
Processing opcode: mulli, operands: ['r0', 'r0', '0xa']
Translated mulli r0 r0 0xa to: ['gc_env.r[0] = gc_env.r[0] * 10; // mulli r0, r0, 10']
Processing opcode: subf, operands: ['r6', 'r0', 'r6']
Translated subf r6 r0 r6 to: ['gc_env.r[6] = gc_env.r[6] - gc_env.r[0]; // subf r6, r0, r6']
Translated srawi r0 r8 2 to: ['gc_env.r[0] = ((int32_t)gc_env.r[8]) >> 2; // srawi r0, r8, 2']
Processing opcode: addi, operands: ['r6', 'r6', '0x30']
Translated addi r6 r6 0x30 to: ['gc_env.r[6] += 48; // addi r6, r6, 0x30']
Processing opcode: stb, operands: ['r6', '-0x1(r4)']
Translated stb r6 -0x1(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + -0x1, gc_env.r[6]); // stb r6, -0x1(r4)']
Translated srwi r5 r0 31 to: ['gc_env.r[5] = gc_env.r[0] >> 31; // srwi r5, r0, 31']
Processing opcode: add, operands: ['r6', 'r0', 'r5']
Translated add r6 r0 r5 to: ['gc_env.r[6] = gc_env.r[0] + gc_env.r[5]; // add r6, r0, r5']
Processing opcode: subi, operands: ['r4', 'r4', '0x1']
Translated subi r4 r4 0x1 to: ['gc_env.r[4] = gc_env.r[4] - 1; // subi r4, r4, 1']
Processing opcode: subic, operands: ['r11', 'r11', '0x1']
Translated subic. r11 r11 0x1 to: ['gc_env.r[11] = gc_env.r[11] - 1; // subic. r11, r11, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[11] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[11] == 0) ? 0x2 : ((int32_t)gc_env.r[11] < 0 ? 0x8 : 0x4);']
Translated bne .L_80011D1C to: if (gc_env.cr[0] != 0) goto L_80011D1C;
Processing opcode: add, operands: ['r4', 'r4', 'r12']
Translated add r4 r4 r12 to: ['gc_env.r[4] = gc_env.r[4] + gc_env.r[12]; // add r4, r4, r12']
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80011CB0 to: if (gc_env.cr[0] != 0) goto L_80011CB0;
Translated lha r5 0x2(r29) to: ['gc_env.r[5] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[29] + 0x2); // lha r5, 0x2(r29)']
Translated cmpwi r5 0x24 to: gc_env.cr[0] = (gc_env.r[5] == 0x24) ? 0 : (gc_env.r[5] < 0x24 ? -1 : 1); // Compare with immediate
Translated ble .L_80011D70 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80011D70; // ble .L_80011D70']
Processing opcode: li, operands: ['r5', '0x24']
Translated li r5 0x24 to: ['gc_env.r[5] = 0x24; // li r5, 0x24']
Processing opcode: lbz, operands: ['r0', '0x4(r30)']
Translated lbz r0 0x4(r30) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[30] + 0x4); // lbz r0, 0x4(r30)']
Processing opcode: subf, operands: ['r5', 'r0', 'r5']
Translated subf. r5 r0 r5 to: ['gc_env.r[5] = gc_env.r[5] - gc_env.r[0]; // subf r5, r0, r5']
Translated ble .L_80011DA8 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80011DA8; // ble .L_80011DA8']
Processing opcode: addi, operands: ['r6', 'r5', '0x1']
Translated addi r6 r5 0x1 to: ['gc_env.r[6] = gc_env.r[5] + 1; // addi r6, r5, 0x1']
Processing opcode: li, operands: ['r0', '0x30']
Translated li r0 0x30 to: ['gc_env.r[0] = 0x30; // li r0, 0x30']
Translated b .L_80011D90 to: goto L_80011D90;
Processing opcode: stb, operands: ['r0', '0x0(r4)']
Translated stb r0 0x0(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stb r0, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Processing opcode: subic, operands: ['r6', 'r6', '0x1']
Translated subic. r6 r6 0x1 to: ['gc_env.r[6] = gc_env.r[6] - 1; // subic. r6, r6, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[6] == 0) ? 0x2 : ((int32_t)gc_env.r[6] < 0 ? 0x8 : 0x4);']
Translated bne .L_80011D88 to: if (gc_env.cr[0] != 0) goto L_80011D88;
Processing opcode: lbz, operands: ['r0', '0x4(r30)']
Translated lbz r0 0x4(r30) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[30] + 0x4); // lbz r0, 0x4(r30)']
Processing opcode: subf, operands: ['r3', 'r5', 'r3']
Translated subf r3 r5 r3 to: ['gc_env.r[3] = gc_env.r[3] - gc_env.r[5]; // subf r3, r5, r3']
Processing opcode: add, operands: ['r0', 'r0', 'r5']
Translated add r0 r0 r5 to: ['gc_env.r[0] = gc_env.r[0] + gc_env.r[5]; // add r0, r0, r5']
Processing opcode: stb, operands: ['r0', '0x4(r30)']
Translated stb r0 0x4(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x4, gc_env.r[0]); // stb r0, 0x4(r30)']
Translated extsh r0 r3 to: ['gc_env.r[0] = (int32_t)(int16_t)(gc_env.r[3] & 0xFFFF); // extsh r0, r3']
Processing opcode: sth, operands: ['r0', '0x2(r30)']
Translated sth r0 0x2(r30) to: ['gc_mem_write16(gc_env.ram, gc_env.r[30] + 0x2, gc_env.r[0]); // sth r0, 0x2(r30)']
Processing opcode: lwz, operands: ['r0', '0x6c(r1)']
Translated lwz r0 0x6c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x6C); // lwz r0, 0x6C(r1)']
Error in handler for lfd: name 'format_hex' is not defined
Processing opcode: lwz, operands: ['r31', '0x5c(r1)']
Translated lwz r31 0x5c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x5C); // lwz r31, 0x5C(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Processing opcode: lwz, operands: ['r30', '0x58(r1)']
Translated lwz r30 0x58(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x58); // lwz r30, 0x58(r1)']
Processing opcode: lwz, operands: ['r29', '0x54(r1)']
Translated lwz r29 0x54(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x54); // lwz r29, 0x54(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x68']
Translated addi r1 r1 0x68 to: ['gc_env.r[1] += 104; // addi r1, r1, 0x68']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Translated mr r30 r4 to: gc_env.r[30] = gc_env.r[4]; // Move register
Processing opcode: lwz, operands: ['r3', '0x18(r3)']
Translated lwz r3 0x18(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x18); // lwz r3, 0x18(r3)']
Processing opcode: lwz, operands: ['r0', '0x20(r31)']
Translated lwz r0 0x20(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x20); // lwz r0, 0x20(r31)']
Processing opcode: subf, operands: ['r0', 'r3', 'r0']
Translated subf. r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[3]; // subf r0, r3, r0']
Translated beq .L_80011E50 to: if (gc_env.cr[0] == 0) goto L_80011E50;
Processing opcode: stw, operands: ['r0', '0x24(r31)']
Translated stw r0 0x24(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x24, gc_env.r[0]); // stw r0, 0x24(r31)']
Processing opcode: lbz, operands: ['r0', '0x5(r31)']
Translated lbz r0 0x5(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x5); // lbz r0, 0x5(r31)']
Translated extrwi. r0 r0 1 28 to: ['gc_env.r[0] = (gc_env.r[0] >> 3) & 0x1; // extrwi r0, r0, 1, 28', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Processing opcode: lwz, operands: ['r12', '0x3c(r31)']
Translated lwz r12 0x3c(r31) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x3C); // lwz r12, 0x3C(r31)']
Processing opcode: addi, operands: ['r5', 'r31', '0x24']
Translated addi r5 r31 0x24 to: ['gc_env.r[5] = gc_env.r[31] + 36; // addi r5, r31, 0x24']
Processing opcode: lwz, operands: ['r3', '0x0(r31)']
Translated lwz r3 0x0(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r3, (r31)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: lwz, operands: ['r4', '0x18(r31)']
Translated lwz r4 0x18(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x18); // lwz r4, 0x18(r31)']
Processing opcode: lwz, operands: ['r6', '0x44(r31)']
Translated lwz r6 0x44(r31) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x44); // lwz r6, 0x44(r31)']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated cmplwi r30 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == 0x0) ? 0 : ((uint32_t)gc_env.r[30] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80011E34 to: if (gc_env.cr[0] == 0) goto L_80011E34;
Processing opcode: lwz, operands: ['r0', '0x24(r31)']
Translated lwz r0 0x24(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x24); // lwz r0, 0x24(r31)']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80011E40 to: if (gc_env.cr[0] == 0) goto L_80011E40;
Translated b .L_80011E84 to: goto L_80011E84;
Processing opcode: lwz, operands: ['r3', '0x14(r31)']
Translated lwz r3 0x14(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x14); // lwz r3, 0x14(r31)']
Processing opcode: lwz, operands: ['r0', '0x24(r31)']
Translated lwz r0 0x24(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x24); // lwz r0, 0x24(r31)']
Processing opcode: add, operands: ['r0', 'r3', 'r0']
Translated add r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] + gc_env.r[0]; // add r0, r3, r0']
Processing opcode: stw, operands: ['r0', '0x14(r31)']
Translated stw r0 0x14(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x14, gc_env.r[0]); // stw r0, 0x14(r31)']
Processing opcode: lwz, operands: ['r0', '0x18(r31)']
Translated lwz r0 0x18(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x18); // lwz r0, 0x18(r31)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stw, operands: ['r0', '0x20(r31)']
Translated stw r0 0x20(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x20, gc_env.r[0]); // stw r0, 0x20(r31)']
Processing opcode: lwz, operands: ['r0', '0x1c(r31)']
Translated lwz r0 0x1c(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x1C); // lwz r0, 0x1C(r31)']
Processing opcode: stw, operands: ['r0', '0x24(r31)']
Translated stw r0 0x24(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x24, gc_env.r[0]); // stw r0, 0x24(r31)']
Processing opcode: lwz, operands: ['r5', '0x14(r31)']
Translated lwz r5 0x14(r31) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x14); // lwz r5, 0x14(r31)']
Processing opcode: lwz, operands: ['r4', '0x28(r31)']
Translated lwz r4 0x28(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x28); // lwz r4, 0x28(r31)']
Processing opcode: lwz, operands: ['r0', '0x24(r31)']
Translated lwz r0 0x24(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x24); // lwz r0, 0x24(r31)']
Translated and r4 r5 r4 to: gc_env.r[4] = gc_env.r[5] & gc_env.r[4];
Processing opcode: subf, operands: ['r0', 'r4', 'r0']
Translated subf r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[4]; // subf r0, r4, r0']
Processing opcode: stw, operands: ['r0', '0x24(r31)']
Translated stw r0 0x24(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x24, gc_env.r[0]); // stw r0, 0x24(r31)']
Processing opcode: lwz, operands: ['r0', '0x14(r31)']
Translated lwz r0 0x14(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x14); // lwz r0, 0x14(r31)']
Processing opcode: stw, operands: ['r0', '0x30(r31)']
Translated stw r0 0x30(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x30, gc_env.r[0]); // stw r0, 0x30(r31)']
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated blr  to: return;
Processing opcode: lwz, operands: ['r0', '0x18(r3)']
Translated lwz r0 0x18(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x18); // lwz r0, 0x18(r3)']
Processing opcode: stw, operands: ['r0', '0x20(r3)']
Translated stw r0 0x20(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x20, gc_env.r[0]); // stw r0, 0x20(r3)']
Processing opcode: lwz, operands: ['r0', '0x1c(r3)']
Translated lwz r0 0x1c(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x1C); // lwz r0, 0x1C(r3)']
Processing opcode: stw, operands: ['r0', '0x24(r3)']
Translated stw r0 0x24(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x24, gc_env.r[0]); // stw r0, 0x24(r3)']
Processing opcode: lwz, operands: ['r5', '0x14(r3)']
Translated lwz r5 0x14(r3) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x14); // lwz r5, 0x14(r3)']
Processing opcode: lwz, operands: ['r4', '0x28(r3)']
Translated lwz r4 0x28(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x28); // lwz r4, 0x28(r3)']
Processing opcode: lwz, operands: ['r0', '0x24(r3)']
Translated lwz r0 0x24(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x24); // lwz r0, 0x24(r3)']
Translated and r4 r5 r4 to: gc_env.r[4] = gc_env.r[5] & gc_env.r[4];
Processing opcode: subf, operands: ['r0', 'r4', 'r0']
Translated subf r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[4]; // subf r0, r4, r0']
Processing opcode: stw, operands: ['r0', '0x24(r3)']
Translated stw r0 0x24(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x24, gc_env.r[0]); // stw r0, 0x24(r3)']
Processing opcode: lwz, operands: ['r0', '0x14(r3)']
Translated lwz r0 0x14(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x14); // lwz r0, 0x14(r3)']
Processing opcode: stw, operands: ['r0', '0x30(r3)']
Translated stw r0 0x30(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x30, gc_env.r[0]); // stw r0, 0x30(r3)']
Translated blr  to: return;
Translated blr  to: return;
Processing opcode: subi, operands: ['r6', 'r3', '0x1']
Translated subi r6 r3 0x1 to: ['gc_env.r[6] = gc_env.r[3] - 1; // subi r6, r3, 1']
Processing opcode: subi, operands: ['r4', 'r4', '0x1']
Translated subi r4 r4 0x1 to: ['gc_env.r[4] = gc_env.r[4] - 1; // subi r4, r4, 1']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated b .L_80012220 to: goto L_80012220;
Translated lbzu r3 0x1(r6) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[6] + 1); // lbzu r3, 1(r6)', 'gc_env.r[6] = gc_env.r[6] + 1;']
Translated lbzu r0 0x1(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 1); // lbzu r0, 1(r4)', 'gc_env.r[4] = gc_env.r[4] + 1;']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated beq .L_80012220 to: if (gc_env.cr[0] == 0) goto L_80012220;
Translated bge .L_80012218 to: if (gc_env.cr[0] >= 0) goto L_80012218;
Processing opcode: li, operands: ['r3', '-0x1']
Translated li r3 -0x1 to: ['gc_env.r[3] = -0x1; // li r3, -0x1']
Translated blr  to: return;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated blr  to: return;
Processing opcode: subic, operands: ['r5', 'r5', '0x1']
Translated subic. r5 r5 0x1 to: ['gc_env.r[5] = gc_env.r[5] - 1; // subic. r5, r5, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[5] == 0) ? 0x2 : ((int32_t)gc_env.r[5] < 0 ? 0x8 : 0x4);']
Translated bne .L_800121FC to: if (gc_env.cr[0] != 0) goto L_800121FC;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmplwi r5 0x20 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x20) ? 0 : ((uint32_t)gc_env.r[5] < 0x20 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Translated subfc r3 r31 r4 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[4] - gc_env.r[31];', 'gc_env.r[3] = (uint32_t)subfc_temp; // subfc r3, r31, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= gc_env.r[31] ? 0x20000000 : 0);']
Translated subfe r0 r0 r0 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[0] - gc_env.r[0] - subfe_borrow;', 'gc_env.r[0] = (uint32_t)subfe_temp; // subfe r0, r0, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[0] >= (gc_env.r[0] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg r3 r0 to: ['gc_env.r[3] = -(int32_t)gc_env.r[0]; // neg r3, r0']
Translated blt .L_800122D4 to: ['if (gc_env.cr[0] & 0x8) goto L_800122D4; // blt .L_800122D4']
Translated xor r0 r31 r4 to: ['gc_env.r[0] = gc_env.r[31] ^ gc_env.r[4]; // xor r0, r31, r4']
Translated clrlwi. r0 r0 30 to: ['gc_env.r[0] = gc_env.r[0] & 0x3; // clrlwi r0, r0, 30']
Translated beq .L_800122B0 to: if (gc_env.cr[0] == 0) goto L_800122B0;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800122A4 to: if (gc_env.cr[0] != 0) goto L_800122A4;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_800123E8 to: fn_800123E8();
Translated b .L_800122CC to: goto L_800122CC;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_80012338 to: fn_80012338();
Translated b .L_800122CC to: goto L_800122CC;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800122C4 to: if (gc_env.cr[0] != 0) goto L_800122C4;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_80012558 to: fn_80012558();
Translated b .L_800122CC to: goto L_800122CC;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_800124AC to: fn_800124AC();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated b .L_80012324 to: goto L_80012324;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80012300 to: if (gc_env.cr[0] != 0) goto L_80012300;
Processing opcode: subi, operands: ['r3', 'r4', '0x1']
Translated subi r3 r4 0x1 to: ['gc_env.r[3] = gc_env.r[4] - 1; // subi r3, r4, 1']
Processing opcode: subi, operands: ['r4', 'r31', '0x1']
Translated subi r4 r31 0x1 to: ['gc_env.r[4] = gc_env.r[31] - 1; // subi r4, r31, 1']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated b .L_800122F4 to: goto L_800122F4;
Translated lbzu r0 0x1(r3) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 1); // lbzu r0, 1(r3)', 'gc_env.r[3] = gc_env.r[3] + 1;']
Translated stbu r0 0x1(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x1, gc_env.r[0]); // stbu r0, 0x1(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x1;']
Processing opcode: subic, operands: ['r5', 'r5', '0x1']
Translated subic. r5 r5 0x1 to: ['gc_env.r[5] = gc_env.r[5] - 1; // subic. r5, r5, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[5] == 0) ? 0x2 : ((int32_t)gc_env.r[5] < 0 ? 0x8 : 0x4);']
Translated bne .L_800122EC to: if (gc_env.cr[0] != 0) goto L_800122EC;
Translated b .L_80012320 to: goto L_80012320;
Processing opcode: add, operands: ['r3', 'r4', 'r5']
Translated add r3 r4 r5 to: ['gc_env.r[3] = gc_env.r[4] + gc_env.r[5]; // add r3, r4, r5']
Processing opcode: add, operands: ['r4', 'r31', 'r5']
Translated add r4 r31 r5 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[5]; // add r4, r31, r5']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated b .L_80012318 to: goto L_80012318;
Translated lbzu r0 -0x1(r3) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[3] + -1); // lbzu r0, -1(r3)', 'gc_env.r[3] = gc_env.r[3] + -1;']
Translated stbu r0 -0x1(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r4)', 'gc_env.r[4] = gc_env.r[4] + -0x1;']
Processing opcode: subic, operands: ['r5', 'r5', '0x1']
Translated subic. r5 r5 0x1 to: ['gc_env.r[5] = gc_env.r[5] - 1; // subic. r5, r5, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[5] == 0) ? 0x2 : ((int32_t)gc_env.r[5] < 0 ? 0x8 : 0x4);']
Translated bne .L_80012310 to: if (gc_env.cr[0] != 0) goto L_80012310;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: add, operands: ['r12', 'r3', 'r5']
Translated add r12 r3 r5 to: ['gc_env.r[12] = gc_env.r[3] + gc_env.r[5]; // add r12, r3, r5']
Translated clrlwi. r0 r12 30 to: ['gc_env.r[0] = gc_env.r[12] & 0x3; // clrlwi r0, r12, 30']
Processing opcode: add, operands: ['r11', 'r4', 'r5']
Translated add r11 r4 r5 to: ['gc_env.r[11] = gc_env.r[4] + gc_env.r[5]; // add r11, r4, r5']
Translated mr r3 r0 to: gc_env.r[3] = gc_env.r[0]; // Move register
Translated beq .L_80012360 to: if (gc_env.cr[0] == 0) goto L_80012360;
Processing opcode: subf, operands: ['r5', 'r3', 'r5']
Translated subf r5 r3 r5 to: ['gc_env.r[5] = gc_env.r[5] - gc_env.r[3]; // subf r5, r3, r5']
Translated lbzu r0 -0x1(r11) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[11] + -1); // lbzu r0, -1(r11)', 'gc_env.r[11] = gc_env.r[11] + -1;']
Processing opcode: subic, operands: ['r3', 'r3', '0x1']
Translated subic. r3 r3 0x1 to: ['gc_env.r[3] = gc_env.r[3] - 1; // subic. r3, r3, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[3] == 0) ? 0x2 : ((int32_t)gc_env.r[3] < 0 ? 0x8 : 0x4);']
Translated stbu r0 -0x1(r12) to: ['gc_mem_write8(gc_env.ram, gc_env.r[12] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r12)', 'gc_env.r[12] = gc_env.r[12] + -0x1;']
Translated bne .L_80012350 to: if (gc_env.cr[0] != 0) goto L_80012350;
Translated clrlslwi r4 r11 30 3 to: ['gc_env.r[4] = (gc_env.r[11] << 3) & 0x3; // clrlslwi r4, r11, 30, 3']
Translated clrlwi r9 r11 30 to: ['gc_env.r[9] = gc_env.r[11] & 0x3; // clrlwi r9, r11, 30']
Translated subfic r10 r4 0x20 to: ['gc_env.r[10] = 32 - gc_env.r[4]; // subfic r10, r4, 32', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (32 >= gc_env.r[4] ? 0x20000000 : 0);']
Translated subfic r0 r9 0x4 to: ['gc_env.r[0] = 4 - gc_env.r[9]; // subfic r0, r9, 4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (4 >= gc_env.r[9] ? 0x20000000 : 0);']
Processing opcode: add, operands: ['r11', 'r11', 'r0']
Translated add r11 r11 r0 to: ['gc_env.r[11] = gc_env.r[11] + gc_env.r[0]; // add r11, r11, r0']
Processing opcode: lwzu, operands: ['r7', '-0x4(r11)']
Translated lwzu r7 -0x4(r11) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x4); // lwzu r7, -0x4(r11)', 'gc_env.r[11] = gc_env.r[11] + -0x4;']
Translated srwi r6 r5 3 to: ['gc_env.r[6] = gc_env.r[5] >> 3; // srwi r6, r5, 3']
Processing opcode: lwz, operands: ['r8', '-0x4(r11)']
Translated lwz r8 -0x4(r11) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x4); // lwz r8, -0x4(r11)']
Translated srw r0 r7 r10 to: ['gc_env.r[0] = gc_env.r[7] >> (gc_env.r[10] & 31); // srw r0, r7, r10']
Processing opcode: subic, operands: ['r6', 'r6', '0x1']
Translated subic. r6 r6 0x1 to: ['gc_env.r[6] = gc_env.r[6] - 1; // subic. r6, r6, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[6] == 0) ? 0x2 : ((int32_t)gc_env.r[6] < 0 ? 0x8 : 0x4);']
Translated slw r3 r8 r4 to: ['gc_env.r[3] = gc_env.r[8] << (gc_env.r[4] & 31); // slw r3, r8, r4']
Translated or r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Processing opcode: stw, operands: ['r0', '-0x4(r12)']
Translated stw r0 -0x4(r12) to: ['gc_mem_write32(gc_env.ram, gc_env.r[12] + -0x4, gc_env.r[0]); // stw r0, -0x4(r12)']
Translated srw r0 r8 r10 to: ['gc_env.r[0] = gc_env.r[8] >> (gc_env.r[10] & 31); // srw r0, r8, r10']
Processing opcode: lwzu, operands: ['r7', '-0x8(r11)']
Translated lwzu r7 -0x8(r11) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x8); // lwzu r7, -0x8(r11)', 'gc_env.r[11] = gc_env.r[11] + -0x8;']
Translated slw r3 r7 r4 to: ['gc_env.r[3] = gc_env.r[7] << (gc_env.r[4] & 31); // slw r3, r7, r4']
Translated or r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Processing opcode: stwu, operands: ['r0', '-0x8(r12)']
Translated stwu r0 -0x8(r12) to: ['gc_mem_write32(gc_env.ram, gc_env.r[12] + -0x8, gc_env.r[0]); // stwu r0, -0x8(r12)', 'gc_env.r[12] = gc_env.r[12] + -0x8;']
Translated bne .L_8001237C to: if (gc_env.cr[0] != 0) goto L_8001237C;
Translated rlwinm. r0 r5 0 29 29 to: ['gc_env.r[0] = (gc_env.r[5] << 0) & 0x4; // rlwinm r0, r5, 0, 29, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_800123C8 to: if (gc_env.cr[0] == 0) goto L_800123C8;
Processing opcode: lwzu, operands: ['r3', '-0x4(r11)']
Translated lwzu r3 -0x4(r11) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[11] + -0x4); // lwzu r3, -0x4(r11)', 'gc_env.r[11] = gc_env.r[11] + -0x4;']
Translated srw r0 r7 r10 to: ['gc_env.r[0] = gc_env.r[7] >> (gc_env.r[10] & 31); // srw r0, r7, r10']
Translated slw r3 r3 r4 to: ['gc_env.r[3] = gc_env.r[3] << (gc_env.r[4] & 31); // slw r3, r3, r4']
Translated or r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Processing opcode: stwu, operands: ['r0', '-0x4(r12)']
Translated stwu r0 -0x4(r12) to: ['gc_mem_write32(gc_env.ram, gc_env.r[12] + -0x4, gc_env.r[0]); // stwu r0, -0x4(r12)', 'gc_env.r[12] = gc_env.r[12] + -0x4;']
Translated clrlwi. r5 r5 30 to: ['gc_env.r[5] = gc_env.r[5] & 0x3; // clrlwi r5, r5, 30']
Translated beqlr  to: ['if (gc_env.cr[0] & 0x2) return; // beqlr']
Processing opcode: add, operands: ['r11', 'r11', 'r9']
Translated add r11 r11 r9 to: ['gc_env.r[11] = gc_env.r[11] + gc_env.r[9]; // add r11, r11, r9']
Translated lbzu r0 -0x1(r11) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[11] + -1); // lbzu r0, -1(r11)', 'gc_env.r[11] = gc_env.r[11] + -1;']
Processing opcode: subic, operands: ['r5', 'r5', '0x1']
Translated subic. r5 r5 0x1 to: ['gc_env.r[5] = gc_env.r[5] - 1; // subic. r5, r5, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[5] == 0) ? 0x2 : ((int32_t)gc_env.r[5] < 0 ? 0x8 : 0x4);']
Translated stbu r0 -0x1(r12) to: ['gc_mem_write8(gc_env.ram, gc_env.r[12] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r12)', 'gc_env.r[12] = gc_env.r[12] + -0x1;']
Translated bne .L_800123D4 to: if (gc_env.cr[0] != 0) goto L_800123D4;
Translated blr  to: return;
Translated neg r0 r3 to: ['gc_env.r[0] = -(int32_t)gc_env.r[3]; // neg r0, r3']
Translated clrlwi. r6 r0 30 to: ['gc_env.r[6] = gc_env.r[0] & 0x3; // clrlwi r6, r0, 30']
Processing opcode: subi, operands: ['r4', 'r4', '0x1']
Translated subi r4 r4 0x1 to: ['gc_env.r[4] = gc_env.r[4] - 1; // subi r4, r4, 1']
Processing opcode: subi, operands: ['r3', 'r3', '0x1']
Translated subi r3 r3 0x1 to: ['gc_env.r[3] = gc_env.r[3] - 1; // subi r3, r3, 1']
Translated beq .L_80012410 to: if (gc_env.cr[0] == 0) goto L_80012410;
Processing opcode: subf, operands: ['r5', 'r6', 'r5']
Translated subf r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[5] - gc_env.r[6]; // subf r5, r6, r5']
Translated lbzu r0 0x1(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 1); // lbzu r0, 1(r4)', 'gc_env.r[4] = gc_env.r[4] + 1;']
Processing opcode: subic, operands: ['r6', 'r6', '0x1']
Translated subic. r6 r6 0x1 to: ['gc_env.r[6] = gc_env.r[6] - 1; // subic. r6, r6, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[6] == 0) ? 0x2 : ((int32_t)gc_env.r[6] < 0 ? 0x8 : 0x4);']
Translated stbu r0 0x1(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x1, gc_env.r[0]); // stbu r0, 0x1(r3)', 'gc_env.r[3] = gc_env.r[3] + 0x1;']
Translated bne .L_80012400 to: if (gc_env.cr[0] != 0) goto L_80012400;
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Translated clrlwi r11 r0 30 to: ['gc_env.r[11] = gc_env.r[0] & 0x3; // clrlwi r11, r0, 30']
Processing opcode: subf, operands: ['r4', 'r11', 'r4']
Translated subf r4 r11 r4 to: ['gc_env.r[4] = gc_env.r[4] - gc_env.r[11]; // subf r4, r11, r4']
Processing opcode: subi, operands: ['r8', 'r4', '0x3']
Translated subi r8 r4 0x3 to: ['gc_env.r[8] = gc_env.r[4] - 3; // subi r8, r4, 3']
Processing opcode: lwzu, operands: ['r9', '0x4(r8)']
Translated lwzu r9 0x4(r8) to: ['gc_env.r[9] = gc_mem_read32(gc_env.ram, gc_env.r[8] + 0x4); // lwzu r9, 0x4(r8)', 'gc_env.r[8] = gc_env.r[8] + 0x4;']
Translated clrlslwi r4 r0 30 3 to: ['gc_env.r[4] = (gc_env.r[0] << 3) & 0x3; // clrlslwi r4, r0, 30, 3']
Translated subfic r12 r4 0x20 to: ['gc_env.r[12] = 32 - gc_env.r[4]; // subfic r12, r4, 32', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (32 >= gc_env.r[4] ? 0x20000000 : 0);']
Processing opcode: subi, operands: ['r6', 'r3', '0x3']
Translated subi r6 r3 0x3 to: ['gc_env.r[6] = gc_env.r[3] - 3; // subi r6, r3, 3']
Translated srwi r7 r5 3 to: ['gc_env.r[7] = gc_env.r[5] >> 3; // srwi r7, r5, 3']
Processing opcode: lwz, operands: ['r10', '0x4(r8)']
Translated lwz r10 0x4(r8) to: ['gc_env.r[10] = gc_mem_read32(gc_env.ram, gc_env.r[8] + 0x4); // lwz r10, 0x4(r8)']
Translated slw r3 r9 r4 to: ['gc_env.r[3] = gc_env.r[9] << (gc_env.r[4] & 31); // slw r3, r9, r4']
Processing opcode: subic, operands: ['r7', 'r7', '0x1']
Translated subic. r7 r7 0x1 to: ['gc_env.r[7] = gc_env.r[7] - 1; // subic. r7, r7, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[7] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[7] == 0) ? 0x2 : ((int32_t)gc_env.r[7] < 0 ? 0x8 : 0x4);']
Translated srw r0 r10 r12 to: ['gc_env.r[0] = gc_env.r[10] >> (gc_env.r[12] & 31); // srw r0, r10, r12']
Translated or r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Processing opcode: stw, operands: ['r0', '0x4(r6)']
Translated stw r0 0x4(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x4, gc_env.r[0]); // stw r0, 0x4(r6)']
Translated slw r3 r10 r4 to: ['gc_env.r[3] = gc_env.r[10] << (gc_env.r[4] & 31); // slw r3, r10, r4']
Processing opcode: lwzu, operands: ['r9', '0x8(r8)']
Translated lwzu r9 0x8(r8) to: ['gc_env.r[9] = gc_mem_read32(gc_env.ram, gc_env.r[8] + 0x8); // lwzu r9, 0x8(r8)', 'gc_env.r[8] = gc_env.r[8] + 0x8;']
Translated srw r0 r9 r12 to: ['gc_env.r[0] = gc_env.r[9] >> (gc_env.r[12] & 31); // srw r0, r9, r12']
Translated or r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Processing opcode: stwu, operands: ['r0', '0x8(r6)']
Translated stwu r0 0x8(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x8, gc_env.r[0]); // stwu r0, 0x8(r6)', 'gc_env.r[6] = gc_env.r[6] + 0x8;']
Translated bne .L_80012434 to: if (gc_env.cr[0] != 0) goto L_80012434;
Translated rlwinm. r0 r5 0 29 29 to: ['gc_env.r[0] = (gc_env.r[5] << 0) & 0x4; // rlwinm r0, r5, 0, 29, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_80012480 to: if (gc_env.cr[0] == 0) goto L_80012480;
Processing opcode: lwzu, operands: ['r0', '0x4(r8)']
Translated lwzu r0 0x4(r8) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[8] + 0x4); // lwzu r0, 0x4(r8)', 'gc_env.r[8] = gc_env.r[8] + 0x4;']
Translated slw r3 r9 r4 to: ['gc_env.r[3] = gc_env.r[9] << (gc_env.r[4] & 31); // slw r3, r9, r4']
Translated srw r0 r0 r12 to: ['gc_env.r[0] = gc_env.r[0] >> (gc_env.r[12] & 31); // srw r0, r0, r12']
Translated or r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Processing opcode: stwu, operands: ['r0', '0x4(r6)']
Translated stwu r0 0x4(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + 0x4, gc_env.r[0]); // stwu r0, 0x4(r6)', 'gc_env.r[6] = gc_env.r[6] + 0x4;']
Translated clrlwi. r5 r5 30 to: ['gc_env.r[5] = gc_env.r[5] & 0x3; // clrlwi r5, r5, 30']
Processing opcode: addi, operands: ['r4', 'r8', '0x3']
Translated addi r4 r8 0x3 to: ['gc_env.r[4] = gc_env.r[8] + 3; // addi r4, r8, 0x3']
Processing opcode: addi, operands: ['r3', 'r6', '0x3']
Translated addi r3 r6 0x3 to: ['gc_env.r[3] = gc_env.r[6] + 3; // addi r3, r6, 0x3']
Translated beqlr  to: ['if (gc_env.cr[0] & 0x2) return; // beqlr']
Translated subfic r0 r11 0x4 to: ['gc_env.r[0] = 4 - gc_env.r[11]; // subfic r0, r11, 4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (4 >= gc_env.r[11] ? 0x20000000 : 0);']
Processing opcode: subf, operands: ['r4', 'r0', 'r4']
Translated subf r4 r0 r4 to: ['gc_env.r[4] = gc_env.r[4] - gc_env.r[0]; // subf r4, r0, r4']
Translated lbzu r0 0x1(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 1); // lbzu r0, 1(r4)', 'gc_env.r[4] = gc_env.r[4] + 1;']
Processing opcode: subic, operands: ['r5', 'r5', '0x1']
Translated subic. r5 r5 0x1 to: ['gc_env.r[5] = gc_env.r[5] - 1; // subic. r5, r5, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[5] == 0) ? 0x2 : ((int32_t)gc_env.r[5] < 0 ? 0x8 : 0x4);']
Translated stbu r0 0x1(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x1, gc_env.r[0]); // stbu r0, 0x1(r3)', 'gc_env.r[3] = gc_env.r[3] + 0x1;']
Translated bne .L_80012498 to: if (gc_env.cr[0] != 0) goto L_80012498;
Translated blr  to: return;
Processing opcode: add, operands: ['r6', 'r3', 'r5']
Translated add r6 r3 r5 to: ['gc_env.r[6] = gc_env.r[3] + gc_env.r[5]; // add r6, r3, r5']
Translated clrlwi. r0 r6 30 to: ['gc_env.r[0] = gc_env.r[6] & 0x3; // clrlwi r0, r6, 30']
Processing opcode: add, operands: ['r4', 'r4', 'r5']
Translated add r4 r4 r5 to: ['gc_env.r[4] = gc_env.r[4] + gc_env.r[5]; // add r4, r4, r5']
Translated mr r3 r0 to: gc_env.r[3] = gc_env.r[0]; // Move register
Translated beq .L_800124D4 to: if (gc_env.cr[0] == 0) goto L_800124D4;
Processing opcode: subf, operands: ['r5', 'r3', 'r5']
Translated subf r5 r3 r5 to: ['gc_env.r[5] = gc_env.r[5] - gc_env.r[3]; // subf r5, r3, r5']
Translated lbzu r0 -0x1(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + -1); // lbzu r0, -1(r4)', 'gc_env.r[4] = gc_env.r[4] + -1;']
Processing opcode: subic, operands: ['r3', 'r3', '0x1']
Translated subic. r3 r3 0x1 to: ['gc_env.r[3] = gc_env.r[3] - 1; // subic. r3, r3, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[3] == 0) ? 0x2 : ((int32_t)gc_env.r[3] < 0 ? 0x8 : 0x4);']
Translated stbu r0 -0x1(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r6)', 'gc_env.r[6] = gc_env.r[6] + -0x1;']
Translated bne .L_800124C4 to: if (gc_env.cr[0] != 0) goto L_800124C4;
Translated srwi. r3 r5 5 to: ['gc_env.r[3] = gc_env.r[5] >> 5; // srwi r3, r5, 5', 'gc_env.cr[0] = (gc_env.r[3] == 0) ? 0x2 : ((int32_t)gc_env.r[3] < 0 ? 0x8 : 0x4);']
Translated beq .L_80012524 to: if (gc_env.cr[0] == 0) goto L_80012524;
Processing opcode: lwz, operands: ['r0', '-0x4(r4)']
Translated lwz r0 -0x4(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + -0x4); // lwz r0, -0x4(r4)']
Processing opcode: subic, operands: ['r3', 'r3', '0x1']
Translated subic. r3 r3 0x1 to: ['gc_env.r[3] = gc_env.r[3] - 1; // subic. r3, r3, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[3] == 0) ? 0x2 : ((int32_t)gc_env.r[3] < 0 ? 0x8 : 0x4);']
Processing opcode: stw, operands: ['r0', '-0x4(r6)']
Translated stw r0 -0x4(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + -0x4, gc_env.r[0]); // stw r0, -0x4(r6)']
Processing opcode: lwz, operands: ['r0', '-0x8(r4)']
Translated lwz r0 -0x8(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + -0x8); // lwz r0, -0x8(r4)']
Processing opcode: stw, operands: ['r0', '-0x8(r6)']
Translated stw r0 -0x8(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + -0x8, gc_env.r[0]); // stw r0, -0x8(r6)']
Processing opcode: lwz, operands: ['r0', '-0xc(r4)']
Translated lwz r0 -0xc(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + -0xC); // lwz r0, -0xC(r4)']
Processing opcode: stw, operands: ['r0', '-0xc(r6)']
Translated stw r0 -0xc(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + -0xC, gc_env.r[0]); // stw r0, -0xC(r6)']
Processing opcode: lwz, operands: ['r0', '-0x10(r4)']
Translated lwz r0 -0x10(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + -0x10); // lwz r0, -0x10(r4)']
Processing opcode: stw, operands: ['r0', '-0x10(r6)']
Translated stw r0 -0x10(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + -0x10, gc_env.r[0]); // stw r0, -0x10(r6)']
Processing opcode: lwz, operands: ['r0', '-0x14(r4)']
Translated lwz r0 -0x14(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + -0x14); // lwz r0, -0x14(r4)']
Processing opcode: stw, operands: ['r0', '-0x14(r6)']
Translated stw r0 -0x14(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + -0x14, gc_env.r[0]); // stw r0, -0x14(r6)']
Processing opcode: lwz, operands: ['r0', '-0x18(r4)']
Translated lwz r0 -0x18(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + -0x18); // lwz r0, -0x18(r4)']
Processing opcode: stw, operands: ['r0', '-0x18(r6)']
Translated stw r0 -0x18(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + -0x18, gc_env.r[0]); // stw r0, -0x18(r6)']
Processing opcode: lwz, operands: ['r0', '-0x1c(r4)']
Translated lwz r0 -0x1c(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + -0x1C); // lwz r0, -0x1C(r4)']
Processing opcode: stw, operands: ['r0', '-0x1c(r6)']
Translated stw r0 -0x1c(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + -0x1C, gc_env.r[0]); // stw r0, -0x1C(r6)']
Processing opcode: lwzu, operands: ['r0', '-0x20(r4)']
Translated lwzu r0 -0x20(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + -0x20); // lwzu r0, -0x20(r4)', 'gc_env.r[4] = gc_env.r[4] + -0x20;']
Processing opcode: stwu, operands: ['r0', '-0x20(r6)']
Translated stwu r0 -0x20(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + -0x20, gc_env.r[0]); // stwu r0, -0x20(r6)', 'gc_env.r[6] = gc_env.r[6] + -0x20;']
Translated bne .L_800124DC to: if (gc_env.cr[0] != 0) goto L_800124DC;
Translated extrwi. r3 r5 3 27 to: ['gc_env.r[3] = (gc_env.r[5] >> 2) & 0x7; // extrwi r3, r5, 3, 27', 'gc_env.cr[0] = (gc_env.r[3] == 0) ? 0x2 : ((int32_t)gc_env.r[3] < 0 ? 0x8 : 0x4);']
Translated beq .L_8001253C to: if (gc_env.cr[0] == 0) goto L_8001253C;
Processing opcode: lwzu, operands: ['r0', '-0x4(r4)']
Translated lwzu r0 -0x4(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + -0x4); // lwzu r0, -0x4(r4)', 'gc_env.r[4] = gc_env.r[4] + -0x4;']
Processing opcode: subic, operands: ['r3', 'r3', '0x1']
Translated subic. r3 r3 0x1 to: ['gc_env.r[3] = gc_env.r[3] - 1; // subic. r3, r3, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[3] == 0) ? 0x2 : ((int32_t)gc_env.r[3] < 0 ? 0x8 : 0x4);']
Processing opcode: stwu, operands: ['r0', '-0x4(r6)']
Translated stwu r0 -0x4(r6) to: ['gc_mem_write32(gc_env.ram, gc_env.r[6] + -0x4, gc_env.r[0]); // stwu r0, -0x4(r6)', 'gc_env.r[6] = gc_env.r[6] + -0x4;']
Translated bne .L_8001252C to: if (gc_env.cr[0] != 0) goto L_8001252C;
Translated clrlwi. r5 r5 30 to: ['gc_env.r[5] = gc_env.r[5] & 0x3; // clrlwi r5, r5, 30']
Translated beqlr  to: ['if (gc_env.cr[0] & 0x2) return; // beqlr']
Translated lbzu r0 -0x1(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + -1); // lbzu r0, -1(r4)', 'gc_env.r[4] = gc_env.r[4] + -1;']
Processing opcode: subic, operands: ['r5', 'r5', '0x1']
Translated subic. r5 r5 0x1 to: ['gc_env.r[5] = gc_env.r[5] - 1; // subic. r5, r5, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[5] == 0) ? 0x2 : ((int32_t)gc_env.r[5] < 0 ? 0x8 : 0x4);']
Translated stbu r0 -0x1(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r6)', 'gc_env.r[6] = gc_env.r[6] + -0x1;']
Translated bne .L_80012544 to: if (gc_env.cr[0] != 0) goto L_80012544;
Translated blr  to: return;
Translated neg r0 r3 to: ['gc_env.r[0] = -(int32_t)gc_env.r[3]; // neg r0, r3']
Translated clrlwi. r6 r0 30 to: ['gc_env.r[6] = gc_env.r[0] & 0x3; // clrlwi r6, r0, 30']
Processing opcode: subi, operands: ['r7', 'r4', '0x1']
Translated subi r7 r4 0x1 to: ['gc_env.r[7] = gc_env.r[4] - 1; // subi r7, r4, 1']
Processing opcode: subi, operands: ['r3', 'r3', '0x1']
Translated subi r3 r3 0x1 to: ['gc_env.r[3] = gc_env.r[3] - 1; // subi r3, r3, 1']
Translated beq .L_80012580 to: if (gc_env.cr[0] == 0) goto L_80012580;
Processing opcode: subf, operands: ['r5', 'r6', 'r5']
Translated subf r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[5] - gc_env.r[6]; // subf r5, r6, r5']
Translated lbzu r0 0x1(r7) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[7] + 1); // lbzu r0, 1(r7)', 'gc_env.r[7] = gc_env.r[7] + 1;']
Processing opcode: subic, operands: ['r6', 'r6', '0x1']
Translated subic. r6 r6 0x1 to: ['gc_env.r[6] = gc_env.r[6] - 1; // subic. r6, r6, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[6] == 0) ? 0x2 : ((int32_t)gc_env.r[6] < 0 ? 0x8 : 0x4);']
Translated stbu r0 0x1(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x1, gc_env.r[0]); // stbu r0, 0x1(r3)', 'gc_env.r[3] = gc_env.r[3] + 0x1;']
Translated bne .L_80012570 to: if (gc_env.cr[0] != 0) goto L_80012570;
Translated srwi. r4 r5 5 to: ['gc_env.r[4] = gc_env.r[5] >> 5; // srwi r4, r5, 5', 'gc_env.cr[0] = (gc_env.r[4] == 0) ? 0x2 : ((int32_t)gc_env.r[4] < 0 ? 0x8 : 0x4);']
Processing opcode: subi, operands: ['r6', 'r7', '0x3']
Translated subi r6 r7 0x3 to: ['gc_env.r[6] = gc_env.r[7] - 3; // subi r6, r7, 3']
Processing opcode: subi, operands: ['r3', 'r3', '0x3']
Translated subi r3 r3 0x3 to: ['gc_env.r[3] = gc_env.r[3] - 3; // subi r3, r3, 3']
Translated beq .L_800125D8 to: if (gc_env.cr[0] == 0) goto L_800125D8;
Processing opcode: lwz, operands: ['r0', '0x4(r6)']
Translated lwz r0 0x4(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x4); // lwz r0, 0x4(r6)']
Processing opcode: subic, operands: ['r4', 'r4', '0x1']
Translated subic. r4 r4 0x1 to: ['gc_env.r[4] = gc_env.r[4] - 1; // subic. r4, r4, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[4] == 0) ? 0x2 : ((int32_t)gc_env.r[4] < 0 ? 0x8 : 0x4);']
Processing opcode: stw, operands: ['r0', '0x4(r3)']
Translated stw r0 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[0]); // stw r0, 0x4(r3)']
Processing opcode: lwz, operands: ['r0', '0x8(r6)']
Translated lwz r0 0x8(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x8); // lwz r0, 0x8(r6)']
Processing opcode: stw, operands: ['r0', '0x8(r3)']
Translated stw r0 0x8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[0]); // stw r0, 0x8(r3)']
Processing opcode: lwz, operands: ['r0', '0xc(r6)']
Translated lwz r0 0xc(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0xC); // lwz r0, 0xC(r6)']
Processing opcode: stw, operands: ['r0', '0xc(r3)']
Translated stw r0 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[0]); // stw r0, 0xC(r3)']
Processing opcode: lwz, operands: ['r0', '0x10(r6)']
Translated lwz r0 0x10(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x10); // lwz r0, 0x10(r6)']
Processing opcode: stw, operands: ['r0', '0x10(r3)']
Translated stw r0 0x10(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x10, gc_env.r[0]); // stw r0, 0x10(r3)']
Processing opcode: lwz, operands: ['r0', '0x14(r6)']
Translated lwz r0 0x14(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x14); // lwz r0, 0x14(r6)']
Processing opcode: stw, operands: ['r0', '0x14(r3)']
Translated stw r0 0x14(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x14, gc_env.r[0]); // stw r0, 0x14(r3)']
Processing opcode: lwz, operands: ['r0', '0x18(r6)']
Translated lwz r0 0x18(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x18); // lwz r0, 0x18(r6)']
Processing opcode: stw, operands: ['r0', '0x18(r3)']
Translated stw r0 0x18(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x18, gc_env.r[0]); // stw r0, 0x18(r3)']
Processing opcode: lwz, operands: ['r0', '0x1c(r6)']
Translated lwz r0 0x1c(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x1C); // lwz r0, 0x1C(r6)']
Processing opcode: stw, operands: ['r0', '0x1c(r3)']
Translated stw r0 0x1c(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r3)']
Processing opcode: lwzu, operands: ['r0', '0x20(r6)']
Translated lwzu r0 0x20(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x20); // lwzu r0, 0x20(r6)', 'gc_env.r[6] = gc_env.r[6] + 0x20;']
Processing opcode: stwu, operands: ['r0', '0x20(r3)']
Translated stwu r0 0x20(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x20, gc_env.r[0]); // stwu r0, 0x20(r3)', 'gc_env.r[3] = gc_env.r[3] + 0x20;']
Translated bne .L_80012590 to: if (gc_env.cr[0] != 0) goto L_80012590;
Translated extrwi. r4 r5 3 27 to: ['gc_env.r[4] = (gc_env.r[5] >> 2) & 0x7; // extrwi r4, r5, 3, 27', 'gc_env.cr[0] = (gc_env.r[4] == 0) ? 0x2 : ((int32_t)gc_env.r[4] < 0 ? 0x8 : 0x4);']
Translated beq .L_800125F0 to: if (gc_env.cr[0] == 0) goto L_800125F0;
Processing opcode: lwzu, operands: ['r0', '0x4(r6)']
Translated lwzu r0 0x4(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x4); // lwzu r0, 0x4(r6)', 'gc_env.r[6] = gc_env.r[6] + 0x4;']
Processing opcode: subic, operands: ['r4', 'r4', '0x1']
Translated subic. r4 r4 0x1 to: ['gc_env.r[4] = gc_env.r[4] - 1; // subic. r4, r4, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[4] == 0) ? 0x2 : ((int32_t)gc_env.r[4] < 0 ? 0x8 : 0x4);']
Processing opcode: stwu, operands: ['r0', '0x4(r3)']
Translated stwu r0 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[0]); // stwu r0, 0x4(r3)', 'gc_env.r[3] = gc_env.r[3] + 0x4;']
Translated bne .L_800125E0 to: if (gc_env.cr[0] != 0) goto L_800125E0;
Translated clrlwi. r5 r5 30 to: ['gc_env.r[5] = gc_env.r[5] & 0x3; // clrlwi r5, r5, 30']
Processing opcode: addi, operands: ['r4', 'r6', '0x3']
Translated addi r4 r6 0x3 to: ['gc_env.r[4] = gc_env.r[6] + 3; // addi r4, r6, 0x3']
Processing opcode: addi, operands: ['r3', 'r3', '0x3']
Translated addi r3 r3 0x3 to: ['gc_env.r[3] += 3; // addi r3, r3, 0x3']
Translated beqlr  to: ['if (gc_env.cr[0] & 0x2) return; // beqlr']
Translated lbzu r0 0x1(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 1); // lbzu r0, 1(r4)', 'gc_env.r[4] = gc_env.r[4] + 1;']
Processing opcode: subic, operands: ['r5', 'r5', '0x1']
Translated subic. r5 r5 0x1 to: ['gc_env.r[5] = gc_env.r[5] - 1; // subic. r5, r5, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[5] == 0) ? 0x2 : ((int32_t)gc_env.r[5] < 0 ? 0x8 : 0x4);']
Translated stbu r0 0x1(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x1, gc_env.r[0]); // stbu r0, 0x1(r3)', 'gc_env.r[3] = gc_env.r[3] + 0x1;']
Translated bne .L_80012600 to: if (gc_env.cr[0] != 0) goto L_80012600;
Translated blr  to: return;
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x80(r1)']
Translated stwu r1 -0x80(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x80, gc_env.r[1]); // stwu r1, -0x80(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x80;']
Processing opcode: stw, operands: ['r31', '0x7c(r1)']
Translated stw r31 0x7c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x7C, gc_env.r[31]); // stw r31, 0x7C(r1)']
Processing opcode: stw, operands: ['r30', '0x78(r1)']
Translated stw r30 0x78(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x78, gc_env.r[30]); // stw r30, 0x78(r1)']
Translated bne cr1 .L_800126CC to: if (gc_env.cr[1] != 0) goto L_800126CC;
Translated stfd f1 0x28(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[1], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x28, temp); // stfd f1, 0x28(r1)']
Translated stfd f2 0x30(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[2], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x30, temp); // stfd f2, 0x30(r1)']
Translated stfd f3 0x38(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[3], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x38, temp); // stfd f3, 0x38(r1)']
Translated stfd f4 0x40(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[4], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x40, temp); // stfd f4, 0x40(r1)']
Translated stfd f5 0x48(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[5], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x48, temp); // stfd f5, 0x48(r1)']
Translated stfd f6 0x50(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[6], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x50, temp); // stfd f6, 0x50(r1)']
Translated stfd f7 0x58(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[7], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x58, temp); // stfd f7, 0x58(r1)']
Translated stfd f8 0x60(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[8], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x60, temp); // stfd f8, 0x60(r1)']
Processing opcode: stw, operands: ['r3', '0x8(r1)']
Translated stw r3 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[3]); // stw r3, 0x8(r1)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Processing opcode: stw, operands: ['r4', '0xc(r1)']
Translated stw r4 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[4]); // stw r4, 0xC(r1)']
Translated lis r4 __files@ha to: ['gc_env.r[4] = ((uint32_t)&__files >> 16) & 0xFFFF; // lis r4, __files@ha']
Processing opcode: addi, operands: ['r4', 'r4', '__files@l']
Translated addi r4 r4 __files@l to: ['gc_env.r[4] = (uint32_t)&__files; // lis + addi __files (completing pattern)']
Processing opcode: stw, operands: ['r5', '0x10(r1)']
Translated stw r5 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[5]); // stw r5, 0x10(r1)']
Processing opcode: addi, operands: ['r31', 'r4', '0x48']
Translated addi r31 r4 0x48 to: ['gc_env.r[31] = gc_env.r[4] + 72; // addi r31, r4, 0x48']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: stw, operands: ['r6', '0x14(r1)']
Translated stw r6 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[6]); // stw r6, 0x14(r1)']
Processing opcode: li, operands: ['r4', '-0x1']
Translated li r4 -0x1 to: ['gc_env.r[4] = -0x1; // li r4, -0x1']
Processing opcode: stw, operands: ['r7', '0x18(r1)']
Translated stw r7 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[7]); // stw r7, 0x18(r1)']
Processing opcode: stw, operands: ['r8', '0x1c(r1)']
Translated stw r8 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[8]); // stw r8, 0x1C(r1)']
Processing opcode: stw, operands: ['r9', '0x20(r1)']
Translated stw r9 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[9]); // stw r9, 0x20(r1)']
Processing opcode: stw, operands: ['r10', '0x24(r1)']
Translated stw r10 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[10]); // stw r10, 0x24(r1)']
Translated bl fwide to: fwide();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated blt .L_80012718 to: ['if (gc_env.cr[0] & 0x8) goto L_80012718; // blt .L_80012718']
Processing opcode: li, operands: ['r3', '-0x1']
Translated li r3 -0x1 to: ['gc_env.r[3] = -0x1; // li r3, -0x1']
Translated b .L_80012748 to: goto L_80012748;
Translated lis r0 0x100 to: ['gc_env.r[0] = 256 << 16; // lis r0, 0x100']
Processing opcode: stw, operands: ['r0', '0x6c(r1)']
Translated stw r0 0x6c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x6C, gc_env.r[0]); // stw r0, 0x6C(r1)']
Processing opcode: addi, operands: ['r0', 'r1', '0x88']
Translated addi r0 r1 0x88 to: ['gc_env.r[0] = gc_env.r[1] + 136; // addi r0, r1, 0x88']
Translated lis r3 __FileWrite@ha to: ['gc_env.r[3] = ((uint32_t)&__FileWrite >> 16) & 0xFFFF; // lis r3, __FileWrite@ha']
Processing opcode: stw, operands: ['r0', '0x70(r1)']
Translated stw r0 0x70(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x70, gc_env.r[0]); // stw r0, 0x70(r1)']
Processing opcode: addi, operands: ['r0', 'r1', '0x8']
Translated addi r0 r1 0x8 to: ['gc_env.r[0] = gc_env.r[1] + 8; // addi r0, r1, 0x8']
Processing opcode: addi, operands: ['r6', 'r1', '0x6c']
Translated addi r6 r1 0x6c to: ['gc_env.r[6] = gc_env.r[1] + 108; // addi r6, r1, 0x6c']
Processing opcode: stw, operands: ['r0', '0x74(r1)']
Translated stw r0 0x74(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x74, gc_env.r[0]); // stw r0, 0x74(r1)']
Processing opcode: addi, operands: ['r3', 'r3', '__FileWrite@l']
Translated addi r3 r3 __FileWrite@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&__FileWrite & 0xFFFF); // addi r3, r3, __FileWrite@l']
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: addi, operands: ['r5', 'r30', '0x0']
Translated addi r5 r30 0x0 to: ['gc_env.r[5] = gc_env.r[30] + 0; // addi r5, r30, 0x0']
Translated bl __pformatter to: __pformatter();
Processing opcode: lwz, operands: ['r0', '0x84(r1)']
Translated lwz r0 0x84(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x84); // lwz r0, 0x84(r1)']
Processing opcode: lwz, operands: ['r31', '0x7c(r1)']
Translated lwz r31 0x7c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x7C); // lwz r31, 0x7C(r1)']
Processing opcode: lwz, operands: ['r30', '0x78(r1)']
Translated lwz r30 0x78(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x78); // lwz r30, 0x78(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Processing opcode: addi, operands: ['r1', 'r1', '0x80']
Translated addi r1 r1 0x80 to: ['gc_env.r[1] += 128; // addi r1, r1, 0x80']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: addi, operands: ['r31', 'r5', '0x0']
Translated addi r31 r5 0x0 to: ['gc_env.r[31] = gc_env.r[5] + 0; // addi r31, r5, 0x0']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Processing opcode: addi, operands: ['r3', 'r4', '0x0']
Translated addi r3 r4 0x0 to: ['gc_env.r[3] = gc_env.r[4] + 0; // addi r3, r4, 0x0']
Processing opcode: addi, operands: ['r6', 'r30', '0x0']
Translated addi r6 r30 0x0 to: ['gc_env.r[6] = gc_env.r[30] + 0; // addi r6, r30, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl fwrite to: fwrite((void*)gc_env.r[3], gc_env.r[4], gc_env.r[5], (void*)gc_env.r[6]);
Translated cmplw r31 r3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == (uint32_t)gc_env.r[3]) ? 0 : ((uint32_t)gc_env.r[31] < (uint32_t)gc_env.r[3] ? -1 : 1); // Logical compare word
Translated bne .L_8001279C to: if (gc_env.cr[0] != 0) goto L_8001279C;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated b .L_800127A0 to: goto L_800127A0;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r7 "@stringBase0_8001A600"@ha to: ['gc_env.r[7] = ((uint32_t)&_stringBase0_8001A600 >> 16) & 0xFFFF; // lis r7, "@stringBase0_8001A600"@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x20']
Translated li r0 0x20 to: ['gc_env.r[0] = 0x20; // li r0, 0x20']
Processing opcode: stwu, operands: ['r1', '-0x268(r1)']
Translated stwu r1 -0x268(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x268, gc_env.r[1]); // stwu r1, -0x268(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x268;']
Translated stmw r18 0x230(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x230, gc_env.r[18]); // stmw r18, 0x230(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x234, gc_env.r[19]); // stmw r18, 0x230(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x238, gc_env.r[20]); // stmw r18, 0x230(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x23C, gc_env.r[21]); // stmw r18, 0x230(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x240, gc_env.r[22]); // stmw r18, 0x230(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x244, gc_env.r[23]); // stmw r18, 0x230(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x248, gc_env.r[24]); // stmw r18, 0x230(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24C, gc_env.r[25]); // stmw r18, 0x230(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x250, gc_env.r[26]); // stmw r18, 0x230(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x254, gc_env.r[27]); // stmw r18, 0x230(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x258, gc_env.r[28]); // stmw r18, 0x230(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x25C, gc_env.r[29]); // stmw r18, 0x230(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x260, gc_env.r[30]); // stmw r18, 0x230(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x264, gc_env.r[31]); // stmw r18, 0x230(r1)']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Processing opcode: addi, operands: ['r30', 'r4', '0x0']
Translated addi r30 r4 0x0 to: ['gc_env.r[30] = gc_env.r[4] + 0; // addi r30, r4, 0x0']
Processing opcode: addi, operands: ['r28', 'r6', '0x0']
Translated addi r28 r6 0x0 to: ['gc_env.r[28] = gc_env.r[6] + 0; // addi r28, r6, 0x0']
Processing opcode: addi, operands: ['r25', 'r5', '0x0']
Translated addi r25 r5 0x0 to: ['gc_env.r[25] = gc_env.r[5] + 0; // addi r25, r5, 0x0']
Processing opcode: addi, operands: ['r26', 'r1', '0x21c']
Translated addi r26 r1 0x21c to: ['gc_env.r[26] = gc_env.r[1] + 540; // addi r26, r1, 0x21c']
Processing opcode: addi, operands: ['r23', 'r1', '0x21b']
Translated addi r23 r1 0x21b to: ['gc_env.r[23] = gc_env.r[1] + 539; // addi r23, r1, 0x21b']
Processing opcode: addi, operands: ['r20', 'r7', '"@stringBase0_8001A600"@l']
Translated addi r20 r7 "@stringBase0_8001A600"@l to: ['gc_env.r[20] = gc_env.r[7] + ((uint32_t)&_stringBase0_8001A600 & 0xFFFF); // addi r20, r7, "@stringBase0_8001A600"@l']
Processing opcode: li, operands: ['r27', '0x0']
Translated li r27 0x0 to: ['gc_env.r[27] = 0x0; // li r27, 0x0']
Processing opcode: stb, operands: ['r0', '0x19(r1)']
Translated stb r0 0x19(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x19, gc_env.r[0]); // stb r0, 0x19(r1)']
Translated b .L_80012DC4 to: goto L_80012DC4;
Processing opcode: addi, operands: ['r3', 'r25', '0x0']
Translated addi r3 r25 0x0 to: ['gc_env.r[3] = gc_env.r[25] + 0; // addi r3, r25, 0x0']
Processing opcode: li, operands: ['r4', '0x25']
Translated li r4 0x25 to: ['gc_env.r[4] = 0x25; // li r4, 0x25']
Translated bl strchr to: strchr();
Translated mr. r24 r3 to: gc_env.r[24] = gc_env.r[3]; // Move register
Translated bne .L_80012844 to: if (gc_env.cr[0] != 0) goto L_80012844;
Translated mr r3 r25 to: gc_env.r[3] = gc_env.r[25]; // Move register
Translated bl strlen to: strlen();
Translated mr. r5 r3 to: gc_env.r[5] = gc_env.r[3]; // Move register
Processing opcode: add, operands: ['r27', 'r27', 'r5']
Translated add r27 r27 r5 to: ['gc_env.r[27] = gc_env.r[27] + gc_env.r[5]; // add r27, r27, r5']
Translated beq .L_80012DD0 to: if (gc_env.cr[0] == 0) goto L_80012DD0;
Processing opcode: addi, operands: ['r12', 'r31', '0x0']
Translated addi r12 r31 0x0 to: ['gc_env.r[12] = gc_env.r[31] + 0; // addi r12, r31, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r25', '0x0']
Translated addi r4 r25 0x0 to: ['gc_env.r[4] = gc_env.r[25] + 0; // addi r4, r25, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012DD0 to: if (gc_env.cr[0] != 0) goto L_80012DD0;
Processing opcode: li, operands: ['r3', '-0x1']
Translated li r3 -0x1 to: ['gc_env.r[3] = -0x1; // li r3, -0x1']
Translated b .L_80012DD4 to: goto L_80012DD4;
Processing opcode: subf, operands: ['r5', 'r25', 'r24']
Translated subf. r5 r25 r24 to: ['gc_env.r[5] = gc_env.r[24] - gc_env.r[25]; // subf r5, r25, r24']
Processing opcode: add, operands: ['r27', 'r27', 'r5']
Translated add r27 r27 r5 to: ['gc_env.r[27] = gc_env.r[27] + gc_env.r[5]; // add r27, r27, r5']
Translated beq .L_80012874 to: if (gc_env.cr[0] == 0) goto L_80012874;
Processing opcode: addi, operands: ['r12', 'r31', '0x0']
Translated addi r12 r31 0x0 to: ['gc_env.r[12] = gc_env.r[31] + 0; // addi r12, r31, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r25', '0x0']
Translated addi r4 r25 0x0 to: ['gc_env.r[4] = gc_env.r[25] + 0; // addi r4, r25, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012874 to: if (gc_env.cr[0] != 0) goto L_80012874;
Processing opcode: li, operands: ['r3', '-0x1']
Translated li r3 -0x1 to: ['gc_env.r[3] = -0x1; // li r3, -0x1']
Translated b .L_80012DD4 to: goto L_80012DD4;
Processing opcode: addi, operands: ['r3', 'r24', '0x0']
Translated addi r3 r24 0x0 to: ['gc_env.r[3] = gc_env.r[24] + 0; // addi r3, r24, 0x0']
Processing opcode: addi, operands: ['r4', 'r28', '0x0']
Translated addi r4 r28 0x0 to: ['gc_env.r[4] = gc_env.r[28] + 0; // addi r4, r28, 0x0']
Processing opcode: addi, operands: ['r5', 'r1', '0x21c']
Translated addi r5 r1 0x21c to: ['gc_env.r[5] = gc_env.r[1] + 540; // addi r5, r1, 0x21c']
Translated bl parse_format_80013A58 to: parse_format_80013A58();
Processing opcode: lbz, operands: ['r0', '0x221(r1)']
Translated lbz r0 0x221(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x221); // lbz r0, 0x221(r1)']
Processing opcode: addi, operands: ['r25', 'r3', '0x0']
Translated addi r25 r3 0x0 to: ['gc_env.r[25] = gc_env.r[3] + 0; // addi r25, r3, 0x0']
Translated cmpwi r0 0x69 to: gc_env.cr[0] = (gc_env.r[0] == 0x69) ? 0 : (gc_env.r[0] < 0x69 ? -1 : 1); // Compare with immediate
Translated beq .L_80012934 to: if (gc_env.cr[0] == 0) goto L_80012934;
Translated bge .L_800128EC to: if (gc_env.cr[0] >= 0) goto L_800128EC;
Translated cmpwi r0 0x58 to: gc_env.cr[0] = (gc_env.r[0] == 0x58) ? 0 : (gc_env.r[0] < 0x58 ? -1 : 1); // Compare with immediate
Translated beq .L_800129F0 to: if (gc_env.cr[0] == 0) goto L_800129F0;
Translated bge .L_800128C8 to: if (gc_env.cr[0] >= 0) goto L_800128C8;
Translated cmpwi r0 0x45 to: gc_env.cr[0] = (gc_env.r[0] == 0x45) ? 0 : (gc_env.r[0] < 0x45 ? -1 : 1); // Compare with immediate
Translated beq .L_80012AAC to: if (gc_env.cr[0] == 0) goto L_80012AAC;
Translated bge .L_800128BC to: if (gc_env.cr[0] >= 0) goto L_800128BC;
Translated cmpwi r0 0x25 to: gc_env.cr[0] = (gc_env.r[0] == 0x25) ? 0 : (gc_env.r[0] < 0x25 ? -1 : 1); // Compare with immediate
Translated beq .L_80012C30 to: if (gc_env.cr[0] == 0) goto L_80012C30;
Translated b .L_80012C44 to: goto L_80012C44;
Translated cmpwi r0 0x47 to: gc_env.cr[0] = (gc_env.r[0] == 0x47) ? 0 : (gc_env.r[0] < 0x47 ? -1 : 1); // Compare with immediate
Translated beq .L_80012AAC to: if (gc_env.cr[0] == 0) goto L_80012AAC;
Translated b .L_80012C44 to: goto L_80012C44;
Translated cmpwi r0 0x64 to: gc_env.cr[0] = (gc_env.r[0] == 0x64) ? 0 : (gc_env.r[0] < 0x64 ? -1 : 1); // Compare with immediate
Translated beq .L_80012934 to: if (gc_env.cr[0] == 0) goto L_80012934;
Translated bge .L_800128E0 to: if (gc_env.cr[0] >= 0) goto L_800128E0;
Translated cmpwi r0 0x63 to: gc_env.cr[0] = (gc_env.r[0] == 0x63) ? 0 : (gc_env.r[0] < 0x63 ? -1 : 1); // Compare with immediate
Translated bge .L_80012C0C to: if (gc_env.cr[0] >= 0) goto L_80012C0C;
Translated b .L_80012C44 to: goto L_80012C44;
Translated cmpwi r0 0x68 to: gc_env.cr[0] = (gc_env.r[0] == 0x68) ? 0 : (gc_env.r[0] < 0x68 ? -1 : 1); // Compare with immediate
Translated bge .L_80012C44 to: if (gc_env.cr[0] >= 0) goto L_80012C44;
Translated b .L_80012AAC to: goto L_80012AAC;
Translated cmpwi r0 0x75 to: gc_env.cr[0] = (gc_env.r[0] == 0x75) ? 0 : (gc_env.r[0] < 0x75 ? -1 : 1); // Compare with immediate
Translated beq .L_800129F0 to: if (gc_env.cr[0] == 0) goto L_800129F0;
Translated bge .L_8001291C to: if (gc_env.cr[0] >= 0) goto L_8001291C;
Translated cmpwi r0 0x6f to: gc_env.cr[0] = (gc_env.r[0] == 0x6f) ? 0 : (gc_env.r[0] < 0x6f ? -1 : 1); // Compare with immediate
Translated beq .L_800129F0 to: if (gc_env.cr[0] == 0) goto L_800129F0;
Translated bge .L_80012910 to: if (gc_env.cr[0] >= 0) goto L_80012910;
Translated cmpwi r0 0x6e to: gc_env.cr[0] = (gc_env.r[0] == 0x6e) ? 0 : (gc_env.r[0] < 0x6e ? -1 : 1); // Compare with immediate
Translated bge .L_80012BA4 to: if (gc_env.cr[0] >= 0) goto L_80012BA4;
Translated b .L_80012C44 to: goto L_80012C44;
Translated cmpwi r0 0x73 to: gc_env.cr[0] = (gc_env.r[0] == 0x73) ? 0 : (gc_env.r[0] < 0x73 ? -1 : 1); // Compare with immediate
Translated beq .L_80012AD0 to: if (gc_env.cr[0] == 0) goto L_80012AD0;
Translated b .L_80012C44 to: goto L_80012C44;
Translated cmpwi r0 0xff to: gc_env.cr[0] = (gc_env.r[0] == 0xff) ? 0 : (gc_env.r[0] < 0xff ? -1 : 1); // Compare with immediate
Translated beq .L_80012C44 to: if (gc_env.cr[0] == 0) goto L_80012C44;
Translated bge .L_80012C44 to: if (gc_env.cr[0] >= 0) goto L_80012C44;
Translated cmpwi r0 0x78 to: gc_env.cr[0] = (gc_env.r[0] == 0x78) ? 0 : (gc_env.r[0] < 0x78 ? -1 : 1); // Compare with immediate
Translated beq .L_800129F0 to: if (gc_env.cr[0] == 0) goto L_800129F0;
Translated b .L_80012C44 to: goto L_80012C44;
Processing opcode: lbz, operands: ['r0', '0x220(r1)']
Translated lbz r0 0x220(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x220); // lbz r0, 0x220(r1)']
Translated cmplwi r0 0x3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x3) ? 0 : ((uint32_t)gc_env.r[0] < 0x3 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012954 to: if (gc_env.cr[0] != 0) goto L_80012954;
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl __va_arg to: __va_arg();
Processing opcode: lwz, operands: ['r29', '0x0(r3)']
Translated lwz r29 0x0(r3) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r29, (r3)']
Translated b .L_80012984 to: goto L_80012984;
Translated cmplwi r0 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x4) ? 0 : ((uint32_t)gc_env.r[0] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012974 to: if (gc_env.cr[0] != 0) goto L_80012974;
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Translated bl __va_arg to: __va_arg();
Processing opcode: lwz, operands: ['r21', '0x0(r3)']
Translated lwz r21 0x0(r3) to: ['gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r21, (r3)']
Processing opcode: lwz, operands: ['r22', '0x4(r3)']
Translated lwz r22 0x4(r3) to: ['gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4); // lwz r22, 0x4(r3)']
Translated b .L_80012984 to: goto L_80012984;
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl __va_arg to: __va_arg();
Processing opcode: lwz, operands: ['r29', '0x0(r3)']
Translated lwz r29 0x0(r3) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r29, (r3)']
Processing opcode: lbz, operands: ['r3', '0x220(r1)']
Translated lbz r3 0x220(r1) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x220); // lbz r3, 0x220(r1)']
Translated cmplwi r3 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x2) ? 0 : ((uint32_t)gc_env.r[3] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012998 to: if (gc_env.cr[0] != 0) goto L_80012998;
Translated extsh r0 r29 to: ['gc_env.r[0] = (int32_t)(int16_t)(gc_env.r[29] & 0xFFFF); // extsh r0, r29']
Translated mr r29 r0 to: gc_env.r[29] = gc_env.r[0]; // Move register
Translated cmplwi r3 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x1) ? 0 : ((uint32_t)gc_env.r[3] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800129A8 to: if (gc_env.cr[0] != 0) goto L_800129A8;
Translated extsb r0 r29 to: ['gc_env.r[0] = (int32_t)(int8_t)(gc_env.r[29] & 0xFF); // extsb r0, r29']
Translated mr r29 r0 to: gc_env.r[29] = gc_env.r[0]; // Move register
Translated cmplwi r3 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x4) ? 0 : ((uint32_t)gc_env.r[3] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800129D0 to: if (gc_env.cr[0] != 0) goto L_800129D0;
Processing opcode: addi, operands: ['r4', 'r22', '0x0']
Translated addi r4 r22 0x0 to: ['gc_env.r[4] = gc_env.r[22] + 0; // addi r4, r22, 0x0']
Processing opcode: addi, operands: ['r3', 'r21', '0x0']
Translated addi r3 r21 0x0 to: ['gc_env.r[3] = gc_env.r[21] + 0; // addi r3, r21, 0x0']
Processing opcode: addi, operands: ['r5', 'r26', '0x0']
Translated addi r5 r26 0x0 to: ['gc_env.r[5] = gc_env.r[26] + 0; // addi r5, r26, 0x0']
Processing opcode: addi, operands: ['r6', 'r1', '0x21c']
Translated addi r6 r1 0x21c to: ['gc_env.r[6] = gc_env.r[1] + 540; // addi r6, r1, 0x21c']
Translated bl longlong2str_80013554 to: longlong2str_80013554();
Translated mr. r19 r3 to: gc_env.r[19] = gc_env.r[3]; // Move register
Translated beq .L_80012C44 to: if (gc_env.cr[0] == 0) goto L_80012C44;
Translated b .L_800129E8 to: goto L_800129E8;
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Processing opcode: addi, operands: ['r4', 'r26', '0x0']
Translated addi r4 r26 0x0 to: ['gc_env.r[4] = gc_env.r[26] + 0; // addi r4, r26, 0x0']
Processing opcode: addi, operands: ['r5', 'r1', '0x21c']
Translated addi r5 r1 0x21c to: ['gc_env.r[5] = gc_env.r[1] + 540; // addi r5, r1, 0x21c']
Translated bl long2str_80013834 to: long2str_80013834();
Translated mr. r19 r3 to: gc_env.r[19] = gc_env.r[3]; // Move register
Translated beq .L_80012C44 to: if (gc_env.cr[0] == 0) goto L_80012C44;
Processing opcode: subf, operands: ['r24', 'r19', 'r23']
Translated subf r24 r19 r23 to: ['gc_env.r[24] = gc_env.r[23] - gc_env.r[19]; // subf r24, r19, r23']
Translated b .L_80012C84 to: goto L_80012C84;
Processing opcode: lbz, operands: ['r0', '0x220(r1)']
Translated lbz r0 0x220(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x220); // lbz r0, 0x220(r1)']
Translated cmplwi r0 0x3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x3) ? 0 : ((uint32_t)gc_env.r[0] < 0x3 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012A10 to: if (gc_env.cr[0] != 0) goto L_80012A10;
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl __va_arg to: __va_arg();
Processing opcode: lwz, operands: ['r29', '0x0(r3)']
Translated lwz r29 0x0(r3) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r29, (r3)']
Translated b .L_80012A40 to: goto L_80012A40;
Translated cmplwi r0 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x4) ? 0 : ((uint32_t)gc_env.r[0] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012A30 to: if (gc_env.cr[0] != 0) goto L_80012A30;
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Translated bl __va_arg to: __va_arg();
Processing opcode: lwz, operands: ['r21', '0x0(r3)']
Translated lwz r21 0x0(r3) to: ['gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r21, (r3)']
Processing opcode: lwz, operands: ['r22', '0x4(r3)']
Translated lwz r22 0x4(r3) to: ['gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4); // lwz r22, 0x4(r3)']
Translated b .L_80012A40 to: goto L_80012A40;
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl __va_arg to: __va_arg();
Processing opcode: lwz, operands: ['r29', '0x0(r3)']
Translated lwz r29 0x0(r3) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r29, (r3)']
Processing opcode: lbz, operands: ['r3', '0x220(r1)']
Translated lbz r3 0x220(r1) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x220); // lbz r3, 0x220(r1)']
Translated cmplwi r3 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x2) ? 0 : ((uint32_t)gc_env.r[3] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012A54 to: if (gc_env.cr[0] != 0) goto L_80012A54;
Translated clrlwi r0 r29 16 to: ['gc_env.r[0] = gc_env.r[29] & 0xFFFF; // clrlwi r0, r29, 16']
Translated mr r29 r0 to: gc_env.r[29] = gc_env.r[0]; // Move register
Translated cmplwi r3 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x1) ? 0 : ((uint32_t)gc_env.r[3] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012A64 to: if (gc_env.cr[0] != 0) goto L_80012A64;
Translated clrlwi r0 r29 24 to: ['gc_env.r[0] = gc_env.r[29] & 0xFF; // clrlwi r0, r29, 24']
Translated mr r29 r0 to: gc_env.r[29] = gc_env.r[0]; // Move register
Translated cmplwi r3 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x4) ? 0 : ((uint32_t)gc_env.r[3] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012A8C to: if (gc_env.cr[0] != 0) goto L_80012A8C;
Processing opcode: addi, operands: ['r4', 'r22', '0x0']
Translated addi r4 r22 0x0 to: ['gc_env.r[4] = gc_env.r[22] + 0; // addi r4, r22, 0x0']
Processing opcode: addi, operands: ['r3', 'r21', '0x0']
Translated addi r3 r21 0x0 to: ['gc_env.r[3] = gc_env.r[21] + 0; // addi r3, r21, 0x0']
Processing opcode: addi, operands: ['r5', 'r26', '0x0']
Translated addi r5 r26 0x0 to: ['gc_env.r[5] = gc_env.r[26] + 0; // addi r5, r26, 0x0']
Processing opcode: addi, operands: ['r6', 'r1', '0x21c']
Translated addi r6 r1 0x21c to: ['gc_env.r[6] = gc_env.r[1] + 540; // addi r6, r1, 0x21c']
Translated bl longlong2str_80013554 to: longlong2str_80013554();
Translated mr. r19 r3 to: gc_env.r[19] = gc_env.r[3]; // Move register
Translated beq .L_80012C44 to: if (gc_env.cr[0] == 0) goto L_80012C44;
Translated b .L_80012AA4 to: goto L_80012AA4;
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Processing opcode: addi, operands: ['r4', 'r26', '0x0']
Translated addi r4 r26 0x0 to: ['gc_env.r[4] = gc_env.r[26] + 0; // addi r4, r26, 0x0']
Processing opcode: addi, operands: ['r5', 'r1', '0x21c']
Translated addi r5 r1 0x21c to: ['gc_env.r[5] = gc_env.r[1] + 540; // addi r5, r1, 0x21c']
Translated bl long2str_80013834 to: long2str_80013834();
Translated mr. r19 r3 to: gc_env.r[19] = gc_env.r[3]; // Move register
Translated beq .L_80012C44 to: if (gc_env.cr[0] == 0) goto L_80012C44;
Processing opcode: subf, operands: ['r24', 'r19', 'r23']
Translated subf r24 r19 r23 to: ['gc_env.r[24] = gc_env.r[23] - gc_env.r[19]; // subf r24, r19, r23']
Translated b .L_80012C84 to: goto L_80012C84;
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: addi, operands: ['r4', 'r26', '0x0']
Translated addi r4 r26 0x0 to: ['gc_env.r[4] = gc_env.r[26] + 0; // addi r4, r26, 0x0']
Processing opcode: addi, operands: ['r5', 'r1', '0x21c']
Translated addi r5 r1 0x21c to: ['gc_env.r[5] = gc_env.r[1] + 540; // addi r5, r1, 0x21c']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl float2str to: float2str();
Translated mr. r19 r3 to: gc_env.r[19] = gc_env.r[3]; // Move register
Translated beq .L_80012C44 to: if (gc_env.cr[0] == 0) goto L_80012C44;
Processing opcode: subf, operands: ['r24', 'r19', 'r23']
Translated subf r24 r19 r23 to: ['gc_env.r[24] = gc_env.r[23] - gc_env.r[19]; // subf r24, r19, r23']
Translated b .L_80012C84 to: goto L_80012C84;
Processing opcode: lbz, operands: ['r0', '0x220(r1)']
Translated lbz r0 0x220(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x220); // lbz r0, 0x220(r1)']
Translated cmplwi r0 0x6 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x6) ? 0 : ((uint32_t)gc_env.r[0] < 0x6 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012B14 to: if (gc_env.cr[0] != 0) goto L_80012B14;
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl __va_arg to: __va_arg();
Processing opcode: lwz, operands: ['r4', '0x0(r3)']
Translated lwz r4 0x0(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r4, (r3)']
Translated cmplwi r4 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x0) ? 0 : ((uint32_t)gc_env.r[4] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012AF8 to: if (gc_env.cr[0] != 0) goto L_80012AF8;
Processing opcode: li, operands: ['r4', '"@wstringBase0_8001EE38"@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Processing opcode: addi, operands: ['r3', 'r1', '0x1c']
Translated addi r3 r1 0x1c to: ['gc_env.r[3] = gc_env.r[1] + 28; // addi r3, r1, 0x1c']
Processing opcode: li, operands: ['r5', '0x200']
Translated li r5 0x200 to: ['gc_env.r[5] = 0x200; // li r5, 0x200']
Translated bl wcstombs to: wcstombs((char*)gc_env.r[3], (const wchar_t*)gc_env.r[4], gc_env.r[5]);
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated blt .L_80012C44 to: ['if (gc_env.cr[0] & 0x8) goto L_80012C44; // blt .L_80012C44']
Processing opcode: addi, operands: ['r19', 'r1', '0x1c']
Translated addi r19 r1 0x1c to: ['gc_env.r[19] = gc_env.r[1] + 28; // addi r19, r1, 0x1c']
Translated b .L_80012B24 to: goto L_80012B24;
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl __va_arg to: __va_arg();
Processing opcode: lwz, operands: ['r19', '0x0(r3)']
Translated lwz r19 0x0(r3) to: ['gc_env.r[19] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r19, (r3)']
Translated cmplwi r19 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[19] == 0x0) ? 0 : ((uint32_t)gc_env.r[19] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012B30 to: if (gc_env.cr[0] != 0) goto L_80012B30;
Translated mr r19 r20 to: gc_env.r[19] = gc_env.r[20]; // Move register
Processing opcode: lbz, operands: ['r0', '0x21f(r1)']
Translated lbz r0 0x21f(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x21f); // lbz r0, 0x21f(r1)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80012B64 to: if (gc_env.cr[0] == 0) goto L_80012B64;
Processing opcode: lbz, operands: ['r0', '0x21e(r1)']
Translated lbz r0 0x21e(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x21e); // lbz r0, 0x21e(r1)']
Processing opcode: lbz, operands: ['r24', '0x0(r19)']
Translated lbz r24 0x0(r19) to: ['gc_env.r[24] = gc_mem_read8(gc_env.ram, gc_env.r[19] + 0x0); // lbz r24, 0x0(r19)']
Processing opcode: addi, operands: ['r19', 'r19', '0x1']
Translated addi r19 r19 0x1 to: ['gc_env.r[19] += 1; // addi r19, r19, 0x1']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80012C84 to: if (gc_env.cr[0] == 0) goto L_80012C84;
Processing opcode: lwz, operands: ['r0', '0x228(r1)']
Translated lwz r0 0x228(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x228); // lwz r0, 0x228(r1)']
Translated cmpw r24 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[24] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[24] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r24, r0']
Translated ble .L_80012C84 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80012C84; // ble .L_80012C84']
Translated mr r24 r0 to: gc_env.r[24] = gc_env.r[0]; // Move register
Translated b .L_80012C84 to: goto L_80012C84;
Processing opcode: lbz, operands: ['r0', '0x21e(r1)']
Translated lbz r0 0x21e(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x21e); // lbz r0, 0x21e(r1)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80012B94 to: if (gc_env.cr[0] == 0) goto L_80012B94;
Processing opcode: lwz, operands: ['r24', '0x228(r1)']
Translated lwz r24 0x228(r1) to: ['gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x228); // lwz r24, 0x228(r1)']
Processing opcode: addi, operands: ['r3', 'r19', '0x0']
Translated addi r3 r19 0x0 to: ['gc_env.r[3] = gc_env.r[19] + 0; // addi r3, r19, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: addi, operands: ['r5', 'r24', '0x0']
Translated addi r5 r24 0x0 to: ['gc_env.r[5] = gc_env.r[24] + 0; // addi r5, r24, 0x0']
Translated bl memchr to: memchr();
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80012C84 to: if (gc_env.cr[0] == 0) goto L_80012C84;
Processing opcode: subf, operands: ['r24', 'r19', 'r3']
Translated subf r24 r19 r3 to: ['gc_env.r[24] = gc_env.r[3] - gc_env.r[19]; // subf r24, r19, r3']
Translated b .L_80012C84 to: goto L_80012C84;
Translated mr r3 r19 to: gc_env.r[3] = gc_env.r[19]; // Move register
Translated bl strlen to: strlen();
Translated mr r24 r3 to: gc_env.r[24] = gc_env.r[3]; // Move register
Translated b .L_80012C84 to: goto L_80012C84;
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl __va_arg to: __va_arg();
Processing opcode: lbz, operands: ['r0', '0x220(r1)']
Translated lbz r0 0x220(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x220); // lbz r0, 0x220(r1)']
Processing opcode: lwz, operands: ['r3', '0x0(r3)']
Translated lwz r3 0x0(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r3, (r3)']
Translated cmpwi r0 0x2 to: gc_env.cr[0] = (gc_env.r[0] == 0x2) ? 0 : (gc_env.r[0] < 0x2 ? -1 : 1); // Compare with immediate
Translated beq .L_80012BE8 to: if (gc_env.cr[0] == 0) goto L_80012BE8;
Translated bge .L_80012BD0 to: if (gc_env.cr[0] >= 0) goto L_80012BD0;
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80012BE0 to: if (gc_env.cr[0] == 0) goto L_80012BE0;
Translated b .L_80012DC4 to: goto L_80012DC4;
Translated cmpwi r0 0x4 to: gc_env.cr[0] = (gc_env.r[0] == 0x4) ? 0 : (gc_env.r[0] < 0x4 ? -1 : 1); // Compare with immediate
Translated beq .L_80012BFC to: if (gc_env.cr[0] == 0) goto L_80012BFC;
Translated bge .L_80012DC4 to: if (gc_env.cr[0] >= 0) goto L_80012DC4;
Translated b .L_80012BF4 to: goto L_80012BF4;
Processing opcode: stw, operands: ['r27', '0x0(r3)']
Translated stw r27 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[27]); // stw r27, (r3)']
Translated b .L_80012DC4 to: goto L_80012DC4;
Translated extsh r0 r27 to: ['gc_env.r[0] = (int32_t)(int16_t)(gc_env.r[27] & 0xFFFF); // extsh r0, r27']
Processing opcode: sth, operands: ['r0', '0x0(r3)']
Translated sth r0 0x0(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3], gc_env.r[0]); // sth r0, (r3)']
Translated b .L_80012DC4 to: goto L_80012DC4;
Processing opcode: stw, operands: ['r27', '0x0(r3)']
Translated stw r27 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[27]); // stw r27, (r3)']
Translated b .L_80012DC4 to: goto L_80012DC4;
Processing opcode: stw, operands: ['r27', '0x4(r3)']
Translated stw r27 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[27]); // stw r27, 0x4(r3)']
Translated srawi r0 r27 31 to: ['gc_env.r[0] = ((int32_t)gc_env.r[27]) >> 31; // srawi r0, r27, 31']
Processing opcode: stw, operands: ['r0', '0x0(r3)']
Translated stw r0 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[0]); // stw r0, (r3)']
Translated b .L_80012DC4 to: goto L_80012DC4;
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: addi, operands: ['r19', 'r1', '0x1c']
Translated addi r19 r1 0x1c to: ['gc_env.r[19] = gc_env.r[1] + 28; // addi r19, r1, 0x1c']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl __va_arg to: __va_arg();
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Processing opcode: li, operands: ['r24', '0x1']
Translated li r24 0x1 to: ['gc_env.r[24] = 0x1; // li r24, 0x1']
Translated extsb r0 r0 to: ['gc_env.r[0] = (int32_t)(int8_t)(gc_env.r[0] & 0xFF); // extsb r0, r0']
Processing opcode: stb, operands: ['r0', '0x1c(r1)']
Translated stb r0 0x1c(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[0]); // stb r0, 0x1C(r1)']
Translated b .L_80012C84 to: goto L_80012C84;
Processing opcode: li, operands: ['r0', '0x25']
Translated li r0 0x25 to: ['gc_env.r[0] = 0x25; // li r0, 0x25']
Processing opcode: stb, operands: ['r0', '0x1c(r1)']
Translated stb r0 0x1c(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[0]); // stb r0, 0x1C(r1)']
Processing opcode: addi, operands: ['r19', 'r1', '0x1c']
Translated addi r19 r1 0x1c to: ['gc_env.r[19] = gc_env.r[1] + 28; // addi r19, r1, 0x1c']
Processing opcode: li, operands: ['r24', '0x1']
Translated li r24 0x1 to: ['gc_env.r[24] = 0x1; // li r24, 0x1']
Translated b .L_80012C84 to: goto L_80012C84;
Translated mr r3 r24 to: gc_env.r[3] = gc_env.r[24]; // Move register
Translated bl strlen to: strlen();
Translated mr. r5 r3 to: gc_env.r[5] = gc_env.r[3]; // Move register
Processing opcode: add, operands: ['r27', 'r27', 'r5']
Translated add r27 r27 r5 to: ['gc_env.r[27] = gc_env.r[27] + gc_env.r[5]; // add r27, r27, r5']
Translated beq .L_80012C7C to: if (gc_env.cr[0] == 0) goto L_80012C7C;
Processing opcode: addi, operands: ['r12', 'r31', '0x0']
Translated addi r12 r31 0x0 to: ['gc_env.r[12] = gc_env.r[31] + 0; // addi r12, r31, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r24', '0x0']
Translated addi r4 r24 0x0 to: ['gc_env.r[4] = gc_env.r[24] + 0; // addi r4, r24, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012C7C to: if (gc_env.cr[0] != 0) goto L_80012C7C;
Processing opcode: li, operands: ['r3', '-0x1']
Translated li r3 -0x1 to: ['gc_env.r[3] = -0x1; // li r3, -0x1']
Translated b .L_80012DD4 to: goto L_80012DD4;
Translated mr r3 r27 to: gc_env.r[3] = gc_env.r[27]; // Move register
Translated b .L_80012DD4 to: goto L_80012DD4;
Processing opcode: lbz, operands: ['r0', '0x21c(r1)']
Translated lbz r0 0x21c(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x21c); // lbz r0, 0x21c(r1)']
Processing opcode: addi, operands: ['r18', 'r24', '0x0']
Translated addi r18 r24 0x0 to: ['gc_env.r[18] = gc_env.r[24] + 0; // addi r18, r24, 0x0']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80012D40 to: if (gc_env.cr[0] == 0) goto L_80012D40;
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012CA4 to: if (gc_env.cr[0] != 0) goto L_80012CA4;
Processing opcode: li, operands: ['r0', '0x30']
Translated li r0 0x30 to: ['gc_env.r[0] = 0x30; // li r0, 0x30']
Translated b .L_80012CA8 to: goto L_80012CA8;
Processing opcode: li, operands: ['r0', '0x20']
Translated li r0 0x20 to: ['gc_env.r[0] = 0x20; // li r0, 0x20']
Translated extsb r0 r0 to: ['gc_env.r[0] = (int32_t)(int8_t)(gc_env.r[0] & 0xFF); // extsb r0, r0']
Processing opcode: stb, operands: ['r0', '0x19(r1)']
Translated stb r0 0x19(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x19, gc_env.r[0]); // stb r0, 0x19(r1)']
Processing opcode: lbz, operands: ['r0', '0x0(r19)']
Translated lbz r0 0x0(r19) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[19] + 0x0); // lbz r0, 0x0(r19)']
Translated extsb r0 r0 to: ['gc_env.r[0] = (int32_t)(int8_t)(gc_env.r[0] & 0xFF); // extsb r0, r0']
Translated cmpwi r0 0x2b to: gc_env.cr[0] = (gc_env.r[0] == 0x2b) ? 0 : (gc_env.r[0] < 0x2b ? -1 : 1); // Compare with immediate
Translated beq .L_80012CC8 to: if (gc_env.cr[0] == 0) goto L_80012CC8;
Translated cmpwi r0 0x2d to: gc_env.cr[0] = (gc_env.r[0] == 0x2d) ? 0 : (gc_env.r[0] < 0x2d ? -1 : 1); // Compare with immediate
Translated bne .L_80012D34 to: if (gc_env.cr[0] != 0) goto L_80012D34;
Processing opcode: lbz, operands: ['r0', '0x19(r1)']
Translated lbz r0 0x19(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x19); // lbz r0, 0x19(r1)']
Translated cmpwi r0 0x30 to: gc_env.cr[0] = (gc_env.r[0] == 0x30) ? 0 : (gc_env.r[0] < 0x30 ? -1 : 1); // Compare with immediate
Translated bne .L_80012D34 to: if (gc_env.cr[0] != 0) goto L_80012D34;
Processing opcode: addi, operands: ['r12', 'r31', '0x0']
Translated addi r12 r31 0x0 to: ['gc_env.r[12] = gc_env.r[31] + 0; // addi r12, r31, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r19', '0x0']
Translated addi r4 r19 0x0 to: ['gc_env.r[4] = gc_env.r[19] + 0; // addi r4, r19, 0x0']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012CFC to: if (gc_env.cr[0] != 0) goto L_80012CFC;
Processing opcode: li, operands: ['r3', '-0x1']
Translated li r3 -0x1 to: ['gc_env.r[3] = -0x1; // li r3, -0x1']
Translated b .L_80012DD4 to: goto L_80012DD4;
Processing opcode: addi, operands: ['r19', 'r19', '0x1']
Translated addi r19 r19 0x1 to: ['gc_env.r[19] += 1; // addi r19, r19, 0x1']
Processing opcode: subi, operands: ['r24', 'r24', '0x1']
Translated subi r24 r24 0x1 to: ['gc_env.r[24] = gc_env.r[24] - 1; // subi r24, r24, 1']
Translated b .L_80012D34 to: goto L_80012D34;
Processing opcode: addi, operands: ['r12', 'r31', '0x0']
Translated addi r12 r31 0x0 to: ['gc_env.r[12] = gc_env.r[31] + 0; // addi r12, r31, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x19']
Translated addi r4 r1 0x19 to: ['gc_env.r[4] = gc_env.r[1] + 25; // addi r4, r1, 0x19']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012D30 to: if (gc_env.cr[0] != 0) goto L_80012D30;
Processing opcode: li, operands: ['r3', '-0x1']
Translated li r3 -0x1 to: ['gc_env.r[3] = -0x1; // li r3, -0x1']
Translated b .L_80012DD4 to: goto L_80012DD4;
Processing opcode: addi, operands: ['r18', 'r18', '0x1']
Translated addi r18 r18 0x1 to: ['gc_env.r[18] += 1; // addi r18, r18, 0x1']
Processing opcode: lwz, operands: ['r0', '0x224(r1)']
Translated lwz r0 0x224(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x224); // lwz r0, 0x224(r1)']
Translated cmpw r18 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[18] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[18] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r18, r0']
Translated blt .L_80012D08 to: ['if (gc_env.cr[0] & 0x8) goto L_80012D08; // blt .L_80012D08']
Translated cmpwi r24 0x0 to: gc_env.cr[0] = (gc_env.r[24] == 0x0) ? 0 : (gc_env.r[24] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80012D70 to: if (gc_env.cr[0] == 0) goto L_80012D70;
Processing opcode: addi, operands: ['r12', 'r31', '0x0']
Translated addi r12 r31 0x0 to: ['gc_env.r[12] = gc_env.r[31] + 0; // addi r12, r31, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r19', '0x0']
Translated addi r4 r19 0x0 to: ['gc_env.r[4] = gc_env.r[19] + 0; // addi r4, r19, 0x0']
Processing opcode: addi, operands: ['r5', 'r24', '0x0']
Translated addi r5 r24 0x0 to: ['gc_env.r[5] = gc_env.r[24] + 0; // addi r5, r24, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012D70 to: if (gc_env.cr[0] != 0) goto L_80012D70;
Processing opcode: li, operands: ['r3', '-0x1']
Translated li r3 -0x1 to: ['gc_env.r[3] = -0x1; // li r3, -0x1']
Translated b .L_80012DD4 to: goto L_80012DD4;
Processing opcode: lbz, operands: ['r0', '0x21c(r1)']
Translated lbz r0 0x21c(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x21c); // lbz r0, 0x21c(r1)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012DC0 to: if (gc_env.cr[0] != 0) goto L_80012DC0;
Processing opcode: li, operands: ['r19', '0x20']
Translated li r19 0x20 to: ['gc_env.r[19] = 0x20; // li r19, 0x20']
Translated b .L_80012DB4 to: goto L_80012DB4;
Translated mr r12 r31 to: gc_env.r[12] = gc_env.r[31]; // Move register
Processing opcode: stb, operands: ['r19', '0x18(r1)']
Translated stb r19 0x18(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[19]); // stb r19, 0x18(r1)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x18']
Translated addi r4 r1 0x18 to: ['gc_env.r[4] = gc_env.r[1] + 24; // addi r4, r1, 0x18']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012DB0 to: if (gc_env.cr[0] != 0) goto L_80012DB0;
Processing opcode: li, operands: ['r3', '-0x1']
Translated li r3 -0x1 to: ['gc_env.r[3] = -0x1; // li r3, -0x1']
Translated b .L_80012DD4 to: goto L_80012DD4;
Processing opcode: addi, operands: ['r18', 'r18', '0x1']
Translated addi r18 r18 0x1 to: ['gc_env.r[18] += 1; // addi r18, r18, 0x1']
Processing opcode: lwz, operands: ['r0', '0x224(r1)']
Translated lwz r0 0x224(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x224); // lwz r0, 0x224(r1)']
Translated cmpw r18 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[18] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[18] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r18, r0']
Translated blt .L_80012D84 to: ['if (gc_env.cr[0] & 0x8) goto L_80012D84; // blt .L_80012D84']
Processing opcode: add, operands: ['r27', 'r27', 'r18']
Translated add r27 r27 r18 to: ['gc_env.r[27] = gc_env.r[27] + gc_env.r[18]; // add r27, r27, r18']
Processing opcode: lbz, operands: ['r0', '0x0(r25)']
Translated lbz r0 0x0(r25) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[25] + 0x0); // lbz r0, 0x0(r25)']
Translated extsb. r0 r0 to: ['gc_env.r[0] = (int32_t)(int8_t)(gc_env.r[0] & 0xFF); // extsb r0, r0', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_800127F8 to: if (gc_env.cr[0] != 0) goto L_800127F8;
Translated mr r3 r27 to: gc_env.r[3] = gc_env.r[27]; // Move register
Translated lmw r18 0x230(r1) to: ['gc_env.r[18] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x230); // lmw r18, 0x230(r1)', 'gc_env.r[19] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x234); // lmw r18, 0x230(r1)', 'gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x238); // lmw r18, 0x230(r1)', 'gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x23C); // lmw r18, 0x230(r1)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x240); // lmw r18, 0x230(r1)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x244); // lmw r18, 0x230(r1)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x248); // lmw r18, 0x230(r1)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24C); // lmw r18, 0x230(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x250); // lmw r18, 0x230(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x254); // lmw r18, 0x230(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x258); // lmw r18, 0x230(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x25C); // lmw r18, 0x230(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x260); // lmw r18, 0x230(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x264); // lmw r18, 0x230(r1)']
Processing opcode: lwz, operands: ['r0', '0x26c(r1)']
Translated lwz r0 0x26c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x26C); // lwz r0, 0x26C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x268']
Translated addi r1 r1 0x268 to: ['gc_env.r[1] += 616; // addi r1, r1, 0x268']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x60(r1)']
Translated stwu r1 -0x60(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x60, gc_env.r[1]); // stwu r1, -0x60(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x60;']
Translated stfd f31 0x58(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[31], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x58, temp); // stfd f31, 0x58(r1)']
Processing opcode: stw, operands: ['r31', '0x54(r1)']
Translated stw r31 0x54(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x54, gc_env.r[31]); // stw r31, 0x54(r1)']
Processing opcode: stw, operands: ['r30', '0x50(r1)']
Translated stw r30 0x50(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x50, gc_env.r[30]); // stw r30, 0x50(r1)']
Processing opcode: stw, operands: ['r29', '0x4c(r1)']
Translated stw r29 0x4c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4C, gc_env.r[29]); // stw r29, 0x4C(r1)']
Translated mr r29 r5 to: gc_env.r[29] = gc_env.r[5]; // Move register
Processing opcode: stw, operands: ['r28', '0x48(r1)']
Translated stw r28 0x48(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x48, gc_env.r[28]); // stw r28, 0x48(r1)']
Processing opcode: addi, operands: ['r28', 'r4', '0x0']
Translated addi r28 r4 0x0 to: ['gc_env.r[28] = gc_env.r[4] + 0; // addi r28, r4, 0x0']
Processing opcode: lbz, operands: ['r0', '0x4(r5)']
Translated lbz r0 0x4(r5) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x4); // lbz r0, 0x4(r5)']
Translated cmplwi r0 0x5 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x5) ? 0 : ((uint32_t)gc_env.r[0] < 0x5 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80012E2C to: if (gc_env.cr[0] != 0) goto L_80012E2C;
Processing opcode: li, operands: ['r4', '0x3']
Translated li r4 0x3 to: ['gc_env.r[4] = 0x3; // li r4, 0x3']
Translated bl __va_arg to: __va_arg();
Error in handler for lfd: name 'format_hex' is not defined
Translated b .L_80012E38 to: goto L_80012E38;
Processing opcode: li, operands: ['r4', '0x3']
Translated li r4 0x3 to: ['gc_env.r[4] = 0x3; // li r4, 0x3']
Translated bl __va_arg to: __va_arg();
Error in handler for lfd: name 'format_hex' is not defined
Processing opcode: lwz, operands: ['r0', '0xc(r29)']
Translated lwz r0 0xc(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r0, 0xC(r29)']
Translated cmpwi r0 0x1fd to: gc_env.cr[0] = (gc_env.r[0] == 0x1fd) ? 0 : (gc_env.r[0] < 0x1fd ? -1 : 1); // Compare with immediate
Translated ble .L_80012E4C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80012E4C; // ble .L_80012E4C']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_800133FC to: goto L_800133FC;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated fmr f1 f31 to: ['gc_env.f[1] = gc_env.f[31]; // fmr f1, f31']
Processing opcode: stb, operands: ['r0', '0x18(r1)']
Translated stb r0 0x18(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[0]); // stb r0, 0x18(r1)']
Processing opcode: li, operands: ['r0', '0x20']
Translated li r0 0x20 to: ['gc_env.r[0] = 0x20; // li r0, 0x20']
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Processing opcode: sth, operands: ['r0', '0x1a(r1)']
Translated sth r0 0x1a(r1) to: ['gc_mem_write16(gc_env.ram, gc_env.r[1] + 0x1A, gc_env.r[0]); // sth r0, 0x1A(r1)']
Processing opcode: addi, operands: ['r4', 'r1', '0x1c']
Translated addi r4 r1 0x1c to: ['gc_env.r[4] = gc_env.r[1] + 28; // addi r4, r1, 0x1c']
Translated bl fn_80011A1C to: fn_80011A1C();
Processing opcode: lbz, operands: ['r0', '0x20(r1)']
Translated lbz r0 0x20(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x20); // lbz r0, 0x20(r1)']
Processing opcode: addi, operands: ['r31', 'r1', '0x21']
Translated addi r31 r1 0x21 to: ['gc_env.r[31] = gc_env.r[1] + 33; // addi r31, r1, 0x21']
Processing opcode: add, operands: ['r4', 'r31', 'r0']
Translated add r4 r31 r0 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[0]; // add r4, r31, r0']
Translated b .L_80012E94 to: goto L_80012E94;
Processing opcode: lbz, operands: ['r3', '0x20(r1)']
Translated lbz r3 0x20(r1) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x20); // lbz r3, 0x20(r1)']
Processing opcode: subi, operands: ['r0', 'r3', '0x1']
Translated subi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] - 1; // subi r0, r3, 1']
Processing opcode: stb, operands: ['r0', '0x20(r1)']
Translated stb r0 0x20(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[0]); // stb r0, 0x20(r1)']
Translated lha r3 0x1e(r1) to: ['gc_env.r[3] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[1] + 0x1E); // lha r3, 0x1E(r1)']
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: sth, operands: ['r0', '0x1e(r1)']
Translated sth r0 0x1e(r1) to: ['gc_mem_write16(gc_env.ram, gc_env.r[1] + 0x1E, gc_env.r[0]); // sth r0, 0x1E(r1)']
Processing opcode: lbz, operands: ['r0', '0x20(r1)']
Translated lbz r0 0x20(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x20); // lbz r0, 0x20(r1)']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated ble .L_80012EAC to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80012EAC; // ble .L_80012EAC']
Translated lbzu r0 -0x1(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + -1); // lbzu r0, -1(r4)', 'gc_env.r[4] = gc_env.r[4] + -1;']
Translated cmpwi r0 0x30 to: gc_env.cr[0] = (gc_env.r[0] == 0x30) ? 0 : (gc_env.r[0] < 0x30 ? -1 : 1); // Compare with immediate
Translated beq .L_80012E7C to: if (gc_env.cr[0] == 0) goto L_80012E7C;
Processing opcode: lbz, operands: ['r0', '0x21(r1)']
Translated lbz r0 0x21(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x21); // lbz r0, 0x21(r1)']
Translated cmpwi r0 0x49 to: gc_env.cr[0] = (gc_env.r[0] == 0x49) ? 0 : (gc_env.r[0] < 0x49 ? -1 : 1); // Compare with immediate
Translated beq .L_80012EE0 to: if (gc_env.cr[0] == 0) goto L_80012EE0;
Translated bge .L_80012EC8 to: if (gc_env.cr[0] >= 0) goto L_80012EC8;
Translated cmpwi r0 0x30 to: gc_env.cr[0] = (gc_env.r[0] == 0x30) ? 0 : (gc_env.r[0] < 0x30 ? -1 : 1); // Compare with immediate
Translated beq .L_80012ED4 to: if (gc_env.cr[0] == 0) goto L_80012ED4;
Translated b .L_80012F48 to: goto L_80012F48;
Translated cmpwi r0 0x4e to: gc_env.cr[0] = (gc_env.r[0] == 0x4e) ? 0 : (gc_env.r[0] < 0x4e ? -1 : 1); // Compare with immediate
Translated beq .L_80012F28 to: if (gc_env.cr[0] == 0) goto L_80012F28;
Translated b .L_80012F48 to: goto L_80012F48;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: sth, operands: ['r0', '0x1e(r1)']
Translated sth r0 0x1e(r1) to: ['gc_mem_write16(gc_env.ram, gc_env.r[1] + 0x1E, gc_env.r[0]); // sth r0, 0x1E(r1)']
Translated b .L_80012F48 to: goto L_80012F48;
Translated lfd f0 lbl_8001F0C8@sda21(r0) to: ['gc_env.f[0] = *(double*)&lbl_8001F0C8; // lfd f0, lbl_8001F0C8@sda21(r0)']
Translated fcmpo cr0 f31 f0 to: ['gc_env.cr[0] = isnan(gc_env.f[31]) || isnan(gc_env.f[0]) ? 0x1 : (gc_env.f[31] < gc_env.f[0] ? 0x8 : (gc_env.f[31] > gc_env.f[0] ? 0x4 : 0x2)); // fcmpo cr0, f31, f0']
Translated bge .L_80012F08 to: if (gc_env.cr[0] >= 0) goto L_80012F08;
Translated lis r3 "@stringBase0_8001A600"@ha to: ['gc_env.r[3] = ((uint32_t)&_stringBase0_8001A600 >> 16) & 0xFFFF; // lis r3, "@stringBase0_8001A600"@ha']
Processing opcode: subi, operands: ['r28', 'r28', '0x5']
Translated subi r28 r28 0x5 to: ['gc_env.r[28] = gc_env.r[28] - 5; // subi r28, r28, 5']
Processing opcode: addi, operands: ['r4', 'r3', '"@stringBase0_8001A600"@l']
Translated addi r4 r3 "@stringBase0_8001A600"@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&_stringBase0_8001A600 & 0xFFFF); // addi r4, r3, "@stringBase0_8001A600"@l']
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Translated bl fn_80013F60 to: fn_80013F60();
Translated b .L_80012F20 to: goto L_80012F20;
Translated lis r3 "@stringBase0_8001A600"@ha to: ['gc_env.r[3] = ((uint32_t)&_stringBase0_8001A600 >> 16) & 0xFFFF; // lis r3, "@stringBase0_8001A600"@ha']
Processing opcode: subi, operands: ['r28', 'r28', '0x4']
Translated subi r28 r28 0x4 to: ['gc_env.r[28] = gc_env.r[28] - 4; // subi r28, r28, 4']
Processing opcode: addi, operands: ['r4', 'r3', '"@stringBase0_8001A600"@l']
Translated addi r4 r3 "@stringBase0_8001A600"@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&_stringBase0_8001A600 & 0xFFFF); // addi r4, r3, "@stringBase0_8001A600"@l']
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: addi, operands: ['r4', 'r4', '0x6']
Translated addi r4 r4 0x6 to: ['gc_env.r[4] += 6; // addi r4, r4, 0x6']
Translated bl fn_80013F60 to: fn_80013F60();
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Translated b .L_800133FC to: goto L_800133FC;
Translated lis r3 "@stringBase0_8001A600"@ha to: ['gc_env.r[3] = ((uint32_t)&_stringBase0_8001A600 >> 16) & 0xFFFF; // lis r3, "@stringBase0_8001A600"@ha']
Processing opcode: subi, operands: ['r28', 'r28', '0x4']
Translated subi r28 r28 0x4 to: ['gc_env.r[28] = gc_env.r[28] - 4; // subi r28, r28, 4']
Processing opcode: addi, operands: ['r4', 'r3', '"@stringBase0_8001A600"@l']
Translated addi r4 r3 "@stringBase0_8001A600"@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&_stringBase0_8001A600 & 0xFFFF); // addi r4, r3, "@stringBase0_8001A600"@l']
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: addi, operands: ['r4', 'r4', '0xa']
Translated addi r4 r4 0xa to: ['gc_env.r[4] += 10; // addi r4, r4, 0xa']
Translated bl fn_80013F60 to: fn_80013F60();
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Translated b .L_800133FC to: goto L_800133FC;
Translated lha r4 0x1e(r1) to: ['gc_env.r[4] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[1] + 0x1E); // lha r4, 0x1E(r1)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: lbz, operands: ['r3', '0x20(r1)']
Translated lbz r3 0x20(r1) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x20); // lbz r3, 0x20(r1)']
Processing opcode: subi, operands: ['r30', 'r28', '0x1']
Translated subi r30 r28 0x1 to: ['gc_env.r[30] = gc_env.r[28] - 1; // subi r30, r28, 1']
Processing opcode: add, operands: ['r3', 'r3', 'r4']
Translated add r3 r3 r4 to: ['gc_env.r[3] = gc_env.r[3] + gc_env.r[4]; // add r3, r3, r4']
Processing opcode: subi, operands: ['r3', 'r3', '0x1']
Translated subi r3 r3 0x1 to: ['gc_env.r[3] = gc_env.r[3] - 1; // subi r3, r3, 1']
Processing opcode: sth, operands: ['r3', '0x1e(r1)']
Translated sth r3 0x1e(r1) to: ['gc_mem_write16(gc_env.ram, gc_env.r[1] + 0x1E, gc_env.r[3]); // sth r3, 0x1E(r1)']
Processing opcode: stb, operands: ['r0', '-0x1(r28)']
Translated stb r0 -0x1(r28) to: ['gc_mem_write8(gc_env.ram, gc_env.r[28] + -0x1, gc_env.r[0]); // stb r0, -0x1(r28)']
Processing opcode: lbz, operands: ['r0', '0x5(r29)']
Translated lbz r0 0x5(r29) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x5); // lbz r0, 0x5(r29)']
Translated cmpwi r0 0x65 to: gc_env.cr[0] = (gc_env.r[0] == 0x65) ? 0 : (gc_env.r[0] < 0x65 ? -1 : 1); // Compare with immediate
Translated beq .L_80013064 to: if (gc_env.cr[0] == 0) goto L_80013064;
Translated bge .L_80012F9C to: if (gc_env.cr[0] >= 0) goto L_80012F9C;
Translated cmpwi r0 0x46 to: gc_env.cr[0] = (gc_env.r[0] == 0x46) ? 0 : (gc_env.r[0] < 0x46 ? -1 : 1); // Compare with immediate
Translated beq .L_800133F8 to: if (gc_env.cr[0] == 0) goto L_800133F8;
Translated bge .L_80012F90 to: if (gc_env.cr[0] >= 0) goto L_80012F90;
Translated cmpwi r0 0x45 to: gc_env.cr[0] = (gc_env.r[0] == 0x45) ? 0 : (gc_env.r[0] < 0x45 ? -1 : 1); // Compare with immediate
Translated bge .L_80013064 to: if (gc_env.cr[0] >= 0) goto L_80013064;
Translated b .L_800133F8 to: goto L_800133F8;
Translated cmpwi r0 0x48 to: gc_env.cr[0] = (gc_env.r[0] == 0x48) ? 0 : (gc_env.r[0] < 0x48 ? -1 : 1); // Compare with immediate
Translated bge .L_800133F8 to: if (gc_env.cr[0] >= 0) goto L_800133F8;
Translated b .L_80012FAC to: goto L_80012FAC;
Translated cmpwi r0 0x67 to: gc_env.cr[0] = (gc_env.r[0] == 0x67) ? 0 : (gc_env.r[0] < 0x67 ? -1 : 1); // Compare with immediate
Translated beq .L_80012FAC to: if (gc_env.cr[0] == 0) goto L_80012FAC;
Translated bge .L_800133F8 to: if (gc_env.cr[0] >= 0) goto L_800133F8;
Translated b .L_800131D4 to: goto L_800131D4;
Processing opcode: lbz, operands: ['r0', '0x20(r1)']
Translated lbz r0 0x20(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x20); // lbz r0, 0x20(r1)']
Processing opcode: lwz, operands: ['r4', '0xc(r29)']
Translated lwz r4 0xc(r29) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r4, 0xC(r29)']
Translated cmpw r0 r4 to: ['gc_env.cr[0] = (int32_t)gc_env.r[0] < (int32_t)gc_env.r[4] ? 0x8 : ((int32_t)gc_env.r[0] > (int32_t)gc_env.r[4] ? 0x4 : 0x2); // cmpw r0, r4']
Translated ble .L_80012FC4 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80012FC4; // ble .L_80012FC4']
Processing opcode: addi, operands: ['r3', 'r1', '0x1c']
Translated addi r3 r1 0x1c to: ['gc_env.r[3] = gc_env.r[1] + 28; // addi r3, r1, 0x1c']
Translated bl fn_80013420 to: fn_80013420();
Translated lha r4 0x1e(r1) to: ['gc_env.r[4] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[1] + 0x1E); // lha r4, 0x1E(r1)']
Translated cmpwi r4 -0x4 to: gc_env.cr[0] = (gc_env.r[4] == -0x4) ? 0 : (gc_env.r[4] < -0x4 ? -1 : 1); // Compare with immediate
Translated blt .L_80012FDC to: ['if (gc_env.cr[0] & 0x8) goto L_80012FDC; // blt .L_80012FDC']
Processing opcode: lwz, operands: ['r3', '0xc(r29)']
Translated lwz r3 0xc(r29) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r3, 0xC(r29)']
Translated cmpw r4 r3 to: ['gc_env.cr[0] = (int32_t)gc_env.r[4] < (int32_t)gc_env.r[3] ? 0x8 : ((int32_t)gc_env.r[4] > (int32_t)gc_env.r[3] ? 0x4 : 0x2); // cmpw r4, r3']
Translated blt .L_80013028 to: ['if (gc_env.cr[0] & 0x8) goto L_80013028; // blt .L_80013028']
Processing opcode: lbz, operands: ['r0', '0x3(r29)']
Translated lbz r0 0x3(r29) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x3); // lbz r0, 0x3(r29)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80012FF8 to: if (gc_env.cr[0] == 0) goto L_80012FF8;
Processing opcode: lwz, operands: ['r3', '0xc(r29)']
Translated lwz r3 0xc(r29) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r3, 0xC(r29)']
Processing opcode: subi, operands: ['r0', 'r3', '0x1']
Translated subi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] - 1; // subi r0, r3, 1']
Processing opcode: stw, operands: ['r0', '0xc(r29)']
Translated stw r0 0xc(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0xC, gc_env.r[0]); // stw r0, 0xC(r29)']
Translated b .L_80013004 to: goto L_80013004;
Processing opcode: lbz, operands: ['r3', '0x20(r1)']
Translated lbz r3 0x20(r1) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x20); // lbz r3, 0x20(r1)']
Processing opcode: subi, operands: ['r0', 'r3', '0x1']
Translated subi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] - 1; // subi r0, r3, 1']
Processing opcode: stw, operands: ['r0', '0xc(r29)']
Translated stw r0 0xc(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0xC, gc_env.r[0]); // stw r0, 0xC(r29)']
Processing opcode: lbz, operands: ['r0', '0x5(r29)']
Translated lbz r0 0x5(r29) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x5); // lbz r0, 0x5(r29)']
Translated cmplwi r0 0x67 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x67) ? 0 : ((uint32_t)gc_env.r[0] < 0x67 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8001301C to: if (gc_env.cr[0] != 0) goto L_8001301C;
Processing opcode: li, operands: ['r0', '0x65']
Translated li r0 0x65 to: ['gc_env.r[0] = 0x65; // li r0, 0x65']
Processing opcode: stb, operands: ['r0', '0x5(r29)']
Translated stb r0 0x5(r29) to: ['gc_mem_write8(gc_env.ram, gc_env.r[29] + 0x5, gc_env.r[0]); // stb r0, 0x5(r29)']
Translated b .L_80013064 to: goto L_80013064;
Processing opcode: li, operands: ['r0', '0x45']
Translated li r0 0x45 to: ['gc_env.r[0] = 0x45; // li r0, 0x45']
Processing opcode: stb, operands: ['r0', '0x5(r29)']
Translated stb r0 0x5(r29) to: ['gc_mem_write8(gc_env.ram, gc_env.r[29] + 0x5, gc_env.r[0]); // stb r0, 0x5(r29)']
Translated b .L_80013064 to: goto L_80013064;
Processing opcode: lbz, operands: ['r0', '0x3(r29)']
Translated lbz r0 0x3(r29) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x3); // lbz r0, 0x3(r29)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013044 to: if (gc_env.cr[0] == 0) goto L_80013044;
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Processing opcode: subf, operands: ['r0', 'r0', 'r3']
Translated subf r0 r0 r3 to: ['gc_env.r[0] = gc_env.r[3] - gc_env.r[0]; // subf r0, r0, r3']
Processing opcode: stw, operands: ['r0', '0xc(r29)']
Translated stw r0 0xc(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0xC, gc_env.r[0]); // stw r0, 0xC(r29)']
Translated b .L_800131D4 to: goto L_800131D4;
Processing opcode: lbz, operands: ['r0', '0x20(r1)']
Translated lbz r0 0x20(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x20); // lbz r0, 0x20(r1)']
Processing opcode: addi, operands: ['r3', 'r4', '0x1']
Translated addi r3 r4 0x1 to: ['gc_env.r[3] = gc_env.r[4] + 1; // addi r3, r4, 0x1']
Processing opcode: subf, operands: ['r0', 'r3', 'r0']
Translated subf. r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[3]; // subf r0, r3, r0']
Processing opcode: stw, operands: ['r0', '0xc(r29)']
Translated stw r0 0xc(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0xC, gc_env.r[0]); // stw r0, 0xC(r29)']
Translated bge .L_800131D4 to: if (gc_env.cr[0] >= 0) goto L_800131D4;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0xc(r29)']
Translated stw r0 0xc(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0xC, gc_env.r[0]); // stw r0, 0xC(r29)']
Translated b .L_800131D4 to: goto L_800131D4;
Processing opcode: lwz, operands: ['r3', '0xc(r29)']
Translated lwz r3 0xc(r29) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r3, 0xC(r29)']
Processing opcode: lbz, operands: ['r0', '0x20(r1)']
Translated lbz r0 0x20(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x20); // lbz r0, 0x20(r1)']
Processing opcode: addi, operands: ['r4', 'r3', '0x1']
Translated addi r4 r3 0x1 to: ['gc_env.r[4] = gc_env.r[3] + 1; // addi r4, r3, 0x1']
Translated cmpw r0 r4 to: ['gc_env.cr[0] = (int32_t)gc_env.r[0] < (int32_t)gc_env.r[4] ? 0x8 : ((int32_t)gc_env.r[0] > (int32_t)gc_env.r[4] ? 0x4 : 0x2); // cmpw r0, r4']
Translated ble .L_80013080 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80013080; // ble .L_80013080']
Processing opcode: addi, operands: ['r3', 'r1', '0x1c']
Translated addi r3 r1 0x1c to: ['gc_env.r[3] = gc_env.r[1] + 28; // addi r3, r1, 0x1c']
Translated bl fn_80013420 to: fn_80013420();
Translated lha r0 0x1e(r1) to: ['gc_env.r[0] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[1] + 0x1E); // lha r0, 0x1E(r1)']
Processing opcode: li, operands: ['r8', '0x2b']
Translated li r8 0x2b to: ['gc_env.r[8] = 0x2b; // li r8, 0x2b']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated mr r4 r0 to: gc_env.r[4] = gc_env.r[0]; // Move register
Translated bge .L_8001309C to: if (gc_env.cr[0] >= 0) goto L_8001309C;
Translated neg r4 r4 to: ['gc_env.r[4] = -(int32_t)gc_env.r[4]; // neg r4, r4']
Processing opcode: li, operands: ['r8', '0x2d']
Translated li r8 0x2d to: ['gc_env.r[8] = 0x2d; // li r8, 0x2d']
Translated lis r3 0x6666 to: ['gc_env.r[3] = 26214 << 16; // lis r3, 0x6666']
Processing opcode: addi, operands: ['r5', 'r3', '0x6667']
Translated addi r5 r3 0x6667 to: ['gc_env.r[5] = gc_env.r[3] + 26215; // addi r5, r3, 0x6667']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated b .L_800130E0 to: goto L_800130E0;
Translated mulhw r6 r5 r4 to: ['gc_env.r[6] = (int32_t)(((int64_t)(int32_t)gc_env.r[5] * (int64_t)(int32_t)gc_env.r[4]) >> 32); // mulhw r6, r5, r4']
Translated srawi r0 r6 2 to: ['gc_env.r[0] = ((int32_t)gc_env.r[6]) >> 2; // srawi r0, r6, 2']
Translated srwi r3 r0 31 to: ['gc_env.r[3] = gc_env.r[0] >> 31; // srwi r3, r0, 31']
Processing opcode: add, operands: ['r0', 'r0', 'r3']
Translated add r0 r0 r3 to: ['gc_env.r[0] = gc_env.r[0] + gc_env.r[3]; // add r0, r0, r3']
Processing opcode: mulli, operands: ['r0', 'r0', '0xa']
Translated mulli r0 r0 0xa to: ['gc_env.r[0] = gc_env.r[0] * 10; // mulli r0, r0, 10']
Processing opcode: subf, operands: ['r4', 'r0', 'r4']
Translated subf r4 r0 r4 to: ['gc_env.r[4] = gc_env.r[4] - gc_env.r[0]; // subf r4, r0, r4']
Translated srawi r0 r6 2 to: ['gc_env.r[0] = ((int32_t)gc_env.r[6]) >> 2; // srawi r0, r6, 2']
Processing opcode: addi, operands: ['r4', 'r4', '0x30']
Translated addi r4 r4 0x30 to: ['gc_env.r[4] += 48; // addi r4, r4, 0x30']
Processing opcode: stb, operands: ['r4', '-0x1(r30)']
Translated stb r4 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[4]); // stb r4, -0x1(r30)']
Translated srwi r3 r0 31 to: ['gc_env.r[3] = gc_env.r[0] >> 31; // srwi r3, r0, 31']
Processing opcode: add, operands: ['r4', 'r0', 'r3']
Translated add r4 r0 r3 to: ['gc_env.r[4] = gc_env.r[0] + gc_env.r[3]; // add r4, r0, r3']
Processing opcode: addi, operands: ['r7', 'r7', '0x1']
Translated addi r7 r7 0x1 to: ['gc_env.r[7] += 1; // addi r7, r7, 0x1']
Processing opcode: subi, operands: ['r30', 'r30', '0x1']
Translated subi r30 r30 0x1 to: ['gc_env.r[30] = gc_env.r[30] - 1; // subi r30, r30, 1']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800130AC to: if (gc_env.cr[0] != 0) goto L_800130AC;
Translated cmpwi r7 0x2 to: gc_env.cr[0] = (gc_env.r[7] == 0x2) ? 0 : (gc_env.r[7] < 0x2 ? -1 : 1); // Compare with immediate
Translated blt .L_800130AC to: ['if (gc_env.cr[0] & 0x8) goto L_800130AC; // blt .L_800130AC']
Translated extsb r0 r8 to: ['gc_env.r[0] = (int32_t)(int8_t)(gc_env.r[8] & 0xFF); // extsb r0, r8']
Processing opcode: stb, operands: ['r0', '-0x1(r30)']
Translated stb r0 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[0]); // stb r0, -0x1(r30)']
Processing opcode: subi, operands: ['r30', 'r30', '0x2']
Translated subi r30 r30 0x2 to: ['gc_env.r[30] = gc_env.r[30] - 2; // subi r30, r30, 2']
Processing opcode: subf, operands: ['r0', 'r30', 'r28']
Translated subf r0 r30 r28 to: ['gc_env.r[0] = gc_env.r[28] - gc_env.r[30]; // subf r0, r30, r28']
Processing opcode: lbz, operands: ['r3', '0x5(r29)']
Translated lbz r3 0x5(r29) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x5); // lbz r3, 0x5(r29)']
Processing opcode: stb, operands: ['r3', '0x0(r30)']
Translated stb r3 0x0(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30], gc_env.r[3]); // stb r3, (r30)']
Processing opcode: lwz, operands: ['r3', '0xc(r29)']
Translated lwz r3 0xc(r29) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r3, 0xC(r29)']
Processing opcode: add, operands: ['r0', 'r3', 'r0']
Translated add r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] + gc_env.r[0]; // add r0, r3, r0']
Translated cmpwi r0 0x1fd to: gc_env.cr[0] = (gc_env.r[0] == 0x1fd) ? 0 : (gc_env.r[0] < 0x1fd ? -1 : 1); // Compare with immediate
Translated ble .L_80013120 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80013120; // ble .L_80013120']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_800133FC to: goto L_800133FC;
Processing opcode: lbz, operands: ['r4', '0x20(r1)']
Translated lbz r4 0x20(r1) to: ['gc_env.r[4] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x20); // lbz r4, 0x20(r1)']
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Translated cmpw r4 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[4] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[4] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r4, r0']
Translated bge .L_8001314C to: if (gc_env.cr[0] >= 0) goto L_8001314C;
Processing opcode: addi, operands: ['r0', 'r3', '0x2']
Translated addi r0 r3 0x2 to: ['gc_env.r[0] = gc_env.r[3] + 2; // addi r0, r3, 0x2']
Processing opcode: subf, operands: ['r3', 'r4', 'r0']
Translated subf r3 r4 r0 to: ['gc_env.r[3] = gc_env.r[0] - gc_env.r[4]; // subf r3, r4, r0']
Processing opcode: li, operands: ['r0', '0x30']
Translated li r0 0x30 to: ['gc_env.r[0] = 0x30; // li r0, 0x30']
Translated b .L_80013144 to: goto L_80013144;
Translated stbu r0 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Processing opcode: subic, operands: ['r3', 'r3', '0x1']
Translated subic. r3 r3 0x1 to: ['gc_env.r[3] = gc_env.r[3] - 1; // subic. r3, r3, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[3] == 0) ? 0x2 : ((int32_t)gc_env.r[3] < 0 ? 0x8 : 0x4);']
Translated bne .L_80013140 to: if (gc_env.cr[0] != 0) goto L_80013140;
Processing opcode: lbz, operands: ['r3', '0x20(r1)']
Translated lbz r3 0x20(r1) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x20); // lbz r3, 0x20(r1)']
Processing opcode: add, operands: ['r4', 'r31', 'r3']
Translated add r4 r31 r3 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[3]; // add r4, r31, r3']
Translated b .L_80013160 to: goto L_80013160;
Translated lbzu r0 -0x1(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + -1); // lbzu r0, -1(r4)', 'gc_env.r[4] = gc_env.r[4] + -1;']
Translated stbu r0 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Processing opcode: subic, operands: ['r3', 'r3', '0x1']
Translated subic. r3 r3 0x1 to: ['gc_env.r[3] = gc_env.r[3] - 1; // subic. r3, r3, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[3] == 0) ? 0x2 : ((int32_t)gc_env.r[3] < 0 ? 0x8 : 0x4);']
Translated bne .L_80013158 to: if (gc_env.cr[0] != 0) goto L_80013158;
Processing opcode: lwz, operands: ['r0', '0xc(r29)']
Translated lwz r0 0xc(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r0, 0xC(r29)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80013180 to: if (gc_env.cr[0] != 0) goto L_80013180;
Processing opcode: lbz, operands: ['r0', '0x3(r29)']
Translated lbz r0 0x3(r29) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x3); // lbz r0, 0x3(r29)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013188 to: if (gc_env.cr[0] == 0) goto L_80013188;
Processing opcode: li, operands: ['r0', '0x2e']
Translated li r0 0x2e to: ['gc_env.r[0] = 0x2e; // li r0, 0x2e']
Translated stbu r0 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Processing opcode: lbz, operands: ['r0', '0x21(r1)']
Translated lbz r0 0x21(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x21); // lbz r0, 0x21(r1)']
Translated stbu r0 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Processing opcode: lbz, operands: ['r0', '0x1c(r1)']
Translated lbz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x1c); // lbz r0, 0x1c(r1)']
Translated extsb. r0 r0 to: ['gc_env.r[0] = (int32_t)(int8_t)(gc_env.r[0] & 0xFF); // extsb r0, r0', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_800131A8 to: if (gc_env.cr[0] == 0) goto L_800131A8;
Processing opcode: li, operands: ['r0', '0x2d']
Translated li r0 0x2d to: ['gc_env.r[0] = 0x2d; // li r0, 0x2d']
Translated stbu r0 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Translated b .L_800133F8 to: goto L_800133F8;
Processing opcode: lbz, operands: ['r0', '0x1(r29)']
Translated lbz r0 0x1(r29) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x1); // lbz r0, 0x1(r29)']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800131C0 to: if (gc_env.cr[0] != 0) goto L_800131C0;
Processing opcode: li, operands: ['r0', '0x2b']
Translated li r0 0x2b to: ['gc_env.r[0] = 0x2b; // li r0, 0x2b']
Translated stbu r0 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Translated b .L_800133F8 to: goto L_800133F8;
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800133F8 to: if (gc_env.cr[0] != 0) goto L_800133F8;
Processing opcode: li, operands: ['r0', '0x20']
Translated li r0 0x20 to: ['gc_env.r[0] = 0x20; // li r0, 0x20']
Translated stbu r0 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Translated b .L_800133F8 to: goto L_800133F8;
Translated lha r0 0x1e(r1) to: ['gc_env.r[0] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[1] + 0x1E); // lha r0, 0x1E(r1)']
Processing opcode: lbz, operands: ['r4', '0x20(r1)']
Translated lbz r4 0x20(r1) to: ['gc_env.r[4] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x20); // lbz r4, 0x20(r1)']
Processing opcode: subf, operands: ['r0', 'r0', 'r4']
Translated subf r0 r0 r4 to: ['gc_env.r[0] = gc_env.r[4] - gc_env.r[0]; // subf r0, r0, r4']
Processing opcode: subic, operands: ['r7', 'r0', '0x1']
Translated subic. r7 r0 0x1 to: ['gc_env.r[7] = gc_env.r[0] - 1; // subic. r7, r0, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[0] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[7] == 0) ? 0x2 : ((int32_t)gc_env.r[7] < 0 ? 0x8 : 0x4);']
Translated bge .L_800131EC to: if (gc_env.cr[0] >= 0) goto L_800131EC;
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Processing opcode: lwz, operands: ['r0', '0xc(r29)']
Translated lwz r0 0xc(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r0, 0xC(r29)']
Translated cmpw r7 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[7] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[7] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r7, r0']
Translated ble .L_80013220 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80013220; // ble .L_80013220']
Processing opcode: subf, operands: ['r0', 'r0', 'r7']
Translated subf r0 r0 r7 to: ['gc_env.r[0] = gc_env.r[7] - gc_env.r[0]; // subf r0, r0, r7']
Processing opcode: addi, operands: ['r3', 'r1', '0x1c']
Translated addi r3 r1 0x1c to: ['gc_env.r[3] = gc_env.r[1] + 28; // addi r3, r1, 0x1c']
Processing opcode: subf, operands: ['r4', 'r0', 'r4']
Translated subf r4 r0 r4 to: ['gc_env.r[4] = gc_env.r[4] - gc_env.r[0]; // subf r4, r0, r4']
Translated bl fn_80013420 to: fn_80013420();
Translated lha r3 0x1e(r1) to: ['gc_env.r[3] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[1] + 0x1E); // lha r3, 0x1E(r1)']
Processing opcode: lbz, operands: ['r0', '0x20(r1)']
Translated lbz r0 0x20(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x20); // lbz r0, 0x20(r1)']
Processing opcode: subf, operands: ['r0', 'r3', 'r0']
Translated subf r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[3]; // subf r0, r3, r0']
Processing opcode: subic, operands: ['r7', 'r0', '0x1']
Translated subic. r7 r0 0x1 to: ['gc_env.r[7] = gc_env.r[0] - 1; // subic. r7, r0, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[0] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[7] == 0) ? 0x2 : ((int32_t)gc_env.r[7] < 0 ? 0x8 : 0x4);']
Translated bge .L_80013220 to: if (gc_env.cr[0] >= 0) goto L_80013220;
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated lha r0 0x1e(r1) to: ['gc_env.r[0] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[1] + 0x1E); // lha r0, 0x1E(r1)']
Processing opcode: addic, operands: ['r6', 'r0', '0x1']
Translated addic. r6 r0 0x1 to: ['gc_env.r[6] = gc_env.r[0] + 1; // addic r6, r0, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (((uint64_t)gc_env.r[0] + 1) > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated bge .L_80013230 to: if (gc_env.cr[0] >= 0) goto L_80013230;
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Processing opcode: add, operands: ['r0', 'r6', 'r7']
Translated add r0 r6 r7 to: ['gc_env.r[0] = gc_env.r[6] + gc_env.r[7]; // add r0, r6, r7']
Translated cmpwi r0 0x1fd to: gc_env.cr[0] = (gc_env.r[0] == 0x1fd) ? 0 : (gc_env.r[0] < 0x1fd ? -1 : 1); // Compare with immediate
Translated ble .L_80013244 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80013244; // ble .L_80013244']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_800133FC to: goto L_800133FC;
Processing opcode: lbz, operands: ['r0', '0x20(r1)']
Translated lbz r0 0x20(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x20); // lbz r0, 0x20(r1)']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r3', '0x30']
Translated li r3 0x30 to: ['gc_env.r[3] = 0x30; // li r3, 0x30']
Processing opcode: add, operands: ['r5', 'r31', 'r0']
Translated add r5 r31 r0 to: ['gc_env.r[5] = gc_env.r[31] + gc_env.r[0]; // add r5, r31, r0']
Translated b .L_80013260 to: goto L_80013260;
Translated stbu r3 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[3]); // stbu r3, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Processing opcode: lwz, operands: ['r0', '0xc(r29)']
Translated lwz r0 0xc(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r0, 0xC(r29)']
Processing opcode: subf, operands: ['r0', 'r7', 'r0']
Translated subf r0 r7 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[7]; // subf r0, r7, r0']
Translated cmpw r4 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[4] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[4] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r4, r0']
Translated blt .L_80013258 to: ['if (gc_env.cr[0] & 0x8) goto L_80013258; // blt .L_80013258']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80013284 to: goto L_80013284;
Translated lbzu r0 -0x1(r5) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[5] + -1); // lbzu r0, -1(r5)', 'gc_env.r[5] = gc_env.r[5] + -1;']
Processing opcode: addi, operands: ['r3', 'r3', '0x1']
Translated addi r3 r3 0x1 to: ['gc_env.r[3] += 1; // addi r3, r3, 0x1']
Translated stbu r0 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Translated cmpw r3 r7 to: ['gc_env.cr[0] = (int32_t)gc_env.r[3] < (int32_t)gc_env.r[7] ? 0x8 : ((int32_t)gc_env.r[3] > (int32_t)gc_env.r[7] ? 0x4 : 0x2); // cmpw r3, r7']
Translated bge .L_80013298 to: if (gc_env.cr[0] >= 0) goto L_80013298;
Processing opcode: lbz, operands: ['r0', '0x20(r1)']
Translated lbz r0 0x20(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x20); // lbz r0, 0x20(r1)']
Translated cmpw r3 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[3] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[3] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r3, r0']
Translated blt .L_80013278 to: ['if (gc_env.cr[0] & 0x8) goto L_80013278; // blt .L_80013278']
Translated cmpw r3 r7 to: ['gc_env.cr[0] = (int32_t)gc_env.r[3] < (int32_t)gc_env.r[7] ? 0x8 : ((int32_t)gc_env.r[3] > (int32_t)gc_env.r[7] ? 0x4 : 0x2); // cmpw r3, r7']
Processing opcode: subf, operands: ['r3', 'r3', 'r7']
Translated subf r3 r3 r7 to: ['gc_env.r[3] = gc_env.r[7] - gc_env.r[3]; // subf r3, r3, r7']
Processing opcode: li, operands: ['r4', '0x30']
Translated li r4 0x30 to: ['gc_env.r[4] = 0x30; // li r4, 0x30']
Translated bge .L_800132EC to: if (gc_env.cr[0] >= 0) goto L_800132EC;
Translated srwi. r0 r3 3 to: ['gc_env.r[0] = gc_env.r[3] >> 3; // srwi r0, r3, 3', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated beq .L_800132E0 to: if (gc_env.cr[0] == 0) goto L_800132E0;
Processing opcode: stb, operands: ['r4', '-0x1(r30)']
Translated stb r4 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[4]); // stb r4, -0x1(r30)']
Processing opcode: stb, operands: ['r4', '-0x2(r30)']
Translated stb r4 -0x2(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x2, gc_env.r[4]); // stb r4, -0x2(r30)']
Processing opcode: stb, operands: ['r4', '-0x3(r30)']
Translated stb r4 -0x3(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x3, gc_env.r[4]); // stb r4, -0x3(r30)']
Processing opcode: stb, operands: ['r4', '-0x4(r30)']
Translated stb r4 -0x4(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x4, gc_env.r[4]); // stb r4, -0x4(r30)']
Processing opcode: stb, operands: ['r4', '-0x5(r30)']
Translated stb r4 -0x5(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x5, gc_env.r[4]); // stb r4, -0x5(r30)']
Processing opcode: stb, operands: ['r4', '-0x6(r30)']
Translated stb r4 -0x6(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x6, gc_env.r[4]); // stb r4, -0x6(r30)']
Processing opcode: stb, operands: ['r4', '-0x7(r30)']
Translated stb r4 -0x7(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x7, gc_env.r[4]); // stb r4, -0x7(r30)']
Translated stbu r4 -0x8(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x8, gc_env.r[4]); // stbu r4, -0x8(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x8;']
Translated bdnz .L_800132B4 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_800132B4;']
Translated andi. r3 r3 0x7 to: gc_env.r[3] = gc_env.r[3] & 0x7;
Translated beq .L_800132EC to: if (gc_env.cr[0] == 0) goto L_800132EC;
Translated mtctr r3 to: gc_env.ctr = gc_env.r[3]; // Move to count register
Translated stbu r4 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[4]); // stbu r4, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Translated bdnz .L_800132E4 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_800132E4;']
Processing opcode: lwz, operands: ['r0', '0xc(r29)']
Translated lwz r0 0xc(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r0, 0xC(r29)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80013304 to: if (gc_env.cr[0] != 0) goto L_80013304;
Processing opcode: lbz, operands: ['r0', '0x3(r29)']
Translated lbz r0 0x3(r29) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x3); // lbz r0, 0x3(r29)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8001330C to: if (gc_env.cr[0] == 0) goto L_8001330C;
Processing opcode: li, operands: ['r0', '0x2e']
Translated li r0 0x2e to: ['gc_env.r[0] = 0x2e; // li r0, 0x2e']
Translated stbu r0 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Translated cmpwi r6 0x0 to: gc_env.cr[0] = (gc_env.r[6] == 0x0) ? 0 : (gc_env.r[6] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800133B0 to: if (gc_env.cr[0] == 0) goto L_800133B0;
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r3', '0x30']
Translated li r3 0x30 to: ['gc_env.r[3] = 0x30; // li r3, 0x30']
Translated b .L_80013328 to: goto L_80013328;
Translated stbu r3 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[3]); // stbu r3, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Processing opcode: lbz, operands: ['r0', '0x20(r1)']
Translated lbz r0 0x20(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x20); // lbz r0, 0x20(r1)']
Processing opcode: subf, operands: ['r0', 'r0', 'r6']
Translated subf r0 r0 r6 to: ['gc_env.r[0] = gc_env.r[6] - gc_env.r[0]; // subf r0, r0, r6']
Translated cmpw r4 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[4] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[4] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r4, r0']
Translated blt .L_80013320 to: ['if (gc_env.cr[0] & 0x8) goto L_80013320; // blt .L_80013320']
Translated cmpw r4 r6 to: ['gc_env.cr[0] = (int32_t)gc_env.r[4] < (int32_t)gc_env.r[6] ? 0x8 : ((int32_t)gc_env.r[4] > (int32_t)gc_env.r[6] ? 0x4 : 0x2); // cmpw r4, r6']
Processing opcode: subf, operands: ['r3', 'r4', 'r6']
Translated subf r3 r4 r6 to: ['gc_env.r[3] = gc_env.r[6] - gc_env.r[4]; // subf r3, r4, r6']
Translated bge .L_800133B8 to: if (gc_env.cr[0] >= 0) goto L_800133B8;
Translated srwi. r0 r3 3 to: ['gc_env.r[0] = gc_env.r[3] >> 3; // srwi r0, r3, 3', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated beq .L_8001339C to: if (gc_env.cr[0] == 0) goto L_8001339C;
Processing opcode: lbz, operands: ['r0', '-0x1(r5)']
Translated lbz r0 -0x1(r5) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[5] + -0x1); // lbz r0, -0x1(r5)']
Processing opcode: stb, operands: ['r0', '-0x1(r30)']
Translated stb r0 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[0]); // stb r0, -0x1(r30)']
Processing opcode: lbz, operands: ['r0', '-0x2(r5)']
Translated lbz r0 -0x2(r5) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[5] + -0x2); // lbz r0, -0x2(r5)']
Processing opcode: stb, operands: ['r0', '-0x2(r30)']
Translated stb r0 -0x2(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x2, gc_env.r[0]); // stb r0, -0x2(r30)']
Processing opcode: lbz, operands: ['r0', '-0x3(r5)']
Translated lbz r0 -0x3(r5) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[5] + -0x3); // lbz r0, -0x3(r5)']
Processing opcode: stb, operands: ['r0', '-0x3(r30)']
Translated stb r0 -0x3(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x3, gc_env.r[0]); // stb r0, -0x3(r30)']
Processing opcode: lbz, operands: ['r0', '-0x4(r5)']
Translated lbz r0 -0x4(r5) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[5] + -0x4); // lbz r0, -0x4(r5)']
Processing opcode: stb, operands: ['r0', '-0x4(r30)']
Translated stb r0 -0x4(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x4, gc_env.r[0]); // stb r0, -0x4(r30)']
Processing opcode: lbz, operands: ['r0', '-0x5(r5)']
Translated lbz r0 -0x5(r5) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[5] + -0x5); // lbz r0, -0x5(r5)']
Processing opcode: stb, operands: ['r0', '-0x5(r30)']
Translated stb r0 -0x5(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x5, gc_env.r[0]); // stb r0, -0x5(r30)']
Processing opcode: lbz, operands: ['r0', '-0x6(r5)']
Translated lbz r0 -0x6(r5) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[5] + -0x6); // lbz r0, -0x6(r5)']
Processing opcode: stb, operands: ['r0', '-0x6(r30)']
Translated stb r0 -0x6(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x6, gc_env.r[0]); // stb r0, -0x6(r30)']
Processing opcode: lbz, operands: ['r0', '-0x7(r5)']
Translated lbz r0 -0x7(r5) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[5] + -0x7); // lbz r0, -0x7(r5)']
Processing opcode: stb, operands: ['r0', '-0x7(r30)']
Translated stb r0 -0x7(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x7, gc_env.r[0]); // stb r0, -0x7(r30)']
Translated lbzu r0 -0x8(r5) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[5] + -8); // lbzu r0, -8(r5)', 'gc_env.r[5] = gc_env.r[5] + -8;']
Translated stbu r0 -0x8(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x8, gc_env.r[0]); // stbu r0, -0x8(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x8;']
Translated bdnz .L_80013350 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80013350;']
Translated andi. r3 r3 0x7 to: gc_env.r[3] = gc_env.r[3] & 0x7;
Translated beq .L_800133B8 to: if (gc_env.cr[0] == 0) goto L_800133B8;
Translated mtctr r3 to: gc_env.ctr = gc_env.r[3]; // Move to count register
Translated lbzu r0 -0x1(r5) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[5] + -1); // lbzu r0, -1(r5)', 'gc_env.r[5] = gc_env.r[5] + -1;']
Translated stbu r0 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Translated bdnz .L_800133A0 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_800133A0;']
Translated b .L_800133B8 to: goto L_800133B8;
Processing opcode: li, operands: ['r0', '0x30']
Translated li r0 0x30 to: ['gc_env.r[0] = 0x30; // li r0, 0x30']
Translated stbu r0 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Processing opcode: lbz, operands: ['r0', '0x1c(r1)']
Translated lbz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x1c); // lbz r0, 0x1c(r1)']
Translated extsb. r0 r0 to: ['gc_env.r[0] = (int32_t)(int8_t)(gc_env.r[0] & 0xFF); // extsb r0, r0', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_800133D0 to: if (gc_env.cr[0] == 0) goto L_800133D0;
Processing opcode: li, operands: ['r0', '0x2d']
Translated li r0 0x2d to: ['gc_env.r[0] = 0x2d; // li r0, 0x2d']
Translated stbu r0 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Translated b .L_800133F8 to: goto L_800133F8;
Processing opcode: lbz, operands: ['r0', '0x1(r29)']
Translated lbz r0 0x1(r29) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x1); // lbz r0, 0x1(r29)']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800133E8 to: if (gc_env.cr[0] != 0) goto L_800133E8;
Processing opcode: li, operands: ['r0', '0x2b']
Translated li r0 0x2b to: ['gc_env.r[0] = 0x2b; // li r0, 0x2b']
Translated stbu r0 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Translated b .L_800133F8 to: goto L_800133F8;
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800133F8 to: if (gc_env.cr[0] != 0) goto L_800133F8;
Processing opcode: li, operands: ['r0', '0x20']
Translated li r0 0x20 to: ['gc_env.r[0] = 0x20; // li r0, 0x20']
Translated stbu r0 -0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r30)', 'gc_env.r[30] = gc_env.r[30] + -0x1;']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Processing opcode: lwz, operands: ['r0', '0x64(r1)']
Translated lwz r0 0x64(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x64); // lwz r0, 0x64(r1)']
Error in handler for lfd: name 'format_hex' is not defined
Processing opcode: lwz, operands: ['r31', '0x54(r1)']
Translated lwz r31 0x54(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x54); // lwz r31, 0x54(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Processing opcode: lwz, operands: ['r30', '0x50(r1)']
Translated lwz r30 0x50(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x50); // lwz r30, 0x50(r1)']
Processing opcode: lwz, operands: ['r29', '0x4c(r1)']
Translated lwz r29 0x4c(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4C); // lwz r29, 0x4C(r1)']
Processing opcode: lwz, operands: ['r28', '0x48(r1)']
Translated lwz r28 0x48(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x48); // lwz r28, 0x48(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x60']
Translated addi r1 r1 0x60 to: ['gc_env.r[1] += 96; // addi r1, r1, 0x60']
Translated blr  to: return;
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated bge .L_80013448 to: if (gc_env.cr[0] >= 0) goto L_80013448;
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: stb, operands: ['r5', '0x0(r3)']
Translated stb r5 0x0(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3], gc_env.r[5]); // stb r5, (r3)']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Processing opcode: li, operands: ['r0', '0x30']
Translated li r0 0x30 to: ['gc_env.r[0] = 0x30; // li r0, 0x30']
Processing opcode: sth, operands: ['r5', '0x2(r3)']
Translated sth r5 0x2(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x2, gc_env.r[5]); // sth r5, 0x2(r3)']
Processing opcode: stb, operands: ['r4', '0x4(r3)']
Translated stb r4 0x4(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[4]); // stb r4, 0x4(r3)']
Processing opcode: stb, operands: ['r0', '0x5(r3)']
Translated stb r0 0x5(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x5, gc_env.r[0]); // stb r0, 0x5(r3)']
Translated blr  to: return;
Processing opcode: lbz, operands: ['r0', '0x4(r3)']
Translated lbz r0 0x4(r3) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x4); // lbz r0, 0x4(r3)']
Translated cmpw r4 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[4] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[4] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r4, r0']
Translated bgelr  to: ['if (gc_env.cr[0] & (0x4 | 0x2)) return; // bgelr']
Processing opcode: add, operands: ['r5', 'r3', 'r4']
Translated add r5 r3 r4 to: ['gc_env.r[5] = gc_env.r[3] + gc_env.r[4]; // add r5, r3, r4']
Processing opcode: addi, operands: ['r8', 'r5', '0x6']
Translated addi r8 r5 0x6 to: ['gc_env.r[8] = gc_env.r[5] + 6; // addi r8, r5, 0x6']
Translated lbzu r5 -0x1(r8) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[8] + -1); // lbzu r5, -1(r8)', 'gc_env.r[8] = gc_env.r[8] + -1;']
Processing opcode: subi, operands: ['r5', 'r5', '0x30']
Translated subi r5 r5 0x30 to: ['gc_env.r[5] = gc_env.r[5] - 48; // subi r5, r5, 48']
Translated extsb r6 r5 to: ['gc_env.r[6] = (int32_t)(int8_t)(gc_env.r[5] & 0xFF); // extsb r6, r5']
Translated cmpwi r6 0x5 to: gc_env.cr[0] = (gc_env.r[6] == 0x5) ? 0 : (gc_env.r[6] < 0x5 ? -1 : 1); // Compare with immediate
Translated bne .L_800134B0 to: if (gc_env.cr[0] != 0) goto L_800134B0;
Processing opcode: add, operands: ['r5', 'r3', 'r0']
Translated add r5 r3 r0 to: ['gc_env.r[5] = gc_env.r[3] + gc_env.r[0]; // add r5, r3, r0']
Processing opcode: addi, operands: ['r5', 'r5', '0x5']
Translated addi r5 r5 0x5 to: ['gc_env.r[5] += 5; // addi r5, r5, 0x5']
Processing opcode: subi, operands: ['r5', 'r5', '0x1']
Translated subi r5 r5 0x1 to: ['gc_env.r[5] = gc_env.r[5] - 1; // subi r5, r5, 1']
Translated cmplw r5 r8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == (uint32_t)gc_env.r[8]) ? 0 : ((uint32_t)gc_env.r[5] < (uint32_t)gc_env.r[8] ? -1 : 1); // Logical compare word
Translated ble .L_80013490 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80013490; // ble .L_80013490']
Processing opcode: lbz, operands: ['r0', '0x0(r5)']
Translated lbz r0 0x0(r5) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x0); // lbz r0, 0x0(r5)']
Translated cmpwi r0 0x30 to: gc_env.cr[0] = (gc_env.r[0] == 0x30) ? 0 : (gc_env.r[0] < 0x30 ? -1 : 1); // Compare with immediate
Translated beq .L_80013478 to: if (gc_env.cr[0] == 0) goto L_80013478;
Translated cmplw r5 r8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == (uint32_t)gc_env.r[8]) ? 0 : ((uint32_t)gc_env.r[5] < (uint32_t)gc_env.r[8] ? -1 : 1); // Logical compare word
Translated bne .L_800134A4 to: if (gc_env.cr[0] != 0) goto L_800134A4;
Processing opcode: lbz, operands: ['r0', '-0x1(r8)']
Translated lbz r0 -0x1(r8) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[8] + -0x1); // lbz r0, -0x1(r8)']
Translated clrlwi r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Translated b .L_800134A8 to: goto L_800134A8;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated mr r5 r0 to: gc_env.r[5] = gc_env.r[0]; // Move register
Translated b .L_80013510 to: goto L_80013510;
Processing opcode: li, operands: ['r5', '0x5']
Translated li r5 0x5 to: ['gc_env.r[5] = 0x5; // li r5, 0x5']
Translated eqv r0 r6 r5 to: ['gc_env.r[0] = ~(gc_env.r[6] ^ gc_env.r[5]); // eqv r0, r6, r5']
Translated subfc r5 r6 r5 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[5] - gc_env.r[6];', 'gc_env.r[5] = (uint32_t)subfc_temp; // subfc r5, r6, r5', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= gc_env.r[6] ? 0x20000000 : 0);']
Translated srwi r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] >> 31; // srwi r0, r0, 31']
Translated addze r5 r0 to: ['uint64_t addze_temp = (uint64_t)gc_env.r[0] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[5] = (uint32_t)addze_temp; // addze r5, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addze_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated clrlwi r5 r5 31 to: ['gc_env.r[5] = gc_env.r[5] & 0x1; // clrlwi r5, r5, 31']
Translated b .L_80013510 to: goto L_80013510;
Translated lbzu r0 -0x1(r8) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[8] + -1); // lbzu r0, -1(r8)', 'gc_env.r[8] = gc_env.r[8] + -1;']
Processing opcode: add, operands: ['r7', 'r0', 'r5']
Translated add r7 r0 r5 to: ['gc_env.r[7] = gc_env.r[0] + gc_env.r[5]; // add r7, r0, r5']
Processing opcode: subi, operands: ['r7', 'r7', '0x30']
Translated subi r7 r7 0x30 to: ['gc_env.r[7] = gc_env.r[7] - 48; // subi r7, r7, 48']
Translated extsb r5 r7 to: ['gc_env.r[5] = (int32_t)(int8_t)(gc_env.r[7] & 0xFF); // extsb r5, r7']
Translated eqv r0 r5 r6 to: ['gc_env.r[0] = ~(gc_env.r[5] ^ gc_env.r[6]); // eqv r0, r5, r6']
Translated subfc r5 r5 r6 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[6] - gc_env.r[5];', 'gc_env.r[5] = (uint32_t)subfc_temp; // subfc r5, r5, r6', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[6] >= gc_env.r[5] ? 0x20000000 : 0);']
Translated srwi r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] >> 31; // srwi r0, r0, 31']
Translated addze r5 r0 to: ['uint64_t addze_temp = (uint64_t)gc_env.r[0] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[5] = (uint32_t)addze_temp; // addze r5, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addze_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated clrlwi. r5 r5 31 to: ['gc_env.r[5] = gc_env.r[5] & 0x1; // clrlwi r5, r5, 31']
Translated bne .L_800134FC to: if (gc_env.cr[0] != 0) goto L_800134FC;
Translated extsb. r0 r7 to: ['gc_env.r[0] = (int32_t)(int8_t)(gc_env.r[7] & 0xFF); // extsb r0, r7', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_80013504 to: if (gc_env.cr[0] != 0) goto L_80013504;
Processing opcode: subi, operands: ['r4', 'r4', '0x1']
Translated subi r4 r4 0x1 to: ['gc_env.r[4] = gc_env.r[4] - 1; // subi r4, r4, 1']
Translated b .L_80013514 to: goto L_80013514;
Processing opcode: addi, operands: ['r0', 'r7', '0x30']
Translated addi r0 r7 0x30 to: ['gc_env.r[0] = gc_env.r[7] + 48; // addi r0, r7, 0x30']
Processing opcode: stb, operands: ['r0', '0x0(r8)']
Translated stb r0 0x0(r8) to: ['gc_mem_write8(gc_env.ram, gc_env.r[8], gc_env.r[0]); // stb r0, (r8)']
Translated b .L_8001351C to: goto L_8001351C;
Processing opcode: li, operands: ['r6', '0x9']
Translated li r6 0x9 to: ['gc_env.r[6] = 0x9; // li r6, 0x9']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800134CC to: if (gc_env.cr[0] != 0) goto L_800134CC;
Translated cmpwi r5 0x0 to: gc_env.cr[0] = (gc_env.r[5] == 0x0) ? 0 : (gc_env.r[5] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80013544 to: if (gc_env.cr[0] == 0) goto L_80013544;
Translated lha r5 0x2(r3) to: ['gc_env.r[5] = (int32_t)(int16_t)gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x2); // lha r5, 0x2(r3)']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Processing opcode: li, operands: ['r0', '0x31']
Translated li r0 0x31 to: ['gc_env.r[0] = 0x31; // li r0, 0x31']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Processing opcode: sth, operands: ['r5', '0x2(r3)']
Translated sth r5 0x2(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x2, gc_env.r[5]); // sth r5, 0x2(r3)']
Processing opcode: stb, operands: ['r4', '0x4(r3)']
Translated stb r4 0x4(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[4]); // stb r4, 0x4(r3)']
Processing opcode: stb, operands: ['r0', '0x5(r3)']
Translated stb r0 0x5(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x5, gc_env.r[0]); // stb r0, 0x5(r3)']
Translated blr  to: return;
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80013428 to: if (gc_env.cr[0] == 0) goto L_80013428;
Processing opcode: stb, operands: ['r4', '0x4(r3)']
Translated stb r4 0x4(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[4]); // stb r4, 0x4(r3)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stwu, operands: ['r1', '-0x40(r1)']
Translated stwu r1 -0x40(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x40, gc_env.r[1]); // stwu r1, -0x40(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x40;']
Translated stmw r22 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[22]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[23]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[24]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[25]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[26]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[27]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[28]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[29]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[30]); // stmw r22, 0x18(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[31]); // stmw r22, 0x18(r1)']
Processing opcode: addi, operands: ['r23', 'r5', '0x0']
Translated addi r23 r5 0x0 to: ['gc_env.r[23] = gc_env.r[5] + 0; // addi r23, r5, 0x0']
Translated xor r5 r4 r0 to: ['gc_env.r[5] = gc_env.r[4] ^ gc_env.r[0]; // xor r5, r4, r0']
Processing opcode: subi, operands: ['r27', 'r23', '0x1']
Translated subi r27 r23 0x1 to: ['gc_env.r[27] = gc_env.r[23] - 1; // subi r27, r23, 1']
Processing opcode: addi, operands: ['r24', 'r6', '0x0']
Translated addi r24 r6 0x0 to: ['gc_env.r[24] = gc_env.r[6] + 0; // addi r24, r6, 0x0']
Processing opcode: addi, operands: ['r30', 'r4', '0x0']
Translated addi r30 r4 0x0 to: ['gc_env.r[30] = gc_env.r[4] + 0; // addi r30, r4, 0x0']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Processing opcode: li, operands: ['r25', '0x0']
Translated li r25 0x0 to: ['gc_env.r[25] = 0x0; // li r25, 0x0']
Processing opcode: li, operands: ['r26', '0x0']
Translated li r26 0x0 to: ['gc_env.r[26] = 0x0; // li r26, 0x0']
Processing opcode: stb, operands: ['r0', '-0x1(r23)']
Translated stb r0 -0x1(r23) to: ['gc_mem_write8(gc_env.ram, gc_env.r[23] + -0x1, gc_env.r[0]); // stb r0, -0x1(r23)']
Translated xor r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] ^ gc_env.r[0]; // xor r0, r3, r0']
Translated or. r0 r5 r0 to: ['gc_env.r[0] = gc_env.r[5] | gc_env.r[0]; // or r0, r5, r0']
Translated bne .L_800135C4 to: if (gc_env.cr[0] != 0) goto L_800135C4;
Processing opcode: lwz, operands: ['r0', '0xc(r24)']
Translated lwz r0 0xc(r24) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[24] + 0xC); // lwz r0, 0xC(r24)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800135C4 to: if (gc_env.cr[0] != 0) goto L_800135C4;
Processing opcode: lbz, operands: ['r0', '0x3(r24)']
Translated lbz r0 0x3(r24) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[24] + 0x3); // lbz r0, 0x3(r24)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800135BC to: if (gc_env.cr[0] == 0) goto L_800135BC;
Processing opcode: lbz, operands: ['r0', '0x5(r24)']
Translated lbz r0 0x5(r24) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[24] + 0x5); // lbz r0, 0x5(r24)']
Translated cmplwi r0 0x6f to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x6f) ? 0 : ((uint32_t)gc_env.r[0] < 0x6f ? -1 : 1); // Logical compare with immediate
Translated beq .L_800135C4 to: if (gc_env.cr[0] == 0) goto L_800135C4;
Translated mr r3 r27 to: gc_env.r[3] = gc_env.r[27]; // Move register
Translated b .L_80013820 to: goto L_80013820;
Processing opcode: lbz, operands: ['r5', '0x5(r24)']
Translated lbz r5 0x5(r24) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[24] + 0x5); // lbz r5, 0x5(r24)']
Processing opcode: subi, operands: ['r0', 'r5', '0x58']
Translated subi r0 r5 0x58 to: ['gc_env.r[0] = gc_env.r[5] - 88; // subi r0, r5, 88']
Translated cmplwi r0 0x20 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x20) ? 0 : ((uint32_t)gc_env.r[0] < 0x20 ? -1 : 1); // Logical compare with immediate
Translated bgt .L_8001365C to: ['if (gc_env.cr[0] & 0x4) goto L_8001365C; // bgt .L_8001365C']
Translated lis r5 "@1009_8001B7B8"@ha to: ['gc_env.r[5] = ((uint32_t)&_1009_8001B7B8 >> 16) & 0xFFFF; // lis r5, "@1009_8001B7B8"@ha']
Processing opcode: addi, operands: ['r5', 'r5', '"@1009_8001B7B8"@l']
Translated addi r5 r5 "@1009_8001B7B8"@l to: ['gc_env.r[5] = (uint32_t)&_1009_8001B7B8; // lis + addi @1009_8001B7B8 (completing pattern)']
Translated slwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] << 2; // slwi r0, r0, 2']
Translated lwzx r0 r5 r0 to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + gc_env.r[0]); // lwzx r0, r5, r0']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bctr  to: ['return gc_env.ctr; // bctr']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated xoris r5 r3 0x8000 to: ['gc_env.r[5] = gc_env.r[3] ^ 0x80000000; // xoris r5, r3, 0x8000']
Translated xoris r3 r0 0x8000 to: ['gc_env.r[3] = gc_env.r[0] ^ 0x80000000; // xoris r3, r0, 0x8000']
Translated subfc r0 r0 r4 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[4] - gc_env.r[0];', 'gc_env.r[0] = (uint32_t)subfc_temp; // subfc r0, r0, r4', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= gc_env.r[0] ? 0x20000000 : 0);']
Translated subfe r3 r3 r5 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[5] - gc_env.r[3] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r3, r5', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= (gc_env.r[3] + subfe_borrow) ? 0x20000000 : 0);']
Translated subfe r3 r5 r5 to: ['uint32_t subfe_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfe_temp = (uint64_t)gc_env.r[5] - gc_env.r[5] - subfe_borrow;', 'gc_env.r[3] = (uint32_t)subfe_temp; // subfe r3, r5, r5', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= (gc_env.r[5] + subfe_borrow) ? 0x20000000 : 0);']
Translated neg. r3 r3 to: ['gc_env.r[3] = -(int32_t)gc_env.r[3]; // neg r3, r3']
Processing opcode: li, operands: ['r28', '0xa']
Translated li r28 0xa to: ['gc_env.r[28] = 0xa; // li r28, 0xa']
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Translated beq .L_8001365C to: if (gc_env.cr[0] == 0) goto L_8001365C;
Translated subfic r30 r30 0x0 to: ['gc_env.r[30] = 0 - gc_env.r[30]; // subfic r30, r30, 0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (0 >= gc_env.r[30] ? 0x20000000 : 0);']
Translated subfze r31 r31 to: ['uint32_t subfze_borrow = 1 - ((gc_env.xer & 0x20000000) >> 29);', 'uint64_t subfze_temp = (uint64_t)0 - gc_env.r[31] - subfze_borrow;', 'gc_env.r[31] = (uint32_t)subfze_temp; // subfze r31, r31', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (0 >= (gc_env.r[31] + subfze_borrow) ? 0x20000000 : 0);']
Processing opcode: li, operands: ['r25', '0x1']
Translated li r25 0x1 to: ['gc_env.r[25] = 0x1; // li r25, 0x1']
Translated b .L_8001365C to: goto L_8001365C;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', '0x1(r24)']
Translated stb r0 0x1(r24) to: ['gc_mem_write8(gc_env.ram, gc_env.r[24] + 0x1, gc_env.r[0]); // stb r0, 0x1(r24)']
Processing opcode: li, operands: ['r28', '0x8']
Translated li r28 0x8 to: ['gc_env.r[28] = 0x8; // li r28, 0x8']
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Translated b .L_8001365C to: goto L_8001365C;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', '0x1(r24)']
Translated stb r0 0x1(r24) to: ['gc_mem_write8(gc_env.ram, gc_env.r[24] + 0x1, gc_env.r[0]); // stb r0, 0x1(r24)']
Processing opcode: li, operands: ['r28', '0xa']
Translated li r28 0xa to: ['gc_env.r[28] = 0xa; // li r28, 0xa']
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Translated b .L_8001365C to: goto L_8001365C;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', '0x1(r24)']
Translated stb r0 0x1(r24) to: ['gc_mem_write8(gc_env.ram, gc_env.r[24] + 0x1, gc_env.r[0]); // stb r0, 0x1(r24)']
Processing opcode: li, operands: ['r28', '0x10']
Translated li r28 0x10 to: ['gc_env.r[28] = 0x10; // li r28, 0x10']
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: addi, operands: ['r5', 'r29', '0x0']
Translated addi r5 r29 0x0 to: ['gc_env.r[5] = gc_env.r[29] + 0; // addi r5, r29, 0x0']
Processing opcode: addi, operands: ['r6', 'r28', '0x0']
Translated addi r6 r28 0x0 to: ['gc_env.r[6] = gc_env.r[28] + 0; // addi r6, r28, 0x0']
Translated bl __mod2u to: __mod2u();
Processing opcode: addi, operands: ['r22', 'r4', '0x0']
Translated addi r22 r4 0x0 to: ['gc_env.r[22] = gc_env.r[4] + 0; // addi r22, r4, 0x0']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: addi, operands: ['r5', 'r29', '0x0']
Translated addi r5 r29 0x0 to: ['gc_env.r[5] = gc_env.r[29] + 0; // addi r5, r29, 0x0']
Processing opcode: addi, operands: ['r6', 'r28', '0x0']
Translated addi r6 r28 0x0 to: ['gc_env.r[6] = gc_env.r[28] + 0; // addi r6, r28, 0x0']
Translated bl __div2u to: __div2u();
Translated cmpwi r22 0xa to: gc_env.cr[0] = (gc_env.r[22] == 0xa) ? 0 : (gc_env.r[22] < 0xa ? -1 : 1); // Compare with immediate
Processing opcode: addi, operands: ['r30', 'r4', '0x0']
Translated addi r30 r4 0x0 to: ['gc_env.r[30] = gc_env.r[4] + 0; // addi r30, r4, 0x0']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Translated bge .L_800136A0 to: if (gc_env.cr[0] >= 0) goto L_800136A0;
Processing opcode: addi, operands: ['r5', 'r22', '0x30']
Translated addi r5 r22 0x30 to: ['gc_env.r[5] = gc_env.r[22] + 48; // addi r5, r22, 0x30']
Translated b .L_800136B8 to: goto L_800136B8;
Processing opcode: lbz, operands: ['r0', '0x5(r24)']
Translated lbz r0 0x5(r24) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[24] + 0x5); // lbz r0, 0x5(r24)']
Translated cmplwi r0 0x78 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x78) ? 0 : ((uint32_t)gc_env.r[0] < 0x78 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800136B4 to: if (gc_env.cr[0] != 0) goto L_800136B4;
Processing opcode: addi, operands: ['r5', 'r22', '0x57']
Translated addi r5 r22 0x57 to: ['gc_env.r[5] = gc_env.r[22] + 87; // addi r5, r22, 0x57']
Translated b .L_800136B8 to: goto L_800136B8;
Processing opcode: addi, operands: ['r5', 'r22', '0x37']
Translated addi r5 r22 0x37 to: ['gc_env.r[5] = gc_env.r[22] + 55; // addi r5, r22, 0x37']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated xor r3 r30 r4 to: ['gc_env.r[3] = gc_env.r[30] ^ gc_env.r[4]; // xor r3, r30, r4']
Translated xor r0 r31 r4 to: ['gc_env.r[0] = gc_env.r[31] ^ gc_env.r[4]; // xor r0, r31, r4']
Translated or. r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Translated extsb r0 r5 to: ['gc_env.r[0] = (int32_t)(int8_t)(gc_env.r[5] & 0xFF); // extsb r0, r5']
Processing opcode: addi, operands: ['r26', 'r26', '0x1']
Translated addi r26 r26 0x1 to: ['gc_env.r[26] += 1; // addi r26, r26, 0x1']
Translated stbu r0 -0x1(r27) to: ['gc_mem_write8(gc_env.ram, gc_env.r[27] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r27)', 'gc_env.r[27] = gc_env.r[27] + -0x1;']
Translated bne .L_8001365C to: if (gc_env.cr[0] != 0) goto L_8001365C;
Processing opcode: li, operands: ['r0', '0x8']
Translated li r0 0x8 to: ['gc_env.r[0] = 0x8; // li r0, 0x8']
Translated xor r3 r28 r0 to: ['gc_env.r[3] = gc_env.r[28] ^ gc_env.r[0]; // xor r3, r28, r0']
Translated xor r0 r29 r4 to: ['gc_env.r[0] = gc_env.r[29] ^ gc_env.r[4]; // xor r0, r29, r4']
Translated or. r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Translated bne .L_80013710 to: if (gc_env.cr[0] != 0) goto L_80013710;
Processing opcode: lbz, operands: ['r0', '0x3(r24)']
Translated lbz r0 0x3(r24) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[24] + 0x3); // lbz r0, 0x3(r24)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013710 to: if (gc_env.cr[0] == 0) goto L_80013710;
Processing opcode: lbz, operands: ['r0', '0x0(r27)']
Translated lbz r0 0x0(r27) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[27] + 0x0); // lbz r0, 0x0(r27)']
Translated cmpwi r0 0x30 to: gc_env.cr[0] = (gc_env.r[0] == 0x30) ? 0 : (gc_env.r[0] < 0x30 ? -1 : 1); // Compare with immediate
Translated beq .L_80013710 to: if (gc_env.cr[0] == 0) goto L_80013710;
Processing opcode: li, operands: ['r0', '0x30']
Translated li r0 0x30 to: ['gc_env.r[0] = 0x30; // li r0, 0x30']
Translated stbu r0 -0x1(r27) to: ['gc_mem_write8(gc_env.ram, gc_env.r[27] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r27)', 'gc_env.r[27] = gc_env.r[27] + -0x1;']
Processing opcode: addi, operands: ['r26', 'r26', '0x1']
Translated addi r26 r26 0x1 to: ['gc_env.r[26] += 1; // addi r26, r26, 0x1']
Processing opcode: lbz, operands: ['r0', '0x0(r24)']
Translated lbz r0 0x0(r24) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[24] + 0x0); // lbz r0, 0x0(r24)']
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80013774 to: if (gc_env.cr[0] != 0) goto L_80013774;
Processing opcode: lwz, operands: ['r0', '0x8(r24)']
Translated lwz r0 0x8(r24) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[24] + 0x8); // lwz r0, 0x8(r24)']
Translated cmpwi r25 0x0 to: gc_env.cr[0] = (gc_env.r[25] == 0x0) ? 0 : (gc_env.r[25] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: stw, operands: ['r0', '0xc(r24)']
Translated stw r0 0xc(r24) to: ['gc_mem_write32(gc_env.ram, gc_env.r[24] + 0xC, gc_env.r[0]); // stw r0, 0xC(r24)']
Translated bne .L_80013738 to: if (gc_env.cr[0] != 0) goto L_80013738;
Processing opcode: lbz, operands: ['r0', '0x1(r24)']
Translated lbz r0 0x1(r24) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[24] + 0x1); // lbz r0, 0x1(r24)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013744 to: if (gc_env.cr[0] == 0) goto L_80013744;
Processing opcode: lwz, operands: ['r3', '0xc(r24)']
Translated lwz r3 0xc(r24) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[24] + 0xC); // lwz r3, 0xC(r24)']
Processing opcode: subi, operands: ['r0', 'r3', '0x1']
Translated subi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] - 1; // subi r0, r3, 1']
Processing opcode: stw, operands: ['r0', '0xc(r24)']
Translated stw r0 0xc(r24) to: ['gc_mem_write32(gc_env.ram, gc_env.r[24] + 0xC, gc_env.r[0]); // stw r0, 0xC(r24)']
Processing opcode: li, operands: ['r3', '0x10']
Translated li r3 0x10 to: ['gc_env.r[3] = 0x10; // li r3, 0x10']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated xor r3 r28 r3 to: ['gc_env.r[3] = gc_env.r[28] ^ gc_env.r[3]; // xor r3, r28, r3']
Translated xor r0 r29 r0 to: ['gc_env.r[0] = gc_env.r[29] ^ gc_env.r[0]; // xor r0, r29, r0']
Translated or. r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Translated bne .L_80013774 to: if (gc_env.cr[0] != 0) goto L_80013774;
Processing opcode: lbz, operands: ['r0', '0x3(r24)']
Translated lbz r0 0x3(r24) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[24] + 0x3); // lbz r0, 0x3(r24)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013774 to: if (gc_env.cr[0] == 0) goto L_80013774;
Processing opcode: lwz, operands: ['r3', '0xc(r24)']
Translated lwz r3 0xc(r24) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[24] + 0xC); // lwz r3, 0xC(r24)']
Processing opcode: subi, operands: ['r0', 'r3', '0x2']
Translated subi r0 r3 0x2 to: ['gc_env.r[0] = gc_env.r[3] - 2; // subi r0, r3, 2']
Processing opcode: stw, operands: ['r0', '0xc(r24)']
Translated stw r0 0xc(r24) to: ['gc_mem_write32(gc_env.ram, gc_env.r[24] + 0xC, gc_env.r[0]); // stw r0, 0xC(r24)']
Processing opcode: lwz, operands: ['r3', '0xc(r24)']
Translated lwz r3 0xc(r24) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[24] + 0xC); // lwz r3, 0xC(r24)']
Processing opcode: subf, operands: ['r0', 'r27', 'r23']
Translated subf r0 r27 r23 to: ['gc_env.r[0] = gc_env.r[23] - gc_env.r[27]; // subf r0, r27, r23']
Processing opcode: add, operands: ['r0', 'r3', 'r0']
Translated add r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] + gc_env.r[0]; // add r0, r3, r0']
Translated cmpwi r0 0x1fd to: gc_env.cr[0] = (gc_env.r[0] == 0x1fd) ? 0 : (gc_env.r[0] < 0x1fd ? -1 : 1); // Compare with immediate
Translated ble .L_80013790 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80013790; // ble .L_80013790']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80013820 to: goto L_80013820;
Processing opcode: li, operands: ['r3', '0x30']
Translated li r3 0x30 to: ['gc_env.r[3] = 0x30; // li r3, 0x30']
Translated b .L_800137A0 to: goto L_800137A0;
Translated stbu r3 -0x1(r27) to: ['gc_mem_write8(gc_env.ram, gc_env.r[27] + -0x1, gc_env.r[3]); // stbu r3, -0x1(r27)', 'gc_env.r[27] = gc_env.r[27] + -0x1;']
Processing opcode: addi, operands: ['r26', 'r26', '0x1']
Translated addi r26 r26 0x1 to: ['gc_env.r[26] += 1; // addi r26, r26, 0x1']
Processing opcode: lwz, operands: ['r0', '0xc(r24)']
Translated lwz r0 0xc(r24) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[24] + 0xC); // lwz r0, 0xC(r24)']
Translated cmpw r26 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[26] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[26] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r26, r0']
Translated blt .L_80013798 to: ['if (gc_env.cr[0] & 0x8) goto L_80013798; // blt .L_80013798']
Processing opcode: li, operands: ['r3', '0x10']
Translated li r3 0x10 to: ['gc_env.r[3] = 0x10; // li r3, 0x10']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated xor r3 r28 r3 to: ['gc_env.r[3] = gc_env.r[28] ^ gc_env.r[3]; // xor r3, r28, r3']
Translated xor r0 r29 r0 to: ['gc_env.r[0] = gc_env.r[29] ^ gc_env.r[0]; // xor r0, r29, r0']
Translated or. r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Translated bne .L_800137E0 to: if (gc_env.cr[0] != 0) goto L_800137E0;
Processing opcode: lbz, operands: ['r0', '0x3(r24)']
Translated lbz r0 0x3(r24) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[24] + 0x3); // lbz r0, 0x3(r24)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800137E0 to: if (gc_env.cr[0] == 0) goto L_800137E0;
Processing opcode: lbz, operands: ['r3', '0x5(r24)']
Translated lbz r3 0x5(r24) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[24] + 0x5); // lbz r3, 0x5(r24)']
Processing opcode: li, operands: ['r0', '0x30']
Translated li r0 0x30 to: ['gc_env.r[0] = 0x30; // li r0, 0x30']
Processing opcode: stb, operands: ['r3', '-0x1(r27)']
Translated stb r3 -0x1(r27) to: ['gc_mem_write8(gc_env.ram, gc_env.r[27] + -0x1, gc_env.r[3]); // stb r3, -0x1(r27)']
Translated stbu r0 -0x2(r27) to: ['gc_mem_write8(gc_env.ram, gc_env.r[27] + -0x2, gc_env.r[0]); // stbu r0, -0x2(r27)', 'gc_env.r[27] = gc_env.r[27] + -0x2;']
Translated cmpwi r25 0x0 to: gc_env.cr[0] = (gc_env.r[25] == 0x0) ? 0 : (gc_env.r[25] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800137F4 to: if (gc_env.cr[0] == 0) goto L_800137F4;
Processing opcode: li, operands: ['r0', '0x2d']
Translated li r0 0x2d to: ['gc_env.r[0] = 0x2d; // li r0, 0x2d']
Translated stbu r0 -0x1(r27) to: ['gc_mem_write8(gc_env.ram, gc_env.r[27] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r27)', 'gc_env.r[27] = gc_env.r[27] + -0x1;']
Translated b .L_8001381C to: goto L_8001381C;
Processing opcode: lbz, operands: ['r0', '0x1(r24)']
Translated lbz r0 0x1(r24) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[24] + 0x1); // lbz r0, 0x1(r24)']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8001380C to: if (gc_env.cr[0] != 0) goto L_8001380C;
Processing opcode: li, operands: ['r0', '0x2b']
Translated li r0 0x2b to: ['gc_env.r[0] = 0x2b; // li r0, 0x2b']
Translated stbu r0 -0x1(r27) to: ['gc_mem_write8(gc_env.ram, gc_env.r[27] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r27)', 'gc_env.r[27] = gc_env.r[27] + -0x1;']
Translated b .L_8001381C to: goto L_8001381C;
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8001381C to: if (gc_env.cr[0] != 0) goto L_8001381C;
Processing opcode: li, operands: ['r0', '0x20']
Translated li r0 0x20 to: ['gc_env.r[0] = 0x20; // li r0, 0x20']
Translated stbu r0 -0x1(r27) to: ['gc_mem_write8(gc_env.ram, gc_env.r[27] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r27)', 'gc_env.r[27] = gc_env.r[27] + -0x1;']
Translated mr r3 r27 to: gc_env.r[3] = gc_env.r[27]; // Move register
Translated lmw r22 0x18(r1) to: ['gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lmw r22, 0x18(r1)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r22, 0x18(r1)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r22, 0x18(r1)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r22, 0x18(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r22, 0x18(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r22, 0x18(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r22, 0x18(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r22, 0x18(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x38); // lmw r22, 0x18(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lmw r22, 0x18(r1)']
Processing opcode: lwz, operands: ['r0', '0x44(r1)']
Translated lwz r0 0x44(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lwz r0, 0x44(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x40']
Translated addi r1 r1 0x40 to: ['gc_env.r[1] += 64; // addi r1, r1, 0x40']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Processing opcode: stb, operands: ['r7', '-0x1(r4)']
Translated stb r7 -0x1(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + -0x1, gc_env.r[7]); // stb r7, -0x1(r4)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: subi, operands: ['r6', 'r4', '0x1']
Translated subi r6 r4 0x1 to: ['gc_env.r[6] = gc_env.r[4] - 1; // subi r6, r4, 1']
Processing opcode: li, operands: ['r8', '0x0']
Translated li r8 0x0 to: ['gc_env.r[8] = 0x0; // li r8, 0x0']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bne .L_8001387C to: if (gc_env.cr[0] != 0) goto L_8001387C;
Processing opcode: lwz, operands: ['r9', '0xc(r5)']
Translated lwz r9 0xc(r5) to: ['gc_env.r[9] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xC); // lwz r9, 0xC(r5)']
Translated cmpwi r9 0x0 to: gc_env.cr[0] = (gc_env.r[9] == 0x0) ? 0 : (gc_env.r[9] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8001387C to: if (gc_env.cr[0] != 0) goto L_8001387C;
Processing opcode: lbz, operands: ['r9', '0x3(r5)']
Translated lbz r9 0x3(r5) to: ['gc_env.r[9] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x3); // lbz r9, 0x3(r5)']
Translated cmplwi r9 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[9] == 0x0) ? 0 : ((uint32_t)gc_env.r[9] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013874 to: if (gc_env.cr[0] == 0) goto L_80013874;
Processing opcode: lbz, operands: ['r9', '0x5(r5)']
Translated lbz r9 0x5(r5) to: ['gc_env.r[9] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x5); // lbz r9, 0x5(r5)']
Translated cmplwi r9 0x6f to: gc_env.cr[0] = ((uint32_t)gc_env.r[9] == 0x6f) ? 0 : ((uint32_t)gc_env.r[9] < 0x6f ? -1 : 1); // Logical compare with immediate
Translated beq .L_8001387C to: if (gc_env.cr[0] == 0) goto L_8001387C;
Translated mr r3 r6 to: gc_env.r[3] = gc_env.r[6]; // Move register
Translated blr  to: return;
Processing opcode: lbz, operands: ['r9', '0x5(r5)']
Translated lbz r9 0x5(r5) to: ['gc_env.r[9] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x5); // lbz r9, 0x5(r5)']
Processing opcode: subi, operands: ['r10', 'r9', '0x58']
Translated subi r10 r9 0x58 to: ['gc_env.r[10] = gc_env.r[9] - 88; // subi r10, r9, 88']
Translated cmplwi r10 0x20 to: gc_env.cr[0] = ((uint32_t)gc_env.r[10] == 0x20) ? 0 : ((uint32_t)gc_env.r[10] < 0x20 ? -1 : 1); // Logical compare with immediate
Translated bgt .L_800138E8 to: ['if (gc_env.cr[0] & 0x4) goto L_800138E8; // bgt .L_800138E8']
Translated lis r9 jumptable_8001B83C@ha to: ['gc_env.r[9] = ((uint32_t)&jumptable_8001B83C >> 16) & 0xFFFF; // lis r9, jumptable_8001B83C@ha']
Processing opcode: addi, operands: ['r9', 'r9', 'jumptable_8001B83C@l']
Translated addi r9 r9 jumptable_8001B83C@l to: ['gc_env.r[9] = (uint32_t)&jumptable_8001B83C; // lis + addi jumptable_8001B83C (completing pattern)']
Translated slwi r10 r10 2 to: ['gc_env.r[10] = gc_env.r[10] << 2; // slwi r10, r10, 2']
Translated lwzx r9 r9 r10 to: ['gc_env.r[9] = gc_mem_read32(gc_env.ram, gc_env.r[9] + gc_env.r[10]); // lwzx r9, r9, r10']
Translated mtctr r9 to: gc_env.ctr = gc_env.r[9]; // Move to count register
Translated bctr  to: ['return gc_env.ctr; // bctr']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: li, operands: ['r0', '0xa']
Translated li r0 0xa to: ['gc_env.r[0] = 0xa; // li r0, 0xa']
Translated bge .L_800138E8 to: if (gc_env.cr[0] >= 0) goto L_800138E8;
Translated neg r3 r3 to: ['gc_env.r[3] = -(int32_t)gc_env.r[3]; // neg r3, r3']
Processing opcode: li, operands: ['r8', '0x1']
Translated li r8 0x1 to: ['gc_env.r[8] = 0x1; // li r8, 0x1']
Translated b .L_800138E8 to: goto L_800138E8;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', '0x1(r5)']
Translated stb r0 0x1(r5) to: ['gc_mem_write8(gc_env.ram, gc_env.r[5] + 0x1, gc_env.r[0]); // stb r0, 0x1(r5)']
Processing opcode: li, operands: ['r0', '0x8']
Translated li r0 0x8 to: ['gc_env.r[0] = 0x8; // li r0, 0x8']
Translated b .L_800138E8 to: goto L_800138E8;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', '0x1(r5)']
Translated stb r0 0x1(r5) to: ['gc_mem_write8(gc_env.ram, gc_env.r[5] + 0x1, gc_env.r[0]); // stb r0, 0x1(r5)']
Processing opcode: li, operands: ['r0', '0xa']
Translated li r0 0xa to: ['gc_env.r[0] = 0xa; // li r0, 0xa']
Translated b .L_800138E8 to: goto L_800138E8;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', '0x1(r5)']
Translated stb r0 0x1(r5) to: ['gc_mem_write8(gc_env.ram, gc_env.r[5] + 0x1, gc_env.r[0]); // stb r0, 0x1(r5)']
Processing opcode: li, operands: ['r0', '0x10']
Translated li r0 0x10 to: ['gc_env.r[0] = 0x10; // li r0, 0x10']
Processing opcode: divwu, operands: ['r9', 'r3', 'r0']
Translated divwu r9 r3 r0 to: ['gc_env.r[9] = (uint32_t)gc_env.r[3] / (uint32_t)gc_env.r[0]; // divwu r9, r3, r0']
Processing opcode: mullw, operands: ['r9', 'r9', 'r0']
Translated mullw r9 r9 r0 to: ['gc_env.r[9] = gc_env.r[9] * gc_env.r[0]; // mullw r9, r9, r0']
Processing opcode: subf, operands: ['r10', 'r9', 'r3']
Translated subf r10 r9 r3 to: ['gc_env.r[10] = gc_env.r[3] - gc_env.r[9]; // subf r10, r9, r3']
Processing opcode: divwu, operands: ['r3', 'r3', 'r0']
Translated divwu r3 r3 r0 to: ['gc_env.r[3] = (uint32_t)gc_env.r[3] / (uint32_t)gc_env.r[0]; // divwu r3, r3, r0']
Translated cmpwi r10 0xa to: gc_env.cr[0] = (gc_env.r[10] == 0xa) ? 0 : (gc_env.r[10] < 0xa ? -1 : 1); // Compare with immediate
Translated bge .L_80013908 to: if (gc_env.cr[0] >= 0) goto L_80013908;
Processing opcode: addi, operands: ['r10', 'r10', '0x30']
Translated addi r10 r10 0x30 to: ['gc_env.r[10] += 48; // addi r10, r10, 0x30']
Translated b .L_80013920 to: goto L_80013920;
Processing opcode: lbz, operands: ['r9', '0x5(r5)']
Translated lbz r9 0x5(r5) to: ['gc_env.r[9] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x5); // lbz r9, 0x5(r5)']
Translated cmplwi r9 0x78 to: gc_env.cr[0] = ((uint32_t)gc_env.r[9] == 0x78) ? 0 : ((uint32_t)gc_env.r[9] < 0x78 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8001391C to: if (gc_env.cr[0] != 0) goto L_8001391C;
Processing opcode: addi, operands: ['r10', 'r10', '0x57']
Translated addi r10 r10 0x57 to: ['gc_env.r[10] += 87; // addi r10, r10, 0x57']
Translated b .L_80013920 to: goto L_80013920;
Processing opcode: addi, operands: ['r10', 'r10', '0x37']
Translated addi r10 r10 0x37 to: ['gc_env.r[10] += 55; // addi r10, r10, 0x37']
Translated extsb r9 r10 to: ['gc_env.r[9] = (int32_t)(int8_t)(gc_env.r[10] & 0xFF); // extsb r9, r10']
Processing opcode: stb, operands: ['r9', '-0x1(r6)']
Translated stb r9 -0x1(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + -0x1, gc_env.r[9]); // stb r9, -0x1(r6)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: subi, operands: ['r6', 'r6', '0x1']
Translated subi r6 r6 0x1 to: ['gc_env.r[6] = gc_env.r[6] - 1; // subi r6, r6, 1']
Processing opcode: addi, operands: ['r7', 'r7', '0x1']
Translated addi r7 r7 0x1 to: ['gc_env.r[7] += 1; // addi r7, r7, 0x1']
Translated bne .L_800138E8 to: if (gc_env.cr[0] != 0) goto L_800138E8;
Translated cmplwi r0 0x8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x8) ? 0 : ((uint32_t)gc_env.r[0] < 0x8 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80013964 to: if (gc_env.cr[0] != 0) goto L_80013964;
Processing opcode: lbz, operands: ['r3', '0x3(r5)']
Translated lbz r3 0x3(r5) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x3); // lbz r3, 0x3(r5)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013964 to: if (gc_env.cr[0] == 0) goto L_80013964;
Processing opcode: lbz, operands: ['r3', '0x0(r6)']
Translated lbz r3 0x0(r6) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[6] + 0x0); // lbz r3, 0x0(r6)']
Translated cmpwi r3 0x30 to: gc_env.cr[0] = (gc_env.r[3] == 0x30) ? 0 : (gc_env.r[3] < 0x30 ? -1 : 1); // Compare with immediate
Translated beq .L_80013964 to: if (gc_env.cr[0] == 0) goto L_80013964;
Processing opcode: li, operands: ['r3', '0x30']
Translated li r3 0x30 to: ['gc_env.r[3] = 0x30; // li r3, 0x30']
Translated stbu r3 -0x1(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + -0x1, gc_env.r[3]); // stbu r3, -0x1(r6)', 'gc_env.r[6] = gc_env.r[6] + -0x1;']
Processing opcode: addi, operands: ['r7', 'r7', '0x1']
Translated addi r7 r7 0x1 to: ['gc_env.r[7] += 1; // addi r7, r7, 0x1']
Processing opcode: lbz, operands: ['r3', '0x0(r5)']
Translated lbz r3 0x0(r5) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x0); // lbz r3, 0x0(r5)']
Translated cmplwi r3 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x2) ? 0 : ((uint32_t)gc_env.r[3] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800139B8 to: if (gc_env.cr[0] != 0) goto L_800139B8;
Processing opcode: lwz, operands: ['r3', '0x8(r5)']
Translated lwz r3 0x8(r5) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x8); // lwz r3, 0x8(r5)']
Translated cmpwi r8 0x0 to: gc_env.cr[0] = (gc_env.r[8] == 0x0) ? 0 : (gc_env.r[8] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: stw, operands: ['r3', '0xc(r5)']
Translated stw r3 0xc(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0xC, gc_env.r[3]); // stw r3, 0xC(r5)']
Translated bne .L_8001398C to: if (gc_env.cr[0] != 0) goto L_8001398C;
Processing opcode: lbz, operands: ['r3', '0x1(r5)']
Translated lbz r3 0x1(r5) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x1); // lbz r3, 0x1(r5)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013998 to: if (gc_env.cr[0] == 0) goto L_80013998;
Processing opcode: lwz, operands: ['r3', '0xc(r5)']
Translated lwz r3 0xc(r5) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xC); // lwz r3, 0xC(r5)']
Processing opcode: subi, operands: ['r3', 'r3', '0x1']
Translated subi r3 r3 0x1 to: ['gc_env.r[3] = gc_env.r[3] - 1; // subi r3, r3, 1']
Processing opcode: stw, operands: ['r3', '0xc(r5)']
Translated stw r3 0xc(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0xC, gc_env.r[3]); // stw r3, 0xC(r5)']
Translated cmplwi r0 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x10) ? 0 : ((uint32_t)gc_env.r[0] < 0x10 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800139B8 to: if (gc_env.cr[0] != 0) goto L_800139B8;
Processing opcode: lbz, operands: ['r3', '0x3(r5)']
Translated lbz r3 0x3(r5) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x3); // lbz r3, 0x3(r5)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800139B8 to: if (gc_env.cr[0] == 0) goto L_800139B8;
Processing opcode: lwz, operands: ['r3', '0xc(r5)']
Translated lwz r3 0xc(r5) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xC); // lwz r3, 0xC(r5)']
Processing opcode: subi, operands: ['r3', 'r3', '0x2']
Translated subi r3 r3 0x2 to: ['gc_env.r[3] = gc_env.r[3] - 2; // subi r3, r3, 2']
Processing opcode: stw, operands: ['r3', '0xc(r5)']
Translated stw r3 0xc(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0xC, gc_env.r[3]); // stw r3, 0xC(r5)']
Processing opcode: lwz, operands: ['r9', '0xc(r5)']
Translated lwz r9 0xc(r5) to: ['gc_env.r[9] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xC); // lwz r9, 0xC(r5)']
Processing opcode: subf, operands: ['r3', 'r6', 'r4']
Translated subf r3 r6 r4 to: ['gc_env.r[3] = gc_env.r[4] - gc_env.r[6]; // subf r3, r6, r4']
Processing opcode: add, operands: ['r3', 'r9', 'r3']
Translated add r3 r9 r3 to: ['gc_env.r[3] = gc_env.r[9] + gc_env.r[3]; // add r3, r9, r3']
Translated cmpwi r3 0x1fd to: gc_env.cr[0] = (gc_env.r[3] == 0x1fd) ? 0 : (gc_env.r[3] < 0x1fd ? -1 : 1); // Compare with immediate
Translated ble .L_800139D4 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_800139D4; // ble .L_800139D4']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Processing opcode: li, operands: ['r4', '0x30']
Translated li r4 0x30 to: ['gc_env.r[4] = 0x30; // li r4, 0x30']
Translated b .L_800139E4 to: goto L_800139E4;
Translated stbu r4 -0x1(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + -0x1, gc_env.r[4]); // stbu r4, -0x1(r6)', 'gc_env.r[6] = gc_env.r[6] + -0x1;']
Processing opcode: addi, operands: ['r7', 'r7', '0x1']
Translated addi r7 r7 0x1 to: ['gc_env.r[7] += 1; // addi r7, r7, 0x1']
Processing opcode: lwz, operands: ['r3', '0xc(r5)']
Translated lwz r3 0xc(r5) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xC); // lwz r3, 0xC(r5)']
Translated cmpw r7 r3 to: ['gc_env.cr[0] = (int32_t)gc_env.r[7] < (int32_t)gc_env.r[3] ? 0x8 : ((int32_t)gc_env.r[7] > (int32_t)gc_env.r[3] ? 0x4 : 0x2); // cmpw r7, r3']
Translated blt .L_800139DC to: ['if (gc_env.cr[0] & 0x8) goto L_800139DC; // blt .L_800139DC']
Translated cmplwi r0 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x10) ? 0 : ((uint32_t)gc_env.r[0] < 0x10 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80013A14 to: if (gc_env.cr[0] != 0) goto L_80013A14;
Processing opcode: lbz, operands: ['r0', '0x3(r5)']
Translated lbz r0 0x3(r5) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x3); // lbz r0, 0x3(r5)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013A14 to: if (gc_env.cr[0] == 0) goto L_80013A14;
Processing opcode: lbz, operands: ['r3', '0x5(r5)']
Translated lbz r3 0x5(r5) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x5); // lbz r3, 0x5(r5)']
Processing opcode: li, operands: ['r0', '0x30']
Translated li r0 0x30 to: ['gc_env.r[0] = 0x30; // li r0, 0x30']
Processing opcode: stb, operands: ['r3', '-0x1(r6)']
Translated stb r3 -0x1(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + -0x1, gc_env.r[3]); // stb r3, -0x1(r6)']
Translated stbu r0 -0x2(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + -0x2, gc_env.r[0]); // stbu r0, -0x2(r6)', 'gc_env.r[6] = gc_env.r[6] + -0x2;']
Translated cmpwi r8 0x0 to: gc_env.cr[0] = (gc_env.r[8] == 0x0) ? 0 : (gc_env.r[8] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80013A28 to: if (gc_env.cr[0] == 0) goto L_80013A28;
Processing opcode: li, operands: ['r0', '0x2d']
Translated li r0 0x2d to: ['gc_env.r[0] = 0x2d; // li r0, 0x2d']
Translated stbu r0 -0x1(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r6)', 'gc_env.r[6] = gc_env.r[6] + -0x1;']
Translated b .L_80013A50 to: goto L_80013A50;
Processing opcode: lbz, operands: ['r0', '0x1(r5)']
Translated lbz r0 0x1(r5) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x1); // lbz r0, 0x1(r5)']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80013A40 to: if (gc_env.cr[0] != 0) goto L_80013A40;
Processing opcode: li, operands: ['r0', '0x2b']
Translated li r0 0x2b to: ['gc_env.r[0] = 0x2b; // li r0, 0x2b']
Translated stbu r0 -0x1(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r6)', 'gc_env.r[6] = gc_env.r[6] + -0x1;']
Translated b .L_80013A50 to: goto L_80013A50;
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80013A50 to: if (gc_env.cr[0] != 0) goto L_80013A50;
Processing opcode: li, operands: ['r0', '0x20']
Translated li r0 0x20 to: ['gc_env.r[0] = 0x20; // li r0, 0x20']
Translated stbu r0 -0x1(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + -0x1, gc_env.r[0]); // stbu r0, -0x1(r6)', 'gc_env.r[6] = gc_env.r[6] + -0x1;']
Translated mr r3 r6 to: gc_env.r[3] = gc_env.r[6]; // Move register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stwu, operands: ['r1', '-0x38(r1)']
Translated stwu r1 -0x38(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x38, gc_env.r[1]); // stwu r1, -0x38(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x38;']
Processing opcode: stw, operands: ['r31', '0x34(r1)']
Translated stw r31 0x34(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[31]); // stw r31, 0x34(r1)']
Processing opcode: addi, operands: ['r31', 'r3', '0x1']
Translated addi r31 r3 0x1 to: ['gc_env.r[31] = gc_env.r[3] + 1; // addi r31, r3, 0x1']
Processing opcode: stw, operands: ['r30', '0x30(r1)']
Translated stw r30 0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[30]); // stw r30, 0x30(r1)']
Processing opcode: addi, operands: ['r30', 'r5', '0x0']
Translated addi r30 r5 0x0 to: ['gc_env.r[30] = gc_env.r[5] + 0; // addi r30, r5, 0x0']
Processing opcode: stw, operands: ['r29', '0x2c(r1)']
Translated stw r29 0x2c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[29]); // stw r29, 0x2C(r1)']
Processing opcode: addi, operands: ['r29', 'r4', '0x0']
Translated addi r29 r4 0x0 to: ['gc_env.r[29] = gc_env.r[4] + 0; // addi r29, r4, 0x0']
Processing opcode: stb, operands: ['r0', '0x14(r1)']
Translated stb r0 0x14(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stb r0, 0x14(r1)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', '0x15(r1)']
Translated stb r0 0x15(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x15, gc_env.r[0]); // stb r0, 0x15(r1)']
Processing opcode: stb, operands: ['r0', '0x16(r1)']
Translated stb r0 0x16(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x16, gc_env.r[0]); // stb r0, 0x16(r1)']
Processing opcode: stb, operands: ['r0', '0x17(r1)']
Translated stb r0 0x17(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x17, gc_env.r[0]); // stb r0, 0x17(r1)']
Processing opcode: stb, operands: ['r0', '0x18(r1)']
Translated stb r0 0x18(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[0]); // stb r0, 0x18(r1)']
Processing opcode: stw, operands: ['r0', '0x1c(r1)']
Translated stw r0 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r1)']
Processing opcode: stw, operands: ['r0', '0x20(r1)']
Translated stw r0 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[0]); // stw r0, 0x20(r1)']
Processing opcode: lbz, operands: ['r3', '0x1(r3)']
Translated lbz r3 0x1(r3) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x1); // lbz r3, 0x1(r3)']
Translated extsb r3 r3 to: ['gc_env.r[3] = (int32_t)(int8_t)(gc_env.r[3] & 0xFF); // extsb r3, r3']
Translated cmpwi r3 0x25 to: gc_env.cr[0] = (gc_env.r[3] == 0x25) ? 0 : (gc_env.r[3] < 0x25 ? -1 : 1); // Compare with immediate
Translated bne .L_80013ADC to: if (gc_env.cr[0] != 0) goto L_80013ADC;
Processing opcode: stb, operands: ['r3', '0x19(r1)']
Translated stb r3 0x19(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x19, gc_env.r[3]); // stb r3, 0x19(r1)']
Processing opcode: addi, operands: ['r3', 'r31', '0x1']
Translated addi r3 r31 0x1 to: ['gc_env.r[3] = gc_env.r[31] + 1; // addi r3, r31, 0x1']
Processing opcode: lwz, operands: ['r4', '0x14(r1)']
Translated lwz r4 0x14(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r4, 0x14(r1)']
Processing opcode: lwz, operands: ['r0', '0x18(r1)']
Translated lwz r0 0x18(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r0, 0x18(r1)']
Processing opcode: stw, operands: ['r4', '0x0(r30)']
Translated stw r4 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[4]); // stw r4, (r30)']
Processing opcode: stw, operands: ['r0', '0x4(r30)']
Translated stw r0 0x4(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x4, gc_env.r[0]); // stw r0, 0x4(r30)']
Processing opcode: lwz, operands: ['r4', '0x1c(r1)']
Translated lwz r4 0x1c(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r4, 0x1C(r1)']
Processing opcode: lwz, operands: ['r0', '0x20(r1)']
Translated lwz r0 0x20(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r0, 0x20(r1)']
Processing opcode: stw, operands: ['r4', '0x8(r30)']
Translated stw r4 0x8(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x8, gc_env.r[4]); // stw r4, 0x8(r30)']
Processing opcode: stw, operands: ['r0', '0xc(r30)']
Translated stw r0 0xc(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0xC, gc_env.r[0]); // stw r0, 0xC(r30)']
Translated b .L_80013F14 to: goto L_80013F14;
Translated lis r4 jumptable_8001B990@ha to: ['gc_env.r[4] = ((uint32_t)&jumptable_8001B990 >> 16) & 0xFFFF; // lis r4, jumptable_8001B990@ha']
Processing opcode: addi, operands: ['r4', 'r4', 'jumptable_8001B990@l']
Translated addi r4 r4 jumptable_8001B990@l to: ['gc_env.r[4] = (uint32_t)&jumptable_8001B990; // lis + addi jumptable_8001B990 (completing pattern)']
Processing opcode: subi, operands: ['r0', 'r3', '0x20']
Translated subi r0 r3 0x20 to: ['gc_env.r[0] = gc_env.r[3] - 32; // subi r0, r3, 32']
Translated cmplwi r0 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x10) ? 0 : ((uint32_t)gc_env.r[0] < 0x10 ? -1 : 1); // Logical compare with immediate
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Translated bgt .L_80013B58 to: ['if (gc_env.cr[0] & 0x4) goto L_80013B58; // bgt .L_80013B58']
Translated slwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] << 2; // slwi r0, r0, 2']
Translated lwzx r0 r4 r0 to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + gc_env.r[0]); // lwzx r0, r4, r0']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bctr  to: ['return gc_env.ctr; // bctr']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', '0x14(r1)']
Translated stb r0 0x14(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stb r0, 0x14(r1)']
Translated b .L_80013B5C to: goto L_80013B5C;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stb, operands: ['r0', '0x15(r1)']
Translated stb r0 0x15(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x15, gc_env.r[0]); // stb r0, 0x15(r1)']
Translated b .L_80013B5C to: goto L_80013B5C;
Processing opcode: lbz, operands: ['r0', '0x15(r1)']
Translated lbz r0 0x15(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x15); // lbz r0, 0x15(r1)']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013B5C to: if (gc_env.cr[0] == 0) goto L_80013B5C;
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Processing opcode: stb, operands: ['r0', '0x15(r1)']
Translated stb r0 0x15(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x15, gc_env.r[0]); // stb r0, 0x15(r1)']
Translated b .L_80013B5C to: goto L_80013B5C;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stb, operands: ['r0', '0x17(r1)']
Translated stb r0 0x17(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x17, gc_env.r[0]); // stb r0, 0x17(r1)']
Translated b .L_80013B5C to: goto L_80013B5C;
Processing opcode: lbz, operands: ['r0', '0x14(r1)']
Translated lbz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x14); // lbz r0, 0x14(r1)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013B5C to: if (gc_env.cr[0] == 0) goto L_80013B5C;
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Processing opcode: stb, operands: ['r0', '0x14(r1)']
Translated stb r0 0x14(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stb r0, 0x14(r1)']
Translated b .L_80013B5C to: goto L_80013B5C;
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated cmpwi r5 0x0 to: gc_env.cr[0] = (gc_env.r[5] == 0x0) ? 0 : (gc_env.r[5] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80013B70 to: if (gc_env.cr[0] == 0) goto L_80013B70;
Translated lbzu r3 0x1(r31) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 1); // lbzu r3, 1(r31)', 'gc_env.r[31] = gc_env.r[31] + 1;']
Translated extsb r3 r3 to: ['gc_env.r[3] = (int32_t)(int8_t)(gc_env.r[3] & 0xFF); // extsb r3, r3']
Translated b .L_80013AE4 to: goto L_80013AE4;
Translated cmpwi r3 0x2a to: gc_env.cr[0] = (gc_env.r[3] == 0x2a) ? 0 : (gc_env.r[3] < 0x2a ? -1 : 1); // Compare with immediate
Translated bne .L_80013BB4 to: if (gc_env.cr[0] != 0) goto L_80013BB4;
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl __va_arg to: __va_arg();
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: stw, operands: ['r0', '0x1c(r1)']
Translated stw r0 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r1)']
Translated bge .L_80013BA8 to: if (gc_env.cr[0] >= 0) goto L_80013BA8;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', '0x14(r1)']
Translated stb r0 0x14(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stb r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Translated neg r0 r0 to: ['gc_env.r[0] = -(int32_t)gc_env.r[0]; // neg r0, r0']
Processing opcode: stw, operands: ['r0', '0x1c(r1)']
Translated stw r0 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r1)']
Translated lbzu r3 0x1(r31) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 1); // lbzu r3, 1(r31)', 'gc_env.r[31] = gc_env.r[31] + 1;']
Translated extsb r3 r3 to: ['gc_env.r[3] = (int32_t)(int8_t)(gc_env.r[3] & 0xFF); // extsb r3, r3']
Translated b .L_80013BF0 to: goto L_80013BF0;
Translated lis r4 lbl_8001A500@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001A500 >> 16) & 0xFFFF; // lis r4, lbl_8001A500@ha']
Processing opcode: addi, operands: ['r5', 'r4', 'lbl_8001A500@l']
Translated addi r5 r4 lbl_8001A500@l to: ['gc_env.r[5] = (uint32_t)&lbl_8001A500; // lis + addi lbl_8001A500 (completing pattern)']
Translated b .L_80013BDC to: goto L_80013BDC;
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: mulli, operands: ['r0', 'r0', '0xa']
Translated mulli r0 r0 0xa to: ['gc_env.r[0] = gc_env.r[0] * 10; // mulli r0, r0, 10']
Processing opcode: add, operands: ['r3', 'r3', 'r0']
Translated add r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] + gc_env.r[0]; // add r3, r3, r0']
Processing opcode: subi, operands: ['r0', 'r3', '0x30']
Translated subi r0 r3 0x30 to: ['gc_env.r[0] = gc_env.r[3] - 48; // subi r0, r3, 48']
Processing opcode: stw, operands: ['r0', '0x1c(r1)']
Translated stw r0 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r1)']
Translated lbzu r3 0x1(r31) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 1); // lbzu r3, 1(r31)', 'gc_env.r[31] = gc_env.r[31] + 1;']
Translated extsb r3 r3 to: ['gc_env.r[3] = (int32_t)(int8_t)(gc_env.r[3] & 0xFF); // extsb r3, r3']
Translated clrlwi r0 r3 24 to: ['gc_env.r[0] = gc_env.r[3] & 0xFF; // clrlwi r0, r3, 24']
Processing opcode: add, operands: ['r4', 'r5', 'r0']
Translated add r4 r5 r0 to: ['gc_env.r[4] = gc_env.r[5] + gc_env.r[0]; // add r4, r5, r0']
Processing opcode: lbz, operands: ['r0', '0x0(r4)']
Translated lbz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 0x0); // lbz r0, 0x0(r4)']
Translated rlwinm. r0 r0 0 27 27 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x10; // rlwinm r0, r0, 0, 27, 27', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_80013BC0 to: if (gc_env.cr[0] != 0) goto L_80013BC0;
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Translated cmpwi r0 0x1fd to: gc_env.cr[0] = (gc_env.r[0] == 0x1fd) ? 0 : (gc_env.r[0] < 0x1fd ? -1 : 1); // Compare with immediate
Translated ble .L_80013C2C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80013C2C; // ble .L_80013C2C']
Processing opcode: li, operands: ['r0', '0xff']
Translated li r0 0xff to: ['gc_env.r[0] = 0xff; // li r0, 0xff']
Processing opcode: stb, operands: ['r0', '0x19(r1)']
Translated stb r0 0x19(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x19, gc_env.r[0]); // stb r0, 0x19(r1)']
Processing opcode: addi, operands: ['r3', 'r31', '0x1']
Translated addi r3 r31 0x1 to: ['gc_env.r[3] = gc_env.r[31] + 1; // addi r3, r31, 0x1']
Processing opcode: lwz, operands: ['r4', '0x14(r1)']
Translated lwz r4 0x14(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r4, 0x14(r1)']
Processing opcode: lwz, operands: ['r0', '0x18(r1)']
Translated lwz r0 0x18(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r0, 0x18(r1)']
Processing opcode: stw, operands: ['r4', '0x0(r30)']
Translated stw r4 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[4]); // stw r4, (r30)']
Processing opcode: stw, operands: ['r0', '0x4(r30)']
Translated stw r0 0x4(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x4, gc_env.r[0]); // stw r0, 0x4(r30)']
Processing opcode: lwz, operands: ['r4', '0x1c(r1)']
Translated lwz r4 0x1c(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r4, 0x1C(r1)']
Processing opcode: lwz, operands: ['r0', '0x20(r1)']
Translated lwz r0 0x20(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r0, 0x20(r1)']
Processing opcode: stw, operands: ['r4', '0x8(r30)']
Translated stw r4 0x8(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x8, gc_env.r[4]); // stw r4, 0x8(r30)']
Processing opcode: stw, operands: ['r0', '0xc(r30)']
Translated stw r0 0xc(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0xC, gc_env.r[0]); // stw r0, 0xC(r30)']
Translated b .L_80013F14 to: goto L_80013F14;
Translated cmpwi r3 0x2e to: gc_env.cr[0] = (gc_env.r[3] == 0x2e) ? 0 : (gc_env.r[3] < 0x2e ? -1 : 1); // Compare with immediate
Translated bne .L_80013CB8 to: if (gc_env.cr[0] != 0) goto L_80013CB8;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stb, operands: ['r0', '0x16(r1)']
Translated stb r0 0x16(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x16, gc_env.r[0]); // stb r0, 0x16(r1)']
Translated lbzu r3 0x1(r31) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 1); // lbzu r3, 1(r31)', 'gc_env.r[31] = gc_env.r[31] + 1;']
Translated extsb r3 r3 to: ['gc_env.r[3] = (int32_t)(int8_t)(gc_env.r[3] & 0xFF); // extsb r3, r3']
Translated cmpwi r3 0x2a to: gc_env.cr[0] = (gc_env.r[3] == 0x2a) ? 0 : (gc_env.r[3] < 0x2a ? -1 : 1); // Compare with immediate
Translated bne .L_80013C7C to: if (gc_env.cr[0] != 0) goto L_80013C7C;
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl __va_arg to: __va_arg();
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: stw, operands: ['r0', '0x20(r1)']
Translated stw r0 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[0]); // stw r0, 0x20(r1)']
Translated bge .L_80013C70 to: if (gc_env.cr[0] >= 0) goto L_80013C70;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', '0x16(r1)']
Translated stb r0 0x16(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x16, gc_env.r[0]); // stb r0, 0x16(r1)']
Translated lbzu r3 0x1(r31) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 1); // lbzu r3, 1(r31)', 'gc_env.r[31] = gc_env.r[31] + 1;']
Translated extsb r3 r3 to: ['gc_env.r[3] = (int32_t)(int8_t)(gc_env.r[3] & 0xFF); // extsb r3, r3']
Translated b .L_80013CB8 to: goto L_80013CB8;
Translated lis r4 lbl_8001A500@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001A500 >> 16) & 0xFFFF; // lis r4, lbl_8001A500@ha']
Processing opcode: addi, operands: ['r5', 'r4', 'lbl_8001A500@l']
Translated addi r5 r4 lbl_8001A500@l to: ['gc_env.r[5] = (uint32_t)&lbl_8001A500; // lis + addi lbl_8001A500 (completing pattern)']
Translated b .L_80013CA4 to: goto L_80013CA4;
Processing opcode: lwz, operands: ['r0', '0x20(r1)']
Translated lwz r0 0x20(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r0, 0x20(r1)']
Processing opcode: mulli, operands: ['r0', 'r0', '0xa']
Translated mulli r0 r0 0xa to: ['gc_env.r[0] = gc_env.r[0] * 10; // mulli r0, r0, 10']
Processing opcode: add, operands: ['r3', 'r3', 'r0']
Translated add r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] + gc_env.r[0]; // add r3, r3, r0']
Processing opcode: subi, operands: ['r0', 'r3', '0x30']
Translated subi r0 r3 0x30 to: ['gc_env.r[0] = gc_env.r[3] - 48; // subi r0, r3, 48']
Processing opcode: stw, operands: ['r0', '0x20(r1)']
Translated stw r0 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[0]); // stw r0, 0x20(r1)']
Translated lbzu r3 0x1(r31) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 1); // lbzu r3, 1(r31)', 'gc_env.r[31] = gc_env.r[31] + 1;']
Translated extsb r3 r3 to: ['gc_env.r[3] = (int32_t)(int8_t)(gc_env.r[3] & 0xFF); // extsb r3, r3']
Translated clrlwi r0 r3 24 to: ['gc_env.r[0] = gc_env.r[3] & 0xFF; // clrlwi r0, r3, 24']
Processing opcode: add, operands: ['r4', 'r5', 'r0']
Translated add r4 r5 r0 to: ['gc_env.r[4] = gc_env.r[5] + gc_env.r[0]; // add r4, r5, r0']
Processing opcode: lbz, operands: ['r0', '0x0(r4)']
Translated lbz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 0x0); // lbz r0, 0x0(r4)']
Translated rlwinm. r0 r0 0 27 27 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x10; // rlwinm r0, r0, 0, 27, 27', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_80013C88 to: if (gc_env.cr[0] != 0) goto L_80013C88;
Translated cmpwi r3 0x68 to: gc_env.cr[0] = (gc_env.r[3] == 0x68) ? 0 : (gc_env.r[3] < 0x68 ? -1 : 1); // Compare with immediate
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated beq .L_80013CE0 to: if (gc_env.cr[0] == 0) goto L_80013CE0;
Translated bge .L_80013CD4 to: if (gc_env.cr[0] >= 0) goto L_80013CD4;
Translated cmpwi r3 0x4c to: gc_env.cr[0] = (gc_env.r[3] == 0x4c) ? 0 : (gc_env.r[3] < 0x4c ? -1 : 1); // Compare with immediate
Translated beq .L_80013D2C to: if (gc_env.cr[0] == 0) goto L_80013D2C;
Translated b .L_80013D38 to: goto L_80013D38;
Translated cmpwi r3 0x6c to: gc_env.cr[0] = (gc_env.r[3] == 0x6c) ? 0 : (gc_env.r[3] < 0x6c ? -1 : 1); // Compare with immediate
Translated beq .L_80013D04 to: if (gc_env.cr[0] == 0) goto L_80013D04;
Translated b .L_80013D38 to: goto L_80013D38;
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Processing opcode: stb, operands: ['r0', '0x18(r1)']
Translated stb r0 0x18(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[0]); // stb r0, 0x18(r1)']
Processing opcode: lbz, operands: ['r0', '0x1(r31)']
Translated lbz r0 0x1(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x1); // lbz r0, 0x1(r31)']
Translated cmpwi r0 0x68 to: gc_env.cr[0] = (gc_env.r[0] == 0x68) ? 0 : (gc_env.r[0] < 0x68 ? -1 : 1); // Compare with immediate
Translated bne .L_80013D3C to: if (gc_env.cr[0] != 0) goto L_80013D3C;
Processing opcode: stb, operands: ['r4', '0x18(r1)']
Translated stb r4 0x18(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[4]); // stb r4, 0x18(r1)']
Translated lbzu r3 0x1(r31) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 1); // lbzu r3, 1(r31)', 'gc_env.r[31] = gc_env.r[31] + 1;']
Translated extsb r3 r3 to: ['gc_env.r[3] = (int32_t)(int8_t)(gc_env.r[3] & 0xFF); // extsb r3, r3']
Translated b .L_80013D3C to: goto L_80013D3C;
Processing opcode: li, operands: ['r0', '0x3']
Translated li r0 0x3 to: ['gc_env.r[0] = 0x3; // li r0, 0x3']
Processing opcode: stb, operands: ['r0', '0x18(r1)']
Translated stb r0 0x18(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[0]); // stb r0, 0x18(r1)']
Processing opcode: lbz, operands: ['r0', '0x1(r31)']
Translated lbz r0 0x1(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x1); // lbz r0, 0x1(r31)']
Translated cmpwi r0 0x6c to: gc_env.cr[0] = (gc_env.r[0] == 0x6c) ? 0 : (gc_env.r[0] < 0x6c ? -1 : 1); // Compare with immediate
Translated bne .L_80013D3C to: if (gc_env.cr[0] != 0) goto L_80013D3C;
Processing opcode: li, operands: ['r0', '0x4']
Translated li r0 0x4 to: ['gc_env.r[0] = 0x4; // li r0, 0x4']
Processing opcode: stb, operands: ['r0', '0x18(r1)']
Translated stb r0 0x18(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[0]); // stb r0, 0x18(r1)']
Translated lbzu r3 0x1(r31) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 1); // lbzu r3, 1(r31)', 'gc_env.r[31] = gc_env.r[31] + 1;']
Translated extsb r3 r3 to: ['gc_env.r[3] = (int32_t)(int8_t)(gc_env.r[3] & 0xFF); // extsb r3, r3']
Translated b .L_80013D3C to: goto L_80013D3C;
Processing opcode: li, operands: ['r0', '0x5']
Translated li r0 0x5 to: ['gc_env.r[0] = 0x5; // li r0, 0x5']
Processing opcode: stb, operands: ['r0', '0x18(r1)']
Translated stb r0 0x18(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[0]); // stb r0, 0x18(r1)']
Translated b .L_80013D3C to: goto L_80013D3C;
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80013D4C to: if (gc_env.cr[0] == 0) goto L_80013D4C;
Translated lbzu r3 0x1(r31) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 1); // lbzu r3, 1(r31)', 'gc_env.r[31] = gc_env.r[31] + 1;']
Translated extsb r3 r3 to: ['gc_env.r[3] = (int32_t)(int8_t)(gc_env.r[3] & 0xFF); // extsb r3, r3']
Processing opcode: subi, operands: ['r0', 'r3', '0x45']
Translated subi r0 r3 0x45 to: ['gc_env.r[0] = gc_env.r[3] - 69; // subi r0, r3, 69']
Processing opcode: stb, operands: ['r3', '0x19(r1)']
Translated stb r3 0x19(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x19, gc_env.r[3]); // stb r3, 0x19(r1)']
Translated cmplwi r0 0x33 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x33) ? 0 : ((uint32_t)gc_env.r[0] < 0x33 ? -1 : 1); // Logical compare with immediate
Translated bgt .L_80013EE8 to: ['if (gc_env.cr[0] & 0x4) goto L_80013EE8; // bgt .L_80013EE8']
Translated lis r3 jumptable_8001B8C0@ha to: ['gc_env.r[3] = ((uint32_t)&jumptable_8001B8C0 >> 16) & 0xFFFF; // lis r3, jumptable_8001B8C0@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'jumptable_8001B8C0@l']
Translated addi r3 r3 jumptable_8001B8C0@l to: ['gc_env.r[3] = (uint32_t)&jumptable_8001B8C0; // lis + addi jumptable_8001B8C0 (completing pattern)']
Translated slwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] << 2; // slwi r0, r0, 2']
Translated lwzx r0 r3 r0 to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + gc_env.r[0]); // lwzx r0, r3, r0']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bctr  to: ['return gc_env.ctr; // bctr']
Processing opcode: lbz, operands: ['r0', '0x18(r1)']
Translated lbz r0 0x18(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x18); // lbz r0, 0x18(r1)']
Translated cmplwi r0 0x5 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x5) ? 0 : ((uint32_t)gc_env.r[0] < 0x5 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80013D8C to: if (gc_env.cr[0] != 0) goto L_80013D8C;
Processing opcode: li, operands: ['r0', '0xff']
Translated li r0 0xff to: ['gc_env.r[0] = 0xff; // li r0, 0xff']
Processing opcode: stb, operands: ['r0', '0x19(r1)']
Translated stb r0 0x19(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x19, gc_env.r[0]); // stb r0, 0x19(r1)']
Translated b .L_80013EF0 to: goto L_80013EF0;
Processing opcode: lbz, operands: ['r0', '0x16(r1)']
Translated lbz r0 0x16(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x16); // lbz r0, 0x16(r1)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80013DA4 to: if (gc_env.cr[0] != 0) goto L_80013DA4;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', '0x20(r1)']
Translated stw r0 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[0]); // stw r0, 0x20(r1)']
Translated b .L_80013EF0 to: goto L_80013EF0;
Processing opcode: lbz, operands: ['r0', '0x14(r1)']
Translated lbz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x14); // lbz r0, 0x14(r1)']
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80013EF0 to: if (gc_env.cr[0] != 0) goto L_80013EF0;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stb, operands: ['r0', '0x14(r1)']
Translated stb r0 0x14(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stb r0, 0x14(r1)']
Translated b .L_80013EF0 to: goto L_80013EF0;
Processing opcode: lbz, operands: ['r0', '0x18(r1)']
Translated lbz r0 0x18(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x18); // lbz r0, 0x18(r1)']
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013DD0 to: if (gc_env.cr[0] == 0) goto L_80013DD0;
Translated cmplwi r0 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x4) ? 0 : ((uint32_t)gc_env.r[0] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80013DDC to: if (gc_env.cr[0] != 0) goto L_80013DDC;
Processing opcode: li, operands: ['r0', '0xff']
Translated li r0 0xff to: ['gc_env.r[0] = 0xff; // li r0, 0xff']
Processing opcode: stb, operands: ['r0', '0x19(r1)']
Translated stb r0 0x19(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x19, gc_env.r[0]); // stb r0, 0x19(r1)']
Translated b .L_80013EF0 to: goto L_80013EF0;
Processing opcode: lbz, operands: ['r0', '0x16(r1)']
Translated lbz r0 0x16(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x16); // lbz r0, 0x16(r1)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80013EF0 to: if (gc_env.cr[0] != 0) goto L_80013EF0;
Processing opcode: li, operands: ['r0', '0x6']
Translated li r0 0x6 to: ['gc_env.r[0] = 0x6; // li r0, 0x6']
Processing opcode: stw, operands: ['r0', '0x20(r1)']
Translated stw r0 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[0]); // stw r0, 0x20(r1)']
Translated b .L_80013EF0 to: goto L_80013EF0;
Processing opcode: lwz, operands: ['r0', '0x20(r1)']
Translated lwz r0 0x20(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r0, 0x20(r1)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80013E08 to: if (gc_env.cr[0] != 0) goto L_80013E08;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', '0x20(r1)']
Translated stw r0 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[0]); // stw r0, 0x20(r1)']
Processing opcode: lbz, operands: ['r0', '0x18(r1)']
Translated lbz r0 0x18(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x18); // lbz r0, 0x18(r1)']
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013E24 to: if (gc_env.cr[0] == 0) goto L_80013E24;
Translated cmplwi r0 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x4) ? 0 : ((uint32_t)gc_env.r[0] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013E24 to: if (gc_env.cr[0] == 0) goto L_80013E24;
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80013E30 to: if (gc_env.cr[0] != 0) goto L_80013E30;
Processing opcode: li, operands: ['r0', '0xff']
Translated li r0 0xff to: ['gc_env.r[0] = 0xff; // li r0, 0xff']
Processing opcode: stb, operands: ['r0', '0x19(r1)']
Translated stb r0 0x19(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x19, gc_env.r[0]); // stb r0, 0x19(r1)']
Translated b .L_80013EF0 to: goto L_80013EF0;
Processing opcode: lbz, operands: ['r0', '0x16(r1)']
Translated lbz r0 0x16(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x16); // lbz r0, 0x16(r1)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80013EF0 to: if (gc_env.cr[0] != 0) goto L_80013EF0;
Processing opcode: li, operands: ['r0', '0x6']
Translated li r0 0x6 to: ['gc_env.r[0] = 0x6; // li r0, 0x6']
Processing opcode: stw, operands: ['r0', '0x20(r1)']
Translated stw r0 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[0]); // stw r0, 0x20(r1)']
Translated b .L_80013EF0 to: goto L_80013EF0;
Processing opcode: li, operands: ['r0', '0x78']
Translated li r0 0x78 to: ['gc_env.r[0] = 0x78; // li r0, 0x78']
Processing opcode: stb, operands: ['r0', '0x19(r1)']
Translated stb r0 0x19(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x19, gc_env.r[0]); // stb r0, 0x19(r1)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: li, operands: ['r3', '0x3']
Translated li r3 0x3 to: ['gc_env.r[3] = 0x3; // li r3, 0x3']
Processing opcode: stb, operands: ['r0', '0x17(r1)']
Translated stb r0 0x17(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x17, gc_env.r[0]); // stb r0, 0x17(r1)']
Processing opcode: li, operands: ['r0', '0x8']
Translated li r0 0x8 to: ['gc_env.r[0] = 0x8; // li r0, 0x8']
Processing opcode: stb, operands: ['r3', '0x18(r1)']
Translated stb r3 0x18(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[3]); // stb r3, 0x18(r1)']
Processing opcode: stw, operands: ['r0', '0x20(r1)']
Translated stw r0 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[0]); // stw r0, 0x20(r1)']
Translated b .L_80013EF0 to: goto L_80013EF0;
Processing opcode: lbz, operands: ['r3', '0x18(r1)']
Translated lbz r3 0x18(r1) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x18); // lbz r3, 0x18(r1)']
Translated cmplwi r3 0x3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x3) ? 0 : ((uint32_t)gc_env.r[3] < 0x3 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80013E84 to: if (gc_env.cr[0] != 0) goto L_80013E84;
Processing opcode: li, operands: ['r0', '0x6']
Translated li r0 0x6 to: ['gc_env.r[0] = 0x6; // li r0, 0x6']
Processing opcode: stb, operands: ['r0', '0x18(r1)']
Translated stb r0 0x18(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[0]); // stb r0, 0x18(r1)']
Translated b .L_80013EF0 to: goto L_80013EF0;
Processing opcode: lbz, operands: ['r0', '0x16(r1)']
Translated lbz r0 0x16(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x16); // lbz r0, 0x16(r1)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80013E98 to: if (gc_env.cr[0] != 0) goto L_80013E98;
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013EF0 to: if (gc_env.cr[0] == 0) goto L_80013EF0;
Processing opcode: li, operands: ['r0', '0xff']
Translated li r0 0xff to: ['gc_env.r[0] = 0xff; // li r0, 0xff']
Processing opcode: stb, operands: ['r0', '0x19(r1)']
Translated stb r0 0x19(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x19, gc_env.r[0]); // stb r0, 0x19(r1)']
Translated b .L_80013EF0 to: goto L_80013EF0;
Processing opcode: lbz, operands: ['r0', '0x18(r1)']
Translated lbz r0 0x18(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x18); // lbz r0, 0x18(r1)']
Translated cmplwi r0 0x3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x3) ? 0 : ((uint32_t)gc_env.r[0] < 0x3 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80013EBC to: if (gc_env.cr[0] != 0) goto L_80013EBC;
Processing opcode: li, operands: ['r0', '0x6']
Translated li r0 0x6 to: ['gc_env.r[0] = 0x6; // li r0, 0x6']
Processing opcode: stb, operands: ['r0', '0x18(r1)']
Translated stb r0 0x18(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[0]); // stb r0, 0x18(r1)']
Translated b .L_80013EF0 to: goto L_80013EF0;
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013EF0 to: if (gc_env.cr[0] == 0) goto L_80013EF0;
Processing opcode: li, operands: ['r0', '0xff']
Translated li r0 0xff to: ['gc_env.r[0] = 0xff; // li r0, 0xff']
Processing opcode: stb, operands: ['r0', '0x19(r1)']
Translated stb r0 0x19(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x19, gc_env.r[0]); // stb r0, 0x19(r1)']
Translated b .L_80013EF0 to: goto L_80013EF0;
Processing opcode: lbz, operands: ['r0', '0x18(r1)']
Translated lbz r0 0x18(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x18); // lbz r0, 0x18(r1)']
Translated cmplwi r0 0x5 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x5) ? 0 : ((uint32_t)gc_env.r[0] < 0x5 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80013EF0 to: if (gc_env.cr[0] != 0) goto L_80013EF0;
Processing opcode: li, operands: ['r0', '0xff']
Translated li r0 0xff to: ['gc_env.r[0] = 0xff; // li r0, 0xff']
Processing opcode: stb, operands: ['r0', '0x19(r1)']
Translated stb r0 0x19(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x19, gc_env.r[0]); // stb r0, 0x19(r1)']
Translated b .L_80013EF0 to: goto L_80013EF0;
Processing opcode: li, operands: ['r0', '0xff']
Translated li r0 0xff to: ['gc_env.r[0] = 0xff; // li r0, 0xff']
Processing opcode: stb, operands: ['r0', '0x19(r1)']
Translated stb r0 0x19(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x19, gc_env.r[0]); // stb r0, 0x19(r1)']
Processing opcode: lwz, operands: ['r4', '0x14(r1)']
Translated lwz r4 0x14(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r4, 0x14(r1)']
Processing opcode: addi, operands: ['r3', 'r31', '0x1']
Translated addi r3 r31 0x1 to: ['gc_env.r[3] = gc_env.r[31] + 1; // addi r3, r31, 0x1']
Processing opcode: lwz, operands: ['r0', '0x18(r1)']
Translated lwz r0 0x18(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r0, 0x18(r1)']
Processing opcode: stw, operands: ['r4', '0x0(r30)']
Translated stw r4 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[4]); // stw r4, (r30)']
Processing opcode: stw, operands: ['r0', '0x4(r30)']
Translated stw r0 0x4(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x4, gc_env.r[0]); // stw r0, 0x4(r30)']
Processing opcode: lwz, operands: ['r4', '0x1c(r1)']
Translated lwz r4 0x1c(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r4, 0x1C(r1)']
Processing opcode: lwz, operands: ['r0', '0x20(r1)']
Translated lwz r0 0x20(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r0, 0x20(r1)']
Processing opcode: stw, operands: ['r4', '0x8(r30)']
Translated stw r4 0x8(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x8, gc_env.r[4]); // stw r4, 0x8(r30)']
Processing opcode: stw, operands: ['r0', '0xc(r30)']
Translated stw r0 0xc(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0xC, gc_env.r[0]); // stw r0, 0xC(r30)']
Processing opcode: lwz, operands: ['r0', '0x3c(r1)']
Translated lwz r0 0x3c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lwz r0, 0x3C(r1)']
Processing opcode: lwz, operands: ['r31', '0x34(r1)']
Translated lwz r31 0x34(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r31, 0x34(r1)']
Processing opcode: lwz, operands: ['r30', '0x30(r1)']
Translated lwz r30 0x30(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lwz r30, 0x30(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Processing opcode: lwz, operands: ['r29', '0x2c(r1)']
Translated lwz r29 0x2c(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r29, 0x2C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x38']
Translated addi r1 r1 0x38 to: ['gc_env.r[1] += 56; // addi r1, r1, 0x38']
Translated blr  to: return;
Translated clrlwi r0 r3 30 to: ['gc_env.r[0] = gc_env.r[3] & 0x3; // clrlwi r0, r3, 30']
Translated clrlwi r5 r4 30 to: ['gc_env.r[5] = gc_env.r[4] & 0x3; // clrlwi r5, r4, 30']
Translated cmplw r0 r5 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[5]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[5] ? -1 : 1); // Logical compare word
Processing opcode: addi, operands: ['r7', 'r3', '0x0']
Translated addi r7 r3 0x0 to: ['gc_env.r[7] = gc_env.r[3] + 0; // addi r7, r3, 0x0']
Translated bne .L_80013FF0 to: if (gc_env.cr[0] != 0) goto L_80013FF0;
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80013FB8 to: if (gc_env.cr[0] == 0) goto L_80013FB8;
Processing opcode: lbz, operands: ['r0', '0x0(r4)']
Translated lbz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 0x0); // lbz r0, 0x0(r4)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: stb, operands: ['r0', '0x0(r7)']
Translated stb r0 0x0(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7], gc_env.r[0]); // stb r0, (r7)']
Translated beqlr  to: ['if (gc_env.cr[0] & 0x2) return; // beqlr']
Translated subfic r0 r5 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[5]; // subfic r0, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated beq .L_80013FB0 to: if (gc_env.cr[0] == 0) goto L_80013FB0;
Translated lbzu r0 0x1(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 1); // lbzu r0, 1(r4)', 'gc_env.r[4] = gc_env.r[4] + 1;']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated stbu r0 0x1(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x1, gc_env.r[0]); // stbu r0, 0x1(r7)', 'gc_env.r[7] = gc_env.r[7] + 0x1;']
Translated beqlr  to: ['if (gc_env.cr[0] & 0x2) return; // beqlr']
Translated bdnz .L_80013F9C to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80013F9C;']
Processing opcode: addi, operands: ['r7', 'r7', '0x1']
Translated addi r7 r7 0x1 to: ['gc_env.r[7] += 1; // addi r7, r7, 0x1']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Processing opcode: lwz, operands: ['r5', '0x0(r4)']
Translated lwz r5 0x0(r4) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r5, (r4)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001EE44@sda21(r0)']
Translated lwz r0 lbl_8001EE44@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE44); // lwz r0, lbl_8001EE44@sda21(r0)']
Processing opcode: lwz, operands: ['r6', 'lbl_8001EE40@sda21(r0)']
Translated lwz r6 lbl_8001EE40@sda21(r0) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE40); // lwz r6, lbl_8001EE40@sda21(r0)']
Processing opcode: addi, operands: ['r8', 'r5', '0x0']
Translated addi r8 r5 0x0 to: ['gc_env.r[8] = gc_env.r[5] + 0; // addi r8, r5, 0x0']
Processing opcode: add, operands: ['r5', 'r5', 'r0']
Translated add r5 r5 r0 to: ['gc_env.r[5] = gc_env.r[5] + gc_env.r[0]; // add r5, r5, r0']
Translated and. r5 r5 r6 to: gc_env.r[5] = gc_env.r[5] & gc_env.r[6];
Translated bne .L_80013FF0 to: if (gc_env.cr[0] != 0) goto L_80013FF0;
Processing opcode: subi, operands: ['r7', 'r7', '0x4']
Translated subi r7 r7 0x4 to: ['gc_env.r[7] = gc_env.r[7] - 4; // subi r7, r7, 4']
Processing opcode: stwu, operands: ['r8', '0x4(r7)']
Translated stwu r8 0x4(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7] + 0x4, gc_env.r[8]); // stwu r8, 0x4(r7)', 'gc_env.r[7] = gc_env.r[7] + 0x4;']
Processing opcode: lwzu, operands: ['r8', '0x4(r4)']
Translated lwzu r8 0x4(r4) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwzu r8, 0x4(r4)', 'gc_env.r[4] = gc_env.r[4] + 0x4;']
Processing opcode: add, operands: ['r5', 'r8', 'r0']
Translated add r5 r8 r0 to: ['gc_env.r[5] = gc_env.r[8] + gc_env.r[0]; // add r5, r8, r0']
Translated and. r5 r5 r6 to: gc_env.r[5] = gc_env.r[5] & gc_env.r[6];
Translated beq .L_80013FD8 to: if (gc_env.cr[0] == 0) goto L_80013FD8;
Processing opcode: addi, operands: ['r7', 'r7', '0x4']
Translated addi r7 r7 0x4 to: ['gc_env.r[7] += 4; // addi r7, r7, 0x4']
Processing opcode: lbz, operands: ['r0', '0x0(r4)']
Translated lbz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 0x0); // lbz r0, 0x0(r4)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: stb, operands: ['r0', '0x0(r7)']
Translated stb r0 0x0(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7], gc_env.r[0]); // stb r0, (r7)']
Translated beqlr  to: ['if (gc_env.cr[0] & 0x2) return; // beqlr']
Translated lbzu r0 0x1(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 1); // lbzu r0, 1(r4)', 'gc_env.r[4] = gc_env.r[4] + 1;']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated stbu r0 0x1(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x1, gc_env.r[0]); // stbu r0, 0x1(r7)', 'gc_env.r[7] = gc_env.r[7] + 0x1;']
Translated bne .L_80014000 to: if (gc_env.cr[0] != 0) goto L_80014000;
Translated blr  to: return;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x28(r1)']
Translated stwu r1 -0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x28, gc_env.r[1]); // stwu r1, -0x28(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x28;']
Processing opcode: stw, operands: ['r31', '0x24(r1)']
Translated stw r31 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[31]); // stw r31, 0x24(r1)']
Processing opcode: addi, operands: ['r31', 'r5', '0x0']
Translated addi r31 r5 0x0 to: ['gc_env.r[31] = gc_env.r[5] + 0; // addi r31, r5, 0x0']
Processing opcode: stw, operands: ['r30', '0x20(r1)']
Translated stw r30 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[30]); // stw r30, 0x20(r1)']
Processing opcode: addi, operands: ['r30', 'r4', '0x0']
Translated addi r30 r4 0x0 to: ['gc_env.r[30] = gc_env.r[4] + 0; // addi r30, r4, 0x0']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F058@sda21(r0)']
Translated lwz r0 lbl_8001F058@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F058); // lwz r0, lbl_8001F058@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80014084 to: if (gc_env.cr[0] != 0) goto L_80014084;
Translated lis r3 0x1 to: ['gc_env.r[3] = 1 << 16; // lis r3, 0x1']
Processing opcode: subi, operands: ['r3', 'r3', '0x1f00']
Translated subi r3 r3 0x1f00 to: ['gc_env.r[3] = gc_env.r[3] - 7936; // subi r3, r3, 7936']
Translated bl fn_8000AF00 to: fn_8000AF00();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80014084 to: if (gc_env.cr[0] != 0) goto L_80014084;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001F058@sda21(r0)']
Translated stw r0 lbl_8001F058@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F058, gc_env.r[0]); // stw r0, lbl_8001F058@sda21(r0)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80014094 to: if (gc_env.cr[0] == 0) goto L_80014094;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated b .L_800140BC to: goto L_800140BC;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Processing opcode: lwz, operands: ['r4', '0x0(r31)']
Translated lwz r4 0x0(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r4, (r31)']
Translated bl fn_8000AF78 to: fn_8000AF78();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800140B8 to: if (gc_env.cr[0] == 0) goto L_800140B8;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x0(r31)']
Translated stw r0 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stw r0, (r31)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated b .L_800140BC to: goto L_800140BC;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r0', '0x2c(r1)']
Translated lwz r0 0x2c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r0, 0x2C(r1)']
Processing opcode: lwz, operands: ['r31', '0x24(r1)']
Translated lwz r31 0x24(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r31, 0x24(r1)']
Processing opcode: lwz, operands: ['r30', '0x20(r1)']
Translated lwz r30 0x20(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r30, 0x20(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Processing opcode: addi, operands: ['r1', 'r1', '0x28']
Translated addi r1 r1 0x28 to: ['gc_env.r[1] += 40; // addi r1, r1, 0x28']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Processing opcode: stw, operands: ['r31', '0x2c(r1)']
Translated stw r31 0x2c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stw r31, 0x2C(r1)']
Processing opcode: stw, operands: ['r30', '0x28(r1)']
Translated stw r30 0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[30]); // stw r30, 0x28(r1)']
Processing opcode: addi, operands: ['r30', 'r5', '0x0']
Translated addi r30 r5 0x0 to: ['gc_env.r[30] = gc_env.r[5] + 0; // addi r30, r5, 0x0']
Processing opcode: stw, operands: ['r29', '0x24(r1)']
Translated stw r29 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[29]); // stw r29, 0x24(r1)']
Processing opcode: addi, operands: ['r29', 'r4', '0x0']
Translated addi r29 r4 0x0 to: ['gc_env.r[29] = gc_env.r[4] + 0; // addi r29, r4, 0x0']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F058@sda21(r0)']
Translated lwz r0 lbl_8001F058@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F058); // lwz r0, lbl_8001F058@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80014120 to: if (gc_env.cr[0] != 0) goto L_80014120;
Translated lis r3 0x1 to: ['gc_env.r[3] = 1 << 16; // lis r3, 0x1']
Processing opcode: subi, operands: ['r3', 'r3', '0x1f00']
Translated subi r3 r3 0x1f00 to: ['gc_env.r[3] = gc_env.r[3] - 7936; // subi r3, r3, 7936']
Translated bl fn_8000AF00 to: fn_8000AF00();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80014120 to: if (gc_env.cr[0] != 0) goto L_80014120;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', 'lbl_8001F058@sda21(r0)']
Translated stw r0 lbl_8001F058@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F058, gc_env.r[0]); // stw r0, lbl_8001F058@sda21(r0)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80014130 to: if (gc_env.cr[0] == 0) goto L_80014130;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated b .L_80014198 to: goto L_80014198;
Processing opcode: lwz, operands: ['r31', '0x0(r30)']
Translated lwz r31 0x0(r30) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r31, (r30)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Translated b .L_8001416C to: goto L_8001416C;
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl fn_8000AF70 to: fn_8000AF70();
Processing opcode: lwz, operands: ['r4', '0x0(r30)']
Translated lwz r4 0x0(r30) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r4, (r30)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Processing opcode: lbz, operands: ['r0', '0x0(r29)']
Translated lbz r0 0x0(r29) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[29] + 0x0); // lbz r0, 0x0(r29)']
Translated cmplwi r0 0xd to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xd) ? 0 : ((uint32_t)gc_env.r[0] < 0xd ? -1 : 1); // Logical compare with immediate
Translated beq .L_80014180 to: if (gc_env.cr[0] == 0) goto L_80014180;
Processing opcode: addi, operands: ['r29', 'r29', '0x1']
Translated addi r29 r29 0x1 to: ['gc_env.r[29] += 1; // addi r29, r29, 0x1']
Processing opcode: lwz, operands: ['r0', '0x0(r30)']
Translated lwz r0 0x0(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r0, (r30)']
Translated cmplw r0 r31 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[31]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[31] ? -1 : 1); // Logical compare word
Translated bgt .L_80014180 to: ['if (gc_env.cr[0] & 0x4) goto L_80014180; // bgt .L_80014180']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80014144 to: if (gc_env.cr[0] == 0) goto L_80014144;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80014190 to: if (gc_env.cr[0] != 0) goto L_80014190;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated b .L_80014194 to: goto L_80014194;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated clrlwi r3 r0 24 to: ['gc_env.r[3] = gc_env.r[0] & 0xFF; // clrlwi r3, r0, 24']
Processing opcode: lwz, operands: ['r0', '0x34(r1)']
Translated lwz r0 0x34(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r0, 0x34(r1)']
Processing opcode: lwz, operands: ['r31', '0x2c(r1)']
Translated lwz r31 0x2c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r31, 0x2C(r1)']
Processing opcode: lwz, operands: ['r30', '0x28(r1)']
Translated lwz r30 0x28(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lwz r30, 0x28(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Processing opcode: lwz, operands: ['r29', '0x24(r1)']
Translated lwz r29 0x24(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r29, 0x24(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Translated blr  to: return;
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Translated lis r0 0x7ff0 to: ['gc_env.r[0] = 32752 << 16; // lis r0, 0x7ff0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated stfd f1 0x8(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[1], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x8, temp); // stfd f1, 0x8(r1)']
Processing opcode: lwz, operands: ['r5', '0x8(r1)']
Translated lwz r5 0x8(r1) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r5, 0x8(r1)']
Processing opcode: lwz, operands: ['r8', '0xc(r1)']
Translated lwz r8 0xc(r1) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r8, 0xC(r1)']
Translated clrlwi r6 r5 1 to: ['gc_env.r[6] = gc_env.r[5] & 0x7FFFFFFF; // clrlwi r6, r5, 1']
Translated cmpw r6 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[6] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[6] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r6, r0']
Processing opcode: stw, operands: ['r4', '0x0(r3)']
Translated stw r4 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[4]); // stw r4, (r3)']
Processing opcode: addi, operands: ['r7', 'r5', '0x0']
Translated addi r7 r5 0x0 to: ['gc_env.r[7] = gc_env.r[5] + 0; // addi r7, r5, 0x0']
Processing opcode: addi, operands: ['r4', 'r6', '0x0']
Translated addi r4 r6 0x0 to: ['gc_env.r[4] = gc_env.r[6] + 0; // addi r4, r6, 0x0']
Translated bge .L_8001426C to: if (gc_env.cr[0] >= 0) goto L_8001426C;
Translated or. r0 r4 r8 to: ['gc_env.r[0] = gc_env.r[4] | gc_env.r[8]; // or r0, r4, r8']
Translated bne .L_80014274 to: if (gc_env.cr[0] != 0) goto L_80014274;
Error in handler for lfd: name 'format_hex' is not defined
Translated b .L_800142C8 to: goto L_800142C8;
Translated lis r0 0x10 to: ['gc_env.r[0] = 16 << 16; // lis r0, 0x10']
Translated cmpw r4 r0 to: ['gc_env.cr[0] = (int32_t)gc_env.r[4] < (int32_t)gc_env.r[0] ? 0x8 : ((int32_t)gc_env.r[4] > (int32_t)gc_env.r[0] ? 0x4 : 0x2); // cmpw r4, r0']
Translated bge .L_800142A4 to: if (gc_env.cr[0] >= 0) goto L_800142A4;
Error in handler for lfd: name 'format_hex' is not defined
Processing opcode: li, operands: ['r0', '-0x36']
Translated li r0 -0x36 to: ['gc_env.r[0] = -0x36; // li r0, -0x36']
Translated lfd f0 lbl_8001F0D0@sda21(r0) to: ['gc_env.f[0] = *(double*)&lbl_8001F0D0; // lfd f0, lbl_8001F0D0@sda21(r0)']
Translated fmul f0 f1 f0 to: ['gc_env.f[0] = gc_env.f[1] * gc_env.f[0]; // fmul f0, f1, f0']
Translated stfd f0 0x8(r1) to: ['uint64_t temp;', 'memcpy(&temp, &gc_env.f[0], sizeof(double));', 'gc_mem_write64(gc_env.ram, gc_env.r[1] + 0x8, temp); // stfd f0, 0x8(r1)']
Processing opcode: lwz, operands: ['r4', '0x8(r1)']
Translated lwz r4 0x8(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r4, 0x8(r1)']
Processing opcode: stw, operands: ['r0', '0x0(r3)']
Translated stw r0 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[0]); // stw r0, (r3)']
Processing opcode: addi, operands: ['r7', 'r4', '0x0']
Translated addi r7 r4 0x0 to: ['gc_env.r[7] = gc_env.r[4] + 0; // addi r7, r4, 0x0']
Translated clrlwi r4 r4 1 to: ['gc_env.r[4] = gc_env.r[4] & 0x7FFFFFFF; // clrlwi r4, r4, 1']
Processing opcode: lwz, operands: ['r5', '0x0(r3)']
Translated lwz r5 0x0(r3) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r5, (r3)']
Translated srawi r4 r4 20 to: ['gc_env.r[4] = ((int32_t)gc_env.r[4]) >> 20; // srawi r4, r4, 20']
Translated rlwinm r0 r7 0 12 0 to: ['gc_env.r[0] = (gc_env.r[7] << 0) & -0x7FF00001; // rlwinm r0, r7, 0, 12, 0']
Processing opcode: add, operands: ['r4', 'r4', 'r5']
Translated add r4 r4 r5 to: ['gc_env.r[4] = gc_env.r[4] + gc_env.r[5]; // add r4, r4, r5']
Processing opcode: subi, operands: ['r4', 'r4', '0x3fe']
Translated subi r4 r4 0x3fe to: ['gc_env.r[4] = gc_env.r[4] - 1022; // subi r4, r4, 1022']
Processing opcode: stw, operands: ['r4', '0x0(r3)']
Translated stw r4 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[4]); // stw r4, (r3)']
Translated oris r0 r0 0x3fe0 to: ['gc_env.r[0] = gc_env.r[0] | 0x3FE00000; // oris r0, r0, 0x3FE0']
Processing opcode: stw, operands: ['r0', '0x8(r1)']
Translated stw r0 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stw r0, 0x8(r1)']
Error in handler for lfd: name 'format_hex' is not defined
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: lwz, operands: ['r3', '0x8(r3)']
Translated lwz r3 0x8(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r3, 0x8(r3)']
Translated bl fn_8001496C to: fn_8001496C();
Translated bl fn_80015278 to: fn_80015278();
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_80017D50 to: fn_80017D50();
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_80017E7C to: fn_80017E7C();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80014334 to: if (gc_env.cr[0] != 0) goto L_80014334;
Translated bl fn_80018B3C to: fn_80018B3C();
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 gTRKInputPendingPtr@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKInputPendingPtr >> 16) & 0xFFFF; // lis r3, gTRKInputPendingPtr@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: addi, operands: ['r31', 'r3', 'gTRKInputPendingPtr@l']
Translated addi r31 r3 gTRKInputPendingPtr@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&gTRKInputPendingPtr & 0xFFFF); // addi r31, r3, gTRKInputPendingPtr@l']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: li, operands: ['r30', '0x0']
Translated li r30 0x0 to: ['gc_env.r[30] = 0x0; // li r30, 0x0']
Processing opcode: stw, operands: ['r29', '0x14(r1)']
Translated stw r29 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stw r29, 0x14(r1)']
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Translated b .L_80014414 to: goto L_80014414;
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Translated bl TRKGetNextEvent to: TRKGetNextEvent();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800143E8 to: if (gc_env.cr[0] == 0) goto L_800143E8;
Processing opcode: lbz, operands: ['r0', '0x8(r1)']
Translated lbz r0 0x8(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x8); // lbz r0, 0x8(r1)']
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Translated cmpwi r0 0x2 to: gc_env.cr[0] = (gc_env.r[0] == 0x2) ? 0 : (gc_env.r[0] < 0x2 ? -1 : 1); // Compare with immediate
Translated beq .L_800143B4 to: if (gc_env.cr[0] == 0) goto L_800143B4;
Translated bge .L_800143A4 to: if (gc_env.cr[0] >= 0) goto L_800143A4;
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800143DC to: if (gc_env.cr[0] == 0) goto L_800143DC;
Translated bge .L_800143C0 to: if (gc_env.cr[0] >= 0) goto L_800143C0;
Translated b .L_800143DC to: goto L_800143DC;
Translated cmpwi r0 0x5 to: gc_env.cr[0] = (gc_env.r[0] == 0x5) ? 0 : (gc_env.r[0] < 0x5 ? -1 : 1); // Compare with immediate
Translated beq .L_800143D4 to: if (gc_env.cr[0] == 0) goto L_800143D4;
Translated bge .L_800143DC to: if (gc_env.cr[0] >= 0) goto L_800143DC;
Translated b .L_800143C8 to: goto L_800143C8;
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Translated bl TRKHandleRequestEvent to: TRKHandleRequestEvent();
Translated b .L_800143DC to: goto L_800143DC;
Processing opcode: li, operands: ['r30', '0x1']
Translated li r30 0x1 to: ['gc_env.r[30] = 0x1; // li r30, 0x1']
Translated b .L_800143DC to: goto L_800143DC;
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Translated bl TRKTargetInterrupt to: TRKTargetInterrupt();
Translated b .L_800143DC to: goto L_800143DC;
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Translated bl TRKHandleSupportEvent to: TRKHandleSupportEvent();
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Translated bl TRKDestructEvent to: TRKDestructEvent();
Translated b .L_80014414 to: goto L_80014414;
Translated cmpwi r29 0x0 to: gc_env.cr[0] = (gc_env.r[29] == 0x0) ? 0 : (gc_env.r[29] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80014400 to: if (gc_env.cr[0] == 0) goto L_80014400;
Processing opcode: lwz, operands: ['r3', '0x0(r31)']
Translated lwz r3 0x0(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r3, (r31)']
Processing opcode: lbz, operands: ['r0', '0x0(r3)']
Translated lbz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x0); // lbz r0, 0x0(r3)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8001440C to: if (gc_env.cr[0] == 0) goto L_8001440C;
Processing opcode: li, operands: ['r29', '0x1']
Translated li r29 0x1 to: ['gc_env.r[29] = 0x1; // li r29, 0x1']
Translated bl TRKGetInput to: TRKGetInput();
Translated b .L_80014414 to: goto L_80014414;
Translated bl TRKIdle to: TRKIdle();
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80014370 to: if (gc_env.cr[0] == 0) goto L_80014370;
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: lwz, operands: ['r29', '0x14(r1)']
Translated lwz r29 0x14(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r29, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 lbl_8001CE50@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CE50 >> 16) & 0xFFFF; // lis r3, lbl_8001CE50@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: addi, operands: ['r31', 'r3', 'lbl_8001CE50@l']
Translated addi r31 r3 lbl_8001CE50@l to: ['gc_env.r[31] = gc_env.r[3] + ((uint32_t)&lbl_8001CE50 & 0xFFFF); // addi r31, r3, lbl_8001CE50@l']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Translated bl fn_80016A1C to: fn_80016A1C();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_80016A24 to: fn_80016A24();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stw, operands: ['r3', '0x4(r31)']
Translated stw r3 0x4(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x4, gc_env.r[3]); // stw r3, 0x4(r31)']
Processing opcode: li, operands: ['r0', '0x100']
Translated li r0 0x100 to: ['gc_env.r[0] = 0x100; // li r0, 0x100']
Processing opcode: stw, operands: ['r3', '0x8(r31)']
Translated stw r3 0x8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x8, gc_env.r[3]); // stw r3, 0x8(r31)']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: stw, operands: ['r0', '0x24(r31)']
Translated stw r0 0x24(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x24, gc_env.r[0]); // stw r0, 0x24(r31)']
Translated bl fn_80016A2C to: fn_80016A2C();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r5', '0xc']
Translated li r5 0xc to: ['gc_env.r[5] = 0xc; // li r5, 0xc']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_800034C8 to: fn_800034C8();
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r4 lbl_8001CE50@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001CE50 >> 16) & 0xFFFF; // lis r4, lbl_8001CE50@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: addi, operands: ['r31', 'r4', 'lbl_8001CE50@l']
Translated addi r31 r4 lbl_8001CE50@l to: ['gc_env.r[31] = gc_env.r[4] + ((uint32_t)&lbl_8001CE50 & 0xFFFF); // addi r31, r4, lbl_8001CE50@l']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: stw, operands: ['r29', '0xc(r1)']
Translated stw r29 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[29]); // stw r29, 0xC(r1)']
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Processing opcode: stw, operands: ['r28', '0x8(r1)']
Translated stw r28 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[28]); // stw r28, 0x8(r1)']
Processing opcode: addi, operands: ['r28', 'r3', '0x0']
Translated addi r28 r3 0x0 to: ['gc_env.r[28] = gc_env.r[3] + 0; // addi r28, r3, 0x0']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Translated bl fn_80016A24 to: fn_80016A24();
Processing opcode: addi, operands: ['r30', 'r31', '0x4']
Translated addi r30 r31 0x4 to: ['gc_env.r[30] = gc_env.r[31] + 4; // addi r30, r31, 0x4']
Processing opcode: lwz, operands: ['r0', '0x4(r31)']
Translated lwz r0 0x4(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x4); // lwz r0, 0x4(r31)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated ble .L_80014548 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80014548; // ble .L_80014548']
Processing opcode: addi, operands: ['r29', 'r31', '0x8']
Translated addi r29 r31 0x8 to: ['gc_env.r[29] = gc_env.r[31] + 8; // addi r29, r31, 0x8']
Processing opcode: lwz, operands: ['r0', '0x8(r31)']
Translated lwz r0 0x8(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r0, 0x8(r31)']
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: mulli, operands: ['r0', 'r0', '0xc']
Translated mulli r0 r0 0xc to: ['gc_env.r[0] = gc_env.r[0] * 12; // mulli r0, r0, 12']
Processing opcode: add, operands: ['r4', 'r31', 'r0']
Translated add r4 r31 r0 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[0]; // add r4, r31, r0']
Processing opcode: addi, operands: ['r4', 'r4', '0xc']
Translated addi r4 r4 0xc to: ['gc_env.r[4] += 12; // addi r4, r4, 0xc']
Translated bl fn_80014494 to: fn_80014494();
Processing opcode: lwz, operands: ['r3', '0x0(r30)']
Translated lwz r3 0x0(r30) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r3, (r30)']
Processing opcode: subi, operands: ['r0', 'r3', '0x1']
Translated subi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] - 1; // subi r0, r3, 1']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Processing opcode: lwz, operands: ['r3', '0x0(r29)']
Translated lwz r3 0x0(r29) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[29]); // lwz r3, (r29)']
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: stw, operands: ['r0', '0x0(r29)']
Translated stw r0 0x0(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29], gc_env.r[0]); // stw r0, (r29)']
Processing opcode: lwz, operands: ['r0', '0x0(r29)']
Translated lwz r0 0x0(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29]); // lwz r0, (r29)']
Translated cmpwi r0 0x2 to: gc_env.cr[0] = (gc_env.r[0] == 0x2) ? 0 : (gc_env.r[0] < 0x2 ? -1 : 1); // Compare with immediate
Translated bne .L_80014544 to: if (gc_env.cr[0] != 0) goto L_80014544;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x0(r29)']
Translated stw r0 0x0(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29], gc_env.r[0]); // stw r0, (r29)']
Processing opcode: li, operands: ['r29', '0x1']
Translated li r29 0x1 to: ['gc_env.r[29] = 0x1; // li r29, 0x1']
Translated lis r3 lbl_8001CE50@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CE50 >> 16) & 0xFFFF; // lis r3, lbl_8001CE50@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001CE50@l']
Translated addi r3 r3 lbl_8001CE50@l to: ['gc_env.r[3] = (uint32_t)&lbl_8001CE50; // lis + addi lbl_8001CE50 (completing pattern)']
Translated bl fn_80016A2C to: fn_80016A2C();
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: lwz, operands: ['r29', '0xc(r1)']
Translated lwz r29 0xc(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r29, 0xC(r1)']
Processing opcode: lwz, operands: ['r28', '0x8(r1)']
Translated lwz r28 0x8(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r28, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r4 lbl_8001CE50@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001CE50 >> 16) & 0xFFFF; // lis r4, lbl_8001CE50@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: addi, operands: ['r30', 'r4', 'lbl_8001CE50@l']
Translated addi r30 r4 lbl_8001CE50@l to: ['gc_env.r[30] = gc_env.r[4] + ((uint32_t)&lbl_8001CE50 & 0xFFFF); // addi r30, r4, lbl_8001CE50@l']
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: stw, operands: ['r29', '0xc(r1)']
Translated stw r29 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[29]); // stw r29, 0xC(r1)']
Processing opcode: stw, operands: ['r28', '0x8(r1)']
Translated stw r28 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[28]); // stw r28, 0x8(r1)']
Processing opcode: li, operands: ['r28', '0x0']
Translated li r28 0x0 to: ['gc_env.r[28] = 0x0; // li r28, 0x0']
Translated bl fn_80016A24 to: fn_80016A24();
Processing opcode: addi, operands: ['r29', 'r30', '0x4']
Translated addi r29 r30 0x4 to: ['gc_env.r[29] = gc_env.r[30] + 4; // addi r29, r30, 0x4']
Processing opcode: lwz, operands: ['r3', '0x4(r30)']
Translated lwz r3 0x4(r30) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x4); // lwz r3, 0x4(r30)']
Translated cmpwi r3 0x2 to: gc_env.cr[0] = (gc_env.r[3] == 0x2) ? 0 : (gc_env.r[3] < 0x2 ? -1 : 1); // Compare with immediate
Translated bne .L_800145C4 to: if (gc_env.cr[0] != 0) goto L_800145C4;
Processing opcode: li, operands: ['r28', '0x100']
Translated li r28 0x100 to: ['gc_env.r[28] = 0x100; // li r28, 0x100']
Translated b .L_80014628 to: goto L_80014628;
Processing opcode: lwz, operands: ['r0', '0x8(r30)']
Translated lwz r0 0x8(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x8); // lwz r0, 0x8(r30)']
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: add, operands: ['r0', 'r0', 'r3']
Translated add r0 r0 r3 to: ['gc_env.r[0] = gc_env.r[0] + gc_env.r[3]; // add r0, r0, r3']
Translated srawi r3 r0 1 to: ['gc_env.r[3] = ((int32_t)gc_env.r[0]) >> 1; // srawi r3, r0, 1']
Translated addze r3 r3 to: ['uint64_t addze_temp = (uint64_t)gc_env.r[3] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[3] = (uint32_t)addze_temp; // addze r3, r3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addze_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Translated slwi r3 r3 1 to: ['gc_env.r[3] = gc_env.r[3] << 1; // slwi r3, r3, 1']
Translated subfc r3 r3 r0 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[0] - gc_env.r[3];', 'gc_env.r[3] = (uint32_t)subfc_temp; // subfc r3, r3, r0', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[0] >= gc_env.r[3] ? 0x20000000 : 0);']
Processing opcode: mulli, operands: ['r0', 'r3', '0xc']
Translated mulli r0 r3 0xc to: ['gc_env.r[0] = gc_env.r[3] * 12; // mulli r0, r3, 12']
Processing opcode: add, operands: ['r31', 'r30', 'r0']
Translated add r31 r30 r0 to: ['gc_env.r[31] = gc_env.r[30] + gc_env.r[0]; // add r31, r30, r0']
Processing opcode: addi, operands: ['r3', 'r31', '0xc']
Translated addi r3 r31 0xc to: ['gc_env.r[3] = gc_env.r[31] + 12; // addi r3, r31, 0xc']
Translated bl fn_80014494 to: fn_80014494();
Processing opcode: addi, operands: ['r4', 'r30', '0x24']
Translated addi r4 r30 0x24 to: ['gc_env.r[4] = gc_env.r[30] + 36; // addi r4, r30, 0x24']
Processing opcode: lwz, operands: ['r0', '0x24(r30)']
Translated lwz r0 0x24(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x24); // lwz r0, 0x24(r30)']
Processing opcode: stw, operands: ['r0', '0x10(r31)']
Translated stw r0 0x10(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x10, gc_env.r[0]); // stw r0, 0x10(r31)']
Processing opcode: lwz, operands: ['r3', '0x24(r30)']
Translated lwz r3 0x24(r30) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x24); // lwz r3, 0x24(r30)']
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: stw, operands: ['r0', '0x24(r30)']
Translated stw r0 0x24(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x24, gc_env.r[0]); // stw r0, 0x24(r30)']
Processing opcode: lwz, operands: ['r0', '0x24(r30)']
Translated lwz r0 0x24(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x24); // lwz r0, 0x24(r30)']
Translated cmplwi r0 0x100 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x100) ? 0 : ((uint32_t)gc_env.r[0] < 0x100 ? -1 : 1); // Logical compare with immediate
Translated bge .L_8001461C to: if (gc_env.cr[0] >= 0) goto L_8001461C;
Processing opcode: li, operands: ['r0', '0x100']
Translated li r0 0x100 to: ['gc_env.r[0] = 0x100; // li r0, 0x100']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Processing opcode: lwz, operands: ['r3', '0x0(r29)']
Translated lwz r3 0x0(r29) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[29]); // lwz r3, (r29)']
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: stw, operands: ['r0', '0x0(r29)']
Translated stw r0 0x0(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29], gc_env.r[0]); // stw r0, (r29)']
Translated lis r3 lbl_8001CE50@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CE50 >> 16) & 0xFFFF; // lis r3, lbl_8001CE50@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001CE50@l']
Translated addi r3 r3 lbl_8001CE50@l to: ['gc_env.r[3] = (uint32_t)&lbl_8001CE50; // lis + addi lbl_8001CE50 (completing pattern)']
Translated bl fn_80016A2C to: fn_80016A2C();
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: lwz, operands: ['r29', '0xc(r1)']
Translated lwz r29 0xc(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r29, 0xC(r1)']
Processing opcode: lwz, operands: ['r28', '0x8(r1)']
Translated lwz r28 0x8(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r28, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: stb, operands: ['r4', '0x0(r3)']
Translated stb r4 0x0(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3], gc_env.r[4]); // stb r4, (r3)']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r4', '0x4(r3)']
Translated stw r4 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[4]); // stw r4, 0x4(r3)']
Processing opcode: stw, operands: ['r0', '0x8(r3)']
Translated stw r0 0x8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[0]); // stw r0, 0x8(r3)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: lwz, operands: ['r3', '0x8(r3)']
Translated lwz r3 0x8(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r3, 0x8(r3)']
Translated bl fn_80014998 to: fn_80014998();
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: stw, operands: ['r30', '0x8(r1)']
Translated stw r30 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[30]); // stw r30, 0x8(r1)']
Translated bl TRKInitializeEndian to: TRKInitializeEndian();
Translated mr. r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated bne .L_800146B8 to: if (gc_env.cr[0] != 0) goto L_800146B8;
Translated bl usr_put_initialize to: usr_put_initialize();
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800146C8 to: if (gc_env.cr[0] != 0) goto L_800146C8;
Translated bl TRKInitializeEventQueue to: TRKInitializeEventQueue();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800146D8 to: if (gc_env.cr[0] != 0) goto L_800146D8;
Translated bl TRKInitializeMessageBuffers to: TRKInitializeMessageBuffers();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800146E8 to: if (gc_env.cr[0] != 0) goto L_800146E8;
Translated bl TRKInitializeDispatcher to: TRKInitializeDispatcher();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8001472C to: if (gc_env.cr[0] != 0) goto L_8001472C;
Translated lis r3 gTRKInputPendingPtr@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKInputPendingPtr >> 16) & 0xFFFF; // lis r3, gTRKInputPendingPtr@ha']
Processing opcode: addi, operands: ['r31', 'r3', 'gTRKInputPendingPtr@l']
Translated addi r31 r3 gTRKInputPendingPtr@l to: ['gc_env.r[31] = (uint32_t)&gTRKInputPendingPtr; // lis + addi gTRKInputPendingPtr (completing pattern)']
Translated lis r3 0x1 to: ['gc_env.r[3] = 1 << 16; // lis r3, 0x1']
Processing opcode: addi, operands: ['r6', 'r31', '0x0']
Translated addi r6 r31 0x0 to: ['gc_env.r[6] = gc_env.r[31] + 0; // addi r6, r31, 0x0']
Processing opcode: subi, operands: ['r3', 'r3', '0x1f00']
Translated subi r3 r3 0x1f00 to: ['gc_env.r[3] = gc_env.r[3] - 7936; // subi r3, r3, 7936']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl TRKInitializeIntDrivenUART to: TRKInitializeIntDrivenUART();
Translated mr r0 r3 to: gc_env.r[0] = gc_env.r[3]; // Move register
Processing opcode: lwz, operands: ['r3', '0x0(r31)']
Translated lwz r3 0x0(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r3, (r31)']
Translated mr r31 r0 to: gc_env.r[31] = gc_env.r[0]; // Move register
Translated bl TRKTargetSetInputPendingPtr to: TRKTargetSetInputPendingPtr();
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8001472C to: if (gc_env.cr[0] == 0) goto L_8001472C;
Translated mr r30 r31 to: gc_env.r[30] = gc_env.r[31]; // Move register
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8001473C to: if (gc_env.cr[0] != 0) goto L_8001473C;
Translated bl TRKInitializeSerialHandler to: TRKInitializeSerialHandler();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8001474C to: if (gc_env.cr[0] != 0) goto L_8001474C;
Translated bl TRKInitializeTarget to: TRKInitializeTarget();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: lwz, operands: ['r30', '0x8(r1)']
Translated lwz r30 0x8(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r30, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_80015258 to: fn_80015258();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 "@40_8001A610"@ha to: ['gc_env.r[3] = ((uint32_t)&_40_8001A610 >> 16) & 0xFFFF; // lis r3, "@40_8001A610"@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r3', 'r3', '"@40_8001A610"@l']
Translated addi r3 r3 "@40_8001A610"@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&_40_8001A610 & 0xFFFF); // addi r3, r3, "@40_8001A610"@l']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl TRK_board_display to: TRK_board_display();
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r3 lbl_8001CE78@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CE78 >> 16) & 0xFFFF; // lis r3, lbl_8001CE78@ha']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: addi, operands: ['r5', 'r3', 'lbl_8001CE78@l']
Translated addi r5 r3 lbl_8001CE78@l to: ['gc_env.r[5] = gc_env.r[3] + ((uint32_t)&lbl_8001CE78 & 0xFFFF); // addi r5, r3, lbl_8001CE78@l']
Processing opcode: li, operands: ['r6', '0x1']
Translated li r6 0x1 to: ['gc_env.r[6] = 0x1; // li r6, 0x1']
Processing opcode: stw, operands: ['r6', '0x0(r5)']
Translated stw r6 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[6]); // stw r6, (r5)']
Processing opcode: li, operands: ['r0', '0x12']
Translated li r0 0x12 to: ['gc_env.r[0] = 0x12; // li r0, 0x12']
Processing opcode: li, operands: ['r3', '0x34']
Translated li r3 0x34 to: ['gc_env.r[3] = 0x34; // li r3, 0x34']
Processing opcode: stb, operands: ['r0', '0x8(r1)']
Translated stb r0 0x8(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stb r0, 0x8(r1)']
Processing opcode: li, operands: ['r4', '0x56']
Translated li r4 0x56 to: ['gc_env.r[4] = 0x56; // li r4, 0x56']
Processing opcode: li, operands: ['r0', '0x78']
Translated li r0 0x78 to: ['gc_env.r[0] = 0x78; // li r0, 0x78']
Processing opcode: stb, operands: ['r3', '0x9(r1)']
Translated stb r3 0x9(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x9, gc_env.r[3]); // stb r3, 0x9(r1)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r4', '0xa(r1)']
Translated stb r4 0xa(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0xA, gc_env.r[4]); // stb r4, 0xA(r1)']
Processing opcode: stb, operands: ['r0', '0xb(r1)']
Translated stb r0 0xb(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0xB, gc_env.r[0]); // stb r0, 0xB(r1)']
Processing opcode: lwz, operands: ['r4', '0x8(r1)']
Translated lwz r4 0x8(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r4, 0x8(r1)']
Processing opcode: subis, operands: ['r0', 'r4', '0x1234']
Translated subis r0 r4 0x1234 to: ['gc_env.r[0] = gc_env.r[4] - (4660 << 16); // subis r0, r4, 4660']
Translated cmplwi r0 0x5678 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x5678) ? 0 : ((uint32_t)gc_env.r[0] < 0x5678 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80014804 to: if (gc_env.cr[0] != 0) goto L_80014804;
Processing opcode: stw, operands: ['r6', '0x0(r5)']
Translated stw r6 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[6]); // stw r6, (r5)']
Translated b .L_80014820 to: goto L_80014820;
Processing opcode: subis, operands: ['r0', 'r4', '0x7856']
Translated subis r0 r4 0x7856 to: ['gc_env.r[0] = gc_env.r[4] - (30806 << 16); // subis r0, r4, 30806']
Translated cmplwi r0 0x3412 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x3412) ? 0 : ((uint32_t)gc_env.r[0] < 0x3412 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8001481C to: if (gc_env.cr[0] != 0) goto L_8001481C;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x0(r5)']
Translated stw r0 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stw r0, (r5)']
Translated b .L_80014820 to: goto L_80014820;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: lwz, operands: ['r4', '0x8(r3)']
Translated lwz r4 0x8(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r4, 0x8(r3)']
Processing opcode: addi, operands: ['r3', 'r3', '0x10']
Translated addi r3 r3 0x10 to: ['gc_env.r[3] += 16; // addi r3, r3, 0x10']
Translated bl fn_80018A74 to: fn_80018A74();
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: stw, operands: ['r4', '0x4(r3)']
Translated stw r4 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[4]); // stw r4, 0x4(r3)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 lbl_8001CE80@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CE80 >> 16) & 0xFFFF; // lis r3, lbl_8001CE80@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r0', 'r3', 'lbl_8001CE80@l']
Translated addi r0 r3 lbl_8001CE80@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&lbl_8001CE80 & 0xFFFF); // addi r0, r3, lbl_8001CE80@l']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: stw, operands: ['r30', '0x8(r1)']
Translated stw r30 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[30]); // stw r30, 0x8(r1)']
Processing opcode: li, operands: ['r30', '0x0']
Translated li r30 0x0 to: ['gc_env.r[30] = 0x0; // li r30, 0x0']
Processing opcode: mulli, operands: ['r4', 'r30', '0x890']
Translated mulli r4 r30 0x890 to: ['gc_env.r[4] = gc_env.r[30] * 2192; // mulli r4, r30, 2192']
Processing opcode: add, operands: ['r31', 'r0', 'r4']
Translated add r31 r0 r4 to: ['gc_env.r[31] = gc_env.r[0] + gc_env.r[4]; // add r31, r0, r4']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_80016A1C to: fn_80016A1C();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_80016A24 to: fn_80016A24();
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl fn_80014850 to: fn_80014850();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_80016A2C to: fn_80016A2C();
Processing opcode: addi, operands: ['r30', 'r30', '0x1']
Translated addi r30 r30 0x1 to: ['gc_env.r[30] += 1; // addi r30, r30, 0x1']
Processing opcode: addi, operands: ['r31', 'r31', '0x890']
Translated addi r31 r31 0x890 to: ['gc_env.r[31] += 2192; // addi r31, r31, 0x890']
Translated cmpwi r30 0x3 to: gc_env.cr[0] = (gc_env.r[30] == 0x3) ? 0 : (gc_env.r[30] < 0x3 ? -1 : 1); // Compare with immediate
Translated blt .L_80014880 to: ['if (gc_env.cr[0] & 0x8) goto L_80014880; // blt .L_80014880']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r30', '0x8(r1)']
Translated lwz r30 0x8(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r30, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Translated stmw r27 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[27]); // stmw r27, 0xC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[28]); // stmw r27, 0xC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stmw r27, 0xC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stmw r27, 0xC(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stmw r27, 0xC(r1)']
Processing opcode: addi, operands: ['r28', 'r4', '0x0']
Translated addi r28 r4 0x0 to: ['gc_env.r[28] = gc_env.r[4] + 0; // addi r28, r4, 0x0']
Processing opcode: addi, operands: ['r27', 'r3', '0x0']
Translated addi r27 r3 0x0 to: ['gc_env.r[27] = gc_env.r[3] + 0; // addi r27, r3, 0x0']
Processing opcode: li, operands: ['r31', '0x300']
Translated li r31 0x300 to: ['gc_env.r[31] = 0x300; // li r31, 0x300']
Processing opcode: li, operands: ['r30', '0x0']
Translated li r30 0x0 to: ['gc_env.r[30] = 0x0; // li r30, 0x0']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Translated b .L_8001494C to: goto L_8001494C;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl fn_8001496C to: fn_8001496C();
Translated mr r29 r3 to: gc_env.r[29] = gc_env.r[3]; // Move register
Translated bl fn_80016A24 to: fn_80016A24();
Processing opcode: lwz, operands: ['r0', '0x4(r29)']
Translated lwz r0 0x4(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x4); // lwz r0, 0x4(r29)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80014940 to: if (gc_env.cr[0] != 0) goto L_80014940;
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl fn_80014A00 to: fn_80014A00();
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl fn_80014850 to: fn_80014850();
Processing opcode: stw, operands: ['r29', '0x0(r28)']
Translated stw r29 0x0(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28], gc_env.r[29]); // stw r29, (r28)']
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Processing opcode: stw, operands: ['r30', '0x0(r27)']
Translated stw r30 0x0(r27) to: ['gc_mem_write32(gc_env.ram, gc_env.r[27], gc_env.r[30]); // stw r30, (r27)']
Processing opcode: li, operands: ['r30', '0x3']
Translated li r30 0x3 to: ['gc_env.r[30] = 0x3; // li r30, 0x3']
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated bl fn_80016A2C to: fn_80016A2C();
Processing opcode: addi, operands: ['r30', 'r30', '0x1']
Translated addi r30 r30 0x1 to: ['gc_env.r[30] += 1; // addi r30, r30, 0x1']
Translated cmpwi r30 0x3 to: gc_env.cr[0] = (gc_env.r[30] == 0x3) ? 0 : (gc_env.r[30] < 0x3 ? -1 : 1); // Compare with immediate
Translated blt .L_800148FC to: ['if (gc_env.cr[0] & 0x8) goto L_800148FC; // blt .L_800148FC']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated lmw r27 0xc(r1) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lmw r27, 0xC(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lmw r27, 0xC(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lmw r27, 0xC(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lmw r27, 0xC(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r27, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated blt .L_80014990 to: ['if (gc_env.cr[0] & 0x8) goto L_80014990; // blt .L_80014990']
Translated cmpwi r3 0x3 to: gc_env.cr[0] = (gc_env.r[3] == 0x3) ? 0 : (gc_env.r[3] < 0x3 ? -1 : 1); // Compare with immediate
Translated bge .L_80014990 to: if (gc_env.cr[0] >= 0) goto L_80014990;
Processing opcode: mulli, operands: ['r4', 'r3', '0x890']
Translated mulli r4 r3 0x890 to: ['gc_env.r[4] = gc_env.r[3] * 2192; // mulli r4, r3, 2192']
Translated lis r3 lbl_8001CE80@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CE80 >> 16) & 0xFFFF; // lis r3, lbl_8001CE80@ha']
Processing opcode: addi, operands: ['r0', 'r3', 'lbl_8001CE80@l']
Translated addi r0 r3 lbl_8001CE80@l to: ['gc_env.r[0] = (uint32_t)&lbl_8001CE80; // lis + addi lbl_8001CE80 (completing pattern)']
Processing opcode: add, operands: ['r0', 'r0', 'r4']
Translated add r0 r0 r4 to: ['gc_env.r[0] = gc_env.r[0] + gc_env.r[4]; // add r0, r0, r4']
Translated mr r3 r0 to: gc_env.r[3] = gc_env.r[0]; // Move register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated cmpwi r3 -0x1 to: gc_env.cr[0] = (gc_env.r[3] == -0x1) ? 0 : (gc_env.r[3] < -0x1 ? -1 : 1); // Compare with immediate
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated beq .L_800149EC to: if (gc_env.cr[0] == 0) goto L_800149EC;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated blt .L_800149EC to: ['if (gc_env.cr[0] & 0x8) goto L_800149EC; // blt .L_800149EC']
Translated cmpwi r3 0x3 to: gc_env.cr[0] = (gc_env.r[3] == 0x3) ? 0 : (gc_env.r[3] < 0x3 ? -1 : 1); // Compare with immediate
Translated bge .L_800149EC to: if (gc_env.cr[0] >= 0) goto L_800149EC;
Processing opcode: mulli, operands: ['r4', 'r3', '0x890']
Translated mulli r4 r3 0x890 to: ['gc_env.r[4] = gc_env.r[3] * 2192; // mulli r4, r3, 2192']
Translated lis r3 lbl_8001CE80@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CE80 >> 16) & 0xFFFF; // lis r3, lbl_8001CE80@ha']
Processing opcode: addi, operands: ['r0', 'r3', 'lbl_8001CE80@l']
Translated addi r0 r3 lbl_8001CE80@l to: ['gc_env.r[0] = (uint32_t)&lbl_8001CE80; // lis + addi lbl_8001CE80 (completing pattern)']
Processing opcode: add, operands: ['r31', 'r0', 'r4']
Translated add r31 r0 r4 to: ['gc_env.r[31] = gc_env.r[0] + gc_env.r[4]; // add r31, r0, r4']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Translated bl fn_80016A24 to: fn_80016A24();
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl fn_80014850 to: fn_80014850();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_80016A2C to: fn_80016A2C();
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Translated clrlwi. r0 r4 24 to: ['gc_env.r[0] = gc_env.r[4] & 0xFF; // clrlwi r0, r4, 24']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: stw, operands: ['r5', '0x8(r3)']
Translated stw r5 0x8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[5]); // stw r5, 0x8(r3)']
Processing opcode: stw, operands: ['r5', '0xc(r3)']
Translated stw r5 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[5]); // stw r5, 0xC(r3)']
Translated bne .L_80014A30 to: if (gc_env.cr[0] != 0) goto L_80014A30;
Processing opcode: addi, operands: ['r3', 'r3', '0x10']
Translated addi r3 r3 0x10 to: ['gc_env.r[3] += 16; // addi r3, r3, 0x10']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: li, operands: ['r5', '0x880']
Translated li r5 0x880 to: ['gc_env.r[5] = 0x880; // li r5, 0x880']
Translated bl fn_800034EC to: fn_800034EC();
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated cmplwi r4 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x880) ? 0 : ((uint32_t)gc_env.r[4] < 0x880 ? -1 : 1); // Logical compare with immediate
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated ble .L_80014A54 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80014A54; // ble .L_80014A54']
Processing opcode: li, operands: ['r5', '0x301']
Translated li r5 0x301 to: ['gc_env.r[5] = 0x301; // li r5, 0x301']
Translated b .L_80014A68 to: goto L_80014A68;
Processing opcode: stw, operands: ['r4', '0xc(r3)']
Translated stw r4 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[4]); // stw r4, 0xC(r3)']
Processing opcode: lwz, operands: ['r0', '0x8(r3)']
Translated lwz r0 0x8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r0, 0x8(r3)']
Translated cmplw r4 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated ble .L_80014A68 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80014A68; // ble .L_80014A68']
Processing opcode: stw, operands: ['r4', '0x8(r3)']
Translated stw r4 0x8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[4]); // stw r4, 0x8(r3)']
Translated mr r3 r5 to: gc_env.r[3] = gc_env.r[5]; // Move register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Translated mr. r30 r5 to: gc_env.r[30] = gc_env.r[5]; // Move register
Processing opcode: stw, operands: ['r29', '0xc(r1)']
Translated stw r29 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[29]); // stw r29, 0xC(r1)']
Processing opcode: addi, operands: ['r29', 'r3', '0x0']
Translated addi r29 r3 0x0 to: ['gc_env.r[29] = gc_env.r[3] + 0; // addi r29, r3, 0x0']
Translated bne .L_80014AA0 to: if (gc_env.cr[0] != 0) goto L_80014AA0;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80014AF8 to: goto L_80014AF8;
Processing opcode: lwz, operands: ['r3', '0xc(r29)']
Translated lwz r3 0xc(r29) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r3, 0xC(r29)']
Translated subfic r0 r3 0x880 to: ['gc_env.r[0] = 2176 - gc_env.r[3]; // subfic r0, r3, 2176', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (2176 >= gc_env.r[3] ? 0x20000000 : 0);']
Translated cmplw r0 r30 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[30]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[30] ? -1 : 1); // Logical compare word
Translated bge .L_80014AB8 to: if (gc_env.cr[0] >= 0) goto L_80014AB8;
Processing opcode: li, operands: ['r31', '0x301']
Translated li r31 0x301 to: ['gc_env.r[31] = 0x301; // li r31, 0x301']
Translated mr r30 r0 to: gc_env.r[30] = gc_env.r[0]; // Move register
Translated cmplwi r30 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == 0x1) ? 0 : ((uint32_t)gc_env.r[30] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80014AD0 to: if (gc_env.cr[0] != 0) goto L_80014AD0;
Processing opcode: lbz, operands: ['r0', '0x0(r4)']
Translated lbz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 0x0); // lbz r0, 0x0(r4)']
Processing opcode: add, operands: ['r3', 'r29', 'r3']
Translated add r3 r29 r3 to: ['gc_env.r[3] = gc_env.r[29] + gc_env.r[3]; // add r3, r29, r3']
Processing opcode: stb, operands: ['r0', '0x10(r3)']
Translated stb r0 0x10(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x10, gc_env.r[0]); // stb r0, 0x10(r3)']
Translated b .L_80014AE0 to: goto L_80014AE0;
Processing opcode: addi, operands: ['r3', 'r3', '0x10']
Translated addi r3 r3 0x10 to: ['gc_env.r[3] += 16; // addi r3, r3, 0x10']
Processing opcode: addi, operands: ['r5', 'r30', '0x0']
Translated addi r5 r30 0x0 to: ['gc_env.r[5] = gc_env.r[30] + 0; // addi r5, r30, 0x0']
Processing opcode: add, operands: ['r3', 'r29', 'r3']
Translated add r3 r29 r3 to: ['gc_env.r[3] = gc_env.r[29] + gc_env.r[3]; // add r3, r29, r3']
Translated bl fn_800034C8 to: fn_800034C8();
Processing opcode: lwz, operands: ['r0', '0xc(r29)']
Translated lwz r0 0xc(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r0, 0xC(r29)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: add, operands: ['r0', 'r0', 'r30']
Translated add r0 r0 r30 to: ['gc_env.r[0] = gc_env.r[0] + gc_env.r[30]; // add r0, r0, r30']
Processing opcode: stw, operands: ['r0', '0xc(r29)']
Translated stw r0 0xc(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0xC, gc_env.r[0]); // stw r0, 0xC(r29)']
Processing opcode: lwz, operands: ['r0', '0xc(r29)']
Translated lwz r0 0xc(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r0, 0xC(r29)']
Processing opcode: stw, operands: ['r0', '0x8(r29)']
Translated stw r0 0x8(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0x8, gc_env.r[0]); // stw r0, 0x8(r29)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: lwz, operands: ['r29', '0xc(r1)']
Translated lwz r29 0xc(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r29, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Translated mr. r30 r5 to: gc_env.r[30] = gc_env.r[5]; // Move register
Processing opcode: stw, operands: ['r29', '0xc(r1)']
Translated stw r29 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[29]); // stw r29, 0xC(r1)']
Processing opcode: addi, operands: ['r29', 'r3', '0x0']
Translated addi r29 r3 0x0 to: ['gc_env.r[29] = gc_env.r[3] + 0; // addi r29, r3, 0x0']
Processing opcode: addi, operands: ['r3', 'r4', '0x0']
Translated addi r3 r4 0x0 to: ['gc_env.r[3] = gc_env.r[4] + 0; // addi r3, r4, 0x0']
Translated bne .L_80014B48 to: if (gc_env.cr[0] != 0) goto L_80014B48;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80014B84 to: goto L_80014B84;
Processing opcode: lwz, operands: ['r4', '0xc(r29)']
Translated lwz r4 0xc(r29) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r4, 0xC(r29)']
Processing opcode: lwz, operands: ['r0', '0x8(r29)']
Translated lwz r0 0x8(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x8); // lwz r0, 0x8(r29)']
Processing opcode: subf, operands: ['r0', 'r4', 'r0']
Translated subf r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[0] - gc_env.r[4]; // subf r0, r4, r0']
Translated cmplw r30 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[30] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated ble .L_80014B64 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80014B64; // ble .L_80014B64']
Processing opcode: li, operands: ['r31', '0x302']
Translated li r31 0x302 to: ['gc_env.r[31] = 0x302; // li r31, 0x302']
Translated mr r30 r0 to: gc_env.r[30] = gc_env.r[0]; // Move register
Processing opcode: addi, operands: ['r4', 'r4', '0x10']
Translated addi r4 r4 0x10 to: ['gc_env.r[4] += 16; // addi r4, r4, 0x10']
Processing opcode: addi, operands: ['r5', 'r30', '0x0']
Translated addi r5 r30 0x0 to: ['gc_env.r[5] = gc_env.r[30] + 0; // addi r5, r30, 0x0']
Processing opcode: add, operands: ['r4', 'r29', 'r4']
Translated add r4 r29 r4 to: ['gc_env.r[4] = gc_env.r[29] + gc_env.r[4]; // add r4, r29, r4']
Translated bl fn_800034C8 to: fn_800034C8();
Processing opcode: lwz, operands: ['r0', '0xc(r29)']
Translated lwz r0 0xc(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r0, 0xC(r29)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: add, operands: ['r0', 'r0', 'r30']
Translated add r0 r0 r30 to: ['gc_env.r[0] = gc_env.r[0] + gc_env.r[30]; // add r0, r0, r30']
Processing opcode: stw, operands: ['r0', '0xc(r29)']
Translated stw r0 0xc(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0xC, gc_env.r[0]); // stw r0, 0xC(r29)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: lwz, operands: ['r29', '0xc(r1)']
Translated lwz r29 0xc(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r29, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r5 lbl_8001CE78@ha to: ['gc_env.r[5] = ((uint32_t)&lbl_8001CE78 >> 16) & 0xFFFF; // lis r5, lbl_8001CE78@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: sth, operands: ['r4', '0x8(r1)']
Translated sth r4 0x8(r1) to: ['gc_mem_write16(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[4]); // sth r4, 0x8(r1)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001CE78@l(r5)']
Translated lwz r0 lbl_8001CE78@l(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + (uint32_t)&lbl_8001CE78); // lwz r0, lbl_8001CE78@l/h(r5)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80014BC8 to: if (gc_env.cr[0] == 0) goto L_80014BC8;
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated b .L_80014BDC to: goto L_80014BDC;
Processing opcode: lbz, operands: ['r0', '0x9(r1)']
Translated lbz r0 0x9(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x9); // lbz r0, 0x9(r1)']
Processing opcode: addi, operands: ['r4', 'r1', '0xc']
Translated addi r4 r1 0xc to: ['gc_env.r[4] = gc_env.r[1] + 12; // addi r4, r1, 0xc']
Processing opcode: stb, operands: ['r0', '0xc(r1)']
Translated stb r0 0xc(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[0]); // stb r0, 0xC(r1)']
Processing opcode: lbz, operands: ['r0', '0x8(r1)']
Translated lbz r0 0x8(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x8); // lbz r0, 0x8(r1)']
Processing opcode: stb, operands: ['r0', '0xd(r1)']
Translated stb r0 0xd(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0xD, gc_env.r[0]); // stb r0, 0xD(r1)']
Processing opcode: li, operands: ['r5', '0x2']
Translated li r5 0x2 to: ['gc_env.r[5] = 0x2; // li r5, 0x2']
Translated bl fn_80014A70 to: fn_80014A70();
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r5 lbl_8001CE78@ha to: ['gc_env.r[5] = ((uint32_t)&lbl_8001CE78 >> 16) & 0xFFFF; // lis r5, lbl_8001CE78@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r4', '0x8(r1)']
Translated stw r4 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[4]); // stw r4, 0x8(r1)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001CE78@l(r5)']
Translated lwz r0 lbl_8001CE78@l(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + (uint32_t)&lbl_8001CE78); // lwz r0, lbl_8001CE78@l/h(r5)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80014C1C to: if (gc_env.cr[0] == 0) goto L_80014C1C;
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated b .L_80014C40 to: goto L_80014C40;
Processing opcode: lbz, operands: ['r0', '0xb(r1)']
Translated lbz r0 0xb(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xb); // lbz r0, 0xb(r1)']
Processing opcode: addi, operands: ['r4', 'r1', '0xc']
Translated addi r4 r1 0xc to: ['gc_env.r[4] = gc_env.r[1] + 12; // addi r4, r1, 0xc']
Processing opcode: stb, operands: ['r0', '0xc(r1)']
Translated stb r0 0xc(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[0]); // stb r0, 0xC(r1)']
Processing opcode: lbz, operands: ['r0', '0xa(r1)']
Translated lbz r0 0xa(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xa); // lbz r0, 0xa(r1)']
Processing opcode: stb, operands: ['r0', '0xd(r1)']
Translated stb r0 0xd(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0xD, gc_env.r[0]); // stb r0, 0xD(r1)']
Processing opcode: lbz, operands: ['r0', '0x9(r1)']
Translated lbz r0 0x9(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x9); // lbz r0, 0x9(r1)']
Processing opcode: stb, operands: ['r0', '0xe(r1)']
Translated stb r0 0xe(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0xE, gc_env.r[0]); // stb r0, 0xE(r1)']
Processing opcode: lbz, operands: ['r0', '0x8(r1)']
Translated lbz r0 0x8(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x8); // lbz r0, 0x8(r1)']
Processing opcode: stb, operands: ['r0', '0xf(r1)']
Translated stb r0 0xf(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0xF, gc_env.r[0]); // stb r0, 0xF(r1)']
Processing opcode: li, operands: ['r5', '0x4']
Translated li r5 0x4 to: ['gc_env.r[5] = 0x4; // li r5, 0x4']
Translated bl fn_80014A70 to: fn_80014A70();
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r4 lbl_8001CE78@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001CE78 >> 16) & 0xFFFF; // lis r4, lbl_8001CE78@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r5', '0x8(r1)']
Translated stw r5 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[5]); // stw r5, 0x8(r1)']
Processing opcode: stw, operands: ['r6', '0xc(r1)']
Translated stw r6 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[6]); // stw r6, 0xC(r1)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001CE78@l(r4)']
Translated lwz r0 lbl_8001CE78@l(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + (uint32_t)&lbl_8001CE78); // lwz r0, lbl_8001CE78@l/h(r4)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80014C84 to: if (gc_env.cr[0] == 0) goto L_80014C84;
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated b .L_80014CC8 to: goto L_80014CC8;
Processing opcode: lbz, operands: ['r0', '0xf(r1)']
Translated lbz r0 0xf(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xf); // lbz r0, 0xf(r1)']
Processing opcode: addi, operands: ['r4', 'r1', '0x10']
Translated addi r4 r1 0x10 to: ['gc_env.r[4] = gc_env.r[1] + 16; // addi r4, r1, 0x10']
Processing opcode: stb, operands: ['r0', '0x10(r1)']
Translated stb r0 0x10(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[0]); // stb r0, 0x10(r1)']
Processing opcode: lbz, operands: ['r0', '0xe(r1)']
Translated lbz r0 0xe(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xe); // lbz r0, 0xe(r1)']
Processing opcode: stb, operands: ['r0', '0x11(r1)']
Translated stb r0 0x11(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x11, gc_env.r[0]); // stb r0, 0x11(r1)']
Processing opcode: lbz, operands: ['r0', '0xd(r1)']
Translated lbz r0 0xd(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xd); // lbz r0, 0xd(r1)']
Processing opcode: stb, operands: ['r0', '0x12(r1)']
Translated stb r0 0x12(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x12, gc_env.r[0]); // stb r0, 0x12(r1)']
Processing opcode: lbz, operands: ['r0', '0xc(r1)']
Translated lbz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xc); // lbz r0, 0xc(r1)']
Processing opcode: stb, operands: ['r0', '0x13(r1)']
Translated stb r0 0x13(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x13, gc_env.r[0]); // stb r0, 0x13(r1)']
Processing opcode: lbz, operands: ['r0', '0xb(r1)']
Translated lbz r0 0xb(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xb); // lbz r0, 0xb(r1)']
Processing opcode: stb, operands: ['r0', '0x14(r1)']
Translated stb r0 0x14(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stb r0, 0x14(r1)']
Processing opcode: lbz, operands: ['r0', '0xa(r1)']
Translated lbz r0 0xa(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xa); // lbz r0, 0xa(r1)']
Processing opcode: stb, operands: ['r0', '0x15(r1)']
Translated stb r0 0x15(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x15, gc_env.r[0]); // stb r0, 0x15(r1)']
Processing opcode: lbz, operands: ['r0', '0x9(r1)']
Translated lbz r0 0x9(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x9); // lbz r0, 0x9(r1)']
Processing opcode: stb, operands: ['r0', '0x16(r1)']
Translated stb r0 0x16(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x16, gc_env.r[0]); // stb r0, 0x16(r1)']
Processing opcode: lbz, operands: ['r0', '0x8(r1)']
Translated lbz r0 0x8(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x8); // lbz r0, 0x8(r1)']
Processing opcode: stb, operands: ['r0', '0x17(r1)']
Translated stb r0 0x17(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x17, gc_env.r[0]); // stb r0, 0x17(r1)']
Processing opcode: li, operands: ['r5', '0x8']
Translated li r5 0x8 to: ['gc_env.r[5] = 0x8; // li r5, 0x8']
Translated bl fn_80014A70 to: fn_80014A70();
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: li, operands: ['r9', '0x0']
Translated li r9 0x0 to: ['gc_env.r[9] = 0x0; // li r9, 0x0']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated b .L_80014D30 to: goto L_80014D30;
Processing opcode: lwz, operands: ['r7', '0xc(r3)']
Translated lwz r7 0xc(r3) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xC); // lwz r7, 0xC(r3)']
Processing opcode: lbz, operands: ['r8', '0x0(r4)']
Translated lbz r8 0x0(r4) to: ['gc_env.r[8] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 0x0); // lbz r8, 0x0(r4)']
Translated cmplwi r7 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[7] == 0x880) ? 0 : ((uint32_t)gc_env.r[7] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated blt .L_80014D04 to: ['if (gc_env.cr[0] & 0x8) goto L_80014D04; // blt .L_80014D04']
Processing opcode: li, operands: ['r7', '0x301']
Translated li r7 0x301 to: ['gc_env.r[7] = 0x301; // li r7, 0x301']
Translated b .L_80014D24 to: goto L_80014D24;
Processing opcode: addi, operands: ['r6', 'r7', '0x1']
Translated addi r6 r7 0x1 to: ['gc_env.r[6] = gc_env.r[7] + 1; // addi r6, r7, 0x1']
Processing opcode: addi, operands: ['r0', 'r7', '0x10']
Translated addi r0 r7 0x10 to: ['gc_env.r[0] = gc_env.r[7] + 16; // addi r0, r7, 0x10']
Processing opcode: stw, operands: ['r6', '0xc(r3)']
Translated stw r6 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[6]); // stw r6, 0xC(r3)']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated stbx r8 r3 r0 to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + gc_env.r[0], gc_env.r[8]); // stbx r8, r3, r0']
Processing opcode: lwz, operands: ['r6', '0x8(r3)']
Translated lwz r6 0x8(r3) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r6, 0x8(r3)']
Processing opcode: addi, operands: ['r0', 'r6', '0x1']
Translated addi r0 r6 0x1 to: ['gc_env.r[0] = gc_env.r[6] + 1; // addi r0, r6, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r3)']
Translated stw r0 0x8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[0]); // stw r0, 0x8(r3)']
Processing opcode: addi, operands: ['r0', 'r7', '0x0']
Translated addi r0 r7 0x0 to: ['gc_env.r[0] = gc_env.r[7] + 0; // addi r0, r7, 0x0']
Processing opcode: addi, operands: ['r9', 'r9', '0x1']
Translated addi r9 r9 0x1 to: ['gc_env.r[9] += 1; // addi r9, r9, 0x1']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80014D40 to: if (gc_env.cr[0] != 0) goto L_80014D40;
Translated cmpw r9 r5 to: ['gc_env.cr[0] = (int32_t)gc_env.r[9] < (int32_t)gc_env.r[5] ? 0x8 : ((int32_t)gc_env.r[9] > (int32_t)gc_env.r[5] ? 0x4 : 0x2); // cmpw r9, r5']
Translated blt .L_80014CEC to: ['if (gc_env.cr[0] & 0x8) goto L_80014CEC; // blt .L_80014CEC']
Translated mr r3 r0 to: gc_env.r[3] = gc_env.r[0]; // Move register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: li, operands: ['r30', '0x0']
Translated li r30 0x0 to: ['gc_env.r[30] = 0x0; // li r30, 0x0']
Translated slwi r0 r30 2 to: ['gc_env.r[0] = gc_env.r[30] << 2; // slwi r0, r30, 2']
Processing opcode: stw, operands: ['r29', '0xc(r1)']
Translated stw r29 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[29]); // stw r29, 0xC(r1)']
Processing opcode: add, operands: ['r31', 'r4', 'r0']
Translated add r31 r4 r0 to: ['gc_env.r[31] = gc_env.r[4] + gc_env.r[0]; // add r31, r4, r0']
Processing opcode: addi, operands: ['r29', 'r5', '0x0']
Translated addi r29 r5 0x0 to: ['gc_env.r[29] = gc_env.r[5] + 0; // addi r29, r5, 0x0']
Processing opcode: stw, operands: ['r28', '0x8(r1)']
Translated stw r28 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[28]); // stw r28, 0x8(r1)']
Processing opcode: addi, operands: ['r28', 'r3', '0x0']
Translated addi r28 r3 0x0 to: ['gc_env.r[28] = gc_env.r[3] + 0; // addi r28, r3, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80014D94 to: goto L_80014D94;
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Processing opcode: lwz, operands: ['r4', '0x0(r31)']
Translated lwz r4 0x0(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r4, (r31)']
Translated bl fn_80014BF4 to: fn_80014BF4();
Processing opcode: addi, operands: ['r30', 'r30', '0x1']
Translated addi r30 r30 0x1 to: ['gc_env.r[30] += 1; // addi r30, r30, 0x1']
Processing opcode: addi, operands: ['r31', 'r31', '0x4']
Translated addi r31 r31 0x4 to: ['gc_env.r[31] += 4; // addi r31, r31, 0x4']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80014DA4 to: if (gc_env.cr[0] != 0) goto L_80014DA4;
Translated cmpw r30 r29 to: ['gc_env.cr[0] = (int32_t)gc_env.r[30] < (int32_t)gc_env.r[29] ? 0x8 : ((int32_t)gc_env.r[30] > (int32_t)gc_env.r[29] ? 0x4 : 0x2); // cmpw r30, r29']
Translated blt .L_80014D80 to: ['if (gc_env.cr[0] & 0x8) goto L_80014D80; // blt .L_80014D80']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: lwz, operands: ['r29', '0xc(r1)']
Translated lwz r29 0xc(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r29, 0xC(r1)']
Processing opcode: lwz, operands: ['r28', '0x8(r1)']
Translated lwz r28 0x8(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r28, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_80014B14 to: fn_80014B14();
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r5 lbl_8001CE78@ha to: ['gc_env.r[5] = ((uint32_t)&lbl_8001CE78 >> 16) & 0xFFFF; // lis r5, lbl_8001CE78@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: addi, operands: ['r30', 'r4', '0x0']
Translated addi r30 r4 0x0 to: ['gc_env.r[30] = gc_env.r[4] + 0; // addi r30, r4, 0x0']
Processing opcode: lwz, operands: ['r0', 'lbl_8001CE78@l(r5)']
Translated lwz r0 lbl_8001CE78@l(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + (uint32_t)&lbl_8001CE78); // lwz r0, lbl_8001CE78@l/h(r5)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80014E18 to: if (gc_env.cr[0] == 0) goto L_80014E18;
Translated mr r31 r30 to: gc_env.r[31] = gc_env.r[30]; // Move register
Translated b .L_80014E1C to: goto L_80014E1C;
Processing opcode: addi, operands: ['r31', 'r1', '0x8']
Translated addi r31 r1 0x8 to: ['gc_env.r[31] = gc_env.r[1] + 8; // addi r31, r1, 0x8']
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: li, operands: ['r5', '0x2']
Translated li r5 0x2 to: ['gc_env.r[5] = 0x2; // li r5, 0x2']
Translated bl fn_80014B14 to: fn_80014B14();
Translated lis r4 lbl_8001CE78@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001CE78 >> 16) & 0xFFFF; // lis r4, lbl_8001CE78@ha']
Processing opcode: lwz, operands: ['r0', 'lbl_8001CE78@l(r4)']
Translated lwz r0 lbl_8001CE78@l(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + (uint32_t)&lbl_8001CE78); // lwz r0, lbl_8001CE78@l/h(r4)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80014E50 to: if (gc_env.cr[0] != 0) goto L_80014E50;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80014E50 to: if (gc_env.cr[0] != 0) goto L_80014E50;
Processing opcode: lbz, operands: ['r0', '0x1(r31)']
Translated lbz r0 0x1(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x1); // lbz r0, 0x1(r31)']
Processing opcode: stb, operands: ['r0', '0x0(r30)']
Translated stb r0 0x0(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stb r0, (r30)']
Processing opcode: lbz, operands: ['r0', '0x0(r31)']
Translated lbz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x0); // lbz r0, 0x0(r31)']
Processing opcode: stb, operands: ['r0', '0x1(r30)']
Translated stb r0 0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x1, gc_env.r[0]); // stb r0, 0x1(r30)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r5 lbl_8001CE78@ha to: ['gc_env.r[5] = ((uint32_t)&lbl_8001CE78 >> 16) & 0xFFFF; // lis r5, lbl_8001CE78@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: addi, operands: ['r30', 'r4', '0x0']
Translated addi r30 r4 0x0 to: ['gc_env.r[30] = gc_env.r[4] + 0; // addi r30, r4, 0x0']
Processing opcode: lwz, operands: ['r0', 'lbl_8001CE78@l(r5)']
Translated lwz r0 lbl_8001CE78@l(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + (uint32_t)&lbl_8001CE78); // lwz r0, lbl_8001CE78@l/h(r5)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80014E98 to: if (gc_env.cr[0] == 0) goto L_80014E98;
Translated mr r31 r30 to: gc_env.r[31] = gc_env.r[30]; // Move register
Translated b .L_80014E9C to: goto L_80014E9C;
Processing opcode: addi, operands: ['r31', 'r1', '0x8']
Translated addi r31 r1 0x8 to: ['gc_env.r[31] = gc_env.r[1] + 8; // addi r31, r1, 0x8']
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: li, operands: ['r5', '0x4']
Translated li r5 0x4 to: ['gc_env.r[5] = 0x4; // li r5, 0x4']
Translated bl fn_80014B14 to: fn_80014B14();
Translated lis r4 lbl_8001CE78@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001CE78 >> 16) & 0xFFFF; // lis r4, lbl_8001CE78@ha']
Processing opcode: lwz, operands: ['r0', 'lbl_8001CE78@l(r4)']
Translated lwz r0 lbl_8001CE78@l(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + (uint32_t)&lbl_8001CE78); // lwz r0, lbl_8001CE78@l/h(r4)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80014EE0 to: if (gc_env.cr[0] != 0) goto L_80014EE0;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80014EE0 to: if (gc_env.cr[0] != 0) goto L_80014EE0;
Processing opcode: lbz, operands: ['r0', '0x3(r31)']
Translated lbz r0 0x3(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x3); // lbz r0, 0x3(r31)']
Processing opcode: stb, operands: ['r0', '0x0(r30)']
Translated stb r0 0x0(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stb r0, (r30)']
Processing opcode: lbz, operands: ['r0', '0x2(r31)']
Translated lbz r0 0x2(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x2); // lbz r0, 0x2(r31)']
Processing opcode: stb, operands: ['r0', '0x1(r30)']
Translated stb r0 0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x1, gc_env.r[0]); // stb r0, 0x1(r30)']
Processing opcode: lbz, operands: ['r0', '0x1(r31)']
Translated lbz r0 0x1(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x1); // lbz r0, 0x1(r31)']
Processing opcode: stb, operands: ['r0', '0x2(r30)']
Translated stb r0 0x2(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x2, gc_env.r[0]); // stb r0, 0x2(r30)']
Processing opcode: lbz, operands: ['r0', '0x0(r31)']
Translated lbz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x0); // lbz r0, 0x0(r31)']
Processing opcode: stb, operands: ['r0', '0x3(r30)']
Translated stb r0 0x3(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x3, gc_env.r[0]); // stb r0, 0x3(r30)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r5 lbl_8001CE78@ha to: ['gc_env.r[5] = ((uint32_t)&lbl_8001CE78 >> 16) & 0xFFFF; // lis r5, lbl_8001CE78@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: addi, operands: ['r30', 'r4', '0x0']
Translated addi r30 r4 0x0 to: ['gc_env.r[30] = gc_env.r[4] + 0; // addi r30, r4, 0x0']
Processing opcode: lwz, operands: ['r0', 'lbl_8001CE78@l(r5)']
Translated lwz r0 lbl_8001CE78@l(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + (uint32_t)&lbl_8001CE78); // lwz r0, lbl_8001CE78@l/h(r5)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80014F28 to: if (gc_env.cr[0] == 0) goto L_80014F28;
Translated mr r31 r30 to: gc_env.r[31] = gc_env.r[30]; // Move register
Translated b .L_80014F2C to: goto L_80014F2C;
Processing opcode: addi, operands: ['r31', 'r1', '0x8']
Translated addi r31 r1 0x8 to: ['gc_env.r[31] = gc_env.r[1] + 8; // addi r31, r1, 0x8']
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: li, operands: ['r5', '0x8']
Translated li r5 0x8 to: ['gc_env.r[5] = 0x8; // li r5, 0x8']
Translated bl fn_80014B14 to: fn_80014B14();
Translated lis r4 lbl_8001CE78@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001CE78 >> 16) & 0xFFFF; // lis r4, lbl_8001CE78@ha']
Processing opcode: lwz, operands: ['r0', 'lbl_8001CE78@l(r4)']
Translated lwz r0 lbl_8001CE78@l(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + (uint32_t)&lbl_8001CE78); // lwz r0, lbl_8001CE78@l/h(r4)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80014F90 to: if (gc_env.cr[0] != 0) goto L_80014F90;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80014F90 to: if (gc_env.cr[0] != 0) goto L_80014F90;
Processing opcode: lbz, operands: ['r0', '0x7(r31)']
Translated lbz r0 0x7(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x7); // lbz r0, 0x7(r31)']
Processing opcode: stb, operands: ['r0', '0x0(r30)']
Translated stb r0 0x0(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stb r0, (r30)']
Processing opcode: lbz, operands: ['r0', '0x6(r31)']
Translated lbz r0 0x6(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x6); // lbz r0, 0x6(r31)']
Processing opcode: stb, operands: ['r0', '0x1(r30)']
Translated stb r0 0x1(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x1, gc_env.r[0]); // stb r0, 0x1(r30)']
Processing opcode: lbz, operands: ['r0', '0x5(r31)']
Translated lbz r0 0x5(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x5); // lbz r0, 0x5(r31)']
Processing opcode: stb, operands: ['r0', '0x2(r30)']
Translated stb r0 0x2(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x2, gc_env.r[0]); // stb r0, 0x2(r30)']
Processing opcode: lbz, operands: ['r0', '0x4(r31)']
Translated lbz r0 0x4(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x4); // lbz r0, 0x4(r31)']
Processing opcode: stb, operands: ['r0', '0x3(r30)']
Translated stb r0 0x3(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x3, gc_env.r[0]); // stb r0, 0x3(r30)']
Processing opcode: lbz, operands: ['r0', '0x3(r31)']
Translated lbz r0 0x3(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x3); // lbz r0, 0x3(r31)']
Processing opcode: stb, operands: ['r0', '0x4(r30)']
Translated stb r0 0x4(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x4, gc_env.r[0]); // stb r0, 0x4(r30)']
Processing opcode: lbz, operands: ['r0', '0x2(r31)']
Translated lbz r0 0x2(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x2); // lbz r0, 0x2(r31)']
Processing opcode: stb, operands: ['r0', '0x5(r30)']
Translated stb r0 0x5(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x5, gc_env.r[0]); // stb r0, 0x5(r30)']
Processing opcode: lbz, operands: ['r0', '0x1(r31)']
Translated lbz r0 0x1(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x1); // lbz r0, 0x1(r31)']
Processing opcode: stb, operands: ['r0', '0x6(r30)']
Translated stb r0 0x6(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x6, gc_env.r[0]); // stb r0, 0x6(r30)']
Processing opcode: lbz, operands: ['r0', '0x0(r31)']
Translated lbz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x0); // lbz r0, 0x0(r31)']
Processing opcode: stb, operands: ['r0', '0x7(r30)']
Translated stb r0 0x7(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30] + 0x7, gc_env.r[0]); // stb r0, 0x7(r30)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: addi, operands: ['r30', 'r5', '0x0']
Translated addi r30 r5 0x0 to: ['gc_env.r[30] = gc_env.r[5] + 0; // addi r30, r5, 0x0']
Processing opcode: stw, operands: ['r29', '0xc(r1)']
Translated stw r29 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[29]); // stw r29, 0xC(r1)']
Processing opcode: addi, operands: ['r29', 'r4', '0x0']
Translated addi r29 r4 0x0 to: ['gc_env.r[29] = gc_env.r[4] + 0; // addi r29, r4, 0x0']
Processing opcode: stw, operands: ['r28', '0x8(r1)']
Translated stw r28 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[28]); // stw r28, 0x8(r1)']
Processing opcode: addi, operands: ['r28', 'r3', '0x0']
Translated addi r28 r3 0x0 to: ['gc_env.r[28] = gc_env.r[3] + 0; // addi r28, r3, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80014FEC to: goto L_80014FEC;
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: add, operands: ['r4', 'r29', 'r31']
Translated add r4 r29 r31 to: ['gc_env.r[4] = gc_env.r[29] + gc_env.r[31]; // add r4, r29, r31']
Translated bl fn_80014DC4 to: fn_80014DC4();
Processing opcode: addi, operands: ['r31', 'r31', '0x1']
Translated addi r31 r31 0x1 to: ['gc_env.r[31] += 1; // addi r31, r31, 0x1']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80014FFC to: if (gc_env.cr[0] != 0) goto L_80014FFC;
Translated cmpw r31 r30 to: ['gc_env.cr[0] = (int32_t)gc_env.r[31] < (int32_t)gc_env.r[30] ? 0x8 : ((int32_t)gc_env.r[31] > (int32_t)gc_env.r[30] ? 0x4 : 0x2); // cmpw r31, r30']
Translated blt .L_80014FDC to: ['if (gc_env.cr[0] & 0x8) goto L_80014FDC; // blt .L_80014FDC']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: lwz, operands: ['r29', '0xc(r1)']
Translated lwz r29 0xc(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r29, 0xC(r1)']
Processing opcode: lwz, operands: ['r28', '0x8(r1)']
Translated lwz r28 0x8(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r28, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: li, operands: ['r30', '0x0']
Translated li r30 0x0 to: ['gc_env.r[30] = 0x0; // li r30, 0x0']
Translated slwi r0 r30 2 to: ['gc_env.r[0] = gc_env.r[30] << 2; // slwi r0, r30, 2']
Processing opcode: stw, operands: ['r29', '0xc(r1)']
Translated stw r29 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[29]); // stw r29, 0xC(r1)']
Processing opcode: add, operands: ['r31', 'r4', 'r0']
Translated add r31 r4 r0 to: ['gc_env.r[31] = gc_env.r[4] + gc_env.r[0]; // add r31, r4, r0']
Processing opcode: addi, operands: ['r29', 'r5', '0x0']
Translated addi r29 r5 0x0 to: ['gc_env.r[29] = gc_env.r[5] + 0; // addi r29, r5, 0x0']
Processing opcode: stw, operands: ['r28', '0x8(r1)']
Translated stw r28 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[28]); // stw r28, 0x8(r1)']
Processing opcode: addi, operands: ['r28', 'r3', '0x0']
Translated addi r28 r3 0x0 to: ['gc_env.r[28] = gc_env.r[3] + 0; // addi r28, r3, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80015068 to: goto L_80015068;
Processing opcode: addi, operands: ['r3', 'r28', '0x0']
Translated addi r3 r28 0x0 to: ['gc_env.r[3] = gc_env.r[28] + 0; // addi r3, r28, 0x0']
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Translated bl fn_80014E68 to: fn_80014E68();
Processing opcode: addi, operands: ['r30', 'r30', '0x1']
Translated addi r30 r30 0x1 to: ['gc_env.r[30] += 1; // addi r30, r30, 0x1']
Processing opcode: addi, operands: ['r31', 'r31', '0x4']
Translated addi r31 r31 0x4 to: ['gc_env.r[31] += 4; // addi r31, r31, 0x4']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015078 to: if (gc_env.cr[0] != 0) goto L_80015078;
Translated cmpw r30 r29 to: ['gc_env.cr[0] = (int32_t)gc_env.r[30] < (int32_t)gc_env.r[29] ? 0x8 : ((int32_t)gc_env.r[30] > (int32_t)gc_env.r[29] ? 0x4 : 0x2); // cmpw r30, r29']
Translated blt .L_80015054 to: ['if (gc_env.cr[0] & 0x8) goto L_80015054; // blt .L_80015054']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: lwz, operands: ['r29', '0xc(r1)']
Translated lwz r29 0xc(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r29, 0xC(r1)']
Processing opcode: lwz, operands: ['r28', '0x8(r1)']
Translated lwz r28 0x8(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r28, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Translated bl fn_80018A00 to: fn_80018A00();
Translated mr. r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated ble .L_8001513C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8001513C; // ble .L_8001513C']
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Processing opcode: addi, operands: ['r4', 'r1', '0xc']
Translated addi r4 r1 0xc to: ['gc_env.r[4] = gc_env.r[1] + 12; // addi r4, r1, 0xc']
Translated bl fn_800148D0 to: fn_800148D0();
Translated cmpwi r30 0x880 to: gc_env.cr[0] = (gc_env.r[30] == 0x880) ? 0 : (gc_env.r[30] < 0x880 ? -1 : 1); // Compare with immediate
Translated ble .L_80015114 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80015114; // ble .L_80015114']
Translated b .L_800150F8 to: goto L_800150F8;
Translated cmpwi r30 0x880 to: gc_env.cr[0] = (gc_env.r[30] == 0x880) ? 0 : (gc_env.r[30] < 0x880 ? -1 : 1); // Compare with immediate
Translated ble .L_800150E0 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_800150E0; // ble .L_800150E0']
Processing opcode: li, operands: ['r31', '0x880']
Translated li r31 0x880 to: ['gc_env.r[31] = 0x880; // li r31, 0x880']
Translated b .L_800150E4 to: goto L_800150E4;
Translated mr r31 r30 to: gc_env.r[31] = gc_env.r[30]; // Move register
Processing opcode: lwz, operands: ['r3', '0xc(r1)']
Translated lwz r3 0xc(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r3, 0xC(r1)']
Processing opcode: addi, operands: ['r4', 'r31', '0x0']
Translated addi r4 r31 0x0 to: ['gc_env.r[4] = gc_env.r[31] + 0; // addi r4, r31, 0x0']
Processing opcode: addi, operands: ['r3', 'r3', '0x10']
Translated addi r3 r3 0x10 to: ['gc_env.r[3] += 16; // addi r3, r3, 0x10']
Translated bl fn_80018A30 to: fn_80018A30();
Processing opcode: subf, operands: ['r30', 'r31', 'r30']
Translated subf r30 r31 r30 to: ['gc_env.r[30] = gc_env.r[30] - gc_env.r[31]; // subf r30, r31, r30']
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bgt .L_800150D0 to: ['if (gc_env.cr[0] & 0x4) goto L_800150D0; // bgt .L_800150D0']
Processing opcode: lwz, operands: ['r3', '0xc(r1)']
Translated lwz r3 0xc(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r3, 0xC(r1)']
Processing opcode: li, operands: ['r4', '0xff']
Translated li r4 0xff to: ['gc_env.r[4] = 0xff; // li r4, 0xff']
Processing opcode: li, operands: ['r5', '0x6']
Translated li r5 0x6 to: ['gc_env.r[5] = 0x6; // li r5, 0x6']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_8001513C to: goto L_8001513C;
Processing opcode: lwz, operands: ['r3', '0xc(r1)']
Translated lwz r3 0xc(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r3, 0xC(r1)']
Processing opcode: addi, operands: ['r4', 'r30', '0x0']
Translated addi r4 r30 0x0 to: ['gc_env.r[4] = gc_env.r[30] + 0; // addi r4, r30, 0x0']
Processing opcode: addi, operands: ['r3', 'r3', '0x10']
Translated addi r3 r3 0x10 to: ['gc_env.r[3] += 16; // addi r3, r3, 0x10']
Translated bl fn_80018A30 to: fn_80018A30();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8001513C to: if (gc_env.cr[0] != 0) goto L_8001513C;
Processing opcode: lwz, operands: ['r3', '0xc(r1)']
Translated lwz r3 0xc(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r3, 0xC(r1)']
Processing opcode: stw, operands: ['r30', '0x8(r3)']
Translated stw r30 0x8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[30]); // stw r30, 0x8(r3)']
Processing opcode: lwz, operands: ['r3', '0x8(r1)']
Translated lwz r3 0x8(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r3, 0x8(r1)']
Translated b .L_80015150 to: goto L_80015150;
Processing opcode: lwz, operands: ['r3', '0x8(r1)']
Translated lwz r3 0x8(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r3, 0x8(r1)']
Translated cmpwi r3 -0x1 to: gc_env.cr[0] = (gc_env.r[3] == -0x1) ? 0 : (gc_env.r[3] < -0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_8001514C to: if (gc_env.cr[0] == 0) goto L_8001514C;
Translated bl fn_80014998 to: fn_80014998();
Processing opcode: li, operands: ['r3', '-0x1']
Translated li r3 -0x1 to: ['gc_env.r[3] = -0x1; // li r3, -0x1']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Translated bl fn_80015098 to: fn_80015098();
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Translated cmpwi r30 -0x1 to: gc_env.cr[0] = (gc_env.r[30] == -0x1) ? 0 : (gc_env.r[30] < -0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_800151CC to: if (gc_env.cr[0] == 0) goto L_800151CC;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl fn_8001496C to: fn_8001496C();
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl fn_80014A40 to: fn_80014A40();
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated bl fn_80014DC4 to: fn_80014DC4();
Processing opcode: lbz, operands: ['r0', '0x8(r1)']
Translated lbz r0 0x8(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x8); // lbz r0, 0x8(r1)']
Translated cmplwi r0 0x80 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x80) ? 0 : ((uint32_t)gc_env.r[0] < 0x80 ? -1 : 1); // Logical compare with immediate
Translated bge .L_800151C4 to: if (gc_env.cr[0] >= 0) goto L_800151C4;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl fn_800151E4 to: fn_800151E4();
Translated b .L_800151CC to: goto L_800151CC;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl fn_80014998 to: fn_80014998();
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Translated bl fn_80014658 to: fn_80014658();
Translated lis r3 lbl_8001E830@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001E830 >> 16) & 0xFFFF; // lis r3, lbl_8001E830@ha']
Processing opcode: stw, operands: ['r31', '0x10(r1)']
Translated stw r31 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[31]); // stw r31, 0x10(r1)']
Processing opcode: addi, operands: ['r4', 'r3', 'lbl_8001E830@l']
Translated addi r4 r3 lbl_8001E830@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&lbl_8001E830 & 0xFFFF); // addi r4, r3, lbl_8001E830@l']
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Translated bl fn_80014578 to: fn_80014578();
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r3 lbl_8001E830@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001E830 >> 16) & 0xFFFF; // lis r3, lbl_8001E830@ha']
Processing opcode: addi, operands: ['r4', 'r3', 'lbl_8001E830@l']
Translated addi r4 r3 lbl_8001E830@l to: ['gc_env.r[4] = (uint32_t)&lbl_8001E830; // lis + addi lbl_8001E830 (completing pattern)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r0', '0x0(r4)']
Translated stw r0 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stw r0, (r4)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r0', '0x8(r4)']
Translated stb r0 0x8(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x8, gc_env.r[0]); // stb r0, 0x8(r4)']
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Translated blr  to: return;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Translated blr  to: return;
Translated lis r3 lbl_8001E848@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001E848 >> 16) & 0xFFFF; // lis r3, lbl_8001E848@ha']
Processing opcode: li, operands: ['r0', '0x20']
Translated li r0 0x20 to: ['gc_env.r[0] = 0x20; // li r0, 0x20']
Processing opcode: stw, operands: ['r0', 'lbl_8001E848@l(r3)']
Translated stw r0 lbl_8001E848@l(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + (uint32_t)&lbl_8001E848, gc_env.r[0]); // stw r0, lbl_8001E848@l/h(r3)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: li, operands: ['r31', '0x500']
Translated li r31 0x500 to: ['gc_env.r[31] = 0x500; // li r31, 0x500']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Translated bl fn_80014A40 to: fn_80014A40();
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated bl fn_80014DC4 to: fn_80014DC4();
Translated lis r3 lbl_8001E848@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001E848 >> 16) & 0xFFFF; // lis r3, lbl_8001E848@ha']
Processing opcode: lbz, operands: ['r4', '0x8(r1)']
Translated lbz r4 0x8(r1) to: ['gc_env.r[4] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x8); // lbz r4, 0x8(r1)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001E848@l(r3)']
Translated lwz r0 lbl_8001E848@l(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + (uint32_t)&lbl_8001E848); // lwz r0, lbl_8001E848@l/h(r3)']
Translated cmplw r4 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bge .L_800152E0 to: if (gc_env.cr[0] >= 0) goto L_800152E0;
Translated lis r3 lbl_8001B9D8@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001B9D8 >> 16) & 0xFFFF; // lis r3, lbl_8001B9D8@ha']
Translated slwi r4 r4 2 to: ['gc_env.r[4] = gc_env.r[4] << 2; // slwi r4, r4, 2']
Processing opcode: addi, operands: ['r0', 'r3', 'lbl_8001B9D8@l']
Translated addi r0 r3 lbl_8001B9D8@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&lbl_8001B9D8 & 0xFFFF); // addi r0, r3, lbl_8001B9D8@l']
Processing opcode: add, operands: ['r3', 'r0', 'r4']
Translated add r3 r0 r4 to: ['gc_env.r[3] = gc_env.r[0] + gc_env.r[4]; // add r3, r0, r4']
Processing opcode: lwz, operands: ['r12', '0x0(r3)']
Translated lwz r12 0x0(r3) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r12, (r3)']
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: addi, operands: ['r31', 'r5', '0x0']
Translated addi r31 r5 0x0 to: ['gc_env.r[31] = gc_env.r[5] + 0; // addi r31, r5, 0x0']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: addi, operands: ['r30', 'r4', '0x0']
Translated addi r30 r4 0x0 to: ['gc_env.r[30] = gc_env.r[4] + 0; // addi r30, r4, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Processing opcode: stw, operands: ['r29', '0xc(r1)']
Translated stw r29 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[29]); // stw r29, 0xC(r1)']
Processing opcode: addi, operands: ['r29', 'r3', '0x0']
Translated addi r29 r3 0x0 to: ['gc_env.r[29] = gc_env.r[3] + 0; // addi r29, r3, 0x0']
Translated bl fn_80014A00 to: fn_80014A00();
Processing opcode: lwz, operands: ['r3', '0xc(r29)']
Translated lwz r3 0xc(r29) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r3, 0xC(r29)']
Translated cmplwi r3 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x880) ? 0 : ((uint32_t)gc_env.r[3] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated bge .L_80015350 to: if (gc_env.cr[0] >= 0) goto L_80015350;
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: add, operands: ['r3', 'r29', 'r3']
Translated add r3 r29 r3 to: ['gc_env.r[3] = gc_env.r[29] + gc_env.r[3]; // add r3, r29, r3']
Processing opcode: stw, operands: ['r0', '0xc(r29)']
Translated stw r0 0xc(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0xC, gc_env.r[0]); // stw r0, 0xC(r29)']
Processing opcode: stb, operands: ['r30', '0x10(r3)']
Translated stb r30 0x10(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x10, gc_env.r[30]); // stb r30, 0x10(r3)']
Processing opcode: lwz, operands: ['r3', '0x8(r29)']
Translated lwz r3 0x8(r29) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x8); // lwz r3, 0x8(r29)']
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r29)']
Translated stw r0 0x8(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0x8, gc_env.r[0]); // stw r0, 0x8(r29)']
Processing opcode: lwz, operands: ['r3', '0xc(r29)']
Translated lwz r3 0xc(r29) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0xC); // lwz r3, 0xC(r29)']
Translated cmplwi r3 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x880) ? 0 : ((uint32_t)gc_env.r[3] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated bge .L_80015378 to: if (gc_env.cr[0] >= 0) goto L_80015378;
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: add, operands: ['r3', 'r29', 'r3']
Translated add r3 r29 r3 to: ['gc_env.r[3] = gc_env.r[29] + gc_env.r[3]; // add r3, r29, r3']
Processing opcode: stw, operands: ['r0', '0xc(r29)']
Translated stw r0 0xc(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0xC, gc_env.r[0]); // stw r0, 0xC(r29)']
Processing opcode: stb, operands: ['r31', '0x10(r3)']
Translated stb r31 0x10(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x10, gc_env.r[31]); // stb r31, 0x10(r3)']
Processing opcode: lwz, operands: ['r3', '0x8(r29)']
Translated lwz r3 0x8(r29) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x8); // lwz r3, 0x8(r29)']
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r29)']
Translated stw r0 0x8(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29] + 0x8, gc_env.r[0]); // stw r0, 0x8(r29)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: lwz, operands: ['r29', '0xc(r1)']
Translated lwz r29 0xc(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r29, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: li, operands: ['r31', '0x3']
Translated li r31 0x3 to: ['gc_env.r[31] = 0x3; // li r31, 0x3']
Processing opcode: stw, operands: ['r30', '0x8(r1)']
Translated stw r30 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[30]); // stw r30, 0x8(r1)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl fn_80014828 to: fn_80014828();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: subi, operands: ['r31', 'r31', '0x1']
Translated subi r31 r31 0x1 to: ['gc_env.r[31] = gc_env.r[31] - 1; // subi r31, r31, 1']
Translated beq .L_800153CC to: if (gc_env.cr[0] == 0) goto L_800153CC;
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated bgt .L_800153B0 to: ['if (gc_env.cr[0] & 0x4) goto L_800153B0; // bgt .L_800153B0']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: lwz, operands: ['r30', '0x8(r1)']
Translated lwz r30 0x8(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r30, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl fn_800152FC to: fn_800152FC();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_80015394 to: fn_80015394();
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r5', '0x10']
Translated li r5 0x10 to: ['gc_env.r[5] = 0x10; // li r5, 0x10']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_800153E4 to: fn_800153E4();
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_800153E4 to: fn_800153E4();
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated bl fn_800153E4 to: fn_800153E4();
Translated mr. r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bne .L_800154A0 to: if (gc_env.cr[0] != 0) goto L_800154A0;
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl fn_80014658 to: fn_80014658();
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Translated bl fn_80014578 to: fn_80014578();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_800153E4 to: fn_800153E4();
Translated bl fn_80005450 to: fn_80005450();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: lwz, operands: ['r0', '0x8(r3)']
Translated lwz r0 0x8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r0, 0x8(r3)']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8001551C to: if (gc_env.cr[0] == 0) goto L_8001551C;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x2']
Translated li r5 0x2 to: ['gc_env.r[5] = 0x2; // li r5, 0x2']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015658 to: goto L_80015658;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_800152FC to: fn_800152FC();
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Translated bl fn_80017474 to: fn_80017474();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015574 to: if (gc_env.cr[0] != 0) goto L_80015574;
Processing opcode: lwz, operands: ['r3', '0xc(r31)']
Translated lwz r3 0xc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r3, 0xC(r31)']
Processing opcode: lbz, operands: ['r5', '0x8(r1)']
Translated lbz r5 0x8(r1) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x8); // lbz r5, 0x8(r1)']
Translated cmplwi r3 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x880) ? 0 : ((uint32_t)gc_env.r[3] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated blt .L_80015554 to: ['if (gc_env.cr[0] & 0x8) goto L_80015554; // blt .L_80015554']
Processing opcode: li, operands: ['r3', '0x301']
Translated li r3 0x301 to: ['gc_env.r[3] = 0x301; // li r3, 0x301']
Translated b .L_80015574 to: goto L_80015574;
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: add, operands: ['r4', 'r31', 'r3']
Translated add r4 r31 r3 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[3]; // add r4, r31, r3']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r5', '0x10(r4)']
Translated stb r5 0x10(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x10, gc_env.r[5]); // stb r5, 0x10(r4)']
Processing opcode: lwz, operands: ['r4', '0x8(r31)']
Translated lwz r4 0x8(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r4, 0x8(r31)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r31)']
Translated stw r0 0x8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x8, gc_env.r[0]); // stw r0, 0x8(r31)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800155B4 to: if (gc_env.cr[0] != 0) goto L_800155B4;
Processing opcode: lwz, operands: ['r3', '0xc(r31)']
Translated lwz r3 0xc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r3, 0xC(r31)']
Processing opcode: lbz, operands: ['r5', '0x9(r1)']
Translated lbz r5 0x9(r1) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x9); // lbz r5, 0x9(r1)']
Translated cmplwi r3 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x880) ? 0 : ((uint32_t)gc_env.r[3] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated blt .L_80015594 to: ['if (gc_env.cr[0] & 0x8) goto L_80015594; // blt .L_80015594']
Processing opcode: li, operands: ['r3', '0x301']
Translated li r3 0x301 to: ['gc_env.r[3] = 0x301; // li r3, 0x301']
Translated b .L_800155B4 to: goto L_800155B4;
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: add, operands: ['r4', 'r31', 'r3']
Translated add r4 r31 r3 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[3]; // add r4, r31, r3']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r5', '0x10(r4)']
Translated stb r5 0x10(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x10, gc_env.r[5]); // stb r5, 0x10(r4)']
Processing opcode: lwz, operands: ['r4', '0x8(r31)']
Translated lwz r4 0x8(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r4, 0x8(r31)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r31)']
Translated stw r0 0x8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x8, gc_env.r[0]); // stw r0, 0x8(r31)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800155F4 to: if (gc_env.cr[0] != 0) goto L_800155F4;
Processing opcode: lwz, operands: ['r3', '0xc(r31)']
Translated lwz r3 0xc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r3, 0xC(r31)']
Processing opcode: lbz, operands: ['r5', '0xa(r1)']
Translated lbz r5 0xa(r1) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xa); // lbz r5, 0xa(r1)']
Translated cmplwi r3 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x880) ? 0 : ((uint32_t)gc_env.r[3] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated blt .L_800155D4 to: ['if (gc_env.cr[0] & 0x8) goto L_800155D4; // blt .L_800155D4']
Processing opcode: li, operands: ['r3', '0x301']
Translated li r3 0x301 to: ['gc_env.r[3] = 0x301; // li r3, 0x301']
Translated b .L_800155F4 to: goto L_800155F4;
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: add, operands: ['r4', 'r31', 'r3']
Translated add r4 r31 r3 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[3]; // add r4, r31, r3']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r5', '0x10(r4)']
Translated stb r5 0x10(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x10, gc_env.r[5]); // stb r5, 0x10(r4)']
Processing opcode: lwz, operands: ['r4', '0x8(r31)']
Translated lwz r4 0x8(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r4, 0x8(r31)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r31)']
Translated stw r0 0x8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x8, gc_env.r[0]); // stw r0, 0x8(r31)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015634 to: if (gc_env.cr[0] != 0) goto L_80015634;
Processing opcode: lwz, operands: ['r3', '0xc(r31)']
Translated lwz r3 0xc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r3, 0xC(r31)']
Processing opcode: lbz, operands: ['r5', '0xb(r1)']
Translated lbz r5 0xb(r1) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xb); // lbz r5, 0xb(r1)']
Translated cmplwi r3 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x880) ? 0 : ((uint32_t)gc_env.r[3] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated blt .L_80015614 to: ['if (gc_env.cr[0] & 0x8) goto L_80015614; // blt .L_80015614']
Processing opcode: li, operands: ['r3', '0x301']
Translated li r3 0x301 to: ['gc_env.r[3] = 0x301; // li r3, 0x301']
Translated b .L_80015634 to: goto L_80015634;
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: add, operands: ['r4', 'r31', 'r3']
Translated add r4 r31 r3 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[3]; // add r4, r31, r3']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r5', '0x10(r4)']
Translated stb r5 0x10(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x10, gc_env.r[5]); // stb r5, 0x10(r4)']
Processing opcode: lwz, operands: ['r4', '0x8(r31)']
Translated lwz r4 0x8(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r4, 0x8(r31)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r31)']
Translated stw r0 0x8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x8, gc_env.r[0]); // stw r0, 0x8(r31)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80015650 to: if (gc_env.cr[0] == 0) goto L_80015650;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x3']
Translated li r5 0x3 to: ['gc_env.r[5] = 0x3; // li r5, 0x3']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015658 to: goto L_80015658;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_80015394 to: fn_80015394();
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Processing opcode: stw, operands: ['r31', '0x2c(r1)']
Translated stw r31 0x2c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stw r31, 0x2C(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: lwz, operands: ['r0', '0x8(r3)']
Translated lwz r0 0x8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r0, 0x8(r3)']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800156A0 to: if (gc_env.cr[0] == 0) goto L_800156A0;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x2']
Translated li r5 0x2 to: ['gc_env.r[5] = 0x2; // li r5, 0x2']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015734 to: goto L_80015734;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_800152FC to: fn_800152FC();
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Translated bl fn_8001749C to: fn_8001749C();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800156D0 to: if (gc_env.cr[0] != 0) goto L_800156D0;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Processing opcode: li, operands: ['r5', '0x20']
Translated li r5 0x20 to: ['gc_env.r[5] = 0x20; // li r5, 0x20']
Translated bl fn_80014A70 to: fn_80014A70();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015710 to: if (gc_env.cr[0] != 0) goto L_80015710;
Processing opcode: lwz, operands: ['r3', '0xc(r31)']
Translated lwz r3 0xc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r3, 0xC(r31)']
Translated cmplwi r3 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x880) ? 0 : ((uint32_t)gc_env.r[3] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated blt .L_800156EC to: ['if (gc_env.cr[0] & 0x8) goto L_800156EC; // blt .L_800156EC']
Processing opcode: li, operands: ['r3', '0x301']
Translated li r3 0x301 to: ['gc_env.r[3] = 0x301; // li r3, 0x301']
Translated b .L_80015710 to: goto L_80015710;
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: add, operands: ['r4', 'r31', 'r3']
Translated add r4 r31 r3 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[3]; // add r4, r31, r3']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: li, operands: ['r0', '0x2']
Translated li r0 0x2 to: ['gc_env.r[0] = 0x2; // li r0, 0x2']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r0', '0x10(r4)']
Translated stb r0 0x10(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x10, gc_env.r[0]); // stb r0, 0x10(r4)']
Processing opcode: lwz, operands: ['r4', '0x8(r31)']
Translated lwz r4 0x8(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r4, 0x8(r31)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r31)']
Translated stw r0 0x8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x8, gc_env.r[0]); // stw r0, 0x8(r31)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8001572C to: if (gc_env.cr[0] == 0) goto L_8001572C;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x3']
Translated li r5 0x3 to: ['gc_env.r[5] = 0x3; // li r5, 0x3']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015734 to: goto L_80015734;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_80015394 to: fn_80015394();
Processing opcode: lwz, operands: ['r31', '0x2c(r1)']
Translated lwz r31 0x2c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r31, 0x2C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: lwz, operands: ['r0', '0x8(r3)']
Translated lwz r0 0x8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r0, 0x8(r3)']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8001577C to: if (gc_env.cr[0] == 0) goto L_8001577C;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x2']
Translated li r5 0x2 to: ['gc_env.r[5] = 0x2; // li r5, 0x2']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015978 to: goto L_80015978;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_800152FC to: fn_800152FC();
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Translated bl fn_80017540 to: fn_80017540();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800157D4 to: if (gc_env.cr[0] != 0) goto L_800157D4;
Processing opcode: lwz, operands: ['r3', '0xc(r31)']
Translated lwz r3 0xc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r3, 0xC(r31)']
Processing opcode: lbz, operands: ['r5', '0x8(r1)']
Translated lbz r5 0x8(r1) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x8); // lbz r5, 0x8(r1)']
Translated cmplwi r3 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x880) ? 0 : ((uint32_t)gc_env.r[3] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated blt .L_800157B4 to: ['if (gc_env.cr[0] & 0x8) goto L_800157B4; // blt .L_800157B4']
Processing opcode: li, operands: ['r3', '0x301']
Translated li r3 0x301 to: ['gc_env.r[3] = 0x301; // li r3, 0x301']
Translated b .L_800157D4 to: goto L_800157D4;
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: add, operands: ['r4', 'r31', 'r3']
Translated add r4 r31 r3 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[3]; // add r4, r31, r3']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r5', '0x10(r4)']
Translated stb r5 0x10(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x10, gc_env.r[5]); // stb r5, 0x10(r4)']
Processing opcode: lwz, operands: ['r4', '0x8(r31)']
Translated lwz r4 0x8(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r4, 0x8(r31)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r31)']
Translated stw r0 0x8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x8, gc_env.r[0]); // stw r0, 0x8(r31)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015814 to: if (gc_env.cr[0] != 0) goto L_80015814;
Processing opcode: lwz, operands: ['r3', '0xc(r31)']
Translated lwz r3 0xc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r3, 0xC(r31)']
Processing opcode: lbz, operands: ['r5', '0x9(r1)']
Translated lbz r5 0x9(r1) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x9); // lbz r5, 0x9(r1)']
Translated cmplwi r3 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x880) ? 0 : ((uint32_t)gc_env.r[3] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated blt .L_800157F4 to: ['if (gc_env.cr[0] & 0x8) goto L_800157F4; // blt .L_800157F4']
Processing opcode: li, operands: ['r3', '0x301']
Translated li r3 0x301 to: ['gc_env.r[3] = 0x301; // li r3, 0x301']
Translated b .L_80015814 to: goto L_80015814;
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: add, operands: ['r4', 'r31', 'r3']
Translated add r4 r31 r3 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[3]; // add r4, r31, r3']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r5', '0x10(r4)']
Translated stb r5 0x10(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x10, gc_env.r[5]); // stb r5, 0x10(r4)']
Processing opcode: lwz, operands: ['r4', '0x8(r31)']
Translated lwz r4 0x8(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r4, 0x8(r31)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r31)']
Translated stw r0 0x8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x8, gc_env.r[0]); // stw r0, 0x8(r31)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015854 to: if (gc_env.cr[0] != 0) goto L_80015854;
Processing opcode: lwz, operands: ['r3', '0xc(r31)']
Translated lwz r3 0xc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r3, 0xC(r31)']
Processing opcode: lbz, operands: ['r5', '0xa(r1)']
Translated lbz r5 0xa(r1) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xa); // lbz r5, 0xa(r1)']
Translated cmplwi r3 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x880) ? 0 : ((uint32_t)gc_env.r[3] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated blt .L_80015834 to: ['if (gc_env.cr[0] & 0x8) goto L_80015834; // blt .L_80015834']
Processing opcode: li, operands: ['r3', '0x301']
Translated li r3 0x301 to: ['gc_env.r[3] = 0x301; // li r3, 0x301']
Translated b .L_80015854 to: goto L_80015854;
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: add, operands: ['r4', 'r31', 'r3']
Translated add r4 r31 r3 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[3]; // add r4, r31, r3']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r5', '0x10(r4)']
Translated stb r5 0x10(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x10, gc_env.r[5]); // stb r5, 0x10(r4)']
Processing opcode: lwz, operands: ['r4', '0x8(r31)']
Translated lwz r4 0x8(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r4, 0x8(r31)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r31)']
Translated stw r0 0x8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x8, gc_env.r[0]); // stw r0, 0x8(r31)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015894 to: if (gc_env.cr[0] != 0) goto L_80015894;
Processing opcode: lwz, operands: ['r3', '0xc(r31)']
Translated lwz r3 0xc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r3, 0xC(r31)']
Processing opcode: lbz, operands: ['r5', '0xb(r1)']
Translated lbz r5 0xb(r1) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xb); // lbz r5, 0xb(r1)']
Translated cmplwi r3 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x880) ? 0 : ((uint32_t)gc_env.r[3] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated blt .L_80015874 to: ['if (gc_env.cr[0] & 0x8) goto L_80015874; // blt .L_80015874']
Processing opcode: li, operands: ['r3', '0x301']
Translated li r3 0x301 to: ['gc_env.r[3] = 0x301; // li r3, 0x301']
Translated b .L_80015894 to: goto L_80015894;
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: add, operands: ['r4', 'r31', 'r3']
Translated add r4 r31 r3 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[3]; // add r4, r31, r3']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r5', '0x10(r4)']
Translated stb r5 0x10(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x10, gc_env.r[5]); // stb r5, 0x10(r4)']
Processing opcode: lwz, operands: ['r4', '0x8(r31)']
Translated lwz r4 0x8(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r4, 0x8(r31)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r31)']
Translated stw r0 0x8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x8, gc_env.r[0]); // stw r0, 0x8(r31)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800158D4 to: if (gc_env.cr[0] != 0) goto L_800158D4;
Processing opcode: lwz, operands: ['r3', '0xc(r31)']
Translated lwz r3 0xc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r3, 0xC(r31)']
Processing opcode: lbz, operands: ['r5', '0xc(r1)']
Translated lbz r5 0xc(r1) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xc); // lbz r5, 0xc(r1)']
Translated cmplwi r3 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x880) ? 0 : ((uint32_t)gc_env.r[3] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated blt .L_800158B4 to: ['if (gc_env.cr[0] & 0x8) goto L_800158B4; // blt .L_800158B4']
Processing opcode: li, operands: ['r3', '0x301']
Translated li r3 0x301 to: ['gc_env.r[3] = 0x301; // li r3, 0x301']
Translated b .L_800158D4 to: goto L_800158D4;
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: add, operands: ['r4', 'r31', 'r3']
Translated add r4 r31 r3 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[3]; // add r4, r31, r3']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r5', '0x10(r4)']
Translated stb r5 0x10(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x10, gc_env.r[5]); // stb r5, 0x10(r4)']
Processing opcode: lwz, operands: ['r4', '0x8(r31)']
Translated lwz r4 0x8(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r4, 0x8(r31)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r31)']
Translated stw r0 0x8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x8, gc_env.r[0]); // stw r0, 0x8(r31)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015914 to: if (gc_env.cr[0] != 0) goto L_80015914;
Processing opcode: lwz, operands: ['r3', '0xc(r31)']
Translated lwz r3 0xc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r3, 0xC(r31)']
Processing opcode: lbz, operands: ['r5', '0xd(r1)']
Translated lbz r5 0xd(r1) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xd); // lbz r5, 0xd(r1)']
Translated cmplwi r3 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x880) ? 0 : ((uint32_t)gc_env.r[3] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated blt .L_800158F4 to: ['if (gc_env.cr[0] & 0x8) goto L_800158F4; // blt .L_800158F4']
Processing opcode: li, operands: ['r3', '0x301']
Translated li r3 0x301 to: ['gc_env.r[3] = 0x301; // li r3, 0x301']
Translated b .L_80015914 to: goto L_80015914;
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: add, operands: ['r4', 'r31', 'r3']
Translated add r4 r31 r3 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[3]; // add r4, r31, r3']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r5', '0x10(r4)']
Translated stb r5 0x10(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x10, gc_env.r[5]); // stb r5, 0x10(r4)']
Processing opcode: lwz, operands: ['r4', '0x8(r31)']
Translated lwz r4 0x8(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r4, 0x8(r31)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r31)']
Translated stw r0 0x8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x8, gc_env.r[0]); // stw r0, 0x8(r31)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015954 to: if (gc_env.cr[0] != 0) goto L_80015954;
Processing opcode: lwz, operands: ['r3', '0xc(r31)']
Translated lwz r3 0xc(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r3, 0xC(r31)']
Processing opcode: lbz, operands: ['r5', '0xe(r1)']
Translated lbz r5 0xe(r1) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xe); // lbz r5, 0xe(r1)']
Translated cmplwi r3 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x880) ? 0 : ((uint32_t)gc_env.r[3] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated blt .L_80015934 to: ['if (gc_env.cr[0] & 0x8) goto L_80015934; // blt .L_80015934']
Processing opcode: li, operands: ['r3', '0x301']
Translated li r3 0x301 to: ['gc_env.r[3] = 0x301; // li r3, 0x301']
Translated b .L_80015954 to: goto L_80015954;
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: add, operands: ['r4', 'r31', 'r3']
Translated add r4 r31 r3 to: ['gc_env.r[4] = gc_env.r[31] + gc_env.r[3]; // add r4, r31, r3']
Processing opcode: stw, operands: ['r0', '0xc(r31)']
Translated stw r0 0xc(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0xC, gc_env.r[0]); // stw r0, 0xC(r31)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r5', '0x10(r4)']
Translated stb r5 0x10(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x10, gc_env.r[5]); // stb r5, 0x10(r4)']
Processing opcode: lwz, operands: ['r4', '0x8(r31)']
Translated lwz r4 0x8(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r4, 0x8(r31)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r31)']
Translated stw r0 0x8(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x8, gc_env.r[0]); // stw r0, 0x8(r31)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80015970 to: if (gc_env.cr[0] == 0) goto L_80015970;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x3']
Translated li r5 0x3 to: ['gc_env.r[5] = 0x3; // li r5, 0x3']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015978 to: goto L_80015978;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_80015394 to: fn_80015394();
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x820(r1)']
Translated stwu r1 -0x820(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x820, gc_env.r[1]); // stwu r1, -0x820(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x820;']
Processing opcode: stw, operands: ['r31', '0x81c(r1)']
Translated stw r31 0x81c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x81C, gc_env.r[31]); // stw r31, 0x81C(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: stw, operands: ['r30', '0x818(r1)']
Translated stw r30 0x818(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x818, gc_env.r[30]); // stw r30, 0x818(r1)']
Processing opcode: lwz, operands: ['r0', '0x8(r3)']
Translated lwz r0 0x8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r0, 0x8(r3)']
Translated cmplwi r0 0x8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x8) ? 0 : ((uint32_t)gc_env.r[0] < 0x8 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800159C4 to: if (gc_env.cr[0] == 0) goto L_800159C4;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x2']
Translated li r5 0x2 to: ['gc_env.r[5] = 0x2; // li r5, 0x2']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015B5C to: goto L_80015B5C;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl fn_80014A40 to: fn_80014A40();
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated bl fn_80014DC4 to: fn_80014DC4();
Translated mr. r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated bne .L_800159F4 to: if (gc_env.cr[0] != 0) goto L_800159F4;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x9']
Translated addi r4 r1 0x9 to: ['gc_env.r[4] = gc_env.r[1] + 9; // addi r4, r1, 0x9']
Translated bl fn_80014DC4 to: fn_80014DC4();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015A0C to: if (gc_env.cr[0] != 0) goto L_80015A0C;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0xa']
Translated addi r4 r1 0xa to: ['gc_env.r[4] = gc_env.r[1] + 10; // addi r4, r1, 0xa']
Translated bl fn_80014DE8 to: fn_80014DE8();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015A24 to: if (gc_env.cr[0] != 0) goto L_80015A24;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0xc']
Translated addi r4 r1 0xc to: ['gc_env.r[4] = gc_env.r[1] + 12; // addi r4, r1, 0xc']
Translated bl fn_80014E68 to: fn_80014E68();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Processing opcode: lbz, operands: ['r0', '0x9(r1)']
Translated lbz r0 0x9(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x9); // lbz r0, 0x9(r1)']
Translated rlwinm. r0 r0 0 30 30 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x2; // rlwinm r0, r0, 0, 30, 30', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_80015A44 to: if (gc_env.cr[0] == 0) goto L_80015A44;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x12']
Translated li r5 0x12 to: ['gc_env.r[5] = 0x12; // li r5, 0x12']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015B5C to: goto L_80015B5C;
Processing opcode: lhz, operands: ['r0', '0xa(r1)']
Translated lhz r0 0xa(r1) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xa); // lhz r0, 0xa(r1)']
Translated cmplwi r0 0x800 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x800) ? 0 : ((uint32_t)gc_env.r[0] < 0x800 ? -1 : 1); // Logical compare with immediate
Translated ble .L_80015A64 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80015A64; // ble .L_80015A64']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x11']
Translated li r5 0x11 to: ['gc_env.r[5] = 0x11; // li r5, 0x11']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015B5C to: goto L_80015B5C;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_800152FC to: fn_800152FC();
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015AEC to: if (gc_env.cr[0] != 0) goto L_80015AEC;
Processing opcode: lbz, operands: ['r0', '0x9(r1)']
Translated lbz r0 0x9(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x9); // lbz r0, 0x9(r1)']
Processing opcode: lhz, operands: ['r3', '0xa(r1)']
Translated lhz r3 0xa(r1) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xa); // lhz r3, 0xa(r1)']
Translated rlwinm. r0 r0 0 28 28 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x8; // rlwinm r0, r0, 0, 28, 28', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Processing opcode: stw, operands: ['r3', '0x10(r1)']
Translated stw r3 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[3]); // stw r3, 0x10(r1)']
Translated beq .L_80015A98 to: if (gc_env.cr[0] == 0) goto L_80015A98;
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated b .L_80015A9C to: goto L_80015A9C;
Processing opcode: li, operands: ['r6', '0x1']
Translated li r6 0x1 to: ['gc_env.r[6] = 0x1; // li r6, 0x1']
Processing opcode: lwz, operands: ['r4', '0xc(r1)']
Translated lwz r4 0xc(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r4, 0xC(r1)']
Processing opcode: addi, operands: ['r3', 'r1', '0x14']
Translated addi r3 r1 0x14 to: ['gc_env.r[3] = gc_env.r[1] + 20; // addi r3, r1, 0x14']
Processing opcode: addi, operands: ['r5', 'r1', '0x10']
Translated addi r5 r1 0x10 to: ['gc_env.r[5] = gc_env.r[1] + 16; // addi r5, r1, 0x10']
Processing opcode: li, operands: ['r7', '0x1']
Translated li r7 0x1 to: ['gc_env.r[7] = 0x1; // li r7, 0x1']
Translated bl fn_80016D8C to: fn_80016D8C();
Processing opcode: lwz, operands: ['r0', '0x10(r1)']
Translated lwz r0 0x10(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r0, 0x10(r1)']
Translated mr. r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Processing opcode: sth, operands: ['r0', '0xa(r1)']
Translated sth r0 0xa(r1) to: ['gc_mem_write16(gc_env.ram, gc_env.r[1] + 0xA, gc_env.r[0]); // sth r0, 0xA(r1)']
Translated bne .L_80015AD0 to: if (gc_env.cr[0] != 0) goto L_80015AD0;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lhz, operands: ['r4', '0xa(r1)']
Translated lhz r4 0xa(r1) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xa); // lhz r4, 0xa(r1)']
Translated bl fn_80014BA0 to: fn_80014BA0();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015AEC to: if (gc_env.cr[0] != 0) goto L_80015AEC;
Processing opcode: lwz, operands: ['r5', '0x10(r1)']
Translated lwz r5 0x10(r1) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r5, 0x10(r1)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x14']
Translated addi r4 r1 0x14 to: ['gc_env.r[4] = gc_env.r[1] + 20; // addi r4, r1, 0x14']
Translated bl fn_80014A70 to: fn_80014A70();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80015B54 to: if (gc_env.cr[0] == 0) goto L_80015B54;
Processing opcode: subi, operands: ['r0', 'r30', '0x700']
Translated subi r0 r30 0x700 to: ['gc_env.r[0] = gc_env.r[30] - 1792; // subi r0, r30, 1792']
Translated cmplwi r0 0x6 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x6) ? 0 : ((uint32_t)gc_env.r[0] < 0x6 ? -1 : 1); // Logical compare with immediate
Translated bgt .L_80015B40 to: ['if (gc_env.cr[0] & 0x4) goto L_80015B40; // bgt .L_80015B40']
Translated lis r3 jumptable_8001BA60@ha to: ['gc_env.r[3] = ((uint32_t)&jumptable_8001BA60 >> 16) & 0xFFFF; // lis r3, jumptable_8001BA60@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'jumptable_8001BA60@l']
Translated addi r3 r3 jumptable_8001BA60@l to: ['gc_env.r[3] = (uint32_t)&jumptable_8001BA60; // lis + addi jumptable_8001BA60 (completing pattern)']
Translated slwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] << 2; // slwi r0, r0, 2']
Translated lwzx r0 r3 r0 to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + gc_env.r[0]); // lwzx r0, r3, r0']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bctr  to: ['return gc_env.ctr; // bctr']
Processing opcode: li, operands: ['r5', '0x15']
Translated li r5 0x15 to: ['gc_env.r[5] = 0x15; // li r5, 0x15']
Translated b .L_80015B44 to: goto L_80015B44;
Processing opcode: li, operands: ['r5', '0x13']
Translated li r5 0x13 to: ['gc_env.r[5] = 0x13; // li r5, 0x13']
Translated b .L_80015B44 to: goto L_80015B44;
Processing opcode: li, operands: ['r5', '0x21']
Translated li r5 0x21 to: ['gc_env.r[5] = 0x21; // li r5, 0x21']
Translated b .L_80015B44 to: goto L_80015B44;
Processing opcode: li, operands: ['r5', '0x22']
Translated li r5 0x22 to: ['gc_env.r[5] = 0x22; // li r5, 0x22']
Translated b .L_80015B44 to: goto L_80015B44;
Processing opcode: li, operands: ['r5', '0x20']
Translated li r5 0x20 to: ['gc_env.r[5] = 0x20; // li r5, 0x20']
Translated b .L_80015B44 to: goto L_80015B44;
Processing opcode: li, operands: ['r5', '0x3']
Translated li r5 0x3 to: ['gc_env.r[5] = 0x3; // li r5, 0x3']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015B5C to: goto L_80015B5C;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_80015394 to: fn_80015394();
Processing opcode: lwz, operands: ['r31', '0x81c(r1)']
Translated lwz r31 0x81c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x81C); // lwz r31, 0x81C(r1)']
Processing opcode: lwz, operands: ['r30', '0x818(r1)']
Translated lwz r30 0x818(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x818); // lwz r30, 0x818(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x820']
Translated addi r1 r1 0x820 to: ['gc_env.r[1] += 2080; // addi r1, r1, 0x820']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x820(r1)']
Translated stwu r1 -0x820(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x820, gc_env.r[1]); // stwu r1, -0x820(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x820;']
Processing opcode: stw, operands: ['r31', '0x81c(r1)']
Translated stw r31 0x81c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x81C, gc_env.r[31]); // stw r31, 0x81C(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: stw, operands: ['r30', '0x818(r1)']
Translated stw r30 0x818(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x818, gc_env.r[30]); // stw r30, 0x818(r1)']
Processing opcode: lwz, operands: ['r0', '0x8(r3)']
Translated lwz r0 0x8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r0, 0x8(r3)']
Translated cmplwi r0 0x8 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x8) ? 0 : ((uint32_t)gc_env.r[0] < 0x8 ? -1 : 1); // Logical compare with immediate
Translated bgt .L_80015BAC to: ['if (gc_env.cr[0] & 0x4) goto L_80015BAC; // bgt .L_80015BAC']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x2']
Translated li r5 0x2 to: ['gc_env.r[5] = 0x2; // li r5, 0x2']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015D58 to: goto L_80015D58;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl fn_80014A40 to: fn_80014A40();
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated bl fn_80014DC4 to: fn_80014DC4();
Translated mr. r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated bne .L_80015BDC to: if (gc_env.cr[0] != 0) goto L_80015BDC;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x9']
Translated addi r4 r1 0x9 to: ['gc_env.r[4] = gc_env.r[1] + 9; // addi r4, r1, 0x9']
Translated bl fn_80014DC4 to: fn_80014DC4();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015BF4 to: if (gc_env.cr[0] != 0) goto L_80015BF4;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0xa']
Translated addi r4 r1 0xa to: ['gc_env.r[4] = gc_env.r[1] + 10; // addi r4, r1, 0xa']
Translated bl fn_80014DE8 to: fn_80014DE8();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015C0C to: if (gc_env.cr[0] != 0) goto L_80015C0C;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0xc']
Translated addi r4 r1 0xc to: ['gc_env.r[4] = gc_env.r[1] + 12; // addi r4, r1, 0xc']
Translated bl fn_80014E68 to: fn_80014E68();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Processing opcode: lbz, operands: ['r0', '0x9(r1)']
Translated lbz r0 0x9(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x9); // lbz r0, 0x9(r1)']
Translated rlwinm. r0 r0 0 30 30 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x2; // rlwinm r0, r0, 0, 30, 30', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_80015C2C to: if (gc_env.cr[0] == 0) goto L_80015C2C;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x12']
Translated li r5 0x12 to: ['gc_env.r[5] = 0x12; // li r5, 0x12']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015D58 to: goto L_80015D58;
Processing opcode: lhz, operands: ['r4', '0xa(r1)']
Translated lhz r4 0xa(r1) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xa); // lhz r4, 0xa(r1)']
Processing opcode: lwz, operands: ['r3', '0x8(r31)']
Translated lwz r3 0x8(r31) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r3, 0x8(r31)']
Processing opcode: addi, operands: ['r0', 'r4', '0x8']
Translated addi r0 r4 0x8 to: ['gc_env.r[0] = gc_env.r[4] + 8; // addi r0, r4, 0x8']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bne .L_80015C48 to: if (gc_env.cr[0] != 0) goto L_80015C48;
Translated cmplwi r4 0x800 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x800) ? 0 : ((uint32_t)gc_env.r[4] < 0x800 ? -1 : 1); // Logical compare with immediate
Translated ble .L_80015C5C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80015C5C; // ble .L_80015C5C']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x11']
Translated li r5 0x11 to: ['gc_env.r[5] = 0x11; // li r5, 0x11']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015D58 to: goto L_80015D58;
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015CB8 to: if (gc_env.cr[0] != 0) goto L_80015CB8;
Processing opcode: stw, operands: ['r4', '0x10(r1)']
Translated stw r4 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[4]); // stw r4, 0x10(r1)']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x14']
Translated addi r4 r1 0x14 to: ['gc_env.r[4] = gc_env.r[1] + 20; // addi r4, r1, 0x14']
Processing opcode: lwz, operands: ['r5', '0x10(r1)']
Translated lwz r5 0x10(r1) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r5, 0x10(r1)']
Translated bl fn_80014B14 to: fn_80014B14();
Translated mr. r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated bne .L_80015CB0 to: if (gc_env.cr[0] != 0) goto L_80015CB0;
Processing opcode: lbz, operands: ['r0', '0x9(r1)']
Translated lbz r0 0x9(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x9); // lbz r0, 0x9(r1)']
Translated rlwinm. r0 r0 0 28 28 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x8; // rlwinm r0, r0, 0, 28, 28', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_80015C94 to: if (gc_env.cr[0] == 0) goto L_80015C94;
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated b .L_80015C98 to: goto L_80015C98;
Processing opcode: li, operands: ['r6', '0x1']
Translated li r6 0x1 to: ['gc_env.r[6] = 0x1; // li r6, 0x1']
Processing opcode: lwz, operands: ['r4', '0xc(r1)']
Translated lwz r4 0xc(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r4, 0xC(r1)']
Processing opcode: addi, operands: ['r3', 'r1', '0x14']
Translated addi r3 r1 0x14 to: ['gc_env.r[3] = gc_env.r[1] + 20; // addi r3, r1, 0x14']
Processing opcode: addi, operands: ['r5', 'r1', '0x10']
Translated addi r5 r1 0x10 to: ['gc_env.r[5] = gc_env.r[1] + 16; // addi r5, r1, 0x10']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bl fn_80016D8C to: fn_80016D8C();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Processing opcode: lwz, operands: ['r0', '0x10(r1)']
Translated lwz r0 0x10(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r0, 0x10(r1)']
Processing opcode: sth, operands: ['r0', '0xa(r1)']
Translated sth r0 0xa(r1) to: ['gc_mem_write16(gc_env.ram, gc_env.r[1] + 0xA, gc_env.r[0]); // sth r0, 0xA(r1)']
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015CD0 to: if (gc_env.cr[0] != 0) goto L_80015CD0;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_800152FC to: fn_800152FC();
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015CE8 to: if (gc_env.cr[0] != 0) goto L_80015CE8;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lhz, operands: ['r4', '0xa(r1)']
Translated lhz r4 0xa(r1) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xa); // lhz r4, 0xa(r1)']
Translated bl fn_80014BA0 to: fn_80014BA0();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80015D50 to: if (gc_env.cr[0] == 0) goto L_80015D50;
Processing opcode: subi, operands: ['r0', 'r30', '0x700']
Translated subi r0 r30 0x700 to: ['gc_env.r[0] = gc_env.r[30] - 1792; // subi r0, r30, 1792']
Translated cmplwi r0 0x6 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x6) ? 0 : ((uint32_t)gc_env.r[0] < 0x6 ? -1 : 1); // Logical compare with immediate
Translated bgt .L_80015D3C to: ['if (gc_env.cr[0] & 0x4) goto L_80015D3C; // bgt .L_80015D3C']
Translated lis r3 jumptable_8001BA7C@ha to: ['gc_env.r[3] = ((uint32_t)&jumptable_8001BA7C >> 16) & 0xFFFF; // lis r3, jumptable_8001BA7C@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'jumptable_8001BA7C@l']
Translated addi r3 r3 jumptable_8001BA7C@l to: ['gc_env.r[3] = (uint32_t)&jumptable_8001BA7C; // lis + addi jumptable_8001BA7C (completing pattern)']
Translated slwi r0 r0 2 to: ['gc_env.r[0] = gc_env.r[0] << 2; // slwi r0, r0, 2']
Translated lwzx r0 r3 r0 to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + gc_env.r[0]); // lwzx r0, r3, r0']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bctr  to: ['return gc_env.ctr; // bctr']
Processing opcode: li, operands: ['r5', '0x15']
Translated li r5 0x15 to: ['gc_env.r[5] = 0x15; // li r5, 0x15']
Translated b .L_80015D40 to: goto L_80015D40;
Processing opcode: li, operands: ['r5', '0x13']
Translated li r5 0x13 to: ['gc_env.r[5] = 0x13; // li r5, 0x13']
Translated b .L_80015D40 to: goto L_80015D40;
Processing opcode: li, operands: ['r5', '0x21']
Translated li r5 0x21 to: ['gc_env.r[5] = 0x21; // li r5, 0x21']
Translated b .L_80015D40 to: goto L_80015D40;
Processing opcode: li, operands: ['r5', '0x22']
Translated li r5 0x22 to: ['gc_env.r[5] = 0x22; // li r5, 0x22']
Translated b .L_80015D40 to: goto L_80015D40;
Processing opcode: li, operands: ['r5', '0x20']
Translated li r5 0x20 to: ['gc_env.r[5] = 0x20; // li r5, 0x20']
Translated b .L_80015D40 to: goto L_80015D40;
Processing opcode: li, operands: ['r5', '0x3']
Translated li r5 0x3 to: ['gc_env.r[5] = 0x3; // li r5, 0x3']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015D58 to: goto L_80015D58;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_80015394 to: fn_80015394();
Processing opcode: lwz, operands: ['r31', '0x81c(r1)']
Translated lwz r31 0x81c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x81C); // lwz r31, 0x81C(r1)']
Processing opcode: lwz, operands: ['r30', '0x818(r1)']
Translated lwz r30 0x818(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x818); // lwz r30, 0x818(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x820']
Translated addi r1 r1 0x820 to: ['gc_env.r[1] += 2080; // addi r1, r1, 0x820']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: lwz, operands: ['r0', '0x8(r3)']
Translated lwz r0 0x8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r0, 0x8(r3)']
Translated cmplwi r0 0x6 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x6) ? 0 : ((uint32_t)gc_env.r[0] < 0x6 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80015DA4 to: if (gc_env.cr[0] == 0) goto L_80015DA4;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x2']
Translated li r5 0x2 to: ['gc_env.r[5] = 0x2; // li r5, 0x2']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015F60 to: goto L_80015F60;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl fn_80014A40 to: fn_80014A40();
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated bl fn_80014DC4 to: fn_80014DC4();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015DD0 to: if (gc_env.cr[0] != 0) goto L_80015DD0;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x9']
Translated addi r4 r1 0x9 to: ['gc_env.r[4] = gc_env.r[1] + 9; // addi r4, r1, 0x9']
Translated bl fn_80014DC4 to: fn_80014DC4();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015DE4 to: if (gc_env.cr[0] != 0) goto L_80015DE4;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0xa']
Translated addi r4 r1 0xa to: ['gc_env.r[4] = gc_env.r[1] + 10; // addi r4, r1, 0xa']
Translated bl fn_80014DE8 to: fn_80014DE8();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015DF8 to: if (gc_env.cr[0] != 0) goto L_80015DF8;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0xc']
Translated addi r4 r1 0xc to: ['gc_env.r[4] = gc_env.r[1] + 12; // addi r4, r1, 0xc']
Translated bl fn_80014DE8 to: fn_80014DE8();
Processing opcode: lhz, operands: ['r4', '0xa(r1)']
Translated lhz r4 0xa(r1) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xa); // lhz r4, 0xa(r1)']
Processing opcode: lhz, operands: ['r0', '0xc(r1)']
Translated lhz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xc); // lhz r0, 0xc(r1)']
Translated cmplw r4 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated ble .L_80015E1C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80015E1C; // ble .L_80015E1C']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x14']
Translated li r5 0x14 to: ['gc_env.r[5] = 0x14; // li r5, 0x14']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015F60 to: goto L_80015F60;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015E34 to: if (gc_env.cr[0] != 0) goto L_80015E34;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_800152FC to: fn_800152FC();
Processing opcode: lbz, operands: ['r0', '0x9(r1)']
Translated lbz r0 0x9(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x9); // lbz r0, 0x9(r1)']
Translated clrlwi r0 r0 29 to: ['gc_env.r[0] = gc_env.r[0] & 0x7; // clrlwi r0, r0, 29']
Translated cmpwi r0 0x2 to: gc_env.cr[0] = (gc_env.r[0] == 0x2) ? 0 : (gc_env.r[0] < 0x2 ? -1 : 1); // Compare with immediate
Translated beq .L_80015E9C to: if (gc_env.cr[0] == 0) goto L_80015E9C;
Translated bge .L_80015E58 to: if (gc_env.cr[0] >= 0) goto L_80015E58;
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80015E64 to: if (gc_env.cr[0] == 0) goto L_80015E64;
Translated bge .L_80015E80 to: if (gc_env.cr[0] >= 0) goto L_80015E80;
Translated b .L_80015ED4 to: goto L_80015ED4;
Translated cmpwi r0 0x4 to: gc_env.cr[0] = (gc_env.r[0] == 0x4) ? 0 : (gc_env.r[0] < 0x4 ? -1 : 1); // Compare with immediate
Translated bge .L_80015ED4 to: if (gc_env.cr[0] >= 0) goto L_80015ED4;
Translated b .L_80015EB8 to: goto L_80015EB8;
Processing opcode: lhz, operands: ['r3', '0xa(r1)']
Translated lhz r3 0xa(r1) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xa); // lhz r3, 0xa(r1)']
Translated mr r5 r31 to: gc_env.r[5] = gc_env.r[31]; // Move register
Processing opcode: lhz, operands: ['r4', '0xc(r1)']
Translated lhz r4 0xc(r1) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xc); // lhz r4, 0xc(r1)']
Processing opcode: addi, operands: ['r6', 'r1', '0x10']
Translated addi r6 r1 0x10 to: ['gc_env.r[6] = gc_env.r[1] + 16; // addi r6, r1, 0x10']
Processing opcode: li, operands: ['r7', '0x1']
Translated li r7 0x1 to: ['gc_env.r[7] = 0x1; // li r7, 0x1']
Translated bl fn_80016F3C to: fn_80016F3C();
Translated b .L_80015ED8 to: goto L_80015ED8;
Processing opcode: lhz, operands: ['r3', '0xa(r1)']
Translated lhz r3 0xa(r1) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xa); // lhz r3, 0xa(r1)']
Translated mr r5 r31 to: gc_env.r[5] = gc_env.r[31]; // Move register
Processing opcode: lhz, operands: ['r4', '0xc(r1)']
Translated lhz r4 0xc(r1) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xc); // lhz r4, 0xc(r1)']
Processing opcode: addi, operands: ['r6', 'r1', '0x10']
Translated addi r6 r1 0x10 to: ['gc_env.r[6] = gc_env.r[1] + 16; // addi r6, r1, 0x10']
Processing opcode: li, operands: ['r7', '0x1']
Translated li r7 0x1 to: ['gc_env.r[7] = 0x1; // li r7, 0x1']
Translated bl fn_80017038 to: fn_80017038();
Translated b .L_80015ED8 to: goto L_80015ED8;
Processing opcode: lhz, operands: ['r3', '0xa(r1)']
Translated lhz r3 0xa(r1) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xa); // lhz r3, 0xa(r1)']
Translated mr r5 r31 to: gc_env.r[5] = gc_env.r[31]; // Move register
Processing opcode: lhz, operands: ['r4', '0xc(r1)']
Translated lhz r4 0xc(r1) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xc); // lhz r4, 0xc(r1)']
Processing opcode: addi, operands: ['r6', 'r1', '0x10']
Translated addi r6 r1 0x10 to: ['gc_env.r[6] = gc_env.r[1] + 16; // addi r6, r1, 0x10']
Processing opcode: li, operands: ['r7', '0x1']
Translated li r7 0x1 to: ['gc_env.r[7] = 0x1; // li r7, 0x1']
Translated bl fn_80017180 to: fn_80017180();
Translated b .L_80015ED8 to: goto L_80015ED8;
Processing opcode: lhz, operands: ['r3', '0xa(r1)']
Translated lhz r3 0xa(r1) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xa); // lhz r3, 0xa(r1)']
Translated mr r5 r31 to: gc_env.r[5] = gc_env.r[31]; // Move register
Processing opcode: lhz, operands: ['r4', '0xc(r1)']
Translated lhz r4 0xc(r1) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xc); // lhz r4, 0xc(r1)']
Processing opcode: addi, operands: ['r6', 'r1', '0x10']
Translated addi r6 r1 0x10 to: ['gc_env.r[6] = gc_env.r[1] + 16; // addi r6, r1, 0x10']
Processing opcode: li, operands: ['r7', '0x1']
Translated li r7 0x1 to: ['gc_env.r[7] = 0x1; // li r7, 0x1']
Translated bl fn_800172F8 to: fn_800172F8();
Translated b .L_80015ED8 to: goto L_80015ED8;
Processing opcode: li, operands: ['r3', '0x703']
Translated li r3 0x703 to: ['gc_env.r[3] = 0x703; // li r3, 0x703']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80015F58 to: if (gc_env.cr[0] == 0) goto L_80015F58;
Translated cmpwi r3 0x704 to: gc_env.cr[0] = (gc_env.r[3] == 0x704) ? 0 : (gc_env.r[3] < 0x704 ? -1 : 1); // Compare with immediate
Translated beq .L_80015F2C to: if (gc_env.cr[0] == 0) goto L_80015F2C;
Translated bge .L_80015F04 to: if (gc_env.cr[0] >= 0) goto L_80015F04;
Translated cmpwi r3 0x702 to: gc_env.cr[0] = (gc_env.r[3] == 0x702) ? 0 : (gc_env.r[3] < 0x702 ? -1 : 1); // Compare with immediate
Translated beq .L_80015F24 to: if (gc_env.cr[0] == 0) goto L_80015F24;
Translated bge .L_80015F14 to: if (gc_env.cr[0] >= 0) goto L_80015F14;
Translated cmpwi r3 0x701 to: gc_env.cr[0] = (gc_env.r[3] == 0x701) ? 0 : (gc_env.r[3] < 0x701 ? -1 : 1); // Compare with immediate
Translated bge .L_80015F1C to: if (gc_env.cr[0] >= 0) goto L_80015F1C;
Translated b .L_80015F44 to: goto L_80015F44;
Translated cmpwi r3 0x706 to: gc_env.cr[0] = (gc_env.r[3] == 0x706) ? 0 : (gc_env.r[3] < 0x706 ? -1 : 1); // Compare with immediate
Translated beq .L_80015F3C to: if (gc_env.cr[0] == 0) goto L_80015F3C;
Translated bge .L_80015F44 to: if (gc_env.cr[0] >= 0) goto L_80015F44;
Translated b .L_80015F34 to: goto L_80015F34;
Processing opcode: li, operands: ['r5', '0x12']
Translated li r5 0x12 to: ['gc_env.r[5] = 0x12; // li r5, 0x12']
Translated b .L_80015F48 to: goto L_80015F48;
Processing opcode: li, operands: ['r5', '0x14']
Translated li r5 0x14 to: ['gc_env.r[5] = 0x14; // li r5, 0x14']
Translated b .L_80015F48 to: goto L_80015F48;
Processing opcode: li, operands: ['r5', '0x15']
Translated li r5 0x15 to: ['gc_env.r[5] = 0x15; // li r5, 0x15']
Translated b .L_80015F48 to: goto L_80015F48;
Processing opcode: li, operands: ['r5', '0x21']
Translated li r5 0x21 to: ['gc_env.r[5] = 0x21; // li r5, 0x21']
Translated b .L_80015F48 to: goto L_80015F48;
Processing opcode: li, operands: ['r5', '0x22']
Translated li r5 0x22 to: ['gc_env.r[5] = 0x22; // li r5, 0x22']
Translated b .L_80015F48 to: goto L_80015F48;
Processing opcode: li, operands: ['r5', '0x20']
Translated li r5 0x20 to: ['gc_env.r[5] = 0x20; // li r5, 0x20']
Translated b .L_80015F48 to: goto L_80015F48;
Processing opcode: li, operands: ['r5', '0x3']
Translated li r5 0x3 to: ['gc_env.r[5] = 0x3; // li r5, 0x3']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80015F60 to: goto L_80015F60;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl fn_80015394 to: fn_80015394();
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Processing opcode: lwz, operands: ['r0', '0x8(r3)']
Translated lwz r0 0x8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r0, 0x8(r3)']
Translated cmplwi r0 0x6 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x6) ? 0 : ((uint32_t)gc_env.r[0] < 0x6 ? -1 : 1); // Logical compare with immediate
Translated bgt .L_80015FAC to: ['if (gc_env.cr[0] & 0x4) goto L_80015FAC; // bgt .L_80015FAC']
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x2']
Translated li r5 0x2 to: ['gc_env.r[5] = 0x2; // li r5, 0x2']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80016164 to: goto L_80016164;
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl fn_80014A40 to: fn_80014A40();
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated bl fn_80014DC4 to: fn_80014DC4();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015FD8 to: if (gc_env.cr[0] != 0) goto L_80015FD8;
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x9']
Translated addi r4 r1 0x9 to: ['gc_env.r[4] = gc_env.r[1] + 9; // addi r4, r1, 0x9']
Translated bl fn_80014DC4 to: fn_80014DC4();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80015FEC to: if (gc_env.cr[0] != 0) goto L_80015FEC;
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0xa']
Translated addi r4 r1 0xa to: ['gc_env.r[4] = gc_env.r[1] + 10; // addi r4, r1, 0xa']
Translated bl fn_80014DE8 to: fn_80014DE8();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016000 to: if (gc_env.cr[0] != 0) goto L_80016000;
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0xc']
Translated addi r4 r1 0xc to: ['gc_env.r[4] = gc_env.r[1] + 12; // addi r4, r1, 0xc']
Translated bl fn_80014DE8 to: fn_80014DE8();
Processing opcode: lhz, operands: ['r3', '0xa(r1)']
Translated lhz r3 0xa(r1) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xa); // lhz r3, 0xa(r1)']
Processing opcode: lhz, operands: ['r4', '0xc(r1)']
Translated lhz r4 0xc(r1) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xc); // lhz r4, 0xc(r1)']
Translated cmplw r3 r4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[4]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[4] ? -1 : 1); // Logical compare word
Translated ble .L_80016024 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80016024; // ble .L_80016024']
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x14']
Translated li r5 0x14 to: ['gc_env.r[5] = 0x14; // li r5, 0x14']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80016164 to: goto L_80016164;
Processing opcode: lbz, operands: ['r0', '0x9(r1)']
Translated lbz r0 0x9(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x9); // lbz r0, 0x9(r1)']
Translated cmpwi r0 0x2 to: gc_env.cr[0] = (gc_env.r[0] == 0x2) ? 0 : (gc_env.r[0] < 0x2 ? -1 : 1); // Compare with immediate
Translated beq .L_80016080 to: if (gc_env.cr[0] == 0) goto L_80016080;
Translated bge .L_80016044 to: if (gc_env.cr[0] >= 0) goto L_80016044;
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80016050 to: if (gc_env.cr[0] == 0) goto L_80016050;
Translated bge .L_80016068 to: if (gc_env.cr[0] >= 0) goto L_80016068;
Translated b .L_800160B0 to: goto L_800160B0;
Translated cmpwi r0 0x4 to: gc_env.cr[0] = (gc_env.r[0] == 0x4) ? 0 : (gc_env.r[0] < 0x4 ? -1 : 1); // Compare with immediate
Translated bge .L_800160B0 to: if (gc_env.cr[0] >= 0) goto L_800160B0;
Translated b .L_80016098 to: goto L_80016098;
Processing opcode: addi, operands: ['r6', 'r1', '0x10']
Translated addi r6 r1 0x10 to: ['gc_env.r[6] = gc_env.r[1] + 16; // addi r6, r1, 0x10']
Processing opcode: addi, operands: ['r5', 'r30', '0x0']
Translated addi r5 r30 0x0 to: ['gc_env.r[5] = gc_env.r[30] + 0; // addi r5, r30, 0x0']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bl fn_80016F3C to: fn_80016F3C();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated b .L_800160B4 to: goto L_800160B4;
Processing opcode: addi, operands: ['r6', 'r1', '0x10']
Translated addi r6 r1 0x10 to: ['gc_env.r[6] = gc_env.r[1] + 16; // addi r6, r1, 0x10']
Processing opcode: addi, operands: ['r5', 'r30', '0x0']
Translated addi r5 r30 0x0 to: ['gc_env.r[5] = gc_env.r[30] + 0; // addi r5, r30, 0x0']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bl fn_80017038 to: fn_80017038();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated b .L_800160B4 to: goto L_800160B4;
Processing opcode: addi, operands: ['r6', 'r1', '0x10']
Translated addi r6 r1 0x10 to: ['gc_env.r[6] = gc_env.r[1] + 16; // addi r6, r1, 0x10']
Processing opcode: addi, operands: ['r5', 'r30', '0x0']
Translated addi r5 r30 0x0 to: ['gc_env.r[5] = gc_env.r[30] + 0; // addi r5, r30, 0x0']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bl fn_80017180 to: fn_80017180();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated b .L_800160B4 to: goto L_800160B4;
Processing opcode: addi, operands: ['r6', 'r1', '0x10']
Translated addi r6 r1 0x10 to: ['gc_env.r[6] = gc_env.r[1] + 16; // addi r6, r1, 0x10']
Processing opcode: addi, operands: ['r5', 'r30', '0x0']
Translated addi r5 r30 0x0 to: ['gc_env.r[5] = gc_env.r[30] + 0; // addi r5, r30, 0x0']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Translated bl fn_800172F8 to: fn_800172F8();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated b .L_800160B4 to: goto L_800160B4;
Processing opcode: li, operands: ['r31', '0x703']
Translated li r31 0x703 to: ['gc_env.r[31] = 0x703; // li r31, 0x703']
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800160CC to: if (gc_env.cr[0] != 0) goto L_800160CC;
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_800152FC to: fn_800152FC();
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8001615C to: if (gc_env.cr[0] == 0) goto L_8001615C;
Translated cmpwi r31 0x703 to: gc_env.cr[0] = (gc_env.r[31] == 0x703) ? 0 : (gc_env.r[31] < 0x703 ? -1 : 1); // Compare with immediate
Translated beq .L_80016110 to: if (gc_env.cr[0] == 0) goto L_80016110;
Translated bge .L_800160F8 to: if (gc_env.cr[0] >= 0) goto L_800160F8;
Translated cmpwi r31 0x701 to: gc_env.cr[0] = (gc_env.r[31] == 0x701) ? 0 : (gc_env.r[31] < 0x701 ? -1 : 1); // Compare with immediate
Translated beq .L_80016118 to: if (gc_env.cr[0] == 0) goto L_80016118;
Translated bge .L_80016128 to: if (gc_env.cr[0] >= 0) goto L_80016128;
Translated cmpwi r31 0x302 to: gc_env.cr[0] = (gc_env.r[31] == 0x302) ? 0 : (gc_env.r[31] < 0x302 ? -1 : 1); // Compare with immediate
Translated beq .L_80016120 to: if (gc_env.cr[0] == 0) goto L_80016120;
Translated b .L_80016148 to: goto L_80016148;
Translated cmpwi r31 0x706 to: gc_env.cr[0] = (gc_env.r[31] == 0x706) ? 0 : (gc_env.r[31] < 0x706 ? -1 : 1); // Compare with immediate
Translated beq .L_80016140 to: if (gc_env.cr[0] == 0) goto L_80016140;
Translated bge .L_80016148 to: if (gc_env.cr[0] >= 0) goto L_80016148;
Translated cmpwi r31 0x705 to: gc_env.cr[0] = (gc_env.r[31] == 0x705) ? 0 : (gc_env.r[31] < 0x705 ? -1 : 1); // Compare with immediate
Translated bge .L_80016138 to: if (gc_env.cr[0] >= 0) goto L_80016138;
Translated b .L_80016130 to: goto L_80016130;
Processing opcode: li, operands: ['r5', '0x12']
Translated li r5 0x12 to: ['gc_env.r[5] = 0x12; // li r5, 0x12']
Translated b .L_8001614C to: goto L_8001614C;
Processing opcode: li, operands: ['r5', '0x14']
Translated li r5 0x14 to: ['gc_env.r[5] = 0x14; // li r5, 0x14']
Translated b .L_8001614C to: goto L_8001614C;
Processing opcode: li, operands: ['r5', '0x2']
Translated li r5 0x2 to: ['gc_env.r[5] = 0x2; // li r5, 0x2']
Translated b .L_8001614C to: goto L_8001614C;
Processing opcode: li, operands: ['r5', '0x15']
Translated li r5 0x15 to: ['gc_env.r[5] = 0x15; // li r5, 0x15']
Translated b .L_8001614C to: goto L_8001614C;
Processing opcode: li, operands: ['r5', '0x21']
Translated li r5 0x21 to: ['gc_env.r[5] = 0x21; // li r5, 0x21']
Translated b .L_8001614C to: goto L_8001614C;
Processing opcode: li, operands: ['r5', '0x22']
Translated li r5 0x22 to: ['gc_env.r[5] = 0x22; // li r5, 0x22']
Translated b .L_8001614C to: goto L_8001614C;
Processing opcode: li, operands: ['r5', '0x20']
Translated li r5 0x20 to: ['gc_env.r[5] = 0x20; // li r5, 0x20']
Translated b .L_8001614C to: goto L_8001614C;
Processing opcode: li, operands: ['r5', '0x3']
Translated li r5 0x3 to: ['gc_env.r[5] = 0x3; // li r5, 0x3']
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80016164 to: goto L_80016164;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl fn_80015394 to: fn_80015394();
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Processing opcode: lwz, operands: ['r0', '0x8(r3)']
Translated lwz r0 0x8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r0, 0x8(r3)']
Translated cmplwi r0 0xa to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xa) ? 0 : ((uint32_t)gc_env.r[0] < 0xa ? -1 : 1); // Logical compare with immediate
Translated beq .L_800161B4 to: if (gc_env.cr[0] == 0) goto L_800161B4;
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x2']
Translated li r5 0x2 to: ['gc_env.r[5] = 0x2; // li r5, 0x2']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_8001629C to: goto L_8001629C;
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl fn_80014A40 to: fn_80014A40();
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated bl fn_80014DC4 to: fn_80014DC4();
Translated mr. r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bne .L_800161E4 to: if (gc_env.cr[0] != 0) goto L_800161E4;
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x9']
Translated addi r4 r1 0x9 to: ['gc_env.r[4] = gc_env.r[1] + 9; // addi r4, r1, 0x9']
Translated bl fn_80014DC4 to: fn_80014DC4();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800161FC to: if (gc_env.cr[0] != 0) goto L_800161FC;
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0xc']
Translated addi r4 r1 0xc to: ['gc_env.r[4] = gc_env.r[1] + 12; // addi r4, r1, 0xc']
Translated bl fn_80014E68 to: fn_80014E68();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016214 to: if (gc_env.cr[0] != 0) goto L_80016214;
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x10']
Translated addi r4 r1 0x10 to: ['gc_env.r[4] = gc_env.r[1] + 16; // addi r4, r1, 0x10']
Translated bl fn_80014E68 to: fn_80014E68();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: lwz, operands: ['r4', '0xc(r1)']
Translated lwz r4 0xc(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r4, 0xC(r1)']
Processing opcode: lwz, operands: ['r5', '0x10(r1)']
Translated lwz r5 0x10(r1) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r5, 0x10(r1)']
Translated cmplw r4 r5 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[5]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[5] ? -1 : 1); // Logical compare word
Translated ble .L_80016238 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80016238; // ble .L_80016238']
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x13']
Translated li r5 0x13 to: ['gc_env.r[5] = 0x13; // li r5, 0x13']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_8001629C to: goto L_8001629C;
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8001624C to: if (gc_env.cr[0] != 0) goto L_8001624C;
Processing opcode: lbz, operands: ['r3', '0x9(r1)']
Translated lbz r3 0x9(r1) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x9); // lbz r3, 0x9(r1)']
Translated bl fn_80017E40 to: fn_80017E40();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016264 to: if (gc_env.cr[0] != 0) goto L_80016264;
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_800152FC to: fn_800152FC();
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80016294 to: if (gc_env.cr[0] == 0) goto L_80016294;
Translated cmpwi r31 0x703 to: gc_env.cr[0] = (gc_env.r[31] == 0x703) ? 0 : (gc_env.r[31] < 0x703 ? -1 : 1); // Compare with immediate
Translated beq .L_80016278 to: if (gc_env.cr[0] == 0) goto L_80016278;
Translated b .L_80016280 to: goto L_80016280;
Processing opcode: li, operands: ['r5', '0x12']
Translated li r5 0x12 to: ['gc_env.r[5] = 0x12; // li r5, 0x12']
Translated b .L_80016284 to: goto L_80016284;
Processing opcode: li, operands: ['r5', '0x3']
Translated li r5 0x3 to: ['gc_env.r[5] = 0x3; // li r5, 0x3']
Processing opcode: addi, operands: ['r3', 'r30', '0x0']
Translated addi r3 r30 0x0 to: ['gc_env.r[3] = gc_env.r[30] + 0; // addi r3, r30, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_8001629C to: goto L_8001629C;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl fn_80015394 to: fn_80015394();
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl fn_80017E7C to: fn_80017E7C();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800162E8 to: if (gc_env.cr[0] != 0) goto L_800162E8;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x16']
Translated li r5 0x16 to: ['gc_env.r[5] = 0x16; // li r5, 0x16']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80016304 to: goto L_80016304;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_800153E4 to: fn_800153E4();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016304 to: if (gc_env.cr[0] != 0) goto L_80016304;
Translated bl fn_80018B3C to: fn_80018B3C();
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: lwz, operands: ['r0', '0x8(r3)']
Translated lwz r0 0x8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r0, 0x8(r3)']
Translated cmplwi r0 0x3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x3) ? 0 : ((uint32_t)gc_env.r[0] < 0x3 ? -1 : 1); // Logical compare with immediate
Translated bge .L_8001634C to: if (gc_env.cr[0] >= 0) goto L_8001634C;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x2']
Translated li r5 0x2 to: ['gc_env.r[5] = 0x2; // li r5, 0x2']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80016508 to: goto L_80016508;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl fn_80014A40 to: fn_80014A40();
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated bl fn_80014DC4 to: fn_80014DC4();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016378 to: if (gc_env.cr[0] != 0) goto L_80016378;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x9']
Translated addi r4 r1 0x9 to: ['gc_env.r[4] = gc_env.r[1] + 9; // addi r4, r1, 0x9']
Translated bl fn_80014DC4 to: fn_80014DC4();
Processing opcode: lbz, operands: ['r0', '0x9(r1)']
Translated lbz r0 0x9(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x9); // lbz r0, 0x9(r1)']
Translated cmpwi r0 0x10 to: gc_env.cr[0] = (gc_env.r[0] == 0x10) ? 0 : (gc_env.r[0] < 0x10 ? -1 : 1); // Compare with immediate
Translated beq .L_800163AC to: if (gc_env.cr[0] == 0) goto L_800163AC;
Translated bge .L_800163A0 to: if (gc_env.cr[0] >= 0) goto L_800163A0;
Translated cmpwi r0 0x1 to: gc_env.cr[0] = (gc_env.r[0] == 0x1) ? 0 : (gc_env.r[0] < 0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_800163E0 to: if (gc_env.cr[0] == 0) goto L_800163E0;
Translated bge .L_80016458 to: if (gc_env.cr[0] >= 0) goto L_80016458;
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bge .L_800163AC to: if (gc_env.cr[0] >= 0) goto L_800163AC;
Translated b .L_80016458 to: goto L_80016458;
Translated cmpwi r0 0x12 to: gc_env.cr[0] = (gc_env.r[0] == 0x12) ? 0 : (gc_env.r[0] < 0x12 ? -1 : 1); // Compare with immediate
Translated bge .L_80016458 to: if (gc_env.cr[0] >= 0) goto L_80016458;
Translated b .L_800163E0 to: goto L_800163E0;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800163C0 to: if (gc_env.cr[0] != 0) goto L_800163C0;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0xa']
Translated addi r4 r1 0xa to: ['gc_env.r[4] = gc_env.r[1] + 10; // addi r4, r1, 0xa']
Translated bl fn_80014DC4 to: fn_80014DC4();
Processing opcode: lbz, operands: ['r0', '0xa(r1)']
Translated lbz r0 0xa(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xa); // lbz r0, 0xa(r1)']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bge .L_8001646C to: if (gc_env.cr[0] >= 0) goto L_8001646C;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x11']
Translated li r5 0x11 to: ['gc_env.r[5] = 0x11; // li r5, 0x11']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80016508 to: goto L_80016508;
Processing opcode: lwz, operands: ['r0', '0x8(r31)']
Translated lwz r0 0x8(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8); // lwz r0, 0x8(r31)']
Translated cmplwi r0 0xa to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xa) ? 0 : ((uint32_t)gc_env.r[0] < 0xa ? -1 : 1); // Logical compare with immediate
Translated beq .L_80016400 to: if (gc_env.cr[0] == 0) goto L_80016400;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x2']
Translated li r5 0x2 to: ['gc_env.r[5] = 0x2; // li r5, 0x2']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80016508 to: goto L_80016508;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016414 to: if (gc_env.cr[0] != 0) goto L_80016414;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0xc']
Translated addi r4 r1 0xc to: ['gc_env.r[4] = gc_env.r[1] + 12; // addi r4, r1, 0xc']
Translated bl fn_80014E68 to: fn_80014E68();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016428 to: if (gc_env.cr[0] != 0) goto L_80016428;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x10']
Translated addi r4 r1 0x10 to: ['gc_env.r[4] = gc_env.r[1] + 16; // addi r4, r1, 0x10']
Translated bl fn_80014E68 to: fn_80014E68();
Translated bl fn_80017D40 to: fn_80017D40();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated blt .L_80016444 to: ['if (gc_env.cr[0] & 0x8) goto L_80016444; // blt .L_80016444']
Processing opcode: lwz, operands: ['r0', '0x10(r1)']
Translated lwz r0 0x10(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r0, 0x10(r1)']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated ble .L_8001646C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8001646C; // ble .L_8001646C']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x11']
Translated li r5 0x11 to: ['gc_env.r[5] = 0x11; // li r5, 0x11']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80016508 to: goto L_80016508;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x12']
Translated li r5 0x12 to: ['gc_env.r[5] = 0x12; // li r5, 0x12']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80016508 to: goto L_80016508;
Translated bl fn_80017E7C to: fn_80017E7C();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8001648C to: if (gc_env.cr[0] != 0) goto L_8001648C;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x16']
Translated li r5 0x16 to: ['gc_env.r[5] = 0x16; // li r5, 0x16']
Translated bl fn_800153E4 to: fn_800153E4();
Translated b .L_80016508 to: goto L_80016508;
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_800153E4 to: fn_800153E4();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016508 to: if (gc_env.cr[0] != 0) goto L_80016508;
Processing opcode: lbz, operands: ['r0', '0x9(r1)']
Translated lbz r0 0x9(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x9); // lbz r0, 0x9(r1)']
Translated cmpwi r0 0x10 to: gc_env.cr[0] = (gc_env.r[0] == 0x10) ? 0 : (gc_env.r[0] < 0x10 ? -1 : 1); // Compare with immediate
Translated beq .L_800164D8 to: if (gc_env.cr[0] == 0) goto L_800164D8;
Translated bge .L_800164CC to: if (gc_env.cr[0] >= 0) goto L_800164CC;
Translated cmpwi r0 0x1 to: gc_env.cr[0] = (gc_env.r[0] == 0x1) ? 0 : (gc_env.r[0] < 0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_800164F0 to: if (gc_env.cr[0] == 0) goto L_800164F0;
Translated bge .L_80016508 to: if (gc_env.cr[0] >= 0) goto L_80016508;
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bge .L_800164D8 to: if (gc_env.cr[0] >= 0) goto L_800164D8;
Translated b .L_80016508 to: goto L_80016508;
Translated cmpwi r0 0x12 to: gc_env.cr[0] = (gc_env.r[0] == 0x12) ? 0 : (gc_env.r[0] < 0x12 ? -1 : 1); // Compare with immediate
Translated bge .L_80016508 to: if (gc_env.cr[0] >= 0) goto L_80016508;
Translated b .L_800164F0 to: goto L_800164F0;
Translated subfic r0 r0 0x10 to: ['gc_env.r[0] = 16 - gc_env.r[0]; // subfic r0, r0, 16', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (16 >= gc_env.r[0] ? 0x20000000 : 0);']
Processing opcode: lbz, operands: ['r3', '0xa(r1)']
Translated lbz r3 0xa(r1) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0xa); // lbz r3, 0xa(r1)']
Translated cntlzw r0 r0 to: ['uint32_t val = gc_env.r[0]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r0']
Translated srwi r4 r0 5 to: ['gc_env.r[4] = gc_env.r[0] >> 5; // srwi r4, r0, 5']
Translated bl fn_80017CB4 to: fn_80017CB4();
Translated b .L_80016508 to: goto L_80016508;
Translated subfic r0 r0 0x11 to: ['gc_env.r[0] = 17 - gc_env.r[0]; // subfic r0, r0, 17', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (17 >= gc_env.r[0] ? 0x20000000 : 0);']
Processing opcode: lwz, operands: ['r3', '0xc(r1)']
Translated lwz r3 0xc(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r3, 0xC(r1)']
Translated cntlzw r0 r0 to: ['uint32_t val = gc_env.r[0]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r0']
Processing opcode: lwz, operands: ['r4', '0x10(r1)']
Translated lwz r4 0x10(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r4, 0x10(r1)']
Translated srwi r5 r0 5 to: ['gc_env.r[5] = gc_env.r[0] >> 5; // srwi r5, r0, 5']
Translated bl fn_80017CF8 to: fn_80017CF8();
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl fn_80017E9C to: fn_80017E9C();
Translated cmpwi r3 0x704 to: gc_env.cr[0] = (gc_env.r[3] == 0x704) ? 0 : (gc_env.r[3] < 0x704 ? -1 : 1); // Compare with immediate
Translated beq .L_80016564 to: if (gc_env.cr[0] == 0) goto L_80016564;
Translated bge .L_8001654C to: if (gc_env.cr[0] >= 0) goto L_8001654C;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8001655C to: if (gc_env.cr[0] == 0) goto L_8001655C;
Translated b .L_8001657C to: goto L_8001657C;
Translated cmpwi r3 0x706 to: gc_env.cr[0] = (gc_env.r[3] == 0x706) ? 0 : (gc_env.r[3] < 0x706 ? -1 : 1); // Compare with immediate
Translated beq .L_80016574 to: if (gc_env.cr[0] == 0) goto L_80016574;
Translated bge .L_8001657C to: if (gc_env.cr[0] >= 0) goto L_8001657C;
Translated b .L_8001656C to: goto L_8001656C;
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated b .L_80016580 to: goto L_80016580;
Processing opcode: li, operands: ['r5', '0x21']
Translated li r5 0x21 to: ['gc_env.r[5] = 0x21; // li r5, 0x21']
Translated b .L_80016580 to: goto L_80016580;
Processing opcode: li, operands: ['r5', '0x22']
Translated li r5 0x22 to: ['gc_env.r[5] = 0x22; // li r5, 0x22']
Translated b .L_80016580 to: goto L_80016580;
Processing opcode: li, operands: ['r5', '0x20']
Translated li r5 0x20 to: ['gc_env.r[5] = 0x20; // li r5, 0x20']
Translated b .L_80016580 to: goto L_80016580;
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: addi, operands: ['r3', 'r31', '0x0']
Translated addi r3 r31 0x0 to: ['gc_env.r[3] = gc_env.r[31] + 0; // addi r3, r31, 0x0']
Processing opcode: li, operands: ['r4', '0x80']
Translated li r4 0x80 to: ['gc_env.r[4] = 0x80; // li r4, 0x80']
Translated bl fn_800153E4 to: fn_800153E4();
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x48(r1)']
Translated stwu r1 -0x48(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x48, gc_env.r[1]); // stwu r1, -0x48(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x48;']
Translated stmw r21 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[21]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[22]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[23]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[24]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[25]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[26]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[27]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[28]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[29]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x40, gc_env.r[30]); // stmw r21, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x44, gc_env.r[31]); // stmw r21, 0x1C(r1)']
Translated mr. r27 r4 to: gc_env.r[27] = gc_env.r[4]; // Move register
Processing opcode: addi, operands: ['r25', 'r3', '0x0']
Translated addi r25 r3 0x0 to: ['gc_env.r[25] = gc_env.r[3] + 0; // addi r25, r3, 0x0']
Processing opcode: addi, operands: ['r23', 'r5', '0x0']
Translated addi r23 r5 0x0 to: ['gc_env.r[23] = gc_env.r[5] + 0; // addi r23, r5, 0x0']
Processing opcode: addi, operands: ['r26', 'r6', '0x0']
Translated addi r26 r6 0x0 to: ['gc_env.r[26] = gc_env.r[6] + 0; // addi r26, r6, 0x0']
Processing opcode: addi, operands: ['r22', 'r7', '0x0']
Translated addi r22 r7 0x0 to: ['gc_env.r[22] = gc_env.r[7] + 0; // addi r22, r7, 0x0']
Processing opcode: addi, operands: ['r30', 'r8', '0x0']
Translated addi r30 r8 0x0 to: ['gc_env.r[30] = gc_env.r[8] + 0; // addi r30, r8, 0x0']
Translated beq .L_800165D8 to: if (gc_env.cr[0] == 0) goto L_800165D8;
Processing opcode: lwz, operands: ['r0', '0x0(r23)']
Translated lwz r0 0x0(r23) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[23]); // lwz r0, (r23)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800165E0 to: if (gc_env.cr[0] != 0) goto L_800165E0;
Processing opcode: li, operands: ['r3', '0x2']
Translated li r3 0x2 to: ['gc_env.r[3] = 0x2; // li r3, 0x2']
Translated b .L_80016864 to: goto L_80016864;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', '0x0(r26)']
Translated stb r0 0x0(r26) to: ['gc_mem_write8(gc_env.ram, gc_env.r[26], gc_env.r[0]); // stb r0, (r26)']
Processing opcode: li, operands: ['r24', '0x0']
Translated li r24 0x0 to: ['gc_env.r[24] = 0x0; // li r24, 0x0']
Processing opcode: li, operands: ['r28', '0x0']
Translated li r28 0x0 to: ['gc_env.r[28] = 0x0; // li r28, 0x0']
Processing opcode: li, operands: ['r21', '0x0']
Translated li r21 0x0 to: ['gc_env.r[21] = 0x0; // li r21, 0x0']
Translated b .L_80016834 to: goto L_80016834;
Processing opcode: subf, operands: ['r0', 'r28', 'r3']
Translated subf r0 r28 r3 to: ['gc_env.r[0] = gc_env.r[3] - gc_env.r[28]; // subf r0, r28, r3']
Translated cmplwi r0 0x800 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x800) ? 0 : ((uint32_t)gc_env.r[0] < 0x800 ? -1 : 1); // Logical compare with immediate
Translated ble .L_8001660C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8001660C; // ble .L_8001660C']
Processing opcode: li, operands: ['r31', '0x800']
Translated li r31 0x800 to: ['gc_env.r[31] = 0x800; // li r31, 0x800']
Translated b .L_80016610 to: goto L_80016610;
Translated mr r31 r0 to: gc_env.r[31] = gc_env.r[0]; // Move register
Processing opcode: addi, operands: ['r3', 'r1', '0xc']
Translated addi r3 r1 0xc to: ['gc_env.r[3] = gc_env.r[1] + 12; // addi r3, r1, 0xc']
Processing opcode: addi, operands: ['r4', 'r1', '0x10']
Translated addi r4 r1 0x10 to: ['gc_env.r[4] = gc_env.r[1] + 16; // addi r4, r1, 0x10']
Translated bl fn_800148D0 to: fn_800148D0();
Translated mr. r21 r3 to: gc_env.r[21] = gc_env.r[3]; // Move register
Translated bne .L_80016678 to: if (gc_env.cr[0] != 0) goto L_80016678;
Processing opcode: lwz, operands: ['r7', '0x10(r1)']
Translated lwz r7 0x10(r1) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r7, 0x10(r1)']
Processing opcode: lwz, operands: ['r0', '0xc(r7)']
Translated lwz r0 0xc(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0xC); // lwz r0, 0xC(r7)']
Translated cmplwi r0 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x880) ? 0 : ((uint32_t)gc_env.r[0] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated blt .L_8001663C to: ['if (gc_env.cr[0] & 0x8) goto L_8001663C; // blt .L_8001663C']
Processing opcode: li, operands: ['r5', '0x301']
Translated li r5 0x301 to: ['gc_env.r[5] = 0x301; // li r5, 0x301']
Translated b .L_80016674 to: goto L_80016674;
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8001664C to: if (gc_env.cr[0] == 0) goto L_8001664C;
Processing opcode: li, operands: ['r6', '0xd1']
Translated li r6 0xd1 to: ['gc_env.r[6] = 0xd1; // li r6, 0xd1']
Translated b .L_80016650 to: goto L_80016650;
Processing opcode: li, operands: ['r6', '0xd0']
Translated li r6 0xd0 to: ['gc_env.r[6] = 0xd0; // li r6, 0xd0']
Processing opcode: lwz, operands: ['r4', '0xc(r7)']
Translated lwz r4 0xc(r7) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0xC); // lwz r4, 0xC(r7)']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: addi, operands: ['r3', 'r4', '0x1']
Translated addi r3 r4 0x1 to: ['gc_env.r[3] = gc_env.r[4] + 1; // addi r3, r4, 0x1']
Processing opcode: addi, operands: ['r0', 'r4', '0x10']
Translated addi r0 r4 0x10 to: ['gc_env.r[0] = gc_env.r[4] + 16; // addi r0, r4, 0x10']
Processing opcode: stw, operands: ['r3', '0xc(r7)']
Translated stw r3 0xc(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7] + 0xC, gc_env.r[3]); // stw r3, 0xC(r7)']
Translated stbx r6 r7 r0 to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + gc_env.r[0], gc_env.r[6]); // stbx r6, r7, r0']
Processing opcode: lwz, operands: ['r3', '0x8(r7)']
Translated lwz r3 0x8(r7) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x8); // lwz r3, 0x8(r7)']
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r7)']
Translated stw r0 0x8(r7) to: ['gc_mem_write32(gc_env.ram, gc_env.r[7] + 0x8, gc_env.r[0]); // stw r0, 0x8(r7)']
Translated mr r21 r5 to: gc_env.r[21] = gc_env.r[5]; // Move register
Translated cmpwi r21 0x0 to: gc_env.cr[0] = (gc_env.r[21] == 0x0) ? 0 : (gc_env.r[21] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016690 to: if (gc_env.cr[0] != 0) goto L_80016690;
Processing opcode: lwz, operands: ['r3', '0x10(r1)']
Translated lwz r3 0x10(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r3, 0x10(r1)']
Translated mr r4 r25 to: gc_env.r[4] = gc_env.r[25]; // Move register
Translated bl fn_80014BF4 to: fn_80014BF4();
Translated mr r21 r3 to: gc_env.r[21] = gc_env.r[3]; // Move register
Translated cmpwi r21 0x0 to: gc_env.cr[0] = (gc_env.r[21] == 0x0) ? 0 : (gc_env.r[21] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800166A8 to: if (gc_env.cr[0] != 0) goto L_800166A8;
Processing opcode: lwz, operands: ['r3', '0x10(r1)']
Translated lwz r3 0x10(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r3, 0x10(r1)']
Translated clrlwi r4 r31 16 to: ['gc_env.r[4] = gc_env.r[31] & 0xFFFF; // clrlwi r4, r31, 16']
Translated bl fn_80014BA0 to: fn_80014BA0();
Translated mr r21 r3 to: gc_env.r[21] = gc_env.r[3]; // Move register
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800166CC to: if (gc_env.cr[0] != 0) goto L_800166CC;
Translated cmpwi r21 0x0 to: gc_env.cr[0] = (gc_env.r[21] == 0x0) ? 0 : (gc_env.r[21] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800166CC to: if (gc_env.cr[0] != 0) goto L_800166CC;
Processing opcode: lwz, operands: ['r3', '0x10(r1)']
Translated lwz r3 0x10(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r3, 0x10(r1)']
Processing opcode: addi, operands: ['r5', 'r31', '0x0']
Translated addi r5 r31 0x0 to: ['gc_env.r[5] = gc_env.r[31] + 0; // addi r5, r31, 0x0']
Processing opcode: add, operands: ['r4', 'r27', 'r28']
Translated add r4 r27 r28 to: ['gc_env.r[4] = gc_env.r[27] + gc_env.r[28]; // add r4, r27, r28']
Translated bl fn_80014CE0 to: fn_80014CE0();
Translated mr r21 r3 to: gc_env.r[21] = gc_env.r[3]; // Move register
Translated cmpwi r21 0x0 to: gc_env.cr[0] = (gc_env.r[21] == 0x0) ? 0 : (gc_env.r[21] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016828 to: if (gc_env.cr[0] != 0) goto L_80016828;
Translated cmpwi r22 0x0 to: gc_env.cr[0] = (gc_env.r[22] == 0x0) ? 0 : (gc_env.r[22] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8001681C to: if (gc_env.cr[0] == 0) goto L_8001681C;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: sth, operands: ['r0', '0xa(r1)']
Translated sth r0 0xa(r1) to: ['gc_mem_write16(gc_env.ram, gc_env.r[1] + 0xA, gc_env.r[0]); // sth r0, 0xA(r1)']
Processing opcode: stb, operands: ['r0', '0x8(r1)']
Translated stb r0 0x8(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stb r0, 0x8(r1)']
Translated beq .L_800166FC to: if (gc_env.cr[0] == 0) goto L_800166FC;
Translated cmplwi r25 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[25] == 0x0) ? 0 : ((uint32_t)gc_env.r[25] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800166FC to: if (gc_env.cr[0] != 0) goto L_800166FC;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8001670C to: if (gc_env.cr[0] == 0) goto L_8001670C;
Processing opcode: li, operands: ['r5', '0x5']
Translated li r5 0x5 to: ['gc_env.r[5] = 0x5; // li r5, 0x5']
Translated b .L_80016710 to: goto L_80016710;
Processing opcode: li, operands: ['r5', '0x5']
Translated li r5 0x5 to: ['gc_env.r[5] = 0x5; // li r5, 0x5']
Translated cntlzw r0 r0 to: ['uint32_t val = gc_env.r[0]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r0']
Processing opcode: lwz, operands: ['r3', '0x10(r1)']
Translated lwz r3 0x10(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r3, 0x10(r1)']
Translated srwi r7 r0 5 to: ['gc_env.r[7] = gc_env.r[0] >> 5; // srwi r7, r0, 5']
Processing opcode: addi, operands: ['r4', 'r1', '0x14']
Translated addi r4 r1 0x14 to: ['gc_env.r[4] = gc_env.r[1] + 20; // addi r4, r1, 0x14']
Processing opcode: li, operands: ['r6', '0x3']
Translated li r6 0x3 to: ['gc_env.r[6] = 0x3; // li r6, 0x3']
Translated bl fn_80016878 to: fn_80016878();
Translated mr. r21 r3 to: gc_env.r[21] = gc_env.r[3]; // Move register
Translated bne .L_80016744 to: if (gc_env.cr[0] != 0) goto L_80016744;
Processing opcode: lwz, operands: ['r3', '0x14(r1)']
Translated lwz r3 0x14(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r3, 0x14(r1)']
Translated bl fn_8001496C to: fn_8001496C();
Processing opcode: addi, operands: ['r29', 'r3', '0x0']
Translated addi r29 r3 0x0 to: ['gc_env.r[29] = gc_env.r[3] + 0; // addi r29, r3, 0x0']
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Translated bl fn_80014A40 to: fn_80014A40();
Translated cmpwi r21 0x0 to: gc_env.cr[0] = (gc_env.r[21] == 0x0) ? 0 : (gc_env.r[21] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8001675C to: if (gc_env.cr[0] != 0) goto L_8001675C;
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated bl fn_80014DC4 to: fn_80014DC4();
Translated mr r21 r3 to: gc_env.r[21] = gc_env.r[3]; // Move register
Translated cmpwi r21 0x0 to: gc_env.cr[0] = (gc_env.r[21] == 0x0) ? 0 : (gc_env.r[21] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016774 to: if (gc_env.cr[0] != 0) goto L_80016774;
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0xa']
Translated addi r4 r1 0xa to: ['gc_env.r[4] = gc_env.r[1] + 10; // addi r4, r1, 0xa']
Translated bl fn_80014DE8 to: fn_80014DE8();
Translated mr r21 r3 to: gc_env.r[21] = gc_env.r[3]; // Move register
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800167D0 to: if (gc_env.cr[0] == 0) goto L_800167D0;
Translated cmpwi r21 0x0 to: gc_env.cr[0] = (gc_env.r[21] == 0x0) ? 0 : (gc_env.r[21] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800167D0 to: if (gc_env.cr[0] != 0) goto L_800167D0;
Processing opcode: lhz, operands: ['r3', '0xa(r1)']
Translated lhz r3 0xa(r1) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xa); // lhz r3, 0xa(r1)']
Processing opcode: lwz, operands: ['r4', '0x8(r29)']
Translated lwz r4 0x8(r29) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x8); // lwz r4, 0x8(r29)']
Processing opcode: addi, operands: ['r0', 'r3', '0x5']
Translated addi r0 r3 0x5 to: ['gc_env.r[0] = gc_env.r[3] + 5; // addi r0, r3, 0x5']
Translated cmplw r4 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated beq .L_800167B4 to: if (gc_env.cr[0] == 0) goto L_800167B4;
Processing opcode: lbz, operands: ['r0', '0x8(r1)']
Translated lbz r0 0x8(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x8); // lbz r0, 0x8(r1)']
Processing opcode: subi, operands: ['r3', 'r4', '0x5']
Translated subi r3 r4 0x5 to: ['gc_env.r[3] = gc_env.r[4] - 5; // subi r3, r4, 5']
Processing opcode: sth, operands: ['r3', '0xa(r1)']
Translated sth r3 0xa(r1) to: ['gc_mem_write16(gc_env.ram, gc_env.r[1] + 0xA, gc_env.r[3]); // sth r3, 0xA(r1)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800167B4 to: if (gc_env.cr[0] != 0) goto L_800167B4;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stb, operands: ['r0', '0x8(r1)']
Translated stb r0 0x8(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stb r0, 0x8(r1)']
Processing opcode: lhz, operands: ['r5', '0xa(r1)']
Translated lhz r5 0xa(r1) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xa); // lhz r5, 0xa(r1)']
Translated cmplw r5 r31 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == (uint32_t)gc_env.r[31]) ? 0 : ((uint32_t)gc_env.r[5] < (uint32_t)gc_env.r[31] ? -1 : 1); // Logical compare word
Translated bgt .L_800167D0 to: ['if (gc_env.cr[0] & 0x4) goto L_800167D0; // bgt .L_800167D0']
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Processing opcode: add, operands: ['r4', 'r27', 'r28']
Translated add r4 r27 r28 to: ['gc_env.r[4] = gc_env.r[27] + gc_env.r[28]; // add r4, r27, r28']
Translated bl fn_80014FA8 to: fn_80014FA8();
Translated mr r21 r3 to: gc_env.r[21] = gc_env.r[3]; // Move register
Processing opcode: lhz, operands: ['r3', '0xa(r1)']
Translated lhz r3 0xa(r1) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[1] + 0xa); // lhz r3, 0xa(r1)']
Translated cmplw r3 r31 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[31]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[31] ? -1 : 1); // Logical compare word
Translated beq .L_80016808 to: if (gc_env.cr[0] == 0) goto L_80016808;
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800167EC to: if (gc_env.cr[0] == 0) goto L_800167EC;
Translated cmplw r3 r31 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[31]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[31] ? -1 : 1); // Logical compare word
Translated blt .L_80016800 to: ['if (gc_env.cr[0] & 0x8) goto L_80016800; // blt .L_80016800']
Processing opcode: lbz, operands: ['r0', '0x8(r1)']
Translated lbz r0 0x8(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x8); // lbz r0, 0x8(r1)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80016800 to: if (gc_env.cr[0] != 0) goto L_80016800;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stb, operands: ['r0', '0x8(r1)']
Translated stb r0 0x8(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stb r0, 0x8(r1)']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Processing opcode: li, operands: ['r24', '0x1']
Translated li r24 0x1 to: ['gc_env.r[24] = 0x1; // li r24, 0x1']
Processing opcode: lbz, operands: ['r0', '0x8(r1)']
Translated lbz r0 0x8(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x8); // lbz r0, 0x8(r1)']
Processing opcode: stb, operands: ['r0', '0x0(r26)']
Translated stb r0 0x0(r26) to: ['gc_mem_write8(gc_env.ram, gc_env.r[26], gc_env.r[0]); // stb r0, (r26)']
Processing opcode: lwz, operands: ['r3', '0x14(r1)']
Translated lwz r3 0x14(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r3, 0x14(r1)']
Translated bl fn_80014998 to: fn_80014998();
Translated b .L_80016828 to: goto L_80016828;
Processing opcode: lwz, operands: ['r3', '0x10(r1)']
Translated lwz r3 0x10(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r3, 0x10(r1)']
Translated bl fn_80014828 to: fn_80014828();
Translated mr r21 r3 to: gc_env.r[21] = gc_env.r[3]; // Move register
Processing opcode: lwz, operands: ['r3', '0xc(r1)']
Translated lwz r3 0xc(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r3, 0xC(r1)']
Translated bl fn_80014998 to: fn_80014998();
Processing opcode: add, operands: ['r28', 'r28', 'r31']
Translated add r28 r28 r31 to: ['gc_env.r[28] = gc_env.r[28] + gc_env.r[31]; // add r28, r28, r31']
Translated cmpwi r24 0x0 to: gc_env.cr[0] = (gc_env.r[24] == 0x0) ? 0 : (gc_env.r[24] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8001685C to: if (gc_env.cr[0] != 0) goto L_8001685C;
Processing opcode: lwz, operands: ['r3', '0x0(r23)']
Translated lwz r3 0x0(r23) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[23]); // lwz r3, (r23)']
Translated cmplw r28 r3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[28] == (uint32_t)gc_env.r[3]) ? 0 : ((uint32_t)gc_env.r[28] < (uint32_t)gc_env.r[3] ? -1 : 1); // Logical compare word
Translated bge .L_8001685C to: if (gc_env.cr[0] >= 0) goto L_8001685C;
Translated cmpwi r21 0x0 to: gc_env.cr[0] = (gc_env.r[21] == 0x0) ? 0 : (gc_env.r[21] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8001685C to: if (gc_env.cr[0] != 0) goto L_8001685C;
Processing opcode: lbz, operands: ['r0', '0x0(r26)']
Translated lbz r0 0x0(r26) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[26] + 0x0); // lbz r0, 0x0(r26)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800165F8 to: if (gc_env.cr[0] == 0) goto L_800165F8;
Processing opcode: stw, operands: ['r28', '0x0(r23)']
Translated stw r28 0x0(r23) to: ['gc_mem_write32(gc_env.ram, gc_env.r[23], gc_env.r[28]); // stw r28, (r23)']
Translated mr r3 r21 to: gc_env.r[3] = gc_env.r[21]; // Move register
Translated lmw r21 0x1c(r1) to: ['gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r21, 0x1C(r1)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r21, 0x1C(r1)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r21, 0x1C(r1)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r21, 0x1C(r1)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r21, 0x1C(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r21, 0x1C(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r21, 0x1C(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x38); // lmw r21, 0x1C(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lmw r21, 0x1C(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x40); // lmw r21, 0x1C(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lmw r21, 0x1C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x48']
Translated addi r1 r1 0x48 to: ['gc_env.r[1] += 72; // addi r1, r1, 0x48']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stwu, operands: ['r1', '-0x38(r1)']
Translated stwu r1 -0x38(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x38, gc_env.r[1]); // stwu r1, -0x38(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x38;']
Translated stmw r22 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[22]); // stmw r22, 0x10(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[23]); // stmw r22, 0x10(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[24]); // stmw r22, 0x10(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[25]); // stmw r22, 0x10(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[26]); // stmw r22, 0x10(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[27]); // stmw r22, 0x10(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[28]); // stmw r22, 0x10(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[29]); // stmw r22, 0x10(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[30]); // stmw r22, 0x10(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[31]); // stmw r22, 0x10(r1)']
Processing opcode: addi, operands: ['r23', 'r4', '0x0']
Translated addi r23 r4 0x0 to: ['gc_env.r[23] = gc_env.r[4] + 0; // addi r23, r4, 0x0']
Translated lis r4 0x4c5 to: ['gc_env.r[4] = 1221 << 16; // lis r4, 0x4c5']
Processing opcode: addi, operands: ['r27', 'r6', '0x1']
Translated addi r27 r6 0x1 to: ['gc_env.r[27] = gc_env.r[6] + 1; // addi r27, r6, 0x1']
Processing opcode: addi, operands: ['r22', 'r3', '0x0']
Translated addi r22 r3 0x0 to: ['gc_env.r[22] = gc_env.r[3] + 0; // addi r22, r3, 0x0']
Processing opcode: subi, operands: ['r31', 'r4', '0x4c14']
Translated subi r31 r4 0x4c14 to: ['gc_env.r[31] = gc_env.r[4] - 19476; // subi r31, r4, 19476']
Processing opcode: addi, operands: ['r24', 'r5', '0x0']
Translated addi r24 r5 0x0 to: ['gc_env.r[24] = gc_env.r[5] + 0; // addi r24, r5, 0x0']
Processing opcode: addi, operands: ['r25', 'r7', '0x0']
Translated addi r25 r7 0x0 to: ['gc_env.r[25] = gc_env.r[7] + 0; // addi r25, r7, 0x0']
Processing opcode: li, operands: ['r30', '0x0']
Translated li r30 0x0 to: ['gc_env.r[30] = 0x0; // li r30, 0x0']
Processing opcode: li, operands: ['r26', '0x1']
Translated li r26 0x1 to: ['gc_env.r[26] = 0x1; // li r26, 0x1']
Processing opcode: stw, operands: ['r0', '0x0(r23)']
Translated stw r0 0x0(r23) to: ['gc_mem_write32(gc_env.ram, gc_env.r[23], gc_env.r[0]); // stw r0, (r23)']
Translated b .L_800169D8 to: goto L_800169D8;
Translated mr r3 r22 to: gc_env.r[3] = gc_env.r[22]; // Move register
Translated bl fn_80014828 to: fn_80014828();
Translated mr. r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated bne .L_800169D4 to: if (gc_env.cr[0] != 0) goto L_800169D4;
Translated cmpwi r25 0x0 to: gc_env.cr[0] = (gc_env.r[25] == 0x0) ? 0 : (gc_env.r[25] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800168D4 to: if (gc_env.cr[0] == 0) goto L_800168D4;
Processing opcode: li, operands: ['r28', '0x0']
Translated li r28 0x0 to: ['gc_env.r[28] = 0x0; // li r28, 0x0']
Translated bl fn_80015098 to: fn_80015098();
Processing opcode: stw, operands: ['r3', '0x0(r23)']
Translated stw r3 0x0(r23) to: ['gc_mem_write32(gc_env.ram, gc_env.r[23], gc_env.r[3]); // stw r3, (r23)']
Processing opcode: lwz, operands: ['r3', '0x0(r23)']
Translated lwz r3 0x0(r23) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[23]); // lwz r3, (r23)']
Translated cmpwi r3 -0x1 to: gc_env.cr[0] = (gc_env.r[3] == -0x1) ? 0 : (gc_env.r[3] < -0x1 ? -1 : 1); // Compare with immediate
Translated bne .L_800168FC to: if (gc_env.cr[0] != 0) goto L_800168FC;
Translated cmpwi r25 0x0 to: gc_env.cr[0] = (gc_env.r[25] == 0x0) ? 0 : (gc_env.r[25] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800168D4 to: if (gc_env.cr[0] == 0) goto L_800168D4;
Processing opcode: addi, operands: ['r28', 'r28', '0x1']
Translated addi r28 r28 0x1 to: ['gc_env.r[28] += 1; // addi r28, r28, 0x1']
Translated cmplw r28 r31 to: gc_env.cr[0] = ((uint32_t)gc_env.r[28] == (uint32_t)gc_env.r[31]) ? 0 : ((uint32_t)gc_env.r[28] < (uint32_t)gc_env.r[31] ? -1 : 1); // Logical compare word
Translated blt .L_800168D4 to: ['if (gc_env.cr[0] & 0x8) goto L_800168D4; // blt .L_800168D4']
Translated cmpwi r3 -0x1 to: gc_env.cr[0] = (gc_env.r[3] == -0x1) ? 0 : (gc_env.r[3] < -0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_8001694C to: if (gc_env.cr[0] == 0) goto L_8001694C;
Processing opcode: li, operands: ['r26', '0x0']
Translated li r26 0x0 to: ['gc_env.r[26] = 0x0; // li r26, 0x0']
Translated bl fn_8001496C to: fn_8001496C();
Processing opcode: addi, operands: ['r29', 'r3', '0x0']
Translated addi r29 r3 0x0 to: ['gc_env.r[29] = gc_env.r[3] + 0; // addi r29, r3, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated bl fn_80014A40 to: fn_80014A40();
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated bl fn_80014DC4 to: fn_80014DC4();
Translated mr. r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated bne .L_8001694C to: if (gc_env.cr[0] != 0) goto L_8001694C;
Processing opcode: lbz, operands: ['r0', '0x8(r1)']
Translated lbz r0 0x8(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x8); // lbz r0, 0x8(r1)']
Translated cmplwi r0 0x80 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x80) ? 0 : ((uint32_t)gc_env.r[0] < 0x80 ? -1 : 1); // Logical compare with immediate
Translated bge .L_8001694C to: if (gc_env.cr[0] >= 0) goto L_8001694C;
Processing opcode: lwz, operands: ['r3', '0x0(r23)']
Translated lwz r3 0x0(r23) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[23]); // lwz r3, (r23)']
Translated bl fn_800151E4 to: fn_800151E4();
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r0', '0x0(r23)']
Translated stw r0 0x0(r23) to: ['gc_mem_write32(gc_env.ram, gc_env.r[23], gc_env.r[0]); // stw r0, (r23)']
Translated b .L_800168D4 to: goto L_800168D4;
Processing opcode: lwz, operands: ['r0', '0x0(r23)']
Translated lwz r0 0x0(r23) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[23]); // lwz r0, (r23)']
Translated cmpwi r0 -0x1 to: gc_env.cr[0] = (gc_env.r[0] == -0x1) ? 0 : (gc_env.r[0] < -0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_800169D4 to: if (gc_env.cr[0] == 0) goto L_800169D4;
Processing opcode: lwz, operands: ['r0', '0x8(r29)']
Translated lwz r0 0x8(r29) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[29] + 0x8); // lwz r0, 0x8(r29)']
Translated cmplw r0 r24 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[24]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[24] ? -1 : 1); // Logical compare word
Translated bge .L_80016968 to: if (gc_env.cr[0] >= 0) goto L_80016968;
Processing opcode: li, operands: ['r26', '0x1']
Translated li r26 0x1 to: ['gc_env.r[26] = 0x1; // li r26, 0x1']
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016988 to: if (gc_env.cr[0] != 0) goto L_80016988;
Translated cmpwi r26 0x0 to: gc_env.cr[0] = (gc_env.r[26] == 0x0) ? 0 : (gc_env.r[26] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016988 to: if (gc_env.cr[0] != 0) goto L_80016988;
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Processing opcode: addi, operands: ['r4', 'r1', '0x9']
Translated addi r4 r1 0x9 to: ['gc_env.r[4] = gc_env.r[1] + 9; // addi r4, r1, 0x9']
Translated bl fn_80014DC4 to: fn_80014DC4();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800169B4 to: if (gc_env.cr[0] != 0) goto L_800169B4;
Translated cmpwi r26 0x0 to: gc_env.cr[0] = (gc_env.r[26] == 0x0) ? 0 : (gc_env.r[26] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800169B4 to: if (gc_env.cr[0] != 0) goto L_800169B4;
Processing opcode: lbz, operands: ['r0', '0x8(r1)']
Translated lbz r0 0x8(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x8); // lbz r0, 0x8(r1)']
Translated cmplwi r0 0x80 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x80) ? 0 : ((uint32_t)gc_env.r[0] < 0x80 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800169B0 to: if (gc_env.cr[0] != 0) goto L_800169B0;
Processing opcode: lbz, operands: ['r0', '0x9(r1)']
Translated lbz r0 0x9(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x9); // lbz r0, 0x9(r1)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800169B4 to: if (gc_env.cr[0] == 0) goto L_800169B4;
Processing opcode: li, operands: ['r26', '0x1']
Translated li r26 0x1 to: ['gc_env.r[26] = 0x1; // li r26, 0x1']
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800169C4 to: if (gc_env.cr[0] != 0) goto L_800169C4;
Translated cmpwi r26 0x0 to: gc_env.cr[0] = (gc_env.r[26] == 0x0) ? 0 : (gc_env.r[26] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800169D4 to: if (gc_env.cr[0] == 0) goto L_800169D4;
Processing opcode: lwz, operands: ['r3', '0x0(r23)']
Translated lwz r3 0x0(r23) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[23]); // lwz r3, (r23)']
Translated bl fn_80014998 to: fn_80014998();
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: stw, operands: ['r0', '0x0(r23)']
Translated stw r0 0x0(r23) to: ['gc_mem_write32(gc_env.ram, gc_env.r[23], gc_env.r[0]); // stw r0, (r23)']
Processing opcode: subi, operands: ['r27', 'r27', '0x1']
Translated subi r27 r27 0x1 to: ['gc_env.r[27] = gc_env.r[27] - 1; // subi r27, r27, 1']
Translated cmpwi r27 0x0 to: gc_env.cr[0] = (gc_env.r[27] == 0x0) ? 0 : (gc_env.r[27] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800169F4 to: if (gc_env.cr[0] == 0) goto L_800169F4;
Processing opcode: lwz, operands: ['r0', '0x0(r23)']
Translated lwz r0 0x0(r23) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[23]); // lwz r0, (r23)']
Translated cmpwi r0 -0x1 to: gc_env.cr[0] = (gc_env.r[0] == -0x1) ? 0 : (gc_env.r[0] < -0x1 ? -1 : 1); // Compare with immediate
Translated bne .L_800169F4 to: if (gc_env.cr[0] != 0) goto L_800169F4;
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800168B8 to: if (gc_env.cr[0] == 0) goto L_800168B8;
Processing opcode: lwz, operands: ['r0', '0x0(r23)']
Translated lwz r0 0x0(r23) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[23]); // lwz r0, (r23)']
Translated cmpwi r0 -0x1 to: gc_env.cr[0] = (gc_env.r[0] == -0x1) ? 0 : (gc_env.r[0] < -0x1 ? -1 : 1); // Compare with immediate
Translated bne .L_80016A04 to: if (gc_env.cr[0] != 0) goto L_80016A04;
Processing opcode: li, operands: ['r30', '0x800']
Translated li r30 0x800 to: ['gc_env.r[30] = 0x800; // li r30, 0x800']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated lmw r22 0x10(r1) to: ['gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lmw r22, 0x10(r1)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lmw r22, 0x10(r1)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lmw r22, 0x10(r1)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r22, 0x10(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r22, 0x10(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r22, 0x10(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r22, 0x10(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r22, 0x10(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r22, 0x10(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r22, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x38']
Translated addi r1 r1 0x38 to: ['gc_env.r[1] += 56; // addi r1, r1, 0x38']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: addi, operands: ['r4', 'r1', '0xc']
Translated addi r4 r1 0xc to: ['gc_env.r[4] = gc_env.r[1] + 12; // addi r4, r1, 0xc']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: addi, operands: ['r30', 'r3', '0x0']
Translated addi r30 r3 0x0 to: ['gc_env.r[30] = gc_env.r[3] + 0; // addi r30, r3, 0x0']
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Translated bl fn_800148D0 to: fn_800148D0();
Translated mr. r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bne .L_80016AF0 to: if (gc_env.cr[0] != 0) goto L_80016AF0;
Processing opcode: lwz, operands: ['r5', '0xc(r1)']
Translated lwz r5 0xc(r1) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r5, 0xC(r1)']
Processing opcode: lwz, operands: ['r3', '0xc(r5)']
Translated lwz r3 0xc(r5) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xC); // lwz r3, 0xC(r5)']
Translated cmplwi r3 0x880 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x880) ? 0 : ((uint32_t)gc_env.r[3] < 0x880 ? -1 : 1); // Logical compare with immediate
Translated blt .L_80016A78 to: ['if (gc_env.cr[0] & 0x8) goto L_80016A78; // blt .L_80016A78']
Processing opcode: li, operands: ['r4', '0x301']
Translated li r4 0x301 to: ['gc_env.r[4] = 0x301; // li r4, 0x301']
Translated b .L_80016A98 to: goto L_80016A98;
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: add, operands: ['r3', 'r5', 'r3']
Translated add r3 r5 r3 to: ['gc_env.r[3] = gc_env.r[5] + gc_env.r[3]; // add r3, r5, r3']
Processing opcode: stw, operands: ['r0', '0xc(r5)']
Translated stw r0 0xc(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0xC, gc_env.r[0]); // stw r0, 0xC(r5)']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: stb, operands: ['r30', '0x10(r3)']
Translated stb r30 0x10(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x10, gc_env.r[30]); // stb r30, 0x10(r3)']
Processing opcode: lwz, operands: ['r3', '0x8(r5)']
Translated lwz r3 0x8(r5) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x8); // lwz r3, 0x8(r5)']
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: stw, operands: ['r0', '0x8(r5)']
Translated stw r0 0x8(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x8, gc_env.r[0]); // stw r0, 0x8(r5)']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016AC0 to: if (gc_env.cr[0] != 0) goto L_80016AC0;
Translated clrlwi r0 r30 24 to: ['gc_env.r[0] = gc_env.r[30] & 0xFF; // clrlwi r0, r30, 24']
Translated cmplwi r0 0x90 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x90) ? 0 : ((uint32_t)gc_env.r[0] < 0x90 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80016AB8 to: if (gc_env.cr[0] != 0) goto L_80016AB8;
Processing opcode: lwz, operands: ['r3', '0xc(r1)']
Translated lwz r3 0xc(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r3, 0xC(r1)']
Translated bl fn_80017A04 to: fn_80017A04();
Translated b .L_80016AC0 to: goto L_80016AC0;
Processing opcode: lwz, operands: ['r3', '0xc(r1)']
Translated lwz r3 0xc(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r3, 0xC(r1)']
Translated bl fn_80017A94 to: fn_80017A94();
Processing opcode: lwz, operands: ['r3', '0xc(r1)']
Translated lwz r3 0xc(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r3, 0xC(r1)']
Processing opcode: addi, operands: ['r4', 'r1', '0x10']
Translated addi r4 r1 0x10 to: ['gc_env.r[4] = gc_env.r[1] + 16; // addi r4, r1, 0x10']
Processing opcode: li, operands: ['r5', '0x2']
Translated li r5 0x2 to: ['gc_env.r[5] = 0x2; // li r5, 0x2']
Processing opcode: li, operands: ['r6', '0x3']
Translated li r6 0x3 to: ['gc_env.r[6] = 0x3; // li r6, 0x3']
Processing opcode: li, operands: ['r7', '0x1']
Translated li r7 0x1 to: ['gc_env.r[7] = 0x1; // li r7, 0x1']
Translated bl fn_80016878 to: fn_80016878();
Translated mr. r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bne .L_80016AE8 to: if (gc_env.cr[0] != 0) goto L_80016AE8;
Processing opcode: lwz, operands: ['r3', '0x10(r1)']
Translated lwz r3 0x10(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r3, 0x10(r1)']
Translated bl fn_80014998 to: fn_80014998();
Processing opcode: lwz, operands: ['r3', '0x8(r1)']
Translated lwz r3 0x8(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r3, 0x8(r1)']
Translated bl fn_80014998 to: fn_80014998();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r5 0xffff to: ['gc_env.r[5] = -1 << 16; // lis r5, 0xffff']
Translated ori r5 r5 0xfff1 to: ['gc_env.r[5] |= 65521; // ori r5, r5, 0xfff1']
Translated and r5 r5 r3 to: gc_env.r[5] = gc_env.r[5] & gc_env.r[3];
Processing opcode: subf, operands: ['r3', 'r5', 'r3']
Translated subf r3 r5 r3 to: ['gc_env.r[3] = gc_env.r[3] - gc_env.r[5]; // subf r3, r5, r3']
Processing opcode: add, operands: ['r4', 'r4', 'r3']
Translated add r4 r4 r3 to: ['gc_env.r[4] = gc_env.r[4] + gc_env.r[3]; // add r4, r4, r3']
Translated dcbst r0 r5 to: // dcbst: Data cache block store (no-op in this context)
Translated dcbf r0 r5 to: // dcbf: Data cache block flush (no-op in this context)
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated icbi r0 r5 to: // icbi: Instruction cache block invalidate (no-op in this context)
Processing opcode: addic, operands: ['r5', 'r5', '0x8']
Translated addic r5 r5 0x8 to: ['gc_env.r[5] = gc_env.r[5] + 8; // addic r5, r5, 8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (((uint64_t)gc_env.r[5] + 8) > 0xFFFFFFFF ? 0x20000000 : 0);']
Processing opcode: subic, operands: ['r4', 'r4', '0x8']
Translated subic. r4 r4 0x8 to: ['gc_env.r[4] = gc_env.r[4] - 8; // subic. r4, r4, 8', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[4] >= 8 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[4] == 0) ? 0x2 : ((int32_t)gc_env.r[4] < 0 ? 0x8 : 0x4);']
Translated bge .L_80016B20 to: if (gc_env.cr[0] >= 0) goto L_80016B20;
Translated isync  to: // isync: Instruction synchronize (no-op in this context)
Translated blr  to: return;
Translated cmplwi r5 0x20 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x20) ? 0 : ((uint32_t)gc_env.r[5] < 0x20 ? -1 : 1); // Logical compare with immediate
Processing opcode: subi, operands: ['r6', 'r3', '0x1']
Translated subi r6 r3 0x1 to: ['gc_env.r[6] = gc_env.r[3] - 1; // subi r6, r3, 1']
Translated clrlwi r0 r4 24 to: ['gc_env.r[0] = gc_env.r[4] & 0xFF; // clrlwi r0, r4, 24']
Translated mr r7 r0 to: gc_env.r[7] = gc_env.r[0]; // Move register
Translated blt .L_80016BEC to: ['if (gc_env.cr[0] & 0x8) goto L_80016BEC; // blt .L_80016BEC']
Translated nor r0 r6 r6 to: ['gc_env.r[0] = ~gc_env.r[6]; // nor r0, r6, r6']
Translated clrlwi. r0 r0 30 to: ['gc_env.r[0] = gc_env.r[0] & 0x3; // clrlwi r0, r0, 30']
Translated mr r3 r0 to: gc_env.r[3] = gc_env.r[0]; // Move register
Translated beq .L_80016B7C to: if (gc_env.cr[0] == 0) goto L_80016B7C;
Processing opcode: subf, operands: ['r5', 'r3', 'r5']
Translated subf r5 r3 r5 to: ['gc_env.r[5] = gc_env.r[5] - gc_env.r[3]; // subf r5, r3, r5']
Translated clrlwi r0 r7 24 to: ['gc_env.r[0] = gc_env.r[7] & 0xFF; // clrlwi r0, r7, 24']
Processing opcode: subic, operands: ['r3', 'r3', '0x1']
Translated subic. r3 r3 0x1 to: ['gc_env.r[3] = gc_env.r[3] - 1; // subic. r3, r3, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[3] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[3] == 0) ? 0x2 : ((int32_t)gc_env.r[3] < 0 ? 0x8 : 0x4);']
Translated stbu r0 0x1(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + 0x1, gc_env.r[0]); // stbu r0, 0x1(r6)', 'gc_env.r[6] = gc_env.r[6] + 0x1;']
Translated bne .L_80016B70 to: if (gc_env.cr[0] != 0) goto L_80016B70;
Translated cmplwi r7 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[7] == 0x0) ? 0 : ((uint32_t)gc_env.r[7] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80016B9C to: if (gc_env.cr[0] == 0) goto L_80016B9C;
Translated slwi r3 r7 24 to: ['gc_env.r[3] = gc_env.r[7] << 24; // slwi r3, r7, 24']
Translated slwi r0 r7 16 to: ['gc_env.r[0] = gc_env.r[7] << 16; // slwi r0, r7, 16']
Translated slwi r4 r7 8 to: ['gc_env.r[4] = gc_env.r[7] << 8; // slwi r4, r7, 8']
Translated or r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Translated or r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] | gc_env.r[0]; // or r0, r4, r0']
Translated or r7 r7 r0 to: ['gc_env.r[7] = gc_env.r[7] | gc_env.r[0]; // or r7, r7, r0']
Translated srwi. r0 r5 5 to: ['gc_env.r[0] = gc_env.r[5] >> 5; // srwi r0, r5, 5', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Processing opcode: subi, operands: ['r3', 'r6', '0x3']
Translated subi r3 r6 0x3 to: ['gc_env.r[3] = gc_env.r[6] - 3; // subi r3, r6, 3']
Translated beq .L_80016BD0 to: if (gc_env.cr[0] == 0) goto L_80016BD0;
Processing opcode: stw, operands: ['r7', '0x4(r3)']
Translated stw r7 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[7]); // stw r7, 0x4(r3)']
Processing opcode: subic, operands: ['r0', 'r0', '0x1']
Translated subic. r0 r0 0x1 to: ['gc_env.r[0] = gc_env.r[0] - 1; // subic. r0, r0, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[0] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Processing opcode: stw, operands: ['r7', '0x8(r3)']
Translated stw r7 0x8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[7]); // stw r7, 0x8(r3)']
Processing opcode: stw, operands: ['r7', '0xc(r3)']
Translated stw r7 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[7]); // stw r7, 0xC(r3)']
Processing opcode: stw, operands: ['r7', '0x10(r3)']
Translated stw r7 0x10(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x10, gc_env.r[7]); // stw r7, 0x10(r3)']
Processing opcode: stw, operands: ['r7', '0x14(r3)']
Translated stw r7 0x14(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x14, gc_env.r[7]); // stw r7, 0x14(r3)']
Processing opcode: stw, operands: ['r7', '0x18(r3)']
Translated stw r7 0x18(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x18, gc_env.r[7]); // stw r7, 0x18(r3)']
Processing opcode: stw, operands: ['r7', '0x1c(r3)']
Translated stw r7 0x1c(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x1C, gc_env.r[7]); // stw r7, 0x1C(r3)']
Processing opcode: stwu, operands: ['r7', '0x20(r3)']
Translated stwu r7 0x20(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x20, gc_env.r[7]); // stwu r7, 0x20(r3)', 'gc_env.r[3] = gc_env.r[3] + 0x20;']
Translated bne .L_80016BA8 to: if (gc_env.cr[0] != 0) goto L_80016BA8;
Translated extrwi. r0 r5 3 27 to: ['gc_env.r[0] = (gc_env.r[5] >> 2) & 0x7; // extrwi r0, r5, 3, 27', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_80016BE4 to: if (gc_env.cr[0] == 0) goto L_80016BE4;
Processing opcode: subic, operands: ['r0', 'r0', '0x1']
Translated subic. r0 r0 0x1 to: ['gc_env.r[0] = gc_env.r[0] - 1; // subic. r0, r0, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[0] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Processing opcode: stwu, operands: ['r7', '0x4(r3)']
Translated stwu r7 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[7]); // stwu r7, 0x4(r3)', 'gc_env.r[3] = gc_env.r[3] + 0x4;']
Translated bne .L_80016BD8 to: if (gc_env.cr[0] != 0) goto L_80016BD8;
Processing opcode: addi, operands: ['r6', 'r3', '0x3']
Translated addi r6 r3 0x3 to: ['gc_env.r[6] = gc_env.r[3] + 3; // addi r6, r3, 0x3']
Translated clrlwi r5 r5 30 to: ['gc_env.r[5] = gc_env.r[5] & 0x3; // clrlwi r5, r5, 30']
Translated cmplwi r5 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[5] == 0x0) ? 0 : ((uint32_t)gc_env.r[5] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beqlr  to: ['if (gc_env.cr[0] & 0x2) return; // beqlr']
Translated clrlwi r0 r7 24 to: ['gc_env.r[0] = gc_env.r[7] & 0xFF; // clrlwi r0, r7, 24']
Processing opcode: subic, operands: ['r5', 'r5', '0x1']
Translated subic. r5 r5 0x1 to: ['gc_env.r[5] = gc_env.r[5] - 1; // subic. r5, r5, 1', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[5] >= 1 ? 0x20000000 : 0);', 'gc_env.cr[0] = (gc_env.r[5] == 0) ? 0x2 : ((int32_t)gc_env.r[5] < 0 ? 0x8 : 0x4);']
Translated stbu r0 0x1(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6] + 0x1, gc_env.r[0]); // stbu r0, 0x1(r6)', 'gc_env.r[6] = gc_env.r[6] + 0x1;']
Translated bne .L_80016BF8 to: if (gc_env.cr[0] != 0) goto L_80016BF8;
Translated blr  to: return;
Translated mfmsr r3 to: gc_env.r[3] = gc_env.msr; // Move from machine state register
Translated blr  to: return;
Translated mtmsr r3 to: gc_env.msr = gc_env.r[3]; // Move to machine state register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: stw, operands: ['r29', '0xc(r1)']
Translated stw r29 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[29]); // stw r29, 0xC(r1)']
Translated mr r30 r5 to: gc_env.r[30] = gc_env.r[5]; // Move register
Processing opcode: add, operands: ['r31', 'r4', 'r3']
Translated add r31 r4 r3 to: ['gc_env.r[31] = gc_env.r[4] + gc_env.r[3]; // add r31, r4, r3']
Processing opcode: subi, operands: ['r31', 'r31', '0x1']
Translated subi r31 r31 0x1 to: ['gc_env.r[31] = gc_env.r[31] - 1; // subi r31, r31, 1']
Translated cmplw r31 r3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == (uint32_t)gc_env.r[3]) ? 0 : ((uint32_t)gc_env.r[31] < (uint32_t)gc_env.r[3] ? -1 : 1); // Logical compare word
Processing opcode: li, operands: ['r5', '0x700']
Translated li r5 0x700 to: ['gc_env.r[5] = 0x700; // li r5, 0x700']
Translated bge .L_80016C50 to: if (gc_env.cr[0] >= 0) goto L_80016C50;
Processing opcode: li, operands: ['r3', '0x700']
Translated li r3 0x700 to: ['gc_env.r[3] = 0x700; // li r3, 0x700']
Translated b .L_80016D34 to: goto L_80016D34;
Translated lis r4 lbl_8001A630@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001A630 >> 16) & 0xFFFF; // lis r4, lbl_8001A630@ha']
Processing opcode: addi, operands: ['r4', 'r4', 'lbl_8001A630@l']
Translated addi r4 r4 lbl_8001A630@l to: ['gc_env.r[4] = (uint32_t)&lbl_8001A630; // lis + addi lbl_8001A630 (completing pattern)']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated b .L_80016C60 to: goto L_80016C60;
Translated b .L_80016C64 to: goto L_80016C64;
Processing opcode: lwz, operands: ['r0', '0x4(r4)']
Translated lwz r0 0x4(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwz r0, 0x4(r4)']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bgt .L_80016D30 to: ['if (gc_env.cr[0] & 0x4) goto L_80016D30; // bgt .L_80016D30']
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated cmplw r31 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[31] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated blt .L_80016D30 to: ['if (gc_env.cr[0] & 0x8) goto L_80016D30; // blt .L_80016D30']
Translated clrlwi r0 r30 24 to: ['gc_env.r[0] = gc_env.r[30] & 0xFF; // clrlwi r0, r30, 24']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80016C9C to: if (gc_env.cr[0] != 0) goto L_80016C9C;
Translated slwi r0 r6 4 to: ['gc_env.r[0] = gc_env.r[6] << 4; // slwi r0, r6, 4']
Processing opcode: add, operands: ['r4', 'r4', 'r0']
Translated add r4 r4 r0 to: ['gc_env.r[4] = gc_env.r[4] + gc_env.r[0]; // add r4, r4, r0']
Processing opcode: lwz, operands: ['r0', '0x8(r4)']
Translated lwz r0 0x8(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x8); // lwz r0, 0x8(r4)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80016CC4 to: if (gc_env.cr[0] == 0) goto L_80016CC4;
Translated clrlwi r0 r30 24 to: ['gc_env.r[0] = gc_env.r[30] & 0xFF; // clrlwi r0, r30, 24']
Translated cmplwi r0 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x1) ? 0 : ((uint32_t)gc_env.r[0] < 0x1 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80016CCC to: if (gc_env.cr[0] != 0) goto L_80016CCC;
Translated lis r4 lbl_8001A630@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001A630 >> 16) & 0xFFFF; // lis r4, lbl_8001A630@ha']
Processing opcode: addi, operands: ['r4', 'r4', 'lbl_8001A630@l']
Translated addi r4 r4 lbl_8001A630@l to: ['gc_env.r[4] = (uint32_t)&lbl_8001A630; // lis + addi lbl_8001A630 (completing pattern)']
Translated slwi r0 r6 4 to: ['gc_env.r[0] = gc_env.r[6] << 4; // slwi r0, r6, 4']
Processing opcode: add, operands: ['r4', 'r4', 'r0']
Translated add r4 r4 r0 to: ['gc_env.r[4] = gc_env.r[4] + gc_env.r[0]; // add r4, r4, r0']
Processing opcode: lwz, operands: ['r0', '0xc(r4)']
Translated lwz r0 0xc(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xC); // lwz r0, 0xC(r4)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016CCC to: if (gc_env.cr[0] != 0) goto L_80016CCC;
Processing opcode: li, operands: ['r5', '0x700']
Translated li r5 0x700 to: ['gc_env.r[5] = 0x700; // li r5, 0x700']
Translated b .L_80016D30 to: goto L_80016D30;
Translated lis r4 lbl_8001A630@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001A630 >> 16) & 0xFFFF; // lis r4, lbl_8001A630@ha']
Translated slwi r29 r6 4 to: ['gc_env.r[29] = gc_env.r[6] << 4; // slwi r29, r6, 4']
Processing opcode: addi, operands: ['r0', 'r4', 'lbl_8001A630@l']
Translated addi r0 r4 lbl_8001A630@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&lbl_8001A630 & 0xFFFF); // addi r0, r4, lbl_8001A630@l']
Processing opcode: add, operands: ['r4', 'r0', 'r29']
Translated add r4 r0 r29 to: ['gc_env.r[4] = gc_env.r[0] + gc_env.r[29]; // add r4, r0, r29']
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bge .L_80016CFC to: if (gc_env.cr[0] >= 0) goto L_80016CFC;
Translated mr r5 r30 to: gc_env.r[5] = gc_env.r[30]; // Move register
Processing opcode: subf, operands: ['r4', 'r3', 'r0']
Translated subf r4 r3 r0 to: ['gc_env.r[4] = gc_env.r[0] - gc_env.r[3]; // subf r4, r3, r0']
Translated bl fn_80016C18 to: fn_80016C18();
Translated mr r5 r3 to: gc_env.r[5] = gc_env.r[3]; // Move register
Translated cmpwi r5 0x0 to: gc_env.cr[0] = (gc_env.r[5] == 0x0) ? 0 : (gc_env.r[5] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016D30 to: if (gc_env.cr[0] != 0) goto L_80016D30;
Translated lis r3 lbl_8001A630@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001A630 >> 16) & 0xFFFF; // lis r3, lbl_8001A630@ha']
Processing opcode: addi, operands: ['r0', 'r3', 'lbl_8001A630@l']
Translated addi r0 r3 lbl_8001A630@l to: ['gc_env.r[0] = (uint32_t)&lbl_8001A630; // lis + addi lbl_8001A630 (completing pattern)']
Processing opcode: add, operands: ['r3', 'r0', 'r29']
Translated add r3 r0 r29 to: ['gc_env.r[3] = gc_env.r[0] + gc_env.r[29]; // add r3, r0, r29']
Processing opcode: lwz, operands: ['r3', '0x4(r3)']
Translated lwz r3 0x4(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4); // lwz r3, 0x4(r3)']
Translated cmplw r31 r3 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == (uint32_t)gc_env.r[3]) ? 0 : ((uint32_t)gc_env.r[31] < (uint32_t)gc_env.r[3] ? -1 : 1); // Logical compare word
Translated ble .L_80016D30 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80016D30; // ble .L_80016D30']
Translated mr r5 r30 to: gc_env.r[5] = gc_env.r[30]; // Move register
Processing opcode: subf, operands: ['r4', 'r3', 'r31']
Translated subf r4 r3 r31 to: ['gc_env.r[4] = gc_env.r[31] - gc_env.r[3]; // subf r4, r3, r31']
Translated bl fn_80016C18 to: fn_80016C18();
Translated mr r5 r3 to: gc_env.r[5] = gc_env.r[3]; // Move register
Translated b .L_80016D30 to: goto L_80016D30;
Translated mr r3 r5 to: gc_env.r[3] = gc_env.r[5]; // Move register
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: lwz, operands: ['r29', '0xc(r1)']
Translated lwz r29 0xc(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r29, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mfmsr r8 to: gc_env.r[8] = gc_env.msr; // Move from machine state register
Processing opcode: li, operands: ['r10', '0x0']
Translated li r10 0x0 to: ['gc_env.r[10] = 0x0; // li r10, 0x0']
Translated cmpw r10 r5 to: ['gc_env.cr[0] = (int32_t)gc_env.r[10] < (int32_t)gc_env.r[5] ? 0x8 : ((int32_t)gc_env.r[10] > (int32_t)gc_env.r[5] ? 0x4 : 0x2); // cmpw r10, r5']
Translated beq .L_80016D80 to: if (gc_env.cr[0] == 0) goto L_80016D80;
Translated mtmsr r7 to: gc_env.msr = gc_env.r[7]; // Move to machine state register
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated lbzx r9 r10 r4 to: ['gc_env.r[9] = gc_mem_read8(gc_env.ram, gc_env.r[10] + gc_env.r[4]); // lbzx r9, r10, r4']
Translated mtmsr r6 to: gc_env.msr = gc_env.r[6]; // Move to machine state register
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated stbx r9 r10 r3 to: ['gc_mem_write8(gc_env.ram, gc_env.r[10] + gc_env.r[3], gc_env.r[9]); // stbx r9, r10, r3']
Processing opcode: addi, operands: ['r10', 'r10', '0x1']
Translated addi r10 r10 0x1 to: ['gc_env.r[10] += 1; // addi r10, r10, 0x1']
Translated b .L_80016D58 to: goto L_80016D58;
Translated mtmsr r8 to: gc_env.msr = gc_env.r[8]; // Move to machine state register
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x38(r1)']
Translated stwu r1 -0x38(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x38, gc_env.r[1]); // stwu r1, -0x38(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x38;']
Translated stmw r25 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[25]); // stmw r25, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[26]); // stmw r25, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[27]); // stmw r25, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[28]); // stmw r25, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[29]); // stmw r25, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[30]); // stmw r25, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[31]); // stmw r25, 0x1C(r1)']
Translated mr r26 r3 to: gc_env.r[26] = gc_env.r[3]; // Move register
Translated mr r27 r4 to: gc_env.r[27] = gc_env.r[4]; // Move register
Translated mr r28 r5 to: gc_env.r[28] = gc_env.r[5]; // Move register
Translated mr r29 r7 to: gc_env.r[29] = gc_env.r[7]; // Move register
Translated lis r3 gTRKExceptionStatus_8001BAA4@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r3, gTRKExceptionStatus_8001BAA4@ha']
Processing opcode: addi, operands: ['r5', 'r3', 'gTRKExceptionStatus_8001BAA4@l']
Translated addi r5 r3 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[5] = (uint32_t)&gTRKExceptionStatus_8001BAA4; // lis + addi gTRKExceptionStatus_8001BAA4 (completing pattern)']
Processing opcode: lwz, operands: ['r4', '0x0(r5)']
Translated lwz r4 0x0(r5) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r4, (r5)']
Processing opcode: addi, operands: ['r31', 'r5', '0xd']
Translated addi r31 r5 0xd to: ['gc_env.r[31] = gc_env.r[5] + 13; // addi r31, r5, 0xd']
Processing opcode: lwz, operands: ['r0', '0x4(r5)']
Translated lwz r0 0x4(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x4); // lwz r0, 0x4(r5)']
Processing opcode: li, operands: ['r30', '0x0']
Translated li r30 0x0 to: ['gc_env.r[30] = 0x0; // li r30, 0x0']
Translated mr r3 r27 to: gc_env.r[3] = gc_env.r[27]; // Move register
Processing opcode: stw, operands: ['r4', '0x8(r1)']
Translated stw r4 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[4]); // stw r4, 0x8(r1)']
Processing opcode: stw, operands: ['r0', '0xc(r1)']
Translated stw r0 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[0]); // stw r0, 0xC(r1)']
Processing opcode: lwz, operands: ['r4', '0x8(r5)']
Translated lwz r4 0x8(r5) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x8); // lwz r4, 0x8(r5)']
Processing opcode: lwz, operands: ['r0', '0xc(r5)']
Translated lwz r0 0xc(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xC); // lwz r0, 0xC(r5)']
Processing opcode: stw, operands: ['r4', '0x10(r1)']
Translated stw r4 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[4]); // stw r4, 0x10(r1)']
Processing opcode: stw, operands: ['r0', '0x14(r1)']
Translated stw r0 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stw r0, 0x14(r1)']
Processing opcode: stb, operands: ['r30', '0x0(r31)']
Translated stb r30 0x0(r31) to: ['gc_mem_write8(gc_env.ram, gc_env.r[31], gc_env.r[30]); // stb r30, (r31)']
Translated bl fn_80018298 to: fn_80018298();
Translated cmpwi r29 0x0 to: gc_env.cr[0] = (gc_env.r[29] == 0x0) ? 0 : (gc_env.r[29] < 0x0 ? -1 : 1); // Compare with immediate
Translated mr r25 r3 to: gc_env.r[25] = gc_env.r[3]; // Move register
Translated beq .L_80016DF8 to: if (gc_env.cr[0] == 0) goto L_80016DF8;
Translated b .L_80016DFC to: goto L_80016DFC;
Processing opcode: li, operands: ['r30', '0x1']
Translated li r30 0x1 to: ['gc_env.r[30] = 0x1; // li r30, 0x1']
Processing opcode: lwz, operands: ['r4', '0x0(r28)']
Translated lwz r4 0x0(r28) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r4, (r28)']
Translated mr r3 r25 to: gc_env.r[3] = gc_env.r[25]; // Move register
Translated mr r5 r30 to: gc_env.r[5] = gc_env.r[30]; // Move register
Translated bl fn_80016C18 to: fn_80016C18();
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80016E24 to: if (gc_env.cr[0] == 0) goto L_80016E24;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x0(r28)']
Translated stw r0 0x0(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28], gc_env.r[0]); // stw r0, (r28)']
Translated b .L_80016E98 to: goto L_80016E98;
Translated bl fn_80016C08 to: fn_80016C08();
Translated lis r4 gTRKCPUState@ha to: ['gc_env.r[4] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r4, gTRKCPUState@ha']
Translated cmpwi r29 0x0 to: gc_env.cr[0] = (gc_env.r[29] == 0x0) ? 0 : (gc_env.r[29] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: addi, operands: ['r4', 'r4', 'gTRKCPUState@l']
Translated addi r4 r4 gTRKCPUState@l to: ['gc_env.r[4] = gc_env.r[4] + ((uint32_t)&gTRKCPUState & 0xFFFF); // addi r4, r4, gTRKCPUState@l']
Processing opcode: lwz, operands: ['r0', '0x1f8(r4)']
Translated lwz r0 0x1f8(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x1F8); // lwz r0, 0x1F8(r4)']
Translated mr r8 r3 to: gc_env.r[8] = gc_env.r[3]; // Move register
Translated rlwinm r0 r0 0 27 27 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x10; // rlwinm r0, r0, 0, 27, 27']
Translated or r7 r8 r0 to: ['gc_env.r[7] = gc_env.r[8] | gc_env.r[0]; // or r7, r8, r0']
Translated beq .L_80016E60 to: if (gc_env.cr[0] == 0) goto L_80016E60;
Processing opcode: lwz, operands: ['r5', '0x0(r28)']
Translated lwz r5 0x0(r28) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r5, (r28)']
Translated mr r3 r26 to: gc_env.r[3] = gc_env.r[26]; // Move register
Translated mr r4 r25 to: gc_env.r[4] = gc_env.r[25]; // Move register
Translated mr r6 r8 to: gc_env.r[6] = gc_env.r[8]; // Move register
Translated bl fn_80016D50 to: fn_80016D50();
Translated b .L_80016E98 to: goto L_80016E98;
Processing opcode: lwz, operands: ['r5', '0x0(r28)']
Translated lwz r5 0x0(r28) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r5, (r28)']
Translated mr r3 r25 to: gc_env.r[3] = gc_env.r[25]; // Move register
Translated mr r4 r26 to: gc_env.r[4] = gc_env.r[26]; // Move register
Translated mr r6 r7 to: gc_env.r[6] = gc_env.r[7]; // Move register
Translated mr r7 r8 to: gc_env.r[7] = gc_env.r[8]; // Move register
Translated bl fn_80016D50 to: fn_80016D50();
Translated mr r3 r25 to: gc_env.r[3] = gc_env.r[25]; // Move register
Processing opcode: lwz, operands: ['r4', '0x0(r28)']
Translated lwz r4 0x0(r28) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r4, (r28)']
Translated bl fn_80016B0C to: fn_80016B0C();
Translated cmplw r27 r25 to: gc_env.cr[0] = ((uint32_t)gc_env.r[27] == (uint32_t)gc_env.r[25]) ? 0 : ((uint32_t)gc_env.r[27] < (uint32_t)gc_env.r[25] ? -1 : 1); // Logical compare word
Translated beq .L_80016E98 to: if (gc_env.cr[0] == 0) goto L_80016E98;
Translated mr r3 r27 to: gc_env.r[3] = gc_env.r[27]; // Move register
Processing opcode: lwz, operands: ['r4', '0x0(r28)']
Translated lwz r4 0x0(r28) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r4, (r28)']
Translated bl fn_80016B0C to: fn_80016B0C();
Processing opcode: lbz, operands: ['r0', '0x0(r31)']
Translated lbz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x0); // lbz r0, 0x0(r31)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80016EB0 to: if (gc_env.cr[0] == 0) goto L_80016EB0;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x0(r28)']
Translated stw r0 0x0(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28], gc_env.r[0]); // stw r0, (r28)']
Processing opcode: li, operands: ['r30', '0x702']
Translated li r30 0x702 to: ['gc_env.r[30] = 0x702; // li r30, 0x702']
Translated lis r3 gTRKExceptionStatus_8001BAA4@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r3, gTRKExceptionStatus_8001BAA4@ha']
Processing opcode: lwz, operands: ['r4', '0x8(r1)']
Translated lwz r4 0x8(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r4, 0x8(r1)']
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r5', 'r3', 'gTRKExceptionStatus_8001BAA4@l']
Translated addi r5 r3 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[5] = gc_env.r[3] + ((uint32_t)&gTRKExceptionStatus_8001BAA4 & 0xFFFF); // addi r5, r3, gTRKExceptionStatus_8001BAA4@l']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Processing opcode: stw, operands: ['r4', '0x0(r5)']
Translated stw r4 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[4]); // stw r4, (r5)']
Processing opcode: stw, operands: ['r0', '0x4(r5)']
Translated stw r0 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[0]); // stw r0, 0x4(r5)']
Processing opcode: lwz, operands: ['r4', '0x10(r1)']
Translated lwz r4 0x10(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r4, 0x10(r1)']
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: stw, operands: ['r4', '0x8(r5)']
Translated stw r4 0x8(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x8, gc_env.r[4]); // stw r4, 0x8(r5)']
Processing opcode: stw, operands: ['r0', '0xc(r5)']
Translated stw r0 0xc(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0xC, gc_env.r[0]); // stw r0, 0xC(r5)']
Translated lmw r25 0x1c(r1) to: ['gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r25, 0x1C(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r25, 0x1C(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r25, 0x1C(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r25, 0x1C(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r25, 0x1C(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r25, 0x1C(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r25, 0x1C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x38']
Translated addi r1 r1 0x38 to: ['gc_env.r[1] += 56; // addi r1, r1, 0x38']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: li, operands: ['r0', '0x4']
Translated li r0 0x4 to: ['gc_env.r[0] = 0x4; // li r0, 0x4']
Processing opcode: addi, operands: ['r5', 'r1', '0x8']
Translated addi r5 r1 0x8 to: ['gc_env.r[5] = gc_env.r[1] + 8; // addi r5, r1, 0x8']
Processing opcode: stw, operands: ['r0', '0x8(r1)']
Translated stw r0 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stw r0, 0x8(r1)']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Processing opcode: li, operands: ['r7', '0x1']
Translated li r7 0x1 to: ['gc_env.r[7] = 0x1; // li r7, 0x1']
Translated bl fn_80016D8C to: fn_80016D8C();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80016F2C to: if (gc_env.cr[0] != 0) goto L_80016F2C;
Processing opcode: lwz, operands: ['r0', '0x8(r1)']
Translated lwz r0 0x8(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r0, 0x8(r1)']
Translated cmplwi r0 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x4) ? 0 : ((uint32_t)gc_env.r[0] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80016F2C to: if (gc_env.cr[0] == 0) goto L_80016F2C;
Processing opcode: li, operands: ['r3', '0x700']
Translated li r3 0x700 to: ['gc_env.r[3] = 0x700; // li r3, 0x700']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Translated mr r31 r6 to: gc_env.r[31] = gc_env.r[6]; // Move register
Translated cmplwi r4 0x24 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x24) ? 0 : ((uint32_t)gc_env.r[4] < 0x24 ? -1 : 1); // Logical compare with immediate
Translated ble .L_80016F64 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80016F64; // ble .L_80016F64']
Processing opcode: li, operands: ['r3', '0x701']
Translated li r3 0x701 to: ['gc_env.r[3] = 0x701; // li r3, 0x701']
Translated b .L_80017020 to: goto L_80017020;
Translated lis r6 gTRKExceptionStatus_8001BAA4@ha to: ['gc_env.r[6] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r6, gTRKExceptionStatus_8001BAA4@ha']
Translated cmpwi r7 0x0 to: gc_env.cr[0] = (gc_env.r[7] == 0x0) ? 0 : (gc_env.r[7] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: addi, operands: ['r8', 'r6', 'gTRKExceptionStatus_8001BAA4@l']
Translated addi r8 r6 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[8] = gc_env.r[6] + ((uint32_t)&gTRKExceptionStatus_8001BAA4 & 0xFFFF); // addi r8, r6, gTRKExceptionStatus_8001BAA4@l']
Processing opcode: lwz, operands: ['r0', '0x0(r8)']
Translated lwz r0 0x0(r8) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[8]); // lwz r0, (r8)']
Processing opcode: subf, operands: ['r4', 'r3', 'r4']
Translated subf r4 r3 r4 to: ['gc_env.r[4] = gc_env.r[4] - gc_env.r[3]; // subf r4, r3, r4']
Processing opcode: lwz, operands: ['r7', '0x4(r8)']
Translated lwz r7 0x4(r8) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[8] + 0x4); // lwz r7, 0x4(r8)']
Processing opcode: addi, operands: ['r9', 'r4', '0x1']
Translated addi r9 r4 0x1 to: ['gc_env.r[9] = gc_env.r[4] + 1; // addi r9, r4, 0x1']
Translated lis r4 gTRKCPUState@ha to: ['gc_env.r[4] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r4, gTRKCPUState@ha']
Processing opcode: stw, operands: ['r0', '0x8(r1)']
Translated stw r0 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stw r0, 0x8(r1)']
Processing opcode: addi, operands: ['r0', 'r4', 'gTRKCPUState@l']
Translated addi r0 r4 gTRKCPUState@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&gTRKCPUState & 0xFFFF); // addi r0, r4, gTRKCPUState@l']
Translated slwi r3 r3 2 to: ['gc_env.r[3] = gc_env.r[3] << 2; // slwi r3, r3, 2']
Processing opcode: addi, operands: ['r30', 'r8', '0xd']
Translated addi r30 r8 0xd to: ['gc_env.r[30] = gc_env.r[8] + 13; // addi r30, r8, 0xd']
Processing opcode: stw, operands: ['r7', '0xc(r1)']
Translated stw r7 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[7]); // stw r7, 0xC(r1)']
Processing opcode: add, operands: ['r4', 'r0', 'r3']
Translated add r4 r0 r3 to: ['gc_env.r[4] = gc_env.r[0] + gc_env.r[3]; // add r4, r0, r3']
Processing opcode: lwz, operands: ['r7', '0x8(r8)']
Translated lwz r7 0x8(r8) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[8] + 0x8); // lwz r7, 0x8(r8)']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Processing opcode: lwz, operands: ['r3', '0xc(r8)']
Translated lwz r3 0xc(r8) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[8] + 0xC); // lwz r3, 0xC(r8)']
Translated slwi r0 r9 2 to: ['gc_env.r[0] = gc_env.r[9] << 2; // slwi r0, r9, 2']
Processing opcode: stw, operands: ['r7', '0x10(r1)']
Translated stw r7 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[7]); // stw r7, 0x10(r1)']
Translated mr r7 r9 to: gc_env.r[7] = gc_env.r[9]; // Move register
Processing opcode: stw, operands: ['r3', '0x14(r1)']
Translated stw r3 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[3]); // stw r3, 0x14(r1)']
Processing opcode: stb, operands: ['r6', '0x0(r30)']
Translated stb r6 0x0(r30) to: ['gc_mem_write8(gc_env.ram, gc_env.r[30], gc_env.r[6]); // stb r6, (r30)']
Processing opcode: stw, operands: ['r0', '0x0(r31)']
Translated stw r0 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stw r0, (r31)']
Translated beq .L_80016FD4 to: if (gc_env.cr[0] == 0) goto L_80016FD4;
Translated mr r3 r5 to: gc_env.r[3] = gc_env.r[5]; // Move register
Translated mr r5 r7 to: gc_env.r[5] = gc_env.r[7]; // Move register
Translated bl fn_80014D48 to: fn_80014D48();
Translated b .L_80016FE0 to: goto L_80016FE0;
Translated mr r3 r5 to: gc_env.r[3] = gc_env.r[5]; // Move register
Translated mr r5 r7 to: gc_env.r[5] = gc_env.r[7]; // Move register
Translated bl fn_8001501C to: fn_8001501C();
Processing opcode: lbz, operands: ['r0', '0x0(r30)']
Translated lbz r0 0x0(r30) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[30] + 0x0); // lbz r0, 0x0(r30)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80016FF8 to: if (gc_env.cr[0] == 0) goto L_80016FF8;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x0(r31)']
Translated stw r0 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stw r0, (r31)']
Processing opcode: li, operands: ['r3', '0x702']
Translated li r3 0x702 to: ['gc_env.r[3] = 0x702; // li r3, 0x702']
Translated lis r5 gTRKExceptionStatus_8001BAA4@ha to: ['gc_env.r[5] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r5, gTRKExceptionStatus_8001BAA4@ha']
Processing opcode: lwz, operands: ['r4', '0x8(r1)']
Translated lwz r4 0x8(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r4, 0x8(r1)']
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r5', 'r5', 'gTRKExceptionStatus_8001BAA4@l']
Translated addi r5 r5 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[5] = gc_env.r[5] + ((uint32_t)&gTRKExceptionStatus_8001BAA4 & 0xFFFF); // addi r5, r5, gTRKExceptionStatus_8001BAA4@l']
Processing opcode: stw, operands: ['r4', '0x0(r5)']
Translated stw r4 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[4]); // stw r4, (r5)']
Processing opcode: stw, operands: ['r0', '0x4(r5)']
Translated stw r0 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[0]); // stw r0, 0x4(r5)']
Processing opcode: lwz, operands: ['r4', '0x10(r1)']
Translated lwz r4 0x10(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r4, 0x10(r1)']
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: stw, operands: ['r4', '0x8(r5)']
Translated stw r4 0x8(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x8, gc_env.r[4]); // stw r4, 0x8(r5)']
Processing opcode: stw, operands: ['r0', '0xc(r5)']
Translated stw r0 0xc(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0xC, gc_env.r[0]); // stw r0, 0xC(r5)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x40(r1)']
Translated stwu r1 -0x40(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x40, gc_env.r[1]); // stwu r1, -0x40(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x40;']
Translated stmw r25 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[25]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[26]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[27]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[28]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[29]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[30]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[31]); // stmw r25, 0x24(r1)']
Translated mr r25 r3 to: gc_env.r[25] = gc_env.r[3]; // Move register
Translated mr r28 r4 to: gc_env.r[28] = gc_env.r[4]; // Move register
Translated mr r29 r5 to: gc_env.r[29] = gc_env.r[5]; // Move register
Translated mr r30 r6 to: gc_env.r[30] = gc_env.r[6]; // Move register
Translated mr r31 r7 to: gc_env.r[31] = gc_env.r[7]; // Move register
Translated cmplwi r28 0x21 to: gc_env.cr[0] = ((uint32_t)gc_env.r[28] == 0x21) ? 0 : ((uint32_t)gc_env.r[28] < 0x21 ? -1 : 1); // Logical compare with immediate
Translated ble .L_8001706C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8001706C; // ble .L_8001706C']
Processing opcode: li, operands: ['r3', '0x701']
Translated li r3 0x701 to: ['gc_env.r[3] = 0x701; // li r3, 0x701']
Translated b .L_8001716C to: goto L_8001716C;
Translated lis r3 gTRKExceptionStatus_8001BAA4@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r3, gTRKExceptionStatus_8001BAA4@ha']
Processing opcode: addi, operands: ['r4', 'r3', 'gTRKExceptionStatus_8001BAA4@l']
Translated addi r4 r3 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[4] = (uint32_t)&gTRKExceptionStatus_8001BAA4; // lis + addi gTRKExceptionStatus_8001BAA4 (completing pattern)']
Processing opcode: lwz, operands: ['r3', '0x0(r4)']
Translated lwz r3 0x0(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r3, (r4)']
Processing opcode: addi, operands: ['r26', 'r4', '0xd']
Translated addi r26 r4 0xd to: ['gc_env.r[26] = gc_env.r[4] + 13; // addi r26, r4, 0xd']
Processing opcode: lwz, operands: ['r0', '0x4(r4)']
Translated lwz r0 0x4(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x4); // lwz r0, 0x4(r4)']
Processing opcode: li, operands: ['r27', '0x0']
Translated li r27 0x0 to: ['gc_env.r[27] = 0x0; // li r27, 0x0']
Processing opcode: stw, operands: ['r3', '0x8(r1)']
Translated stw r3 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[3]); // stw r3, 0x8(r1)']
Processing opcode: stw, operands: ['r0', '0xc(r1)']
Translated stw r0 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[0]); // stw r0, 0xC(r1)']
Processing opcode: lwz, operands: ['r3', '0x8(r4)']
Translated lwz r3 0x8(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x8); // lwz r3, 0x8(r4)']
Processing opcode: lwz, operands: ['r0', '0xc(r4)']
Translated lwz r0 0xc(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xC); // lwz r0, 0xC(r4)']
Processing opcode: stw, operands: ['r3', '0x10(r1)']
Translated stw r3 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[3]); // stw r3, 0x10(r1)']
Processing opcode: stw, operands: ['r0', '0x14(r1)']
Translated stw r0 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stw r0, 0x14(r1)']
Processing opcode: stb, operands: ['r27', '0x0(r26)']
Translated stb r27 0x0(r26) to: ['gc_mem_write8(gc_env.ram, gc_env.r[26], gc_env.r[27]); // stb r27, (r26)']
Translated bl fn_80016C08 to: fn_80016C08();
Translated ori r3 r3 0x2000 to: ['gc_env.r[3] |= 8192; // ori r3, r3, 0x2000']
Translated bl fn_80016C10 to: fn_80016C10();
Processing opcode: stw, operands: ['r27', '0x0(r30)']
Translated stw r27 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[27]); // stw r27, (r30)']
Translated mr r27 r25 to: gc_env.r[27] = gc_env.r[25]; // Move register
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_800170BC to: goto L_800170BC;
Translated b .L_800170C0 to: goto L_800170C0;
Translated b .L_8001711C to: goto L_8001711C;
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800170F0 to: if (gc_env.cr[0] == 0) goto L_800170F0;
Translated mr r4 r27 to: gc_env.r[4] = gc_env.r[27]; // Move register
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Translated mr r5 r31 to: gc_env.r[5] = gc_env.r[31]; // Move register
Translated bl fn_80017FEC to: fn_80017FEC();
Processing opcode: lwz, operands: ['r5', '0x18(r1)']
Translated lwz r5 0x18(r1) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r5, 0x18(r1)']
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Processing opcode: lwz, operands: ['r6', '0x1c(r1)']
Translated lwz r6 0x1c(r1) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r6, 0x1C(r1)']
Translated bl fn_80014C58 to: fn_80014C58();
Translated b .L_8001710C to: goto L_8001710C;
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Processing opcode: addi, operands: ['r4', 'r1', '0x18']
Translated addi r4 r1 0x18 to: ['gc_env.r[4] = gc_env.r[1] + 24; // addi r4, r1, 0x18']
Translated bl fn_80014EF8 to: fn_80014EF8();
Translated mr r4 r27 to: gc_env.r[4] = gc_env.r[27]; // Move register
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Translated mr r5 r31 to: gc_env.r[5] = gc_env.r[31]; // Move register
Translated bl fn_80017FEC to: fn_80017FEC();
Processing opcode: lwz, operands: ['r4', '0x0(r30)']
Translated lwz r4 0x0(r30) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r4, (r30)']
Processing opcode: addi, operands: ['r27', 'r27', '0x1']
Translated addi r27 r27 0x1 to: ['gc_env.r[27] += 1; // addi r27, r27, 0x1']
Processing opcode: addi, operands: ['r0', 'r4', '0x8']
Translated addi r0 r4 0x8 to: ['gc_env.r[0] = gc_env.r[4] + 8; // addi r0, r4, 0x8']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Translated cmplw r27 r28 to: gc_env.cr[0] = ((uint32_t)gc_env.r[27] == (uint32_t)gc_env.r[28]) ? 0 : ((uint32_t)gc_env.r[27] < (uint32_t)gc_env.r[28] ? -1 : 1); // Logical compare word
Translated bgt .L_8001712C to: ['if (gc_env.cr[0] & 0x4) goto L_8001712C; // bgt .L_8001712C']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800170C4 to: if (gc_env.cr[0] == 0) goto L_800170C4;
Processing opcode: lbz, operands: ['r0', '0x0(r26)']
Translated lbz r0 0x0(r26) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[26] + 0x0); // lbz r0, 0x0(r26)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80017144 to: if (gc_env.cr[0] == 0) goto L_80017144;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Processing opcode: li, operands: ['r3', '0x702']
Translated li r3 0x702 to: ['gc_env.r[3] = 0x702; // li r3, 0x702']
Translated lis r5 gTRKExceptionStatus_8001BAA4@ha to: ['gc_env.r[5] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r5, gTRKExceptionStatus_8001BAA4@ha']
Processing opcode: lwz, operands: ['r4', '0x8(r1)']
Translated lwz r4 0x8(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r4, 0x8(r1)']
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r5', 'r5', 'gTRKExceptionStatus_8001BAA4@l']
Translated addi r5 r5 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[5] = gc_env.r[5] + ((uint32_t)&gTRKExceptionStatus_8001BAA4 & 0xFFFF); // addi r5, r5, gTRKExceptionStatus_8001BAA4@l']
Processing opcode: stw, operands: ['r4', '0x0(r5)']
Translated stw r4 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[4]); // stw r4, (r5)']
Processing opcode: stw, operands: ['r0', '0x4(r5)']
Translated stw r0 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[0]); // stw r0, 0x4(r5)']
Processing opcode: lwz, operands: ['r4', '0x10(r1)']
Translated lwz r4 0x10(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r4, 0x10(r1)']
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: stw, operands: ['r4', '0x8(r5)']
Translated stw r4 0x8(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x8, gc_env.r[4]); // stw r4, 0x8(r5)']
Processing opcode: stw, operands: ['r0', '0xc(r5)']
Translated stw r0 0xc(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0xC, gc_env.r[0]); // stw r0, 0xC(r5)']
Translated lmw r25 0x24(r1) to: ['gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r25, 0x24(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r25, 0x24(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r25, 0x24(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r25, 0x24(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r25, 0x24(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x38); // lmw r25, 0x24(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lmw r25, 0x24(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x40']
Translated addi r1 r1 0x40 to: ['gc_env.r[1] += 64; // addi r1, r1, 0x40']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Translated mr r30 r6 to: gc_env.r[30] = gc_env.r[6]; // Move register
Translated cmplwi r4 0x60 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x60) ? 0 : ((uint32_t)gc_env.r[4] < 0x60 ? -1 : 1); // Logical compare with immediate
Translated ble .L_800171A8 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_800171A8; // ble .L_800171A8']
Processing opcode: li, operands: ['r3', '0x701']
Translated li r3 0x701 to: ['gc_env.r[3] = 0x701; // li r3, 0x701']
Translated b .L_800172E0 to: goto L_800172E0;
Translated lis r6 gTRKExceptionStatus_8001BAA4@ha to: ['gc_env.r[6] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r6, gTRKExceptionStatus_8001BAA4@ha']
Translated cmplw r3 r4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[4]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[4] ? -1 : 1); // Logical compare word
Processing opcode: addi, operands: ['r9', 'r6', 'gTRKExceptionStatus_8001BAA4@l']
Translated addi r9 r6 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[9] = gc_env.r[6] + ((uint32_t)&gTRKExceptionStatus_8001BAA4 & 0xFFFF); // addi r9, r6, gTRKExceptionStatus_8001BAA4@l']
Processing opcode: lwz, operands: ['r8', '0x0(r9)']
Translated lwz r8 0x0(r9) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[9]); // lwz r8, (r9)']
Processing opcode: addi, operands: ['r31', 'r9', '0xd']
Translated addi r31 r9 0xd to: ['gc_env.r[31] = gc_env.r[9] + 13; // addi r31, r9, 0xd']
Processing opcode: lwz, operands: ['r6', '0x4(r9)']
Translated lwz r6 0x4(r9) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[9] + 0x4); // lwz r6, 0x4(r9)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r8', '0x8(r1)']
Translated stw r8 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[8]); // stw r8, 0x8(r1)']
Processing opcode: stw, operands: ['r6', '0xc(r1)']
Translated stw r6 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[6]); // stw r6, 0xC(r1)']
Processing opcode: lwz, operands: ['r8', '0x8(r9)']
Translated lwz r8 0x8(r9) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[9] + 0x8); // lwz r8, 0x8(r9)']
Processing opcode: lwz, operands: ['r6', '0xc(r9)']
Translated lwz r6 0xc(r9) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[9] + 0xC); // lwz r6, 0xC(r9)']
Processing opcode: stw, operands: ['r8', '0x10(r1)']
Translated stw r8 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[8]); // stw r8, 0x10(r1)']
Processing opcode: stw, operands: ['r6', '0x14(r1)']
Translated stw r6 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[6]); // stw r6, 0x14(r1)']
Processing opcode: stb, operands: ['r0', '0x0(r31)']
Translated stb r0 0x0(r31) to: ['gc_mem_write8(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stb r0, (r31)']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Translated bgt .L_800172A0 to: ['if (gc_env.cr[0] & 0x4) goto L_800172A0; // bgt .L_800172A0']
Processing opcode: subf, operands: ['r4', 'r3', 'r4']
Translated subf r4 r3 r4 to: ['gc_env.r[4] = gc_env.r[4] - gc_env.r[3]; // subf r4, r3, r4']
Processing opcode: lwz, operands: ['r0', '0x0(r30)']
Translated lwz r0 0x0(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r0, (r30)']
Processing opcode: addi, operands: ['r8', 'r4', '0x1']
Translated addi r8 r4 0x1 to: ['gc_env.r[8] = gc_env.r[4] + 1; // addi r8, r4, 0x1']
Translated cmpwi r7 0x0 to: gc_env.cr[0] = (gc_env.r[7] == 0x0) ? 0 : (gc_env.r[7] < 0x0 ? -1 : 1); // Compare with immediate
Translated slwi r6 r8 2 to: ['gc_env.r[6] = gc_env.r[8] << 2; // slwi r6, r8, 2']
Translated lis r4 gTRKCPUState@ha to: ['gc_env.r[4] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r4, gTRKCPUState@ha']
Processing opcode: add, operands: ['r0', 'r0', 'r6']
Translated add r0 r0 r6 to: ['gc_env.r[0] = gc_env.r[0] + gc_env.r[6]; // add r0, r0, r6']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Processing opcode: addi, operands: ['r7', 'r4', 'gTRKCPUState@l']
Translated addi r7 r4 gTRKCPUState@l to: ['gc_env.r[7] = gc_env.r[4] + ((uint32_t)&gTRKCPUState & 0xFFFF); // addi r7, r4, gTRKCPUState@l']
Translated slwi r0 r3 2 to: ['gc_env.r[0] = gc_env.r[3] << 2; // slwi r0, r3, 2']
Processing opcode: add, operands: ['r4', 'r7', 'r0']
Translated add r4 r7 r0 to: ['gc_env.r[4] = gc_env.r[7] + gc_env.r[0]; // add r4, r7, r0']
Processing opcode: addi, operands: ['r4', 'r4', '0x1a8']
Translated addi r4 r4 0x1a8 to: ['gc_env.r[4] += 424; // addi r4, r4, 0x1a8']
Translated beq .L_8001722C to: if (gc_env.cr[0] == 0) goto L_8001722C;
Translated mr r3 r5 to: gc_env.r[3] = gc_env.r[5]; // Move register
Translated mr r5 r8 to: gc_env.r[5] = gc_env.r[8]; // Move register
Translated bl fn_80014D48 to: fn_80014D48();
Translated b .L_800172A0 to: goto L_800172A0;
Processing opcode: addi, operands: ['r0', 'r7', '0x1ec']
Translated addi r0 r7 0x1ec to: ['gc_env.r[0] = gc_env.r[7] + 492; // addi r0, r7, 0x1ec']
Translated cmplw r4 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bgt .L_8001725C to: ['if (gc_env.cr[0] & 0x4) goto L_8001725C; // bgt .L_8001725C']
Processing opcode: subi, operands: ['r3', 'r6', '0x4']
Translated subi r3 r6 0x4 to: ['gc_env.r[3] = gc_env.r[6] - 4; // subi r3, r6, 4']
Processing opcode: addi, operands: ['r0', 'r7', '0x1e8']
Translated addi r0 r7 0x1e8 to: ['gc_env.r[0] = gc_env.r[7] + 488; // addi r0, r7, 0x1e8']
Processing opcode: add, operands: ['r3', 'r4', 'r3']
Translated add r3 r4 r3 to: ['gc_env.r[3] = gc_env.r[4] + gc_env.r[3]; // add r3, r4, r3']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated blt .L_8001725C to: ['if (gc_env.cr[0] & 0x8) goto L_8001725C; // blt .L_8001725C']
Translated lis r3 lbl_8001BA98@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001BA98 >> 16) & 0xFFFF; // lis r3, lbl_8001BA98@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001BA98@l']
Translated addi r3 r3 lbl_8001BA98@l to: ['gc_env.r[3] = (uint32_t)&lbl_8001BA98; // lis + addi lbl_8001BA98 (completing pattern)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stb, operands: ['r0', '0x0(r3)']
Translated stb r0 0x0(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3], gc_env.r[0]); // stb r0, (r3)']
Translated lis r3 gTRKCPUState@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r3, gTRKCPUState@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'gTRKCPUState@l']
Translated addi r3 r3 gTRKCPUState@l to: ['gc_env.r[3] = (uint32_t)&gTRKCPUState; // lis + addi gTRKCPUState (completing pattern)']
Processing opcode: addi, operands: ['r6', 'r3', '0x278']
Translated addi r6 r3 0x278 to: ['gc_env.r[6] = gc_env.r[3] + 632; // addi r6, r3, 0x278']
Translated cmplw r4 r6 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[6]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[6] ? -1 : 1); // Logical compare word
Translated bgt .L_80017294 to: ['if (gc_env.cr[0] & 0x4) goto L_80017294; // bgt .L_80017294']
Translated slwi r3 r8 2 to: ['gc_env.r[3] = gc_env.r[8] << 2; // slwi r3, r8, 2']
Processing opcode: subi, operands: ['r0', 'r3', '0x4']
Translated subi r0 r3 0x4 to: ['gc_env.r[0] = gc_env.r[3] - 4; // subi r0, r3, 4']
Processing opcode: add, operands: ['r0', 'r4', 'r0']
Translated add r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] + gc_env.r[0]; // add r0, r4, r0']
Translated cmplw r0 r6 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == (uint32_t)gc_env.r[6]) ? 0 : ((uint32_t)gc_env.r[0] < (uint32_t)gc_env.r[6] ? -1 : 1); // Logical compare word
Translated blt .L_80017294 to: ['if (gc_env.cr[0] & 0x8) goto L_80017294; // blt .L_80017294']
Translated lis r3 lbl_8001BA98@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001BA98 >> 16) & 0xFFFF; // lis r3, lbl_8001BA98@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001BA98@l']
Translated addi r3 r3 lbl_8001BA98@l to: ['gc_env.r[3] = (uint32_t)&lbl_8001BA98; // lis + addi lbl_8001BA98 (completing pattern)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stb, operands: ['r0', '0x1(r3)']
Translated stb r0 0x1(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x1, gc_env.r[0]); // stb r0, 0x1(r3)']
Translated mr r3 r5 to: gc_env.r[3] = gc_env.r[5]; // Move register
Translated mr r5 r8 to: gc_env.r[5] = gc_env.r[8]; // Move register
Translated bl fn_8001501C to: fn_8001501C();
Processing opcode: lbz, operands: ['r0', '0x0(r31)']
Translated lbz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x0); // lbz r0, 0x0(r31)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800172B8 to: if (gc_env.cr[0] == 0) goto L_800172B8;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Processing opcode: li, operands: ['r3', '0x702']
Translated li r3 0x702 to: ['gc_env.r[3] = 0x702; // li r3, 0x702']
Translated lis r5 gTRKExceptionStatus_8001BAA4@ha to: ['gc_env.r[5] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r5, gTRKExceptionStatus_8001BAA4@ha']
Processing opcode: lwz, operands: ['r4', '0x8(r1)']
Translated lwz r4 0x8(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r4, 0x8(r1)']
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r5', 'r5', 'gTRKExceptionStatus_8001BAA4@l']
Translated addi r5 r5 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[5] = gc_env.r[5] + ((uint32_t)&gTRKExceptionStatus_8001BAA4 & 0xFFFF); // addi r5, r5, gTRKExceptionStatus_8001BAA4@l']
Processing opcode: stw, operands: ['r4', '0x0(r5)']
Translated stw r4 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[4]); // stw r4, (r5)']
Processing opcode: stw, operands: ['r0', '0x4(r5)']
Translated stw r0 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[0]); // stw r0, 0x4(r5)']
Processing opcode: lwz, operands: ['r4', '0x10(r1)']
Translated lwz r4 0x10(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r4, 0x10(r1)']
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: stw, operands: ['r4', '0x8(r5)']
Translated stw r4 0x8(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x8, gc_env.r[4]); // stw r4, 0x8(r5)']
Processing opcode: stw, operands: ['r0', '0xc(r5)']
Translated stw r0 0xc(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0xC, gc_env.r[0]); // stw r0, 0xC(r5)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x40(r1)']
Translated stwu r1 -0x40(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x40, gc_env.r[1]); // stwu r1, -0x40(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x40;']
Translated stmw r25 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[25]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[26]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[27]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[28]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[29]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[30]); // stmw r25, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[31]); // stmw r25, 0x24(r1)']
Translated mr r25 r3 to: gc_env.r[25] = gc_env.r[3]; // Move register
Translated mr r27 r4 to: gc_env.r[27] = gc_env.r[4]; // Move register
Translated mr r28 r5 to: gc_env.r[28] = gc_env.r[5]; // Move register
Translated mr r29 r6 to: gc_env.r[29] = gc_env.r[6]; // Move register
Translated mr r30 r7 to: gc_env.r[30] = gc_env.r[7]; // Move register
Translated cmplwi r27 0x1f to: gc_env.cr[0] = ((uint32_t)gc_env.r[27] == 0x1f) ? 0 : ((uint32_t)gc_env.r[27] < 0x1f ? -1 : 1); // Logical compare with immediate
Translated ble .L_8001732C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8001732C; // ble .L_8001732C']
Processing opcode: li, operands: ['r3', '0x701']
Translated li r3 0x701 to: ['gc_env.r[3] = 0x701; // li r3, 0x701']
Translated b .L_80017460 to: goto L_80017460;
Translated lis r4 gTRKExceptionStatus_8001BAA4@ha to: ['gc_env.r[4] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r4, gTRKExceptionStatus_8001BAA4@ha']
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Processing opcode: addi, operands: ['r7', 'r4', 'gTRKExceptionStatus_8001BAA4@l']
Translated addi r7 r4 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[7] = gc_env.r[4] + ((uint32_t)&gTRKExceptionStatus_8001BAA4 & 0xFFFF); // addi r7, r4, gTRKExceptionStatus_8001BAA4@l']
Processing opcode: lwz, operands: ['r5', '0x0(r7)']
Translated lwz r5 0x0(r7) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[7]); // lwz r5, (r7)']
Processing opcode: addi, operands: ['r31', 'r7', '0xd']
Translated addi r31 r7 0xd to: ['gc_env.r[31] = gc_env.r[7] + 13; // addi r31, r7, 0xd']
Processing opcode: lwz, operands: ['r0', '0x4(r7)']
Translated lwz r0 0x4(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x4); // lwz r0, 0x4(r7)']
Processing opcode: li, operands: ['r26', '0x0']
Translated li r26 0x0 to: ['gc_env.r[26] = 0x0; // li r26, 0x0']
Processing opcode: li, operands: ['r4', '0x398']
Translated li r4 0x398 to: ['gc_env.r[4] = 0x398; // li r4, 0x398']
Processing opcode: stw, operands: ['r5', '0xc(r1)']
Translated stw r5 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[5]); // stw r5, 0xC(r1)']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: stw, operands: ['r0', '0x10(r1)']
Translated stw r0 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[0]); // stw r0, 0x10(r1)']
Processing opcode: lwz, operands: ['r6', '0x8(r7)']
Translated lwz r6 0x8(r7) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x8); // lwz r6, 0x8(r7)']
Processing opcode: lwz, operands: ['r0', '0xc(r7)']
Translated lwz r0 0xc(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0xC); // lwz r0, 0xC(r7)']
Processing opcode: stw, operands: ['r6', '0x14(r1)']
Translated stw r6 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[6]); // stw r6, 0x14(r1)']
Processing opcode: stw, operands: ['r0', '0x18(r1)']
Translated stw r0 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[0]); // stw r0, 0x18(r1)']
Processing opcode: stb, operands: ['r26', '0x0(r31)']
Translated stb r26 0x0(r31) to: ['gc_mem_write8(gc_env.ram, gc_env.r[31], gc_env.r[26]); // stb r26, (r31)']
Translated bl fn_80017EC4 to: fn_80017EC4();
Processing opcode: lwz, operands: ['r0', '0x8(r1)']
Translated lwz r0 0x8(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r0, 0x8(r1)']
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Processing opcode: li, operands: ['r4', '0x398']
Translated li r4 0x398 to: ['gc_env.r[4] = 0x398; // li r4, 0x398']
Translated oris r0 r0 0xa000 to: ['gc_env.r[0] = gc_env.r[0] | 0xA0000000; // oris r0, r0, 0xA000']
Processing opcode: stw, operands: ['r0', '0x8(r1)']
Translated stw r0 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stw r0, 0x8(r1)']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80017EC4 to: fn_80017EC4();
Processing opcode: stw, operands: ['r26', '0x8(r1)']
Translated stw r26 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[26]); // stw r26, 0x8(r1)']
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Processing opcode: li, operands: ['r4', '0x390']
Translated li r4 0x390 to: ['gc_env.r[4] = 0x390; // li r4, 0x390']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80017EC4 to: fn_80017EC4();
Processing opcode: stw, operands: ['r26', '0x0(r29)']
Translated stw r26 0x0(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29], gc_env.r[26]); // stw r26, (r29)']
Translated mr r26 r25 to: gc_env.r[26] = gc_env.r[25]; // Move register
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_800173B0 to: goto L_800173B0;
Translated b .L_800173B4 to: goto L_800173B4;
Translated b .L_80017410 to: goto L_80017410;
Translated cmpwi r30 0x0 to: gc_env.cr[0] = (gc_env.r[30] == 0x0) ? 0 : (gc_env.r[30] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800173E4 to: if (gc_env.cr[0] == 0) goto L_800173E4;
Translated mr r4 r26 to: gc_env.r[4] = gc_env.r[26]; // Move register
Processing opcode: addi, operands: ['r3', 'r1', '0x1c']
Translated addi r3 r1 0x1c to: ['gc_env.r[3] = gc_env.r[1] + 28; // addi r3, r1, 0x1c']
Translated mr r5 r30 to: gc_env.r[5] = gc_env.r[30]; // Move register
Translated bl fn_80017F74 to: fn_80017F74();
Processing opcode: lwz, operands: ['r5', '0x1c(r1)']
Translated lwz r5 0x1c(r1) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r5, 0x1C(r1)']
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Processing opcode: lwz, operands: ['r6', '0x20(r1)']
Translated lwz r6 0x20(r1) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r6, 0x20(r1)']
Translated bl fn_80014C58 to: fn_80014C58();
Translated b .L_80017400 to: goto L_80017400;
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Processing opcode: addi, operands: ['r4', 'r1', '0x1c']
Translated addi r4 r1 0x1c to: ['gc_env.r[4] = gc_env.r[1] + 28; // addi r4, r1, 0x1c']
Translated bl fn_80014EF8 to: fn_80014EF8();
Translated mr r4 r26 to: gc_env.r[4] = gc_env.r[26]; // Move register
Processing opcode: addi, operands: ['r3', 'r1', '0x1c']
Translated addi r3 r1 0x1c to: ['gc_env.r[3] = gc_env.r[1] + 28; // addi r3, r1, 0x1c']
Translated mr r5 r30 to: gc_env.r[5] = gc_env.r[30]; // Move register
Translated bl fn_80017F74 to: fn_80017F74();
Processing opcode: lwz, operands: ['r4', '0x0(r29)']
Translated lwz r4 0x0(r29) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[29]); // lwz r4, (r29)']
Processing opcode: addi, operands: ['r26', 'r26', '0x1']
Translated addi r26 r26 0x1 to: ['gc_env.r[26] += 1; // addi r26, r26, 0x1']
Processing opcode: addi, operands: ['r0', 'r4', '0x8']
Translated addi r0 r4 0x8 to: ['gc_env.r[0] = gc_env.r[4] + 8; // addi r0, r4, 0x8']
Processing opcode: stw, operands: ['r0', '0x0(r29)']
Translated stw r0 0x0(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29], gc_env.r[0]); // stw r0, (r29)']
Translated cmplw r26 r27 to: gc_env.cr[0] = ((uint32_t)gc_env.r[26] == (uint32_t)gc_env.r[27]) ? 0 : ((uint32_t)gc_env.r[26] < (uint32_t)gc_env.r[27] ? -1 : 1); // Logical compare word
Translated bgt .L_80017420 to: ['if (gc_env.cr[0] & 0x4) goto L_80017420; // bgt .L_80017420']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800173B8 to: if (gc_env.cr[0] == 0) goto L_800173B8;
Processing opcode: lbz, operands: ['r0', '0x0(r31)']
Translated lbz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x0); // lbz r0, 0x0(r31)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80017438 to: if (gc_env.cr[0] == 0) goto L_80017438;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x0(r29)']
Translated stw r0 0x0(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29], gc_env.r[0]); // stw r0, (r29)']
Processing opcode: li, operands: ['r3', '0x702']
Translated li r3 0x702 to: ['gc_env.r[3] = 0x702; // li r3, 0x702']
Translated lis r5 gTRKExceptionStatus_8001BAA4@ha to: ['gc_env.r[5] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r5, gTRKExceptionStatus_8001BAA4@ha']
Processing opcode: lwz, operands: ['r4', '0xc(r1)']
Translated lwz r4 0xc(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r4, 0xC(r1)']
Processing opcode: lwz, operands: ['r0', '0x10(r1)']
Translated lwz r0 0x10(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r0, 0x10(r1)']
Processing opcode: addi, operands: ['r5', 'r5', 'gTRKExceptionStatus_8001BAA4@l']
Translated addi r5 r5 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[5] = gc_env.r[5] + ((uint32_t)&gTRKExceptionStatus_8001BAA4 & 0xFFFF); // addi r5, r5, gTRKExceptionStatus_8001BAA4@l']
Processing opcode: stw, operands: ['r4', '0x0(r5)']
Translated stw r4 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[4]); // stw r4, (r5)']
Processing opcode: stw, operands: ['r0', '0x4(r5)']
Translated stw r0 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[0]); // stw r0, 0x4(r5)']
Processing opcode: lwz, operands: ['r4', '0x14(r1)']
Translated lwz r4 0x14(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r4, 0x14(r1)']
Processing opcode: lwz, operands: ['r0', '0x18(r1)']
Translated lwz r0 0x18(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r0, 0x18(r1)']
Processing opcode: stw, operands: ['r4', '0x8(r5)']
Translated stw r4 0x8(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x8, gc_env.r[4]); // stw r4, 0x8(r5)']
Processing opcode: stw, operands: ['r0', '0xc(r5)']
Translated stw r0 0xc(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0xC, gc_env.r[0]); // stw r0, 0xC(r5)']
Translated lmw r25 0x24(r1) to: ['gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r25, 0x24(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r25, 0x24(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r25, 0x24(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r25, 0x24(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r25, 0x24(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x38); // lmw r25, 0x24(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lmw r25, 0x24(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x40']
Translated addi r1 r1 0x40 to: ['gc_env.r[1] += 64; // addi r1, r1, 0x40']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', '0x0(r3)']
Translated stb r0 0x0(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3], gc_env.r[0]); // stb r0, (r3)']
Processing opcode: li, operands: ['r0', '0x8']
Translated li r0 0x8 to: ['gc_env.r[0] = 0x8; // li r0, 0x8']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Processing opcode: stb, operands: ['r0', '0x1(r3)']
Translated stb r0 0x1(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x1, gc_env.r[0]); // stb r0, 0x1(r3)']
Processing opcode: li, operands: ['r0', '0xa']
Translated li r0 0xa to: ['gc_env.r[0] = 0xa; // li r0, 0xa']
Processing opcode: stb, operands: ['r4', '0x2(r3)']
Translated stb r4 0x2(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x2, gc_env.r[4]); // stb r4, 0x2(r3)']
Processing opcode: stb, operands: ['r0', '0x3(r3)']
Translated stb r0 0x3(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x3, gc_env.r[0]); // stb r0, 0x3(r3)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Processing opcode: li, operands: ['r0', '0x7a']
Translated li r0 0x7a to: ['gc_env.r[0] = 0x7a; // li r0, 0x7a']
Processing opcode: stb, operands: ['r0', '0x0(r3)']
Translated stb r0 0x0(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3], gc_env.r[0]); // stb r0, (r3)']
Processing opcode: li, operands: ['r7', '0x0']
Translated li r7 0x0 to: ['gc_env.r[7] = 0x0; // li r7, 0x0']
Processing opcode: li, operands: ['r0', '0x4f']
Translated li r0 0x4f to: ['gc_env.r[0] = 0x4f; // li r0, 0x4f']
Processing opcode: stb, operands: ['r7', '0x1(r3)']
Translated stb r7 0x1(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x1, gc_env.r[7]); // stb r7, 0x1(r3)']
Processing opcode: li, operands: ['r6', '0x7']
Translated li r6 0x7 to: ['gc_env.r[6] = 0x7; // li r6, 0x7']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: stb, operands: ['r0', '0x2(r3)']
Translated stb r0 0x2(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x2, gc_env.r[0]); // stb r0, 0x2(r3)']
Processing opcode: li, operands: ['r4', '0x3']
Translated li r4 0x3 to: ['gc_env.r[4] = 0x3; // li r4, 0x3']
Processing opcode: li, operands: ['r0', '0x80']
Translated li r0 0x80 to: ['gc_env.r[0] = 0x80; // li r0, 0x80']
Processing opcode: stb, operands: ['r6', '0x3(r3)']
Translated stb r6 0x3(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x3, gc_env.r[6]); // stb r6, 0x3(r3)']
Processing opcode: stb, operands: ['r7', '0x4(r3)']
Translated stb r7 0x4(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[7]); // stb r7, 0x4(r3)']
Processing opcode: stb, operands: ['r7', '0x5(r3)']
Translated stb r7 0x5(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x5, gc_env.r[7]); // stb r7, 0x5(r3)']
Processing opcode: stb, operands: ['r7', '0x6(r3)']
Translated stb r7 0x6(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x6, gc_env.r[7]); // stb r7, 0x6(r3)']
Processing opcode: stb, operands: ['r7', '0x7(r3)']
Translated stb r7 0x7(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x7, gc_env.r[7]); // stb r7, 0x7(r3)']
Processing opcode: stb, operands: ['r7', '0x8(r3)']
Translated stb r7 0x8(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[7]); // stb r7, 0x8(r3)']
Processing opcode: stb, operands: ['r7', '0x9(r3)']
Translated stb r7 0x9(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x9, gc_env.r[7]); // stb r7, 0x9(r3)']
Processing opcode: stb, operands: ['r7', '0xa(r3)']
Translated stb r7 0xa(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0xA, gc_env.r[7]); // stb r7, 0xA(r3)']
Processing opcode: stb, operands: ['r7', '0xb(r3)']
Translated stb r7 0xb(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0xB, gc_env.r[7]); // stb r7, 0xB(r3)']
Processing opcode: stb, operands: ['r7', '0xc(r3)']
Translated stb r7 0xc(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[7]); // stb r7, 0xC(r3)']
Processing opcode: stb, operands: ['r7', '0xd(r3)']
Translated stb r7 0xd(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0xD, gc_env.r[7]); // stb r7, 0xD(r3)']
Processing opcode: stb, operands: ['r7', '0xe(r3)']
Translated stb r7 0xe(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0xE, gc_env.r[7]); // stb r7, 0xE(r3)']
Processing opcode: stb, operands: ['r7', '0xf(r3)']
Translated stb r7 0xf(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0xF, gc_env.r[7]); // stb r7, 0xF(r3)']
Processing opcode: stb, operands: ['r5', '0x10(r3)']
Translated stb r5 0x10(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x10, gc_env.r[5]); // stb r5, 0x10(r3)']
Processing opcode: stb, operands: ['r7', '0x11(r3)']
Translated stb r7 0x11(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x11, gc_env.r[7]); // stb r7, 0x11(r3)']
Processing opcode: stb, operands: ['r4', '0x12(r3)']
Translated stb r4 0x12(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x12, gc_env.r[4]); // stb r4, 0x12(r3)']
Processing opcode: stb, operands: ['r7', '0x13(r3)']
Translated stb r7 0x13(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x13, gc_env.r[7]); // stb r7, 0x13(r3)']
Processing opcode: stb, operands: ['r7', '0x14(r3)']
Translated stb r7 0x14(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x14, gc_env.r[7]); // stb r7, 0x14(r3)']
Processing opcode: stb, operands: ['r7', '0x15(r3)']
Translated stb r7 0x15(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x15, gc_env.r[7]); // stb r7, 0x15(r3)']
Processing opcode: stb, operands: ['r7', '0x16(r3)']
Translated stb r7 0x16(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x16, gc_env.r[7]); // stb r7, 0x16(r3)']
Processing opcode: stb, operands: ['r7', '0x17(r3)']
Translated stb r7 0x17(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x17, gc_env.r[7]); // stb r7, 0x17(r3)']
Processing opcode: stb, operands: ['r7', '0x18(r3)']
Translated stb r7 0x18(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x18, gc_env.r[7]); // stb r7, 0x18(r3)']
Processing opcode: stb, operands: ['r7', '0x19(r3)']
Translated stb r7 0x19(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x19, gc_env.r[7]); // stb r7, 0x19(r3)']
Processing opcode: stb, operands: ['r4', '0x1a(r3)']
Translated stb r4 0x1a(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x1A, gc_env.r[4]); // stb r4, 0x1A(r3)']
Processing opcode: stb, operands: ['r7', '0x1b(r3)']
Translated stb r7 0x1b(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x1B, gc_env.r[7]); // stb r7, 0x1B(r3)']
Processing opcode: stb, operands: ['r7', '0x1c(r3)']
Translated stb r7 0x1c(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x1C, gc_env.r[7]); // stb r7, 0x1C(r3)']
Processing opcode: stb, operands: ['r7', '0x1d(r3)']
Translated stb r7 0x1d(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x1D, gc_env.r[7]); // stb r7, 0x1D(r3)']
Processing opcode: stb, operands: ['r7', '0x1e(r3)']
Translated stb r7 0x1e(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x1E, gc_env.r[7]); // stb r7, 0x1E(r3)']
Processing opcode: stb, operands: ['r0', '0x1f(r3)']
Translated stb r0 0x1f(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x1F, gc_env.r[0]); // stb r0, 0x1F(r3)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', '0x0(r31)']
Translated stb r0 0x0(r31) to: ['gc_mem_write8(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stb r0, (r31)']
Translated bl fn_80018794 to: fn_80018794();
Processing opcode: stb, operands: ['r3', '0x1(r31)']
Translated stb r3 0x1(r31) to: ['gc_mem_write8(gc_env.ram, gc_env.r[31] + 0x1, gc_env.r[3]); // stb r3, 0x1(r31)']
Translated lis r3 lbl_8001CE78@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001CE78 >> 16) & 0xFFFF; // lis r3, lbl_8001CE78@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001CE78@l']
Translated addi r3 r3 lbl_8001CE78@l to: ['gc_env.r[3] = (uint32_t)&lbl_8001CE78; // lis + addi lbl_8001CE78 (completing pattern)']
Processing opcode: lwz, operands: ['r3', '0x0(r3)']
Translated lwz r3 0x0(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r3, (r3)']
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Processing opcode: li, operands: ['r0', '0x8']
Translated li r0 0x8 to: ['gc_env.r[0] = 0x8; // li r0, 0x8']
Translated clrlwi r3 r3 24 to: ['gc_env.r[3] = gc_env.r[3] & 0xFF; // clrlwi r3, r3, 24']
Processing opcode: stb, operands: ['r3', '0x2(r31)']
Translated stb r3 0x2(r31) to: ['gc_mem_write8(gc_env.ram, gc_env.r[31] + 0x2, gc_env.r[3]); // stb r3, 0x2(r31)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r4', '0x3(r31)']
Translated stb r4 0x3(r31) to: ['gc_mem_write8(gc_env.ram, gc_env.r[31] + 0x3, gc_env.r[4]); // stb r4, 0x3(r31)']
Processing opcode: stb, operands: ['r0', '0x4(r31)']
Translated stb r0 0x4(r31) to: ['gc_mem_write8(gc_env.ram, gc_env.r[31] + 0x4, gc_env.r[0]); // stb r0, 0x4(r31)']
Processing opcode: stb, operands: ['r4', '0x5(r31)']
Translated stb r4 0x5(r31) to: ['gc_mem_write8(gc_env.ram, gc_env.r[31] + 0x5, gc_env.r[4]); // stb r4, 0x5(r31)']
Processing opcode: stb, operands: ['r0', '0x6(r31)']
Translated stb r0 0x6(r31) to: ['gc_mem_write8(gc_env.ram, gc_env.r[31] + 0x6, gc_env.r[0]); // stb r0, 0x6(r31)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mtsrr0 r2 to: ['gc_env.srr0 = gc_env.r[2]; // mtsrr0 r2']
Translated mtsrr1 r4 to: ['gc_env.srr1 = gc_env.r[4]; // mtsrr1 r4']
Translated mfsprg r4 3 to: ['gc_env.r[4] = gc_env.sprg[3]; // mfsprg r4, 3']
Translated mfcr r2 to: ['gc_env.r[2] = (gc_env.cr[0] << 28) | (gc_env.cr[1] << 24) | (gc_env.cr[2] << 20) | (gc_env.cr[3] << 16) | (gc_env.cr[4] << 12) | (gc_env.cr[5] << 8) | (gc_env.cr[6] << 4) | (gc_env.cr[7] << 0); // mfcr r2']
Translated mtsprg 3 r2 to: ['gc_env.sprg[3] = gc_env.r[2]; // mtsprg 3, r2']
Translated lis r2 gTRKState@h to: ['gc_env.r[2] = ((uint32_t)&gTRKState >> 16) & 0xFFFF; // lis r2, gTRKState@h']
Translated ori r2 r2 gTRKState@l to: ['gc_env.r[2] = (uint32_t)&gTRKState; // lis + ori gTRKState']
Processing opcode: lwz, operands: ['r2', '0x8c(r2)']
Translated lwz r2 0x8c(r2) to: ['gc_env.r[2] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x8C); // lwz r2, 0x8C(r2)']
Translated ori r2 r2 0x8002 to: ['gc_env.r[2] |= 32770; // ori r2, r2, 0x8002']
Translated xori r2 r2 0x8002 to: ['gc_env.r[2] = gc_env.r[2] ^ 32770; // xori r2, r2, 0x8002']
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated mtmsr r2 to: gc_env.msr = gc_env.r[2]; // Move to machine state register
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated lis r2 TRK_saved_exceptionID_8001E850@h to: ['gc_env.r[2] = ((uint32_t)&TRK_saved_exceptionID_8001E850 >> 16) & 0xFFFF; // lis r2, TRK_saved_exceptionID_8001E850@h']
Translated ori r2 r2 TRK_saved_exceptionID_8001E850@l to: ['gc_env.r[2] = (uint32_t)&TRK_saved_exceptionID_8001E850; // lis + ori TRK_saved_exceptionID_8001E850']
Processing opcode: sth, operands: ['r3', '0x0(r2)']
Translated sth r3 0x0(r2) to: ['gc_mem_write16(gc_env.ram, gc_env.r[2], gc_env.r[3]); // sth r3, (r2)']
Translated cmpwi r3 0x500 to: gc_env.cr[0] = (gc_env.r[3] == 0x500) ? 0 : (gc_env.r[3] < 0x500 ? -1 : 1); // Compare with immediate
Translated bne .L_80017670 to: if (gc_env.cr[0] != 0) goto L_80017670;
Translated lis r2 gTRKCPUState@h to: ['gc_env.r[2] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r2, gTRKCPUState@h']
Translated ori r2 r2 gTRKCPUState@l to: ['gc_env.r[2] = (uint32_t)&gTRKCPUState; // lis + ori gTRKCPUState']
Translated mflr r3 to: gc_env.r[3] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r3', '0x42c(r2)']
Translated stw r3 0x42c(r2) to: ['gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x42C, gc_env.r[3]); // stw r3, 0x42C(r2)']
Translated bl TRKUARTInterruptHandler to: TRKUARTInterruptHandler();
Translated lis r2 gTRKCPUState@h to: ['gc_env.r[2] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r2, gTRKCPUState@h']
Translated ori r2 r2 gTRKCPUState@l to: ['gc_env.r[2] = (uint32_t)&gTRKCPUState; // lis + ori gTRKCPUState']
Processing opcode: lwz, operands: ['r3', '0x42c(r2)']
Translated lwz r3 0x42c(r2) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x42C); // lwz r3, 0x42C(r2)']
Translated mtlr r3 to: gc_env.lr = gc_env.r[3]; // Move to link register
Translated lis r2 gTRKState@h to: ['gc_env.r[2] = ((uint32_t)&gTRKState >> 16) & 0xFFFF; // lis r2, gTRKState@h']
Translated ori r2 r2 gTRKState@l to: ['gc_env.r[2] = (uint32_t)&gTRKState; // lis + ori gTRKState']
Processing opcode: lwz, operands: ['r2', '0xa0(r2)']
Translated lwz r2 0xa0(r2) to: ['gc_env.r[2] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0xA0); // lwz r2, 0xA0(r2)']
Processing opcode: lbz, operands: ['r2', '0x0(r2)']
Translated lbz r2 0x0(r2) to: ['gc_env.r[2] = gc_mem_read8(gc_env.ram, gc_env.r[2] + 0x0); // lbz r2, 0x0(r2)']
Translated cmpwi r2 0x0 to: gc_env.cr[0] = (gc_env.r[2] == 0x0) ? 0 : (gc_env.r[2] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80017654 to: if (gc_env.cr[0] == 0) goto L_80017654;
Translated lis r2 gTRKExceptionStatus_8001BAA4@h to: ['gc_env.r[2] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r2, gTRKExceptionStatus_8001BAA4@h']
Translated ori r2 r2 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[2] = (uint32_t)&gTRKExceptionStatus_8001BAA4; // lis + ori gTRKExceptionStatus_8001BAA4']
Processing opcode: lbz, operands: ['r2', '0xc(r2)']
Translated lbz r2 0xc(r2) to: ['gc_env.r[2] = gc_mem_read8(gc_env.ram, gc_env.r[2] + 0xc); // lbz r2, 0xc(r2)']
Translated cmpwi r2 0x1 to: gc_env.cr[0] = (gc_env.r[2] == 0x1) ? 0 : (gc_env.r[2] < 0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_80017654 to: if (gc_env.cr[0] == 0) goto L_80017654;
Translated lis r2 gTRKState@h to: ['gc_env.r[2] = ((uint32_t)&gTRKState >> 16) & 0xFFFF; // lis r2, gTRKState@h']
Translated ori r2 r2 gTRKState@l to: ['gc_env.r[2] = (uint32_t)&gTRKState; // lis + ori gTRKState']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: stb, operands: ['r3', '0x9c(r2)']
Translated stb r3 0x9c(r2) to: ['gc_mem_write8(gc_env.ram, gc_env.r[2] + 0x9C, gc_env.r[3]); // stb r3, 0x9C(r2)']
Translated b .L_80017670 to: goto L_80017670;
Translated lis r2 gTRKSaveState@h to: ['gc_env.r[2] = ((uint32_t)&gTRKSaveState >> 16) & 0xFFFF; // lis r2, gTRKSaveState@h']
Translated ori r2 r2 gTRKSaveState@l to: ['gc_env.r[2] = (uint32_t)&gTRKSaveState; // lis + ori gTRKSaveState']
Processing opcode: lwz, operands: ['r3', '0x88(r2)']
Translated lwz r3 0x88(r2) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x88); // lwz r3, 0x88(r2)']
Translated mtcrf 255 r3 to: ['gc_env.cr[0] = (gc_env.r[3] >> 28) & 0xF;', 'gc_env.cr[1] = (gc_env.r[3] >> 24) & 0xF;', 'gc_env.cr[2] = (gc_env.r[3] >> 20) & 0xF;', 'gc_env.cr[3] = (gc_env.r[3] >> 16) & 0xF;', 'gc_env.cr[4] = (gc_env.r[3] >> 12) & 0xF;', 'gc_env.cr[5] = (gc_env.r[3] >> 8) & 0xF;', 'gc_env.cr[6] = (gc_env.r[3] >> 4) & 0xF;', 'gc_env.cr[7] = (gc_env.r[3] >> 0) & 0xF;', '// mtcrf 255, r3']
Processing opcode: lwz, operands: ['r3', '0xc(r2)']
Translated lwz r3 0xc(r2) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0xC); // lwz r3, 0xC(r2)']
Processing opcode: lwz, operands: ['r2', '0x8(r2)']
Translated lwz r2 0x8(r2) to: ['gc_env.r[2] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x8); // lwz r2, 0x8(r2)']
Translated rfi  to: ['// rfi: return from interrupt (not implemented)']
Translated lis r2 TRK_saved_exceptionID_8001E850@h to: ['gc_env.r[2] = ((uint32_t)&TRK_saved_exceptionID_8001E850 >> 16) & 0xFFFF; // lis r2, TRK_saved_exceptionID_8001E850@h']
Translated ori r2 r2 TRK_saved_exceptionID_8001E850@l to: ['gc_env.r[2] = (uint32_t)&TRK_saved_exceptionID_8001E850; // lis + ori TRK_saved_exceptionID_8001E850']
Processing opcode: lhz, operands: ['r3', '0x0(r2)']
Translated lhz r3 0x0(r2) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[2] + 0x0); // lhz r3, 0x0(r2)']
Translated lis r2 gTRKExceptionStatus_8001BAA4@h to: ['gc_env.r[2] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r2, gTRKExceptionStatus_8001BAA4@h']
Translated ori r2 r2 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[2] = (uint32_t)&gTRKExceptionStatus_8001BAA4; // lis + ori gTRKExceptionStatus_8001BAA4']
Processing opcode: lbz, operands: ['r2', '0xc(r2)']
Translated lbz r2 0xc(r2) to: ['gc_env.r[2] = gc_mem_read8(gc_env.ram, gc_env.r[2] + 0xc); // lbz r2, 0xc(r2)']
Translated cmpwi r2 0x0 to: gc_env.cr[0] = (gc_env.r[2] == 0x0) ? 0 : (gc_env.r[2] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne TRKExceptionHandler to: if (gc_env.cr[0] != 0) TRKExceptionHandler();
Translated lis r2 gTRKCPUState@h to: ['gc_env.r[2] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r2, gTRKCPUState@h']
Translated ori r2 r2 gTRKCPUState@l to: ['gc_env.r[2] = (uint32_t)&gTRKCPUState; // lis + ori gTRKCPUState']
Processing opcode: stw, operands: ['r0', '0x0(r2)']
Translated stw r0 0x0(r2) to: ['gc_mem_write32(gc_env.ram, gc_env.r[2], gc_env.r[0]); // stw r0, (r2)']
Processing opcode: stw, operands: ['r1', '0x4(r2)']
Translated stw r1 0x4(r2) to: ['gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x4, gc_env.r[1]); // stw r1, 0x4(r2)']
Translated mfsprg r0 1 to: ['gc_env.r[0] = gc_env.sprg[1]; // mfsprg r0, 1']
Processing opcode: stw, operands: ['r0', '0x8(r2)']
Translated stw r0 0x8(r2) to: ['gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x8, gc_env.r[0]); // stw r0, 0x8(r2)']
Processing opcode: sth, operands: ['r3', '0x2f8(r2)']
Translated sth r3 0x2f8(r2) to: ['gc_mem_write16(gc_env.ram, gc_env.r[2] + 0x2F8, gc_env.r[3]); // sth r3, 0x2F8(r2)']
Processing opcode: sth, operands: ['r3', '0x2fa(r2)']
Translated sth r3 0x2fa(r2) to: ['gc_mem_write16(gc_env.ram, gc_env.r[2] + 0x2FA, gc_env.r[3]); // sth r3, 0x2FA(r2)']
Translated mfsprg r0 2 to: ['gc_env.r[0] = gc_env.sprg[2]; // mfsprg r0, 2']
Processing opcode: stw, operands: ['r0', '0xc(r2)']
Translated stw r0 0xc(r2) to: ['gc_mem_write32(gc_env.ram, gc_env.r[2] + 0xC, gc_env.r[0]); // stw r0, 0xC(r2)']
Translated stmw r4 0x10(r2) to: ['gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x10, gc_env.r[4]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x14, gc_env.r[5]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x18, gc_env.r[6]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1C, gc_env.r[7]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x20, gc_env.r[8]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x24, gc_env.r[9]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x28, gc_env.r[10]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2C, gc_env.r[11]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x30, gc_env.r[12]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x34, gc_env.r[13]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x38, gc_env.r[14]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x3C, gc_env.r[15]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x40, gc_env.r[16]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x44, gc_env.r[17]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x48, gc_env.r[18]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x4C, gc_env.r[19]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x50, gc_env.r[20]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x54, gc_env.r[21]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x58, gc_env.r[22]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x5C, gc_env.r[23]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x60, gc_env.r[24]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x64, gc_env.r[25]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x68, gc_env.r[26]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x6C, gc_env.r[27]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x70, gc_env.r[28]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x74, gc_env.r[29]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x78, gc_env.r[30]); // stmw r4, 0x10(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x7C, gc_env.r[31]); // stmw r4, 0x10(r2)']
Translated mfsrr0 r27 to: ['gc_env.r[27] = gc_env.srr0; // mfsrr0 r27']
Translated mflr r28 to: gc_env.r[28] = gc_env.lr; // Move from link register
Translated mfsprg r29 3 to: ['gc_env.r[29] = gc_env.sprg[3]; // mfsprg r29, 3']
Translated mfctr r30 to: ['gc_env.r[30] = gc_env.ctr; // mfctr r30']
Translated mfxer r31 to: ['gc_env.r[31] = gc_env.xer; // mfxer r31']
Translated stmw r27 0x80(r2) to: ['gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x80, gc_env.r[27]); // stmw r27, 0x80(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x84, gc_env.r[28]); // stmw r27, 0x80(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x88, gc_env.r[29]); // stmw r27, 0x80(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x8C, gc_env.r[30]); // stmw r27, 0x80(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x90, gc_env.r[31]); // stmw r27, 0x80(r2)']
Translated bl TRKSaveExtended1Block to: TRKSaveExtended1Block();
Translated lis r2 gTRKExceptionStatus_8001BAA4@h to: ['gc_env.r[2] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r2, gTRKExceptionStatus_8001BAA4@h']
Translated ori r2 r2 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[2] = (uint32_t)&gTRKExceptionStatus_8001BAA4; // lis + ori gTRKExceptionStatus_8001BAA4']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: stb, operands: ['r3', '0xc(r2)']
Translated stb r3 0xc(r2) to: ['gc_mem_write8(gc_env.ram, gc_env.r[2] + 0xC, gc_env.r[3]); // stb r3, 0xC(r2)']
Translated lis r2 gTRKState@h to: ['gc_env.r[2] = ((uint32_t)&gTRKState >> 16) & 0xFFFF; // lis r2, gTRKState@h']
Translated ori r2 r2 gTRKState@l to: ['gc_env.r[2] = (uint32_t)&gTRKState; // lis + ori gTRKState']
Processing opcode: lwz, operands: ['r0', '0x8c(r2)']
Translated lwz r0 0x8c(r2) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x8C); // lwz r0, 0x8C(r2)']
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated mtmsr r0 to: gc_env.msr = gc_env.r[0]; // Move to machine state register
Translated sync  to: // sync: Memory barrier (no-op in this context)
Processing opcode: lwz, operands: ['r0', '0x80(r2)']
Translated lwz r0 0x80(r2) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x80); // lwz r0, 0x80(r2)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Processing opcode: lwz, operands: ['r0', '0x84(r2)']
Translated lwz r0 0x84(r2) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x84); // lwz r0, 0x84(r2)']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Processing opcode: lwz, operands: ['r0', '0x88(r2)']
Translated lwz r0 0x88(r2) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x88); // lwz r0, 0x88(r2)']
Translated mtxer r0 to: ['gc_env.xer = gc_env.r[0]; // mtxer r0']
Processing opcode: lwz, operands: ['r0', '0x94(r2)']
Translated lwz r0 0x94(r2) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x94); // lwz r0, 0x94(r2)']
Translated mtdsisr r0 to: ['gc_env.dsisr = gc_env.r[0]; // mtdsisr r0']
Processing opcode: lwz, operands: ['r0', '0x90(r2)']
Translated lwz r0 0x90(r2) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x90); // lwz r0, 0x90(r2)']
Translated mtdar r0 to: ['gc_env.dar = gc_env.r[0]; // mtdar r0']
Translated lmw r3 0xc(r2) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0xC); // lmw r3, 0xC(r2)', 'gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x10); // lmw r3, 0xC(r2)', 'gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x14); // lmw r3, 0xC(r2)', 'gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x18); // lmw r3, 0xC(r2)', 'gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1C); // lmw r3, 0xC(r2)', 'gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x20); // lmw r3, 0xC(r2)', 'gc_env.r[9] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x24); // lmw r3, 0xC(r2)', 'gc_env.r[10] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x28); // lmw r3, 0xC(r2)', 'gc_env.r[11] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x2C); // lmw r3, 0xC(r2)', 'gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x30); // lmw r3, 0xC(r2)', 'gc_env.r[13] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x34); // lmw r3, 0xC(r2)', 'gc_env.r[14] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x38); // lmw r3, 0xC(r2)', 'gc_env.r[15] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x3C); // lmw r3, 0xC(r2)', 'gc_env.r[16] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x40); // lmw r3, 0xC(r2)', 'gc_env.r[17] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x44); // lmw r3, 0xC(r2)', 'gc_env.r[18] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x48); // lmw r3, 0xC(r2)', 'gc_env.r[19] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x4C); // lmw r3, 0xC(r2)', 'gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x50); // lmw r3, 0xC(r2)', 'gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x54); // lmw r3, 0xC(r2)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x58); // lmw r3, 0xC(r2)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x5C); // lmw r3, 0xC(r2)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x60); // lmw r3, 0xC(r2)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x64); // lmw r3, 0xC(r2)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x68); // lmw r3, 0xC(r2)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x6C); // lmw r3, 0xC(r2)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x70); // lmw r3, 0xC(r2)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x74); // lmw r3, 0xC(r2)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x78); // lmw r3, 0xC(r2)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x7C); // lmw r3, 0xC(r2)']
Processing opcode: lwz, operands: ['r0', '0x0(r2)']
Translated lwz r0 0x0(r2) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[2]); // lwz r0, (r2)']
Processing opcode: lwz, operands: ['r1', '0x4(r2)']
Translated lwz r1 0x4(r2) to: ['gc_env.r[1] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x4); // lwz r1, 0x4(r2)']
Processing opcode: lwz, operands: ['r2', '0x8(r2)']
Translated lwz r2 0x8(r2) to: ['gc_env.r[2] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x8); // lwz r2, 0x8(r2)']
Translated b TRKPostInterruptEvent to: TRKPostInterruptEvent();
Translated lis r2 gTRKExceptionStatus_8001BAA4@h to: ['gc_env.r[2] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r2, gTRKExceptionStatus_8001BAA4@h']
Translated ori r2 r2 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[2] = (uint32_t)&gTRKExceptionStatus_8001BAA4; // lis + ori gTRKExceptionStatus_8001BAA4']
Processing opcode: sth, operands: ['r3', '0x8(r2)']
Translated sth r3 0x8(r2) to: ['gc_mem_write16(gc_env.ram, gc_env.r[2] + 0x8, gc_env.r[3]); // sth r3, 0x8(r2)']
Translated mfsrr0 r3 to: ['gc_env.r[3] = gc_env.srr0; // mfsrr0 r3']
Processing opcode: stw, operands: ['r3', '0x0(r2)']
Translated stw r3 0x0(r2) to: ['gc_mem_write32(gc_env.ram, gc_env.r[2], gc_env.r[3]); // stw r3, (r2)']
Processing opcode: lhz, operands: ['r3', '0x8(r2)']
Translated lhz r3 0x8(r2) to: ['gc_env.r[3] = gc_mem_read16(gc_env.ram, gc_env.r[2] + 0x8); // lhz r3, 0x8(r2)']
Translated cmpwi r3 0x200 to: gc_env.cr[0] = (gc_env.r[3] == 0x200) ? 0 : (gc_env.r[3] < 0x200 ? -1 : 1); // Compare with immediate
Translated beq .L_800177A8 to: if (gc_env.cr[0] == 0) goto L_800177A8;
Translated cmpwi r3 0x300 to: gc_env.cr[0] = (gc_env.r[3] == 0x300) ? 0 : (gc_env.r[3] < 0x300 ? -1 : 1); // Compare with immediate
Translated beq .L_800177A8 to: if (gc_env.cr[0] == 0) goto L_800177A8;
Translated cmpwi r3 0x400 to: gc_env.cr[0] = (gc_env.r[3] == 0x400) ? 0 : (gc_env.r[3] < 0x400 ? -1 : 1); // Compare with immediate
Translated beq .L_800177A8 to: if (gc_env.cr[0] == 0) goto L_800177A8;
Translated cmpwi r3 0x600 to: gc_env.cr[0] = (gc_env.r[3] == 0x600) ? 0 : (gc_env.r[3] < 0x600 ? -1 : 1); // Compare with immediate
Translated beq .L_800177A8 to: if (gc_env.cr[0] == 0) goto L_800177A8;
Translated cmpwi r3 0x700 to: gc_env.cr[0] = (gc_env.r[3] == 0x700) ? 0 : (gc_env.r[3] < 0x700 ? -1 : 1); // Compare with immediate
Translated beq .L_800177A8 to: if (gc_env.cr[0] == 0) goto L_800177A8;
Translated cmpwi r3 0x800 to: gc_env.cr[0] = (gc_env.r[3] == 0x800) ? 0 : (gc_env.r[3] < 0x800 ? -1 : 1); // Compare with immediate
Translated beq .L_800177A8 to: if (gc_env.cr[0] == 0) goto L_800177A8;
Translated cmpwi r3 0x1000 to: gc_env.cr[0] = (gc_env.r[3] == 0x1000) ? 0 : (gc_env.r[3] < 0x1000 ? -1 : 1); // Compare with immediate
Translated beq .L_800177A8 to: if (gc_env.cr[0] == 0) goto L_800177A8;
Translated cmpwi r3 0x1100 to: gc_env.cr[0] = (gc_env.r[3] == 0x1100) ? 0 : (gc_env.r[3] < 0x1100 ? -1 : 1); // Compare with immediate
Translated beq .L_800177A8 to: if (gc_env.cr[0] == 0) goto L_800177A8;
Translated cmpwi r3 0x1200 to: gc_env.cr[0] = (gc_env.r[3] == 0x1200) ? 0 : (gc_env.r[3] < 0x1200 ? -1 : 1); // Compare with immediate
Translated beq .L_800177A8 to: if (gc_env.cr[0] == 0) goto L_800177A8;
Translated cmpwi r3 0x1300 to: gc_env.cr[0] = (gc_env.r[3] == 0x1300) ? 0 : (gc_env.r[3] < 0x1300 ? -1 : 1); // Compare with immediate
Translated beq .L_800177A8 to: if (gc_env.cr[0] == 0) goto L_800177A8;
Translated b .L_800177B4 to: goto L_800177B4;
Translated mfsrr0 r3 to: ['gc_env.r[3] = gc_env.srr0; // mfsrr0 r3']
Processing opcode: addi, operands: ['r3', 'r3', '0x4']
Translated addi r3 r3 0x4 to: ['gc_env.r[3] += 4; // addi r3, r3, 0x4']
Translated mtsrr0 r3 to: ['gc_env.srr0 = gc_env.r[3]; // mtsrr0 r3']
Translated lis r2 gTRKExceptionStatus_8001BAA4@h to: ['gc_env.r[2] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r2, gTRKExceptionStatus_8001BAA4@h']
Translated ori r2 r2 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[2] = (uint32_t)&gTRKExceptionStatus_8001BAA4; // lis + ori gTRKExceptionStatus_8001BAA4']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: stb, operands: ['r3', '0xd(r2)']
Translated stb r3 0xd(r2) to: ['gc_mem_write8(gc_env.ram, gc_env.r[2] + 0xD, gc_env.r[3]); // stb r3, 0xD(r2)']
Translated mfsprg r3 3 to: ['gc_env.r[3] = gc_env.sprg[3]; // mfsprg r3, 3']
Translated mtcrf 255 r3 to: ['gc_env.cr[0] = (gc_env.r[3] >> 28) & 0xF;', 'gc_env.cr[1] = (gc_env.r[3] >> 24) & 0xF;', 'gc_env.cr[2] = (gc_env.r[3] >> 20) & 0xF;', 'gc_env.cr[3] = (gc_env.r[3] >> 16) & 0xF;', 'gc_env.cr[4] = (gc_env.r[3] >> 12) & 0xF;', 'gc_env.cr[5] = (gc_env.r[3] >> 8) & 0xF;', 'gc_env.cr[6] = (gc_env.r[3] >> 4) & 0xF;', 'gc_env.cr[7] = (gc_env.r[3] >> 0) & 0xF;', '// mtcrf 255, r3']
Translated mfsprg r2 1 to: ['gc_env.r[2] = gc_env.sprg[1]; // mfsprg r2, 1']
Translated mfsprg r3 2 to: ['gc_env.r[3] = gc_env.sprg[2]; // mfsprg r3, 2']
Translated rfi  to: ['// rfi: return from interrupt (not implemented)']
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Translated lis r3 gTRKState@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKState >> 16) & 0xFFFF; // lis r3, gTRKState@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'gTRKState@l']
Translated addi r3 r3 gTRKState@l to: ['gc_env.r[3] = (uint32_t)&gTRKState; // lis + addi gTRKState (completing pattern)']
Processing opcode: addi, operands: ['r3', 'r3', '0x9c']
Translated addi r3 r3 0x9c to: ['gc_env.r[3] += 156; // addi r3, r3, 0x9c']
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80017808 to: if (gc_env.cr[0] == 0) goto L_80017808;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x0(r3)']
Translated stw r0 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[0]); // stw r0, (r3)']
Translated b .L_80017878 to: goto L_80017878;
Translated lis r3 gTRKCPUState@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r3, gTRKCPUState@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'gTRKCPUState@l']
Translated addi r3 r3 gTRKCPUState@l to: ['gc_env.r[3] = (uint32_t)&gTRKCPUState; // lis + addi gTRKCPUState (completing pattern)']
Processing opcode: lwz, operands: ['r0', '0x2f8(r3)']
Translated lwz r0 0x2f8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x2F8); // lwz r0, 0x2F8(r3)']
Translated clrlwi r0 r0 16 to: ['gc_env.r[0] = gc_env.r[0] & 0xFFFF; // clrlwi r0, r0, 16']
Translated cmpwi r0 0xd00 to: gc_env.cr[0] = (gc_env.r[0] == 0xd00) ? 0 : (gc_env.r[0] < 0xd00 ? -1 : 1); // Compare with immediate
Translated beq .L_80017830 to: if (gc_env.cr[0] == 0) goto L_80017830;
Translated bge .L_80017864 to: if (gc_env.cr[0] >= 0) goto L_80017864;
Translated cmpwi r0 0x700 to: gc_env.cr[0] = (gc_env.r[0] == 0x700) ? 0 : (gc_env.r[0] < 0x700 ? -1 : 1); // Compare with immediate
Translated beq .L_80017830 to: if (gc_env.cr[0] == 0) goto L_80017830;
Translated b .L_80017864 to: goto L_80017864;
Translated lis r4 gTRKCPUState@ha to: ['gc_env.r[4] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r4, gTRKCPUState@ha']
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Processing opcode: addi, operands: ['r4', 'r4', 'gTRKCPUState@l']
Translated addi r4 r4 gTRKCPUState@l to: ['gc_env.r[4] = gc_env.r[4] + ((uint32_t)&gTRKCPUState & 0xFFFF); // addi r4, r4, gTRKCPUState@l']
Processing opcode: lwz, operands: ['r4', '0x80(r4)']
Translated lwz r4 0x80(r4) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x80); // lwz r4, 0x80(r4)']
Translated bl fn_80016EF0 to: fn_80016EF0();
Processing opcode: lwz, operands: ['r3', '0x8(r1)']
Translated lwz r3 0x8(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r3, 0x8(r1)']
Processing opcode: subis, operands: ['r0', 'r3', '0xfe0']
Translated subis r0 r3 0xfe0 to: ['gc_env.r[0] = gc_env.r[3] - (4064 << 16); // subis r0, r3, 4064']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8001785C to: if (gc_env.cr[0] != 0) goto L_8001785C;
Processing opcode: li, operands: ['r4', '0x5']
Translated li r4 0x5 to: ['gc_env.r[4] = 0x5; // li r4, 0x5']
Translated b .L_80017868 to: goto L_80017868;
Processing opcode: li, operands: ['r4', '0x3']
Translated li r4 0x3 to: ['gc_env.r[4] = 0x3; // li r4, 0x3']
Translated b .L_80017868 to: goto L_80017868;
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Processing opcode: addi, operands: ['r3', 'r1', '0xc']
Translated addi r3 r1 0xc to: ['gc_env.r[3] = gc_env.r[1] + 12; // addi r3, r1, 0xc']
Translated bl fn_80014658 to: fn_80014658();
Processing opcode: addi, operands: ['r3', 'r1', '0xc']
Translated addi r3 r1 0xc to: ['gc_env.r[3] = gc_env.r[1] + 12; // addi r3, r1, 0xc']
Translated bl fn_80014578 to: fn_80014578();
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r3 gTRKState@h to: ['gc_env.r[3] = ((uint32_t)&gTRKState >> 16) & 0xFFFF; // lis r3, gTRKState@h']
Translated ori r3 r3 gTRKState@l to: ['gc_env.r[3] = (uint32_t)&gTRKState; // lis + ori gTRKState']
Translated stmw r0 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x0, gc_env.r[0]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[1]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[2]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[3]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x10, gc_env.r[4]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x14, gc_env.r[5]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x18, gc_env.r[6]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x1C, gc_env.r[7]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x20, gc_env.r[8]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x24, gc_env.r[9]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x28, gc_env.r[10]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x2C, gc_env.r[11]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x30, gc_env.r[12]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x34, gc_env.r[13]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x38, gc_env.r[14]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x3C, gc_env.r[15]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x40, gc_env.r[16]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x44, gc_env.r[17]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x48, gc_env.r[18]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4C, gc_env.r[19]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x50, gc_env.r[20]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x54, gc_env.r[21]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x58, gc_env.r[22]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x5C, gc_env.r[23]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x60, gc_env.r[24]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x64, gc_env.r[25]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x68, gc_env.r[26]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x6C, gc_env.r[27]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x70, gc_env.r[28]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x74, gc_env.r[29]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x78, gc_env.r[30]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x7C, gc_env.r[31]); // stmw r0, 0x0(r3)']
Translated mfmsr r0 to: gc_env.r[0] = gc_env.msr; // Move from machine state register
Processing opcode: stw, operands: ['r0', '0x8c(r3)']
Translated stw r0 0x8c(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8C, gc_env.r[0]); // stw r0, 0x8C(r3)']
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x80(r3)']
Translated stw r0 0x80(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x80, gc_env.r[0]); // stw r0, 0x80(r3)']
Translated mfctr r0 to: ['gc_env.r[0] = gc_env.ctr; // mfctr r0']
Processing opcode: stw, operands: ['r0', '0x84(r3)']
Translated stw r0 0x84(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x84, gc_env.r[0]); // stw r0, 0x84(r3)']
Translated mfxer r0 to: ['gc_env.r[0] = gc_env.xer; // mfxer r0']
Processing opcode: stw, operands: ['r0', '0x88(r3)']
Translated stw r0 0x88(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x88, gc_env.r[0]); // stw r0, 0x88(r3)']
Translated mfdsisr r0 to: ['gc_env.r[0] = gc_env.dsisr; // mfdsisr r0']
Processing opcode: stw, operands: ['r0', '0x94(r3)']
Translated stw r0 0x94(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x94, gc_env.r[0]); // stw r0, 0x94(r3)']
Translated mfdar r0 to: ['gc_env.r[0] = gc_env.dar; // mfdar r0']
Processing opcode: stw, operands: ['r0', '0x90(r3)']
Translated stw r0 0x90(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x90, gc_env.r[0]); // stw r0, 0x90(r3)']
Processing opcode: li, operands: ['r1', '-0x7ffe']
Translated li r1 -0x7ffe to: ['gc_env.r[1] = -0x7ffe; // li r1, -0x7ffe']
Translated nor r1 r1 r1 to: ['gc_env.r[1] = ~gc_env.r[1]; // nor r1, r1, r1']
Translated mfmsr r3 to: gc_env.r[3] = gc_env.msr; // Move from machine state register
Translated and r3 r3 r1 to: gc_env.r[3] = gc_env.r[3] & gc_env.r[1];
Translated mtmsr r3 to: gc_env.msr = gc_env.r[3]; // Move to machine state register
Translated lis r2 gTRKState@h to: ['gc_env.r[2] = ((uint32_t)&gTRKState >> 16) & 0xFFFF; // lis r2, gTRKState@h']
Translated ori r2 r2 gTRKState@l to: ['gc_env.r[2] = (uint32_t)&gTRKState; // lis + ori gTRKState']
Processing opcode: lwz, operands: ['r2', '0xa0(r2)']
Translated lwz r2 0xa0(r2) to: ['gc_env.r[2] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0xA0); // lwz r2, 0xA0(r2)']
Processing opcode: lbz, operands: ['r2', '0x0(r2)']
Translated lbz r2 0x0(r2) to: ['gc_env.r[2] = gc_mem_read8(gc_env.ram, gc_env.r[2] + 0x0); // lbz r2, 0x0(r2)']
Translated cmpwi r2 0x0 to: gc_env.cr[0] = (gc_env.r[2] == 0x0) ? 0 : (gc_env.r[2] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80017904 to: if (gc_env.cr[0] == 0) goto L_80017904;
Translated lis r2 gTRKState@h to: ['gc_env.r[2] = ((uint32_t)&gTRKState >> 16) & 0xFFFF; // lis r2, gTRKState@h']
Translated ori r2 r2 gTRKState@l to: ['gc_env.r[2] = (uint32_t)&gTRKState; // lis + ori gTRKState']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: stb, operands: ['r3', '0x9c(r2)']
Translated stb r3 0x9c(r2) to: ['gc_mem_write8(gc_env.ram, gc_env.r[2] + 0x9C, gc_env.r[3]); // stb r3, 0x9C(r2)']
Translated b .L_8001794C to: goto L_8001794C;
Translated lis r2 gTRKExceptionStatus_8001BAA4@h to: ['gc_env.r[2] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r2, gTRKExceptionStatus_8001BAA4@h']
Translated ori r2 r2 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[2] = (uint32_t)&gTRKExceptionStatus_8001BAA4; // lis + ori gTRKExceptionStatus_8001BAA4']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r3', '0xc(r2)']
Translated stb r3 0xc(r2) to: ['gc_mem_write8(gc_env.ram, gc_env.r[2] + 0xC, gc_env.r[3]); // stb r3, 0xC(r2)']
Translated bl fn_800185DC to: fn_800185DC();
Translated lis r2 gTRKCPUState@h to: ['gc_env.r[2] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r2, gTRKCPUState@h']
Translated ori r2 r2 gTRKCPUState@l to: ['gc_env.r[2] = (uint32_t)&gTRKCPUState; // lis + ori gTRKCPUState']
Translated lmw r27 0x80(r2) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x80); // lmw r27, 0x80(r2)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x84); // lmw r27, 0x80(r2)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x88); // lmw r27, 0x80(r2)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x8C); // lmw r27, 0x80(r2)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x90); // lmw r27, 0x80(r2)']
Translated mtsrr0 r27 to: ['gc_env.srr0 = gc_env.r[27]; // mtsrr0 r27']
Translated mtlr r28 to: gc_env.lr = gc_env.r[28]; // Move to link register
Translated mtcrf 255 r29 to: ['gc_env.cr[0] = (gc_env.r[29] >> 28) & 0xF;', 'gc_env.cr[1] = (gc_env.r[29] >> 24) & 0xF;', 'gc_env.cr[2] = (gc_env.r[29] >> 20) & 0xF;', 'gc_env.cr[3] = (gc_env.r[29] >> 16) & 0xF;', 'gc_env.cr[4] = (gc_env.r[29] >> 12) & 0xF;', 'gc_env.cr[5] = (gc_env.r[29] >> 8) & 0xF;', 'gc_env.cr[6] = (gc_env.r[29] >> 4) & 0xF;', 'gc_env.cr[7] = (gc_env.r[29] >> 0) & 0xF;', '// mtcrf 255, r29']
Translated mtctr r30 to: gc_env.ctr = gc_env.r[30]; // Move to count register
Translated mtxer r31 to: ['gc_env.xer = gc_env.r[31]; // mtxer r31']
Translated lmw r3 0xc(r2) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0xC); // lmw r3, 0xC(r2)', 'gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x10); // lmw r3, 0xC(r2)', 'gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x14); // lmw r3, 0xC(r2)', 'gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x18); // lmw r3, 0xC(r2)', 'gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1C); // lmw r3, 0xC(r2)', 'gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x20); // lmw r3, 0xC(r2)', 'gc_env.r[9] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x24); // lmw r3, 0xC(r2)', 'gc_env.r[10] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x28); // lmw r3, 0xC(r2)', 'gc_env.r[11] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x2C); // lmw r3, 0xC(r2)', 'gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x30); // lmw r3, 0xC(r2)', 'gc_env.r[13] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x34); // lmw r3, 0xC(r2)', 'gc_env.r[14] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x38); // lmw r3, 0xC(r2)', 'gc_env.r[15] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x3C); // lmw r3, 0xC(r2)', 'gc_env.r[16] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x40); // lmw r3, 0xC(r2)', 'gc_env.r[17] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x44); // lmw r3, 0xC(r2)', 'gc_env.r[18] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x48); // lmw r3, 0xC(r2)', 'gc_env.r[19] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x4C); // lmw r3, 0xC(r2)', 'gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x50); // lmw r3, 0xC(r2)', 'gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x54); // lmw r3, 0xC(r2)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x58); // lmw r3, 0xC(r2)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x5C); // lmw r3, 0xC(r2)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x60); // lmw r3, 0xC(r2)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x64); // lmw r3, 0xC(r2)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x68); // lmw r3, 0xC(r2)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x6C); // lmw r3, 0xC(r2)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x70); // lmw r3, 0xC(r2)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x74); // lmw r3, 0xC(r2)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x78); // lmw r3, 0xC(r2)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x7C); // lmw r3, 0xC(r2)']
Processing opcode: lwz, operands: ['r0', '0x0(r2)']
Translated lwz r0 0x0(r2) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[2]); // lwz r0, (r2)']
Processing opcode: lwz, operands: ['r1', '0x4(r2)']
Translated lwz r1 0x4(r2) to: ['gc_env.r[1] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x4); // lwz r1, 0x4(r2)']
Processing opcode: lwz, operands: ['r2', '0x8(r2)']
Translated lwz r2 0x8(r2) to: ['gc_env.r[2] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x8); // lwz r2, 0x8(r2)']
Translated rfi  to: ['// rfi: return from interrupt (not implemented)']
Translated lis r2 gTRKState@h to: ['gc_env.r[2] = ((uint32_t)&gTRKState >> 16) & 0xFFFF; // lis r2, gTRKState@h']
Translated ori r2 r2 gTRKState@l to: ['gc_env.r[2] = (uint32_t)&gTRKState; // lis + ori gTRKState']
Processing opcode: lwz, operands: ['r0', '0x8c(r2)']
Translated lwz r0 0x8c(r2) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x8C); // lwz r0, 0x8C(r2)']
Translated sync  to: // sync: Memory barrier (no-op in this context)
Translated mtmsr r0 to: gc_env.msr = gc_env.r[0]; // Move to machine state register
Translated sync  to: // sync: Memory barrier (no-op in this context)
Processing opcode: lwz, operands: ['r0', '0x80(r2)']
Translated lwz r0 0x80(r2) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x80); // lwz r0, 0x80(r2)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Processing opcode: lwz, operands: ['r0', '0x84(r2)']
Translated lwz r0 0x84(r2) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x84); // lwz r0, 0x84(r2)']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Processing opcode: lwz, operands: ['r0', '0x88(r2)']
Translated lwz r0 0x88(r2) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x88); // lwz r0, 0x88(r2)']
Translated mtxer r0 to: ['gc_env.xer = gc_env.r[0]; // mtxer r0']
Processing opcode: lwz, operands: ['r0', '0x94(r2)']
Translated lwz r0 0x94(r2) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x94); // lwz r0, 0x94(r2)']
Translated mtdsisr r0 to: ['gc_env.dsisr = gc_env.r[0]; // mtdsisr r0']
Processing opcode: lwz, operands: ['r0', '0x90(r2)']
Translated lwz r0 0x90(r2) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x90); // lwz r0, 0x90(r2)']
Translated mtdar r0 to: ['gc_env.dar = gc_env.r[0]; // mtdar r0']
Translated lmw r3 0xc(r2) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0xC); // lmw r3, 0xC(r2)', 'gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x10); // lmw r3, 0xC(r2)', 'gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x14); // lmw r3, 0xC(r2)', 'gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x18); // lmw r3, 0xC(r2)', 'gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1C); // lmw r3, 0xC(r2)', 'gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x20); // lmw r3, 0xC(r2)', 'gc_env.r[9] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x24); // lmw r3, 0xC(r2)', 'gc_env.r[10] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x28); // lmw r3, 0xC(r2)', 'gc_env.r[11] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x2C); // lmw r3, 0xC(r2)', 'gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x30); // lmw r3, 0xC(r2)', 'gc_env.r[13] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x34); // lmw r3, 0xC(r2)', 'gc_env.r[14] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x38); // lmw r3, 0xC(r2)', 'gc_env.r[15] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x3C); // lmw r3, 0xC(r2)', 'gc_env.r[16] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x40); // lmw r3, 0xC(r2)', 'gc_env.r[17] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x44); // lmw r3, 0xC(r2)', 'gc_env.r[18] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x48); // lmw r3, 0xC(r2)', 'gc_env.r[19] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x4C); // lmw r3, 0xC(r2)', 'gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x50); // lmw r3, 0xC(r2)', 'gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x54); // lmw r3, 0xC(r2)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x58); // lmw r3, 0xC(r2)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x5C); // lmw r3, 0xC(r2)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x60); // lmw r3, 0xC(r2)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x64); // lmw r3, 0xC(r2)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x68); // lmw r3, 0xC(r2)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x6C); // lmw r3, 0xC(r2)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x70); // lmw r3, 0xC(r2)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x74); // lmw r3, 0xC(r2)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x78); // lmw r3, 0xC(r2)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x7C); // lmw r3, 0xC(r2)']
Processing opcode: lwz, operands: ['r0', '0x0(r2)']
Translated lwz r0 0x0(r2) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[2]); // lwz r0, (r2)']
Processing opcode: lwz, operands: ['r1', '0x4(r2)']
Translated lwz r1 0x4(r2) to: ['gc_env.r[1] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x4); // lwz r1, 0x4(r2)']
Processing opcode: lwz, operands: ['r2', '0x8(r2)']
Translated lwz r2 0x8(r2) to: ['gc_env.r[2] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x8); // lwz r2, 0x8(r2)']
Translated b TRKPostInterruptEvent to: TRKPostInterruptEvent();
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: lbz, operands: ['r0', '0x0(r3)']
Translated lbz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x0); // lbz r0, 0x0(r3)']
Processing opcode: li, operands: ['r31', '0x0']
Translated li r31 0x0 to: ['gc_env.r[31] = 0x0; // li r31, 0x0']
Translated cmpwi r0 0x5 to: gc_env.cr[0] = (gc_env.r[0] == 0x5) ? 0 : (gc_env.r[0] < 0x5 ? -1 : 1); // Compare with immediate
Translated bge .L_800179EC to: if (gc_env.cr[0] >= 0) goto L_800179EC;
Translated cmpwi r0 0x3 to: gc_env.cr[0] = (gc_env.r[0] == 0x3) ? 0 : (gc_env.r[0] < 0x3 ? -1 : 1); // Compare with immediate
Translated bge .L_800179CC to: if (gc_env.cr[0] >= 0) goto L_800179CC;
Translated b .L_800179EC to: goto L_800179EC;
Translated bl fn_80017C4C to: fn_80017C4C();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800179EC to: if (gc_env.cr[0] != 0) goto L_800179EC;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated bl fn_80017E8C to: fn_80017E8C();
Processing opcode: li, operands: ['r3', '0x90']
Translated li r3 0x90 to: ['gc_env.r[3] = 0x90; // li r3, 0x90']
Translated bl fn_80016A34 to: fn_80016A34();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated lis r3 gTRKCPUState@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r3, gTRKCPUState@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'gTRKCPUState@l']
Translated addi r3 r3 gTRKCPUState@l to: ['gc_env.r[3] = (uint32_t)&gTRKCPUState; // lis + addi gTRKCPUState (completing pattern)']
Processing opcode: addi, operands: ['r31', 'r3', '0x80']
Translated addi r31 r3 0x80 to: ['gc_env.r[31] = gc_env.r[3] + 128; // addi r31, r3, 0x80']
Processing opcode: lwz, operands: ['r4', '0x0(r31)']
Translated lwz r4 0x0(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r4, (r31)']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl fn_80014BF4 to: fn_80014BF4();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80017A48 to: if (gc_env.cr[0] != 0) goto L_80017A48;
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Processing opcode: lwz, operands: ['r4', '0x0(r31)']
Translated lwz r4 0x0(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r4, (r31)']
Translated bl fn_80016EF0 to: fn_80016EF0();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80017A5C to: if (gc_env.cr[0] != 0) goto L_80017A5C;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Processing opcode: lwz, operands: ['r4', '0x8(r1)']
Translated lwz r4 0x8(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r4, 0x8(r1)']
Translated bl fn_80014BF4 to: fn_80014BF4();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80017A7C to: if (gc_env.cr[0] != 0) goto L_80017A7C;
Translated lis r3 gTRKCPUState@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r3, gTRKCPUState@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'gTRKCPUState@l']
Translated addi r3 r3 gTRKCPUState@l to: ['gc_env.r[3] = (uint32_t)&gTRKCPUState; // lis + addi gTRKCPUState (completing pattern)']
Processing opcode: lwz, operands: ['r0', '0x2f8(r3)']
Translated lwz r0 0x2f8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x2F8); // lwz r0, 0x2F8(r3)']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated clrlwi r4 r0 16 to: ['gc_env.r[4] = gc_env.r[0] & 0xFFFF; // clrlwi r4, r0, 16']
Translated bl fn_80014BA0 to: fn_80014BA0();
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated lis r3 gTRKExceptionStatus_8001BAA4@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r3, gTRKExceptionStatus_8001BAA4@ha']
Processing opcode: addi, operands: ['r31', 'r3', 'gTRKExceptionStatus_8001BAA4@l']
Translated addi r31 r3 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[31] = (uint32_t)&gTRKExceptionStatus_8001BAA4; // lis + addi gTRKExceptionStatus_8001BAA4 (completing pattern)']
Processing opcode: lwz, operands: ['r4', '0x0(r31)']
Translated lwz r4 0x0(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r4, (r31)']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl fn_80014BF4 to: fn_80014BF4();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80017AD4 to: if (gc_env.cr[0] != 0) goto L_80017AD4;
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Processing opcode: lwz, operands: ['r4', '0x0(r31)']
Translated lwz r4 0x0(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r4, (r31)']
Translated bl fn_80016EF0 to: fn_80016EF0();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80017AE8 to: if (gc_env.cr[0] != 0) goto L_80017AE8;
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Processing opcode: lwz, operands: ['r4', '0x8(r1)']
Translated lwz r4 0x8(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r4, 0x8(r1)']
Translated bl fn_80014BF4 to: fn_80014BF4();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80017B04 to: if (gc_env.cr[0] != 0) goto L_80017B04;
Translated lis r3 gTRKExceptionStatus_8001BAA4@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKExceptionStatus_8001BAA4 >> 16) & 0xFFFF; // lis r3, gTRKExceptionStatus_8001BAA4@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'gTRKExceptionStatus_8001BAA4@l']
Translated addi r3 r3 gTRKExceptionStatus_8001BAA4@l to: ['gc_env.r[3] = (uint32_t)&gTRKExceptionStatus_8001BAA4; // lis + addi gTRKExceptionStatus_8001BAA4 (completing pattern)']
Processing opcode: lhz, operands: ['r4', '0x8(r3)']
Translated lhz r4 0x8(r3) to: ['gc_env.r[4] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x8); // lhz r4, 0x8(r3)']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl fn_80014BA0 to: fn_80014BA0();
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80017B3C to: if (gc_env.cr[0] == 0) goto L_80017B3C;
Translated lis r3 gTRKCPUState@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r3, gTRKCPUState@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'gTRKCPUState@l']
Translated addi r3 r3 gTRKCPUState@l to: ['gc_env.r[3] = (uint32_t)&gTRKCPUState; // lis + addi gTRKCPUState (completing pattern)']
Processing opcode: lwz, operands: ['r0', '0x1f8(r3)']
Translated lwz r0 0x1f8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x1F8); // lwz r0, 0x1F8(r3)']
Translated ori r0 r0 0x400 to: ['gc_env.r[0] |= 1024; // ori r0, r0, 0x400']
Processing opcode: stw, operands: ['r0', '0x1f8(r3)']
Translated stw r0 0x1f8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x1F8, gc_env.r[0]); // stw r0, 0x1F8(r3)']
Translated b .L_80017B50 to: goto L_80017B50;
Translated lis r3 gTRKCPUState@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r3, gTRKCPUState@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'gTRKCPUState@l']
Translated addi r3 r3 gTRKCPUState@l to: ['gc_env.r[3] = (uint32_t)&gTRKCPUState; // lis + addi gTRKCPUState (completing pattern)']
Processing opcode: lwz, operands: ['r0', '0x1f8(r3)']
Translated lwz r0 0x1f8(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x1F8); // lwz r0, 0x1F8(r3)']
Translated rlwinm r0 r0 0 22 20 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & -0x401; // rlwinm r0, r0, 0, 22, 20']
Processing opcode: stw, operands: ['r0', '0x1f8(r3)']
Translated stw r0 0x1f8(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x1F8, gc_env.r[0]); // stw r0, 0x1F8(r3)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Translated lis r3 lbl_8001BAB4@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001BAB4 >> 16) & 0xFFFF; // lis r3, lbl_8001BAB4@ha']
Processing opcode: addi, operands: ['r5', 'r3', 'lbl_8001BAB4@l']
Translated addi r5 r3 lbl_8001BAB4@l to: ['gc_env.r[5] = (uint32_t)&lbl_8001BAB4; // lis + addi lbl_8001BAB4 (completing pattern)']
Processing opcode: lwz, operands: ['r0', '0x0(r5)']
Translated lwz r0 0x0(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r0, (r5)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80017BD8 to: if (gc_env.cr[0] == 0) goto L_80017BD8;
Translated lis r4 gTRKCPUState@ha to: ['gc_env.r[4] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r4, gTRKCPUState@ha']
Processing opcode: addi, operands: ['r4', 'r4', 'gTRKCPUState@l']
Translated addi r4 r4 gTRKCPUState@l to: ['gc_env.r[4] = (uint32_t)&gTRKCPUState; // lis + addi gTRKCPUState (completing pattern)']
Processing opcode: lwz, operands: ['r0', '0x2f8(r4)']
Translated lwz r0 0x2f8(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x2F8); // lwz r0, 0x2F8(r4)']
Translated clrlwi r0 r0 16 to: ['gc_env.r[0] = gc_env.r[0] & 0xFFFF; // clrlwi r0, r0, 16']
Translated cmplwi r0 0xd00 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0xd00) ? 0 : ((uint32_t)gc_env.r[0] < 0xd00 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80017BD8 to: if (gc_env.cr[0] != 0) goto L_80017BD8;
Processing opcode: lbz, operands: ['r0', '0x4(r5)']
Translated lbz r0 0x4(r5) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x4); // lbz r0, 0x4(r5)']
Translated cmpwi r0 0x1 to: gc_env.cr[0] = (gc_env.r[0] == 0x1) ? 0 : (gc_env.r[0] < 0x1 ? -1 : 1); // Compare with immediate
Translated beq .L_80017BB8 to: if (gc_env.cr[0] == 0) goto L_80017BB8;
Translated bge .L_80017BD8 to: if (gc_env.cr[0] >= 0) goto L_80017BD8;
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bge .L_80017BA4 to: if (gc_env.cr[0] >= 0) goto L_80017BA4;
Translated b .L_80017BD8 to: goto L_80017BD8;
Processing opcode: lwz, operands: ['r0', '0x8(r5)']
Translated lwz r0 0x8(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x8); // lwz r0, 0x8(r5)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80017BD8 to: if (gc_env.cr[0] == 0) goto L_80017BD8;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80017BD8 to: goto L_80017BD8;
Processing opcode: lwz, operands: ['r4', '0x80(r4)']
Translated lwz r4 0x80(r4) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x80); // lwz r4, 0x80(r4)']
Processing opcode: lwz, operands: ['r0', '0xc(r5)']
Translated lwz r0 0xc(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xC); // lwz r0, 0xC(r5)']
Translated cmplw r4 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated blt .L_80017BD8 to: ['if (gc_env.cr[0] & 0x8) goto L_80017BD8; // blt .L_80017BD8']
Processing opcode: lwz, operands: ['r0', '0x10(r5)']
Translated lwz r0 0x10(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x10); // lwz r0, 0x10(r5)']
Translated cmplw r4 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bgt .L_80017BD8 to: ['if (gc_env.cr[0] & 0x4) goto L_80017BD8; // bgt .L_80017BD8']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated lis r3 lbl_8001BAB4@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001BAB4 >> 16) & 0xFFFF; // lis r3, lbl_8001BAB4@ha']
Processing opcode: addi, operands: ['r31', 'r3', 'lbl_8001BAB4@l']
Translated addi r31 r3 lbl_8001BAB4@l to: ['gc_env.r[31] = (uint32_t)&lbl_8001BAB4; // lis + addi lbl_8001BAB4 (completing pattern)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', '0x0(r31)']
Translated stw r0 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stw r0, (r31)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated bl fn_80017B1C to: fn_80017B1C();
Processing opcode: lbz, operands: ['r0', '0x4(r31)']
Translated lbz r0 0x4(r31) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[31] + 0x4); // lbz r0, 0x4(r31)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80017C18 to: if (gc_env.cr[0] == 0) goto L_80017C18;
Translated cmplwi r0 0x10 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x10) ? 0 : ((uint32_t)gc_env.r[0] < 0x10 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80017C2C to: if (gc_env.cr[0] != 0) goto L_80017C2C;
Translated lis r3 lbl_8001BAB4@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001BAB4 >> 16) & 0xFFFF; // lis r3, lbl_8001BAB4@ha']
Processing opcode: addi, operands: ['r4', 'r3', 'lbl_8001BAB4@l']
Translated addi r4 r3 lbl_8001BAB4@l to: ['gc_env.r[4] = (uint32_t)&lbl_8001BAB4; // lis + addi lbl_8001BAB4 (completing pattern)']
Processing opcode: lwz, operands: ['r3', '0x8(r4)']
Translated lwz r3 0x8(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x8); // lwz r3, 0x8(r4)']
Processing opcode: subi, operands: ['r0', 'r3', '0x1']
Translated subi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] - 1; // subi r0, r3, 1']
Processing opcode: stw, operands: ['r0', '0x8(r4)']
Translated stw r0 0x8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x8, gc_env.r[0]); // stw r0, 0x8(r4)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl fn_80017E8C to: fn_80017E8C();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated lis r3 lbl_8001BAB4@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001BAB4 >> 16) & 0xFFFF; // lis r3, lbl_8001BAB4@ha']
Processing opcode: addi, operands: ['r31', 'r3', 'lbl_8001BAB4@l']
Translated addi r31 r3 lbl_8001BAB4@l to: ['gc_env.r[31] = (uint32_t)&lbl_8001BAB4; // lis + addi lbl_8001BAB4 (completing pattern)']
Processing opcode: lwz, operands: ['r0', '0x0(r31)']
Translated lwz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r0, (r31)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80017C94 to: if (gc_env.cr[0] == 0) goto L_80017C94;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated bl fn_80017B1C to: fn_80017B1C();
Translated bl fn_80017B58 to: fn_80017B58();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80017C90 to: if (gc_env.cr[0] == 0) goto L_80017C90;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x0(r31)']
Translated stw r0 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stw r0, (r31)']
Translated b .L_80017C94 to: goto L_80017C94;
Translated bl fn_80017BDC to: fn_80017BDC();
Translated lis r3 lbl_8001BAB4@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001BAB4 >> 16) & 0xFFFF; // lis r3, lbl_8001BAB4@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001BAB4@l']
Translated addi r3 r3 lbl_8001BAB4@l to: ['gc_env.r[3] = (uint32_t)&lbl_8001BAB4; // lis + addi lbl_8001BAB4 (completing pattern)']
Processing opcode: lwz, operands: ['r3', '0x0(r3)']
Translated lwz r3 0x0(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r3, (r3)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80017CD0 to: if (gc_env.cr[0] == 0) goto L_80017CD0;
Processing opcode: li, operands: ['r3', '0x703']
Translated li r3 0x703 to: ['gc_env.r[3] = 0x703; // li r3, 0x703']
Translated b .L_80017CE8 to: goto L_80017CE8;
Translated lis r4 lbl_8001BAB4@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001BAB4 >> 16) & 0xFFFF; // lis r4, lbl_8001BAB4@ha']
Processing opcode: addi, operands: ['r4', 'r4', 'lbl_8001BAB4@l']
Translated addi r4 r4 lbl_8001BAB4@l to: ['gc_env.r[4] = (uint32_t)&lbl_8001BAB4; // lis + addi lbl_8001BAB4 (completing pattern)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', '0x4(r4)']
Translated stb r0 0x4(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[0]); // stb r0, 0x4(r4)']
Processing opcode: stw, operands: ['r3', '0x8(r4)']
Translated stw r3 0x8(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x8, gc_env.r[3]); // stw r3, 0x8(r4)']
Translated bl fn_80017BDC to: fn_80017BDC();
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated cmpwi r5 0x0 to: gc_env.cr[0] = (gc_env.r[5] == 0x0) ? 0 : (gc_env.r[5] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80017D14 to: if (gc_env.cr[0] == 0) goto L_80017D14;
Processing opcode: li, operands: ['r3', '0x703']
Translated li r3 0x703 to: ['gc_env.r[3] = 0x703; // li r3, 0x703']
Translated b .L_80017D30 to: goto L_80017D30;
Translated lis r5 lbl_8001BAB4@ha to: ['gc_env.r[5] = ((uint32_t)&lbl_8001BAB4 >> 16) & 0xFFFF; // lis r5, lbl_8001BAB4@ha']
Processing opcode: addi, operands: ['r5', 'r5', 'lbl_8001BAB4@l']
Translated addi r5 r5 lbl_8001BAB4@l to: ['gc_env.r[5] = (uint32_t)&lbl_8001BAB4; // lis + addi lbl_8001BAB4 (completing pattern)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stb, operands: ['r0', '0x4(r5)']
Translated stb r0 0x4(r5) to: ['gc_mem_write8(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[0]); // stb r0, 0x4(r5)']
Processing opcode: stw, operands: ['r3', '0xc(r5)']
Translated stw r3 0xc(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0xC, gc_env.r[3]); // stw r3, 0xC(r5)']
Processing opcode: stw, operands: ['r4', '0x10(r5)']
Translated stw r4 0x10(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x10, gc_env.r[4]); // stw r4, 0x10(r5)']
Translated bl fn_80017BDC to: fn_80017BDC();
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r3 gTRKCPUState@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r3, gTRKCPUState@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'gTRKCPUState@l']
Translated addi r3 r3 gTRKCPUState@l to: ['gc_env.r[3] = (uint32_t)&gTRKCPUState; // lis + addi gTRKCPUState (completing pattern)']
Processing opcode: lwz, operands: ['r3', '0x80(r3)']
Translated lwz r3 0x80(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x80); // lwz r3, 0x80(r3)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Translated stmw r27 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[27]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[28]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[29]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[30]); // stmw r27, 0x1C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stmw r27, 0x1C(r1)']
Translated lis r3 gTRKCPUState@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r3, gTRKCPUState@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'gTRKCPUState@l']
Translated addi r3 r3 gTRKCPUState@l to: ['gc_env.r[3] = (uint32_t)&gTRKCPUState; // lis + addi gTRKCPUState (completing pattern)']
Processing opcode: addi, operands: ['r31', 'r3', '0xc']
Translated addi r31 r3 0xc to: ['gc_env.r[31] = gc_env.r[3] + 12; // addi r31, r3, 0xc']
Processing opcode: lwz, operands: ['r0', '0x0(r31)']
Translated lwz r0 0x0(r31) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[31]); // lwz r0, (r31)']
Translated clrlwi r27 r0 24 to: ['gc_env.r[27] = gc_env.r[0] & 0xFF; // clrlwi r27, r0, 24']
Translated cmplwi r27 0xd1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[27] == 0xd1) ? 0 : ((uint32_t)gc_env.r[27] < 0xd1 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80017DA0 to: if (gc_env.cr[0] == 0) goto L_80017DA0;
Translated cmplwi r27 0xd0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[27] == 0xd0) ? 0 : ((uint32_t)gc_env.r[27] < 0xd0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80017DA0 to: if (gc_env.cr[0] == 0) goto L_80017DA0;
Processing opcode: addi, operands: ['r3', 'r1', '0xc']
Translated addi r3 r1 0xc to: ['gc_env.r[3] = gc_env.r[1] + 12; // addi r3, r1, 0xc']
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Translated bl fn_80014658 to: fn_80014658();
Processing opcode: addi, operands: ['r3', 'r1', '0xc']
Translated addi r3 r1 0xc to: ['gc_env.r[3] = gc_env.r[1] + 12; // addi r3, r1, 0xc']
Translated bl fn_80014578 to: fn_80014578();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80017E2C to: goto L_80017E2C;
Translated lis r3 gTRKCPUState@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r3, gTRKCPUState@ha']
Processing opcode: addi, operands: ['r6', 'r1', '0x8']
Translated addi r6 r1 0x8 to: ['gc_env.r[6] = gc_env.r[1] + 8; // addi r6, r1, 0x8']
Processing opcode: addi, operands: ['r4', 'r3', 'gTRKCPUState@l']
Translated addi r4 r3 gTRKCPUState@l to: ['gc_env.r[4] = gc_env.r[3] + ((uint32_t)&gTRKCPUState & 0xFFFF); // addi r4, r3, gTRKCPUState@l']
Processing opcode: lwz, operands: ['r3', '0x10(r4)']
Translated lwz r3 0x10(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x10); // lwz r3, 0x10(r4)']
Translated subfic r0 r27 0xd1 to: ['gc_env.r[0] = 209 - gc_env.r[27]; // subfic r0, r27, 209', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (209 >= gc_env.r[27] ? 0x20000000 : 0);']
Processing opcode: lwz, operands: ['r28', '0x14(r4)']
Translated lwz r28 0x14(r4) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x14); // lwz r28, 0x14(r4)']
Processing opcode: addi, operands: ['r30', 'r4', '0x18']
Translated addi r30 r4 0x18 to: ['gc_env.r[30] = gc_env.r[4] + 24; // addi r30, r4, 0x18']
Translated cntlzw r0 r0 to: ['uint32_t val = gc_env.r[0]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r0']
Processing opcode: lwz, operands: ['r4', '0x0(r30)']
Translated lwz r4 0x0(r30) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r4, (r30)']
Translated clrlwi r3 r3 24 to: ['gc_env.r[3] = gc_env.r[3] & 0xFF; // clrlwi r3, r3, 24']
Translated mr r5 r28 to: gc_env.r[5] = gc_env.r[28]; // Move register
Translated srwi r8 r0 5 to: ['gc_env.r[8] = gc_env.r[0] >> 5; // srwi r8, r0, 5']
Processing opcode: li, operands: ['r7', '0x1']
Translated li r7 0x1 to: ['gc_env.r[7] = 0x1; // li r7, 0x1']
Translated bl fn_800165A0 to: fn_800165A0();
Processing opcode: lbz, operands: ['r0', '0x8(r1)']
Translated lbz r0 0x8(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x8); // lbz r0, 0x8(r1)']
Translated mr r29 r3 to: gc_env.r[29] = gc_env.r[3]; // Move register
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80017DF8 to: if (gc_env.cr[0] != 0) goto L_80017DF8;
Translated cmpwi r29 0x0 to: gc_env.cr[0] = (gc_env.r[29] == 0x0) ? 0 : (gc_env.r[29] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80017DF8 to: if (gc_env.cr[0] == 0) goto L_80017DF8;
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stb, operands: ['r0', '0x8(r1)']
Translated stb r0 0x8(r1) to: ['gc_mem_write8(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stb r0, 0x8(r1)']
Processing opcode: lbz, operands: ['r0', '0x8(r1)']
Translated lbz r0 0x8(r1) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[1] + 0x8); // lbz r0, 0x8(r1)']
Translated cmplwi r27 0xd1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[27] == 0xd1) ? 0 : ((uint32_t)gc_env.r[27] < 0xd1 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r0', '0x0(r31)']
Translated stw r0 0x0(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31], gc_env.r[0]); // stw r0, (r31)']
Translated bne .L_80017E14 to: if (gc_env.cr[0] != 0) goto L_80017E14;
Processing opcode: lwz, operands: ['r3', '0x0(r30)']
Translated lwz r3 0x0(r30) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r3, (r30)']
Processing opcode: lwz, operands: ['r4', '0x0(r28)']
Translated lwz r4 0x0(r28) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[28]); // lwz r4, (r28)']
Translated bl fn_80016B0C to: fn_80016B0C();
Translated lis r3 gTRKCPUState@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r3, gTRKCPUState@ha']
Processing opcode: addi, operands: ['r5', 'r3', 'gTRKCPUState@l']
Translated addi r5 r3 gTRKCPUState@l to: ['gc_env.r[5] = (uint32_t)&gTRKCPUState; // lis + addi gTRKCPUState (completing pattern)']
Processing opcode: lwz, operands: ['r4', '0x80(r5)']
Translated lwz r4 0x80(r5) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x80); // lwz r4, 0x80(r5)']
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Processing opcode: addi, operands: ['r0', 'r4', '0x4']
Translated addi r0 r4 0x4 to: ['gc_env.r[0] = gc_env.r[4] + 4; // addi r0, r4, 0x4']
Processing opcode: stw, operands: ['r0', '0x80(r5)']
Translated stw r0 0x80(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x80, gc_env.r[0]); // stw r0, 0x80(r5)']
Translated lmw r27 0x1c(r1) to: ['gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lmw r27, 0x1C(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lmw r27, 0x1C(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r27, 0x1C(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r27, 0x1C(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r27, 0x1C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated cmplw r4 r5 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == (uint32_t)gc_env.r[5]) ? 0 : ((uint32_t)gc_env.r[4] < (uint32_t)gc_env.r[5] ? -1 : 1); // Logical compare word
Translated bge .L_80017E68 to: if (gc_env.cr[0] >= 0) goto L_80017E68;
Translated mr r3 r4 to: gc_env.r[3] = gc_env.r[4]; // Move register
Processing opcode: subf, operands: ['r4', 'r4', 'r5']
Translated subf r4 r4 r5 to: ['gc_env.r[4] = gc_env.r[5] - gc_env.r[4]; // subf r4, r4, r5']
Translated bl fn_80016B0C to: fn_80016B0C();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80017E6C to: goto L_80017E6C;
Processing opcode: li, operands: ['r3', '0x700']
Translated li r3 0x700 to: ['gc_env.r[3] = 0x700; // li r3, 0x700']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r3 gTRKState@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKState >> 16) & 0xFFFF; // lis r3, gTRKState@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'gTRKState@l']
Translated addi r3 r3 gTRKState@l to: ['gc_env.r[3] = (uint32_t)&gTRKState; // lis + addi gTRKState (completing pattern)']
Processing opcode: lwz, operands: ['r3', '0x98(r3)']
Translated lwz r3 0x98(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x98); // lwz r3, 0x98(r3)']
Translated blr  to: return;
Translated lis r4 gTRKState@ha to: ['gc_env.r[4] = ((uint32_t)&gTRKState >> 16) & 0xFFFF; // lis r4, gTRKState@ha']
Processing opcode: addi, operands: ['r4', 'r4', 'gTRKState@l']
Translated addi r4 r4 gTRKState@l to: ['gc_env.r[4] = (uint32_t)&gTRKState; // lis + addi gTRKState (completing pattern)']
Processing opcode: stw, operands: ['r3', '0x98(r4)']
Translated stw r3 0x98(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x98, gc_env.r[3]); // stw r3, 0x98(r4)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated bl fn_80017E8C to: fn_80017E8C();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Translated lis r6 lbl_8001A640@ha to: ['gc_env.r[6] = ((uint32_t)&lbl_8001A640 >> 16) & 0xFFFF; // lis r6, lbl_8001A640@ha']
Translated cmpwi r5 0x0 to: gc_env.cr[0] = (gc_env.r[5] == 0x0) ? 0 : (gc_env.r[5] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: addi, operands: ['r7', 'r6', 'lbl_8001A640@l']
Translated addi r7 r6 lbl_8001A640@l to: ['gc_env.r[7] = gc_env.r[6] + ((uint32_t)&lbl_8001A640 & 0xFFFF); // addi r7, r6, lbl_8001A640@l']
Processing opcode: lwz, operands: ['r6', '0x0(r7)']
Translated lwz r6 0x0(r7) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[7]); // lwz r6, (r7)']
Processing opcode: lwz, operands: ['r0', '0x4(r7)']
Translated lwz r0 0x4(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x4); // lwz r0, 0x4(r7)']
Processing opcode: stw, operands: ['r6', '0x8(r1)']
Translated stw r6 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[6]); // stw r6, 0x8(r1)']
Processing opcode: stw, operands: ['r0', '0xc(r1)']
Translated stw r0 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[0]); // stw r0, 0xC(r1)']
Processing opcode: lwz, operands: ['r6', '0x8(r7)']
Translated lwz r6 0x8(r7) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x8); // lwz r6, 0x8(r7)']
Processing opcode: lwz, operands: ['r0', '0xc(r7)']
Translated lwz r0 0xc(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0xC); // lwz r0, 0xC(r7)']
Processing opcode: stw, operands: ['r6', '0x10(r1)']
Translated stw r6 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[6]); // stw r6, 0x10(r1)']
Processing opcode: stw, operands: ['r0', '0x14(r1)']
Translated stw r0 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stw r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r0', '0x10(r7)']
Translated lwz r0 0x10(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x10); // lwz r0, 0x10(r7)']
Processing opcode: stw, operands: ['r0', '0x18(r1)']
Translated stw r0 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[0]); // stw r0, 0x18(r1)']
Translated beq .L_80017F34 to: if (gc_env.cr[0] == 0) goto L_80017F34;
Translated rlwinm r0 r4 0 20 26 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0xFE0; // rlwinm r0, r4, 0, 20, 26']
Translated slwi r6 r0 6 to: ['gc_env.r[6] = gc_env.r[0] << 6; // slwi r6, r0, 6']
Translated clrlwi r0 r4 27 to: ['gc_env.r[0] = gc_env.r[4] & 0x1F; // clrlwi r0, r4, 27']
Translated oris r4 r6 0x7c80 to: ['gc_env.r[4] = gc_env.r[6] | 0x7C800000; // oris r4, r6, 0x7C80']
Translated slwi r0 r0 16 to: ['gc_env.r[0] = gc_env.r[0] << 16; // slwi r0, r0, 16']
Translated or r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] | gc_env.r[0]; // or r0, r4, r0']
Translated ori r0 r0 0x2a6 to: ['gc_env.r[0] |= 678; // ori r0, r0, 0x2a6']
Processing opcode: stw, operands: ['r0', '0x8(r1)']
Translated stw r0 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stw r0, 0x8(r1)']
Translated lis r0 0x9083 to: ['gc_env.r[0] = -28541 << 16; // lis r0, 0x9083']
Processing opcode: stw, operands: ['r0', '0xc(r1)']
Translated stw r0 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[0]); // stw r0, 0xC(r1)']
Translated b .L_80017F5C to: goto L_80017F5C;
Translated rlwinm r0 r4 0 20 26 to: ['gc_env.r[0] = (gc_env.r[4] << 0) & 0xFE0; // rlwinm r0, r4, 0, 20, 26']
Translated slwi r6 r0 6 to: ['gc_env.r[6] = gc_env.r[0] << 6; // slwi r6, r0, 6']
Translated clrlwi r0 r4 27 to: ['gc_env.r[0] = gc_env.r[4] & 0x1F; // clrlwi r0, r4, 27']
Translated lis r7 0x8083 to: ['gc_env.r[7] = -32637 << 16; // lis r7, 0x8083']
Translated oris r4 r6 0x7c80 to: ['gc_env.r[4] = gc_env.r[6] | 0x7C800000; // oris r4, r6, 0x7C80']
Processing opcode: stw, operands: ['r7', '0x8(r1)']
Translated stw r7 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[7]); // stw r7, 0x8(r1)']
Translated slwi r0 r0 16 to: ['gc_env.r[0] = gc_env.r[0] << 16; // slwi r0, r0, 16']
Translated or r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] | gc_env.r[0]; // or r0, r4, r0']
Translated ori r0 r0 0x3a6 to: ['gc_env.r[0] |= 934; // ori r0, r0, 0x3a6']
Processing opcode: stw, operands: ['r0', '0xc(r1)']
Translated stw r0 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[0]); // stw r0, 0xC(r1)']
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated bl fn_8001816C to: fn_8001816C();
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Translated lis r6 lbl_8001A654@ha to: ['gc_env.r[6] = ((uint32_t)&lbl_8001A654 >> 16) & 0xFFFF; // lis r6, lbl_8001A654@ha']
Translated cmpwi r5 0x0 to: gc_env.cr[0] = (gc_env.r[5] == 0x0) ? 0 : (gc_env.r[5] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: addi, operands: ['r7', 'r6', 'lbl_8001A654@l']
Translated addi r7 r6 lbl_8001A654@l to: ['gc_env.r[7] = gc_env.r[6] + ((uint32_t)&lbl_8001A654 & 0xFFFF); // addi r7, r6, lbl_8001A654@l']
Processing opcode: lwz, operands: ['r6', '0x0(r7)']
Translated lwz r6 0x0(r7) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[7]); // lwz r6, (r7)']
Processing opcode: lwz, operands: ['r0', '0x4(r7)']
Translated lwz r0 0x4(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x4); // lwz r0, 0x4(r7)']
Processing opcode: stw, operands: ['r6', '0x8(r1)']
Translated stw r6 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[6]); // stw r6, 0x8(r1)']
Processing opcode: stw, operands: ['r0', '0xc(r1)']
Translated stw r0 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[0]); // stw r0, 0xC(r1)']
Processing opcode: lwz, operands: ['r6', '0x8(r7)']
Translated lwz r6 0x8(r7) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x8); // lwz r6, 0x8(r7)']
Processing opcode: lwz, operands: ['r0', '0xc(r7)']
Translated lwz r0 0xc(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0xC); // lwz r0, 0xC(r7)']
Processing opcode: stw, operands: ['r6', '0x10(r1)']
Translated stw r6 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[6]); // stw r6, 0x10(r1)']
Processing opcode: stw, operands: ['r0', '0x14(r1)']
Translated stw r0 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stw r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r0', '0x10(r7)']
Translated lwz r0 0x10(r7) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[7] + 0x10); // lwz r0, 0x10(r7)']
Processing opcode: stw, operands: ['r0', '0x18(r1)']
Translated stw r0 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[0]); // stw r0, 0x18(r1)']
Translated beq .L_80017FC8 to: if (gc_env.cr[0] == 0) goto L_80017FC8;
Translated slwi r0 r4 21 to: ['gc_env.r[0] = gc_env.r[4] << 21; // slwi r0, r4, 21']
Translated oris r0 r0 0xf003 to: ['gc_env.r[0] = gc_env.r[0] | 0xF0030000; // oris r0, r0, 0xF003']
Processing opcode: stw, operands: ['r0', '0x8(r1)']
Translated stw r0 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stw r0, 0x8(r1)']
Translated b .L_80017FD4 to: goto L_80017FD4;
Translated slwi r0 r4 21 to: ['gc_env.r[0] = gc_env.r[4] << 21; // slwi r0, r4, 21']
Translated oris r0 r0 0xe003 to: ['gc_env.r[0] = gc_env.r[0] | 0xE0030000; // oris r0, r0, 0xE003']
Processing opcode: stw, operands: ['r0', '0x8(r1)']
Translated stw r0 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stw r0, 0x8(r1)']
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated bl fn_8001816C to: fn_8001816C();
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x28(r1)']
Translated stwu r1 -0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x28, gc_env.r[1]); // stwu r1, -0x28(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x28;']
Processing opcode: stw, operands: ['r31', '0x24(r1)']
Translated stw r31 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[31]); // stw r31, 0x24(r1)']
Processing opcode: stw, operands: ['r30', '0x20(r1)']
Translated stw r30 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[30]); // stw r30, 0x20(r1)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated mr r31 r5 to: gc_env.r[31] = gc_env.r[5]; // Move register
Translated lis r3 lbl_8001A668@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001A668 >> 16) & 0xFFFF; // lis r3, lbl_8001A668@ha']
Translated cmplwi r4 0x20 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x20) ? 0 : ((uint32_t)gc_env.r[4] < 0x20 ? -1 : 1); // Logical compare with immediate
Processing opcode: addi, operands: ['r6', 'r3', 'lbl_8001A668@l']
Translated addi r6 r3 lbl_8001A668@l to: ['gc_env.r[6] = gc_env.r[3] + ((uint32_t)&lbl_8001A668 & 0xFFFF); // addi r6, r3, lbl_8001A668@l']
Processing opcode: lwz, operands: ['r5', '0x0(r6)']
Translated lwz r5 0x0(r6) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[6]); // lwz r5, (r6)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r0', '0x4(r6)']
Translated lwz r0 0x4(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x4); // lwz r0, 0x4(r6)']
Processing opcode: stw, operands: ['r5', '0x8(r1)']
Translated stw r5 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[5]); // stw r5, 0x8(r1)']
Processing opcode: stw, operands: ['r0', '0xc(r1)']
Translated stw r0 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[0]); // stw r0, 0xC(r1)']
Processing opcode: lwz, operands: ['r5', '0x8(r6)']
Translated lwz r5 0x8(r6) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x8); // lwz r5, 0x8(r6)']
Processing opcode: lwz, operands: ['r0', '0xc(r6)']
Translated lwz r0 0xc(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0xC); // lwz r0, 0xC(r6)']
Processing opcode: stw, operands: ['r5', '0x10(r1)']
Translated stw r5 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[5]); // stw r5, 0x10(r1)']
Processing opcode: stw, operands: ['r0', '0x14(r1)']
Translated stw r0 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stw r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r0', '0x10(r6)']
Translated lwz r0 0x10(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x10); // lwz r0, 0x10(r6)']
Processing opcode: stw, operands: ['r0', '0x18(r1)']
Translated stw r0 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[0]); // stw r0, 0x18(r1)']
Translated bge .L_8001807C to: if (gc_env.cr[0] >= 0) goto L_8001807C;
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8001805C to: if (gc_env.cr[0] == 0) goto L_8001805C;
Translated slwi r0 r4 21 to: ['gc_env.r[0] = gc_env.r[4] << 21; // slwi r0, r4, 21']
Translated oris r0 r0 0xd803 to: ['gc_env.r[0] = gc_env.r[0] | 0xD8030000; // oris r0, r0, 0xD803']
Processing opcode: stw, operands: ['r0', '0x8(r1)']
Translated stw r0 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stw r0, 0x8(r1)']
Translated b .L_80018068 to: goto L_80018068;
Translated slwi r0 r4 21 to: ['gc_env.r[0] = gc_env.r[4] << 21; // slwi r0, r4, 21']
Translated oris r0 r0 0xc803 to: ['gc_env.r[0] = gc_env.r[0] | 0xC8030000; // oris r0, r0, 0xC803']
Processing opcode: stw, operands: ['r0', '0x8(r1)']
Translated stw r0 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stw r0, 0x8(r1)']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated mr r5 r31 to: gc_env.r[5] = gc_env.r[31]; // Move register
Translated bl fn_8001816C to: fn_8001816C();
Translated b .L_80018154 to: goto L_80018154;
Translated bne .L_80018108 to: if (gc_env.cr[0] != 0) goto L_80018108;
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800180B0 to: if (gc_env.cr[0] == 0) goto L_800180B0;
Translated lis r0 0xd824 to: ['gc_env.r[0] = -10204 << 16; // lis r0, 0xd824']
Translated lis r3 0xfc20 to: ['gc_env.r[3] = -992 << 16; // lis r3, 0xfc20']
Processing opcode: stw, operands: ['r0', '0x8(r1)']
Translated stw r0 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stw r0, 0x8(r1)']
Processing opcode: addi, operands: ['r0', 'r3', '0x48e']
Translated addi r0 r3 0x48e to: ['gc_env.r[0] = gc_env.r[3] + 1166; // addi r0, r3, 0x48e']
Processing opcode: stw, operands: ['r0', '0xc(r1)']
Translated stw r0 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[0]); // stw r0, 0xC(r1)']
Translated lis r3 0xd823 to: ['gc_env.r[3] = -10205 << 16; // lis r3, 0xd823']
Translated lis r0 0xc824 to: ['gc_env.r[0] = -14300 << 16; // lis r0, 0xc824']
Processing opcode: stw, operands: ['r3', '0x10(r1)']
Translated stw r3 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[3]); // stw r3, 0x10(r1)']
Processing opcode: stw, operands: ['r0', '0x14(r1)']
Translated stw r0 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stw r0, 0x14(r1)']
Translated b .L_800180D4 to: goto L_800180D4;
Translated lis r0 0xd824 to: ['gc_env.r[0] = -10204 << 16; // lis r0, 0xd824']
Processing opcode: stw, operands: ['r0', '0x8(r1)']
Translated stw r0 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stw r0, 0x8(r1)']
Translated lis r0 0xc823 to: ['gc_env.r[0] = -14301 << 16; // lis r0, 0xc823']
Translated lis r3 0xfdfe to: ['gc_env.r[3] = -514 << 16; // lis r3, 0xfdfe']
Processing opcode: stw, operands: ['r0', '0xc(r1)']
Translated stw r0 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[0]); // stw r0, 0xC(r1)']
Processing opcode: addi, operands: ['r3', 'r3', '0xd8e']
Translated addi r3 r3 0xd8e to: ['gc_env.r[3] += 3470; // addi r3, r3, 0xd8e']
Translated lis r0 0xc824 to: ['gc_env.r[0] = -14300 << 16; // lis r0, 0xc824']
Processing opcode: stw, operands: ['r3', '0x10(r1)']
Translated stw r3 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[3]); // stw r3, 0x10(r1)']
Processing opcode: stw, operands: ['r0', '0x14(r1)']
Translated stw r0 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stw r0, 0x14(r1)']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Processing opcode: addi, operands: ['r4', 'r1', '0x8']
Translated addi r4 r1 0x8 to: ['gc_env.r[4] = gc_env.r[1] + 8; // addi r4, r1, 0x8']
Translated mr r5 r31 to: gc_env.r[5] = gc_env.r[31]; // Move register
Translated bl fn_8001816C to: fn_8001816C();
Processing opcode: lwz, operands: ['r6', '0x4(r30)']
Translated lwz r6 0x4(r30) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x4); // lwz r6, 0x4(r30)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: lwz, operands: ['r5', '0x0(r30)']
Translated lwz r5 0x0(r30) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r5, (r30)']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated and r0 r6 r0 to: gc_env.r[0] = gc_env.r[6] & gc_env.r[0];
Processing opcode: stw, operands: ['r0', '0x4(r30)']
Translated stw r0 0x4(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x4, gc_env.r[0]); // stw r0, 0x4(r30)']
Translated and r0 r5 r4 to: gc_env.r[0] = gc_env.r[5] & gc_env.r[4];
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Translated b .L_80018154 to: goto L_80018154;
Translated cmplwi r4 0x21 to: gc_env.cr[0] = ((uint32_t)gc_env.r[4] == 0x21) ? 0 : ((uint32_t)gc_env.r[4] < 0x21 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80018154 to: if (gc_env.cr[0] != 0) goto L_80018154;
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80018120 to: if (gc_env.cr[0] != 0) goto L_80018120;
Processing opcode: lwz, operands: ['r0', '0x4(r30)']
Translated lwz r0 0x4(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30] + 0x4); // lwz r0, 0x4(r30)']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated mr r5 r31 to: gc_env.r[5] = gc_env.r[31]; // Move register
Processing opcode: li, operands: ['r4', '0x3fe']
Translated li r4 0x3fe to: ['gc_env.r[4] = 0x3fe; // li r4, 0x3fe']
Translated bl fn_80017EC4 to: fn_80017EC4();
Translated cmpwi r31 0x0 to: gc_env.cr[0] = (gc_env.r[31] == 0x0) ? 0 : (gc_env.r[31] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80018154 to: if (gc_env.cr[0] == 0) goto L_80018154;
Processing opcode: lwz, operands: ['r5', '0x0(r30)']
Translated lwz r5 0x0(r30) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r5, (r30)']
Processing opcode: li, operands: ['r0', '-0x1']
Translated li r0 -0x1 to: ['gc_env.r[0] = -0x1; // li r0, -0x1']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated and r0 r5 r0 to: gc_env.r[0] = gc_env.r[5] & gc_env.r[0];
Processing opcode: stw, operands: ['r0', '0x4(r30)']
Translated stw r0 0x4(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30] + 0x4, gc_env.r[0]); // stw r0, 0x4(r30)']
Translated and r0 r4 r4 to: gc_env.r[0] = gc_env.r[4] & gc_env.r[4];
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Processing opcode: lwz, operands: ['r31', '0x24(r1)']
Translated lwz r31 0x24(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r31, 0x24(r1)']
Processing opcode: lwz, operands: ['r30', '0x20(r1)']
Translated lwz r30 0x20(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r30, 0x20(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x28']
Translated addi r1 r1 0x28 to: ['gc_env.r[1] += 40; // addi r1, r1, 0x28']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: stw, operands: ['r30', '0x8(r1)']
Translated stw r30 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[30]); // stw r30, 0x8(r1)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated mr r31 r4 to: gc_env.r[31] = gc_env.r[4]; // Move register
Translated lis r3 0x4e80 to: ['gc_env.r[3] = 20096 << 16; // lis r3, 0x4e80']
Processing opcode: addi, operands: ['r0', 'r3', '0x20']
Translated addi r0 r3 0x20 to: ['gc_env.r[0] = gc_env.r[3] + 32; // addi r0, r3, 0x20']
Processing opcode: stw, operands: ['r0', '0x10(r31)']
Translated stw r0 0x10(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x10, gc_env.r[0]); // stw r0, 0x10(r31)']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: li, operands: ['r4', '0x14']
Translated li r4 0x14 to: ['gc_env.r[4] = 0x14; // li r4, 0x14']
Translated bl fn_80016B0C to: fn_80016B0C();
Translated lis r3 lbl_8001E8E8@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001E8E8 >> 16) & 0xFFFF; // lis r3, lbl_8001E8E8@ha']
Processing opcode: addi, operands: ['r4', 'r3', 'lbl_8001E8E8@l']
Translated addi r4 r3 lbl_8001E8E8@l to: ['gc_env.r[4] = (uint32_t)&lbl_8001E8E8; // lis + addi lbl_8001E8E8 (completing pattern)']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated mr r12 r31 to: gc_env.r[12] = gc_env.r[31]; // Move register
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: lwz, operands: ['r30', '0x8(r1)']
Translated lwz r30 0x8(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r30, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r4 gTRKState@ha to: ['gc_env.r[4] = ((uint32_t)&gTRKState >> 16) & 0xFFFF; // lis r4, gTRKState@ha']
Processing opcode: addi, operands: ['r4', 'r4', 'gTRKState@l']
Translated addi r4 r4 gTRKState@l to: ['gc_env.r[4] = (uint32_t)&gTRKState; // lis + addi gTRKState (completing pattern)']
Processing opcode: stw, operands: ['r3', '0xa0(r4)']
Translated stw r3 0xa0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xA0, gc_env.r[3]); // stw r3, 0xA0(r4)']
Translated blr  to: return;
Processing opcode: subi, operands: ['r1', 'r1', '0x4']
Translated subi r1 r1 0x4 to: ['gc_env.r[1] = gc_env.r[1] - 4; // subi r1, r1, 4']
Processing opcode: stw, operands: ['r3', '0x0(r1)']
Translated stw r3 0x0(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1], gc_env.r[3]); // stw r3, (r1)']
Translated lis r3 gTRKCPUState@h to: ['gc_env.r[3] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r3, gTRKCPUState@h']
Translated ori r3 r3 gTRKCPUState@l to: ['gc_env.r[3] = (uint32_t)&gTRKCPUState; // lis + ori gTRKCPUState']
Translated stmw r0 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x0, gc_env.r[0]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[1]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x8, gc_env.r[2]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[3]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x10, gc_env.r[4]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x14, gc_env.r[5]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x18, gc_env.r[6]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x1C, gc_env.r[7]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x20, gc_env.r[8]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x24, gc_env.r[9]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x28, gc_env.r[10]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x2C, gc_env.r[11]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x30, gc_env.r[12]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x34, gc_env.r[13]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x38, gc_env.r[14]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x3C, gc_env.r[15]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x40, gc_env.r[16]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x44, gc_env.r[17]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x48, gc_env.r[18]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4C, gc_env.r[19]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x50, gc_env.r[20]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x54, gc_env.r[21]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x58, gc_env.r[22]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x5C, gc_env.r[23]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x60, gc_env.r[24]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x64, gc_env.r[25]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x68, gc_env.r[26]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x6C, gc_env.r[27]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x70, gc_env.r[28]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x74, gc_env.r[29]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x78, gc_env.r[30]); // stmw r0, 0x0(r3)', 'gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x7C, gc_env.r[31]); // stmw r0, 0x0(r3)']
Processing opcode: lwz, operands: ['r4', '0x0(r1)']
Translated lwz r4 0x0(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1]); // lwz r4, (r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x4']
Translated addi r1 r1 0x4 to: ['gc_env.r[1] += 4; // addi r1, r1, 0x4']
Processing opcode: stw, operands: ['r1', '0x4(r3)']
Translated stw r1 0x4(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[1]); // stw r1, 0x4(r3)']
Processing opcode: stw, operands: ['r4', '0xc(r3)']
Translated stw r4 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[4]); // stw r4, 0xC(r3)']
Translated mflr r4 to: gc_env.r[4] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r4', '0x84(r3)']
Translated stw r4 0x84(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x84, gc_env.r[4]); // stw r4, 0x84(r3)']
Processing opcode: stw, operands: ['r4', '0x80(r3)']
Translated stw r4 0x80(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x80, gc_env.r[4]); // stw r4, 0x80(r3)']
Translated mfcr r4 to: ['gc_env.r[4] = (gc_env.cr[0] << 28) | (gc_env.cr[1] << 24) | (gc_env.cr[2] << 20) | (gc_env.cr[3] << 16) | (gc_env.cr[4] << 12) | (gc_env.cr[5] << 8) | (gc_env.cr[6] << 4) | (gc_env.cr[7] << 0); // mfcr r4']
Processing opcode: stw, operands: ['r4', '0x88(r3)']
Translated stw r4 0x88(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x88, gc_env.r[4]); // stw r4, 0x88(r3)']
Translated mfmsr r4 to: gc_env.r[4] = gc_env.msr; // Move from machine state register
Translated ori r3 r4 0x8000 to: ['gc_env.r[3] = gc_env.r[4] | 32768; // ori r3, r4, 0x8000']
Translated xori r3 r3 0x8000 to: ['gc_env.r[3] = gc_env.r[3] ^ 32768; // xori r3, r3, 0x8000']
Translated mtmsr r3 to: gc_env.msr = gc_env.r[3]; // Move to machine state register
Translated mtsrr1 r4 to: ['gc_env.srr1 = gc_env.r[4]; // mtsrr1 r4']
Translated bl TRKSaveExtended1Block to: TRKSaveExtended1Block();
Translated lis r3 gTRKCPUState@h to: ['gc_env.r[3] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r3, gTRKCPUState@h']
Translated ori r3 r3 gTRKCPUState@l to: ['gc_env.r[3] = (uint32_t)&gTRKCPUState; // lis + ori gTRKCPUState']
Translated .4byte 0xB8030000 /* illegal: lmw r0 0x0(r3) */ to: ['// .4byte 0xB8030000']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated mtspr IABR r0 to: ['gc_env.iabr = gc_env.r[0]; // mtspr IABR, r0']
Translated mtspr DABR r0 to: ['// Unsupported SPR: DABR for mtspr DABR, r0']
Translated lis r1 _db_stack_addr@h to: ['gc_env.r[1] = ((uint32_t)&_db_stack_addr >> 16) & 0xFFFF; // lis r1, _db_stack_addr@h']
Translated ori r1 r1 _db_stack_addr@l to: ['gc_env.r[1] = (uint32_t)&_db_stack_addr; // lis + ori _db_stack_addr']
Translated mr r3 r5 to: gc_env.r[3] = gc_env.r[5]; // Move register
Translated bl InitMetroTRKCommTable to: InitMetroTRKCommTable();
Translated cmpwi r3 0x1 to: gc_env.cr[0] = (gc_env.r[3] == 0x1) ? 0 : (gc_env.r[3] < 0x1 ? -1 : 1); // Compare with immediate
Translated bne .L_80018274 to: if (gc_env.cr[0] != 0) goto L_80018274;
Processing opcode: lwz, operands: ['r4', '0x84(r3)']
Translated lwz r4 0x84(r3) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x84); // lwz r4, 0x84(r3)']
Translated mtlr r4 to: gc_env.lr = gc_env.r[4]; // Move to link register
Translated .4byte 0xB8030000 /* illegal: lmw r0 0x0(r3) */ to: ['// .4byte 0xB8030000']
Translated blr  to: return;
Translated b TRK_main to: TRK_main();
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_800189D0 to: fn_800189D0();
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r4 lbl_8001EDD0@ha to: ['gc_env.r[4] = ((uint32_t)&lbl_8001EDD0 >> 16) & 0xFFFF; // lis r4, lbl_8001EDD0@ha']
Processing opcode: addi, operands: ['r4', 'r4', 'lbl_8001EDD0@l']
Translated addi r4 r4 lbl_8001EDD0@l to: ['gc_env.r[4] = (uint32_t)&lbl_8001EDD0; // lis + addi lbl_8001EDD0 (completing pattern)']
Processing opcode: lwz, operands: ['r4', '0x0(r4)']
Translated lwz r4 0x0(r4) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r4, (r4)']
Translated cmplw r3 r4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[4]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[4] ? -1 : 1); // Logical compare word
Translated blt .L_800182D4 to: ['if (gc_env.cr[0] & 0x8) goto L_800182D4; // blt .L_800182D4']
Processing opcode: addi, operands: ['r0', 'r4', '0x4000']
Translated addi r0 r4 0x4000 to: ['gc_env.r[0] = gc_env.r[4] + 16384; // addi r0, r4, 0x4000']
Translated cmplw r3 r0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == (uint32_t)gc_env.r[0]) ? 0 : ((uint32_t)gc_env.r[3] < (uint32_t)gc_env.r[0] ? -1 : 1); // Logical compare word
Translated bge .L_800182D4 to: if (gc_env.cr[0] >= 0) goto L_800182D4;
Translated lis r4 gTRKCPUState@ha to: ['gc_env.r[4] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r4, gTRKCPUState@ha']
Processing opcode: addi, operands: ['r4', 'r4', 'gTRKCPUState@l']
Translated addi r4 r4 gTRKCPUState@l to: ['gc_env.r[4] = (uint32_t)&gTRKCPUState; // lis + addi gTRKCPUState (completing pattern)']
Processing opcode: lwz, operands: ['r0', '0x238(r4)']
Translated lwz r0 0x238(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x238); // lwz r0, 0x238(r4)']
Translated clrlwi r0 r0 30 to: ['gc_env.r[0] = gc_env.r[0] & 0x3; // clrlwi r0, r0, 30']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800182D4 to: if (gc_env.cr[0] == 0) goto L_800182D4;
Translated b .L_800182DC to: goto L_800182DC;
Translated clrlwi r0 r3 2 to: ['gc_env.r[0] = gc_env.r[3] & 0x3FFFFFFF; // clrlwi r0, r3, 2']
Translated oris r3 r0 0x8000 to: ['gc_env.r[3] = gc_env.r[0] | 0x80000000; // oris r3, r0, 0x8000']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: stw, operands: ['r30', '0x8(r1)']
Translated stw r30 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[30]); // stw r30, 0x8(r1)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Translated bl fn_80018298 to: fn_80018298();
Translated lis r4 gTRKInterruptVectorTable@ha to: ['gc_env.r[4] = ((uint32_t)&gTRKInterruptVectorTable >> 16) & 0xFFFF; // lis r4, gTRKInterruptVectorTable@ha']
Processing opcode: addi, operands: ['r0', 'r4', 'gTRKInterruptVectorTable@l']
Translated addi r0 r4 gTRKInterruptVectorTable@l to: ['gc_env.r[0] = (uint32_t)&gTRKInterruptVectorTable; // lis + addi gTRKInterruptVectorTable (completing pattern)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: add, operands: ['r4', 'r0', 'r30']
Translated add r4 r0 r30 to: ['gc_env.r[4] = gc_env.r[0] + gc_env.r[30]; // add r4, r0, r30']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: li, operands: ['r5', '0x100']
Translated li r5 0x100 to: ['gc_env.r[5] = 0x100; // li r5, 0x100']
Translated bl fn_800034C8 to: fn_800034C8();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: li, operands: ['r4', '0x100']
Translated li r4 0x100 to: ['gc_env.r[4] = 0x100; // li r4, 0x100']
Translated bl fn_80016B0C to: fn_80016B0C();
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: lwz, operands: ['r30', '0x8(r1)']
Translated lwz r30 0x8(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r30, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Processing opcode: stw, operands: ['r29', '0xc(r1)']
Translated stw r29 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[29]); // stw r29, 0xC(r1)']
Processing opcode: stw, operands: ['r28', '0x8(r1)']
Translated stw r28 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[28]); // stw r28, 0x8(r1)']
Processing opcode: li, operands: ['r3', '0x44']
Translated li r3 0x44 to: ['gc_env.r[3] = 0x44; // li r3, 0x44']
Translated bl fn_80018298 to: fn_80018298();
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Processing opcode: lwz, operands: ['r28', '0x0(r3)']
Translated lwz r28 0x0(r3) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r28, (r3)']
Translated lis r3 lbl_8001BAC8@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001BAC8 >> 16) & 0xFFFF; // lis r3, lbl_8001BAC8@ha']
Translated slwi r4 r29 2 to: ['gc_env.r[4] = gc_env.r[29] << 2; // slwi r4, r29, 2']
Processing opcode: addi, operands: ['r0', 'r3', 'lbl_8001BAC8@l']
Translated addi r0 r3 lbl_8001BAC8@l to: ['gc_env.r[0] = gc_env.r[3] + ((uint32_t)&lbl_8001BAC8 & 0xFFFF); // addi r0, r3, lbl_8001BAC8@l']
Processing opcode: add, operands: ['r30', 'r0', 'r4']
Translated add r30 r0 r4 to: ['gc_env.r[30] = gc_env.r[0] + gc_env.r[4]; // add r30, r0, r4']
Translated b .L_80018380 to: goto L_80018380;
Processing opcode: li, operands: ['r31', '0x1']
Translated li r31 0x1 to: ['gc_env.r[31] = 0x1; // li r31, 0x1']
Translated b .L_80018388 to: goto L_80018388;
Translated b .L_8001838C to: goto L_8001838C;
Translated slw r0 r31 r29 to: ['gc_env.r[0] = gc_env.r[31] << (gc_env.r[29] & 31); // slw r0, r31, r29']
Translated and r0 r28 r0 to: gc_env.r[0] = gc_env.r[28] & gc_env.r[0];
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800183A4 to: if (gc_env.cr[0] == 0) goto L_800183A4;
Processing opcode: lwz, operands: ['r3', '0x0(r30)']
Translated lwz r3 0x0(r30) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r3, (r30)']
Translated bl fn_800182E0 to: fn_800182E0();
Processing opcode: addi, operands: ['r30', 'r30', '0x4']
Translated addi r30 r30 0x4 to: ['gc_env.r[30] += 4; // addi r30, r30, 0x4']
Processing opcode: addi, operands: ['r29', 'r29', '0x1']
Translated addi r29 r29 0x1 to: ['gc_env.r[29] += 1; // addi r29, r29, 0x1']
Translated cmpwi r29 0xe to: gc_env.cr[0] = (gc_env.r[29] == 0xe) ? 0 : (gc_env.r[29] < 0xe ? -1 : 1); // Compare with immediate
Translated ble .L_8001838C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8001838C; // ble .L_8001838C']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: lwz, operands: ['r29', '0xc(r1)']
Translated lwz r29 0xc(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r29, 0xC(r1)']
Processing opcode: lwz, operands: ['r28', '0x8(r1)']
Translated lwz r28 0x8(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r28, 0x8(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated lis r3 gTRKState@ha to: ['gc_env.r[3] = ((uint32_t)&gTRKState >> 16) & 0xFFFF; // lis r3, gTRKState@ha']
Processing opcode: addi, operands: ['r31', 'r3', 'gTRKState@l']
Translated addi r31 r3 gTRKState@l to: ['gc_env.r[31] = (uint32_t)&gTRKState; // lis + addi gTRKState (completing pattern)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stw, operands: ['r0', '0x98(r31)']
Translated stw r0 0x98(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x98, gc_env.r[0]); // stw r0, 0x98(r31)']
Translated bl fn_80016C08 to: fn_80016C08();
Processing opcode: stw, operands: ['r3', '0x8c(r31)']
Translated stw r3 0x8c(r31) to: ['gc_mem_write32(gc_env.ram, gc_env.r[31] + 0x8C, gc_env.r[3]); // stw r3, 0x8C(r31)']
Translated lis r3 lbl_8001EDD0@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001EDD0 >> 16) & 0xFFFF; // lis r3, lbl_8001EDD0@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001EDD0@l']
Translated addi r3 r3 lbl_8001EDD0@l to: ['gc_env.r[3] = (uint32_t)&lbl_8001EDD0; // lis + addi lbl_8001EDD0 (completing pattern)']
Translated lis r0 0xe000 to: ['gc_env.r[0] = -8192 << 16; // lis r0, 0xe000']
Processing opcode: stw, operands: ['r0', '0x0(r3)']
Translated stw r0 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[0]); // stw r0, (r3)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r2 gTRKCPUState@h to: ['gc_env.r[2] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r2, gTRKCPUState@h']
Translated ori r2 r2 gTRKCPUState@l to: ['gc_env.r[2] = (uint32_t)&gTRKCPUState; // lis + ori gTRKCPUState']
Translated mfsr r16 0 to: ['gc_env.r[16] = gc_env.sr[0]; // mfsr r16, 0']
Translated mfsr r17 1 to: ['gc_env.r[17] = gc_env.sr[1]; // mfsr r17, 1']
Translated mfsr r18 2 to: ['gc_env.r[18] = gc_env.sr[2]; // mfsr r18, 2']
Translated mfsr r19 3 to: ['gc_env.r[19] = gc_env.sr[3]; // mfsr r19, 3']
Translated mfsr r20 4 to: ['gc_env.r[20] = gc_env.sr[4]; // mfsr r20, 4']
Translated mfsr r21 5 to: ['gc_env.r[21] = gc_env.sr[5]; // mfsr r21, 5']
Translated mfsr r22 6 to: ['gc_env.r[22] = gc_env.sr[6]; // mfsr r22, 6']
Translated mfsr r23 7 to: ['gc_env.r[23] = gc_env.sr[7]; // mfsr r23, 7']
Translated mfsr r24 8 to: ['gc_env.r[24] = gc_env.sr[8]; // mfsr r24, 8']
Translated mfsr r25 9 to: ['gc_env.r[25] = gc_env.sr[9]; // mfsr r25, 9']
Translated mfsr r26 10 to: ['gc_env.r[26] = gc_env.sr[10]; // mfsr r26, 10']
Translated mfsr r27 11 to: ['gc_env.r[27] = gc_env.sr[11]; // mfsr r27, 11']
Translated mfsr r28 12 to: ['gc_env.r[28] = gc_env.sr[12]; // mfsr r28, 12']
Translated mfsr r29 13 to: ['gc_env.r[29] = gc_env.sr[13]; // mfsr r29, 13']
Translated mfsr r30 14 to: ['gc_env.r[30] = gc_env.sr[14]; // mfsr r30, 14']
Translated mfsr r31 15 to: ['gc_env.r[31] = gc_env.sr[15]; // mfsr r31, 15']
Translated stmw r16 0x1a8(r2) to: ['gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1A8, gc_env.r[16]); // stmw r16, 0x1A8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1AC, gc_env.r[17]); // stmw r16, 0x1A8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1B0, gc_env.r[18]); // stmw r16, 0x1A8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1B4, gc_env.r[19]); // stmw r16, 0x1A8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1B8, gc_env.r[20]); // stmw r16, 0x1A8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1BC, gc_env.r[21]); // stmw r16, 0x1A8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1C0, gc_env.r[22]); // stmw r16, 0x1A8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1C4, gc_env.r[23]); // stmw r16, 0x1A8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1C8, gc_env.r[24]); // stmw r16, 0x1A8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1CC, gc_env.r[25]); // stmw r16, 0x1A8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1D0, gc_env.r[26]); // stmw r16, 0x1A8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1D4, gc_env.r[27]); // stmw r16, 0x1A8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1D8, gc_env.r[28]); // stmw r16, 0x1A8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1DC, gc_env.r[29]); // stmw r16, 0x1A8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1E0, gc_env.r[30]); // stmw r16, 0x1A8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1E4, gc_env.r[31]); // stmw r16, 0x1A8(r2)']
Translated mftb r10 268 to: ['gc_env.r[10] = (uint32_t)(gc_env.tb & 0xFFFFFFFF); // mftb r10, 268']
Translated mftb r11 269 to: ['gc_env.r[11] = (uint32_t)(gc_env.tb >> 32); // mftb r11, 269']
Translated mfspr r12 HID0 to: ['gc_env.r[12] = gc_env.hid0; // mfspr r12, HID0']
Translated mfspr r13 HID1 to: ['// Unsupported SPR: HID1 for mfspr r13, HID1']
Translated mfsrr1 r14 to: ['gc_env.r[14] = gc_env.srr1; // mfsrr1 r14']
Translated mfspr r15 PVR to: ['// Unsupported SPR: PVR for mfspr r15, PVR']
Unknown opcode: mfibatu r16 0
Unknown opcode: mfibatl r17 0
Unknown opcode: mfibatu r18 1
Unknown opcode: mfibatl r19 1
Unknown opcode: mfibatu r20 2
Unknown opcode: mfibatl r21 2
Unknown opcode: mfibatu r22 3
Unknown opcode: mfibatl r23 3
Unknown opcode: mfdbatu r24 0
Unknown opcode: mfdbatl r25 0
Unknown opcode: mfdbatu r26 1
Unknown opcode: mfdbatl r27 1
Unknown opcode: mfdbatu r28 2
Unknown opcode: mfdbatl r29 2
Unknown opcode: mfdbatu r30 3
Unknown opcode: mfdbatl r31 3
Translated stmw r10 0x1e8(r2) to: ['gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1E8, gc_env.r[10]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1EC, gc_env.r[11]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1F0, gc_env.r[12]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1F4, gc_env.r[13]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1F8, gc_env.r[14]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x1FC, gc_env.r[15]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x200, gc_env.r[16]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x204, gc_env.r[17]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x208, gc_env.r[18]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x20C, gc_env.r[19]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x210, gc_env.r[20]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x214, gc_env.r[21]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x218, gc_env.r[22]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x21C, gc_env.r[23]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x220, gc_env.r[24]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x224, gc_env.r[25]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x228, gc_env.r[26]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x22C, gc_env.r[27]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x230, gc_env.r[28]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x234, gc_env.r[29]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x238, gc_env.r[30]); // stmw r10, 0x1E8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x23C, gc_env.r[31]); // stmw r10, 0x1E8(r2)']
Unknown opcode: mfsdr1 r22
Translated mfdar r23 to: ['gc_env.r[23] = gc_env.dar; // mfdar r23']
Translated mfdsisr r24 to: ['gc_env.r[24] = gc_env.dsisr; // mfdsisr r24']
Translated mfsprg r25 0 to: ['gc_env.r[25] = gc_env.sprg[0]; // mfsprg r25, 0']
Translated mfsprg r26 1 to: ['gc_env.r[26] = gc_env.sprg[1]; // mfsprg r26, 1']
Translated mfsprg r27 2 to: ['gc_env.r[27] = gc_env.sprg[2]; // mfsprg r27, 2']
Translated mfsprg r28 3 to: ['gc_env.r[28] = gc_env.sprg[3]; // mfsprg r28, 3']
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Translated mfspr r30 IABR to: ['gc_env.r[30] = gc_env.iabr; // mfspr r30, IABR']
Unknown opcode: mfear r31
Translated stmw r22 0x25c(r2) to: ['gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x25C, gc_env.r[22]); // stmw r22, 0x25C(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x260, gc_env.r[23]); // stmw r22, 0x25C(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x264, gc_env.r[24]); // stmw r22, 0x25C(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x268, gc_env.r[25]); // stmw r22, 0x25C(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x26C, gc_env.r[26]); // stmw r22, 0x25C(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x270, gc_env.r[27]); // stmw r22, 0x25C(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x274, gc_env.r[28]); // stmw r22, 0x25C(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x278, gc_env.r[29]); // stmw r22, 0x25C(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x27C, gc_env.r[30]); // stmw r22, 0x25C(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x280, gc_env.r[31]); // stmw r22, 0x25C(r2)']
Translated mfspr r20 GQR0 to: ['gc_env.r[20] = gc_env.gqr[0]; // mfspr r20, GQR0']
Translated mfspr r21 GQR1 to: ['gc_env.r[21] = gc_env.gqr[1]; // mfspr r21, GQR1']
Translated mfspr r22 GQR2 to: ['gc_env.r[22] = gc_env.gqr[2]; // mfspr r22, GQR2']
Translated mfspr r23 GQR3 to: ['gc_env.r[23] = gc_env.gqr[3]; // mfspr r23, GQR3']
Translated mfspr r24 GQR4 to: ['gc_env.r[24] = gc_env.gqr[4]; // mfspr r24, GQR4']
Translated mfspr r25 GQR5 to: ['gc_env.r[25] = gc_env.gqr[5]; // mfspr r25, GQR5']
Translated mfspr r26 GQR6 to: ['gc_env.r[26] = gc_env.gqr[6]; // mfspr r26, GQR6']
Translated mfspr r27 GQR7 to: ['gc_env.r[27] = gc_env.gqr[7]; // mfspr r27, GQR7']
Translated mfspr r28 HID2 to: ['gc_env.r[28] = gc_env.hid2; // mfspr r28, HID2']
Translated mfspr r29 WPAR to: ['// Unsupported SPR: WPAR for mfspr r29, WPAR']
Translated mfspr r30 DMA_U to: ['// Unsupported SPR: DMA_U for mfspr r30, DMA_U']
Translated mfspr r31 DMA_L to: ['// Unsupported SPR: DMA_L for mfspr r31, DMA_L']
Translated stmw r20 0x2fc(r2) to: ['gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2FC, gc_env.r[20]); // stmw r20, 0x2FC(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x300, gc_env.r[21]); // stmw r20, 0x2FC(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x304, gc_env.r[22]); // stmw r20, 0x2FC(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x308, gc_env.r[23]); // stmw r20, 0x2FC(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x30C, gc_env.r[24]); // stmw r20, 0x2FC(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x310, gc_env.r[25]); // stmw r20, 0x2FC(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x314, gc_env.r[26]); // stmw r20, 0x2FC(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x318, gc_env.r[27]); // stmw r20, 0x2FC(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x31C, gc_env.r[28]); // stmw r20, 0x2FC(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x320, gc_env.r[29]); // stmw r20, 0x2FC(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x324, gc_env.r[30]); // stmw r20, 0x2FC(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x328, gc_env.r[31]); // stmw r20, 0x2FC(r2)']
Translated b .L_80018574 to: goto L_80018574;
Translated mfspr r16 928 to: ['// Unsupported SPR: 928 for mfspr r16, 928']
Translated mfspr r17 935 to: ['// Unsupported SPR: 935 for mfspr r17, 935']
Translated mfspr r18 UMMCR0 to: ['// Unsupported SPR: UMMCR0 for mfspr r18, UMMCR0']
Translated mfspr r19 UPMC1 to: ['// Unsupported SPR: UPMC1 for mfspr r19, UPMC1']
Translated mfspr r20 UPMC2 to: ['// Unsupported SPR: UPMC2 for mfspr r20, UPMC2']
Translated mfspr r21 USIA to: ['// Unsupported SPR: USIA for mfspr r21, USIA']
Translated mfspr r22 UMMCR1 to: ['// Unsupported SPR: UMMCR1 for mfspr r22, UMMCR1']
Translated mfspr r23 UPMC3 to: ['// Unsupported SPR: UPMC3 for mfspr r23, UPMC3']
Translated mfspr r24 UPMC4 to: ['// Unsupported SPR: UPMC4 for mfspr r24, UPMC4']
Translated mfspr r25 USDA to: ['// Unsupported SPR: USDA for mfspr r25, USDA']
Translated mfspr r26 944 to: ['// Unsupported SPR: 944 for mfspr r26, 944']
Translated mfspr r27 951 to: ['// Unsupported SPR: 951 for mfspr r27, 951']
Translated mfspr r28 SDA to: ['// Unsupported SPR: SDA for mfspr r28, SDA']
Translated mfspr r29 1014 to: ['// Unsupported SPR: 1014 for mfspr r29, 1014']
Translated mfspr r30 1015 to: ['// Unsupported SPR: 1015 for mfspr r30, 1015']
Translated mfspr r31 1023 to: ['// Unsupported SPR: 1023 for mfspr r31, 1023']
Translated stmw r16 0x2b8(r2) to: ['gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2B8, gc_env.r[16]); // stmw r16, 0x2B8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2BC, gc_env.r[17]); // stmw r16, 0x2B8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2C0, gc_env.r[18]); // stmw r16, 0x2B8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2C4, gc_env.r[19]); // stmw r16, 0x2B8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2C8, gc_env.r[20]); // stmw r16, 0x2B8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2CC, gc_env.r[21]); // stmw r16, 0x2B8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2D0, gc_env.r[22]); // stmw r16, 0x2B8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2D4, gc_env.r[23]); // stmw r16, 0x2B8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2D8, gc_env.r[24]); // stmw r16, 0x2B8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2DC, gc_env.r[25]); // stmw r16, 0x2B8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2E0, gc_env.r[26]); // stmw r16, 0x2B8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2E4, gc_env.r[27]); // stmw r16, 0x2B8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2E8, gc_env.r[28]); // stmw r16, 0x2B8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2EC, gc_env.r[29]); // stmw r16, 0x2B8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2F0, gc_env.r[30]); // stmw r16, 0x2B8(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2F4, gc_env.r[31]); // stmw r16, 0x2B8(r2)']
Translated mfspr r19 DABR to: ['// Unsupported SPR: DABR for mfspr r19, DABR']
Translated mfspr r20 PMC1 to: ['// Unsupported SPR: PMC1 for mfspr r20, PMC1']
Translated mfspr r21 PMC2 to: ['// Unsupported SPR: PMC2 for mfspr r21, PMC2']
Translated mfspr r22 PMC3 to: ['// Unsupported SPR: PMC3 for mfspr r22, PMC3']
Translated mfspr r23 PMC4 to: ['// Unsupported SPR: PMC4 for mfspr r23, PMC4']
Translated mfspr r24 SIA to: ['// Unsupported SPR: SIA for mfspr r24, SIA']
Translated mfspr r25 MMCR0 to: ['// Unsupported SPR: MMCR0 for mfspr r25, MMCR0']
Translated mfspr r26 MMCR1 to: ['// Unsupported SPR: MMCR1 for mfspr r26, MMCR1']
Translated mfspr r27 THRM1 to: ['// Unsupported SPR: THRM1 for mfspr r27, THRM1']
Translated mfspr r28 THRM2 to: ['// Unsupported SPR: THRM2 for mfspr r28, THRM2']
Translated mfspr r29 THRM3 to: ['// Unsupported SPR: THRM3 for mfspr r29, THRM3']
Translated mfspr r30 ICTC to: ['// Unsupported SPR: ICTC for mfspr r30, ICTC']
Translated mfspr r31 L2CR to: ['gc_env.r[31] = gc_env.l2cr; // mfspr r31, L2CR']
Translated stmw r19 0x284(r2) to: ['gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x284, gc_env.r[19]); // stmw r19, 0x284(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x288, gc_env.r[20]); // stmw r19, 0x284(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x28C, gc_env.r[21]); // stmw r19, 0x284(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x290, gc_env.r[22]); // stmw r19, 0x284(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x294, gc_env.r[23]); // stmw r19, 0x284(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x298, gc_env.r[24]); // stmw r19, 0x284(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x29C, gc_env.r[25]); // stmw r19, 0x284(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2A0, gc_env.r[26]); // stmw r19, 0x284(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2A4, gc_env.r[27]); // stmw r19, 0x284(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2A8, gc_env.r[28]); // stmw r19, 0x284(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2AC, gc_env.r[29]); // stmw r19, 0x284(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2B0, gc_env.r[30]); // stmw r19, 0x284(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x2B4, gc_env.r[31]); // stmw r19, 0x284(r2)']
Translated b .L_800185D8 to: goto L_800185D8;
Translated mfspr r25 976 to: ['// Unsupported SPR: 976 for mfspr r25, 976']
Translated mfspr r26 977 to: ['// Unsupported SPR: 977 for mfspr r26, 977']
Translated mfspr r27 978 to: ['// Unsupported SPR: 978 for mfspr r27, 978']
Translated mfspr r28 979 to: ['// Unsupported SPR: 979 for mfspr r28, 979']
Translated mfspr r29 980 to: ['// Unsupported SPR: 980 for mfspr r29, 980']
Translated mfspr r30 981 to: ['// Unsupported SPR: 981 for mfspr r30, 981']
Translated mfspr r31 982 to: ['// Unsupported SPR: 982 for mfspr r31, 982']
Translated stmw r25 0x240(r2) to: ['gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x240, gc_env.r[25]); // stmw r25, 0x240(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x244, gc_env.r[26]); // stmw r25, 0x240(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x248, gc_env.r[27]); // stmw r25, 0x240(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x24C, gc_env.r[28]); // stmw r25, 0x240(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x250, gc_env.r[29]); // stmw r25, 0x240(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x254, gc_env.r[30]); // stmw r25, 0x240(r2)', 'gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x258, gc_env.r[31]); // stmw r25, 0x240(r2)']
Unknown opcode: mfdec r31
Processing opcode: stw, operands: ['r31', '0x278(r2)']
Translated stw r31 0x278(r2) to: ['gc_mem_write32(gc_env.ram, gc_env.r[2] + 0x278, gc_env.r[31]); // stw r31, 0x278(r2)']
Translated blr  to: return;
Translated lis r2 gTRKCPUState@h to: ['gc_env.r[2] = ((uint32_t)&gTRKCPUState >> 16) & 0xFFFF; // lis r2, gTRKCPUState@h']
Translated ori r2 r2 gTRKCPUState@l to: ['gc_env.r[2] = (uint32_t)&gTRKCPUState; // lis + ori gTRKCPUState']
Translated lis r5 lbl_8001BA98@h to: ['gc_env.r[5] = ((uint32_t)&lbl_8001BA98 >> 16) & 0xFFFF; // lis r5, lbl_8001BA98@h']
Translated ori r5 r5 lbl_8001BA98@l to: ['gc_env.r[5] = (uint32_t)&lbl_8001BA98; // lis + ori lbl_8001BA98']
Processing opcode: lbz, operands: ['r3', '0x0(r5)']
Translated lbz r3 0x0(r5) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x0); // lbz r3, 0x0(r5)']
Processing opcode: lbz, operands: ['r6', '0x1(r5)']
Translated lbz r6 0x1(r5) to: ['gc_env.r[6] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x1); // lbz r6, 0x1(r5)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', '0x0(r5)']
Translated stb r0 0x0(r5) to: ['gc_mem_write8(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stb r0, (r5)']
Processing opcode: stb, operands: ['r0', '0x1(r5)']
Translated stb r0 0x1(r5) to: ['gc_mem_write8(gc_env.ram, gc_env.r[5] + 0x1, gc_env.r[0]); // stb r0, 0x1(r5)']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80018618 to: if (gc_env.cr[0] == 0) goto L_80018618;
Processing opcode: lwz, operands: ['r24', '0x1e8(r2)']
Translated lwz r24 0x1e8(r2) to: ['gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1E8); // lwz r24, 0x1E8(r2)']
Processing opcode: lwz, operands: ['r25', '0x1ec(r2)']
Translated lwz r25 0x1ec(r2) to: ['gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1EC); // lwz r25, 0x1EC(r2)']
Unknown opcode: mttbl r24
Unknown opcode: mttbu r25
Translated lmw r20 0x2fc(r2) to: ['gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x2FC); // lmw r20, 0x2FC(r2)', 'gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x300); // lmw r20, 0x2FC(r2)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x304); // lmw r20, 0x2FC(r2)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x308); // lmw r20, 0x2FC(r2)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x30C); // lmw r20, 0x2FC(r2)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x310); // lmw r20, 0x2FC(r2)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x314); // lmw r20, 0x2FC(r2)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x318); // lmw r20, 0x2FC(r2)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x31C); // lmw r20, 0x2FC(r2)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x320); // lmw r20, 0x2FC(r2)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x324); // lmw r20, 0x2FC(r2)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x328); // lmw r20, 0x2FC(r2)']
Translated mtspr GQR0 r20 to: ['gc_env.gqr[0] = gc_env.r[20]; // mtspr GQR0, r20']
Translated mtspr GQR1 r21 to: ['gc_env.gqr[1] = gc_env.r[21]; // mtspr GQR1, r21']
Translated mtspr GQR2 r22 to: ['gc_env.gqr[2] = gc_env.r[22]; // mtspr GQR2, r22']
Translated mtspr GQR3 r23 to: ['gc_env.gqr[3] = gc_env.r[23]; // mtspr GQR3, r23']
Translated mtspr GQR4 r24 to: ['gc_env.gqr[4] = gc_env.r[24]; // mtspr GQR4, r24']
Translated mtspr GQR5 r25 to: ['gc_env.gqr[5] = gc_env.r[25]; // mtspr GQR5, r25']
Translated mtspr GQR6 r26 to: ['gc_env.gqr[6] = gc_env.r[26]; // mtspr GQR6, r26']
Translated mtspr GQR7 r27 to: ['gc_env.gqr[7] = gc_env.r[27]; // mtspr GQR7, r27']
Translated mtspr HID2 r28 to: ['gc_env.hid2 = gc_env.r[28]; // mtspr HID2, r28']
Translated mtspr DMA_U r30 to: ['// Unsupported SPR: DMA_U for mtspr DMA_U, r30']
Translated mtspr DMA_L r31 to: ['// Unsupported SPR: DMA_L for mtspr DMA_L, r31']
Translated b .L_80018664 to: goto L_80018664;
Translated lmw r26 0x2e0(r2) to: ['gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x2E0); // lmw r26, 0x2E0(r2)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x2E4); // lmw r26, 0x2E0(r2)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x2E8); // lmw r26, 0x2E0(r2)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x2EC); // lmw r26, 0x2E0(r2)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x2F0); // lmw r26, 0x2E0(r2)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x2F4); // lmw r26, 0x2E0(r2)']
Translated mtspr 944 r26 to: ['// Unsupported SPR: 944 for mtspr 944, r26']
Translated mtspr 951 r27 to: ['// Unsupported SPR: 951 for mtspr 951, r27']
Translated mtspr 1014 r29 to: ['// Unsupported SPR: 1014 for mtspr 1014, r29']
Translated mtspr 1015 r30 to: ['// Unsupported SPR: 1015 for mtspr 1015, r30']
Translated mtspr 1023 r31 to: ['// Unsupported SPR: 1023 for mtspr 1023, r31']
Translated lmw r19 0x284(r2) to: ['gc_env.r[19] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x284); // lmw r19, 0x284(r2)', 'gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x288); // lmw r19, 0x284(r2)', 'gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x28C); // lmw r19, 0x284(r2)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x290); // lmw r19, 0x284(r2)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x294); // lmw r19, 0x284(r2)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x298); // lmw r19, 0x284(r2)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x29C); // lmw r19, 0x284(r2)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x2A0); // lmw r19, 0x284(r2)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x2A4); // lmw r19, 0x284(r2)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x2A8); // lmw r19, 0x284(r2)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x2AC); // lmw r19, 0x284(r2)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x2B0); // lmw r19, 0x284(r2)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x2B4); // lmw r19, 0x284(r2)']
Translated mtspr DABR r19 to: ['// Unsupported SPR: DABR for mtspr DABR, r19']
Translated mtspr PMC1 r20 to: ['// Unsupported SPR: PMC1 for mtspr PMC1, r20']
Translated mtspr PMC2 r21 to: ['// Unsupported SPR: PMC2 for mtspr PMC2, r21']
Translated mtspr PMC3 r22 to: ['// Unsupported SPR: PMC3 for mtspr PMC3, r22']
Translated mtspr PMC4 r23 to: ['// Unsupported SPR: PMC4 for mtspr PMC4, r23']
Translated mtspr SIA r24 to: ['// Unsupported SPR: SIA for mtspr SIA, r24']
Translated mtspr MMCR0 r25 to: ['// Unsupported SPR: MMCR0 for mtspr MMCR0, r25']
Translated mtspr MMCR1 r26 to: ['// Unsupported SPR: MMCR1 for mtspr MMCR1, r26']
Translated mtspr THRM1 r27 to: ['// Unsupported SPR: THRM1 for mtspr THRM1, r27']
Translated mtspr THRM2 r28 to: ['// Unsupported SPR: THRM2 for mtspr THRM2, r28']
Translated mtspr THRM3 r29 to: ['// Unsupported SPR: THRM3 for mtspr THRM3, r29']
Translated mtspr ICTC r30 to: ['// Unsupported SPR: ICTC for mtspr ICTC, r30']
Translated mtspr L2CR r31 to: ['gc_env.l2cr = gc_env.r[31]; // mtspr L2CR, r31']
Translated b .L_800186D0 to: goto L_800186D0;
Translated cmpwi r6 0x0 to: gc_env.cr[0] = (gc_env.r[6] == 0x0) ? 0 : (gc_env.r[6] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800186B0 to: if (gc_env.cr[0] == 0) goto L_800186B0;
Processing opcode: lwz, operands: ['r26', '0x278(r2)']
Translated lwz r26 0x278(r2) to: ['gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x278); // lwz r26, 0x278(r2)']
Translated mtdec r26 to: ['gc_env.dec = gc_env.r[26]; // mtdec r26']
Translated lmw r25 0x240(r2) to: ['gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x240); // lmw r25, 0x240(r2)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x244); // lmw r25, 0x240(r2)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x248); // lmw r25, 0x240(r2)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x24C); // lmw r25, 0x240(r2)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x250); // lmw r25, 0x240(r2)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x254); // lmw r25, 0x240(r2)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x258); // lmw r25, 0x240(r2)']
Translated mtspr 976 r25 to: ['// Unsupported SPR: 976 for mtspr 976, r25']
Translated mtspr 977 r26 to: ['// Unsupported SPR: 977 for mtspr 977, r26']
Translated mtspr 978 r27 to: ['// Unsupported SPR: 978 for mtspr 978, r27']
Translated mtspr 979 r28 to: ['// Unsupported SPR: 979 for mtspr 979, r28']
Translated mtspr 980 r29 to: ['// Unsupported SPR: 980 for mtspr 980, r29']
Translated mtspr 981 r30 to: ['// Unsupported SPR: 981 for mtspr 981, r30']
Translated mtspr 982 r31 to: ['// Unsupported SPR: 982 for mtspr 982, r31']
Translated lmw r16 0x1a8(r2) to: ['gc_env.r[16] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1A8); // lmw r16, 0x1A8(r2)', 'gc_env.r[17] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1AC); // lmw r16, 0x1A8(r2)', 'gc_env.r[18] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1B0); // lmw r16, 0x1A8(r2)', 'gc_env.r[19] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1B4); // lmw r16, 0x1A8(r2)', 'gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1B8); // lmw r16, 0x1A8(r2)', 'gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1BC); // lmw r16, 0x1A8(r2)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1C0); // lmw r16, 0x1A8(r2)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1C4); // lmw r16, 0x1A8(r2)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1C8); // lmw r16, 0x1A8(r2)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1CC); // lmw r16, 0x1A8(r2)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1D0); // lmw r16, 0x1A8(r2)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1D4); // lmw r16, 0x1A8(r2)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1D8); // lmw r16, 0x1A8(r2)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1DC); // lmw r16, 0x1A8(r2)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1E0); // lmw r16, 0x1A8(r2)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1E4); // lmw r16, 0x1A8(r2)']
Translated mtsr 0 r16 to: ['gc_env.sr[0] = gc_env.r[16]; // mtsr 0, r16']
Translated mtsr 1 r17 to: ['gc_env.sr[1] = gc_env.r[17]; // mtsr 1, r17']
Translated mtsr 2 r18 to: ['gc_env.sr[2] = gc_env.r[18]; // mtsr 2, r18']
Translated mtsr 3 r19 to: ['gc_env.sr[3] = gc_env.r[19]; // mtsr 3, r19']
Translated mtsr 4 r20 to: ['gc_env.sr[4] = gc_env.r[20]; // mtsr 4, r20']
Translated mtsr 5 r21 to: ['gc_env.sr[5] = gc_env.r[21]; // mtsr 5, r21']
Translated mtsr 6 r22 to: ['gc_env.sr[6] = gc_env.r[22]; // mtsr 6, r22']
Translated mtsr 7 r23 to: ['gc_env.sr[7] = gc_env.r[23]; // mtsr 7, r23']
Translated mtsr 8 r24 to: ['gc_env.sr[8] = gc_env.r[24]; // mtsr 8, r24']
Translated mtsr 9 r25 to: ['gc_env.sr[9] = gc_env.r[25]; // mtsr 9, r25']
Translated mtsr 10 r26 to: ['gc_env.sr[10] = gc_env.r[26]; // mtsr 10, r26']
Translated mtsr 11 r27 to: ['gc_env.sr[11] = gc_env.r[27]; // mtsr 11, r27']
Translated mtsr 12 r28 to: ['gc_env.sr[12] = gc_env.r[28]; // mtsr 12, r28']
Translated mtsr 13 r29 to: ['gc_env.sr[13] = gc_env.r[29]; // mtsr 13, r29']
Translated mtsr 14 r30 to: ['gc_env.sr[14] = gc_env.r[30]; // mtsr 14, r30']
Translated mtsr 15 r31 to: ['gc_env.sr[15] = gc_env.r[31]; // mtsr 15, r31']
Translated lmw r12 0x1f0(r2) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1F0); // lmw r12, 0x1F0(r2)', 'gc_env.r[13] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1F4); // lmw r12, 0x1F0(r2)', 'gc_env.r[14] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1F8); // lmw r12, 0x1F0(r2)', 'gc_env.r[15] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x1FC); // lmw r12, 0x1F0(r2)', 'gc_env.r[16] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x200); // lmw r12, 0x1F0(r2)', 'gc_env.r[17] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x204); // lmw r12, 0x1F0(r2)', 'gc_env.r[18] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x208); // lmw r12, 0x1F0(r2)', 'gc_env.r[19] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x20C); // lmw r12, 0x1F0(r2)', 'gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x210); // lmw r12, 0x1F0(r2)', 'gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x214); // lmw r12, 0x1F0(r2)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x218); // lmw r12, 0x1F0(r2)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x21C); // lmw r12, 0x1F0(r2)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x220); // lmw r12, 0x1F0(r2)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x224); // lmw r12, 0x1F0(r2)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x228); // lmw r12, 0x1F0(r2)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x22C); // lmw r12, 0x1F0(r2)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x230); // lmw r12, 0x1F0(r2)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x234); // lmw r12, 0x1F0(r2)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x238); // lmw r12, 0x1F0(r2)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x23C); // lmw r12, 0x1F0(r2)']
Translated mtspr HID0 r12 to: ['gc_env.hid0 = gc_env.r[12]; // mtspr HID0, r12']
Translated mtspr HID1 r13 to: ['// Unsupported SPR: HID1 for mtspr HID1, r13']
Translated mtsrr1 r14 to: ['gc_env.srr1 = gc_env.r[14]; // mtsrr1 r14']
Translated mtspr PVR r15 to: ['// Unsupported SPR: PVR for mtspr PVR, r15']
Translated mtibatu 0 r16 to: ['gc_env.ibatu[0] = gc_env.r[16]; // mtibatu 0, r16']
Translated mtibatl 0 r17 to: ['// mtibatl 0 r17 (not implemented)']
Translated mtibatu 1 r18 to: ['gc_env.ibatu[1] = gc_env.r[18]; // mtibatu 1, r18']
Translated mtibatl 1 r19 to: ['// mtibatl 1 r19 (not implemented)']
Translated mtibatu 2 r20 to: ['gc_env.ibatu[2] = gc_env.r[20]; // mtibatu 2, r20']
Translated mtibatl 2 r21 to: ['// mtibatl 2 r21 (not implemented)']
Translated mtibatu 3 r22 to: ['gc_env.ibatu[3] = gc_env.r[22]; // mtibatu 3, r22']
Translated mtibatl 3 r23 to: ['// mtibatl 3 r23 (not implemented)']
Translated mtdbatu 0 r24 to: ['gc_env.dbatu[0] = gc_env.r[24]; // mtdbatu 0, r24']
Translated mtdbatl 0 r25 to: ['// mtdbatl 0 r25 (not implemented)']
Translated mtdbatu 1 r26 to: ['gc_env.dbatu[1] = gc_env.r[26]; // mtdbatu 1, r26']
Translated mtdbatl 1 r27 to: ['// mtdbatl 1 r27 (not implemented)']
Translated mtdbatu 2 r28 to: ['gc_env.dbatu[2] = gc_env.r[28]; // mtdbatu 2, r28']
Translated mtdbatl 2 r29 to: ['// mtdbatl 2 r29 (not implemented)']
Translated mtdbatu 3 r30 to: ['gc_env.dbatu[3] = gc_env.r[30]; // mtdbatu 3, r30']
Translated mtdbatl 3 r31 to: ['// mtdbatl 3 r31 (not implemented)']
Translated lmw r22 0x25c(r2) to: ['gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x25C); // lmw r22, 0x25C(r2)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x260); // lmw r22, 0x25C(r2)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x264); // lmw r22, 0x25C(r2)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x268); // lmw r22, 0x25C(r2)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x26C); // lmw r22, 0x25C(r2)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x270); // lmw r22, 0x25C(r2)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x274); // lmw r22, 0x25C(r2)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x278); // lmw r22, 0x25C(r2)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x27C); // lmw r22, 0x25C(r2)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[2] + 0x280); // lmw r22, 0x25C(r2)']
Translated mtsdr1 r22 to: ['gc_env.sdr1 = gc_env.r[22]; // mtsdr1 r22']
Translated mtdar r23 to: ['gc_env.dar = gc_env.r[23]; // mtdar r23']
Translated mtdsisr r24 to: ['gc_env.dsisr = gc_env.r[24]; // mtdsisr r24']
Translated mtsprg 0 r25 to: ['gc_env.sprg[0] = gc_env.r[25]; // mtsprg 0, r25']
Translated mtsprg 1 r26 to: ['gc_env.sprg[1] = gc_env.r[26]; // mtsprg 1, r26']
Translated mtsprg 2 r27 to: ['gc_env.sprg[2] = gc_env.r[27]; // mtsprg 2, r27']
Translated mtsprg 3 r28 to: ['gc_env.sprg[3] = gc_env.r[28]; // mtsprg 3, r28']
Translated mtspr IABR r30 to: ['gc_env.iabr = gc_env.r[30]; // mtspr IABR, r30']
Translated mtear r31 to: ['gc_env.tear = gc_env.r[31]; // mtear r31']
Translated blr  to: return;
Processing opcode: li, operands: ['r3', '0x54']
Translated li r3 0x54 to: ['gc_env.r[3] = 0x54; // li r3, 0x54']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl TRKInitializeNub to: TRKInitializeNub();
Translated lis r4 TRK_mainError_8001EDD8@ha to: ['gc_env.r[4] = ((uint32_t)&TRK_mainError_8001EDD8 >> 16) & 0xFFFF; // lis r4, TRK_mainError_8001EDD8@ha']
Processing opcode: stwu, operands: ['r3', 'TRK_mainError_8001EDD8@l(r4)']
Translated stwu r3 TRK_mainError_8001EDD8@l(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + (uint32_t)&TRK_mainError_8001EDD8, gc_env.r[3]); // stwu r3, TRK_mainError_8001EDD8@l/h(r4)', 'gc_env.r[4] = gc_env.r[4] + (uint32_t)&TRK_mainError_8001EDD8;']
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_800187C8 to: if (gc_env.cr[0] != 0) goto L_800187C8;
Translated bl TRKNubWelcome to: TRKNubWelcome();
Translated bl TRKNubMainLoop to: TRKNubMainLoop();
Translated bl TRKTerminateNub to: TRKTerminateNub();
Translated lis r4 TRK_mainError_8001EDD8@ha to: ['gc_env.r[4] = ((uint32_t)&TRK_mainError_8001EDD8 >> 16) & 0xFFFF; // lis r4, TRK_mainError_8001EDD8@ha']
Processing opcode: stw, operands: ['r3', 'TRK_mainError_8001EDD8@l(r4)']
Translated stw r3 TRK_mainError_8001EDD8@l(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + (uint32_t)&TRK_mainError_8001EDD8, gc_env.r[3]); // stw r3, TRK_mainError_8001EDD8@l/h(r4)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Processing opcode: lwz, operands: ['r1', '0x4(r3)']
Translated lwz r1 0x4(r3) to: ['gc_env.r[1] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4); // lwz r1, 0x4(r3)']
Processing opcode: lwz, operands: ['r2', '0x8(r3)']
Translated lwz r2 0x8(r3) to: ['gc_env.r[2] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r2, 0x8(r3)']
Processing opcode: lhz, operands: ['r5', '0x1a2(r3)']
Translated lhz r5 0x1a2(r3) to: ['gc_env.r[5] = gc_mem_read16(gc_env.ram, gc_env.r[3] + 0x1a2); // lhz r5, 0x1a2(r3)']
Translated rlwinm. r6 r5 0 30 30 to: ['gc_env.r[6] = (gc_env.r[5] << 0) & 0x2; // rlwinm r6, r5, 0, 30, 30', 'gc_env.cr[0] = (gc_env.r[6] == 0) ? 0x2 : ((int32_t)gc_env.r[6] < 0 ? 0x8 : 0x4);']
Translated beq .L_8001880C to: if (gc_env.cr[0] == 0) goto L_8001880C;
Translated rlwinm r5 r5 0 31 29 to: ['gc_env.r[5] = (gc_env.r[5] << 0) & -0x3; // rlwinm r5, r5, 0, 31, 29']
Processing opcode: sth, operands: ['r5', '0x1a2(r3)']
Translated sth r5 0x1a2(r3) to: ['gc_mem_write16(gc_env.ram, gc_env.r[3] + 0x1A2, gc_env.r[5]); // sth r5, 0x1A2(r3)']
Translated lmw r5 0x14(r3) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x14); // lmw r5, 0x14(r3)', 'gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x18); // lmw r5, 0x14(r3)', 'gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x1C); // lmw r5, 0x14(r3)', 'gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x20); // lmw r5, 0x14(r3)', 'gc_env.r[9] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x24); // lmw r5, 0x14(r3)', 'gc_env.r[10] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x28); // lmw r5, 0x14(r3)', 'gc_env.r[11] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x2C); // lmw r5, 0x14(r3)', 'gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x30); // lmw r5, 0x14(r3)', 'gc_env.r[13] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x34); // lmw r5, 0x14(r3)', 'gc_env.r[14] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x38); // lmw r5, 0x14(r3)', 'gc_env.r[15] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x3C); // lmw r5, 0x14(r3)', 'gc_env.r[16] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x40); // lmw r5, 0x14(r3)', 'gc_env.r[17] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x44); // lmw r5, 0x14(r3)', 'gc_env.r[18] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x48); // lmw r5, 0x14(r3)', 'gc_env.r[19] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4C); // lmw r5, 0x14(r3)', 'gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x50); // lmw r5, 0x14(r3)', 'gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x54); // lmw r5, 0x14(r3)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x58); // lmw r5, 0x14(r3)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x5C); // lmw r5, 0x14(r3)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x60); // lmw r5, 0x14(r3)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x64); // lmw r5, 0x14(r3)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x68); // lmw r5, 0x14(r3)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6C); // lmw r5, 0x14(r3)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x70); // lmw r5, 0x14(r3)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x74); // lmw r5, 0x14(r3)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x78); // lmw r5, 0x14(r3)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x7C); // lmw r5, 0x14(r3)']
Translated b .L_80018810 to: goto L_80018810;
Translated lmw r13 0x34(r3) to: ['gc_env.r[13] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x34); // lmw r13, 0x34(r3)', 'gc_env.r[14] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x38); // lmw r13, 0x34(r3)', 'gc_env.r[15] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x3C); // lmw r13, 0x34(r3)', 'gc_env.r[16] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x40); // lmw r13, 0x34(r3)', 'gc_env.r[17] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x44); // lmw r13, 0x34(r3)', 'gc_env.r[18] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x48); // lmw r13, 0x34(r3)', 'gc_env.r[19] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4C); // lmw r13, 0x34(r3)', 'gc_env.r[20] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x50); // lmw r13, 0x34(r3)', 'gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x54); // lmw r13, 0x34(r3)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x58); // lmw r13, 0x34(r3)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x5C); // lmw r13, 0x34(r3)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x60); // lmw r13, 0x34(r3)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x64); // lmw r13, 0x34(r3)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x68); // lmw r13, 0x34(r3)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x6C); // lmw r13, 0x34(r3)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x70); // lmw r13, 0x34(r3)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x74); // lmw r13, 0x34(r3)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x78); // lmw r13, 0x34(r3)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x7C); // lmw r13, 0x34(r3)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated mr r3 r4 to: gc_env.r[3] = gc_env.r[4]; // Move register
Processing opcode: lwz, operands: ['r4', '0x80(r31)']
Translated lwz r4 0x80(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x80); // lwz r4, 0x80(r31)']
Translated mtcrf 255 r4 to: ['gc_env.cr[0] = (gc_env.r[4] >> 28) & 0xF;', 'gc_env.cr[1] = (gc_env.r[4] >> 24) & 0xF;', 'gc_env.cr[2] = (gc_env.r[4] >> 20) & 0xF;', 'gc_env.cr[3] = (gc_env.r[4] >> 16) & 0xF;', 'gc_env.cr[4] = (gc_env.r[4] >> 12) & 0xF;', 'gc_env.cr[5] = (gc_env.r[4] >> 8) & 0xF;', 'gc_env.cr[6] = (gc_env.r[4] >> 4) & 0xF;', 'gc_env.cr[7] = (gc_env.r[4] >> 0) & 0xF;', '// mtcrf 255, r4']
Processing opcode: lwz, operands: ['r4', '0x84(r31)']
Translated lwz r4 0x84(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x84); // lwz r4, 0x84(r31)']
Translated mtlr r4 to: gc_env.lr = gc_env.r[4]; // Move to link register
Processing opcode: lwz, operands: ['r4', '0x88(r31)']
Translated lwz r4 0x88(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x88); // lwz r4, 0x88(r31)']
Translated mtctr r4 to: gc_env.ctr = gc_env.r[4]; // Move to count register
Processing opcode: lwz, operands: ['r4', '0x8c(r31)']
Translated lwz r4 0x8c(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x8C); // lwz r4, 0x8C(r31)']
Translated mtxer r4 to: ['gc_env.xer = gc_env.r[4]; // mtxer r4']
Translated mfmsr r4 to: gc_env.r[4] = gc_env.msr; // Move from machine state register
Translated rlwinm r4 r4 0 17 15 to: ['gc_env.r[4] = (gc_env.r[4] << 0) & -0x8001; // rlwinm r4, r4, 0, 17, 15']
Translated rlwinm r4 r4 0 31 29 to: ['gc_env.r[4] = (gc_env.r[4] << 0) & -0x3; // rlwinm r4, r4, 0, 31, 29']
Translated mtmsr r4 to: gc_env.msr = gc_env.r[4]; // Move to machine state register
Translated mtsprg 1 r2 to: ['gc_env.sprg[1] = gc_env.r[2]; // mtsprg 1, r2']
Processing opcode: lwz, operands: ['r4', '0xc(r31)']
Translated lwz r4 0xc(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0xC); // lwz r4, 0xC(r31)']
Translated mtsprg 2 r4 to: ['gc_env.sprg[2] = gc_env.r[4]; // mtsprg 2, r4']
Processing opcode: lwz, operands: ['r4', '0x10(r31)']
Translated lwz r4 0x10(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x10); // lwz r4, 0x10(r31)']
Translated mtsprg 3 r4 to: ['gc_env.sprg[3] = gc_env.r[4]; // mtsprg 3, r4']
Processing opcode: lwz, operands: ['r2', '0x198(r31)']
Translated lwz r2 0x198(r31) to: ['gc_env.r[2] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x198); // lwz r2, 0x198(r31)']
Processing opcode: lwz, operands: ['r4', '0x19c(r31)']
Translated lwz r4 0x19c(r31) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x19C); // lwz r4, 0x19C(r31)']
Processing opcode: lwz, operands: ['r31', '0x7c(r31)']
Translated lwz r31 0x7c(r31) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[31] + 0x7C); // lwz r31, 0x7C(r31)']
Translated b TRKInterruptHandler to: TRKInterruptHandler();
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Translated mr r31 r4 to: gc_env.r[31] = gc_env.r[4]; // Move register
Translated bl OSEnableScheduler to: OSEnableScheduler();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: li, operands: ['r4', '0x500']
Translated li r4 0x500 to: ['gc_env.r[4] = 0x500; // li r4, 0x500']
Translated bl TRKLoadContext to: TRKLoadContext();
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated cmpwi r3 0x1 to: gc_env.cr[0] = (gc_env.r[3] == 0x1) ? 0 : (gc_env.r[3] < 0x1 ? -1 : 1); // Compare with immediate
Translated bne .L_8001891C to: if (gc_env.cr[0] != 0) goto L_8001891C;
Translated bl Hu_IsStub to: Hu_IsStub();
Translated lis r5 DBInitComm@ha to: ['gc_env.r[5] = ((uint32_t)&DBInitComm >> 16) & 0xFFFF; // lis r5, DBInitComm@ha']
Translated lis r4 gDBCommTable@ha to: ['gc_env.r[4] = ((uint32_t)&gDBCommTable >> 16) & 0xFFFF; // lis r4, gDBCommTable@ha']
Processing opcode: addi, operands: ['r0', 'r5', 'DBInitComm@l']
Translated addi r0 r5 DBInitComm@l to: ['gc_env.r[0] = gc_env.r[5] + ((uint32_t)&DBInitComm & 0xFFFF); // addi r0, r5, DBInitComm@l']
Processing opcode: addi, operands: ['r5', 'r4', 'gDBCommTable@l']
Translated addi r5 r4 gDBCommTable@l to: ['gc_env.r[5] = gc_env.r[4] + ((uint32_t)&gDBCommTable & 0xFFFF); // addi r5, r4, gDBCommTable@l']
Translated lis r4 DBInitInterrupts@ha to: ['gc_env.r[4] = ((uint32_t)&DBInitInterrupts >> 16) & 0xFFFF; // lis r4, DBInitInterrupts@ha']
Processing opcode: stw, operands: ['r0', '0x0(r5)']
Translated stw r0 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stw r0, (r5)']
Processing opcode: addi, operands: ['r0', 'r4', 'DBInitInterrupts@l']
Translated addi r0 r4 DBInitInterrupts@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&DBInitInterrupts & 0xFFFF); // addi r0, r4, DBInitInterrupts@l']
Translated lis r4 DBQueryData@ha to: ['gc_env.r[4] = ((uint32_t)&DBQueryData >> 16) & 0xFFFF; // lis r4, DBQueryData@ha']
Processing opcode: stw, operands: ['r0', '0x4(r5)']
Translated stw r0 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[0]); // stw r0, 0x4(r5)']
Processing opcode: addi, operands: ['r0', 'r4', 'DBQueryData@l']
Translated addi r0 r4 DBQueryData@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&DBQueryData & 0xFFFF); // addi r0, r4, DBQueryData@l']
Translated lis r4 DBRead@ha to: ['gc_env.r[4] = ((uint32_t)&DBRead >> 16) & 0xFFFF; // lis r4, DBRead@ha']
Processing opcode: stw, operands: ['r0', '0x8(r5)']
Translated stw r0 0x8(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x8, gc_env.r[0]); // stw r0, 0x8(r5)']
Processing opcode: addi, operands: ['r0', 'r4', 'DBRead@l']
Translated addi r0 r4 DBRead@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&DBRead & 0xFFFF); // addi r0, r4, DBRead@l']
Translated lis r4 DBWrite@ha to: ['gc_env.r[4] = ((uint32_t)&DBWrite >> 16) & 0xFFFF; // lis r4, DBWrite@ha']
Processing opcode: stw, operands: ['r0', '0xc(r5)']
Translated stw r0 0xc(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0xC, gc_env.r[0]); // stw r0, 0xC(r5)']
Processing opcode: addi, operands: ['r0', 'r4', 'DBWrite@l']
Translated addi r0 r4 DBWrite@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&DBWrite & 0xFFFF); // addi r0, r4, DBWrite@l']
Translated lis r4 DBOpen@ha to: ['gc_env.r[4] = ((uint32_t)&DBOpen >> 16) & 0xFFFF; // lis r4, DBOpen@ha']
Processing opcode: stw, operands: ['r0', '0x10(r5)']
Translated stw r0 0x10(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x10, gc_env.r[0]); // stw r0, 0x10(r5)']
Processing opcode: addi, operands: ['r0', 'r4', 'DBOpen@l']
Translated addi r0 r4 DBOpen@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&DBOpen & 0xFFFF); // addi r0, r4, DBOpen@l']
Translated lis r4 DBClose@ha to: ['gc_env.r[4] = ((uint32_t)&DBClose >> 16) & 0xFFFF; // lis r4, DBClose@ha']
Processing opcode: stw, operands: ['r0', '0x14(r5)']
Translated stw r0 0x14(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x14, gc_env.r[0]); // stw r0, 0x14(r5)']
Processing opcode: addi, operands: ['r0', 'r4', 'DBClose@l']
Translated addi r0 r4 DBClose@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&DBClose & 0xFFFF); // addi r0, r4, DBClose@l']
Processing opcode: stw, operands: ['r0', '0x18(r5)']
Translated stw r0 0x18(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x18, gc_env.r[0]); // stw r0, 0x18(r5)']
Translated b .L_8001897C to: goto L_8001897C;
Translated bl AMC_IsStub to: AMC_IsStub();
Translated lis r5 EXI2_Init@ha to: ['gc_env.r[5] = ((uint32_t)&EXI2_Init >> 16) & 0xFFFF; // lis r5, EXI2_Init@ha']
Translated lis r4 gDBCommTable@ha to: ['gc_env.r[4] = ((uint32_t)&gDBCommTable >> 16) & 0xFFFF; // lis r4, gDBCommTable@ha']
Processing opcode: addi, operands: ['r0', 'r5', 'EXI2_Init@l']
Translated addi r0 r5 EXI2_Init@l to: ['gc_env.r[0] = gc_env.r[5] + ((uint32_t)&EXI2_Init & 0xFFFF); // addi r0, r5, EXI2_Init@l']
Processing opcode: addi, operands: ['r5', 'r4', 'gDBCommTable@l']
Translated addi r5 r4 gDBCommTable@l to: ['gc_env.r[5] = gc_env.r[4] + ((uint32_t)&gDBCommTable & 0xFFFF); // addi r5, r4, gDBCommTable@l']
Translated lis r4 EXI2_EnableInterrupts@ha to: ['gc_env.r[4] = ((uint32_t)&EXI2_EnableInterrupts >> 16) & 0xFFFF; // lis r4, EXI2_EnableInterrupts@ha']
Processing opcode: stw, operands: ['r0', '0x0(r5)']
Translated stw r0 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stw r0, (r5)']
Processing opcode: addi, operands: ['r0', 'r4', 'EXI2_EnableInterrupts@l']
Translated addi r0 r4 EXI2_EnableInterrupts@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&EXI2_EnableInterrupts & 0xFFFF); // addi r0, r4, EXI2_EnableInterrupts@l']
Translated lis r4 EXI2_Poll@ha to: ['gc_env.r[4] = ((uint32_t)&EXI2_Poll >> 16) & 0xFFFF; // lis r4, EXI2_Poll@ha']
Processing opcode: stw, operands: ['r0', '0x4(r5)']
Translated stw r0 0x4(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x4, gc_env.r[0]); // stw r0, 0x4(r5)']
Processing opcode: addi, operands: ['r0', 'r4', 'EXI2_Poll@l']
Translated addi r0 r4 EXI2_Poll@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&EXI2_Poll & 0xFFFF); // addi r0, r4, EXI2_Poll@l']
Translated lis r4 EXI2_ReadN@ha to: ['gc_env.r[4] = ((uint32_t)&EXI2_ReadN >> 16) & 0xFFFF; // lis r4, EXI2_ReadN@ha']
Processing opcode: stw, operands: ['r0', '0x8(r5)']
Translated stw r0 0x8(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x8, gc_env.r[0]); // stw r0, 0x8(r5)']
Processing opcode: addi, operands: ['r0', 'r4', 'EXI2_ReadN@l']
Translated addi r0 r4 EXI2_ReadN@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&EXI2_ReadN & 0xFFFF); // addi r0, r4, EXI2_ReadN@l']
Translated lis r4 EXI2_WriteN@ha to: ['gc_env.r[4] = ((uint32_t)&EXI2_WriteN >> 16) & 0xFFFF; // lis r4, EXI2_WriteN@ha']
Processing opcode: stw, operands: ['r0', '0xc(r5)']
Translated stw r0 0xc(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0xC, gc_env.r[0]); // stw r0, 0xC(r5)']
Processing opcode: addi, operands: ['r0', 'r4', 'EXI2_WriteN@l']
Translated addi r0 r4 EXI2_WriteN@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&EXI2_WriteN & 0xFFFF); // addi r0, r4, EXI2_WriteN@l']
Translated lis r4 EXI2_Reserve@ha to: ['gc_env.r[4] = ((uint32_t)&EXI2_Reserve >> 16) & 0xFFFF; // lis r4, EXI2_Reserve@ha']
Processing opcode: stw, operands: ['r0', '0x10(r5)']
Translated stw r0 0x10(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x10, gc_env.r[0]); // stw r0, 0x10(r5)']
Processing opcode: addi, operands: ['r0', 'r4', 'EXI2_Reserve@l']
Translated addi r0 r4 EXI2_Reserve@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&EXI2_Reserve & 0xFFFF); // addi r0, r4, EXI2_Reserve@l']
Translated lis r4 EXI2_Unreserve@ha to: ['gc_env.r[4] = ((uint32_t)&EXI2_Unreserve >> 16) & 0xFFFF; // lis r4, EXI2_Unreserve@ha']
Processing opcode: stw, operands: ['r0', '0x14(r5)']
Translated stw r0 0x14(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x14, gc_env.r[0]); // stw r0, 0x14(r5)']
Processing opcode: addi, operands: ['r0', 'r4', 'EXI2_Unreserve@l']
Translated addi r0 r4 EXI2_Unreserve@l to: ['gc_env.r[0] = gc_env.r[4] + ((uint32_t)&EXI2_Unreserve & 0xFFFF); // addi r0, r4, EXI2_Unreserve@l']
Processing opcode: stw, operands: ['r0', '0x18(r5)']
Translated stw r0 0x18(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x18, gc_env.r[0]); // stw r0, 0x18(r5)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated lis r3 gDBCommTable@ha to: ['gc_env.r[3] = ((uint32_t)&gDBCommTable >> 16) & 0xFFFF; // lis r3, gDBCommTable@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'gDBCommTable@l']
Translated addi r3 r3 gDBCommTable@l to: ['gc_env.r[3] = (uint32_t)&gDBCommTable; // lis + addi gDBCommTable (completing pattern)']
Translated lis r4 TRKEXICallBack@ha to: ['gc_env.r[4] = ((uint32_t)&TRKEXICallBack >> 16) & 0xFFFF; // lis r4, TRKEXICallBack@ha']
Processing opcode: lwz, operands: ['r12', '0x0(r3)']
Translated lwz r12 0x0(r3) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r12, (r3)']
Processing opcode: addi, operands: ['r4', 'r4', 'TRKEXICallBack@l']
Translated addi r4 r4 TRKEXICallBack@l to: ['gc_env.r[4] = gc_env.r[4] + ((uint32_t)&TRKEXICallBack & 0xFFFF); // addi r4, r4, TRKEXICallBack@l']
Translated mr r3 r6 to: gc_env.r[3] = gc_env.r[6]; // Move register
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated lis r3 gDBCommTable@ha to: ['gc_env.r[3] = ((uint32_t)&gDBCommTable >> 16) & 0xFFFF; // lis r3, gDBCommTable@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'gDBCommTable@l']
Translated addi r3 r3 gDBCommTable@l to: ['gc_env.r[3] = (uint32_t)&gDBCommTable; // lis + addi gDBCommTable (completing pattern)']
Processing opcode: lwz, operands: ['r12', '0x4(r3)']
Translated lwz r12 0x4(r3) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4); // lwz r12, 0x4(r3)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated lis r3 gDBCommTable@ha to: ['gc_env.r[3] = ((uint32_t)&gDBCommTable >> 16) & 0xFFFF; // lis r3, gDBCommTable@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'gDBCommTable@l']
Translated addi r3 r3 gDBCommTable@l to: ['gc_env.r[3] = (uint32_t)&gDBCommTable; // lis + addi gDBCommTable (completing pattern)']
Processing opcode: lwz, operands: ['r12', '0x8(r3)']
Translated lwz r12 0x8(r3) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x8); // lwz r12, 0x8(r3)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated lis r5 gDBCommTable@ha to: ['gc_env.r[5] = ((uint32_t)&gDBCommTable >> 16) & 0xFFFF; // lis r5, gDBCommTable@ha']
Processing opcode: addi, operands: ['r5', 'r5', 'gDBCommTable@l']
Translated addi r5 r5 gDBCommTable@l to: ['gc_env.r[5] = (uint32_t)&gDBCommTable; // lis + addi gDBCommTable (completing pattern)']
Processing opcode: lwz, operands: ['r12', '0xc(r5)']
Translated lwz r12 0xc(r5) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0xC); // lwz r12, 0xC(r5)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80018A60 to: if (gc_env.cr[0] != 0) goto L_80018A60;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80018A64 to: goto L_80018A64;
Processing opcode: li, operands: ['r3', '-0x1']
Translated li r3 -0x1 to: ['gc_env.r[3] = -0x1; // li r3, -0x1']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated lis r5 gDBCommTable@ha to: ['gc_env.r[5] = ((uint32_t)&gDBCommTable >> 16) & 0xFFFF; // lis r5, gDBCommTable@ha']
Processing opcode: addi, operands: ['r5', 'r5', 'gDBCommTable@l']
Translated addi r5 r5 gDBCommTable@l to: ['gc_env.r[5] = (uint32_t)&gDBCommTable; // lis + addi gDBCommTable (completing pattern)']
Processing opcode: lwz, operands: ['r12', '0x10(r5)']
Translated lwz r12 0x10(r5) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x10); // lwz r12, 0x10(r5)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80018AA4 to: if (gc_env.cr[0] != 0) goto L_80018AA4;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80018AA8 to: goto L_80018AA8;
Processing opcode: li, operands: ['r3', '-0x1']
Translated li r3 -0x1 to: ['gc_env.r[3] = -0x1; // li r3, -0x1']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated lis r3 gDBCommTable@ha to: ['gc_env.r[3] = ((uint32_t)&gDBCommTable >> 16) & 0xFFFF; // lis r3, gDBCommTable@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'gDBCommTable@l']
Translated addi r3 r3 gDBCommTable@l to: ['gc_env.r[3] = (uint32_t)&gDBCommTable; // lis + addi gDBCommTable (completing pattern)']
Processing opcode: lwz, operands: ['r12', '0x14(r3)']
Translated lwz r12 0x14(r3) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x14); // lwz r12, 0x14(r3)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated lis r3 gDBCommTable@ha to: ['gc_env.r[3] = ((uint32_t)&gDBCommTable >> 16) & 0xFFFF; // lis r3, gDBCommTable@ha']
Processing opcode: addi, operands: ['r3', 'r3', 'gDBCommTable@l']
Translated addi r3 r3 gDBCommTable@l to: ['gc_env.r[3] = (uint32_t)&gDBCommTable; // lis + addi gDBCommTable (completing pattern)']
Processing opcode: lwz, operands: ['r12', '0x18(r3)']
Translated lwz r12 0x18(r3) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x18); // lwz r12, 0x18(r3)']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Translated bl OSReport to: OSReport();
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_80017E8C to: fn_80017E8C();
Translated bl fn_80018AE8 to: fn_80018AE8();
Translated bl fn_80017888 to: fn_80017888();
Translated bl fn_80018AB8 to: fn_80018AB8();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Processing opcode: lwz, operands: ['r0', '0x4(r1)']
Translated lwz r0 0x4(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4); // lwz r0, 0x4(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x50(r1)']
Translated stwu r1 -0x50(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x50, gc_env.r[1]); // stwu r1, -0x50(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x50;']
Translated stmw r21 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[21]); // stmw r21, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[22]); // stmw r21, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[23]); // stmw r21, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[24]); // stmw r21, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[25]); // stmw r21, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[26]); // stmw r21, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[27]); // stmw r21, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x40, gc_env.r[28]); // stmw r21, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x44, gc_env.r[29]); // stmw r21, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x48, gc_env.r[30]); // stmw r21, 0x24(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4C, gc_env.r[31]); // stmw r21, 0x24(r1)']
Processing opcode: addi, operands: ['r28', 'r3', '0x0']
Translated addi r28 r3 0x0 to: ['gc_env.r[28] = gc_env.r[3] + 0; // addi r28, r3, 0x0']
Processing opcode: addi, operands: ['r29', 'r4', '0x0']
Translated addi r29 r4 0x0 to: ['gc_env.r[29] = gc_env.r[4] + 0; // addi r29, r4, 0x0']
Processing opcode: addi, operands: ['r30', 'r5', '0x0']
Translated addi r30 r5 0x0 to: ['gc_env.r[30] = gc_env.r[5] + 0; // addi r30, r5, 0x0']
Processing opcode: addi, operands: ['r22', 'r6', '0x0']
Translated addi r22 r6 0x0 to: ['gc_env.r[22] = gc_env.r[6] + 0; // addi r22, r6, 0x0']
Processing opcode: li, operands: ['r21', '0x2']
Translated li r21 0x2 to: ['gc_env.r[21] = 0x2; // li r21, 0x2']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r4', 'lbl_8001EE48@sda21(r0)']
Translated lwz r4 lbl_8001EE48@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE48); // lwz r4, lbl_8001EE48@sda21(r0)']
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Processing opcode: lwz, operands: ['r0', '0xc(r4)']
Translated lwz r0 0xc(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xC); // lwz r0, 0xC(r4)']
Processing opcode: addi, operands: ['r3', 'r4', '0xc']
Translated addi r3 r4 0xc to: ['gc_env.r[3] = gc_env.r[4] + 12; // addi r3, r4, 0xc']
Translated clrlwi. r0 r0 30 to: ['gc_env.r[0] = gc_env.r[0] & 0x3; // clrlwi r0, r0, 30']
Translated bne .L_80018BBC to: if (gc_env.cr[0] != 0) goto L_80018BBC;
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Translated rlwinm. r0 r0 0 29 29 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x4; // rlwinm r0, r0, 0, 29, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_80018BCC to: if (gc_env.cr[0] != 0) goto L_80018BCC;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80018DA0 to: goto L_80018DA0;
Processing opcode: stw, operands: ['r22', '0x4(r4)']
Translated stw r22 0x4(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x4, gc_env.r[22]); // stw r22, 0x4(r4)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EE48@sda21(r0)']
Translated lwz r3 lbl_8001EE48@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE48); // lwz r3, lbl_8001EE48@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x4(r3)']
Translated lwz r0 0x4(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x4); // lwz r0, 0x4(r3)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80018BFC to: if (gc_env.cr[0] == 0) goto L_80018BFC;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: li, operands: ['r4', '0x1']
Translated li r4 0x1 to: ['gc_env.r[4] = 0x1; // li r4, 0x1']
Translated bl fn_80018F4C to: fn_80018F4C();
Processing opcode: mulli, operands: ['r0', 'r21', '0x3']
Translated mulli r0 r21 0x3 to: ['gc_env.r[0] = gc_env.r[21] * 3; // mulli r0, r21, 3']
Translated lis r3 0x20 to: ['gc_env.r[3] = 32 << 16; // lis r3, 0x20']
Translated srw r3 r3 r0 to: ['gc_env.r[3] = gc_env.r[3] >> (gc_env.r[0] & 31); // srw r3, r3, r0']
Translated bl __OSUnmaskInterrupts to: __OSUnmaskInterrupts();
Processing opcode: lwz, operands: ['r3', 'lbl_8001EE48@sda21(r0)']
Translated lwz r3 lbl_8001EE48@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE48); // lwz r3, lbl_8001EE48@sda21(r0)']
Translated cmplwi r30 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == 0x0) ? 0 : ((uint32_t)gc_env.r[30] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: lwz, operands: ['r0', '0xc(r3)']
Translated lwz r0 0xc(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0xC); // lwz r0, 0xC(r3)']
Translated ori r0 r0 0x2 to: ['gc_env.r[0] |= 2; // ori r0, r0, 0x2']
Processing opcode: stw, operands: ['r0', '0xc(r3)']
Translated stw r0 0xc(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0xC, gc_env.r[0]); // stw r0, 0xC(r3)']
Translated beq .L_80018D48 to: if (gc_env.cr[0] == 0) goto L_80018D48;
Processing opcode: li, operands: ['r12', '0x0']
Translated li r12 0x0 to: ['gc_env.r[12] = 0x0; // li r12, 0x0']
Translated cmpw r12 r29 to: ['gc_env.cr[0] = (int32_t)gc_env.r[12] < (int32_t)gc_env.r[29] ? 0x8 : ((int32_t)gc_env.r[12] > (int32_t)gc_env.r[29] ? 0x4 : 0x2); // cmpw r12, r29']
Processing opcode: li, operands: ['r11', '0x0']
Translated li r11 0x0 to: ['gc_env.r[11] = 0x0; // li r11, 0x0']
Translated bge .L_80018D40 to: if (gc_env.cr[0] >= 0) goto L_80018D40;
Translated cmpwi r29 0x8 to: gc_env.cr[0] = (gc_env.r[29] == 0x8) ? 0 : (gc_env.r[29] < 0x8 ? -1 : 1); // Compare with immediate
Processing opcode: subi, operands: ['r3', 'r29', '0x8']
Translated subi r3 r29 0x8 to: ['gc_env.r[3] = gc_env.r[29] - 8; // subi r3, r29, 8']
Translated ble .L_80018D98 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80018D98; // ble .L_80018D98']
Processing opcode: addi, operands: ['r0', 'r3', '0x7']
Translated addi r0 r3 0x7 to: ['gc_env.r[0] = gc_env.r[3] + 7; // addi r0, r3, 0x7']
Translated srwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] >> 3; // srwi r0, r0, 3']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Processing opcode: addi, operands: ['r10', 'r28', '0x0']
Translated addi r10 r28 0x0 to: ['gc_env.r[10] = gc_env.r[28] + 0; // addi r10, r28, 0x0']
Translated ble .L_80018D98 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80018D98; // ble .L_80018D98']
Translated subfic r3 r12 0x3 to: ['gc_env.r[3] = 3 - gc_env.r[12]; // subfic r3, r12, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[12] ? 0x20000000 : 0);']
Processing opcode: lbz, operands: ['r9', '0x0(r10)']
Translated lbz r9 0x0(r10) to: ['gc_env.r[9] = gc_mem_read8(gc_env.ram, gc_env.r[10] + 0x0); // lbz r9, 0x0(r10)']
Processing opcode: addi, operands: ['r0', 'r12', '0x1']
Translated addi r0 r12 0x1 to: ['gc_env.r[0] = gc_env.r[12] + 1; // addi r0, r12, 0x1']
Processing opcode: lbz, operands: ['r8', '0x1(r10)']
Translated lbz r8 0x1(r10) to: ['gc_env.r[8] = gc_mem_read8(gc_env.ram, gc_env.r[10] + 0x1); // lbz r8, 0x1(r10)']
Translated slwi r7 r3 3 to: ['gc_env.r[7] = gc_env.r[3] << 3; // slwi r7, r3, 3']
Processing opcode: lbz, operands: ['r6', '0x2(r10)']
Translated lbz r6 0x2(r10) to: ['gc_env.r[6] = gc_mem_read8(gc_env.ram, gc_env.r[10] + 0x2); // lbz r6, 0x2(r10)']
Translated subfic r5 r0 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[0]; // subfic r5, r0, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[0] ? 0x20000000 : 0);']
Processing opcode: lbz, operands: ['r4', '0x3(r10)']
Translated lbz r4 0x3(r10) to: ['gc_env.r[4] = gc_mem_read8(gc_env.ram, gc_env.r[10] + 0x3); // lbz r4, 0x3(r10)']
Processing opcode: addi, operands: ['r3', 'r12', '0x2']
Translated addi r3 r12 0x2 to: ['gc_env.r[3] = gc_env.r[12] + 2; // addi r3, r12, 0x2']
Processing opcode: lbz, operands: ['r0', '0x4(r10)']
Translated lbz r0 0x4(r10) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[10] + 0x4); // lbz r0, 0x4(r10)']
Translated slw r9 r9 r7 to: ['gc_env.r[9] = gc_env.r[9] << (gc_env.r[7] & 31); // slw r9, r9, r7']
Processing opcode: lbz, operands: ['r22', '0x5(r10)']
Translated lbz r22 0x5(r10) to: ['gc_env.r[22] = gc_mem_read8(gc_env.ram, gc_env.r[10] + 0x5); // lbz r22, 0x5(r10)']
Translated slwi r7 r5 3 to: ['gc_env.r[7] = gc_env.r[5] << 3; // slwi r7, r5, 3']
Processing opcode: lbz, operands: ['r24', '0x6(r10)']
Translated lbz r24 0x6(r10) to: ['gc_env.r[24] = gc_mem_read8(gc_env.ram, gc_env.r[10] + 0x6); // lbz r24, 0x6(r10)']
Translated subfic r3 r3 0x3 to: ['gc_env.r[3] = 3 - gc_env.r[3]; // subfic r3, r3, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[3] ? 0x20000000 : 0);']
Processing opcode: lbz, operands: ['r26', '0x7(r10)']
Translated lbz r26 0x7(r10) to: ['gc_env.r[26] = gc_mem_read8(gc_env.ram, gc_env.r[10] + 0x7); // lbz r26, 0x7(r10)']
Translated slwi r5 r3 3 to: ['gc_env.r[5] = gc_env.r[3] << 3; // slwi r5, r3, 3']
Translated neg r3 r12 to: ['gc_env.r[3] = -(int32_t)gc_env.r[12]; // neg r3, r12']
Processing opcode: addi, operands: ['r21', 'r12', '0x4']
Translated addi r21 r12 0x4 to: ['gc_env.r[21] = gc_env.r[12] + 4; // addi r21, r12, 0x4']
Translated slwi r3 r3 3 to: ['gc_env.r[3] = gc_env.r[3] << 3; // slwi r3, r3, 3']
Translated subfic r21 r21 0x3 to: ['gc_env.r[21] = 3 - gc_env.r[21]; // subfic r21, r21, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[21] ? 0x20000000 : 0);']
Processing opcode: addi, operands: ['r23', 'r12', '0x5']
Translated addi r23 r12 0x5 to: ['gc_env.r[23] = gc_env.r[12] + 5; // addi r23, r12, 0x5']
Translated slwi r21 r21 3 to: ['gc_env.r[21] = gc_env.r[21] << 3; // slwi r21, r21, 3']
Translated subfic r23 r23 0x3 to: ['gc_env.r[23] = 3 - gc_env.r[23]; // subfic r23, r23, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[23] ? 0x20000000 : 0);']
Processing opcode: addi, operands: ['r25', 'r12', '0x6']
Translated addi r25 r12 0x6 to: ['gc_env.r[25] = gc_env.r[12] + 6; // addi r25, r12, 0x6']
Translated slwi r23 r23 3 to: ['gc_env.r[23] = gc_env.r[23] << 3; // slwi r23, r23, 3']
Translated subfic r25 r25 0x3 to: ['gc_env.r[25] = 3 - gc_env.r[25]; // subfic r25, r25, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[25] ? 0x20000000 : 0);']
Processing opcode: addi, operands: ['r27', 'r12', '0x7']
Translated addi r27 r12 0x7 to: ['gc_env.r[27] = gc_env.r[12] + 7; // addi r27, r12, 0x7']
Translated slwi r25 r25 3 to: ['gc_env.r[25] = gc_env.r[25] << 3; // slwi r25, r25, 3']
Translated subfic r27 r27 0x3 to: ['gc_env.r[27] = 3 - gc_env.r[27]; // subfic r27, r27, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[27] ? 0x20000000 : 0);']
Translated slwi r27 r27 3 to: ['gc_env.r[27] = gc_env.r[27] << 3; // slwi r27, r27, 3']
Translated or r11 r11 r9 to: ['gc_env.r[11] = gc_env.r[11] | gc_env.r[9]; // or r11, r11, r9']
Translated slw r7 r8 r7 to: ['gc_env.r[7] = gc_env.r[8] << (gc_env.r[7] & 31); // slw r7, r8, r7']
Translated or r11 r11 r7 to: ['gc_env.r[11] = gc_env.r[11] | gc_env.r[7]; // or r11, r11, r7']
Translated slw r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[6] << (gc_env.r[5] & 31); // slw r5, r6, r5']
Translated or r11 r11 r5 to: ['gc_env.r[11] = gc_env.r[11] | gc_env.r[5]; // or r11, r11, r5']
Translated slw r3 r4 r3 to: ['gc_env.r[3] = gc_env.r[4] << (gc_env.r[3] & 31); // slw r3, r4, r3']
Translated or r11 r11 r3 to: ['gc_env.r[11] = gc_env.r[11] | gc_env.r[3]; // or r11, r11, r3']
Translated slw r0 r0 r21 to: ['gc_env.r[0] = gc_env.r[0] << (gc_env.r[21] & 31); // slw r0, r0, r21']
Translated or r11 r11 r0 to: ['gc_env.r[11] = gc_env.r[11] | gc_env.r[0]; // or r11, r11, r0']
Translated slw r0 r22 r23 to: ['gc_env.r[0] = gc_env.r[22] << (gc_env.r[23] & 31); // slw r0, r22, r23']
Translated or r11 r11 r0 to: ['gc_env.r[11] = gc_env.r[11] | gc_env.r[0]; // or r11, r11, r0']
Translated slw r0 r24 r25 to: ['gc_env.r[0] = gc_env.r[24] << (gc_env.r[25] & 31); // slw r0, r24, r25']
Translated or r11 r11 r0 to: ['gc_env.r[11] = gc_env.r[11] | gc_env.r[0]; // or r11, r11, r0']
Translated slw r0 r26 r27 to: ['gc_env.r[0] = gc_env.r[26] << (gc_env.r[27] & 31); // slw r0, r26, r27']
Translated or r11 r11 r0 to: ['gc_env.r[11] = gc_env.r[11] | gc_env.r[0]; // or r11, r11, r0']
Processing opcode: addi, operands: ['r10', 'r10', '0x8']
Translated addi r10 r10 0x8 to: ['gc_env.r[10] += 8; // addi r10, r10, 0x8']
Processing opcode: addi, operands: ['r12', 'r12', '0x8']
Translated addi r12 r12 0x8 to: ['gc_env.r[12] += 8; // addi r12, r12, 0x8']
Translated bdnz .L_80018C48 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80018C48;']
Translated b .L_80018D98 to: goto L_80018D98;
Processing opcode: subf, operands: ['r0', 'r12', 'r29']
Translated subf r0 r12 r29 to: ['gc_env.r[0] = gc_env.r[29] - gc_env.r[12]; // subf r0, r12, r29']
Translated cmpw r12 r29 to: ['gc_env.cr[0] = (int32_t)gc_env.r[12] < (int32_t)gc_env.r[29] ? 0x8 : ((int32_t)gc_env.r[12] > (int32_t)gc_env.r[29] ? 0x4 : 0x2); // cmpw r12, r29']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bge .L_80018D40 to: if (gc_env.cr[0] >= 0) goto L_80018D40;
Translated subfic r0 r12 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[12]; // subfic r0, r12, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[12] ? 0x20000000 : 0);']
Processing opcode: lbz, operands: ['r3', '0x0(r4)']
Translated lbz r3 0x0(r4) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, gc_env.r[4] + 0x0); // lbz r3, 0x0(r4)']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Translated slw r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] << (gc_env.r[0] & 31); // slw r0, r3, r0']
Translated or r11 r11 r0 to: ['gc_env.r[11] = gc_env.r[11] | gc_env.r[0]; // or r11, r11, r0']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Processing opcode: addi, operands: ['r12', 'r12', '0x1']
Translated addi r12 r12 0x1 to: ['gc_env.r[12] += 1; // addi r12, r12, 0x1']
Translated bdnz .L_80018D20 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80018D20;']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: stw, operands: ['r11', '0x6838(r3)']
Translated stw r11 0x6838(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x6838, gc_env.r[11]); // stw r11, 0x6838(r3)']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EE48@sda21(r0)']
Translated lwz r3 lbl_8001EE48@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE48); // lwz r3, lbl_8001EE48@sda21(r0)']
Translated cmplwi r30 0x1 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == 0x1) ? 0 : ((uint32_t)gc_env.r[30] < 0x1 ? -1 : 1); // Logical compare with immediate
Processing opcode: stw, operands: ['r28', '0x14(r3)']
Translated stw r28 0x14(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x14, gc_env.r[28]); // stw r28, 0x14(r3)']
Translated beq .L_80018D60 to: if (gc_env.cr[0] == 0) goto L_80018D60;
Translated mr r6 r29 to: gc_env.r[6] = gc_env.r[29]; // Move register
Translated b .L_80018D64 to: goto L_80018D64;
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Processing opcode: lwz, operands: ['r5', 'lbl_8001EE48@sda21(r0)']
Translated lwz r5 lbl_8001EE48@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE48); // lwz r5, lbl_8001EE48@sda21(r0)']
Translated slwi r4 r30 2 to: ['gc_env.r[4] = gc_env.r[30] << 2; // slwi r4, r30, 2']
Processing opcode: subi, operands: ['r0', 'r29', '0x1']
Translated subi r0 r29 0x1 to: ['gc_env.r[0] = gc_env.r[29] - 1; // subi r0, r29, 1']
Processing opcode: stw, operands: ['r6', '0x10(r5)']
Translated stw r6 0x10(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x10, gc_env.r[6]); // stw r6, 0x10(r5)']
Translated ori r4 r4 0x1 to: ['gc_env.r[4] |= 1; // ori r4, r4, 0x1']
Translated slwi r0 r0 4 to: ['gc_env.r[0] = gc_env.r[0] << 4; // slwi r0, r0, 4']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Translated or r0 r4 r0 to: ['gc_env.r[0] = gc_env.r[4] | gc_env.r[0]; // or r0, r4, r0']
Processing opcode: stw, operands: ['r0', '0x6834(r3)']
Translated stw r0 0x6834(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x6834, gc_env.r[0]); // stw r0, 0x6834(r3)']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated b .L_80018DA0 to: goto L_80018DA0;
Processing opcode: add, operands: ['r4', 'r28', 'r12']
Translated add r4 r28 r12 to: ['gc_env.r[4] = gc_env.r[28] + gc_env.r[12]; // add r4, r28, r12']
Translated b .L_80018D10 to: goto L_80018D10;
Translated lmw r21 0x24(r1) to: ['gc_env.r[21] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lmw r21, 0x24(r1)', 'gc_env.r[22] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lmw r21, 0x24(r1)', 'gc_env.r[23] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r21, 0x24(r1)', 'gc_env.r[24] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r21, 0x24(r1)', 'gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r21, 0x24(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x38); // lmw r21, 0x24(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lmw r21, 0x24(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x40); // lmw r21, 0x24(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lmw r21, 0x24(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x48); // lmw r21, 0x24(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4C); // lmw r21, 0x24(r1)']
Processing opcode: lwz, operands: ['r0', '0x54(r1)']
Translated lwz r0 0x54(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x54); // lwz r0, 0x54(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x50']
Translated addi r1 r1 0x50 to: ['gc_env.r[1] += 80; // addi r1, r1, 0x50']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r4', 'lbl_8001EE48@sda21(r0)']
Translated lwz r4 lbl_8001EE48@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE48); // lwz r4, lbl_8001EE48@sda21(r0)']
Translated b .L_80018F24 to: goto L_80018F24;
Processing opcode: lwz, operands: ['r0', '0x34(r3)']
Translated lwz r0 0x34(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x34); // lwz r0, 0x34(r3)']
Translated clrlwi. r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Translated bne .L_80018F2C to: if (gc_env.cr[0] != 0) goto L_80018F2C;
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r6', 'lbl_8001EE48@sda21(r0)']
Translated lwz r6 lbl_8001EE48@sda21(r0) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE48); // lwz r6, lbl_8001EE48@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0xc(r6)']
Translated lwz r0 0xc(r6) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0xC); // lwz r0, 0xC(r6)']
Processing opcode: addi, operands: ['r4', 'r6', '0xc']
Translated addi r4 r6 0xc to: ['gc_env.r[4] = gc_env.r[6] + 12; // addi r4, r6, 0xc']
Translated clrlwi. r0 r0 30 to: ['gc_env.r[0] = gc_env.r[0] & 0x3; // clrlwi r0, r0, 30']
Translated beq .L_80018F1C to: if (gc_env.cr[0] == 0) goto L_80018F1C;
Processing opcode: lwz, operands: ['r0', '0x0(r4)']
Translated lwz r0 0x0(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r0, (r4)']
Translated rlwinm. r0 r0 0 30 30 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x2; // rlwinm r0, r0, 0, 30, 30', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_80018F0C to: if (gc_env.cr[0] == 0) goto L_80018F0C;
Processing opcode: lwz, operands: ['r4', '0x10(r6)']
Translated lwz r4 0x10(r6) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x10); // lwz r4, 0x10(r6)']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80018F0C to: if (gc_env.cr[0] == 0) goto L_80018F0C;
Translated lis r5 0xcc00 to: ['gc_env.r[5] = -13312 << 16; // lis r5, 0xcc00']
Processing opcode: lwz, operands: ['r7', '0x14(r6)']
Translated lwz r7 0x14(r6) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[6] + 0x14); // lwz r7, 0x14(r6)']
Processing opcode: lwz, operands: ['r6', '0x6838(r5)']
Translated lwz r6 0x6838(r5) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x6838); // lwz r6, 0x6838(r5)']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated ble .L_80018F0C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80018F0C; // ble .L_80018F0C']
Translated cmpwi r4 0x8 to: gc_env.cr[0] = (gc_env.r[4] == 0x8) ? 0 : (gc_env.r[4] < 0x8 ? -1 : 1); // Compare with immediate
Processing opcode: subi, operands: ['r8', 'r4', '0x8']
Translated subi r8 r4 0x8 to: ['gc_env.r[8] = gc_env.r[4] - 8; // subi r8, r4, 8']
Translated ble .L_80018EE0 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80018EE0; // ble .L_80018EE0']
Processing opcode: addi, operands: ['r0', 'r8', '0x7']
Translated addi r0 r8 0x7 to: ['gc_env.r[0] = gc_env.r[8] + 7; // addi r0, r8, 0x7']
Translated srwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] >> 3; // srwi r0, r0, 3']
Translated cmpwi r8 0x0 to: gc_env.cr[0] = (gc_env.r[8] == 0x0) ? 0 : (gc_env.r[8] < 0x0 ? -1 : 1); // Compare with immediate
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated ble .L_80018EE0 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80018EE0; // ble .L_80018EE0']
Translated subfic r0 r5 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[5]; // subfic r0, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r8 r0 3 to: ['gc_env.r[8] = gc_env.r[0] << 3; // slwi r8, r0, 3']
Processing opcode: addi, operands: ['r0', 'r5', '0x1']
Translated addi r0 r5 0x1 to: ['gc_env.r[0] = gc_env.r[5] + 1; // addi r0, r5, 0x1']
Translated srw r8 r6 r8 to: ['gc_env.r[8] = gc_env.r[6] >> (gc_env.r[8] & 31); // srw r8, r6, r8']
Translated subfic r0 r0 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[0]; // subfic r0, r0, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[0] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r8', '0x0(r7)']
Translated stb r8 0x0(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7], gc_env.r[8]); // stb r8, (r7)']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Processing opcode: addi, operands: ['r8', 'r5', '0x2']
Translated addi r8 r5 0x2 to: ['gc_env.r[8] = gc_env.r[5] + 2; // addi r8, r5, 0x2']
Translated srw r0 r6 r0 to: ['gc_env.r[0] = gc_env.r[6] >> (gc_env.r[0] & 31); // srw r0, r6, r0']
Translated subfic r8 r8 0x3 to: ['gc_env.r[8] = 3 - gc_env.r[8]; // subfic r8, r8, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[8] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r0', '0x1(r7)']
Translated stb r0 0x1(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x1, gc_env.r[0]); // stb r0, 0x1(r7)']
Translated slwi r8 r8 3 to: ['gc_env.r[8] = gc_env.r[8] << 3; // slwi r8, r8, 3']
Translated srw r31 r6 r8 to: ['gc_env.r[31] = gc_env.r[6] >> (gc_env.r[8] & 31); // srw r31, r6, r8']
Translated neg r8 r5 to: ['gc_env.r[8] = -(int32_t)gc_env.r[5]; // neg r8, r5']
Processing opcode: stb, operands: ['r31', '0x2(r7)']
Translated stb r31 0x2(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x2, gc_env.r[31]); // stb r31, 0x2(r7)']
Translated slwi r9 r8 3 to: ['gc_env.r[9] = gc_env.r[8] << 3; // slwi r9, r8, 3']
Processing opcode: addi, operands: ['r8', 'r5', '0x4']
Translated addi r8 r5 0x4 to: ['gc_env.r[8] = gc_env.r[5] + 4; // addi r8, r5, 0x4']
Translated srw r12 r6 r9 to: ['gc_env.r[12] = gc_env.r[6] >> (gc_env.r[9] & 31); // srw r12, r6, r9']
Translated subfic r8 r8 0x3 to: ['gc_env.r[8] = 3 - gc_env.r[8]; // subfic r8, r8, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[8] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r12', '0x3(r7)']
Translated stb r12 0x3(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x3, gc_env.r[12]); // stb r12, 0x3(r7)']
Translated slwi r9 r8 3 to: ['gc_env.r[9] = gc_env.r[8] << 3; // slwi r9, r8, 3']
Processing opcode: addi, operands: ['r8', 'r5', '0x5']
Translated addi r8 r5 0x5 to: ['gc_env.r[8] = gc_env.r[5] + 5; // addi r8, r5, 0x5']
Translated srw r11 r6 r9 to: ['gc_env.r[11] = gc_env.r[6] >> (gc_env.r[9] & 31); // srw r11, r6, r9']
Translated subfic r8 r8 0x3 to: ['gc_env.r[8] = 3 - gc_env.r[8]; // subfic r8, r8, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[8] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r11', '0x4(r7)']
Translated stb r11 0x4(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x4, gc_env.r[11]); // stb r11, 0x4(r7)']
Translated slwi r9 r8 3 to: ['gc_env.r[9] = gc_env.r[8] << 3; // slwi r9, r8, 3']
Translated srw r10 r6 r9 to: ['gc_env.r[10] = gc_env.r[6] >> (gc_env.r[9] & 31); // srw r10, r6, r9']
Processing opcode: addi, operands: ['r8', 'r5', '0x6']
Translated addi r8 r5 0x6 to: ['gc_env.r[8] = gc_env.r[5] + 6; // addi r8, r5, 0x6']
Processing opcode: stb, operands: ['r10', '0x5(r7)']
Translated stb r10 0x5(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x5, gc_env.r[10]); // stb r10, 0x5(r7)']
Translated subfic r9 r8 0x3 to: ['gc_env.r[9] = 3 - gc_env.r[8]; // subfic r9, r8, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[8] ? 0x20000000 : 0);']
Processing opcode: addi, operands: ['r8', 'r5', '0x7']
Translated addi r8 r5 0x7 to: ['gc_env.r[8] = gc_env.r[5] + 7; // addi r8, r5, 0x7']
Translated slwi r9 r9 3 to: ['gc_env.r[9] = gc_env.r[9] << 3; // slwi r9, r9, 3']
Translated srw r9 r6 r9 to: ['gc_env.r[9] = gc_env.r[6] >> (gc_env.r[9] & 31); // srw r9, r6, r9']
Translated subfic r8 r8 0x3 to: ['gc_env.r[8] = 3 - gc_env.r[8]; // subfic r8, r8, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[8] ? 0x20000000 : 0);']
Processing opcode: stb, operands: ['r9', '0x6(r7)']
Translated stb r9 0x6(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x6, gc_env.r[9]); // stb r9, 0x6(r7)']
Translated slwi r8 r8 3 to: ['gc_env.r[8] = gc_env.r[8] << 3; // slwi r8, r8, 3']
Translated srw r8 r6 r8 to: ['gc_env.r[8] = gc_env.r[6] >> (gc_env.r[8] & 31); // srw r8, r6, r8']
Processing opcode: stb, operands: ['r8', '0x7(r7)']
Translated stb r8 0x7(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7] + 0x7, gc_env.r[8]); // stb r8, 0x7(r7)']
Processing opcode: addi, operands: ['r7', 'r7', '0x8']
Translated addi r7 r7 0x8 to: ['gc_env.r[7] += 8; // addi r7, r7, 0x8']
Processing opcode: addi, operands: ['r5', 'r5', '0x8']
Translated addi r5 r5 0x8 to: ['gc_env.r[5] += 8; // addi r5, r5, 0x8']
Translated bdnz .L_80018E3C to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80018E3C;']
Processing opcode: subf, operands: ['r0', 'r5', 'r4']
Translated subf r0 r5 r4 to: ['gc_env.r[0] = gc_env.r[4] - gc_env.r[5]; // subf r0, r5, r4']
Translated cmpw r5 r4 to: ['gc_env.cr[0] = (int32_t)gc_env.r[5] < (int32_t)gc_env.r[4] ? 0x8 : ((int32_t)gc_env.r[5] > (int32_t)gc_env.r[4] ? 0x4 : 0x2); // cmpw r5, r4']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bge .L_80018F0C to: if (gc_env.cr[0] >= 0) goto L_80018F0C;
Translated subfic r0 r5 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[5]; // subfic r0, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Translated srw r0 r6 r0 to: ['gc_env.r[0] = gc_env.r[6] >> (gc_env.r[0] & 31); // srw r0, r6, r0']
Processing opcode: stb, operands: ['r0', '0x0(r7)']
Translated stb r0 0x0(r7) to: ['gc_mem_write8(gc_env.ram, gc_env.r[7], gc_env.r[0]); // stb r0, (r7)']
Processing opcode: addi, operands: ['r7', 'r7', '0x1']
Translated addi r7 r7 0x1 to: ['gc_env.r[7] += 1; // addi r7, r7, 0x1']
Processing opcode: addi, operands: ['r5', 'r5', '0x1']
Translated addi r5 r5 0x1 to: ['gc_env.r[5] += 1; // addi r5, r5, 0x1']
Translated bdnz .L_80018EF0 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80018EF0;']
Processing opcode: lwz, operands: ['r4', 'lbl_8001EE48@sda21(r0)']
Translated lwz r4 lbl_8001EE48@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE48); // lwz r4, lbl_8001EE48@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0xc(r4)']
Translated lwz r0 0xc(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xC); // lwz r0, 0xC(r4)']
Translated clrrwi r0 r0 2 to: gc_env.r[0] = gc_env.r[0] & ~((1ULL << 2) - 1); // Clear rightmost 2 bits
Processing opcode: stw, operands: ['r0', '0xc(r4)']
Translated stw r0 0xc(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0xC, gc_env.r[0]); // stw r0, 0xC(r4)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated b .L_80018F38 to: goto L_80018F38;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x6800']
Translated addi r3 r3 0x6800 to: ['gc_env.r[3] += 26624; // addi r3, r3, 0x6800']
Processing opcode: lwz, operands: ['r0', '0xc(r4)']
Translated lwz r0 0xc(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xC); // lwz r0, 0xC(r4)']
Translated rlwinm. r0 r0 0 29 29 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x4; // rlwinm r0, r0, 0, 29, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_80018DCC to: if (gc_env.cr[0] != 0) goto L_80018DCC;
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80018F68 to: if (gc_env.cr[0] == 0) goto L_80018F68;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: lwz, operands: ['r0', '0x3000(r3)']
Translated lwz r0 0x3000(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x3000); // lwz r0, 0x3000(r3)']
Translated rlwinm r0 r0 0 19 19 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x1000; // rlwinm r0, r0, 0, 19, 19']
Translated ori r0 r0 0x1000 to: ['gc_env.r[0] |= 4096; // ori r0, r0, 0x1000']
Processing opcode: stw, operands: ['r0', '0x3000(r3)']
Translated stw r0 0x3000(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x3000, gc_env.r[0]); // stw r0, 0x3000(r3)']
Translated cmpwi r4 0x0 to: gc_env.cr[0] = (gc_env.r[4] == 0x0) ? 0 : (gc_env.r[4] < 0x0 ? -1 : 1); // Compare with immediate
Translated beqlr  to: ['if (gc_env.cr[0] & 0x2) return; // beqlr']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x6800']
Translated addi r3 r3 0x6800 to: ['gc_env.r[3] += 26624; // addi r3, r3, 0x6800']
Processing opcode: lwz, operands: ['r0', '0x28(r3)']
Translated lwz r0 0x28(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x28); // lwz r0, 0x28(r3)']
Translated andi. r0 r0 0x7f5 to: gc_env.r[0] = gc_env.r[0] & 0x7f5;
Translated ori r0 r0 0x8 to: ['gc_env.r[0] |= 8; // ori r0, r0, 0x8']
Processing opcode: stw, operands: ['r0', '0x28(r3)']
Translated stw r0 0x28(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x28, gc_env.r[0]); // stw r0, 0x28(r3)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated cmplwi r30 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == 0x0) ? 0 : ((uint32_t)gc_env.r[30] < 0x0 ? -1 : 1); // Logical compare with immediate
Processing opcode: addi, operands: ['r31', 'r3', '0x0']
Translated addi r31 r3 0x0 to: ['gc_env.r[31] = gc_env.r[3] + 0; // addi r31, r3, 0x0']
Translated beq .L_80018FC0 to: if (gc_env.cr[0] == 0) goto L_80018FC0;
Processing opcode: li, operands: ['r3', '0x40']
Translated li r3 0x40 to: ['gc_env.r[3] = 0x40; // li r3, 0x40']
Translated bl __OSUnmaskInterrupts to: __OSUnmaskInterrupts();
Translated b .L_80018FC8 to: goto L_80018FC8;
Processing opcode: li, operands: ['r3', '0x40']
Translated li r3 0x40 to: ['gc_env.r[3] = 0x40; // li r3, 0x40']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Processing opcode: lwz, operands: ['r4', 'lbl_8001EE48@sda21(r0)']
Translated lwz r4 lbl_8001EE48@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE48); // lwz r4, lbl_8001EE48@sda21(r0)']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r31', '0x0(r4)']
Translated lwz r31 0x0(r4) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r31, (r4)']
Processing opcode: stw, operands: ['r30', '0x0(r4)']
Translated stw r30 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[30]); // stw r30, (r4)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r4', 'lbl_8001EE48@sda21(r0)']
Translated lwz r4 lbl_8001EE48@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE48); // lwz r4, lbl_8001EE48@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0xc(r4)']
Translated lwz r0 0xc(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xC); // lwz r0, 0xC(r4)']
Processing opcode: addi, operands: ['r5', 'r4', '0xc']
Translated addi r5 r4 0xc to: ['gc_env.r[5] = gc_env.r[4] + 12; // addi r5, r4, 0xc']
Translated rlwinm. r0 r0 0 29 29 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x4; // rlwinm r0, r0, 0, 29, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_80019030 to: if (gc_env.cr[0] == 0) goto L_80019030;
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80019064 to: goto L_80019064;
Processing opcode: lwz, operands: ['r0', '0x0(r5)']
Translated lwz r0 0x0(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r0, (r5)']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: addi, operands: ['r4', 'r4', '0x6800']
Translated addi r4 r4 0x6800 to: ['gc_env.r[4] += 26624; // addi r4, r4, 0x6800']
Translated ori r0 r0 0x4 to: ['gc_env.r[0] |= 4; // ori r0, r0, 0x4']
Processing opcode: stw, operands: ['r0', '0x0(r5)']
Translated stw r0 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stw r0, (r5)']
Translated slwi r0 r31 4 to: ['gc_env.r[0] = gc_env.r[31] << 4; // slwi r0, r31, 4']
Translated ori r0 r0 0x80 to: ['gc_env.r[0] |= 128; // ori r0, r0, 0x80']
Processing opcode: lwz, operands: ['r5', '0x28(r4)']
Translated lwz r5 0x28(r4) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x28); // lwz r5, 0x28(r4)']
Translated andi. r5 r5 0x405 to: gc_env.r[5] = gc_env.r[5] & 0x405;
Translated or r5 r5 r0 to: ['gc_env.r[5] = gc_env.r[5] | gc_env.r[0]; // or r5, r5, r0']
Processing opcode: stw, operands: ['r5', '0x28(r4)']
Translated stw r5 0x28(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x28, gc_env.r[5]); // stw r5, 0x28(r4)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: lwz, operands: ['r4', 'lbl_8001EE48@sda21(r0)']
Translated lwz r4 lbl_8001EE48@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE48); // lwz r4, lbl_8001EE48@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0xc(r4)']
Translated lwz r0 0xc(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0xC); // lwz r0, 0xC(r4)']
Processing opcode: addi, operands: ['r5', 'r4', '0xc']
Translated addi r5 r4 0xc to: ['gc_env.r[5] = gc_env.r[4] + 12; // addi r5, r4, 0xc']
Translated rlwinm. r0 r0 0 29 29 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x4; // rlwinm r0, r0, 0, 29, 29', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_800190A8 to: if (gc_env.cr[0] != 0) goto L_800190A8;
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_800190D0 to: goto L_800190D0;
Processing opcode: lwz, operands: ['r0', '0x0(r5)']
Translated lwz r0 0x0(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5]); // lwz r0, (r5)']
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: addi, operands: ['r4', 'r4', '0x6800']
Translated addi r4 r4 0x6800 to: ['gc_env.r[4] += 26624; // addi r4, r4, 0x6800']
Translated rlwinm r0 r0 0 30 28 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & -0x5; // rlwinm r0, r0, 0, 30, 28']
Processing opcode: stw, operands: ['r0', '0x0(r5)']
Translated stw r0 0x0(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stw r0, (r5)']
Processing opcode: lwz, operands: ['r0', '0x28(r4)']
Translated lwz r0 0x28(r4) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x28); // lwz r0, 0x28(r4)']
Translated andi. r0 r0 0x405 to: gc_env.r[0] = gc_env.r[0] & 0x405;
Processing opcode: stw, operands: ['r0', '0x28(r4)']
Translated stw r0 0x28(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x28, gc_env.r[0]); // stw r0, 0x28(r4)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r5 0xcc00 to: ['gc_env.r[5] = -13312 << 16; // lis r5, 0xcc00']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: lwz, operands: ['r0', '0x3000(r5)']
Translated lwz r0 0x3000(r5) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[5] + 0x3000); // lwz r0, 0x3000(r5)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated rlwinm r0 r0 0 19 19 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x1000; // rlwinm r0, r0, 0, 19, 19']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EE48@sda21(r0)']
Translated lwz r3 lbl_8001EE48@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE48); // lwz r3, lbl_8001EE48@sda21(r0)']
Translated ori r0 r0 0x1000 to: ['gc_env.r[0] |= 4096; // ori r0, r0, 0x1000']
Processing opcode: stw, operands: ['r0', '0x3000(r5)']
Translated stw r0 0x3000(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x3000, gc_env.r[0]); // stw r0, 0x3000(r5)']
Processing opcode: lwz, operands: ['r3', '0x0(r3)']
Translated lwz r3 0x0(r3) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r3, (r3)']
Translated cmplwi r3 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[3] == 0x0) ? 0 : ((uint32_t)gc_env.r[3] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated mr r12 r3 to: gc_env.r[12] = gc_env.r[3]; // Move register
Translated beq .L_80019120 to: if (gc_env.cr[0] == 0) goto L_80019120;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: li, operands: ['r3', '0x2']
Translated li r3 0x2 to: ['gc_env.r[3] = 0x2; // li r3, 0x2']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 0x1 to: ['gc_env.r[3] = 1 << 16; // lis r3, 0x1']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r3', 'r3', '-0x8000']
Translated addi r3 r3 -0x8000 to: ['gc_env.r[3] -= 32768; // addi r3, r3, -0x8000']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Translated lis r3 fn_800190E0@ha to: ['gc_env.r[3] = ((uint32_t)&fn_800190E0 >> 16) & 0xFFFF; // lis r3, fn_800190E0@ha']
Processing opcode: addi, operands: ['r4', 'r3', 'fn_800190E0@l']
Translated addi r4 r3 fn_800190E0@l to: ['gc_env.r[4] = (uint32_t)&fn_800190E0; // lis + addi fn_800190E0 (completing pattern)']
Processing opcode: li, operands: ['r3', '0x19']
Translated li r3 0x19 to: ['gc_env.r[3] = 0x19; // li r3, 0x19']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Processing opcode: li, operands: ['r3', '0x40']
Translated li r3 0x40 to: ['gc_env.r[3] = 0x40; // li r3, 0x40']
Translated bl __OSUnmaskInterrupts to: __OSUnmaskInterrupts();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 lbl_8001EDE0@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001EDE0 >> 16) & 0xFFFF; // lis r3, lbl_8001EDE0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001EDE0@l']
Translated addi r3 r3 lbl_8001EDE0@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&lbl_8001EDE0 & 0xFFFF); // addi r3, r3, lbl_8001EDE0@l']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: li, operands: ['r5', '0x18']
Translated li r5 0x18 to: ['gc_env.r[5] = 0x18; // li r5, 0x18']
Translated bl memset to: memset();
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x6828(r4)']
Translated stw r0 0x6828(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x6828, gc_env.r[0]); // stw r0, 0x6828(r4)']
Processing opcode: stw, operands: ['r0', '0x643c(r4)']
Translated stw r0 0x643c(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x643C, gc_env.r[0]); // stw r0, 0x643C(r4)']
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: lwz, operands: ['r3', 'lbl_8001EE50@sda21(r0)']
Translated lwz r3 lbl_8001EE50@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE50); // lwz r3, lbl_8001EE50@sda21(r0)']
Processing opcode: stb, operands: ['r0', '0x0(r3)']
Translated stb r0 0x0(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3], gc_env.r[0]); // stb r0, (r3)']
Processing opcode: lwz, operands: ['r12', 'lbl_8001F068@sda21(r0)']
Translated lwz r12 lbl_8001F068@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F068); // lwz r12, lbl_8001F068@sda21(r0)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_800191E0 to: if (gc_env.cr[0] == 0) goto L_800191E0;
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Processing opcode: stw, operands: ['r31', '0x2c(r1)']
Translated stw r31 0x2c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stw r31, 0x2C(r1)']
Translated mr r31 r4 to: gc_env.r[31] = gc_env.r[4]; // Move register
Processing opcode: lwz, operands: ['r0', 'lbl_8001EE50@sda21(r0)']
Translated lwz r0 lbl_8001EE50@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE50); // lwz r0, lbl_8001EE50@sda21(r0)']
Processing opcode: stw, operands: ['r0', '0x0(r3)']
Translated stw r0 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[0]); // stw r0, (r3)']
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Processing opcode: stw, operands: ['r31', 'lbl_8001F068@sda21(r0)']
Translated stw r31 lbl_8001F068@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F068, gc_env.r[31]); // stw r31, lbl_8001F068@sda21(r0)']
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Translated bl fn_80019170 to: fn_80019170();
Translated lis r4 0x100 to: ['gc_env.r[4] = 256 << 16; // lis r4, 0x100']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: addi, operands: ['r0', 'r4', '0x3']
Translated addi r0 r4 0x3 to: ['gc_env.r[0] = gc_env.r[4] + 3; // addi r0, r4, 0x3']
Processing opcode: stw, operands: ['r3', '0x20(r1)']
Translated stw r3 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[3]); // stw r3, 0x20(r1)']
Processing opcode: stw, operands: ['r0', '0x1c(r1)']
Translated stw r0 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[0]); // stw r0, 0x1C(r1)']
Translated b .L_8001923C to: goto L_8001923C;
Processing opcode: li, operands: ['r3', '0x5']
Translated li r3 0x5 to: ['gc_env.r[3] = 0x5; // li r3, 0x5']
Translated bl fn_80018FF8 to: fn_80018FF8();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80019234 to: if (gc_env.cr[0] == 0) goto L_80019234;
Translated lis r0 0x8000 to: ['gc_env.r[0] = -32768 << 16; // lis r0, 0x8000']
Processing opcode: stw, operands: ['r0', '0x10(r1)']
Translated stw r0 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[0]); // stw r0, 0x10(r1)']
Processing opcode: addi, operands: ['r3', 'r1', '0x10']
Translated addi r3 r1 0x10 to: ['gc_env.r[3] = gc_env.r[1] + 16; // addi r3, r1, 0x10']
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl fn_80018B70 to: fn_80018B70();
Translated bl fn_80018DB4 to: fn_80018DB4();
Processing opcode: addi, operands: ['r3', 'r1', '0x1c']
Translated addi r3 r1 0x1c to: ['gc_env.r[3] = gc_env.r[1] + 28; // addi r3, r1, 0x1c']
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl fn_80018B70 to: fn_80018B70();
Translated bl fn_80018DB4 to: fn_80018DB4();
Processing opcode: addi, operands: ['r3', 'r1', '0x20']
Translated addi r3 r1 0x20 to: ['gc_env.r[3] = gc_env.r[1] + 32; // addi r3, r1, 0x20']
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl fn_80018B70 to: fn_80018B70();
Translated bl fn_80018DB4 to: fn_80018DB4();
Translated bl fn_80019078 to: fn_80019078();
Processing opcode: lwz, operands: ['r0', '0x34(r1)']
Translated lwz r0 0x34(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r0, 0x34(r1)']
Processing opcode: lwz, operands: ['r31', '0x2c(r1)']
Translated lwz r31 0x2c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r31, 0x2C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 fn_800191B0@ha to: ['gc_env.r[3] = ((uint32_t)&fn_800191B0 >> 16) & 0xFFFF; // lis r3, fn_800191B0@ha']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: addi, operands: ['r3', 'r3', 'fn_800191B0@l']
Translated addi r3 r3 fn_800191B0@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&fn_800191B0 & 0xFFFF); // addi r3, r3, fn_800191B0@l']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated bl fn_80018F8C to: fn_80018F8C();
Translated bl fn_80019130 to: fn_80019130();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: lwz, operands: ['r0', '0x3000(r3)']
Translated lwz r0 0x3000(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x3000); // lwz r0, 0x3000(r3)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Translated rlwinm. r0 r0 0 19 19 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x1000; // rlwinm r0, r0, 0, 19, 19', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated bne .L_80019310 to: if (gc_env.cr[0] != 0) goto L_80019310;
Processing opcode: lwz, operands: ['r3', 'lbl_8001EE50@sda21(r0)']
Translated lwz r3 lbl_8001EE50@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE50); // lwz r3, lbl_8001EE50@sda21(r0)']
Processing opcode: lbz, operands: ['r0', '0x0(r3)']
Translated lbz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x0); // lbz r0, 0x0(r3)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80019310 to: if (gc_env.cr[0] != 0) goto L_80019310;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', '0x18(r1)']
Translated stw r0 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[0]); // stw r0, 0x18(r1)']
Translated b .L_800193CC to: goto L_800193CC;
Processing opcode: lwz, operands: ['r0', 'lbl_8001F064@sda21(r0)']
Translated lwz r0 lbl_8001F064@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F064); // lwz r0, lbl_8001F064@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8001938C to: if (gc_env.cr[0] != 0) goto L_8001938C;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8001932C to: goto L_8001932C;
Processing opcode: li, operands: ['r3', '0x5']
Translated li r3 0x5 to: ['gc_env.r[3] = 0x5; // li r3, 0x5']
Translated bl fn_80018FF8 to: fn_80018FF8();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80019324 to: if (gc_env.cr[0] == 0) goto L_80019324;
Translated bne .L_8001934C to: if (gc_env.cr[0] != 0) goto L_8001934C;
Translated lis r3 lbl_8001BB28@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001BB28 >> 16) & 0xFFFF; // lis r3, lbl_8001BB28@ha']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001BB28@l']
Translated addi r3 r3 lbl_8001BB28@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&lbl_8001BB28 & 0xFFFF); // addi r3, r3, lbl_8001BB28@l']
Translated bl fn_80012694 to: fn_80012694();
Translated b .L_8001938C to: goto L_8001938C;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r3', 'lbl_8001F064@sda21(r0)']
Translated stw r3 lbl_8001F064@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F064, gc_env.r[3]); // stw r3, lbl_8001F064@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Processing opcode: stw, operands: ['r0', '0x8(r1)']
Translated stw r0 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stw r0, 0x8(r1)']
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl fn_80018B70 to: fn_80018B70();
Translated bl fn_80018DB4 to: fn_80018DB4();
Processing opcode: addi, operands: ['r3', 'r1', '0x14']
Translated addi r3 r1 0x14 to: ['gc_env.r[3] = gc_env.r[1] + 20; // addi r3, r1, 0x14']
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl fn_80018B70 to: fn_80018B70();
Translated bl fn_80018DB4 to: fn_80018DB4();
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl fn_80018B70 to: fn_80018B70();
Translated bl fn_80018DB4 to: fn_80018DB4();
Processing opcode: lwz, operands: ['r5', 'lbl_8001EE50@sda21(r0)']
Translated lwz r5 lbl_8001EE50@sda21(r0) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE50); // lwz r5, lbl_8001EE50@sda21(r0)']
Processing opcode: lbz, operands: ['r0', '0x0(r5)']
Translated lbz r0 0x0(r5) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, gc_env.r[5] + 0x0); // lbz r0, 0x0(r5)']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800193CC to: if (gc_env.cr[0] != 0) goto L_800193CC;
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: lwz, operands: ['r3', '0x3000(r4)']
Translated lwz r3 0x3000(r4) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[4] + 0x3000); // lwz r3, 0x3000(r4)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stb, operands: ['r0', '0x0(r5)']
Translated stb r0 0x0(r5) to: ['gc_mem_write8(gc_env.ram, gc_env.r[5], gc_env.r[0]); // stb r0, (r5)']
Translated rlwinm r0 r3 0 19 19 to: ['gc_env.r[0] = (gc_env.r[3] << 0) & 0x1000; // rlwinm r0, r3, 0, 19, 19']
Processing opcode: stw, operands: ['r0', '0x3000(r4)']
Translated stw r0 0x3000(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4] + 0x3000, gc_env.r[0]); // stw r0, 0x3000(r4)']
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r3', '0x18(r1)']
Translated lwz r3 0x18(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r3, 0x18(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x48(r1)']
Translated stwu r1 -0x48(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x48, gc_env.r[1]); // stwu r1, -0x48(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x48;']
Translated stmw r25 0x2c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[25]); // stmw r25, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[26]); // stmw r25, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[27]); // stmw r25, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[28]); // stmw r25, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[29]); // stmw r25, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x40, gc_env.r[30]); // stmw r25, 0x2C(r1)', 'gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x44, gc_env.r[31]); // stmw r25, 0x2C(r1)']
Processing opcode: addi, operands: ['r25', 'r3', '0x0']
Translated addi r25 r3 0x0 to: ['gc_env.r[25] = gc_env.r[3] + 0; // addi r25, r3, 0x0']
Processing opcode: addi, operands: ['r26', 'r4', '0x0']
Translated addi r26 r4 0x0 to: ['gc_env.r[26] = gc_env.r[4] + 0; // addi r26, r4, 0x0']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F064@sda21(r0)']
Translated lwz r0 lbl_8001F064@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F064); // lwz r0, lbl_8001F064@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8001940C to: if (gc_env.cr[0] == 0) goto L_8001940C;
Processing opcode: li, operands: ['r27', '0x1']
Translated li r27 0x1 to: ['gc_env.r[27] = 0x1; // li r27, 0x1']
Translated b .L_80019484 to: goto L_80019484;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8001941C to: goto L_8001941C;
Processing opcode: li, operands: ['r3', '0x5']
Translated li r3 0x5 to: ['gc_env.r[3] = 0x5; // li r3, 0x5']
Translated bl fn_80018FF8 to: fn_80018FF8();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_80019414 to: if (gc_env.cr[0] == 0) goto L_80019414;
Translated mr r27 r3 to: gc_env.r[27] = gc_env.r[3]; // Move register
Translated bne .L_80019444 to: if (gc_env.cr[0] != 0) goto L_80019444;
Translated lis r3 lbl_8001BB28@ha to: ['gc_env.r[3] = ((uint32_t)&lbl_8001BB28 >> 16) & 0xFFFF; // lis r3, lbl_8001BB28@ha']
Translated crclr cr1eq to: ['gc_env.cr[1] &= ~0x2; // crclr cr1eq']
Processing opcode: addi, operands: ['r3', 'r3', 'lbl_8001BB28@l']
Translated addi r3 r3 lbl_8001BB28@l to: ['gc_env.r[3] = gc_env.r[3] + ((uint32_t)&lbl_8001BB28 & 0xFFFF); // addi r3, r3, lbl_8001BB28@l']
Translated bl fn_80012694 to: fn_80012694();
Processing opcode: li, operands: ['r27', '0x0']
Translated li r27 0x0 to: ['gc_env.r[27] = 0x0; // li r27, 0x0']
Translated b .L_80019484 to: goto L_80019484;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r3', 'lbl_8001F064@sda21(r0)']
Translated stw r3 lbl_8001F064@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F064, gc_env.r[3]); // stw r3, lbl_8001F064@sda21(r0)']
Processing opcode: addi, operands: ['r3', 'r1', '0x14']
Translated addi r3 r1 0x14 to: ['gc_env.r[3] = gc_env.r[1] + 20; // addi r3, r1, 0x14']
Processing opcode: stw, operands: ['r0', '0x14(r1)']
Translated stw r0 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stw r0, 0x14(r1)']
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl fn_80018B70 to: fn_80018B70();
Translated bl fn_80018DB4 to: fn_80018DB4();
Processing opcode: addi, operands: ['r3', 'r1', '0x1c']
Translated addi r3 r1 0x1c to: ['gc_env.r[3] = gc_env.r[1] + 28; // addi r3, r1, 0x1c']
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl fn_80018B70 to: fn_80018B70();
Translated bl fn_80018DB4 to: fn_80018DB4();
Translated cmpwi r27 0x0 to: gc_env.cr[0] = (gc_env.r[27] == 0x0) ? 0 : (gc_env.r[27] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80019494 to: if (gc_env.cr[0] != 0) goto L_80019494;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated b .L_80019688 to: goto L_80019688;
Translated clrlwi. r4 r26 30 to: ['gc_env.r[4] = gc_env.r[26] & 0x3; // clrlwi r4, r26, 30']
Translated beq .L_800194A4 to: if (gc_env.cr[0] == 0) goto L_800194A4;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated b .L_800194A8 to: goto L_800194A8;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated srawi r28 r26 2 to: ['gc_env.r[28] = ((int32_t)gc_env.r[26]) >> 2; // srawi r28, r26, 2']
Translated srwi r0 r26 2 to: ['gc_env.r[0] = gc_env.r[26] >> 2; // srwi r0, r26, 2']
Translated addze r28 r28 to: ['uint64_t addze_temp = (uint64_t)gc_env.r[28] + ((gc_env.xer & 0x20000000) ? 1 : 0);', 'gc_env.r[28] = (uint32_t)addze_temp; // addze r28, r28', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (addze_temp > 0xFFFFFFFF ? 0x20000000 : 0);']
Processing opcode: add, operands: ['r3', 'r0', 'r3']
Translated add r3 r0 r3 to: ['gc_env.r[3] = gc_env.r[0] + gc_env.r[3]; // add r3, r0, r3']
Translated clrlwi r0 r26 31 to: ['gc_env.r[0] = gc_env.r[26] & 0x1; // clrlwi r0, r26, 31']
Translated slwi r28 r28 2 to: ['gc_env.r[28] = gc_env.r[28] << 2; // slwi r28, r28, 2']
Processing opcode: add, operands: ['r29', 'r4', 'r0']
Translated add r29 r4 r0 to: ['gc_env.r[29] = gc_env.r[4] + gc_env.r[0]; // add r29, r4, r0']
Translated subfc r28 r28 r26 to: ['uint64_t subfc_temp = (uint64_t)gc_env.r[26] - gc_env.r[28];', 'gc_env.r[28] = (uint32_t)subfc_temp; // subfc r28, r28, r26', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (gc_env.r[26] >= gc_env.r[28] ? 0x20000000 : 0);']
Processing opcode: subi, operands: ['r31', 'r3', '0x1']
Translated subi r31 r3 0x1 to: ['gc_env.r[31] = gc_env.r[3] - 1; // subi r31, r3, 1']
Processing opcode: li, operands: ['r27', '0x0']
Translated li r27 0x0 to: ['gc_env.r[27] = 0x0; // li r27, 0x0']
Processing opcode: li, operands: ['r30', '0x0']
Translated li r30 0x0 to: ['gc_env.r[30] = 0x0; // li r30, 0x0']
Translated b .L_80019658 to: goto L_80019658;
Translated cmplw r30 r31 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == (uint32_t)gc_env.r[31]) ? 0 : ((uint32_t)gc_env.r[30] < (uint32_t)gc_env.r[31] ? -1 : 1); // Logical compare word
Translated bge .L_800194E8 to: if (gc_env.cr[0] >= 0) goto L_800194E8;
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Translated b .L_800194FC to: goto L_800194FC;
Translated cmplwi r29 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[29] == 0x2) ? 0 : ((uint32_t)gc_env.r[29] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_800194F8 to: if (gc_env.cr[0] != 0) goto L_800194F8;
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Translated b .L_800194FC to: goto L_800194FC;
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Processing opcode: addi, operands: ['r3', 'r1', '0x20']
Translated addi r3 r1 0x20 to: ['gc_env.r[3] = gc_env.r[1] + 32; // addi r3, r1, 0x20']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl fn_80018B70 to: fn_80018B70();
Translated bl fn_80018DB4 to: fn_80018DB4();
Processing opcode: subf, operands: ['r0', 'r27', 'r26']
Translated subf r0 r27 r26 to: ['gc_env.r[0] = gc_env.r[26] - gc_env.r[27]; // subf r0, r27, r26']
Translated cmplwi r0 0x4 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x4) ? 0 : ((uint32_t)gc_env.r[0] < 0x4 ? -1 : 1); // Logical compare with immediate
Translated blt .L_80019524 to: ['if (gc_env.cr[0] & 0x8) goto L_80019524; // blt .L_80019524']
Processing opcode: li, operands: ['r5', '0x4']
Translated li r5 0x4 to: ['gc_env.r[5] = 0x4; // li r5, 0x4']
Translated b .L_80019528 to: goto L_80019528;
Translated mr r5 r28 to: gc_env.r[5] = gc_env.r[28]; // Move register
Translated cmpwi r5 0x0 to: gc_env.cr[0] = (gc_env.r[5] == 0x0) ? 0 : (gc_env.r[5] < 0x0 ? -1 : 1); // Compare with immediate
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated ble .L_80019650 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80019650; // ble .L_80019650']
Translated cmpwi r5 0x8 to: gc_env.cr[0] = (gc_env.r[5] == 0x8) ? 0 : (gc_env.r[5] < 0x8 ? -1 : 1); // Compare with immediate
Processing opcode: subi, operands: ['r3', 'r5', '0x8']
Translated subi r3 r5 0x8 to: ['gc_env.r[3] = gc_env.r[5] - 8; // subi r3, r5, 8']
Translated ble .L_8001967C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8001967C; // ble .L_8001967C']
Processing opcode: addi, operands: ['r0', 'r3', '0x7']
Translated addi r0 r3 0x7 to: ['gc_env.r[0] = gc_env.r[3] + 7; // addi r0, r3, 0x7']
Translated srwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] >> 3; // srwi r0, r0, 3']
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Processing opcode: add, operands: ['r3', 'r25', 'r27']
Translated add r3 r25 r27 to: ['gc_env.r[3] = gc_env.r[25] + gc_env.r[27]; // add r3, r25, r27']
Translated ble .L_8001967C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_8001967C; // ble .L_8001967C']
Translated subfic r0 r4 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[4]; // subfic r0, r4, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[4] ? 0x20000000 : 0);']
Processing opcode: lwz, operands: ['r6', '0x20(r1)']
Translated lwz r6 0x20(r1) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r6, 0x20(r1)']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Translated srw r0 r6 r0 to: ['gc_env.r[0] = gc_env.r[6] >> (gc_env.r[0] & 31); // srw r0, r6, r0']
Processing opcode: stb, operands: ['r0', '0x0(r3)']
Translated stb r0 0x0(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3], gc_env.r[0]); // stb r0, (r3)']
Processing opcode: addi, operands: ['r0', 'r4', '0x1']
Translated addi r0 r4 0x1 to: ['gc_env.r[0] = gc_env.r[4] + 1; // addi r0, r4, 0x1']
Translated subfic r0 r0 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[0]; // subfic r0, r0, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[0] ? 0x20000000 : 0);']
Processing opcode: lwz, operands: ['r7', '0x20(r1)']
Translated lwz r7 0x20(r1) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r7, 0x20(r1)']
Translated slwi r6 r0 3 to: ['gc_env.r[6] = gc_env.r[0] << 3; // slwi r6, r0, 3']
Processing opcode: addi, operands: ['r0', 'r4', '0x2']
Translated addi r0 r4 0x2 to: ['gc_env.r[0] = gc_env.r[4] + 2; // addi r0, r4, 0x2']
Translated srw r6 r7 r6 to: ['gc_env.r[6] = gc_env.r[7] >> (gc_env.r[6] & 31); // srw r6, r7, r6']
Processing opcode: stb, operands: ['r6', '0x1(r3)']
Translated stb r6 0x1(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x1, gc_env.r[6]); // stb r6, 0x1(r3)']
Translated subfic r0 r0 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[0]; // subfic r0, r0, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[0] ? 0x20000000 : 0);']
Translated slwi r7 r0 3 to: ['gc_env.r[7] = gc_env.r[0] << 3; // slwi r7, r0, 3']
Processing opcode: lwz, operands: ['r8', '0x20(r1)']
Translated lwz r8 0x20(r1) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r8, 0x20(r1)']
Translated neg r6 r4 to: ['gc_env.r[6] = -(int32_t)gc_env.r[4]; // neg r6, r4']
Processing opcode: addi, operands: ['r0', 'r4', '0x4']
Translated addi r0 r4 0x4 to: ['gc_env.r[0] = gc_env.r[4] + 4; // addi r0, r4, 0x4']
Translated srw r7 r8 r7 to: ['gc_env.r[7] = gc_env.r[8] >> (gc_env.r[7] & 31); // srw r7, r8, r7']
Processing opcode: stb, operands: ['r7', '0x2(r3)']
Translated stb r7 0x2(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x2, gc_env.r[7]); // stb r7, 0x2(r3)']
Translated subfic r8 r0 0x3 to: ['gc_env.r[8] = 3 - gc_env.r[0]; // subfic r8, r0, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[0] ? 0x20000000 : 0);']
Processing opcode: addi, operands: ['r0', 'r4', '0x5']
Translated addi r0 r4 0x5 to: ['gc_env.r[0] = gc_env.r[4] + 5; // addi r0, r4, 0x5']
Processing opcode: lwz, operands: ['r9', '0x20(r1)']
Translated lwz r9 0x20(r1) to: ['gc_env.r[9] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r9, 0x20(r1)']
Translated subfic r7 r0 0x3 to: ['gc_env.r[7] = 3 - gc_env.r[0]; // subfic r7, r0, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[0] ? 0x20000000 : 0);']
Translated slwi r6 r6 3 to: ['gc_env.r[6] = gc_env.r[6] << 3; // slwi r6, r6, 3']
Translated srw r0 r9 r6 to: ['gc_env.r[0] = gc_env.r[9] >> (gc_env.r[6] & 31); // srw r0, r9, r6']
Processing opcode: stb, operands: ['r0', '0x3(r3)']
Translated stb r0 0x3(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x3, gc_env.r[0]); // stb r0, 0x3(r3)']
Processing opcode: addi, operands: ['r0', 'r4', '0x6']
Translated addi r0 r4 0x6 to: ['gc_env.r[0] = gc_env.r[4] + 6; // addi r0, r4, 0x6']
Translated subfic r6 r0 0x3 to: ['gc_env.r[6] = 3 - gc_env.r[0]; // subfic r6, r0, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[0] ? 0x20000000 : 0);']
Processing opcode: lwz, operands: ['r9', '0x20(r1)']
Translated lwz r9 0x20(r1) to: ['gc_env.r[9] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r9, 0x20(r1)']
Processing opcode: addi, operands: ['r0', 'r4', '0x7']
Translated addi r0 r4 0x7 to: ['gc_env.r[0] = gc_env.r[4] + 7; // addi r0, r4, 0x7']
Translated slwi r8 r8 3 to: ['gc_env.r[8] = gc_env.r[8] << 3; // slwi r8, r8, 3']
Translated srw r8 r9 r8 to: ['gc_env.r[8] = gc_env.r[9] >> (gc_env.r[8] & 31); // srw r8, r9, r8']
Processing opcode: stb, operands: ['r8', '0x4(r3)']
Translated stb r8 0x4(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x4, gc_env.r[8]); // stb r8, 0x4(r3)']
Translated subfic r0 r0 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[0]; // subfic r0, r0, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[0] ? 0x20000000 : 0);']
Translated slwi r7 r7 3 to: ['gc_env.r[7] = gc_env.r[7] << 3; // slwi r7, r7, 3']
Processing opcode: lwz, operands: ['r8', '0x20(r1)']
Translated lwz r8 0x20(r1) to: ['gc_env.r[8] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r8, 0x20(r1)']
Translated slwi r6 r6 3 to: ['gc_env.r[6] = gc_env.r[6] << 3; // slwi r6, r6, 3']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Translated srw r7 r8 r7 to: ['gc_env.r[7] = gc_env.r[8] >> (gc_env.r[7] & 31); // srw r7, r8, r7']
Processing opcode: stb, operands: ['r7', '0x5(r3)']
Translated stb r7 0x5(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x5, gc_env.r[7]); // stb r7, 0x5(r3)']
Processing opcode: addi, operands: ['r4', 'r4', '0x8']
Translated addi r4 r4 0x8 to: ['gc_env.r[4] += 8; // addi r4, r4, 0x8']
Processing opcode: lwz, operands: ['r7', '0x20(r1)']
Translated lwz r7 0x20(r1) to: ['gc_env.r[7] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r7, 0x20(r1)']
Translated srw r6 r7 r6 to: ['gc_env.r[6] = gc_env.r[7] >> (gc_env.r[6] & 31); // srw r6, r7, r6']
Processing opcode: stb, operands: ['r6', '0x6(r3)']
Translated stb r6 0x6(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x6, gc_env.r[6]); // stb r6, 0x6(r3)']
Processing opcode: lwz, operands: ['r6', '0x20(r1)']
Translated lwz r6 0x20(r1) to: ['gc_env.r[6] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r6, 0x20(r1)']
Translated srw r0 r6 r0 to: ['gc_env.r[0] = gc_env.r[6] >> (gc_env.r[0] & 31); // srw r0, r6, r0']
Processing opcode: stb, operands: ['r0', '0x7(r3)']
Translated stb r0 0x7(r3) to: ['gc_mem_write8(gc_env.ram, gc_env.r[3] + 0x7, gc_env.r[0]); // stb r0, 0x7(r3)']
Processing opcode: addi, operands: ['r3', 'r3', '0x8']
Translated addi r3 r3 0x8 to: ['gc_env.r[3] += 8; // addi r3, r3, 0x8']
Translated bdnz .L_80019558 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80019558;']
Translated b .L_8001967C to: goto L_8001967C;
Processing opcode: subf, operands: ['r0', 'r4', 'r5']
Translated subf r0 r4 r5 to: ['gc_env.r[0] = gc_env.r[5] - gc_env.r[4]; // subf r0, r4, r5']
Translated cmpw r4 r5 to: ['gc_env.cr[0] = (int32_t)gc_env.r[4] < (int32_t)gc_env.r[5] ? 0x8 : ((int32_t)gc_env.r[4] > (int32_t)gc_env.r[5] ? 0x4 : 0x2); // cmpw r4, r5']
Translated mtctr r0 to: gc_env.ctr = gc_env.r[0]; // Move to count register
Translated bge .L_80019650 to: if (gc_env.cr[0] >= 0) goto L_80019650;
Translated subfic r0 r4 0x3 to: ['gc_env.r[0] = 3 - gc_env.r[4]; // subfic r0, r4, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[4] ? 0x20000000 : 0);']
Processing opcode: lwz, operands: ['r3', '0x20(r1)']
Translated lwz r3 0x20(r1) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r3, 0x20(r1)']
Translated slwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] << 3; // slwi r0, r0, 3']
Translated srw r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] >> (gc_env.r[0] & 31); // srw r0, r3, r0']
Processing opcode: stb, operands: ['r0', '0x0(r6)']
Translated stb r0 0x0(r6) to: ['gc_mem_write8(gc_env.ram, gc_env.r[6], gc_env.r[0]); // stb r0, (r6)']
Processing opcode: addi, operands: ['r6', 'r6', '0x1']
Translated addi r6 r6 0x1 to: ['gc_env.r[6] += 1; // addi r6, r6, 0x1']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Translated bdnz .L_80019630 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80019630;']
Processing opcode: addi, operands: ['r30', 'r30', '0x1']
Translated addi r30 r30 0x1 to: ['gc_env.r[30] += 1; // addi r30, r30, 0x1']
Processing opcode: addi, operands: ['r27', 'r27', '0x4']
Translated addi r27 r27 0x4 to: ['gc_env.r[27] += 4; // addi r27, r27, 0x4']
Translated cmplw r27 r26 to: gc_env.cr[0] = ((uint32_t)gc_env.r[27] == (uint32_t)gc_env.r[26]) ? 0 : ((uint32_t)gc_env.r[27] < (uint32_t)gc_env.r[26] ? -1 : 1); // Logical compare word
Translated blt .L_800194D8 to: ['if (gc_env.cr[0] & 0x8) goto L_800194D8; // blt .L_800194D8']
Translated bl fn_80019078 to: fn_80019078();
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: lwz, operands: ['r4', 'lbl_8001EE50@sda21(r0)']
Translated lwz r4 lbl_8001EE50@sda21(r0) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001EE50); // lwz r4, lbl_8001EE50@sda21(r0)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F064@sda21(r0)']
Translated stw r0 lbl_8001F064@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F064, gc_env.r[0]); // stw r0, lbl_8001F064@sda21(r0)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stb, operands: ['r0', '0x0(r4)']
Translated stb r0 0x0(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4], gc_env.r[0]); // stb r0, (r4)']
Translated b .L_80019688 to: goto L_80019688;
Processing opcode: add, operands: ['r6', 'r27', 'r4']
Translated add r6 r27 r4 to: ['gc_env.r[6] = gc_env.r[27] + gc_env.r[4]; // add r6, r27, r4']
Processing opcode: add, operands: ['r6', 'r25', 'r6']
Translated add r6 r25 r6 to: ['gc_env.r[6] = gc_env.r[25] + gc_env.r[6]; // add r6, r25, r6']
Translated b .L_80019620 to: goto L_80019620;
Translated lmw r25 0x2c(r1) to: ['gc_env.r[25] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lmw r25, 0x2C(r1)', 'gc_env.r[26] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lmw r25, 0x2C(r1)', 'gc_env.r[27] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lmw r25, 0x2C(r1)', 'gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x38); // lmw r25, 0x2C(r1)', 'gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lmw r25, 0x2C(r1)', 'gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x40); // lmw r25, 0x2C(r1)', 'gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lmw r25, 0x2C(r1)']
Processing opcode: lwz, operands: ['r0', '0x4c(r1)']
Translated lwz r0 0x4c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x4C); // lwz r0, 0x4C(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x48']
Translated addi r1 r1 0x48 to: ['gc_env.r[1] += 72; // addi r1, r1, 0x48']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x40(r1)']
Translated stwu r1 -0x40(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x40, gc_env.r[1]); // stwu r1, -0x40(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x40;']
Processing opcode: stw, operands: ['r31', '0x3c(r1)']
Translated stw r31 0x3c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x3C, gc_env.r[31]); // stw r31, 0x3C(r1)']
Processing opcode: stw, operands: ['r30', '0x38(r1)']
Translated stw r30 0x38(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x38, gc_env.r[30]); // stw r30, 0x38(r1)']
Processing opcode: stw, operands: ['r29', '0x34(r1)']
Translated stw r29 0x34(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x34, gc_env.r[29]); // stw r29, 0x34(r1)']
Processing opcode: addi, operands: ['r29', 'r3', '0x0']
Translated addi r29 r3 0x0 to: ['gc_env.r[29] = gc_env.r[3] + 0; // addi r29, r3, 0x0']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: stw, operands: ['r28', '0x30(r1)']
Translated stw r28 0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x30, gc_env.r[28]); // stw r28, 0x30(r1)']
Processing opcode: stw, operands: ['r4', '0x28(r1)']
Translated stw r4 0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[4]); // stw r4, 0x28(r1)']
Translated b .L_800196D0 to: goto L_800196D0;
Processing opcode: li, operands: ['r3', '0x5']
Translated li r3 0x5 to: ['gc_env.r[3] = 0x5; // li r3, 0x5']
Translated bl fn_80018FF8 to: fn_80018FF8();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800196C8 to: if (gc_env.cr[0] == 0) goto L_800196C8;
Translated bne .L_800196E4 to: if (gc_env.cr[0] != 0) goto L_800196E4;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated b .L_8001982C to: goto L_8001982C;
Translated lis r0 0x8000 to: ['gc_env.r[0] = -32768 << 16; // lis r0, 0x8000']
Processing opcode: stw, operands: ['r0', '0x18(r1)']
Translated stw r0 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[0]); // stw r0, 0x18(r1)']
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl fn_80018B70 to: fn_80018B70();
Translated bl fn_80018DB4 to: fn_80018DB4();
Processing opcode: addi, operands: ['r3', 'r1', '0x28']
Translated addi r3 r1 0x28 to: ['gc_env.r[3] = gc_env.r[1] + 40; // addi r3, r1, 0x28']
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl fn_80018B70 to: fn_80018B70();
Translated bl fn_80018DB4 to: fn_80018DB4();
Processing opcode: lwz, operands: ['r4', '0x28(r1)']
Translated lwz r4 0x28(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lwz r4, 0x28(r1)']
Translated clrlwi. r0 r4 30 to: ['gc_env.r[0] = gc_env.r[4] & 0x3; // clrlwi r0, r4, 30']
Translated beq .L_80019730 to: if (gc_env.cr[0] == 0) goto L_80019730;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated b .L_80019734 to: goto L_80019734;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated srwi r0 r4 2 to: ['gc_env.r[0] = gc_env.r[4] >> 2; // srwi r0, r4, 2']
Processing opcode: add, operands: ['r28', 'r0', 'r3']
Translated add r28 r0 r3 to: ['gc_env.r[28] = gc_env.r[0] + gc_env.r[3]; // add r28, r0, r3']
Processing opcode: subi, operands: ['r31', 'r28', '0x1']
Translated subi r31 r28 0x1 to: ['gc_env.r[31] = gc_env.r[28] - 1; // subi r31, r28, 1']
Processing opcode: li, operands: ['r30', '0x0']
Translated li r30 0x0 to: ['gc_env.r[30] = 0x0; // li r30, 0x0']
Translated b .L_80019798 to: goto L_80019798;
Translated cmplw r30 r31 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == (uint32_t)gc_env.r[31]) ? 0 : ((uint32_t)gc_env.r[30] < (uint32_t)gc_env.r[31] ? -1 : 1); // Logical compare word
Translated bge .L_80019758 to: if (gc_env.cr[0] >= 0) goto L_80019758;
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Translated b .L_8001977C to: goto L_8001977C;
Processing opcode: lwz, operands: ['r0', '0x28(r1)']
Translated lwz r0 0x28(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lwz r0, 0x28(r1)']
Translated clrlwi r3 r0 30 to: ['gc_env.r[3] = gc_env.r[0] & 0x3; // clrlwi r3, r0, 30']
Translated clrlwi r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Processing opcode: add, operands: ['r0', 'r3', 'r0']
Translated add r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] + gc_env.r[0]; // add r0, r3, r0']
Translated cmplwi r0 0x2 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x2) ? 0 : ((uint32_t)gc_env.r[0] < 0x2 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80019778 to: if (gc_env.cr[0] != 0) goto L_80019778;
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Translated b .L_8001977C to: goto L_8001977C;
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Processing opcode: addi, operands: ['r3', 'r29', '0x0']
Translated addi r3 r29 0x0 to: ['gc_env.r[3] = gc_env.r[29] + 0; // addi r3, r29, 0x0']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Processing opcode: addi, operands: ['r29', 'r29', '0x4']
Translated addi r29 r29 0x4 to: ['gc_env.r[29] += 4; // addi r29, r29, 0x4']
Translated bl fn_80018B70 to: fn_80018B70();
Translated bl fn_80018DB4 to: fn_80018DB4();
Processing opcode: addi, operands: ['r30', 'r30', '0x1']
Translated addi r30 r30 0x1 to: ['gc_env.r[30] += 1; // addi r30, r30, 0x1']
Translated cmplw r30 r28 to: gc_env.cr[0] = ((uint32_t)gc_env.r[30] == (uint32_t)gc_env.r[28]) ? 0 : ((uint32_t)gc_env.r[30] < (uint32_t)gc_env.r[28] ? -1 : 1); // Logical compare word
Translated blt .L_80019748 to: ['if (gc_env.cr[0] & 0x8) goto L_80019748; // blt .L_80019748']
Translated bl fn_80019078 to: fn_80019078();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_800197B4 to: goto L_800197B4;
Processing opcode: li, operands: ['r3', '0x5']
Translated li r3 0x5 to: ['gc_env.r[3] = 0x5; // li r3, 0x5']
Translated bl fn_80018FF8 to: fn_80018FF8();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_800197AC to: if (gc_env.cr[0] == 0) goto L_800197AC;
Translated bne .L_800197C8 to: if (gc_env.cr[0] != 0) goto L_800197C8;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated b .L_8001982C to: goto L_8001982C;
Translated lis r0 0x1 to: ['gc_env.r[0] = 1 << 16; // lis r0, 0x1']
Processing opcode: stw, operands: ['r0', '0x10(r1)']
Translated stw r0 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[0]); // stw r0, 0x10(r1)']
Processing opcode: addi, operands: ['r3', 'r1', '0x10']
Translated addi r3 r1 0x10 to: ['gc_env.r[3] = gc_env.r[1] + 16; // addi r3, r1, 0x10']
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl fn_80018B70 to: fn_80018B70();
Translated bl fn_80018DB4 to: fn_80018DB4();
Processing opcode: addi, operands: ['r3', 'r1', '0x24']
Translated addi r3 r1 0x24 to: ['gc_env.r[3] = gc_env.r[1] + 36; // addi r3, r1, 0x24']
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl fn_80018B70 to: fn_80018B70();
Translated bl fn_80018DB4 to: fn_80018DB4();
Processing opcode: addi, operands: ['r3', 'r1', '0x24']
Translated addi r3 r1 0x24 to: ['gc_env.r[3] = gc_env.r[1] + 36; // addi r3, r1, 0x24']
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Processing opcode: li, operands: ['r6', '0x0']
Translated li r6 0x0 to: ['gc_env.r[6] = 0x0; // li r6, 0x0']
Translated bl fn_80018B70 to: fn_80018B70();
Translated bl fn_80018DB4 to: fn_80018DB4();
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Translated extrwi. r0 r0 1 15 to: ['gc_env.r[0] = (gc_env.r[0] >> 16) & 0x1; // extrwi r0, r0, 1, 15', 'gc_env.cr[0] = (gc_env.r[0] == 0) ? 0x2 : ((int32_t)gc_env.r[0] < 0 ? 0x8 : 0x4);']
Translated beq .L_80019800 to: if (gc_env.cr[0] == 0) goto L_80019800;
Translated bl fn_80019078 to: fn_80019078();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r0', '0x44(r1)']
Translated lwz r0 0x44(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x44); // lwz r0, 0x44(r1)']
Processing opcode: lwz, operands: ['r31', '0x3c(r1)']
Translated lwz r31 0x3c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x3C); // lwz r31, 0x3C(r1)']
Processing opcode: lwz, operands: ['r30', '0x38(r1)']
Translated lwz r30 0x38(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x38); // lwz r30, 0x38(r1)']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Processing opcode: lwz, operands: ['r29', '0x34(r1)']
Translated lwz r29 0x34(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r29, 0x34(r1)']
Processing opcode: lwz, operands: ['r28', '0x30(r1)']
Translated lwz r28 0x30(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x30); // lwz r28, 0x30(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x40']
Translated addi r1 r1 0x40 to: ['gc_env.r[1] += 64; // addi r1, r1, 0x40']
Translated blr  to: return;
Translated blr  to: return;
Translated blr  to: return;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x6400']
Translated addi r3 r3 0x6400 to: ['gc_env.r[3] += 25600; // addi r3, r3, 0x6400']
Processing opcode: stw, operands: ['r0', '0x3c(r3)']
Translated stw r0 0x3c(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x3C, gc_env.r[0]); // stw r0, 0x3C(r3)']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated lis r3 0x2 to: ['gc_env.r[3] = 2 << 16; // lis r3, 0x2']
Processing opcode: addi, operands: ['r3', 'r3', '-0x8000']
Translated addi r3 r3 -0x8000 to: ['gc_env.r[3] -= 32768; // addi r3, r3, -0x8000']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Translated bl fn_8001985C to: fn_8001985C();
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x6800']
Translated addi r3 r3 0x6800 to: ['gc_env.r[3] += 26624; // addi r3, r3, 0x6800']
Processing opcode: stw, operands: ['r0', '0x28(r3)']
Translated stw r0 0x28(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x28, gc_env.r[0]); // stw r0, 0x28(r3)']
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated lis r4 0xcc00 to: ['gc_env.r[4] = -13312 << 16; // lis r4, 0xcc00']
Processing opcode: addi, operands: ['r4', 'r4', '0x6800']
Translated addi r4 r4 0x6800 to: ['gc_env.r[4] += 26624; // addi r4, r4, 0x6800']
Processing opcode: addi, operands: ['r4', 'r4', '0x28']
Translated addi r4 r4 0x28 to: ['gc_env.r[4] += 40; // addi r4, r4, 0x28']
Processing opcode: lwz, operands: ['r5', '0x0(r4)']
Translated lwz r5 0x0(r4) to: ['gc_env.r[5] = gc_mem_read32(gc_env.ram, gc_env.r[4]); // lwz r5, (r4)']
Translated andi. r5 r5 0x405 to: gc_env.r[5] = gc_env.r[5] & 0x405;
Translated slwi r0 r3 4 to: ['gc_env.r[0] = gc_env.r[3] << 4; // slwi r0, r3, 4']
Translated ori r0 r0 0x80 to: ['gc_env.r[0] |= 128; // ori r0, r0, 0x80']
Translated or r5 r5 r0 to: ['gc_env.r[5] = gc_env.r[5] | gc_env.r[0]; // or r5, r5, r0']
Processing opcode: stw, operands: ['r5', '0x0(r4)']
Translated stw r5 0x0(r4) to: ['gc_mem_write32(gc_env.ram, gc_env.r[4], gc_env.r[5]); // stw r5, (r4)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated blr  to: return;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x6800']
Translated addi r3 r3 0x6800 to: ['gc_env.r[3] += 26624; // addi r3, r3, 0x6800']
Processing opcode: addi, operands: ['r3', 'r3', '0x28']
Translated addi r3 r3 0x28 to: ['gc_env.r[3] += 40; // addi r3, r3, 0x28']
Processing opcode: lwz, operands: ['r0', '0x0(r3)']
Translated lwz r0 0x0(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3]); // lwz r0, (r3)']
Translated andi. r0 r0 0x405 to: gc_env.r[0] = gc_env.r[0] & 0x405;
Processing opcode: stw, operands: ['r0', '0x0(r3)']
Translated stw r0 0x0(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3], gc_env.r[0]); // stw r0, (r3)']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated blr  to: return;
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x6800']
Translated addi r3 r3 0x6800 to: ['gc_env.r[3] += 26624; // addi r3, r3, 0x6800']
Translated b .L_80019904 to: goto L_80019904;
Translated b .L_80019908 to: goto L_80019908;
Processing opcode: lwz, operands: ['r0', '0x34(r3)']
Translated lwz r0 0x34(r3) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[3] + 0x34); // lwz r0, 0x34(r3)']
Translated clrlwi r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80019908 to: if (gc_env.cr[0] != 0) goto L_80019908;
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Processing opcode: stw, operands: ['r31', '0x2c(r1)']
Translated stw r31 0x2c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stw r31, 0x2C(r1)']
Processing opcode: stw, operands: ['r30', '0x28(r1)']
Translated stw r30 0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[30]); // stw r30, 0x28(r1)']
Processing opcode: stw, operands: ['r29', '0x24(r1)']
Translated stw r29 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[29]); // stw r29, 0x24(r1)']
Processing opcode: stw, operands: ['r28', '0x20(r1)']
Translated stw r28 0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x20, gc_env.r[28]); // stw r28, 0x20(r1)']
Translated mr r29 r3 to: gc_env.r[29] = gc_env.r[3]; // Move register
Translated mr r30 r4 to: gc_env.r[30] = gc_env.r[4]; // Move register
Translated mr r31 r5 to: gc_env.r[31] = gc_env.r[5]; // Move register
Translated cmplwi r31 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == 0x0) ? 0 : ((uint32_t)gc_env.r[31] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_80019A94 to: if (gc_env.cr[0] == 0) goto L_80019A94;
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: li, operands: ['r4', '0x0']
Translated li r4 0x0 to: ['gc_env.r[4] = 0x0; // li r4, 0x0']
Translated cmpw r4 r30 to: ['gc_env.cr[0] = (int32_t)gc_env.r[4] < (int32_t)gc_env.r[30] ? 0x8 : ((int32_t)gc_env.r[4] > (int32_t)gc_env.r[30] ? 0x4 : 0x2); // cmpw r4, r30']
Translated bge .L_80019A88 to: if (gc_env.cr[0] >= 0) goto L_80019A88;
Processing opcode: subi, operands: ['r6', 'r30', '0x8']
Translated subi r6 r30 0x8 to: ['gc_env.r[6] = gc_env.r[30] - 8; // subi r6, r30, 8']
Translated cmpwi r30 0x8 to: gc_env.cr[0] = (gc_env.r[30] == 0x8) ? 0 : (gc_env.r[30] < 0x8 ? -1 : 1); // Compare with immediate
Translated ble .L_80019C1C to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80019C1C; // ble .L_80019C1C']
Translated mr r3 r29 to: gc_env.r[3] = gc_env.r[29]; // Move register
Translated b .L_80019974 to: goto L_80019974;
Processing opcode: addi, operands: ['r5', 'r6', '0x7']
Translated addi r5 r6 0x7 to: ['gc_env.r[5] = gc_env.r[6] + 7; // addi r5, r6, 0x7']
Translated srwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] >> 3; // srwi r5, r5, 3']
Translated mtctr r5 to: gc_env.ctr = gc_env.r[5]; // Move to count register
Translated cmpwi r6 0x0 to: gc_env.cr[0] = (gc_env.r[6] == 0x0) ? 0 : (gc_env.r[6] < 0x0 ? -1 : 1); // Compare with immediate
Translated ble .L_80019A50 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80019A50; // ble .L_80019A50']
Translated b .L_8001998C to: goto L_8001998C;
Processing opcode: lbz, operands: ['r6', '0x0(r3)']
Translated lbz r6 0x0(r3) to: ['gc_env.r[6] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x0); // lbz r6, 0x0(r3)']
Translated subfic r5 r4 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[4]; // subfic r5, r4, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[4] ? 0x20000000 : 0);']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated slw r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[6] << (gc_env.r[5] & 31); // slw r5, r6, r5']
Translated or r0 r0 r5 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[5]; // or r0, r0, r5']
Processing opcode: lbz, operands: ['r6', '0x1(r3)']
Translated lbz r6 0x1(r3) to: ['gc_env.r[6] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x1); // lbz r6, 0x1(r3)']
Processing opcode: addi, operands: ['r5', 'r4', '0x1']
Translated addi r5 r4 0x1 to: ['gc_env.r[5] = gc_env.r[4] + 1; // addi r5, r4, 0x1']
Translated subfic r5 r5 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[5]; // subfic r5, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated slw r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[6] << (gc_env.r[5] & 31); // slw r5, r6, r5']
Translated or r0 r0 r5 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[5]; // or r0, r0, r5']
Processing opcode: lbz, operands: ['r6', '0x2(r3)']
Translated lbz r6 0x2(r3) to: ['gc_env.r[6] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x2); // lbz r6, 0x2(r3)']
Processing opcode: addi, operands: ['r5', 'r4', '0x2']
Translated addi r5 r4 0x2 to: ['gc_env.r[5] = gc_env.r[4] + 2; // addi r5, r4, 0x2']
Translated subfic r5 r5 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[5]; // subfic r5, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated slw r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[6] << (gc_env.r[5] & 31); // slw r5, r6, r5']
Translated or r0 r0 r5 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[5]; // or r0, r0, r5']
Processing opcode: lbz, operands: ['r6', '0x3(r3)']
Translated lbz r6 0x3(r3) to: ['gc_env.r[6] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x3); // lbz r6, 0x3(r3)']
Translated neg r5 r4 to: ['gc_env.r[5] = -(int32_t)gc_env.r[4]; // neg r5, r4']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated slw r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[6] << (gc_env.r[5] & 31); // slw r5, r6, r5']
Translated or r0 r0 r5 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[5]; // or r0, r0, r5']
Processing opcode: lbz, operands: ['r6', '0x4(r3)']
Translated lbz r6 0x4(r3) to: ['gc_env.r[6] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x4); // lbz r6, 0x4(r3)']
Processing opcode: addi, operands: ['r5', 'r4', '0x4']
Translated addi r5 r4 0x4 to: ['gc_env.r[5] = gc_env.r[4] + 4; // addi r5, r4, 0x4']
Translated subfic r5 r5 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[5]; // subfic r5, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated slw r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[6] << (gc_env.r[5] & 31); // slw r5, r6, r5']
Translated or r0 r0 r5 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[5]; // or r0, r0, r5']
Processing opcode: lbz, operands: ['r6', '0x5(r3)']
Translated lbz r6 0x5(r3) to: ['gc_env.r[6] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x5); // lbz r6, 0x5(r3)']
Processing opcode: addi, operands: ['r5', 'r4', '0x5']
Translated addi r5 r4 0x5 to: ['gc_env.r[5] = gc_env.r[4] + 5; // addi r5, r4, 0x5']
Translated subfic r5 r5 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[5]; // subfic r5, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated slw r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[6] << (gc_env.r[5] & 31); // slw r5, r6, r5']
Translated or r0 r0 r5 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[5]; // or r0, r0, r5']
Processing opcode: lbz, operands: ['r6', '0x6(r3)']
Translated lbz r6 0x6(r3) to: ['gc_env.r[6] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x6); // lbz r6, 0x6(r3)']
Processing opcode: addi, operands: ['r5', 'r4', '0x6']
Translated addi r5 r4 0x6 to: ['gc_env.r[5] = gc_env.r[4] + 6; // addi r5, r4, 0x6']
Translated subfic r5 r5 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[5]; // subfic r5, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated slw r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[6] << (gc_env.r[5] & 31); // slw r5, r6, r5']
Translated or r0 r0 r5 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[5]; // or r0, r0, r5']
Processing opcode: lbz, operands: ['r6', '0x7(r3)']
Translated lbz r6 0x7(r3) to: ['gc_env.r[6] = gc_mem_read8(gc_env.ram, gc_env.r[3] + 0x7); // lbz r6, 0x7(r3)']
Processing opcode: addi, operands: ['r5', 'r4', '0x7']
Translated addi r5 r4 0x7 to: ['gc_env.r[5] = gc_env.r[4] + 7; // addi r5, r4, 0x7']
Translated subfic r5 r5 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[5]; // subfic r5, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated slw r5 r6 r5 to: ['gc_env.r[5] = gc_env.r[6] << (gc_env.r[5] & 31); // slw r5, r6, r5']
Translated or r0 r0 r5 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[5]; // or r0, r0, r5']
Processing opcode: addi, operands: ['r3', 'r3', '0x8']
Translated addi r3 r3 0x8 to: ['gc_env.r[3] += 8; // addi r3, r3, 0x8']
Processing opcode: addi, operands: ['r4', 'r4', '0x8']
Translated addi r4 r4 0x8 to: ['gc_env.r[4] += 8; // addi r4, r4, 0x8']
Translated bdnz .L_8001998C to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_8001998C;']
Translated b .L_80019C1C to: goto L_80019C1C;
Processing opcode: subf, operands: ['r3', 'r4', 'r30']
Translated subf r3 r4 r30 to: ['gc_env.r[3] = gc_env.r[30] - gc_env.r[4]; // subf r3, r4, r30']
Translated mtctr r3 to: gc_env.ctr = gc_env.r[3]; // Move to count register
Translated cmpw r4 r30 to: ['gc_env.cr[0] = (int32_t)gc_env.r[4] < (int32_t)gc_env.r[30] ? 0x8 : ((int32_t)gc_env.r[4] > (int32_t)gc_env.r[30] ? 0x4 : 0x2); // cmpw r4, r30']
Translated bge .L_80019A88 to: if (gc_env.cr[0] >= 0) goto L_80019A88;
Translated b .L_80019A68 to: goto L_80019A68;
Processing opcode: lbz, operands: ['r5', '0x0(r6)']
Translated lbz r5 0x0(r6) to: ['gc_env.r[5] = gc_mem_read8(gc_env.ram, gc_env.r[6] + 0x0); // lbz r5, 0x0(r6)']
Translated subfic r3 r4 0x3 to: ['gc_env.r[3] = 3 - gc_env.r[4]; // subfic r3, r4, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[4] ? 0x20000000 : 0);']
Translated slwi r3 r3 3 to: ['gc_env.r[3] = gc_env.r[3] << 3; // slwi r3, r3, 3']
Translated slw r3 r5 r3 to: ['gc_env.r[3] = gc_env.r[5] << (gc_env.r[3] & 31); // slw r3, r5, r3']
Translated or r0 r0 r3 to: ['gc_env.r[0] = gc_env.r[0] | gc_env.r[3]; // or r0, r0, r3']
Processing opcode: addi, operands: ['r6', 'r6', '0x1']
Translated addi r6 r6 0x1 to: ['gc_env.r[6] += 1; // addi r6, r6, 0x1']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Translated bdnz .L_80019A68 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80019A68;']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r3', 'r3', '0x6800']
Translated addi r3 r3 0x6800 to: ['gc_env.r[3] += 26624; // addi r3, r3, 0x6800']
Processing opcode: stw, operands: ['r0', '0x38(r3)']
Translated stw r0 0x38(r3) to: ['gc_mem_write32(gc_env.ram, gc_env.r[3] + 0x38, gc_env.r[0]); // stw r0, 0x38(r3)']
Translated slwi r0 r31 2 to: ['gc_env.r[0] = gc_env.r[31] << 2; // slwi r0, r31, 2']
Translated ori r3 r0 0x1 to: ['gc_env.r[3] = gc_env.r[0] | 1; // ori r3, r0, 0x1']
Processing opcode: subi, operands: ['r0', 'r30', '0x1']
Translated subi r0 r30 0x1 to: ['gc_env.r[0] = gc_env.r[30] - 1; // subi r0, r30, 1']
Translated slwi r0 r0 4 to: ['gc_env.r[0] = gc_env.r[0] << 4; // slwi r0, r0, 4']
Translated or r0 r3 r0 to: ['gc_env.r[0] = gc_env.r[3] | gc_env.r[0]; // or r0, r3, r0']
Translated lis r3 0xcc00 to: ['gc_env.r[3] = -13312 << 16; // lis r3, 0xcc00']
Processing opcode: addi, operands: ['r28', 'r3', '0x6800']
Translated addi r28 r3 0x6800 to: ['gc_env.r[28] = gc_env.r[3] + 26624; // addi r28, r3, 0x6800']
Processing opcode: stw, operands: ['r0', '0x34(r28)']
Translated stw r0 0x34(r28) to: ['gc_mem_write32(gc_env.ram, gc_env.r[28] + 0x34, gc_env.r[0]); // stw r0, 0x34(r28)']
Translated bl fn_800198F8 to: fn_800198F8();
Translated cmplwi r31 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[31] == 0x0) ? 0 : ((uint32_t)gc_env.r[31] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_80019C14 to: if (gc_env.cr[0] != 0) goto L_80019C14;
Translated mr r4 r29 to: gc_env.r[4] = gc_env.r[29]; // Move register
Processing opcode: lwz, operands: ['r0', '0x38(r28)']
Translated lwz r0 0x38(r28) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[28] + 0x38); // lwz r0, 0x38(r28)']
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated cmpw r3 r30 to: ['gc_env.cr[0] = (int32_t)gc_env.r[3] < (int32_t)gc_env.r[30] ? 0x8 : ((int32_t)gc_env.r[3] > (int32_t)gc_env.r[30] ? 0x4 : 0x2); // cmpw r3, r30']
Translated bge .L_80019C14 to: if (gc_env.cr[0] >= 0) goto L_80019C14;
Processing opcode: subi, operands: ['r6', 'r30', '0x8']
Translated subi r6 r30 0x8 to: ['gc_env.r[6] = gc_env.r[30] - 8; // subi r6, r30, 8']
Translated cmpwi r30 0x8 to: gc_env.cr[0] = (gc_env.r[30] == 0x8) ? 0 : (gc_env.r[30] < 0x8 ? -1 : 1); // Compare with immediate
Translated ble .L_80019BE0 to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80019BE0; // ble .L_80019BE0']
Translated b .L_80019AE4 to: goto L_80019AE4;
Processing opcode: addi, operands: ['r5', 'r6', '0x7']
Translated addi r5 r6 0x7 to: ['gc_env.r[5] = gc_env.r[6] + 7; // addi r5, r6, 0x7']
Translated srwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] >> 3; // srwi r5, r5, 3']
Translated mtctr r5 to: gc_env.ctr = gc_env.r[5]; // Move to count register
Translated cmpwi r6 0x0 to: gc_env.cr[0] = (gc_env.r[6] == 0x0) ? 0 : (gc_env.r[6] < 0x0 ? -1 : 1); // Compare with immediate
Translated ble .L_80019BDC to: ['if (gc_env.cr[0] & (0x8 | 0x2)) goto L_80019BDC; // ble .L_80019BDC']
Translated b .L_80019AFC to: goto L_80019AFC;
Translated subfic r5 r3 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[3]; // subfic r5, r3, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[3] ? 0x20000000 : 0);']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated srw r5 r0 r5 to: ['gc_env.r[5] = gc_env.r[0] >> (gc_env.r[5] & 31); // srw r5, r0, r5']
Translated clrlwi r5 r5 24 to: ['gc_env.r[5] = gc_env.r[5] & 0xFF; // clrlwi r5, r5, 24']
Processing opcode: stb, operands: ['r5', '0x0(r4)']
Translated stb r5 0x0(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4], gc_env.r[5]); // stb r5, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Processing opcode: addi, operands: ['r5', 'r3', '0x1']
Translated addi r5 r3 0x1 to: ['gc_env.r[5] = gc_env.r[3] + 1; // addi r5, r3, 0x1']
Translated subfic r5 r5 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[5]; // subfic r5, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated srw r5 r0 r5 to: ['gc_env.r[5] = gc_env.r[0] >> (gc_env.r[5] & 31); // srw r5, r0, r5']
Translated clrlwi r5 r5 24 to: ['gc_env.r[5] = gc_env.r[5] & 0xFF; // clrlwi r5, r5, 24']
Processing opcode: stb, operands: ['r5', '0x0(r4)']
Translated stb r5 0x0(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4], gc_env.r[5]); // stb r5, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Processing opcode: addi, operands: ['r5', 'r3', '0x2']
Translated addi r5 r3 0x2 to: ['gc_env.r[5] = gc_env.r[3] + 2; // addi r5, r3, 0x2']
Translated subfic r5 r5 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[5]; // subfic r5, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated srw r5 r0 r5 to: ['gc_env.r[5] = gc_env.r[0] >> (gc_env.r[5] & 31); // srw r5, r0, r5']
Translated clrlwi r5 r5 24 to: ['gc_env.r[5] = gc_env.r[5] & 0xFF; // clrlwi r5, r5, 24']
Processing opcode: stb, operands: ['r5', '0x0(r4)']
Translated stb r5 0x0(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4], gc_env.r[5]); // stb r5, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Translated neg r5 r3 to: ['gc_env.r[5] = -(int32_t)gc_env.r[3]; // neg r5, r3']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated srw r5 r0 r5 to: ['gc_env.r[5] = gc_env.r[0] >> (gc_env.r[5] & 31); // srw r5, r0, r5']
Translated clrlwi r5 r5 24 to: ['gc_env.r[5] = gc_env.r[5] & 0xFF; // clrlwi r5, r5, 24']
Processing opcode: stb, operands: ['r5', '0x0(r4)']
Translated stb r5 0x0(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4], gc_env.r[5]); // stb r5, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Processing opcode: addi, operands: ['r5', 'r3', '0x4']
Translated addi r5 r3 0x4 to: ['gc_env.r[5] = gc_env.r[3] + 4; // addi r5, r3, 0x4']
Translated subfic r5 r5 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[5]; // subfic r5, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated srw r5 r0 r5 to: ['gc_env.r[5] = gc_env.r[0] >> (gc_env.r[5] & 31); // srw r5, r0, r5']
Translated clrlwi r5 r5 24 to: ['gc_env.r[5] = gc_env.r[5] & 0xFF; // clrlwi r5, r5, 24']
Processing opcode: stb, operands: ['r5', '0x0(r4)']
Translated stb r5 0x0(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4], gc_env.r[5]); // stb r5, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Processing opcode: addi, operands: ['r5', 'r3', '0x5']
Translated addi r5 r3 0x5 to: ['gc_env.r[5] = gc_env.r[3] + 5; // addi r5, r3, 0x5']
Translated subfic r5 r5 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[5]; // subfic r5, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated srw r5 r0 r5 to: ['gc_env.r[5] = gc_env.r[0] >> (gc_env.r[5] & 31); // srw r5, r0, r5']
Translated clrlwi r5 r5 24 to: ['gc_env.r[5] = gc_env.r[5] & 0xFF; // clrlwi r5, r5, 24']
Processing opcode: stb, operands: ['r5', '0x0(r4)']
Translated stb r5 0x0(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4], gc_env.r[5]); // stb r5, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Processing opcode: addi, operands: ['r5', 'r3', '0x6']
Translated addi r5 r3 0x6 to: ['gc_env.r[5] = gc_env.r[3] + 6; // addi r5, r3, 0x6']
Translated subfic r5 r5 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[5]; // subfic r5, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated srw r5 r0 r5 to: ['gc_env.r[5] = gc_env.r[0] >> (gc_env.r[5] & 31); // srw r5, r0, r5']
Translated clrlwi r5 r5 24 to: ['gc_env.r[5] = gc_env.r[5] & 0xFF; // clrlwi r5, r5, 24']
Processing opcode: stb, operands: ['r5', '0x0(r4)']
Translated stb r5 0x0(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4], gc_env.r[5]); // stb r5, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Processing opcode: addi, operands: ['r5', 'r3', '0x7']
Translated addi r5 r3 0x7 to: ['gc_env.r[5] = gc_env.r[3] + 7; // addi r5, r3, 0x7']
Translated subfic r5 r5 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[5]; // subfic r5, r5, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[5] ? 0x20000000 : 0);']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated srw r5 r0 r5 to: ['gc_env.r[5] = gc_env.r[0] >> (gc_env.r[5] & 31); // srw r5, r0, r5']
Translated clrlwi r5 r5 24 to: ['gc_env.r[5] = gc_env.r[5] & 0xFF; // clrlwi r5, r5, 24']
Processing opcode: stb, operands: ['r5', '0x0(r4)']
Translated stb r5 0x0(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4], gc_env.r[5]); // stb r5, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Processing opcode: addi, operands: ['r3', 'r3', '0x8']
Translated addi r3 r3 0x8 to: ['gc_env.r[3] += 8; // addi r3, r3, 0x8']
Translated bdnz .L_80019AFC to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80019AFC;']
Translated b .L_80019BE0 to: goto L_80019BE0;
Processing opcode: subf, operands: ['r5', 'r3', 'r30']
Translated subf r5 r3 r30 to: ['gc_env.r[5] = gc_env.r[30] - gc_env.r[3]; // subf r5, r3, r30']
Translated mtctr r5 to: gc_env.ctr = gc_env.r[5]; // Move to count register
Translated cmpw r3 r30 to: ['gc_env.cr[0] = (int32_t)gc_env.r[3] < (int32_t)gc_env.r[30] ? 0x8 : ((int32_t)gc_env.r[3] > (int32_t)gc_env.r[30] ? 0x4 : 0x2); // cmpw r3, r30']
Translated bge .L_80019C14 to: if (gc_env.cr[0] >= 0) goto L_80019C14;
Translated b .L_80019BF4 to: goto L_80019BF4;
Translated subfic r5 r3 0x3 to: ['gc_env.r[5] = 3 - gc_env.r[3]; // subfic r5, r3, 3', 'gc_env.xer = (gc_env.xer & ~0x20000000) | (3 >= gc_env.r[3] ? 0x20000000 : 0);']
Translated slwi r5 r5 3 to: ['gc_env.r[5] = gc_env.r[5] << 3; // slwi r5, r5, 3']
Translated srw r5 r0 r5 to: ['gc_env.r[5] = gc_env.r[0] >> (gc_env.r[5] & 31); // srw r5, r0, r5']
Translated clrlwi r5 r5 24 to: ['gc_env.r[5] = gc_env.r[5] & 0xFF; // clrlwi r5, r5, 24']
Processing opcode: stb, operands: ['r5', '0x0(r4)']
Translated stb r5 0x0(r4) to: ['gc_mem_write8(gc_env.ram, gc_env.r[4], gc_env.r[5]); // stb r5, (r4)']
Processing opcode: addi, operands: ['r4', 'r4', '0x1']
Translated addi r4 r4 0x1 to: ['gc_env.r[4] += 1; // addi r4, r4, 0x1']
Processing opcode: addi, operands: ['r3', 'r3', '0x1']
Translated addi r3 r3 0x1 to: ['gc_env.r[3] += 1; // addi r3, r3, 0x1']
Translated bdnz .L_80019BF4 to: ['gc_env.ctr -= 1;', 'if (gc_env.ctr != 0) goto L_80019BF4;']
Processing opcode: li, operands: ['r3', '0x1']
Translated li r3 0x1 to: ['gc_env.r[3] = 0x1; // li r3, 0x1']
Translated b .L_80019C24 to: goto L_80019C24;
Processing opcode: add, operands: ['r6', 'r29', 'r4']
Translated add r6 r29 r4 to: ['gc_env.r[6] = gc_env.r[29] + gc_env.r[4]; // add r6, r29, r4']
Translated b .L_80019A54 to: goto L_80019A54;
Processing opcode: lwz, operands: ['r0', '0x34(r1)']
Translated lwz r0 0x34(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r0, 0x34(r1)']
Processing opcode: lwz, operands: ['r31', '0x2c(r1)']
Translated lwz r31 0x2c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r31, 0x2C(r1)']
Processing opcode: lwz, operands: ['r30', '0x28(r1)']
Translated lwz r30 0x28(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lwz r30, 0x28(r1)']
Processing opcode: lwz, operands: ['r29', '0x24(r1)']
Translated lwz r29 0x24(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r29, 0x24(r1)']
Processing opcode: lwz, operands: ['r28', '0x20(r1)']
Translated lwz r28 0x20(r1) to: ['gc_env.r[28] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x20); // lwz r28, 0x20(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: li, operands: ['r3', '0x4']
Translated li r3 0x4 to: ['gc_env.r[3] = 0x4; // li r3, 0x4']
Translated bl fn_800198AC to: fn_800198AC();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80019C70 to: if (gc_env.cr[0] != 0) goto L_80019C70;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80019CBC to: goto L_80019CBC;
Translated clrlwi r0 r31 3 to: ['gc_env.r[0] = gc_env.r[31] & 0x1FFFFFFF; // clrlwi r0, r31, 3']
Translated oris r0 r0 0xc000 to: ['gc_env.r[0] = gc_env.r[0] | 0xC0000000; // oris r0, r0, 0xC000']
Processing opcode: stw, operands: ['r0', '0xc(r1)']
Translated stw r0 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[0]); // stw r0, 0xC(r1)']
Processing opcode: addi, operands: ['r3', 'r1', '0xc']
Translated addi r3 r1 0xc to: ['gc_env.r[3] = gc_env.r[1] + 12; // addi r3, r1, 0xc']
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Translated bl fn_80019920 to: fn_80019920();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r31 r0 5 to: ['gc_env.r[31] = gc_env.r[0] >> 5; // srwi r31, r0, 5']
Translated bl fn_800198F8 to: fn_800198F8();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated bl fn_800198D8 to: fn_800198D8();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated cntlzw r0 r31 to: ['uint32_t val = gc_env.r[31]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r31']
Translated srwi r3 r0 5 to: ['gc_env.r[3] = gc_env.r[0] >> 5; // srwi r3, r0, 5']
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Processing opcode: li, operands: ['r3', '0x4']
Translated li r3 0x4 to: ['gc_env.r[3] = 0x4; // li r3, 0x4']
Translated bl fn_800198AC to: fn_800198AC();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80019D00 to: if (gc_env.cr[0] != 0) goto L_80019D00;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80019D74 to: goto L_80019D74;
Translated lis r0 0x6000 to: ['gc_env.r[0] = 24576 << 16; // lis r0, 0x6000']
Processing opcode: stw, operands: ['r0', '0xc(r1)']
Translated stw r0 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[0]); // stw r0, 0xC(r1)']
Processing opcode: addi, operands: ['r3', 'r1', '0xc']
Translated addi r3 r1 0xc to: ['gc_env.r[3] = gc_env.r[1] + 12; // addi r3, r1, 0xc']
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Translated bl fn_80019920 to: fn_80019920();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r31 r0 5 to: ['gc_env.r[31] = gc_env.r[0] >> 5; // srwi r31, r0, 5']
Translated bl fn_800198F8 to: fn_800198F8();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80019920 to: fn_80019920();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated bl fn_800198F8 to: fn_800198F8();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated bl fn_800198D8 to: fn_800198D8();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated cntlzw r0 r31 to: ['uint32_t val = gc_env.r[31]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r31']
Translated srwi r3 r0 5 to: ['gc_env.r[3] = gc_env.r[0] >> 5; // srwi r3, r0, 5']
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Processing opcode: stw, operands: ['r31', '0x2c(r1)']
Translated stw r31 0x2c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stw r31, 0x2C(r1)']
Processing opcode: stw, operands: ['r30', '0x28(r1)']
Translated stw r30 0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[30]); // stw r30, 0x28(r1)']
Processing opcode: stw, operands: ['r29', '0x24(r1)']
Translated stw r29 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[29]); // stw r29, 0x24(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated mr r29 r5 to: gc_env.r[29] = gc_env.r[5]; // Move register
Translated mr r30 r4 to: gc_env.r[30] = gc_env.r[4]; // Move register
Processing opcode: li, operands: ['r3', '0x4']
Translated li r3 0x4 to: ['gc_env.r[3] = 0x4; // li r3, 0x4']
Translated bl fn_800198AC to: fn_800198AC();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80019DC8 to: if (gc_env.cr[0] != 0) goto L_80019DC8;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80019E70 to: goto L_80019E70;
Translated rlwinm r0 r31 8 7 21 to: ['gc_env.r[0] = (gc_env.r[31] << 8) & 0x1FFFC00; // rlwinm r0, r31, 8, 7, 21']
Translated oris r0 r0 0x2000 to: ['gc_env.r[0] = gc_env.r[0] | 0x20000000; // oris r0, r0, 0x2000']
Processing opcode: stw, operands: ['r0', '0x18(r1)']
Translated stw r0 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[0]); // stw r0, 0x18(r1)']
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Translated bl fn_80019920 to: fn_80019920();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r31 r0 5 to: ['gc_env.r[31] = gc_env.r[0] >> 5; // srwi r31, r0, 5']
Translated bl fn_800198F8 to: fn_800198F8();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated b .L_80019E00 to: goto L_80019E00;
Translated b .L_80019E04 to: goto L_80019E04;
Translated b .L_80019E50 to: goto L_80019E50;
Processing opcode: addi, operands: ['r3', 'r1', '0x14']
Translated addi r3 r1 0x14 to: ['gc_env.r[3] = gc_env.r[1] + 20; // addi r3, r1, 0x14']
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80019920 to: fn_80019920();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated bl fn_800198F8 to: fn_800198F8();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: stw, operands: ['r0', '0x0(r30)']
Translated stw r0 0x0(r30) to: ['gc_mem_write32(gc_env.ram, gc_env.r[30], gc_env.r[0]); // stw r0, (r30)']
Processing opcode: addi, operands: ['r30', 'r30', '0x4']
Translated addi r30 r30 0x4 to: ['gc_env.r[30] += 4; // addi r30, r30, 0x4']
Processing opcode: subi, operands: ['r29', 'r29', '0x4']
Translated subi r29 r29 0x4 to: ['gc_env.r[29] = gc_env.r[29] - 4; // subi r29, r29, 4']
Translated cmpwi r29 0x0 to: gc_env.cr[0] = (gc_env.r[29] == 0x0) ? 0 : (gc_env.r[29] < 0x0 ? -1 : 1); // Compare with immediate
Translated bge .L_80019E50 to: if (gc_env.cr[0] >= 0) goto L_80019E50;
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Translated cmpwi r29 0x0 to: gc_env.cr[0] = (gc_env.r[29] == 0x0) ? 0 : (gc_env.r[29] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80019E08 to: if (gc_env.cr[0] != 0) goto L_80019E08;
Translated bl fn_800198D8 to: fn_800198D8();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated cntlzw r0 r31 to: ['uint32_t val = gc_env.r[31]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r31']
Translated srwi r3 r0 5 to: ['gc_env.r[3] = gc_env.r[0] >> 5; // srwi r3, r0, 5']
Processing opcode: lwz, operands: ['r0', '0x34(r1)']
Translated lwz r0 0x34(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r0, 0x34(r1)']
Processing opcode: lwz, operands: ['r31', '0x2c(r1)']
Translated lwz r31 0x2c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r31, 0x2C(r1)']
Processing opcode: lwz, operands: ['r30', '0x28(r1)']
Translated lwz r30 0x28(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lwz r30, 0x28(r1)']
Processing opcode: lwz, operands: ['r29', '0x24(r1)']
Translated lwz r29 0x24(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r29, 0x24(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Processing opcode: stw, operands: ['r31', '0x2c(r1)']
Translated stw r31 0x2c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x2C, gc_env.r[31]); // stw r31, 0x2C(r1)']
Processing opcode: stw, operands: ['r30', '0x28(r1)']
Translated stw r30 0x28(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x28, gc_env.r[30]); // stw r30, 0x28(r1)']
Processing opcode: stw, operands: ['r29', '0x24(r1)']
Translated stw r29 0x24(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x24, gc_env.r[29]); // stw r29, 0x24(r1)']
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated mr r29 r5 to: gc_env.r[29] = gc_env.r[5]; // Move register
Translated mr r30 r4 to: gc_env.r[30] = gc_env.r[4]; // Move register
Processing opcode: li, operands: ['r3', '0x4']
Translated li r3 0x4 to: ['gc_env.r[3] = 0x4; // li r3, 0x4']
Translated bl fn_800198AC to: fn_800198AC();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80019EC8 to: if (gc_env.cr[0] != 0) goto L_80019EC8;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_80019F70 to: goto L_80019F70;
Translated rlwinm r0 r31 8 7 21 to: ['gc_env.r[0] = (gc_env.r[31] << 8) & 0x1FFFC00; // rlwinm r0, r31, 8, 7, 21']
Translated oris r0 r0 0xa000 to: ['gc_env.r[0] = gc_env.r[0] | 0xA0000000; // oris r0, r0, 0xA000']
Processing opcode: stw, operands: ['r0', '0x18(r1)']
Translated stw r0 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[0]); // stw r0, 0x18(r1)']
Processing opcode: addi, operands: ['r3', 'r1', '0x18']
Translated addi r3 r1 0x18 to: ['gc_env.r[3] = gc_env.r[1] + 24; // addi r3, r1, 0x18']
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Translated bl fn_80019920 to: fn_80019920();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r31 r0 5 to: ['gc_env.r[31] = gc_env.r[0] >> 5; // srwi r31, r0, 5']
Translated bl fn_800198F8 to: fn_800198F8();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated b .L_80019F00 to: goto L_80019F00;
Translated b .L_80019F04 to: goto L_80019F04;
Translated b .L_80019F50 to: goto L_80019F50;
Processing opcode: lwz, operands: ['r0', '0x0(r30)']
Translated lwz r0 0x0(r30) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[30]); // lwz r0, (r30)']
Processing opcode: addi, operands: ['r30', 'r30', '0x4']
Translated addi r30 r30 0x4 to: ['gc_env.r[30] += 4; // addi r30, r30, 0x4']
Processing opcode: stw, operands: ['r0', '0x14(r1)']
Translated stw r0 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[0]); // stw r0, 0x14(r1)']
Processing opcode: addi, operands: ['r3', 'r1', '0x14']
Translated addi r3 r1 0x14 to: ['gc_env.r[3] = gc_env.r[1] + 20; // addi r3, r1, 0x14']
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Translated bl fn_80019920 to: fn_80019920();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated bl fn_800198F8 to: fn_800198F8();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Processing opcode: subi, operands: ['r29', 'r29', '0x4']
Translated subi r29 r29 0x4 to: ['gc_env.r[29] = gc_env.r[29] - 4; // subi r29, r29, 4']
Translated cmpwi r29 0x0 to: gc_env.cr[0] = (gc_env.r[29] == 0x0) ? 0 : (gc_env.r[29] < 0x0 ? -1 : 1); // Compare with immediate
Translated bge .L_80019F50 to: if (gc_env.cr[0] >= 0) goto L_80019F50;
Processing opcode: li, operands: ['r29', '0x0']
Translated li r29 0x0 to: ['gc_env.r[29] = 0x0; // li r29, 0x0']
Translated cmpwi r29 0x0 to: gc_env.cr[0] = (gc_env.r[29] == 0x0) ? 0 : (gc_env.r[29] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80019F08 to: if (gc_env.cr[0] != 0) goto L_80019F08;
Translated bl fn_800198D8 to: fn_800198D8();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated cntlzw r0 r31 to: ['uint32_t val = gc_env.r[31]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r31']
Translated srwi r3 r0 5 to: ['gc_env.r[3] = gc_env.r[0] >> 5; // srwi r3, r0, 5']
Processing opcode: lwz, operands: ['r0', '0x34(r1)']
Translated lwz r0 0x34(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r0, 0x34(r1)']
Processing opcode: lwz, operands: ['r31', '0x2c(r1)']
Translated lwz r31 0x2c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x2C); // lwz r31, 0x2C(r1)']
Processing opcode: lwz, operands: ['r30', '0x28(r1)']
Translated lwz r30 0x28(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x28); // lwz r30, 0x28(r1)']
Processing opcode: lwz, operands: ['r29', '0x24(r1)']
Translated lwz r29 0x24(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r29, 0x24(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x18(r1)']
Translated stwu r1 -0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x18, gc_env.r[1]); // stwu r1, -0x18(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x18;']
Processing opcode: stw, operands: ['r31', '0x14(r1)']
Translated stw r31 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[31]); // stw r31, 0x14(r1)']
Processing opcode: stw, operands: ['r30', '0x10(r1)']
Translated stw r30 0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x10, gc_env.r[30]); // stw r30, 0x10(r1)']
Translated mr r30 r3 to: gc_env.r[30] = gc_env.r[3]; // Move register
Processing opcode: li, operands: ['r3', '0x4']
Translated li r3 0x4 to: ['gc_env.r[3] = 0x4; // li r3, 0x4']
Translated bl fn_800198AC to: fn_800198AC();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_80019FBC to: if (gc_env.cr[0] != 0) goto L_80019FBC;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated b .L_8001A030 to: goto L_8001A030;
Translated lis r0 0x4000 to: ['gc_env.r[0] = 16384 << 16; // lis r0, 0x4000']
Processing opcode: stw, operands: ['r0', '0xc(r1)']
Translated stw r0 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[0]); // stw r0, 0xC(r1)']
Processing opcode: addi, operands: ['r3', 'r1', '0xc']
Translated addi r3 r1 0xc to: ['gc_env.r[3] = gc_env.r[1] + 12; // addi r3, r1, 0xc']
Processing opcode: li, operands: ['r4', '0x2']
Translated li r4 0x2 to: ['gc_env.r[4] = 0x2; // li r4, 0x2']
Processing opcode: li, operands: ['r5', '0x1']
Translated li r5 0x1 to: ['gc_env.r[5] = 0x1; // li r5, 0x1']
Translated bl fn_80019920 to: fn_80019920();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r31 r0 5 to: ['gc_env.r[31] = gc_env.r[0] >> 5; // srwi r31, r0, 5']
Translated bl fn_800198F8 to: fn_800198F8();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated mr r3 r30 to: gc_env.r[3] = gc_env.r[30]; // Move register
Processing opcode: li, operands: ['r4', '0x4']
Translated li r4 0x4 to: ['gc_env.r[4] = 0x4; // li r4, 0x4']
Processing opcode: li, operands: ['r5', '0x0']
Translated li r5 0x0 to: ['gc_env.r[5] = 0x0; // li r5, 0x0']
Translated bl fn_80019920 to: fn_80019920();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated bl fn_800198F8 to: fn_800198F8();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated bl fn_800198D8 to: fn_800198D8();
Translated cntlzw r0 r3 to: ['uint32_t val = gc_env.r[3]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r3']
Translated srwi r0 r0 5 to: ['gc_env.r[0] = gc_env.r[0] >> 5; // srwi r0, r0, 5']
Translated or r31 r31 r0 to: ['gc_env.r[31] = gc_env.r[31] | gc_env.r[0]; // or r31, r31, r0']
Translated cntlzw r0 r31 to: ['uint32_t val = gc_env.r[31]; int count = 0; while (val && !(val & 0x80000000)) { val <<= 1; count++; } gc_env.r[0] = count; // cntlzw r0, r31']
Translated srwi r3 r0 5 to: ['gc_env.r[3] = gc_env.r[0] >> 5; // srwi r3, r0, 5']
Processing opcode: lwz, operands: ['r0', '0x1c(r1)']
Translated lwz r0 0x1c(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r0, 0x1C(r1)']
Processing opcode: lwz, operands: ['r31', '0x14(r1)']
Translated lwz r31 0x14(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r31, 0x14(r1)']
Processing opcode: lwz, operands: ['r30', '0x10(r1)']
Translated lwz r30 0x10(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r30, 0x10(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x18']
Translated addi r1 r1 0x18 to: ['gc_env.r[1] += 24; // addi r1, r1, 0x18']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stb, operands: ['r0', 'lbl_8001F084@sda21(r0)']
Translated stb r0 lbl_8001F084@sda21(r0) to: ['gc_mem_write8(gc_env.ram, (uint32_t)&lbl_8001F084, gc_env.r[0]); // stb r0, lbl_8001F084@sda21(r0)']
Processing opcode: lwz, operands: ['r12', 'lbl_8001F070@sda21(r0)']
Translated lwz r12 lbl_8001F070@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F070); // lwz r12, lbl_8001F070@sda21(r0)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8001A074 to: if (gc_env.cr[0] == 0) goto L_8001A074;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Processing opcode: li, operands: ['r0', '0x1000']
Translated li r0 0x1000 to: ['gc_env.r[0] = 0x1000; // li r0, 0x1000']
Translated lis r5 0xcc00 to: ['gc_env.r[5] = -13312 << 16; // lis r5, 0xcc00']
Processing opcode: stw, operands: ['r0', '0x3000(r5)']
Translated stw r0 0x3000(r5) to: ['gc_mem_write32(gc_env.ram, gc_env.r[5] + 0x3000, gc_env.r[0]); // stw r0, 0x3000(r5)']
Processing opcode: lwz, operands: ['r12', 'lbl_8001F074@sda21(r0)']
Translated lwz r12 lbl_8001F074@sda21(r0) to: ['gc_env.r[12] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F074); // lwz r12, lbl_8001F074@sda21(r0)']
Translated cmplwi r12 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[12] == 0x0) ? 0 : ((uint32_t)gc_env.r[12] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8001A0B4 to: if (gc_env.cr[0] == 0) goto L_8001A0B4;
Translated extsh r3 r3 to: ['gc_env.r[3] = (int32_t)(int16_t)(gc_env.r[3] & 0xFFFF); // extsh r3, r3']
Translated mtlr r12 to: gc_env.lr = gc_env.r[12]; // Move to link register
Translated blrl  to: // Call function at gc_env.lr; // Branch to link register
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: stw, operands: ['r29', '0x14(r1)']
Translated stw r29 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stw r29, 0x14(r1)']
Translated mr r29 r3 to: gc_env.r[29] = gc_env.r[3]; // Move register
Translated mr r30 r4 to: gc_env.r[30] = gc_env.r[4]; // Move register
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: li, operands: ['r0', 'lbl_8001F084@sda21']
Error in handler for li: 'NoneType' object has no attribute 'sanitize_symbol_name'
Processing opcode: stw, operands: ['r0', 'lbl_8001F080@sda21(r0)']
Translated stw r0 lbl_8001F080@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F080, gc_env.r[0]); // stw r0, lbl_8001F080@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F080@sda21(r0)']
Translated lwz r0 lbl_8001F080@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F080); // lwz r0, lbl_8001F080@sda21(r0)']
Processing opcode: stw, operands: ['r0', '0x0(r29)']
Translated stw r0 0x0(r29) to: ['gc_mem_write32(gc_env.ram, gc_env.r[29], gc_env.r[0]); // stw r0, (r29)']
Processing opcode: stw, operands: ['r30', 'lbl_8001F070@sda21(r0)']
Translated stw r30 lbl_8001F070@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F070, gc_env.r[30]); // stw r30, lbl_8001F070@sda21(r0)']
Translated bl fn_80019870 to: fn_80019870();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: lwz, operands: ['r29', '0x14(r1)']
Translated lwz r29 0x14(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r29, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x8(r1)']
Translated stwu r1 -0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x8, gc_env.r[1]); // stwu r1, -0x8(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x8;']
Translated lis r3 0x2 to: ['gc_env.r[3] = 2 << 16; // lis r3, 0x2']
Processing opcode: addi, operands: ['r3', 'r3', '-0x8000']
Translated addi r3 r3 -0x8000 to: ['gc_env.r[3] -= 32768; // addi r3, r3, -0x8000']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Processing opcode: li, operands: ['r3', '0x40']
Translated li r3 0x40 to: ['gc_env.r[3] = 0x40; // li r3, 0x40']
Translated bl __OSMaskInterrupts to: __OSMaskInterrupts();
Translated lis r3 fn_8001A048@ha to: ['gc_env.r[3] = ((uint32_t)&fn_8001A048 >> 16) & 0xFFFF; // lis r3, fn_8001A048@ha']
Processing opcode: addi, operands: ['r0', 'r3', 'fn_8001A048@l']
Translated addi r0 r3 fn_8001A048@l to: ['gc_env.r[0] = (uint32_t)&fn_8001A048; // lis + addi fn_8001A048 (completing pattern)']
Processing opcode: stw, operands: ['r0', 'lbl_8001F074@sda21(r0)']
Translated stw r0 lbl_8001F074@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F074, gc_env.r[0]); // stw r0, lbl_8001F074@sda21(r0)']
Processing opcode: li, operands: ['r3', '0x19']
Translated li r3 0x19 to: ['gc_env.r[3] = 0x19; // li r3, 0x19']
Translated lis r4 fn_8001A084@ha to: ['gc_env.r[4] = ((uint32_t)&fn_8001A084 >> 16) & 0xFFFF; // lis r4, fn_8001A084@ha']
Processing opcode: addi, operands: ['r4', 'r4', 'fn_8001A084@l']
Translated addi r4 r4 fn_8001A084@l to: ['gc_env.r[4] = (uint32_t)&fn_8001A084; // lis + addi fn_8001A084 (completing pattern)']
Translated bl __OSSetInterruptHandler to: __OSSetInterruptHandler();
Processing opcode: li, operands: ['r3', '0x40']
Translated li r3 0x40 to: ['gc_env.r[3] = 0x40; // li r3, 0x40']
Translated bl __OSUnmaskInterrupts to: __OSUnmaskInterrupts();
Processing opcode: lwz, operands: ['r0', '0xc(r1)']
Translated lwz r0 0xc(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r0, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x8']
Translated addi r1 r1 0x8 to: ['gc_env.r[1] += 8; // addi r1, r1, 0x8']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Translated bl fn_80019F8C to: fn_80019F8C();
Processing opcode: lwz, operands: ['r0', '0x8(r1)']
Translated lwz r0 0x8(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r0, 0x8(r1)']
Translated clrlwi r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8001A1DC to: if (gc_env.cr[0] == 0) goto L_8001A1DC;
Processing opcode: addi, operands: ['r3', 'r1', '0x8']
Translated addi r3 r1 0x8 to: ['gc_env.r[3] = gc_env.r[1] + 8; // addi r3, r1, 0x8']
Translated bl fn_80019CD0 to: fn_80019CD0();
Processing opcode: lwz, operands: ['r0', '0x8(r1)']
Translated lwz r0 0x8(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r0, 0x8(r1)']
Translated clrlwi r0 r0 3 to: ['gc_env.r[0] = gc_env.r[0] & 0x1FFFFFFF; // clrlwi r0, r0, 3']
Processing opcode: stw, operands: ['r0', '0x8(r1)']
Translated stw r0 0x8(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x8, gc_env.r[0]); // stw r0, 0x8(r1)']
Processing opcode: lwz, operands: ['r4', '0x8(r1)']
Translated lwz r4 0x8(r1) to: ['gc_env.r[4] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x8); // lwz r4, 0x8(r1)']
Translated rlwinm r3 r4 0 3 7 to: ['gc_env.r[3] = (gc_env.r[4] << 0) & 0x1F000000; // rlwinm r3, r4, 0, 3, 7']
Processing opcode: subis, operands: ['r0', 'r3', '0x1f00']
Translated subis r0 r3 0x1f00 to: ['gc_env.r[0] = gc_env.r[3] - (7936 << 16); // subis r0, r3, 7936']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8001A1DC to: if (gc_env.cr[0] != 0) goto L_8001A1DC;
Processing opcode: stw, operands: ['r4', 'lbl_8001F078@sda21(r0)']
Translated stw r4 lbl_8001F078@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F078, gc_env.r[4]); // stw r4, lbl_8001F078@sda21(r0)']
Translated clrlwi r0 r4 17 to: ['gc_env.r[0] = gc_env.r[4] & 0x7FFF; // clrlwi r0, r4, 17']
Processing opcode: stw, operands: ['r0', 'lbl_8001F07C@sda21(r0)']
Translated stw r0 lbl_8001F07C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F07C, gc_env.r[0]); // stw r0, lbl_8001F07C@sda21(r0)']
Processing opcode: li, operands: ['r0', '0x1']
Translated li r0 0x1 to: ['gc_env.r[0] = 0x1; // li r0, 0x1']
Processing opcode: stb, operands: ['r0', 'lbl_8001F084@sda21(r0)']
Translated stb r0 lbl_8001F084@sda21(r0) to: ['gc_mem_write8(gc_env.ram, (uint32_t)&lbl_8001F084, gc_env.r[0]); // stb r0, lbl_8001F084@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x10(r1)']
Translated stwu r1 -0x10(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x10, gc_env.r[1]); // stwu r1, -0x10(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x10;']
Processing opcode: stw, operands: ['r31', '0xc(r1)']
Translated stw r31 0xc(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0xC, gc_env.r[31]); // stw r31, 0xC(r1)']
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stb, operands: ['r0', 'lbl_8001F084@sda21(r0)']
Translated stb r0 lbl_8001F084@sda21(r0) to: ['gc_mem_write8(gc_env.ram, (uint32_t)&lbl_8001F084, gc_env.r[0]); // stb r0, lbl_8001F084@sda21(r0)']
Processing opcode: lwz, operands: ['r0', 'lbl_8001F07C@sda21(r0)']
Translated lwz r0 lbl_8001F07C@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F07C); // lwz r0, lbl_8001F07C@sda21(r0)']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated bne .L_8001A21C to: if (gc_env.cr[0] != 0) goto L_8001A21C;
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated bl fn_8001A17C to: fn_8001A17C();
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: lwz, operands: ['r3', 'lbl_8001F07C@sda21(r0)']
Translated lwz r3 lbl_8001F07C@sda21(r0) to: ['gc_env.r[3] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F07C); // lwz r3, lbl_8001F07C@sda21(r0)']
Processing opcode: lwz, operands: ['r0', '0x14(r1)']
Translated lwz r0 0x14(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r0, 0x14(r1)']
Processing opcode: lwz, operands: ['r31', '0xc(r1)']
Translated lwz r31 0xc(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0xC); // lwz r31, 0xC(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x10']
Translated addi r1 r1 0x10 to: ['gc_env.r[1] += 16; // addi r1, r1, 0x10']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x20(r1)']
Translated stwu r1 -0x20(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x20, gc_env.r[1]); // stwu r1, -0x20(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x20;']
Processing opcode: stw, operands: ['r31', '0x1c(r1)']
Translated stw r31 0x1c(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x1C, gc_env.r[31]); // stw r31, 0x1C(r1)']
Processing opcode: stw, operands: ['r30', '0x18(r1)']
Translated stw r30 0x18(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x18, gc_env.r[30]); // stw r30, 0x18(r1)']
Processing opcode: stw, operands: ['r29', '0x14(r1)']
Translated stw r29 0x14(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x14, gc_env.r[29]); // stw r29, 0x14(r1)']
Translated mr r29 r3 to: gc_env.r[29] = gc_env.r[3]; // Move register
Translated mr r30 r4 to: gc_env.r[30] = gc_env.r[4]; // Move register
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Processing opcode: lwz, operands: ['r0', 'lbl_8001F078@sda21(r0)']
Translated lwz r0 lbl_8001F078@sda21(r0) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, (uint32_t)&lbl_8001F078); // lwz r0, lbl_8001F078@sda21(r0)']
Translated rlwinm r0 r0 0 15 15 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x10000; // rlwinm r0, r0, 0, 15, 15']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated beq .L_8001A27C to: if (gc_env.cr[0] == 0) goto L_8001A27C;
Processing opcode: li, operands: ['r3', '0x1000']
Translated li r3 0x1000 to: ['gc_env.r[3] = 0x1000; // li r3, 0x1000']
Translated b .L_8001A280 to: goto L_8001A280;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: addis, operands: ['r3', 'r3', '0x2']
Translated addis r3 r3 0x2 to: ['gc_env.r[3] = gc_env.r[3] + (2 << 16); // addis r3, r3, 2']
Processing opcode: subi, operands: ['r3', 'r3', '0x2000']
Translated subi r3 r3 0x2000 to: ['gc_env.r[3] = gc_env.r[3] - 8192; // subi r3, r3, 8192']
Translated mr r4 r29 to: gc_env.r[4] = gc_env.r[29]; // Move register
Processing opcode: addi, operands: ['r0', 'r30', '0x3']
Translated addi r0 r30 0x3 to: ['gc_env.r[0] = gc_env.r[30] + 3; // addi r0, r30, 0x3']
Translated clrrwi r5 r0 2 to: gc_env.r[5] = gc_env.r[0] & ~((1ULL << 2) - 1); // Clear rightmost 2 bits
Translated bl fn_80019D8C to: fn_80019D8C();
Processing opcode: li, operands: ['r0', '0x0']
Translated li r0 0x0 to: ['gc_env.r[0] = 0x0; // li r0, 0x0']
Processing opcode: stw, operands: ['r0', 'lbl_8001F07C@sda21(r0)']
Translated stw r0 lbl_8001F07C@sda21(r0) to: ['gc_mem_write32(gc_env.ram, (uint32_t)&lbl_8001F07C, gc_env.r[0]); // stw r0, lbl_8001F07C@sda21(r0)']
Processing opcode: stb, operands: ['r0', 'lbl_8001F084@sda21(r0)']
Translated stb r0 lbl_8001F084@sda21(r0) to: ['gc_mem_write8(gc_env.ram, (uint32_t)&lbl_8001F084, gc_env.r[0]); // stb r0, lbl_8001F084@sda21(r0)']
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r0', '0x24(r1)']
Translated lwz r0 0x24(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x24); // lwz r0, 0x24(r1)']
Processing opcode: lwz, operands: ['r31', '0x1c(r1)']
Translated lwz r31 0x1c(r1) to: ['gc_env.r[31] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x1C); // lwz r31, 0x1C(r1)']
Processing opcode: lwz, operands: ['r30', '0x18(r1)']
Translated lwz r30 0x18(r1) to: ['gc_env.r[30] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x18); // lwz r30, 0x18(r1)']
Processing opcode: lwz, operands: ['r29', '0x14(r1)']
Translated lwz r29 0x14(r1) to: ['gc_env.r[29] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x14); // lwz r29, 0x14(r1)']
Processing opcode: addi, operands: ['r1', 'r1', '0x20']
Translated addi r1 r1 0x20 to: ['gc_env.r[1] += 32; // addi r1, r1, 0x20']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated mflr r0 to: gc_env.r[0] = gc_env.lr; // Move from link register
Processing opcode: stw, operands: ['r0', '0x4(r1)']
Translated stw r0 0x4(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + 0x4, gc_env.r[0]); // stw r0, 0x4(r1)']
Processing opcode: stwu, operands: ['r1', '-0x30(r1)']
Translated stwu r1 -0x30(r1) to: ['gc_mem_write32(gc_env.ram, gc_env.r[1] + -0x30, gc_env.r[1]); // stwu r1, -0x30(r1)', 'gc_env.r[1] = gc_env.r[1] + -0x30;']
Processing opcode: addi, operands: ['r11', 'r1', '0x30']
Translated addi r11 r1 0x30 to: ['gc_env.r[11] = gc_env.r[1] + 48; // addi r11, r1, 0x30']
Translated bl _savegpr_27 to: _savegpr_27();
Translated mr r27 r3 to: gc_env.r[27] = gc_env.r[3]; // Move register
Translated mr r30 r4 to: gc_env.r[30] = gc_env.r[4]; // Move register
Translated bl OSDisableInterrupts to: OSDisableInterrupts();
Translated mr r31 r3 to: gc_env.r[31] = gc_env.r[3]; // Move register
Translated b .L_8001A2F4 to: goto L_8001A2F4;
Translated b .L_8001A2F8 to: goto L_8001A2F8;
Processing opcode: addi, operands: ['r3', 'r1', '0x10']
Translated addi r3 r1 0x10 to: ['gc_env.r[3] = gc_env.r[1] + 16; // addi r3, r1, 0x10']
Translated bl fn_80019F8C to: fn_80019F8C();
Processing opcode: lwz, operands: ['r0', '0x10(r1)']
Translated lwz r0 0x10(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r0, 0x10(r1)']
Translated rlwinm r0 r0 0 30 30 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x2; // rlwinm r0, r0, 0, 30, 30']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8001A2F8 to: if (gc_env.cr[0] != 0) goto L_8001A2F8;
Processing opcode: lbz, operands: ['r3', 'lbl_8001EE58@sda21(r0)']
Translated lbz r3 lbl_8001EE58@sda21(r0) to: ['gc_env.r[3] = gc_mem_read8(gc_env.ram, (uint32_t)&lbl_8001EE58); // lbz r3, lbl_8001EE58@sda21(r0)']
Processing opcode: addi, operands: ['r0', 'r3', '0x1']
Translated addi r0 r3 0x1 to: ['gc_env.r[0] = gc_env.r[3] + 1; // addi r0, r3, 0x1']
Processing opcode: stb, operands: ['r0', 'lbl_8001EE58@sda21(r0)']
Translated stb r0 lbl_8001EE58@sda21(r0) to: ['gc_mem_write8(gc_env.ram, (uint32_t)&lbl_8001EE58, gc_env.r[0]); // stb r0, lbl_8001EE58@sda21(r0)']
Processing opcode: lbz, operands: ['r0', 'lbl_8001EE58@sda21(r0)']
Translated lbz r0 lbl_8001EE58@sda21(r0) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, (uint32_t)&lbl_8001EE58); // lbz r0, lbl_8001EE58@sda21(r0)']
Translated clrlwi r0 r0 31 to: ['gc_env.r[0] = gc_env.r[0] & 0x1; // clrlwi r0, r0, 31']
Translated cmpwi r0 0x0 to: gc_env.cr[0] = (gc_env.r[0] == 0x0) ? 0 : (gc_env.r[0] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8001A334 to: if (gc_env.cr[0] == 0) goto L_8001A334;
Processing opcode: li, operands: ['r3', '0x1000']
Translated li r3 0x1000 to: ['gc_env.r[3] = 0x1000; // li r3, 0x1000']
Translated b .L_8001A338 to: goto L_8001A338;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: addi, operands: ['r0', 'r30', '0x3']
Translated addi r0 r30 0x3 to: ['gc_env.r[0] = gc_env.r[30] + 3; // addi r0, r30, 0x3']
Translated clrrwi r29 r0 2 to: gc_env.r[29] = gc_env.r[0] & ~((1ULL << 2) - 1); // Clear rightmost 2 bits
Translated oris r28 r3 0x1 to: ['gc_env.r[28] = gc_env.r[3] | 0x10000; // oris r28, r3, 0x1']
Translated ori r28 r28 0xc000 to: ['gc_env.r[28] |= 49152; // ori r28, r28, 0xc000']
Translated b .L_8001A34C to: goto L_8001A34C;
Translated b .L_8001A350 to: goto L_8001A350;
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Translated mr r4 r27 to: gc_env.r[4] = gc_env.r[27]; // Move register
Translated mr r5 r29 to: gc_env.r[5] = gc_env.r[29]; // Move register
Translated bl fn_80019E8C to: fn_80019E8C();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8001A350 to: if (gc_env.cr[0] == 0) goto L_8001A350;
Translated b .L_8001A36C to: goto L_8001A36C;
Translated b .L_8001A370 to: goto L_8001A370;
Processing opcode: addi, operands: ['r3', 'r1', '0x10']
Translated addi r3 r1 0x10 to: ['gc_env.r[3] = gc_env.r[1] + 16; // addi r3, r1, 0x10']
Translated bl fn_80019F8C to: fn_80019F8C();
Processing opcode: lwz, operands: ['r0', '0x10(r1)']
Translated lwz r0 0x10(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r0, 0x10(r1)']
Translated rlwinm r0 r0 0 30 30 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x2; // rlwinm r0, r0, 0, 30, 30']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8001A370 to: if (gc_env.cr[0] != 0) goto L_8001A370;
Processing opcode: lbz, operands: ['r0', 'lbl_8001EE58@sda21(r0)']
Translated lbz r0 lbl_8001EE58@sda21(r0) to: ['gc_env.r[0] = gc_mem_read8(gc_env.ram, (uint32_t)&lbl_8001EE58); // lbz r0, lbl_8001EE58@sda21(r0)']
Translated slwi r0 r0 16 to: ['gc_env.r[0] = gc_env.r[0] << 16; // slwi r0, r0, 16']
Translated oris r0 r0 0x1f00 to: ['gc_env.r[0] = gc_env.r[0] | 0x1F000000; // oris r0, r0, 0x1F00']
Translated or r28 r0 r30 to: ['gc_env.r[28] = gc_env.r[0] | gc_env.r[30]; // or r28, r0, r30']
Translated b .L_8001A39C to: goto L_8001A39C;
Translated b .L_8001A3A0 to: goto L_8001A3A0;
Translated mr r3 r28 to: gc_env.r[3] = gc_env.r[28]; // Move register
Translated bl fn_80019C44 to: fn_80019C44();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8001A3A0 to: if (gc_env.cr[0] == 0) goto L_8001A3A0;
Translated b .L_8001A3B4 to: goto L_8001A3B4;
Translated b .L_8001A3B8 to: goto L_8001A3B8;
Processing opcode: addi, operands: ['r3', 'r1', '0x10']
Translated addi r3 r1 0x10 to: ['gc_env.r[3] = gc_env.r[1] + 16; // addi r3, r1, 0x10']
Translated bl fn_80019F8C to: fn_80019F8C();
Translated cmpwi r3 0x0 to: gc_env.cr[0] = (gc_env.r[3] == 0x0) ? 0 : (gc_env.r[3] < 0x0 ? -1 : 1); // Compare with immediate
Translated beq .L_8001A3B8 to: if (gc_env.cr[0] == 0) goto L_8001A3B8;
Processing opcode: lwz, operands: ['r0', '0x10(r1)']
Translated lwz r0 0x10(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x10); // lwz r0, 0x10(r1)']
Translated rlwinm r0 r0 0 30 30 to: ['gc_env.r[0] = (gc_env.r[0] << 0) & 0x2; // rlwinm r0, r0, 0, 30, 30']
Translated cmplwi r0 0x0 to: gc_env.cr[0] = ((uint32_t)gc_env.r[0] == 0x0) ? 0 : ((uint32_t)gc_env.r[0] < 0x0 ? -1 : 1); // Logical compare with immediate
Translated bne .L_8001A3B8 to: if (gc_env.cr[0] != 0) goto L_8001A3B8;
Translated mr r3 r31 to: gc_env.r[3] = gc_env.r[31]; // Move register
Translated bl OSRestoreInterrupts to: OSRestoreInterrupts();
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Processing opcode: lwz, operands: ['r0', '0x34(r1)']
Translated lwz r0 0x34(r1) to: ['gc_env.r[0] = gc_mem_read32(gc_env.ram, gc_env.r[1] + 0x34); // lwz r0, 0x34(r1)']
Processing opcode: addi, operands: ['r11', 'r1', '0x30']
Translated addi r11 r1 0x30 to: ['gc_env.r[11] = gc_env.r[1] + 48; // addi r11, r1, 0x30']
Translated bl _restgpr_27 to: _restgpr_27();
Processing opcode: addi, operands: ['r1', 'r1', '0x30']
Translated addi r1 r1 0x30 to: ['gc_env.r[1] += 48; // addi r1, r1, 0x30']
Translated mtlr r0 to: gc_env.lr = gc_env.r[0]; // Move to link register
Translated blr  to: return;
Translated blr  to: return;
Translated blr  to: return;
Processing opcode: li, operands: ['r3', '0x0']
Translated li r3 0x0 to: ['gc_env.r[3] = 0x0; // li r3, 0x0']
Translated blr  to: return;
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_01_80005500_text.c
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_01_80005500_text.h
Transpiling D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_04_8001A460_rodata.s
Found obj section: lbl_8001A460 at 0x8001A460
Extracted gap section: lbl_8001A460, 3 lines
Found obj section: lbl_8001A478 at 0x8001A478
Extracted gap section: lbl_8001A478, 9 lines
Found obj section: lbl_8001A4C0 at 0x8001A4C0
Extracted gap section: lbl_8001A4C0, 16 lines
Found obj section: lbl_8001A500 at 0x8001A500
Extracted gap section: lbl_8001A500, 64 lines
Found obj section: _stringBase0_8001A600 at 0x8001A600
Extracted gap section: _stringBase0_8001A600, 4 lines
Found obj section: gap_04_8001A60E_rodata at 0x8001A60E
Extracted gap section: gap_04_8001A60E_rodata, 2 lines
Found obj section: _40_8001A610 at 0x8001A610
Extracted gap section: _40_8001A610, 1 lines
Found obj section: gap_04_8001A62A_rodata at 0x8001A62A
Extracted gap section: gap_04_8001A62A_rodata, 3 lines
Found obj section: lbl_8001A630 at 0x8001A630
Extracted gap section: lbl_8001A630, 4 lines
Found obj section: lbl_8001A640 at 0x8001A640
Extracted gap section: lbl_8001A640, 5 lines
Found obj section: lbl_8001A654 at 0x8001A654
Extracted gap section: lbl_8001A654, 5 lines
Found obj section: lbl_8001A668 at 0x8001A668
Extracted gap section: lbl_8001A668, 5 lines
Parsed gap data: .double 0 -> 0x00000000 0x00000000
Parsed gap data: .double 4294967296 -> 0x41F00000 0x00000000
Parsed gap data: .double 2147483648 -> 0x41E00000 0x00000000
Parsed gap data: .double 10 -> 0x40240000 0x00000000
Parsed gap data: .double 100 -> 0x40590000 0x00000000
Parsed gap data: .double 10000 -> 0x40C38800 0x00000000
Parsed gap data: .double 100000000 -> 0x4197D784 0x00000000
Parsed gap data: .double 10000000000000000 -> 0x4341C379 0x37E08000
Parsed gap data: .double 100000000000000000000000000000000 -> 0x4693B8B5 0xB5056E17
Parsed gap data: .double 10000000000000000000000000000000000000000000000000000000000000000 -> 0x4D384F03 0xE93FF9F5
Parsed gap data: .double 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 -> 0x5A827748 0xF9301D32
Parsed gap data: .double 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 -> 0x75154FDD 0x7F73BF3C
Parsed gap data: 0x40240000
Parsed gap data: 0x00000000
Parsed gap data: 0x40590000
Parsed gap data: 0x00000000
Parsed gap data: 0x408F4000
Parsed gap data: 0x00000000
Parsed gap data: 0x40C38800
Parsed gap data: 0x00000000
Parsed gap data: 0x40F86A00
Parsed gap data: 0x00000000
Parsed gap data: 0x412E8480
Parsed gap data: 0x00000000
Parsed gap data: 0x416312D0
Parsed gap data: 0x00000000
Parsed gap data: 0x4197D784
Parsed gap data: 0x00000000
Parsed gap data: 0x01010101
Parsed gap data: 0x01010101
Parsed gap data: 0x01020202
Parsed gap data: 0x02020101
Parsed gap data: 0x01010101
Parsed gap data: 0x01010101
Parsed gap data: 0x01010101
Parsed gap data: 0x01010101
Parsed gap data: 0x04080808
Parsed gap data: 0x08080808
Parsed gap data: 0x08080808
Parsed gap data: 0x08080808
Parsed gap data: 0x30303030
Parsed gap data: 0x30303030
Parsed gap data: 0x30300808
Parsed gap data: 0x08080808
Parsed gap data: 0x08A0A0A0
Parsed gap data: 0xA0A0A080
Parsed gap data: 0x80808080
Parsed gap data: 0x80808080
Parsed gap data: 0x80808080
Parsed gap data: 0x80808080
Parsed gap data: 0x80808008
Parsed gap data: 0x08080808
Parsed gap data: 0x08606060
Parsed gap data: 0x60606040
Parsed gap data: 0x40404040
Parsed gap data: 0x40404040
Parsed gap data: 0x40404040
Parsed gap data: 0x40404040
Parsed gap data: 0x40404008
Parsed gap data: 0x08080801
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: .string ""
Parsed gap data: .string "-Inf"
Parsed gap data: .string "Inf"
Parsed gap data: .string "NaN"
Parsed gap data: .2byte 0x0000
Parsed gap data: .string "MetroTRK for Dolphin v0.8"
Parsed gap data: 0x00000000
Parsed gap data: .2byte 0x0000
Parsed gap data: 0x00000000
Parsed gap data: 0xFFFFFFFF
Parsed gap data: 0x00000001
Parsed gap data: 0x00000001
Parsed gap data: 0x60000000
Parsed gap data: 0x60000000
Parsed gap data: 0x60000000
Parsed gap data: 0x60000000
Parsed gap data: 0x60000000
Parsed gap data: 0x60000000
Parsed gap data: 0x60000000
Parsed gap data: 0x60000000
Parsed gap data: 0x60000000
Parsed gap data: 0x60000000
Parsed gap data: 0x60000000
Parsed gap data: 0x60000000
Parsed gap data: 0x60000000
Parsed gap data: 0x60000000
Parsed gap data: 0x60000000
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_04_8001A460_rodata.c
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_04_8001A460_rodata.h
Transpiling D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_05_8001A680_data.s
Found obj section: lbl_8001A680 at 0x8001A680
Extracted gap section: lbl_8001A680, 24 lines
Found obj section: _73_8001A6E0 at 0x8001A6E0
Extracted gap section: _73_8001A6E0, 1 lines
Found obj section: gap_05_8001A6FE_data at 0x8001A6FE
Extracted gap section: gap_05_8001A6FE_data, 106 lines
Found obj section: DSPInitCode_8001A8A0 at 0x8001A8A0
Extracted gap section: DSPInitCode_8001A8A0, 32 lines
Found obj section: _69_8001A920 at 0x8001A920
Extracted gap section: _69_8001A920, 1 lines
Found obj section: gap_05_8001A949_data at 0x8001A949
Extracted gap section: gap_05_8001A949_data, 131 lines
Found obj section: lbl_8001AB50 at 0x8001AB50
Extracted gap section: lbl_8001AB50, 109 lines
Found obj section: _74_8001AD04 at 0x8001AD04
Extracted gap section: _74_8001AD04, 1 lines
Found obj section: gap_05_8001AD27_data at 0x8001AD27
Extracted gap section: gap_05_8001AD27_data, 2 lines
Found obj section: _10_8001AD28 at 0x8001AD28
Extracted gap section: _10_8001AD28, 1 lines
Found obj section: gap_05_8001AD3E_data at 0x8001AD3E
Extracted gap section: gap_05_8001AD3E_data, 179 lines
Found obj section: _43_8001B004 at 0x8001B004
Extracted gap section: _43_8001B004, 16 lines
Found obj section: gap_05_8001B044_data at 0x8001B044
Extracted gap section: gap_05_8001B044_data, 2 lines
Found obj section: lbl_8001B048 at 0x8001B048
Extracted gap section: lbl_8001B048, 12 lines
Found obj section: ResetFunctionInfo_8001B078 at 0x8001B078
Extracted gap section: ResetFunctionInfo_8001B078, 4 lines
Found obj section: Si_8001B088 at 0x8001B088
Extracted gap section: Si_8001B088, 5 lines
Found obj section: Type_8001B09C at 0x8001B09C
Extracted gap section: Type_8001B09C, 4 lines
Found obj section: gap_05_8001B0AC_data at 0x8001B0AC
Extracted gap section: gap_05_8001B0AC_data, 44 lines
Found obj section: XYNTSC_8001B158 at 0x8001B158
Extracted gap section: XYNTSC_8001B158, 12 lines
Found obj section: gap_05_8001B188_data at 0x8001B188
Extracted gap section: gap_05_8001B188_data, 27 lines
Found obj section: lbl_8001B1F0 at 0x8001B1F0
Extracted gap section: lbl_8001B1F0, 1 lines
Found obj section: lbl_8001B208 at 0x8001B208
Extracted gap section: lbl_8001B208, 19 lines
Found obj section: jumptable_8001B254 at 0x8001B254
Extracted gap section: jumptable_8001B254, 8 lines
Found obj section: jumptable_8001B274 at 0x8001B274
Extracted gap section: jumptable_8001B274, 16 lines
Found obj section: jumptable_8001B2B4 at 0x8001B2B4
Extracted gap section: jumptable_8001B2B4, 13 lines
Found obj section: jumptable_8001B2E8 at 0x8001B2E8
Extracted gap section: jumptable_8001B2E8, 13 lines
Found obj section: gap_05_8001B31C_data at 0x8001B31C
Extracted gap section: gap_05_8001B31C_data, 2 lines
Found obj section: lbl_8001B320 at 0x8001B320
Extracted gap section: lbl_8001B320, 18 lines
Found obj section: lbl_8001B368 at 0x8001B368
Extracted gap section: lbl_8001B368, 28 lines
Found obj section: lbl_8001B3D8 at 0x8001B3D8
Extracted gap section: lbl_8001B3D8, 89 lines
Found obj section: jumptable_8001B53C at 0x8001B53C
Extracted gap section: jumptable_8001B53C, 22 lines
Found obj section: gap_05_8001B594_data at 0x8001B594
Extracted gap section: gap_05_8001B594_data, 68 lines
Found obj section: lbl_8001B6A0 at 0x8001B6A0
Extracted gap section: lbl_8001B6A0, 16 lines
Found obj section: __files at 0x8001B6E0
Extracted gap section: __files, 57 lines
Found obj section: _1009_8001B7B8 at 0x8001B7B8
Extracted gap section: _1009_8001B7B8, 33 lines
Found obj section: jumptable_8001B83C at 0x8001B83C
Extracted gap section: jumptable_8001B83C, 33 lines
Found obj section: jumptable_8001B8C0 at 0x8001B8C0
Extracted gap section: jumptable_8001B8C0, 52 lines
Found obj section: jumptable_8001B990 at 0x8001B990
Extracted gap section: jumptable_8001B990, 17 lines
Found obj section: gap_05_8001B9D4_data at 0x8001B9D4
Extracted gap section: gap_05_8001B9D4_data, 2 lines
Found obj section: lbl_8001B9D8 at 0x8001B9D8
Extracted gap section: lbl_8001B9D8, 34 lines
Found obj section: jumptable_8001BA60 at 0x8001BA60
Extracted gap section: jumptable_8001BA60, 7 lines
Found obj section: jumptable_8001BA7C at 0x8001BA7C
Extracted gap section: jumptable_8001BA7C, 7 lines
Found obj section: lbl_8001BA98 at 0x8001BA98
Extracted gap section: lbl_8001BA98, 2 lines
Found obj section: gTRKExceptionStatus_8001BAA4 at 0x8001BAA4
Extracted gap section: gTRKExceptionStatus_8001BAA4, 4 lines
Found obj section: lbl_8001BAB4 at 0x8001BAB4
Extracted gap section: lbl_8001BAB4, 5 lines
Found obj section: lbl_8001BAC8 at 0x8001BAC8
Extracted gap section: lbl_8001BAC8, 16 lines
Found obj section: gDBCommTable at 0x8001BB08
Extracted gap section: gDBCommTable, 7 lines
Found obj section: gap_05_8001BB24_data at 0x8001BB24
Extracted gap section: gap_05_8001BB24_data, 2 lines
Found obj section: lbl_8001BB28 at 0x8001BB28
Extracted gap section: lbl_8001BB28, 1 lines
Parsed gap data: 0x000000B4
Parsed gap data: 0x00000080
Parsed gap data: 0x00000080
Parsed gap data: 0x000000A2
Parsed gap data: 0x0000002C
Parsed gap data: 0x0000008E
Parsed gap data: 0x00000083
Parsed gap data: 0x0000009C
Parsed gap data: 0x0000002C
Parsed gap data: 0x00000070
Parsed gap data: 0x00000048
Parsed gap data: 0x0000003A
Parsed gap data: 0x00000054
Parsed gap data: 0x000000B8
Parsed gap data: 0x000000C6
Parsed gap data: 0x00000041
Parsed gap data: 0x00000064
Parsed gap data: 0x000000D4
Parsed gap data: 0x00000023
Parsed gap data: 0x000000D4
Parsed gap data: 0x00000072
Parsed gap data: 0x00000010
Parsed gap data: 0x00000080
Parsed gap data: 0x00000080
Parsed gap data: .string "\nDolphin OS $Revision: 49 $.\n"
Parsed gap data: 0x00004B65
Parsed gap data: 0x726E656C
Parsed gap data: 0x20627569
Parsed gap data: 0x6C74203A
Parsed gap data: 0x20257320
Parsed gap data: 0x25730A00
Parsed gap data: 0x00004465
Parsed gap data: 0x63203137
Parsed gap data: 0x20323030
Parsed gap data: 0x31003138
Parsed gap data: 0x3A34363A
Parsed gap data: 0x34350000
Parsed gap data: 0x0000436F
Parsed gap data: 0x6E736F6C
Parsed gap data: 0x65205479
Parsed gap data: 0x7065203A
Parsed gap data: 0x20005265
Parsed gap data: 0x7461696C
Parsed gap data: 0x2025640A
Parsed gap data: 0x00004D61
Parsed gap data: 0x6320456D
Parsed gap data: 0x756C6174
Parsed gap data: 0x6F720A00
Parsed gap data: 0x00005043
Parsed gap data: 0x20456D75
Parsed gap data: 0x6C61746F
Parsed gap data: 0x720A0000
Parsed gap data: 0x00004550
Parsed gap data: 0x50432041
Parsed gap data: 0x72746875
Parsed gap data: 0x720A0000
Parsed gap data: 0x00004550
Parsed gap data: 0x5043204D
Parsed gap data: 0x696E6E6F
Parsed gap data: 0x770A0000
Parsed gap data: 0x00004465
Parsed gap data: 0x76656C6F
Parsed gap data: 0x706D656E
Parsed gap data: 0x74204857
Parsed gap data: 0x25640A00
Parsed gap data: 0x00004D65
Parsed gap data: 0x6D6F7279
Parsed gap data: 0x20256420
Parsed gap data: 0x4D420A00
Parsed gap data: 0x00004172
Parsed gap data: 0x656E6120
Parsed gap data: 0x3A203078
Parsed gap data: 0x2578202D
Parsed gap data: 0x20307825
Parsed gap data: 0x780A0000
Parsed gap data: 0x00000000
Parsed gap data: 0x01000000
Parsed gap data: 0x02000000
Parsed gap data: 0x03000000
Parsed gap data: 0x04000000
Parsed gap data: 0x05000000
Parsed gap data: 0x06000000
Parsed gap data: 0x07000000
Parsed gap data: 0x08000000
Parsed gap data: 0x09000000
Parsed gap data: 0x0C000000
Parsed gap data: 0x0D000000
Parsed gap data: 0x0F000000
Parsed gap data: 0x13000000
Parsed gap data: 0x14000000
Parsed gap data: 0x1700496E
Parsed gap data: 0x7374616C
Parsed gap data: 0x6C696E67
Parsed gap data: 0x204F5344
Parsed gap data: 0x42496E74
Parsed gap data: 0x65677261
Parsed gap data: 0x746F720A
Parsed gap data: 0x00003E3E
Parsed gap data: 0x3E204F53
Parsed gap data: 0x494E4954
Parsed gap data: 0x3A206578
Parsed gap data: 0x63657074
Parsed gap data: 0x696F6E20
Parsed gap data: 0x25642063
Parsed gap data: 0x6F6D6D61
Parsed gap data: 0x6E646565
Parsed gap data: 0x72656420
Parsed gap data: 0x62792054
Parsed gap data: 0x524B0A00
Parsed gap data: 0x00003E3E
Parsed gap data: 0x3E204F53
Parsed gap data: 0x494E4954
Parsed gap data: 0x3A206578
Parsed gap data: 0x63657074
Parsed gap data: 0x696F6E20
Parsed gap data: 0x25642076
Parsed gap data: 0x6563746F
Parsed gap data: 0x72656420
Parsed gap data: 0x746F2064
Parsed gap data: 0x65627567
Parsed gap data: 0x6765720A
Parsed gap data: 0x00004578
Parsed gap data: 0x63657074
Parsed gap data: 0x696F6E73
Parsed gap data: 0x20696E69
Parsed gap data: 0x7469616C
Parsed gap data: 0x697A6564
Parsed gap data: 0x2E2E2E0A
Parsed gap data: 0x00000000
Parsed gap data: .2byte 0x0000
Parsed gap data: 0x029F0010
Parsed gap data: 0x029F0033
Parsed gap data: 0x029F0034
Parsed gap data: 0x029F0035
Parsed gap data: 0x029F0036
Parsed gap data: 0x029F0037
Parsed gap data: 0x029F0038
Parsed gap data: 0x029F0039
Parsed gap data: 0x12061203
Parsed gap data: 0x12041205
Parsed gap data: 0x00808000
Parsed gap data: 0x0088FFFF
Parsed gap data: 0x00841000
Parsed gap data: 0x0064001D
Parsed gap data: 0x02180000
Parsed gap data: 0x81001C1E
Parsed gap data: 0x00441B1E
Parsed gap data: 0x00840800
Parsed gap data: 0x00640027
Parsed gap data: 0x191E0000
Parsed gap data: 0x00DEFFFC
Parsed gap data: 0x02A08000
Parsed gap data: 0x029C0028
Parsed gap data: 0x16FC0054
Parsed gap data: 0x16FD4348
Parsed gap data: 0x002102FF
Parsed gap data: 0x02FF02FF
Parsed gap data: 0x02FF02FF
Parsed gap data: 0x02FF02FF
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: .string ">>> L2 INVALIDATE : SHOULD NEVER HAPPEN\n"
Parsed gap data: 0x0000004D
Parsed gap data: 0x61636869
Parsed gap data: 0x6E652063
Parsed gap data: 0x6865636B
Parsed gap data: 0x20726563
Parsed gap data: 0x65697665
Parsed gap data: 0x640A0048
Parsed gap data: 0x49443220
Parsed gap data: 0x3D203078
Parsed gap data: 0x25782020
Parsed gap data: 0x20535252
Parsed gap data: 0x31203D20
Parsed gap data: 0x30782578
Parsed gap data: 0x0A00004D
Parsed gap data: 0x61636869
Parsed gap data: 0x6E652063
Parsed gap data: 0x6865636B
Parsed gap data: 0x20776173
Parsed gap data: 0x206E6F74
Parsed gap data: 0x20444D41
Parsed gap data: 0x2F6C6F63
Parsed gap data: 0x6B656420
Parsed gap data: 0x63616368
Parsed gap data: 0x65207265
Parsed gap data: 0x6C617465
Parsed gap data: 0x640A0044
Parsed gap data: 0x4D414572
Parsed gap data: 0x726F7248
Parsed gap data: 0x616E646C
Parsed gap data: 0x65722829
Parsed gap data: 0x3A20416E
Parsed gap data: 0x20657272
Parsed gap data: 0x6F72206F
Parsed gap data: 0x63637572
Parsed gap data: 0x72656420
Parsed gap data: 0x7768696C
Parsed gap data: 0x65207072
Parsed gap data: 0x6F636573
Parsed gap data: 0x73696E67
Parsed gap data: 0x20444D41
Parsed gap data: 0x2E0A0054
Parsed gap data: 0x68652066
Parsed gap data: 0x6F6C6C6F
Parsed gap data: 0x77696E67
Parsed gap data: 0x20657272
Parsed gap data: 0x6F727320
Parsed gap data: 0x68617665
Parsed gap data: 0x20626565
Parsed gap data: 0x6E206465
Parsed gap data: 0x74656374
Parsed gap data: 0x65642061
Parsed gap data: 0x6E642063
Parsed gap data: 0x6C656172
Parsed gap data: 0x6564203A
Parsed gap data: 0x0A000009
Parsed gap data: 0x2D205265
Parsed gap data: 0x71756573
Parsed gap data: 0x74656420
Parsed gap data: 0x61206C6F
Parsed gap data: 0x636B6564
Parsed gap data: 0x20636163
Parsed gap data: 0x68652074
Parsed gap data: 0x61672074
Parsed gap data: 0x68617420
Parsed gap data: 0x77617320
Parsed gap data: 0x616C7265
Parsed gap data: 0x61647920
Parsed gap data: 0x696E2074
Parsed gap data: 0x68652063
Parsed gap data: 0x61636865
Parsed gap data: 0x0A000009
Parsed gap data: 0x2D20444D
Parsed gap data: 0x41206174
Parsed gap data: 0x74656D70
Parsed gap data: 0x74656420
Parsed gap data: 0x746F2061
Parsed gap data: 0x63636573
Parsed gap data: 0x73206E6F
Parsed gap data: 0x726D616C
Parsed gap data: 0x20636163
Parsed gap data: 0x68650A00
Parsed gap data: 0x00000009
Parsed gap data: 0x2D20444D
Parsed gap data: 0x41206D69
Parsed gap data: 0x73736564
Parsed gap data: 0x20696E20
Parsed gap data: 0x64617461
Parsed gap data: 0x20636163
Parsed gap data: 0x68650A00
Parsed gap data: 0x00000009
Parsed gap data: 0x2D20444D
Parsed gap data: 0x41207175
Parsed gap data: 0x65756520
Parsed gap data: 0x6F766572
Parsed gap data: 0x666C6F77
Parsed gap data: 0x65640A00
Parsed gap data: 0x0000004C
Parsed gap data: 0x3120692D
Parsed gap data: 0x63616368
Parsed gap data: 0x65732069
Parsed gap data: 0x6E697469
Parsed gap data: 0x616C697A
Parsed gap data: 0x65640A00
Parsed gap data: 0x0000004C
Parsed gap data: 0x3120642D
Parsed gap data: 0x63616368
Parsed gap data: 0x65732069
Parsed gap data: 0x6E697469
Parsed gap data: 0x616C697A
Parsed gap data: 0x65640A00
Parsed gap data: 0x0000004C
Parsed gap data: 0x32206361
Parsed gap data: 0x63686520
Parsed gap data: 0x696E6974
Parsed gap data: 0x69616C69
Parsed gap data: 0x7A65640A
Parsed gap data: 0x0000004C
Parsed gap data: 0x6F636B65
Parsed gap data: 0x64206361
Parsed gap data: 0x63686520
Parsed gap data: 0x6D616368
Parsed gap data: 0x696E6520
Parsed gap data: 0x63686563
Parsed gap data: 0x6B206861
Parsed gap data: 0x6E646C65
Parsed gap data: 0x7220696E
Parsed gap data: 0x7374616C
Parsed gap data: 0x6C65640A
Parsed gap data: 0x00000000
Parsed gap data: .byte 0x00, 0x00, 0x00
Parsed gap data: 0x2D2D2D2D
Parsed gap data: 0x2D2D2D2D
Parsed gap data: 0x2D2D2D2D
Parsed gap data: 0x2D2D2D2D
Parsed gap data: 0x2D2D2D2D
Parsed gap data: 0x2D2D2D2D
Parsed gap data: 0x2D20436F
Parsed gap data: 0x6E746578
Parsed gap data: 0x74203078
Parsed gap data: 0x25303878
Parsed gap data: 0x202D2D2D
Parsed gap data: 0x2D2D2D2D
Parsed gap data: 0x2D2D2D2D
Parsed gap data: 0x2D2D2D2D
Parsed gap data: 0x2D2D2D2D
Parsed gap data: 0x2D2D2D2D
Parsed gap data: 0x2D2D0A00
Parsed gap data: 0x72252D32
Parsed gap data: 0x6420203D
Parsed gap data: 0x20307825
Parsed gap data: 0x30387820
Parsed gap data: 0x28253134
Parsed gap data: 0x64292020
Parsed gap data: 0x72252D32
Parsed gap data: 0x6420203D
Parsed gap data: 0x20307825
Parsed gap data: 0x30387820
Parsed gap data: 0x28253134
Parsed gap data: 0x64290A00
Parsed gap data: 0x4C522020
Parsed gap data: 0x203D2030
Parsed gap data: 0x78253038
Parsed gap data: 0x78202020
Parsed gap data: 0x20202020
Parsed gap data: 0x20202020
Parsed gap data: 0x20202020
Parsed gap data: 0x20202020
Parsed gap data: 0x43522020
Parsed gap data: 0x203D2030
Parsed gap data: 0x78253038
Parsed gap data: 0x780A0000
Parsed gap data: 0x53525230
Parsed gap data: 0x203D2030
Parsed gap data: 0x78253038
Parsed gap data: 0x78202020
Parsed gap data: 0x20202020
Parsed gap data: 0x20202020
Parsed gap data: 0x20202020
Parsed gap data: 0x20202020
Parsed gap data: 0x53525231
Parsed gap data: 0x203D2030
Parsed gap data: 0x78253038
Parsed gap data: 0x780A0000
Parsed gap data: 0x0A475152
Parsed gap data: 0x732D2D2D
Parsed gap data: 0x2D2D2D2D
Parsed gap data: 0x2D2D2D0A
Parsed gap data: 0x00000000
Parsed gap data: 0x67717225
Parsed gap data: 0x64203D20
Parsed gap data: 0x30782530
Parsed gap data: 0x38782009
Parsed gap data: 0x20677172
Parsed gap data: 0x2564203D
Parsed gap data: 0x20307825
Parsed gap data: 0x3038780A
Parsed gap data: 0x00000000
Parsed gap data: 0x0A0A4650
Parsed gap data: 0x52732D2D
Parsed gap data: 0x2D2D2D2D
Parsed gap data: 0x2D2D2D2D
Parsed gap data: 0x0A000000
Parsed gap data: 0x66722564
Parsed gap data: 0x20093D20
Parsed gap data: 0x25642009
Parsed gap data: 0x20667225
Parsed gap data: 0x6420093D
Parsed gap data: 0x2025640A
Parsed gap data: 0x00000000
Parsed gap data: 0x0A0A5053
Parsed gap data: 0x46732D2D
Parsed gap data: 0x2D2D2D2D
Parsed gap data: 0x2D2D2D2D
Parsed gap data: 0x0A000000
Parsed gap data: 0x70732564
Parsed gap data: 0x20093D20
Parsed gap data: 0x30782578
Parsed gap data: 0x20092070
Parsed gap data: 0x73256420
Parsed gap data: 0x093D2030
Parsed gap data: 0x7825780A
Parsed gap data: 0x00000000
Parsed gap data: 0x0A416464
Parsed gap data: 0x72657373
Parsed gap data: 0x3A202020
Parsed gap data: 0x20202042
Parsed gap data: 0x61636B20
Parsed gap data: 0x43686169
Parsed gap data: 0x6E202020
Parsed gap data: 0x204C5220
Parsed gap data: 0x53617665
Parsed gap data: 0x0A000000
Parsed gap data: 0x30782530
Parsed gap data: 0x38783A20
Parsed gap data: 0x20203078
Parsed gap data: 0x25303878
Parsed gap data: 0x20202020
Parsed gap data: 0x30782530
Parsed gap data: 0x38780A00
Parsed gap data: .string "FPU-unavailable handler installed\n"
Parsed gap data: .byte 0x00
Parsed gap data: .string " in "%s" on line %d.\n"
Parsed gap data: 0x00000A41
Parsed gap data: 0x64647265
Parsed gap data: 0x73733A20
Parsed gap data: 0x20202020
Parsed gap data: 0x20426163
Parsed gap data: 0x6B204368
Parsed gap data: 0x61696E20
Parsed gap data: 0x2020204C
Parsed gap data: 0x52205361
Parsed gap data: 0x76650A00
Parsed gap data: 0x00003078
Parsed gap data: 0x25303878
Parsed gap data: 0x3A202020
Parsed gap data: 0x30782530
Parsed gap data: 0x38782020
Parsed gap data: 0x20203078
Parsed gap data: 0x25303878
Parsed gap data: 0x0A004E6F
Parsed gap data: 0x6E2D7265
Parsed gap data: 0x636F7665
Parsed gap data: 0x7261626C
Parsed gap data: 0x65204578
Parsed gap data: 0x63657074
Parsed gap data: 0x696F6E20
Parsed gap data: 0x25640000
Parsed gap data: 0x0000556E
Parsed gap data: 0x68616E64
Parsed gap data: 0x6C656420
Parsed gap data: 0x45786365
Parsed gap data: 0x7074696F
Parsed gap data: 0x6E202564
Parsed gap data: 0x00000A44
Parsed gap data: 0x53495352
Parsed gap data: 0x203D2030
Parsed gap data: 0x78253038
Parsed gap data: 0x78202020
Parsed gap data: 0x20202020
Parsed gap data: 0x20202020
Parsed gap data: 0x20202020
Parsed gap data: 0x20202020
Parsed gap data: 0x44415220
Parsed gap data: 0x203D2030
Parsed gap data: 0x78253038
Parsed gap data: 0x780A0000
Parsed gap data: 0x00005442
Parsed gap data: 0x203D2030
Parsed gap data: 0x78253031
Parsed gap data: 0x366C6C78
Parsed gap data: 0x0A000A49
Parsed gap data: 0x6E737472
Parsed gap data: 0x75637469
Parsed gap data: 0x6F6E2061
Parsed gap data: 0x74203078
Parsed gap data: 0x25782028
Parsed gap data: 0x72656164
Parsed gap data: 0x2066726F
Parsed gap data: 0x6D205352
Parsed gap data: 0x52302920
Parsed gap data: 0x61747465
Parsed gap data: 0x6D707465
Parsed gap data: 0x6420746F
Parsed gap data: 0x20616363
Parsed gap data: 0x65737320
Parsed gap data: 0x696E7661
Parsed gap data: 0x6C696420
Parsed gap data: 0x61646472
Parsed gap data: 0x65737320
Parsed gap data: 0x30782578
Parsed gap data: 0x20287265
Parsed gap data: 0x61642066
Parsed gap data: 0x726F6D20
Parsed gap data: 0x44415229
Parsed gap data: 0x0A000A41
Parsed gap data: 0x7474656D
Parsed gap data: 0x70746564
Parsed gap data: 0x20746F20
Parsed gap data: 0x66657463
Parsed gap data: 0x6820696E
Parsed gap data: 0x73747275
Parsed gap data: 0x6374696F
Parsed gap data: 0x6E206672
Parsed gap data: 0x6F6D2069
Parsed gap data: 0x6E76616C
Parsed gap data: 0x69642061
Parsed gap data: 0x64647265
Parsed gap data: 0x73732030
Parsed gap data: 0x78257820
Parsed gap data: 0x28726561
Parsed gap data: 0x64206672
Parsed gap data: 0x6F6D2053
Parsed gap data: 0x52523029
Parsed gap data: 0x0A000A49
Parsed gap data: 0x6E737472
Parsed gap data: 0x75637469
Parsed gap data: 0x6F6E2061
Parsed gap data: 0x74203078
Parsed gap data: 0x25782028
Parsed gap data: 0x72656164
Parsed gap data: 0x2066726F
Parsed gap data: 0x6D205352
Parsed gap data: 0x52302920
Parsed gap data: 0x61747465
Parsed gap data: 0x6D707465
Parsed gap data: 0x6420746F
Parsed gap data: 0x20616363
Parsed gap data: 0x65737320
Parsed gap data: 0x756E616C
Parsed gap data: 0x69676E65
Parsed gap data: 0x64206164
Parsed gap data: 0x64726573
Parsed gap data: 0x73203078
Parsed gap data: 0x25782028
Parsed gap data: 0x72656164
Parsed gap data: 0x2066726F
Parsed gap data: 0x6D204441
Parsed gap data: 0x52290A00
Parsed gap data: 0x00000A50
Parsed gap data: 0x726F6772
Parsed gap data: 0x616D2065
Parsed gap data: 0x78636570
Parsed gap data: 0x74696F6E
Parsed gap data: 0x203A2050
Parsed gap data: 0x6F737369
Parsed gap data: 0x626C6520
Parsed gap data: 0x696C6C65
Parsed gap data: 0x67616C20
Parsed gap data: 0x696E7374
Parsed gap data: 0x72756374
Parsed gap data: 0x696F6E2F
Parsed gap data: 0x6F706572
Parsed gap data: 0x6174696F
Parsed gap data: 0x6E206174
Parsed gap data: 0x206F7220
Parsed gap data: 0x61726F75
Parsed gap data: 0x6E642030
Parsed gap data: 0x78257820
Parsed gap data: 0x28726561
Parsed gap data: 0x64206672
Parsed gap data: 0x6F6D2053
Parsed gap data: 0x52523029
Parsed gap data: 0x0A004149
Parsed gap data: 0x20444D41
Parsed gap data: 0x20416464
Parsed gap data: 0x72657373
Parsed gap data: 0x203D2020
Parsed gap data: 0x20307825
Parsed gap data: 0x30347825
Parsed gap data: 0x3034780A
Parsed gap data: 0x00004152
Parsed gap data: 0x414D2044
Parsed gap data: 0x4D412041
Parsed gap data: 0x64647265
Parsed gap data: 0x7373203D
Parsed gap data: 0x20307825
Parsed gap data: 0x30347825
Parsed gap data: 0x3034780A
Parsed gap data: 0x00004449
Parsed gap data: 0x20444D41
Parsed gap data: 0x20416464
Parsed gap data: 0x72657373
Parsed gap data: 0x203D2020
Parsed gap data: 0x20307825
Parsed gap data: 0x3038780A
Parsed gap data: 0x00000A4C
Parsed gap data: 0x61737420
Parsed gap data: 0x696E7465
Parsed gap data: 0x72727570
Parsed gap data: 0x74202825
Parsed gap data: 0x64293A20
Parsed gap data: 0x53525230
Parsed gap data: 0x203D2030
Parsed gap data: 0x78253038
Parsed gap data: 0x78202054
Parsed gap data: 0x42203D20
Parsed gap data: 0x30782530
Parsed gap data: 0x31366C6C
Parsed gap data: 0x780A0000
Parsed gap data: .2byte 0x0000
Parsed gap data: .4byte __OSUnhandledException+0x1CC
Parsed gap data: .4byte __OSUnhandledException+0x1CC
Parsed gap data: .4byte __OSUnhandledException+0x124
Parsed gap data: .4byte __OSUnhandledException+0x13C
Parsed gap data: .4byte __OSUnhandledException+0x1CC
Parsed gap data: .4byte __OSUnhandledException+0x150
Parsed gap data: .4byte __OSUnhandledException+0x168
Parsed gap data: .4byte __OSUnhandledException+0x1CC
Parsed gap data: .4byte __OSUnhandledException+0x1CC
Parsed gap data: .4byte __OSUnhandledException+0x1CC
Parsed gap data: .4byte __OSUnhandledException+0x1CC
Parsed gap data: .4byte __OSUnhandledException+0x1CC
Parsed gap data: .4byte __OSUnhandledException+0x1CC
Parsed gap data: .4byte __OSUnhandledException+0x1CC
Parsed gap data: .4byte __OSUnhandledException+0x1CC
Parsed gap data: .4byte __OSUnhandledException+0x180
Parsed gap data: 0x00000000
Parsed gap data: 0x00000100
Parsed gap data: 0x00000040
Parsed gap data: 0xF8000000
Parsed gap data: 0x00000200
Parsed gap data: 0x00000080
Parsed gap data: 0x00003000
Parsed gap data: 0x00000020
Parsed gap data: 0x03FF8C00
Parsed gap data: 0x04000000
Parsed gap data: 0x00004000
Parsed gap data: 0xFFFFFFFF
Parsed gap data: 0x00000000
Parsed gap data: .4byte fn_80007FE0
Parsed gap data: 0x0000007F
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0xFFFFFFFF
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000008
Parsed gap data: 0x00000008
Parsed gap data: 0x00000008
Parsed gap data: 0x00000008
Parsed gap data: 0x4E6F2072
Parsed gap data: 0x6573706F
Parsed gap data: 0x6E736500
Parsed gap data: 0x4E363420
Parsed gap data: 0x636F6E74
Parsed gap data: 0x726F6C6C
Parsed gap data: 0x65720000
Parsed gap data: 0x4E363420
Parsed gap data: 0x6D696372
Parsed gap data: 0x6F70686F
Parsed gap data: 0x6E650000
Parsed gap data: 0x4E363420
Parsed gap data: 0x6B657962
Parsed gap data: 0x6F617264
Parsed gap data: 0x00000000
Parsed gap data: 0x4E363420
Parsed gap data: 0x6D6F7573
Parsed gap data: 0x65000000
Parsed gap data: 0x47616D65
Parsed gap data: 0x426F7920
Parsed gap data: 0x41647661
Parsed gap data: 0x6E636500
Parsed gap data: 0x5374616E
Parsed gap data: 0x64617264
Parsed gap data: 0x20636F6E
Parsed gap data: 0x74726F6C
Parsed gap data: 0x6C657200
Parsed gap data: 0x57697265
Parsed gap data: 0x6C657373
Parsed gap data: 0x20726563
Parsed gap data: 0x65697665
Parsed gap data: 0x72000000
Parsed gap data: 0x57617665
Parsed gap data: 0x42697264
Parsed gap data: 0x20636F6E
Parsed gap data: 0x74726F6C
Parsed gap data: 0x6C657200
Parsed gap data: 0x4B657962
Parsed gap data: 0x6F617264
Parsed gap data: 0x00000000
Parsed gap data: 0x53746565
Parsed gap data: 0x72696E67
Parsed gap data: 0x00000000
Parsed gap data: 0x00F60200
Parsed gap data: 0x000F1200
Parsed gap data: 0x001E0900
Parsed gap data: 0x002C0600
Parsed gap data: 0x00340500
Parsed gap data: 0x00410400
Parsed gap data: 0x00570300
Parsed gap data: 0x00570300
Parsed gap data: 0x00570300
Parsed gap data: 0x00830200
Parsed gap data: 0x00830200
Parsed gap data: 0x00830200
Parsed gap data: 0x01280200
Parsed gap data: 0x000F1500
Parsed gap data: 0x001D0B00
Parsed gap data: 0x002D0700
Parsed gap data: 0x00340600
Parsed gap data: 0x003F0500
Parsed gap data: 0x004E0400
Parsed gap data: 0x00680300
Parsed gap data: 0x00680300
Parsed gap data: 0x00680300
Parsed gap data: 0x00680300
Parsed gap data: 0x009C0200
Parsed gap data: 0x53495365
Parsed gap data: 0x7453616D
Parsed gap data: 0x706C696E
Parsed gap data: 0x67526174
Parsed gap data: 0x653A2075
Parsed gap data: 0x6E6B6E6F
Parsed gap data: 0x776E2054
Parsed gap data: 0x5620666F
Parsed gap data: 0x726D6174
Parsed gap data: 0x2E205573
Parsed gap data: 0x65206465
Parsed gap data: 0x6661756C
Parsed gap data: 0x742E0000
Parsed gap data: 0x00000000
Parsed gap data: .string "DBExceptionDestination\n"
Parsed gap data: 0x61707020
Parsed gap data: 0x626F6F74
Parsed gap data: 0x65642076
Parsed gap data: 0x6961204A
Parsed gap data: 0x5441470A
Parsed gap data: 0x00000000
Parsed gap data: 0x6C6F6164
Parsed gap data: 0x20667374
Parsed gap data: 0x0A000000
Parsed gap data: 0x61707020
Parsed gap data: 0x626F6F74
Parsed gap data: 0x65642066
Parsed gap data: 0x726F6D20
Parsed gap data: 0x626F6F74
Parsed gap data: 0x726F6D0A
Parsed gap data: 0x00000000
Parsed gap data: 0x626F6F74
Parsed gap data: 0x726F6D0A
Parsed gap data: 0x00000000
Parsed gap data: .4byte fn_8000E240+0x218
Parsed gap data: .4byte fn_8000E240+0xD8
Parsed gap data: .4byte fn_8000E240+0xF0
Parsed gap data: .4byte fn_8000E240+0x108
Parsed gap data: .4byte fn_8000E240+0x138
Parsed gap data: .4byte fn_8000E240+0x1FC
Parsed gap data: .4byte fn_8000E240+0x150
Parsed gap data: .4byte fn_8000E240+0x120
Parsed gap data: .4byte fn_8000E488+0x2B0
Parsed gap data: .4byte fn_8000E488+0x6C
Parsed gap data: .4byte fn_8000E488+0xC8
Parsed gap data: .4byte fn_8000E488+0xEC
Parsed gap data: .4byte fn_8000E488+0x6C
Parsed gap data: .4byte fn_8000E488+0x40
Parsed gap data: .4byte fn_8000E488+0x10C
Parsed gap data: .4byte fn_8000E488+0x170
Parsed gap data: .4byte fn_8000E488+0x19C
Parsed gap data: .4byte fn_8000E488+0x1D0
Parsed gap data: .4byte fn_8000E488+0x1F4
Parsed gap data: .4byte fn_8000E488+0x218
Parsed gap data: .4byte fn_8000E488+0x23C
Parsed gap data: .4byte fn_8000E488+0x260
Parsed gap data: .4byte fn_8000E488+0x288
Parsed gap data: .4byte fn_8000E488+0xFC
Parsed gap data: .4byte fn_8000EFC0+0x50
Parsed gap data: .4byte fn_8000EFC0+0x50
Parsed gap data: .4byte fn_8000EFC0+0x70
Parsed gap data: .4byte fn_8000EFC0+0xB4
Parsed gap data: .4byte fn_8000EFC0+0x100
Parsed gap data: .4byte fn_8000EFC0+0x17C
Parsed gap data: .4byte fn_8000EFC0+0x17C
Parsed gap data: .4byte fn_8000EFC0+0x17C
Parsed gap data: .4byte fn_8000EFC0+0x17C
Parsed gap data: .4byte fn_8000EFC0+0x248
Parsed gap data: .4byte fn_8000EFC0+0x248
Parsed gap data: .4byte fn_8000EFC0+0x50
Parsed gap data: .4byte fn_8000EFC0+0x17C
Parsed gap data: .4byte fn_8000F238+0x98
Parsed gap data: .4byte fn_8000F238+0xA0
Parsed gap data: .4byte fn_8000F238+0x90
Parsed gap data: .4byte fn_8000F238+0x90
Parsed gap data: .4byte fn_8000F238+0x98
Parsed gap data: .4byte fn_8000F238+0x98
Parsed gap data: .4byte fn_8000F238+0x98
Parsed gap data: .4byte fn_8000F238+0x98
Parsed gap data: .4byte fn_8000F238+0x98
Parsed gap data: .4byte fn_8000F238+0xA0
Parsed gap data: .4byte fn_8000F238+0x90
Parsed gap data: .4byte fn_8000F238+0x90
Parsed gap data: .4byte fn_8000F238+0x98
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00023A00
Parsed gap data: 0x00062800
Parsed gap data: 0x00030200
Parsed gap data: 0x00031100
Parsed gap data: 0x00052000
Parsed gap data: 0x00052001
Parsed gap data: 0x00052100
Parsed gap data: 0x00052400
Parsed gap data: 0x00052401
Parsed gap data: 0x00052402
Parsed gap data: 0x000B5A01
Parsed gap data: 0x00056300
Parsed gap data: 0x00020401
Parsed gap data: 0x00020400
Parsed gap data: 0x00040800
Parsed gap data: 0x00100007
Parsed gap data: 0x00000000
Parsed gap data: 0x20204761
Parsed gap data: 0x6D65204E
Parsed gap data: 0x616D6520
Parsed gap data: 0x2E2E2E20
Parsed gap data: 0x25632563
Parsed gap data: 0x25632563
Parsed gap data: 0x0A000000
Parsed gap data: 0x2020436F
Parsed gap data: 0x6D70616E
Parsed gap data: 0x79202E2E
Parsed gap data: 0x2E2E2E20
Parsed gap data: 0x25632563
Parsed gap data: 0x0A000000
Parsed gap data: 0x20204469
Parsed gap data: 0x736B2023
Parsed gap data: 0x202E2E2E
Parsed gap data: 0x2E2E2E20
Parsed gap data: 0x25640A00
Parsed gap data: 0x20204761
Parsed gap data: 0x6D652076
Parsed gap data: 0x6572202E
Parsed gap data: 0x2E2E2E20
Parsed gap data: 0x25640A00
Parsed gap data: 0x20205374
Parsed gap data: 0x7265616D
Parsed gap data: 0x696E6720
Parsed gap data: 0x2E2E2E20
Parsed gap data: 0x25730A00
Parsed gap data: 0x060000F0
Parsed gap data: 0x00180019
Parsed gap data: 0x00030002
Parsed gap data: 0x0C0D0C0D
Parsed gap data: 0x02080207
Parsed gap data: 0x02080207
Parsed gap data: 0x020D01AD
Parsed gap data: 0x404769A2
Parsed gap data: 0x01757A00
Parsed gap data: 0x019C0600
Parsed gap data: 0x00F00018
Parsed gap data: 0x00180004
Parsed gap data: 0x00040C0C
Parsed gap data: 0x0C0C0208
Parsed gap data: 0x02080208
Parsed gap data: 0x0208020E
Parsed gap data: 0x01AD4047
Parsed gap data: 0x69A20175
Parsed gap data: 0x7A00019C
Parsed gap data: 0x0500011F
Parsed gap data: 0x00230024
Parsed gap data: 0x00010000
Parsed gap data: 0x0D0C0B0A
Parsed gap data: 0x026B026A
Parsed gap data: 0x0269026C
Parsed gap data: 0x027101B0
Parsed gap data: 0x404B6AAC
Parsed gap data: 0x017C8500
Parsed gap data: 0x01A40500
Parsed gap data: 0x011F0021
Parsed gap data: 0x00210002
Parsed gap data: 0x00020D0B
Parsed gap data: 0x0D0B026B
Parsed gap data: 0x026D026B
Parsed gap data: 0x026D0270
Parsed gap data: 0x01B0404B
Parsed gap data: 0x6AAC017C
Parsed gap data: 0x850001A4
Parsed gap data: 0x060000F0
Parsed gap data: 0x00180019
Parsed gap data: 0x00030002
Parsed gap data: 0x100F0E0D
Parsed gap data: 0x02060205
Parsed gap data: 0x02040207
Parsed gap data: 0x020D01AD
Parsed gap data: 0x404E70A2
Parsed gap data: 0x01757A00
Parsed gap data: 0x019C0600
Parsed gap data: 0x00F00018
Parsed gap data: 0x00180004
Parsed gap data: 0x0004100E
Parsed gap data: 0x100E0206
Parsed gap data: 0x02080206
Parsed gap data: 0x0208020E
Parsed gap data: 0x01AD404E
Parsed gap data: 0x70A20175
Parsed gap data: 0x7A00019C
Parsed gap data: 0x0C0001E0
Parsed gap data: 0x00300030
Parsed gap data: 0x00060006
Parsed gap data: 0x18181818
Parsed gap data: 0x040E040E
Parsed gap data: 0x040E040E
Parsed gap data: 0x041A01AD
Parsed gap data: 0x404769A2
Parsed gap data: 0x01757A00
Parsed gap data: 0x019C0C00
Parsed gap data: 0x01E0002C
Parsed gap data: 0x002C000A
Parsed gap data: 0x000A1818
Parsed gap data: 0x1818040E
Parsed gap data: 0x040E040E
Parsed gap data: 0x040E041A
Parsed gap data: 0x01AD4047
Parsed gap data: 0x69A8017B
Parsed gap data: 0x7A00019C
Parsed gap data: 0x01F001DC
Parsed gap data: 0x01AE0174
Parsed gap data: 0x012900DB
Parsed gap data: 0x008E0046
Parsed gap data: 0x000C00E2
Parsed gap data: 0x00CB00C0
Parsed gap data: 0x00C400CF
Parsed gap data: 0x00DE00EC
Parsed gap data: 0x00FC0008
Parsed gap data: 0x000F0013
Parsed gap data: 0x0013000F
Parsed gap data: 0x000C0008
Parsed gap data: 0x00010000
Parsed gap data: .4byte fn_8000FC30+0x28
Parsed gap data: .4byte fn_8000FC30+0x30
Parsed gap data: .4byte fn_8000FC30+0x68
Parsed gap data: .4byte fn_8000FC30+0x70
Parsed gap data: .4byte fn_8000FC30+0x38
Parsed gap data: .4byte fn_8000FC30+0x40
Parsed gap data: .4byte fn_8000FC30+0x88
Parsed gap data: .4byte fn_8000FC30+0x88
Parsed gap data: .4byte fn_8000FC30+0x58
Parsed gap data: .4byte fn_8000FC30+0x60
Parsed gap data: .4byte fn_8000FC30+0x88
Parsed gap data: .4byte fn_8000FC30+0x88
Parsed gap data: .4byte fn_8000FC30+0x88
Parsed gap data: .4byte fn_8000FC30+0x88
Parsed gap data: .4byte fn_8000FC30+0x88
Parsed gap data: .4byte fn_8000FC30+0x88
Parsed gap data: .4byte fn_8000FC30+0x78
Parsed gap data: .4byte fn_8000FC30+0x80
Parsed gap data: .4byte fn_8000FC30+0x88
Parsed gap data: .4byte fn_8000FC30+0x88
Parsed gap data: .4byte fn_8000FC30+0x48
Parsed gap data: .4byte fn_8000FC30+0x50
Parsed gap data: 0x2A2A2A2A
Parsed gap data: 0x2A2A2A2A
Parsed gap data: 0x2A2A2A2A
Parsed gap data: 0x2A2A2A2A
Parsed gap data: 0x2A2A2A2A
Parsed gap data: 0x2A2A2A2A
Parsed gap data: 0x2A2A2A2A
Parsed gap data: 0x2A2A2A2A
Parsed gap data: 0x2A2A2A2A
Parsed gap data: 0x2A2A2A0A
Parsed gap data: 0x00000000
Parsed gap data: 0x20212021
Parsed gap data: 0x20212043
Parsed gap data: 0x20412055
Parsed gap data: 0x20542049
Parsed gap data: 0x204F204E
Parsed gap data: 0x20212021
Parsed gap data: 0x20212020
Parsed gap data: 0x20202020
Parsed gap data: 0x20202020
Parsed gap data: 0x2020200A
Parsed gap data: 0x00000000
Parsed gap data: 0x54686973
Parsed gap data: 0x20545620
Parsed gap data: 0x666F726D
Parsed gap data: 0x61742022
Parsed gap data: 0x44454255
Parsed gap data: 0x475F5041
Parsed gap data: 0x4C222069
Parsed gap data: 0x73206F6E
Parsed gap data: 0x6C792066
Parsed gap data: 0x6F72200A
Parsed gap data: 0x00000000
Parsed gap data: 0x74656D70
Parsed gap data: 0x6F726172
Parsed gap data: 0x7920736F
Parsed gap data: 0x6C757469
Parsed gap data: 0x6F6E2075
Parsed gap data: 0x6E74696C
Parsed gap data: 0x2050414C
Parsed gap data: 0x20444143
Parsed gap data: 0x20626F61
Parsed gap data: 0x7264200A
Parsed gap data: 0x00000000
Parsed gap data: 0x69732061
Parsed gap data: 0x7661696C
Parsed gap data: 0x61626C65
Parsed gap data: 0x2E20506C
Parsed gap data: 0x65617365
Parsed gap data: 0x20646F20
Parsed gap data: 0x4E4F5420
Parsed gap data: 0x75736520
Parsed gap data: 0x74686973
Parsed gap data: 0x2020200A
Parsed gap data: 0x00000000
Parsed gap data: 0x6D6F6465
Parsed gap data: 0x20696E20
Parsed gap data: 0x7265616C
Parsed gap data: 0x2067616D
Parsed gap data: 0x65732121
Parsed gap data: 0x21202020
Parsed gap data: 0x20202020
Parsed gap data: 0x20202020
Parsed gap data: 0x20202020
Parsed gap data: 0x2020200A
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x028001E0
Parsed gap data: 0x01E00028
Parsed gap data: 0x00000280
Parsed gap data: 0x01E00000
Parsed gap data: 0x00000001
Parsed gap data: 0x00000606
Parsed gap data: 0x06060606
Parsed gap data: 0x06060606
Parsed gap data: 0x06060606
Parsed gap data: 0x06060606
Parsed gap data: 0x06060606
Parsed gap data: 0x06060000
Parsed gap data: 0x15161500
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x08800000
Parsed gap data: 0x00000000
Parsed gap label: L_8001B6EC:
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Warning: Unrecognized gap line: .rel __files, .L_8001B6EC
Parsed gap data: 0x00000001
Warning: Unrecognized gap line: .rel __files, .L_8001B6EC
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: .4byte fn_800140D4
Parsed gap data: .4byte fn_8001403C
Parsed gap data: .4byte fn_80014034
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x10800000
Parsed gap data: 0x00000000
Parsed gap label: L_8001B734:
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Warning: Unrecognized gap line: .rel __files, .L_8001B734
Parsed gap data: 0x00000001
Warning: Unrecognized gap line: .rel __files, .L_8001B734
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: .4byte fn_800140D4
Parsed gap data: .4byte fn_8001403C
Parsed gap data: .4byte fn_80014034
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x10800000
Parsed gap data: 0x00000000
Parsed gap label: L_8001B77C:
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Warning: Unrecognized gap line: .rel __files, .L_8001B77C
Parsed gap data: 0x00000001
Warning: Unrecognized gap line: .rel __files, .L_8001B77C
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: .4byte fn_800140D4
Parsed gap data: .4byte fn_8001403C
Parsed gap data: .4byte fn_80014034
Parsed gap data: 0x00000000
Parsed gap data: .4byte longlong2str_80013554+0xF8
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x98
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x98
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0xD0
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0xE4
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0x108
Parsed gap data: .4byte longlong2str_80013554+0xF8
Parsed gap data: .4byte long2str_80013834+0xA8
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0x70
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0x70
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0x88
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0x98
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xB4
Parsed gap data: .4byte long2str_80013834+0xA8
Parsed gap data: .4byte parse_format_80013A58+0x3B0
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x39C
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x31C
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x414
Parsed gap data: .4byte parse_format_80013A58+0x31C
Parsed gap data: .4byte parse_format_80013A58+0x3B0
Parsed gap data: .4byte parse_format_80013A58+0x364
Parsed gap data: .4byte parse_format_80013A58+0x39C
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x31C
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x478
Parsed gap data: .4byte parse_format_80013A58+0x31C
Parsed gap data: .4byte parse_format_80013A58+0x3F0
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x44C
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x31C
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x490
Parsed gap data: .4byte parse_format_80013A58+0x31C
Parsed gap data: .4byte parse_format_80013A58+0xC4
Parsed gap data: .4byte parse_format_80013A58+0x100
Parsed gap data: .4byte parse_format_80013A58+0x100
Parsed gap data: .4byte parse_format_80013A58+0xDC
Parsed gap data: .4byte parse_format_80013A58+0x100
Parsed gap data: .4byte parse_format_80013A58+0x100
Parsed gap data: .4byte parse_format_80013A58+0x100
Parsed gap data: .4byte parse_format_80013A58+0x100
Parsed gap data: .4byte parse_format_80013A58+0x100
Parsed gap data: .4byte parse_format_80013A58+0x100
Parsed gap data: .4byte parse_format_80013A58+0x100
Parsed gap data: .4byte parse_format_80013A58+0xB8
Parsed gap data: .4byte parse_format_80013A58+0x100
Parsed gap data: .4byte parse_format_80013A58+0xAC
Parsed gap data: .4byte parse_format_80013A58+0x100
Parsed gap data: .4byte parse_format_80013A58+0x100
Parsed gap data: .4byte parse_format_80013A58+0xE8
Parsed gap data: 0x00000000
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_80015440
Parsed gap data: .4byte fn_80015468
Parsed gap data: .4byte fn_800154B8
Parsed gap data: .4byte fn_800154E8
Parsed gap data: .4byte fn_8001566C
Parsed gap data: .4byte fn_80015748
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_8001598C
Parsed gap data: .4byte fn_80015B74
Parsed gap data: .4byte fn_80015D70
Parsed gap data: .4byte fn_80015F74
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_8001617C
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_800162B4
Parsed gap data: .4byte fn_80016318
Parsed gap data: .4byte fn_8001651C
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_80015418
Parsed gap data: .4byte fn_80015418
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: .4byte fn_8001598C+0x194
Parsed gap data: .4byte fn_8001598C+0x1B4
Parsed gap data: .4byte fn_8001598C+0x18C
Parsed gap data: .4byte fn_8001598C+0x1B4
Parsed gap data: .4byte fn_8001598C+0x19C
Parsed gap data: .4byte fn_8001598C+0x1A4
Parsed gap data: .4byte fn_8001598C+0x1AC
Parsed gap data: .4byte fn_80015B74+0x1A8
Parsed gap data: .4byte fn_80015B74+0x1C8
Parsed gap data: .4byte fn_80015B74+0x1A0
Parsed gap data: .4byte fn_80015B74+0x1C8
Parsed gap data: .4byte fn_80015B74+0x1B0
Parsed gap data: .4byte fn_80015B74+0x1B8
Parsed gap data: .4byte fn_80015B74+0x1C0
Parsed gap data: .byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
Parsed gap data: .byte 0x00, 0x00, 0x00, 0x00
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x01000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000100
Parsed gap data: 0x00000200
Parsed gap data: 0x00000300
Parsed gap data: 0x00000400
Parsed gap data: 0x00000500
Parsed gap data: 0x00000600
Parsed gap data: 0x00000700
Parsed gap data: 0x00000800
Parsed gap data: 0x00000900
Parsed gap data: 0x00000C00
Parsed gap data: 0x00000D00
Parsed gap data: 0x00000F00
Parsed gap data: 0x00001300
Parsed gap data: 0x00001400
Parsed gap data: 0x00001700
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: 0x00000000
Parsed gap data: .string "Can't select EXI2 port!\n"
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_05_8001A680_data.c
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_05_8001A680_data.h
Transpiling D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_06_8001BB60_bss.s
Found obj section: __OSErrorTable at 0x8001BB60
Extracted gap section: __OSErrorTable, 1 lines
Found obj section: lbl_8001BBA0 at 0x8001BBA0
Extracted gap section: lbl_8001BBA0, 1 lines
Found obj section: Scb_8001BBC0 at 0x8001BBC0
Extracted gap section: Scb_8001BBC0, 1 lines
Found obj section: gap_06_8001BC14_bss at 0x8001BC14
Extracted gap section: gap_06_8001BC14_bss, 2 lines
Found obj section: RunQueue_8001BC18 at 0x8001BC18
Extracted gap section: RunQueue_8001BC18, 1 lines
Found obj section: gap_06_8001BD18_bss at 0x8001BD18
Extracted gap section: gap_06_8001BD18_bss, 2 lines
Found obj section: Ecb_8001C600 at 0x8001C600
Extracted gap section: Ecb_8001C600, 1 lines
Found obj section: Packet_8001C6C0 at 0x8001C6C0
Extracted gap section: Packet_8001C6C0, 1 lines
Found obj section: lbl_8001C740 at 0x8001C740
Extracted gap section: lbl_8001C740, 1 lines
Found obj section: TypeTime_8001C7E0 at 0x8001C7E0
Extracted gap section: TypeTime_8001C7E0, 1 lines
Found obj section: lbl_8001C800 at 0x8001C800
Extracted gap section: lbl_8001C800, 1 lines
Found obj section: lbl_8001C8C0 at 0x8001C8C0
Extracted gap section: lbl_8001C8C0, 1 lines
Found obj section: lbl_8001C928 at 0x8001C928
Extracted gap section: lbl_8001C928, 1 lines
Found obj section: lbl_8001C9A0 at 0x8001C9A0
Extracted gap section: lbl_8001C9A0, 1 lines
Found obj section: lbl_8001CA20 at 0x8001CA20
Extracted gap section: lbl_8001CA20, 1 lines
Found obj section: lbl_8001CA78 at 0x8001CA78
Extracted gap section: lbl_8001CA78, 1 lines
Found obj section: lbl_8001CA98 at 0x8001CA98
Extracted gap section: lbl_8001CA98, 1 lines
Found obj section: lbl_8001CAD8 at 0x8001CAD8
Extracted gap section: lbl_8001CAD8, 1 lines
Found obj section: lbl_8001CB08 at 0x8001CB08
Extracted gap section: lbl_8001CB08, 1 lines
Found obj section: lbl_8001CB80 at 0x8001CB80
Extracted gap section: lbl_8001CB80, 1 lines
Found obj section: atexit_funcs_8001CC50 at 0x8001CC50
Extracted gap section: atexit_funcs_8001CC50, 1 lines
Found obj section: __atexit_funcs_8001CD50 at 0x8001CD50
Extracted gap section: __atexit_funcs_8001CD50, 1 lines
Found obj section: lbl_8001CE50 at 0x8001CE50
Extracted gap section: lbl_8001CE50, 1 lines
Found obj section: lbl_8001CE78 at 0x8001CE78
Extracted gap section: lbl_8001CE78, 1 lines
Found obj section: lbl_8001CE80 at 0x8001CE80
Extracted gap section: lbl_8001CE80, 1 lines
Found obj section: lbl_8001E830 at 0x8001E830
Extracted gap section: lbl_8001E830, 1 lines
Found obj section: gTRKInputPendingPtr at 0x8001E844
Extracted gap section: gTRKInputPendingPtr, 1 lines
Found obj section: lbl_8001E848 at 0x8001E848
Extracted gap section: lbl_8001E848, 1 lines
Found obj section: TRK_saved_exceptionID_8001E850 at 0x8001E850
Extracted gap section: TRK_saved_exceptionID_8001E850, 1 lines
Found obj section: gap_06_8001E852_bss at 0x8001E852
Extracted gap section: gap_06_8001E852_bss, 2 lines
Found obj section: gTRKSaveState at 0x8001E854
Extracted gap section: gTRKSaveState, 1 lines
Found obj section: lbl_8001E8E8 at 0x8001E8E8
Extracted gap section: lbl_8001E8E8, 1 lines
Found obj section: gTRKState at 0x8001E8F8
Extracted gap section: gTRKState, 1 lines
Found obj section: gap_06_8001E99C_bss at 0x8001E99C
Extracted gap section: gap_06_8001E99C_bss, 2 lines
Found obj section: gTRKCPUState at 0x8001E9A0
Extracted gap section: gTRKCPUState, 1 lines
Found obj section: lbl_8001EDD0 at 0x8001EDD0
Extracted gap section: lbl_8001EDD0, 1 lines
Found obj section: TRK_mainError_8001EDD8 at 0x8001EDD8
Extracted gap section: TRK_mainError_8001EDD8, 1 lines
Found obj section: gap_06_8001EDDC_bss at 0x8001EDDC
Extracted gap section: gap_06_8001EDDC_bss, 2 lines
Found obj section: lbl_8001EDE0 at 0x8001EDE0
Extracted gap section: lbl_8001EDE0, 1 lines
Parsed .skip 64 bytes
Parsed .skip 32 bytes
Parsed .skip 84 bytes
Parsed .skip 4 bytes
Parsed .skip 256 bytes
Parsed .skip 2280 bytes
Parsed .skip 192 bytes
Parsed .skip 128 bytes
Parsed .skip 160 bytes
Parsed .skip 32 bytes
Parsed .skip 192 bytes
Parsed .skip 104 bytes
Parsed .skip 120 bytes
Parsed .skip 128 bytes
Parsed .skip 88 bytes
Parsed .skip 32 bytes
Parsed .skip 64 bytes
Parsed .skip 48 bytes
Parsed .skip 120 bytes
Parsed .skip 208 bytes
Parsed .skip 256 bytes
Parsed .skip 256 bytes
Parsed .skip 40 bytes
Parsed .skip 8 bytes
Parsed .skip 6576 bytes
Parsed .skip 20 bytes
Parsed .skip 4 bytes
Parsed .skip 8 bytes
Parsed .skip 2 bytes
Parsed .skip 2 bytes
Parsed .skip 148 bytes
Parsed .skip 16 bytes
Parsed .skip 164 bytes
Parsed .skip 4 bytes
Parsed .skip 1072 bytes
Parsed .skip 8 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 24 bytes
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_06_8001BB60_bss.c
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_06_8001BB60_bss.h
Transpiling D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_07_8001EE00_sdata.s
Found obj section: lbl_8001EE00 at 0x8001EE00
Extracted gap section: lbl_8001EE00, 2 lines
Found obj section: __OSArenaLo_8001EE08 at 0x8001EE08
Extracted gap section: __OSArenaLo_8001EE08, 1 lines
Found obj section: gap_07_8001EE0C_sdata at 0x8001EE0C
Extracted gap section: gap_07_8001EE0C_sdata, 2 lines
Found obj section: _32_8001EE10 at 0x8001EE10
Extracted gap section: _32_8001EE10, 1 lines
Found obj section: gap_07_8001EE12_sdata at 0x8001EE12
Extracted gap section: gap_07_8001EE12_sdata, 3 lines
Found obj section: lbl_8001EE18 at 0x8001EE18
Extracted gap section: lbl_8001EE18, 2 lines
Found obj section: lbl_8001EE20 at 0x8001EE20
Extracted gap section: lbl_8001EE20, 2 lines
Found obj section: lbl_8001EE28 at 0x8001EE28
Extracted gap section: lbl_8001EE28, 1 lines
Found obj section: lbl_8001EE2C at 0x8001EE2C
Extracted gap section: lbl_8001EE2C, 1 lines
Found obj section: lbl_8001EE30 at 0x8001EE30
Extracted gap section: lbl_8001EE30, 2 lines
Found obj section: _wstringBase0_8001EE38 at 0x8001EE38
Extracted gap section: _wstringBase0_8001EE38, 1 lines
Found obj section: gap_07_8001EE3A_sdata at 0x8001EE3A
Extracted gap section: gap_07_8001EE3A_sdata, 3 lines
Found obj section: lbl_8001EE40 at 0x8001EE40
Extracted gap section: lbl_8001EE40, 1 lines
Found obj section: lbl_8001EE44 at 0x8001EE44
Extracted gap section: lbl_8001EE44, 1 lines
Found obj section: lbl_8001EE48 at 0x8001EE48
Extracted gap section: lbl_8001EE48, 2 lines
Found obj section: lbl_8001EE50 at 0x8001EE50
Extracted gap section: lbl_8001EE50, 2 lines
Found obj section: lbl_8001EE58 at 0x8001EE58
Extracted gap section: lbl_8001EE58, 1 lines
Parsed gap data: .4byte lbl_8001B6A0
Parsed gap data: 0x00000000
Parsed gap data: 0xFFFFFFFF
Parsed gap data: 0x00000000
Parsed gap data: .string "\n"
Parsed gap data: 0x00000000
Parsed gap data: .2byte 0x0000
Parsed gap data: 0x00000001
Parsed gap data: 0x00000000
Parsed gap data: 0x00000001
Parsed gap data: 0x00000000
Parsed gap data: 0x0A000000
Parsed gap data: .string "OFF"
Parsed gap data: 0x4F4E0000
Parsed gap data: 0x00000000
Parsed gap data: .2byte 0x0000
Parsed gap data: 0x00000000
Parsed gap data: .2byte 0x0000
Parsed gap data: 0x80808080
Parsed gap data: 0xFEFEFEFF
Parsed gap data: .4byte lbl_8001EDE0
Parsed gap data: 0x00000000
Parsed gap data: .4byte lbl_8001F060
Parsed gap data: 0x00000000
Parsed gap data: .byte 0x80
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_07_8001EE00_sdata.c
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_07_8001EE00_sdata.h
Transpiling D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_08_8001EE60_sbss.s
Found obj section: lbl_8001EE60 at 0x8001EE60
Extracted gap section: lbl_8001EE60, 1 lines
Found obj section: lbl_8001EE64 at 0x8001EE64
Extracted gap section: lbl_8001EE64, 1 lines
Found obj section: BootInfo_8001EE68 at 0x8001EE68
Extracted gap section: BootInfo_8001EE68, 1 lines
Found obj section: BI2DebugFlag_8001EE6C at 0x8001EE6C
Extracted gap section: BI2DebugFlag_8001EE6C, 1 lines
Found obj section: BI2DebugFlagHolder_8001EE70 at 0x8001EE70
Extracted gap section: BI2DebugFlagHolder_8001EE70, 1 lines
Found obj section: AreWeInitialized_8001EE74 at 0x8001EE74
Extracted gap section: AreWeInitialized_8001EE74, 1 lines
Found obj section: OSExceptionTable_8001EE78 at 0x8001EE78
Extracted gap section: OSExceptionTable_8001EE78, 1 lines
Found obj section: __OSInIPL at 0x8001EE7C
Extracted gap section: __OSInIPL, 1 lines
Found obj section: __OSStartTime at 0x8001EE80
Extracted gap section: __OSStartTime, 1 lines
Found obj section: AlarmQueue_8001EE88 at 0x8001EE88
Extracted gap section: AlarmQueue_8001EE88, 1 lines
Found obj section: __OSArenaHi_8001EE90 at 0x8001EE90
Extracted gap section: __OSArenaHi_8001EE90, 1 lines
Found obj section: gap_08_8001EE94_sbss at 0x8001EE94
Extracted gap section: gap_08_8001EE94_sbss, 2 lines
Found obj section: InterruptHandlerTable_8001EE98 at 0x8001EE98
Extracted gap section: InterruptHandlerTable_8001EE98, 1 lines
Found obj section: __OSLastInterruptSrr0 at 0x8001EE9C
Extracted gap section: __OSLastInterruptSrr0, 1 lines
Found obj section: __OSLastInterrupt at 0x8001EEA0
Extracted gap section: __OSLastInterrupt, 1 lines
Found obj section: gap_08_8001EEA2_sbss at 0x8001EEA2
Extracted gap section: gap_08_8001EEA2_sbss, 2 lines
Found obj section: __OSLastInterruptTime at 0x8001EEA8
Extracted gap section: __OSLastInterruptTime, 1 lines
Found obj section: lbl_8001EEB0 at 0x8001EEB0
Extracted gap section: lbl_8001EEB0, 1 lines
Found obj section: lbl_8001EEB4 at 0x8001EEB4
Extracted gap section: lbl_8001EEB4, 1 lines
Found obj section: lbl_8001EEB8 at 0x8001EEB8
Extracted gap section: lbl_8001EEB8, 1 lines
Found obj section: ResetFunctionQueue_8001EEC0 at 0x8001EEC0
Extracted gap section: ResetFunctionQueue_8001EEC0, 1 lines
Found obj section: lbl_8001EEC8 at 0x8001EEC8
Extracted gap section: lbl_8001EEC8, 1 lines
Found obj section: lbl_8001EECC at 0x8001EECC
Extracted gap section: lbl_8001EECC, 1 lines
Found obj section: lbl_8001EED0 at 0x8001EED0
Extracted gap section: lbl_8001EED0, 1 lines
Found obj section: lbl_8001EED8 at 0x8001EED8
Extracted gap section: lbl_8001EED8, 1 lines
Found obj section: lbl_8001EEDC at 0x8001EEDC
Extracted gap section: lbl_8001EEDC, 1 lines
Found obj section: RunQueueBits_8001EEE0 at 0x8001EEE0
Extracted gap section: RunQueueBits_8001EEE0, 1 lines
Found obj section: RunQueueHint_8001EEE4 at 0x8001EEE4
Extracted gap section: RunQueueHint_8001EEE4, 1 lines
Found obj section: Reschedule_8001EEE8 at 0x8001EEE8
Extracted gap section: Reschedule_8001EEE8, 1 lines
Found obj section: gap_08_8001EEEC_sbss at 0x8001EEEC
Extracted gap section: gap_08_8001EEEC_sbss, 2 lines
Found obj section: lbl_8001EEF0 at 0x8001EEF0
Extracted gap section: lbl_8001EEF0, 1 lines
Found obj section: lbl_8001EEF4 at 0x8001EEF4
Extracted gap section: lbl_8001EEF4, 1 lines
Found obj section: lbl_8001EEF8 at 0x8001EEF8
Extracted gap section: lbl_8001EEF8, 1 lines
Found obj section: lbl_8001EEFC at 0x8001EEFC
Extracted gap section: lbl_8001EEFC, 1 lines
Found obj section: lbl_8001EF00 at 0x8001EF00
Extracted gap section: lbl_8001EF00, 1 lines
Found obj section: cmdTypeAndStatus_371_8001EF04 at 0x8001EF04
Extracted gap section: cmdTypeAndStatus_371_8001EF04, 1 lines
Found obj section: lbl_8001EF08 at 0x8001EF08
Extracted gap section: lbl_8001EF08, 1 lines
Found obj section: SamplingRate_8001EF10 at 0x8001EF10
Extracted gap section: SamplingRate_8001EF10, 1 lines
Found obj section: gap_08_8001EF14_sbss at 0x8001EF14
Extracted gap section: gap_08_8001EF14_sbss, 2 lines
Found obj section: __DBInterface at 0x8001EF18
Extracted gap section: __DBInterface, 1 lines
Found obj section: DBVerbose at 0x8001EF1C
Extracted gap section: DBVerbose, 1 lines
Found obj section: lbl_8001EF20 at 0x8001EF20
Extracted gap section: lbl_8001EF20, 1 lines
Found obj section: lbl_8001EF24 at 0x8001EF24
Extracted gap section: lbl_8001EF24, 1 lines
Found obj section: lbl_8001EF28 at 0x8001EF28
Extracted gap section: lbl_8001EF28, 1 lines
Found obj section: lbl_8001EF2C at 0x8001EF2C
Extracted gap section: lbl_8001EF2C, 1 lines
Found obj section: lbl_8001EF30 at 0x8001EF30
Extracted gap section: lbl_8001EF30, 1 lines
Found obj section: lbl_8001EF34 at 0x8001EF34
Extracted gap section: lbl_8001EF34, 1 lines
Found obj section: lbl_8001EF38 at 0x8001EF38
Extracted gap section: lbl_8001EF38, 1 lines
Found obj section: lbl_8001EF3C at 0x8001EF3C
Extracted gap section: lbl_8001EF3C, 1 lines
Found obj section: lbl_8001EF40 at 0x8001EF40
Extracted gap section: lbl_8001EF40, 1 lines
Found obj section: lbl_8001EF44 at 0x8001EF44
Extracted gap section: lbl_8001EF44, 1 lines
Found obj section: lbl_8001EF48 at 0x8001EF48
Extracted gap section: lbl_8001EF48, 1 lines
Found obj section: lbl_8001EF50 at 0x8001EF50
Extracted gap section: lbl_8001EF50, 1 lines
Found obj section: lbl_8001EF54 at 0x8001EF54
Extracted gap section: lbl_8001EF54, 1 lines
Found obj section: lbl_8001EF58 at 0x8001EF58
Extracted gap section: lbl_8001EF58, 1 lines
Found obj section: lbl_8001EF5C at 0x8001EF5C
Extracted gap section: lbl_8001EF5C, 1 lines
Found obj section: lbl_8001EF60 at 0x8001EF60
Extracted gap section: lbl_8001EF60, 1 lines
Found obj section: lbl_8001EF64 at 0x8001EF64
Extracted gap section: lbl_8001EF64, 1 lines
Found obj section: lbl_8001EF68 at 0x8001EF68
Extracted gap section: lbl_8001EF68, 1 lines
Found obj section: lbl_8001EF6C at 0x8001EF6C
Extracted gap section: lbl_8001EF6C, 1 lines
Found obj section: lbl_8001EF70 at 0x8001EF70
Extracted gap section: lbl_8001EF70, 1 lines
Found obj section: lbl_8001EF74 at 0x8001EF74
Extracted gap section: lbl_8001EF74, 1 lines
Found obj section: __DVDLongFileNameFlag at 0x8001EF78
Extracted gap section: __DVDLongFileNameFlag, 1 lines
Found obj section: lbl_8001EF7C at 0x8001EF7C
Extracted gap section: lbl_8001EF7C, 1 lines
Found obj section: lbl_8001EF88 at 0x8001EF88
Extracted gap section: lbl_8001EF88, 1 lines
Found obj section: lbl_8001EF8C at 0x8001EF8C
Extracted gap section: lbl_8001EF8C, 1 lines
Found obj section: lbl_8001EF90 at 0x8001EF90
Extracted gap section: lbl_8001EF90, 1 lines
Found obj section: lbl_8001EF94 at 0x8001EF94
Extracted gap section: lbl_8001EF94, 1 lines
Found obj section: lbl_8001EF98 at 0x8001EF98
Extracted gap section: lbl_8001EF98, 1 lines
Found obj section: lbl_8001EF9C at 0x8001EF9C
Extracted gap section: lbl_8001EF9C, 1 lines
Found obj section: lbl_8001EFA0 at 0x8001EFA0
Extracted gap section: lbl_8001EFA0, 1 lines
Found obj section: lbl_8001EFA4 at 0x8001EFA4
Extracted gap section: lbl_8001EFA4, 1 lines
Found obj section: lbl_8001EFA8 at 0x8001EFA8
Extracted gap section: lbl_8001EFA8, 1 lines
Found obj section: lbl_8001EFAC at 0x8001EFAC
Extracted gap section: lbl_8001EFAC, 1 lines
Found obj section: lbl_8001EFB0 at 0x8001EFB0
Extracted gap section: lbl_8001EFB0, 1 lines
Found obj section: lbl_8001EFB4 at 0x8001EFB4
Extracted gap section: lbl_8001EFB4, 1 lines
Found obj section: lbl_8001EFB8 at 0x8001EFB8
Extracted gap section: lbl_8001EFB8, 1 lines
Found obj section: lbl_8001EFBC at 0x8001EFBC
Extracted gap section: lbl_8001EFBC, 1 lines
Found obj section: lbl_8001EFC0 at 0x8001EFC0
Extracted gap section: lbl_8001EFC0, 1 lines
Found obj section: lbl_8001EFC4 at 0x8001EFC4
Extracted gap section: lbl_8001EFC4, 1 lines
Found obj section: lbl_8001EFC8 at 0x8001EFC8
Extracted gap section: lbl_8001EFC8, 1 lines
Found obj section: lbl_8001EFCC at 0x8001EFCC
Extracted gap section: lbl_8001EFCC, 1 lines
Found obj section: lbl_8001EFD0 at 0x8001EFD0
Extracted gap section: lbl_8001EFD0, 1 lines
Found obj section: lbl_8001EFD4 at 0x8001EFD4
Extracted gap section: lbl_8001EFD4, 1 lines
Found obj section: lbl_8001EFD8 at 0x8001EFD8
Extracted gap section: lbl_8001EFD8, 1 lines
Found obj section: lbl_8001EFE0 at 0x8001EFE0
Extracted gap section: lbl_8001EFE0, 1 lines
Found obj section: lbl_8001EFE4 at 0x8001EFE4
Extracted gap section: lbl_8001EFE4, 1 lines
Found obj section: lbl_8001EFE8 at 0x8001EFE8
Extracted gap section: lbl_8001EFE8, 1 lines
Found obj section: lbl_8001EFF0 at 0x8001EFF0
Extracted gap section: lbl_8001EFF0, 1 lines
Found obj section: lbl_8001EFF4 at 0x8001EFF4
Extracted gap section: lbl_8001EFF4, 1 lines
Found obj section: lbl_8001EFF8 at 0x8001EFF8
Extracted gap section: lbl_8001EFF8, 1 lines
Found obj section: lbl_8001EFFC at 0x8001EFFC
Extracted gap section: lbl_8001EFFC, 1 lines
Found obj section: lbl_8001EFFE at 0x8001EFFE
Extracted gap section: lbl_8001EFFE, 1 lines
Found obj section: lbl_8001F000 at 0x8001F000
Extracted gap section: lbl_8001F000, 1 lines
Found obj section: lbl_8001F008 at 0x8001F008
Extracted gap section: lbl_8001F008, 1 lines
Found obj section: lbl_8001F00C at 0x8001F00C
Extracted gap section: lbl_8001F00C, 1 lines
Found obj section: lbl_8001F010 at 0x8001F010
Extracted gap section: lbl_8001F010, 1 lines
Found obj section: lbl_8001F018 at 0x8001F018
Extracted gap section: lbl_8001F018, 1 lines
Found obj section: lbl_8001F01C at 0x8001F01C
Extracted gap section: lbl_8001F01C, 1 lines
Found obj section: lbl_8001F020 at 0x8001F020
Extracted gap section: lbl_8001F020, 1 lines
Found obj section: CurrTvMode_8001F024 at 0x8001F024
Extracted gap section: CurrTvMode_8001F024, 1 lines
Found obj section: lbl_8001F028 at 0x8001F028
Extracted gap section: lbl_8001F028, 1 lines
Found obj section: lbl_8001F02C at 0x8001F02C
Extracted gap section: lbl_8001F02C, 1 lines
Found obj section: __PADSpec at 0x8001F030
Extracted gap section: __PADSpec, 1 lines
Found obj section: gap_08_8001F034_sbss at 0x8001F034
Extracted gap section: gap_08_8001F034_sbss, 2 lines
Found obj section: __global_destructor_chain at 0x8001F038
Extracted gap section: __global_destructor_chain, 1 lines
Found obj section: gap_08_8001F03C_sbss at 0x8001F03C
Extracted gap section: gap_08_8001F03C_sbss, 2 lines
Found obj section: __aborting at 0x8001F040
Extracted gap section: __aborting, 1 lines
Found obj section: atexit_curr_func_8001F044 at 0x8001F044
Extracted gap section: atexit_curr_func_8001F044, 1 lines
Found obj section: __atexit_curr_func_8001F048 at 0x8001F048
Extracted gap section: __atexit_curr_func_8001F048, 1 lines
Found obj section: __stdio_exit at 0x8001F04C
Extracted gap section: __stdio_exit, 1 lines
Found obj section: __console_exit at 0x8001F050
Extracted gap section: __console_exit, 1 lines
Found obj section: gap_08_8001F054_sbss at 0x8001F054
Extracted gap section: gap_08_8001F054_sbss, 2 lines
Found obj section: lbl_8001F058 at 0x8001F058
Extracted gap section: lbl_8001F058, 1 lines
Found obj section: lbl_8001F060 at 0x8001F060
Extracted gap section: lbl_8001F060, 1 lines
Found obj section: lbl_8001F064 at 0x8001F064
Extracted gap section: lbl_8001F064, 1 lines
Found obj section: lbl_8001F068 at 0x8001F068
Extracted gap section: lbl_8001F068, 1 lines
Found obj section: lbl_8001F070 at 0x8001F070
Extracted gap section: lbl_8001F070, 1 lines
Found obj section: lbl_8001F074 at 0x8001F074
Extracted gap section: lbl_8001F074, 1 lines
Found obj section: lbl_8001F078 at 0x8001F078
Extracted gap section: lbl_8001F078, 1 lines
Found obj section: lbl_8001F07C at 0x8001F07C
Extracted gap section: lbl_8001F07C, 1 lines
Found obj section: lbl_8001F080 at 0x8001F080
Extracted gap section: lbl_8001F080, 1 lines
Found obj section: lbl_8001F084 at 0x8001F084
Extracted gap section: lbl_8001F084, 1 lines
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 8 bytes
Parsed .skip 8 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 2 bytes
Parsed .skip 6 bytes
Parsed .skip 8 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 8 bytes
Parsed .skip 8 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 8 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 8 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 8 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 12 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 8 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 8 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 2 bytes
Parsed .skip 2 bytes
Parsed .skip 8 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 8 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 8 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 8 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 4 bytes
Parsed .skip 1 bytes
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_08_8001EE60_sbss.c
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_08_8001EE60_sbss.h
Transpiling D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_09_8001F0A0_sdata2.s
Found obj section: lbl_8001F0A0 at 0x8001F0A0
Extracted gap section: lbl_8001F0A0, 1 lines
Found obj section: lbl_8001F0A8 at 0x8001F0A8
Extracted gap section: lbl_8001F0A8, 1 lines
Found obj section: lbl_8001F0B0 at 0x8001F0B0
Extracted gap section: lbl_8001F0B0, 1 lines
Found obj section: lbl_8001F0B8 at 0x8001F0B8
Extracted gap section: lbl_8001F0B8, 1 lines
Found obj section: lbl_8001F0C0 at 0x8001F0C0
Extracted gap section: lbl_8001F0C0, 1 lines
Found obj section: lbl_8001F0C8 at 0x8001F0C8
Extracted gap section: lbl_8001F0C8, 1 lines
Found obj section: lbl_8001F0D0 at 0x8001F0D0
Extracted gap section: lbl_8001F0D0, 1 lines
Parsed gap data: .double 0 -> 0x00000000 0x00000000
Parsed gap data: .double 1 -> 0x3FF00000 0x00000000
Parsed gap data: .double 4503601774854144 -> 0x43300000 0x80000000
Parsed gap data: .double 0.1 -> 0x3FB99999 0x9999999A
Parsed gap data: .double 10 -> 0x40240000 0x00000000
Parsed gap data: .double 0 -> 0x00000000 0x00000000
Parsed gap data: .double 18014398509481984 -> 0x43500000 0x00000000
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_09_8001F0A0_sdata2.c
Generated: D:\SDK stuff\GC1\PyDol\Color-Test\asm\auto_09_8001F0A0_sdata2.h
