#ifndef __AUTO_01_80005500_TEXT_H__
#define __AUTO_01_80005500_TEXT_H__

#include <stdint.h>

// Function declarations
void main(void);
void PPCMfmsr(void);
void PPCMtmsr(void);
void PPCMfhid0(void);
void PPCMfl2cr(void);
void PPCMtl2cr(void);
void PPCMtdec(void);
void PPCHalt(void);
void PPCMfhid2(void);
void PPCMthid2(void);
void OSGetConsoleType(void);
void ClearArena(void);
void OSInit(void);
void OSExceptionInit(void);
void __OSDBIntegrator(void);
void fn_80005E08(void);
void __OSSetExceptionHandler(void);
void __OSGetExceptionHandler(void);
void OSExceptionVector(void);
void OSDefaultExceptionHandler(void);
void __OSPSInit(void);
void fn_80005F64(void);
void OSInitAlarm(void);
void fn_80005FC4(void);
void InsertAlarm(void);
void fn_80006220(void);
void fn_80006288(void);
void DecrementerExceptionCallback(void);
void DecrementerExceptionHandler(void);
void OSGetArenaHi(void);
void OSGetArenaLo(void);
void OSSetArenaHi(void);
void OSSetArenaLo(void);
void __OSInitAudioSystem(void);
void __OSStopAudioSystem(void);
void DCEnable(void);
void DCInvalidateRange(void);
void DCFlushRange(void);
void fn_8000694C(void);
void DCFlushRangeNoSync(void);
void ICInvalidateRange(void);
void ICFlashInvalidate(void);
void ICEnable(void);
void LCDisable(void);
void L2GlobalInvalidate(void);
void DMAErrorHandler(void);
void __OSCacheInit(void);
void __OSLoadFPUContext(void);
void __OSSaveFPUContext(void);
void OSSetCurrentContext(void);
void fn_80006FC8(void);
void fn_80006FD4(void);
void OSLoadContext(void);
void OSClearContext(void);
void OSDumpContext(void);
void OSSwitchFPUContext(void);
void __OSContextInit(void);
void OSReport(void);
void OSSetErrorHandler(void);
void __OSUnhandledException(void);
void OSDisableInterrupts(void);
void OSEnableInterrupts(void);
void OSRestoreInterrupts(void);
void __OSSetInterruptHandler(void);
void fn_800077C8(void);
void __OSInterruptInit(void);
void fn_80007850(void);
void __OSMaskInterrupts(void);
void __OSUnmaskInterrupts(void);
void fn_80007C38(void);
void ExternalInterruptHandler(void);
void __OSModuleInit(void);
void fn_80007FE0(void);
void MEMIntrruptHandler(void);
void Config24MB(void);
void Config48MB(void);
void RealMode(void);
void __OSInitMemoryProtection(void);
void fn_800082C0(void);
void fn_80008330(void);
void fn_8000835C(void);
void fn_80008370(void);
void __OSReboot(void);
void OSRegisterResetFunction(void);
void Reset(void);
void fn_8000863C(void);
void OSResetSystem(void);
void OSGetResetCode(void);
void __OSResetSWInterruptHandler(void);
void fn_80008A10(void);
void fn_80008A70(void);
void __OSInitSram(void);
void __OSLockSram(void);
void fn_80008D18(void);
void fn_80008D74(void);
void __OSUnlockSram(void);
void fn_800090A0(void);
void __OSSyncSram(void);
void fn_800090D4(void);
void fn_80009158(void);
void fn_80009204(void);
void __OSInitSystemCall(void);
void __OSThreadInit(void);
void OSInitThreadQueue(void);
void OSDisableScheduler(void);
void OSEnableScheduler(void);
void fn_80009440(void);
void fn_800094A8(void);
void fn_800094E4(void);
void SelectThread(void);
void __OSReschedule(void);
void OSCancelThread(void);
void fn_80009A90(void);
void fn_80009B7C(void);
void OSGetTime(void);
void OSGetTick(void);
void __OSGetSystemTime(void);
void __init_user(void);
void __init_cpp(void);
void _ExitProcess(void);
void fn_80009D98(void);
void EXIImm(void);
void fn_8000A0E8(void);
void EXIDma(void);
void EXISync(void);
void fn_8000A47C(void);
void __EXIProbe(void);
void EXISelect(void);
void EXIDeselect(void);
void EXIIntrruptHandler(void);
void TCIntrruptHandler(void);
void EXTIntrruptHandler(void);
void EXIInit(void);
void EXILock(void);
void EXIUnlock(void);
void fn_8000AF00(void);
void fn_8000AF70(void);
void fn_8000AF78(void);
void fn_8000B178(void);
void SIInterruptHandler(void);
void SIInit(void);
void fn_8000B85C(void);
void SISetXY(void);
void fn_8000BAD4(void);
void fn_8000BBA8(void);
void SITransfer(void);
void GetTypeCallback(void);
void SIGetType(void);
void SISetSamplingRate(void);
void fn_8000C2E0(void);
void DBInit(void);
void fn_8000C32C(void);
void __DBExceptionDestination(void);
void __DBIsExceptionMarked(void);
void DBPrintf(void);
void fn_8000C3F0(void);
void fn_8000C430(void);
void fn_8000C724(void);
void fn_8000C7A8(void);
void fn_8000C818(void);
void fn_8000C928(void);
void fn_8000C9A8(void);
void fn_8000CC40(void);
void fn_8000CCD4(void);
void fn_8000CD00(void);
void fn_8000CDA4(void);
void fn_8000CE30(void);
void fn_8000CEBC(void);
void fn_8000CF58(void);
void fn_8000CFF0(void);
void fn_8000D07C(void);
void fn_8000D118(void);
void fn_8000D1D4(void);
void fn_8000D1E8(void);
void fn_8000D200(void);
void fn_8000D244(void);
void fn_8000D27C(void);
void fn_8000D378(void);
void fn_8000D3CC(void);
void fn_8000D44C(void);
void fn_8000D4F4(void);
void fn_8000D590(void);
void fn_8000D5B8(void);
void fn_8000D66C(void);
void fn_8000D900(void);
void fn_8000D968(void);
void fn_8000DA00(void);
void fn_8000DA28(void);
void fn_8000DB80(void);
void fn_8000DC64(void);
void fn_8000DC98(void);
void fn_8000DCD0(void);
void fn_8000DDE4(void);
void fn_8000DE88(void);
void fn_8000DF84(void);
void fn_8000DFC8(void);
void fn_8000E094(void);
void fn_8000E0C4(void);
void fn_8000E134(void);
void fn_8000E15C(void);
void fn_8000E240(void);
void fn_8000E488(void);
void fn_8000E748(void);
void fn_8000ED1C(void);
void fn_8000EDEC(void);
void fn_8000EEC0(void);
void fn_8000EF04(void);
void fn_8000EFB0(void);
void fn_8000EFC0(void);
void fn_8000F230(void);
void fn_8000F238(void);
void fn_8000F31C(void);
void fn_8000F438(void);
void fn_8000F470(void);
void fn_8000F4D8(void);
void fn_8000F578(void);
void fn_8000F5D0(void);
void fn_8000F630(void);
void fn_8000F74C(void);
void fn_8000F7C8(void);
void fn_8000F8A0(void);
void fn_8000FA08(void);
void fn_8000FC30(void);
void fn_8000FCC0(void);
void fn_8000FEB8(void);
void fn_80010330(void);
void fn_80010384(void);
void fn_80010658(void);
void fn_800107F8(void);
void fn_80010F94(void);
void fn_800110B0(void);
void fn_8001111C(void);
void fn_80011198(void);
void fn_80011200(void);
void VIGetTvFormat(void);
void __PADDisableRecalibration(void);
void __va_arg(void);
void __destroy_global_chain(void);
void fn_800114CC(void);
void __save_gpr(void);
void __restore_gpr(void);
void __div2u(void);
void fn_800116AC(void);
void __mod2u(void);
void fn_800118C8(void);
void fn_800118EC(void);
void exit(void);
void fn_80011A1C(void);
void __flush_buffer(void);
void __prep_buffer(void);
void __kill_critical_regions(void);
void fwrite(void);
void wcstombs(void);
void fn_800121EC(void);
void memchr(void);
void fn_8001225C(void);
void fn_80012338(void);
void fn_800123E8(void);
void fn_800124AC(void);
void fn_80012558(void);
void __stdio_atexit(void);
void vprintf(void);
void fn_80012694(void);
void __FileWrite(void);
void __pformatter(void);
void float2str(void);
void fn_80013420(void);
void longlong2str_80013554(void);
void long2str_80013834(void);
void parse_format_80013A58(void);
void strchr(void);
void fn_80013F60(void);
void strlen(void);
void fn_80014034(void);
void fn_8001403C(void);
void fn_800140D4(void);
void fwide(void);
void fn_80014234(void);
void TRKHandleRequestEvent(void);
void TRKHandleSupportEvent(void);
void TRKIdle(void);
void TRKNubMainLoop(void);
void TRKInitializeEventQueue(void);
void fn_80014494(void);
void TRKGetNextEvent(void);
void fn_80014578(void);
void fn_80014658(void);
void TRKDestructEvent(void);
void TRKInitializeNub(void);
void TRKTerminateNub(void);
void TRKNubWelcome(void);
void TRKInitializeEndian(void);
void fn_80014828(void);
void fn_80014850(void);
void TRKInitializeMessageBuffers(void);
void fn_800148D0(void);
void fn_8001496C(void);
void fn_80014998(void);
void fn_80014A00(void);
void fn_80014A40(void);
void fn_80014A70(void);
void fn_80014B14(void);
void fn_80014BA0(void);
void fn_80014BF4(void);
void fn_80014C58(void);
void fn_80014CE0(void);
void fn_80014D48(void);
void fn_80014DC4(void);
void fn_80014DE8(void);
void fn_80014E68(void);
void fn_80014EF8(void);
void fn_80014FA8(void);
void fn_8001501C(void);
void fn_80015098(void);
void TRKGetInput(void);
void fn_800151E4(void);
void TRKInitializeSerialHandler(void);
void fn_80015258(void);
void usr_put_initialize(void);
void TRKInitializeDispatcher(void);
void fn_80015278(void);
void fn_800152FC(void);
void fn_80015394(void);
void fn_800153E4(void);
void fn_80015418(void);
void fn_80015440(void);
void fn_80015468(void);
void fn_800154B8(void);
void fn_800154E8(void);
void fn_8001566C(void);
void fn_80015748(void);
void fn_8001598C(void);
void fn_80015B74(void);
void fn_80015D70(void);
void fn_80015F74(void);
void fn_8001617C(void);
void fn_800162B4(void);
void fn_80016318(void);
void fn_8001651C(void);
void fn_800165A0(void);
void fn_80016878(void);
void fn_80016A1C(void);
void fn_80016A24(void);
void fn_80016A2C(void);
void fn_80016A34(void);
void fn_80016B0C(void);
void fn_80016B44(void);
void fn_80016C08(void);
void fn_80016C10(void);
void fn_80016C18(void);
void fn_80016D50(void);
void fn_80016D8C(void);
void fn_80016EF0(void);
void fn_80016F3C(void);
void fn_80017038(void);
void fn_80017180(void);
void fn_800172F8(void);
void fn_80017474(void);
void fn_8001749C(void);
void fn_80017540(void);
void TRKInterruptHandler(void);
void TRKExceptionHandler(void);
void TRKPostInterruptEvent(void);
void fn_80017888(void);
void TRKTargetInterrupt(void);
void fn_80017A04(void);
void fn_80017A94(void);
void fn_80017B1C(void);
void fn_80017B58(void);
void fn_80017BDC(void);
void fn_80017C4C(void);
void fn_80017CB4(void);
void fn_80017CF8(void);
void fn_80017D40(void);
void fn_80017D50(void);
void fn_80017E40(void);
void fn_80017E7C(void);
void fn_80017E8C(void);
void fn_80017E9C(void);
void fn_80017EC4(void);
void fn_80017F74(void);
void fn_80017FEC(void);
void fn_8001816C(void);
void TRKTargetSetInputPendingPtr(void);
void InitMetroTRK(void);
void EnableMetroTRKInterrupts(void);
void fn_80018298(void);
void fn_800182E0(void);
void fn_80018340(void);
void TRKInitializeTarget(void);
void TRKSaveExtended1Block(void);
void fn_800185DC(void);
void fn_80018794(void);
void TRK_main(void);
void TRKLoadContext(void);
void TRKEXICallBack(void);
void InitMetroTRKCommTable(void);
void TRKUARTInterruptHandler(void);
void TRKInitializeIntDrivenUART(void);
void fn_800189D0(void);
void fn_80018A00(void);
void fn_80018A30(void);
void fn_80018A74(void);
void fn_80018AB8(void);
void fn_80018AE8(void);
void TRK_board_display(void);
void fn_80018B3C(void);
void fn_80018B70(void);
void fn_80018DB4(void);
void fn_80018F4C(void);
void fn_80018F8C(void);
void fn_80018FF8(void);
void fn_80019078(void);
void fn_800190E0(void);
void fn_80019130(void);
void fn_80019170(void);
void fn_800191B0(void);
void EXI2_Init(void);
void EXI2_EnableInterrupts(void);
void EXI2_Poll(void);
void EXI2_ReadN(void);
void EXI2_WriteN(void);
void EXI2_Reserve(void);
void EXI2_Unreserve(void);
void AMC_IsStub(void);
void fn_8001985C(void);
void fn_80019870(void);
void fn_800198AC(void);
void fn_800198D8(void);
void fn_800198F8(void);
void fn_80019920(void);
void fn_80019C44(void);
void fn_80019CD0(void);
void fn_80019D8C(void);
void fn_80019E8C(void);
void fn_80019F8C(void);
void fn_8001A048(void);
void fn_8001A084(void);
void DBInitComm(void);
void DBInitInterrupts(void);
void fn_8001A17C(void);
void DBQueryData(void);
void DBRead(void);
void DBWrite(void);
void DBOpen(void);
void DBClose(void);
void Hu_IsStub(void);

// Data section declarations

#endif // __AUTO_01_80005500_TEXT_H__